# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'GoogleFirebaseAppdistroV1alphaDeviceExecutionArgs',
    'GoogleFirebaseAppdistroV1alphaLoginCredentialFieldHintsArgs',
    'GoogleFirebaseAppdistroV1alphaLoginCredentialArgs',
    'GoogleFirebaseAppdistroV1alphaTestDeviceArgs',
]

@pulumi.input_type
class GoogleFirebaseAppdistroV1alphaDeviceExecutionArgs:
    def __init__(__self__, *,
                 device: pulumi.Input['GoogleFirebaseAppdistroV1alphaTestDeviceArgs']):
        """
        The results of running an automated test on a particular device.
        :param pulumi.Input['GoogleFirebaseAppdistroV1alphaTestDeviceArgs'] device: The device that the test was run on.
        """
        pulumi.set(__self__, "device", device)

    @property
    @pulumi.getter
    def device(self) -> pulumi.Input['GoogleFirebaseAppdistroV1alphaTestDeviceArgs']:
        """
        The device that the test was run on.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: pulumi.Input['GoogleFirebaseAppdistroV1alphaTestDeviceArgs']):
        pulumi.set(self, "device", value)


@pulumi.input_type
class GoogleFirebaseAppdistroV1alphaLoginCredentialFieldHintsArgs:
    def __init__(__self__, *,
                 password_resource_name: pulumi.Input[str],
                 username_resource_name: pulumi.Input[str]):
        """
        Hints to the crawler for identifying input fields
        :param pulumi.Input[str] password_resource_name: The Android resource name of the password UI element. For example, in Java: R.string.foo in xml: @string/foo Only the "foo" part is needed. Reference doc: https://developer.android.com/guide/topics/resources/accessing-resources.html
        :param pulumi.Input[str] username_resource_name: The Android resource name of the username UI element. For example, in Java: R.string.foo in xml: @string/foo Only the "foo" part is needed. Reference doc: https://developer.android.com/guide/topics/resources/accessing-resources.html
        """
        pulumi.set(__self__, "password_resource_name", password_resource_name)
        pulumi.set(__self__, "username_resource_name", username_resource_name)

    @property
    @pulumi.getter(name="passwordResourceName")
    def password_resource_name(self) -> pulumi.Input[str]:
        """
        The Android resource name of the password UI element. For example, in Java: R.string.foo in xml: @string/foo Only the "foo" part is needed. Reference doc: https://developer.android.com/guide/topics/resources/accessing-resources.html
        """
        return pulumi.get(self, "password_resource_name")

    @password_resource_name.setter
    def password_resource_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "password_resource_name", value)

    @property
    @pulumi.getter(name="usernameResourceName")
    def username_resource_name(self) -> pulumi.Input[str]:
        """
        The Android resource name of the username UI element. For example, in Java: R.string.foo in xml: @string/foo Only the "foo" part is needed. Reference doc: https://developer.android.com/guide/topics/resources/accessing-resources.html
        """
        return pulumi.get(self, "username_resource_name")

    @username_resource_name.setter
    def username_resource_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "username_resource_name", value)


@pulumi.input_type
class GoogleFirebaseAppdistroV1alphaLoginCredentialArgs:
    def __init__(__self__, *,
                 field_hints: Optional[pulumi.Input['GoogleFirebaseAppdistroV1alphaLoginCredentialFieldHintsArgs']] = None,
                 google: Optional[pulumi.Input[bool]] = None,
                 password: Optional[pulumi.Input[str]] = None,
                 username: Optional[pulumi.Input[str]] = None):
        """
        Login credential for automated tests
        :param pulumi.Input['GoogleFirebaseAppdistroV1alphaLoginCredentialFieldHintsArgs'] field_hints: Optional. Hints to the crawler for identifying input fields
        :param pulumi.Input[bool] google: Optional. Are these credentials for Google?
        :param pulumi.Input[str] password: Optional. Password for automated tests
        :param pulumi.Input[str] username: Optional. Username for automated tests
        """
        if field_hints is not None:
            pulumi.set(__self__, "field_hints", field_hints)
        if google is not None:
            pulumi.set(__self__, "google", google)
        if password is not None:
            pulumi.set(__self__, "password", password)
        if username is not None:
            pulumi.set(__self__, "username", username)

    @property
    @pulumi.getter(name="fieldHints")
    def field_hints(self) -> Optional[pulumi.Input['GoogleFirebaseAppdistroV1alphaLoginCredentialFieldHintsArgs']]:
        """
        Optional. Hints to the crawler for identifying input fields
        """
        return pulumi.get(self, "field_hints")

    @field_hints.setter
    def field_hints(self, value: Optional[pulumi.Input['GoogleFirebaseAppdistroV1alphaLoginCredentialFieldHintsArgs']]):
        pulumi.set(self, "field_hints", value)

    @property
    @pulumi.getter
    def google(self) -> Optional[pulumi.Input[bool]]:
        """
        Optional. Are these credentials for Google?
        """
        return pulumi.get(self, "google")

    @google.setter
    def google(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "google", value)

    @property
    @pulumi.getter
    def password(self) -> Optional[pulumi.Input[str]]:
        """
        Optional. Password for automated tests
        """
        return pulumi.get(self, "password")

    @password.setter
    def password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "password", value)

    @property
    @pulumi.getter
    def username(self) -> Optional[pulumi.Input[str]]:
        """
        Optional. Username for automated tests
        """
        return pulumi.get(self, "username")

    @username.setter
    def username(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "username", value)


@pulumi.input_type
class GoogleFirebaseAppdistroV1alphaTestDeviceArgs:
    def __init__(__self__, *,
                 model: pulumi.Input[str],
                 version: pulumi.Input[str],
                 locale: Optional[pulumi.Input[str]] = None,
                 orientation: Optional[pulumi.Input[str]] = None):
        """
        A device on which automated tests can be run.
        :param pulumi.Input[str] model: The device model.
        :param pulumi.Input[str] version: The version of the device (API level on Android).
        :param pulumi.Input[str] locale: Optional. The locale of the device (e.g. "en_US" for US English) during the test.
        :param pulumi.Input[str] orientation: Optional. The orientation of the device during the test.
        """
        pulumi.set(__self__, "model", model)
        pulumi.set(__self__, "version", version)
        if locale is not None:
            pulumi.set(__self__, "locale", locale)
        if orientation is not None:
            pulumi.set(__self__, "orientation", orientation)

    @property
    @pulumi.getter
    def model(self) -> pulumi.Input[str]:
        """
        The device model.
        """
        return pulumi.get(self, "model")

    @model.setter
    def model(self, value: pulumi.Input[str]):
        pulumi.set(self, "model", value)

    @property
    @pulumi.getter
    def version(self) -> pulumi.Input[str]:
        """
        The version of the device (API level on Android).
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: pulumi.Input[str]):
        pulumi.set(self, "version", value)

    @property
    @pulumi.getter
    def locale(self) -> Optional[pulumi.Input[str]]:
        """
        Optional. The locale of the device (e.g. "en_US" for US English) during the test.
        """
        return pulumi.get(self, "locale")

    @locale.setter
    def locale(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "locale", value)

    @property
    @pulumi.getter
    def orientation(self) -> Optional[pulumi.Input[str]]:
        """
        Optional. The orientation of the device during the test.
        """
        return pulumi.get(self, "orientation")

    @orientation.setter
    def orientation(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "orientation", value)


