# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs

__all__ = [
    'GetSecurityGatewayResult',
    'AwaitableGetSecurityGatewayResult',
    'get_security_gateway',
    'get_security_gateway_output',
]

@pulumi.output_type
class GetSecurityGatewayResult:
    def __init__(__self__, create_time=None, display_name=None, name=None, region_configs=None, state=None, update_time=None):
        if create_time and not isinstance(create_time, str):
            raise TypeError("Expected argument 'create_time' to be a str")
        pulumi.set(__self__, "create_time", create_time)
        if display_name and not isinstance(display_name, str):
            raise TypeError("Expected argument 'display_name' to be a str")
        pulumi.set(__self__, "display_name", display_name)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if region_configs and not isinstance(region_configs, list):
            raise TypeError("Expected argument 'region_configs' to be a list")
        pulumi.set(__self__, "region_configs", region_configs)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)
        if update_time and not isinstance(update_time, str):
            raise TypeError("Expected argument 'update_time' to be a str")
        pulumi.set(__self__, "update_time", update_time)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        """
        Timestamp when the resource was created.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> str:
        """
        Optional. An arbitrary user-provided name for the SecurityGateway. Cannot exceed 64 characters.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Identifier. Name of the resource.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="regionConfigs")
    def region_configs(self) -> Sequence['outputs.GoogleCloudBeyondcorpSecuritygatewaysV1alphaRegionConfigResponse']:
        """
        Optional. List of regions where the egress connectivity is required.
        """
        return pulumi.get(self, "region_configs")

    @property
    @pulumi.getter
    def state(self) -> str:
        """
        The operational state of the SecurityGateway.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> str:
        """
        Timestamp when the resource was last modified.
        """
        return pulumi.get(self, "update_time")


class AwaitableGetSecurityGatewayResult(GetSecurityGatewayResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSecurityGatewayResult(
            create_time=self.create_time,
            display_name=self.display_name,
            name=self.name,
            region_configs=self.region_configs,
            state=self.state,
            update_time=self.update_time)


def get_security_gateway(location: Optional[str] = None,
                         project: Optional[str] = None,
                         security_gateway_id: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSecurityGatewayResult:
    """
    Gets details of a single SecurityGateway.
    """
    __args__ = dict()
    __args__['location'] = location
    __args__['project'] = project
    __args__['securityGatewayId'] = security_gateway_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('google-native:beyondcorp/v1alpha:getSecurityGateway', __args__, opts=opts, typ=GetSecurityGatewayResult).value

    return AwaitableGetSecurityGatewayResult(
        create_time=pulumi.get(__ret__, 'create_time'),
        display_name=pulumi.get(__ret__, 'display_name'),
        name=pulumi.get(__ret__, 'name'),
        region_configs=pulumi.get(__ret__, 'region_configs'),
        state=pulumi.get(__ret__, 'state'),
        update_time=pulumi.get(__ret__, 'update_time'))


@_utilities.lift_output_func(get_security_gateway)
def get_security_gateway_output(location: Optional[pulumi.Input[str]] = None,
                                project: Optional[pulumi.Input[Optional[str]]] = None,
                                security_gateway_id: Optional[pulumi.Input[str]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSecurityGatewayResult]:
    """
    Gets details of a single SecurityGateway.
    """
    ...
