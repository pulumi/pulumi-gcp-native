# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['ProviderArgs', 'Provider']

@pulumi.input_type
class ProviderArgs:
    def __init__(__self__, *,
                 append_user_agent: Optional[pulumi.Input[str]] = None,
                 disable_partner_number: Optional[pulumi.Input[bool]] = None,
                 partner_number: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Provider resource.
        :param pulumi.Input[str] append_user_agent: Additional user-agent string to append to the default one (<prod_name>/<ver>).
        :param pulumi.Input[bool] disable_partner_number: This will disable the Pulumi Partner Number which is used if a custom `partnerNumber` isn't specified.
        :param pulumi.Input[str] partner_number: A Google Partner Number to facilitate partner resource usage attribution.
        """
        if append_user_agent is None:
            append_user_agent = _utilities.get_env('GOOGLE_APPEND_USER_AGENT')
        if append_user_agent is not None:
            pulumi.set(__self__, "append_user_agent", append_user_agent)
        if disable_partner_number is None:
            disable_partner_number = _utilities.get_env_bool('GOOGLE_DISABLE_PARTNER_NUMBER')
        if disable_partner_number is not None:
            pulumi.set(__self__, "disable_partner_number", disable_partner_number)
        if partner_number is None:
            partner_number = _utilities.get_env('GOOGLE_PARTNER_NUMBER')
        if partner_number is not None:
            pulumi.set(__self__, "partner_number", partner_number)

    @property
    @pulumi.getter(name="appendUserAgent")
    def append_user_agent(self) -> Optional[pulumi.Input[str]]:
        """
        Additional user-agent string to append to the default one (<prod_name>/<ver>).
        """
        return pulumi.get(self, "append_user_agent")

    @append_user_agent.setter
    def append_user_agent(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "append_user_agent", value)

    @property
    @pulumi.getter(name="disablePartnerNumber")
    def disable_partner_number(self) -> Optional[pulumi.Input[bool]]:
        """
        This will disable the Pulumi Partner Number which is used if a custom `partnerNumber` isn't specified.
        """
        return pulumi.get(self, "disable_partner_number")

    @disable_partner_number.setter
    def disable_partner_number(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "disable_partner_number", value)

    @property
    @pulumi.getter(name="partnerNumber")
    def partner_number(self) -> Optional[pulumi.Input[str]]:
        """
        A Google Partner Number to facilitate partner resource usage attribution.
        """
        return pulumi.get(self, "partner_number")

    @partner_number.setter
    def partner_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "partner_number", value)


class Provider(pulumi.ProviderResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 append_user_agent: Optional[pulumi.Input[str]] = None,
                 disable_partner_number: Optional[pulumi.Input[bool]] = None,
                 partner_number: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        The provider type for the Google Cloud package.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] append_user_agent: Additional user-agent string to append to the default one (<prod_name>/<ver>).
        :param pulumi.Input[bool] disable_partner_number: This will disable the Pulumi Partner Number which is used if a custom `partnerNumber` isn't specified.
        :param pulumi.Input[str] partner_number: A Google Partner Number to facilitate partner resource usage attribution.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[ProviderArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        The provider type for the Google Cloud package.

        :param str resource_name: The name of the resource.
        :param ProviderArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ProviderArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 append_user_agent: Optional[pulumi.Input[str]] = None,
                 disable_partner_number: Optional[pulumi.Input[bool]] = None,
                 partner_number: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ProviderArgs.__new__(ProviderArgs)

            if append_user_agent is None:
                append_user_agent = _utilities.get_env('GOOGLE_APPEND_USER_AGENT')
            __props__.__dict__["append_user_agent"] = append_user_agent
            if disable_partner_number is None:
                disable_partner_number = _utilities.get_env_bool('GOOGLE_DISABLE_PARTNER_NUMBER')
            __props__.__dict__["disable_partner_number"] = pulumi.Output.from_input(disable_partner_number).apply(pulumi.runtime.to_json) if disable_partner_number is not None else None
            if partner_number is None:
                partner_number = _utilities.get_env('GOOGLE_PARTNER_NUMBER')
            __props__.__dict__["partner_number"] = partner_number
        super(Provider, __self__).__init__(
            'google-native',
            resource_name,
            __props__,
            opts)

