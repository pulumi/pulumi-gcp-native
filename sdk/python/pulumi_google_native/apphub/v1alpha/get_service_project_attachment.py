# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'GetServiceProjectAttachmentResult',
    'AwaitableGetServiceProjectAttachmentResult',
    'get_service_project_attachment',
    'get_service_project_attachment_output',
]

@pulumi.output_type
class GetServiceProjectAttachmentResult:
    def __init__(__self__, create_time=None, name=None, service_project=None, state=None, uid=None):
        if create_time and not isinstance(create_time, str):
            raise TypeError("Expected argument 'create_time' to be a str")
        pulumi.set(__self__, "create_time", create_time)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if service_project and not isinstance(service_project, str):
            raise TypeError("Expected argument 'service_project' to be a str")
        pulumi.set(__self__, "service_project", service_project)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)
        if uid and not isinstance(uid, str):
            raise TypeError("Expected argument 'uid' to be a str")
        pulumi.set(__self__, "uid", uid)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        """
        Create time.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Identifier. The resource name of a ServiceProjectAttachment. Format: "projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}."
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="serviceProject")
    def service_project(self) -> str:
        """
        Immutable. Service project name in the format: "projects/abc" or "projects/123". As input, project name with either project id or number are accepted. As output, this field will contain project number.
        """
        return pulumi.get(self, "service_project")

    @property
    @pulumi.getter
    def state(self) -> str:
        """
        ServiceProjectAttachment state.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter
    def uid(self) -> str:
        """
        A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
        """
        return pulumi.get(self, "uid")


class AwaitableGetServiceProjectAttachmentResult(GetServiceProjectAttachmentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetServiceProjectAttachmentResult(
            create_time=self.create_time,
            name=self.name,
            service_project=self.service_project,
            state=self.state,
            uid=self.uid)


def get_service_project_attachment(location: Optional[str] = None,
                                   project: Optional[str] = None,
                                   service_project_attachment_id: Optional[str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetServiceProjectAttachmentResult:
    """
    Gets a service project attachment.
    """
    __args__ = dict()
    __args__['location'] = location
    __args__['project'] = project
    __args__['serviceProjectAttachmentId'] = service_project_attachment_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('google-native:apphub/v1alpha:getServiceProjectAttachment', __args__, opts=opts, typ=GetServiceProjectAttachmentResult).value

    return AwaitableGetServiceProjectAttachmentResult(
        create_time=pulumi.get(__ret__, 'create_time'),
        name=pulumi.get(__ret__, 'name'),
        service_project=pulumi.get(__ret__, 'service_project'),
        state=pulumi.get(__ret__, 'state'),
        uid=pulumi.get(__ret__, 'uid'))


@_utilities.lift_output_func(get_service_project_attachment)
def get_service_project_attachment_output(location: Optional[pulumi.Input[str]] = None,
                                          project: Optional[pulumi.Input[Optional[str]]] = None,
                                          service_project_attachment_id: Optional[pulumi.Input[str]] = None,
                                          opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetServiceProjectAttachmentResult]:
    """
    Gets a service project attachment.
    """
    ...
