# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from ... import _utilities, _tables
from ._inputs import *

__all__ = ['Device']


class Device(pulumi.CustomResource):
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 android_specific_attributes: Optional[pulumi.Input[pulumi.InputType['GoogleAppsCloudidentityDevicesV1AndroidAttributesArgs']]] = None,
                 asset_tag: Optional[pulumi.Input[str]] = None,
                 baseband_version: Optional[pulumi.Input[str]] = None,
                 bootloader_version: Optional[pulumi.Input[str]] = None,
                 brand: Optional[pulumi.Input[str]] = None,
                 build_number: Optional[pulumi.Input[str]] = None,
                 compromised_state: Optional[pulumi.Input[str]] = None,
                 create_time: Optional[pulumi.Input[str]] = None,
                 device_type: Optional[pulumi.Input[str]] = None,
                 devices_id: Optional[pulumi.Input[str]] = None,
                 enabled_developer_options: Optional[pulumi.Input[bool]] = None,
                 enabled_usb_debugging: Optional[pulumi.Input[bool]] = None,
                 encryption_state: Optional[pulumi.Input[str]] = None,
                 imei: Optional[pulumi.Input[str]] = None,
                 kernel_version: Optional[pulumi.Input[str]] = None,
                 last_sync_time: Optional[pulumi.Input[str]] = None,
                 management_state: Optional[pulumi.Input[str]] = None,
                 manufacturer: Optional[pulumi.Input[str]] = None,
                 meid: Optional[pulumi.Input[str]] = None,
                 model: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 network_operator: Optional[pulumi.Input[str]] = None,
                 os_version: Optional[pulumi.Input[str]] = None,
                 other_accounts: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 owner_type: Optional[pulumi.Input[str]] = None,
                 release_version: Optional[pulumi.Input[str]] = None,
                 security_patch_time: Optional[pulumi.Input[str]] = None,
                 serial_number: Optional[pulumi.Input[str]] = None,
                 wifi_mac_addresses: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        Creates a device. Only company-owned device may be created. **Note**: This method is available only to customers who have one of the following SKUs: Enterprise Standard, Enterprise Plus, Enterprise for Education, and Cloud Identity Premium

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['GoogleAppsCloudidentityDevicesV1AndroidAttributesArgs']] android_specific_attributes: Output only. Attributes specific to Android devices.
        :param pulumi.Input[str] asset_tag: Asset tag of the device.
        :param pulumi.Input[str] baseband_version: Output only. Baseband version of the device.
        :param pulumi.Input[str] bootloader_version: Output only. Device bootloader version. Example: 0.6.7.
        :param pulumi.Input[str] brand: Output only. Device brand. Example: Samsung.
        :param pulumi.Input[str] build_number: Output only. Build number of the device.
        :param pulumi.Input[str] compromised_state: Output only. Represents whether the Device is compromised.
        :param pulumi.Input[str] create_time: Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.
        :param pulumi.Input[str] device_type: Output only. Type of device.
        :param pulumi.Input[bool] enabled_developer_options: Output only. Whether developer options is enabled on device.
        :param pulumi.Input[bool] enabled_usb_debugging: Output only. Whether USB debugging is enabled on device.
        :param pulumi.Input[str] encryption_state: Output only. Device encryption state.
        :param pulumi.Input[str] imei: Output only. IMEI number of device if GSM device; empty otherwise.
        :param pulumi.Input[str] kernel_version: Output only. Kernel version of the device.
        :param pulumi.Input[str] last_sync_time: Most recent time when device synced with this service.
        :param pulumi.Input[str] management_state: Output only. Management state of the device
        :param pulumi.Input[str] manufacturer: Output only. Device manufacturer. Example: Motorola.
        :param pulumi.Input[str] meid: Output only. MEID number of device if CDMA device; empty otherwise.
        :param pulumi.Input[str] model: Output only. Model name of device. Example: Pixel 3.
        :param pulumi.Input[str] name: Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device.
        :param pulumi.Input[str] network_operator: Output only. Mobile or network operator of device, if available.
        :param pulumi.Input[str] os_version: Output only. OS version of the device. Example: Android 8.1.0.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] other_accounts: Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: "com.example", "xyz.com".
        :param pulumi.Input[str] owner_type: Output only. Whether the device is owned by the company or an individual
        :param pulumi.Input[str] release_version: Output only. OS release version. Example: 6.0.
        :param pulumi.Input[str] security_patch_time: Output only. OS security patch update time on device.
        :param pulumi.Input[str] serial_number: Serial Number of device. Example: HT82V1A01076.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] wifi_mac_addresses: WiFi MAC addresses of device.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['android_specific_attributes'] = android_specific_attributes
            __props__['asset_tag'] = asset_tag
            __props__['baseband_version'] = baseband_version
            __props__['bootloader_version'] = bootloader_version
            __props__['brand'] = brand
            __props__['build_number'] = build_number
            __props__['compromised_state'] = compromised_state
            __props__['create_time'] = create_time
            __props__['device_type'] = device_type
            if devices_id is None and not opts.urn:
                raise TypeError("Missing required property 'devices_id'")
            __props__['devices_id'] = devices_id
            __props__['enabled_developer_options'] = enabled_developer_options
            __props__['enabled_usb_debugging'] = enabled_usb_debugging
            __props__['encryption_state'] = encryption_state
            __props__['imei'] = imei
            __props__['kernel_version'] = kernel_version
            __props__['last_sync_time'] = last_sync_time
            __props__['management_state'] = management_state
            __props__['manufacturer'] = manufacturer
            __props__['meid'] = meid
            __props__['model'] = model
            __props__['name'] = name
            __props__['network_operator'] = network_operator
            __props__['os_version'] = os_version
            __props__['other_accounts'] = other_accounts
            __props__['owner_type'] = owner_type
            __props__['release_version'] = release_version
            __props__['security_patch_time'] = security_patch_time
            __props__['serial_number'] = serial_number
            __props__['wifi_mac_addresses'] = wifi_mac_addresses
        super(Device, __self__).__init__(
            'google-cloud:cloudidentity/v1:Device',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'Device':
        """
        Get an existing Device resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        return Device(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

