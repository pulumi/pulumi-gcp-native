// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Create a job.
type NamespaceJob struct {
	pulumi.CustomResourceState

	// Optional. APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources +optional
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Optional. Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Optional. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata +optional
	Metadata ObjectMetaResponseOutput `pulumi:"metadata"`
	// Optional. Specification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status +optional
	Spec JobSpecResponseOutput `pulumi:"spec"`
	// Optional. Current status of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status +optional
	Status JobStatusResponseOutput `pulumi:"status"`
}

// NewNamespaceJob registers a new resource with the given unique name, arguments, and options.
func NewNamespaceJob(ctx *pulumi.Context,
	name string, args *NamespaceJobArgs, opts ...pulumi.ResourceOption) (*NamespaceJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.JobsId == nil {
		return nil, errors.New("invalid value for required argument 'JobsId'")
	}
	if args.NamespacesId == nil {
		return nil, errors.New("invalid value for required argument 'NamespacesId'")
	}
	var resource NamespaceJob
	err := ctx.RegisterResource("gcp-native:run/v1alpha1:NamespaceJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamespaceJob gets an existing NamespaceJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespaceJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamespaceJobState, opts ...pulumi.ResourceOption) (*NamespaceJob, error) {
	var resource NamespaceJob
	err := ctx.ReadResource("gcp-native:run/v1alpha1:NamespaceJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NamespaceJob resources.
type namespaceJobState struct {
	// Optional. APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources +optional
	ApiVersion *string `pulumi:"apiVersion"`
	// Optional. Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional
	Kind *string `pulumi:"kind"`
	// Optional. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata +optional
	Metadata *ObjectMetaResponse `pulumi:"metadata"`
	// Optional. Specification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status +optional
	Spec *JobSpecResponse `pulumi:"spec"`
	// Optional. Current status of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status +optional
	Status *JobStatusResponse `pulumi:"status"`
}

type NamespaceJobState struct {
	// Optional. APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources +optional
	ApiVersion pulumi.StringPtrInput
	// Optional. Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional
	Kind pulumi.StringPtrInput
	// Optional. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata +optional
	Metadata ObjectMetaResponsePtrInput
	// Optional. Specification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status +optional
	Spec JobSpecResponsePtrInput
	// Optional. Current status of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status +optional
	Status JobStatusResponsePtrInput
}

func (NamespaceJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceJobState)(nil)).Elem()
}

type namespaceJobArgs struct {
	// Optional. APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources +optional
	ApiVersion *string `pulumi:"apiVersion"`
	JobsId     string  `pulumi:"jobsId"`
	// Optional. Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional
	Kind *string `pulumi:"kind"`
	// Optional. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata +optional
	Metadata     *ObjectMeta `pulumi:"metadata"`
	NamespacesId string      `pulumi:"namespacesId"`
	// Optional. Specification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status +optional
	Spec *JobSpec `pulumi:"spec"`
	// Optional. Current status of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status +optional
	Status *JobStatus `pulumi:"status"`
}

// The set of arguments for constructing a NamespaceJob resource.
type NamespaceJobArgs struct {
	// Optional. APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources +optional
	ApiVersion pulumi.StringPtrInput
	JobsId     pulumi.StringInput
	// Optional. Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional
	Kind pulumi.StringPtrInput
	// Optional. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata +optional
	Metadata     ObjectMetaPtrInput
	NamespacesId pulumi.StringInput
	// Optional. Specification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status +optional
	Spec JobSpecPtrInput
	// Optional. Current status of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status +optional
	Status JobStatusPtrInput
}

func (NamespaceJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceJobArgs)(nil)).Elem()
}

type NamespaceJobInput interface {
	pulumi.Input

	ToNamespaceJobOutput() NamespaceJobOutput
	ToNamespaceJobOutputWithContext(ctx context.Context) NamespaceJobOutput
}

func (*NamespaceJob) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceJob)(nil))
}

func (i *NamespaceJob) ToNamespaceJobOutput() NamespaceJobOutput {
	return i.ToNamespaceJobOutputWithContext(context.Background())
}

func (i *NamespaceJob) ToNamespaceJobOutputWithContext(ctx context.Context) NamespaceJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceJobOutput)
}

type NamespaceJobOutput struct {
	*pulumi.OutputState
}

func (NamespaceJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceJob)(nil))
}

func (o NamespaceJobOutput) ToNamespaceJobOutput() NamespaceJobOutput {
	return o
}

func (o NamespaceJobOutput) ToNamespaceJobOutputWithContext(ctx context.Context) NamespaceJobOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(NamespaceJobOutput{})
}
