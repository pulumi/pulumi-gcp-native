// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v4

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Report events issued when end user interacts with customer's application that uses Cloud Talent Solution. You may inspect the created events in [self service tools](https://console.cloud.google.com/talent-solution/overview). [Learn more](https://cloud.google.com/talent-solution/docs/management-tools) about self service tools.
type TenantClientEvent struct {
	pulumi.CustomResourceState
}

// NewTenantClientEvent registers a new resource with the given unique name, arguments, and options.
func NewTenantClientEvent(ctx *pulumi.Context,
	name string, args *TenantClientEventArgs, opts ...pulumi.ResourceOption) (*TenantClientEvent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	if args.TenantsId == nil {
		return nil, errors.New("invalid value for required argument 'TenantsId'")
	}
	var resource TenantClientEvent
	err := ctx.RegisterResource("gcp-native:jobs/v4:TenantClientEvent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTenantClientEvent gets an existing TenantClientEvent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTenantClientEvent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TenantClientEventState, opts ...pulumi.ResourceOption) (*TenantClientEvent, error) {
	var resource TenantClientEvent
	err := ctx.ReadResource("gcp-native:jobs/v4:TenantClientEvent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TenantClientEvent resources.
type tenantClientEventState struct {
}

type TenantClientEventState struct {
}

func (TenantClientEventState) ElementType() reflect.Type {
	return reflect.TypeOf((*tenantClientEventState)(nil)).Elem()
}

type tenantClientEventArgs struct {
	// Required. The timestamp of the event.
	CreateTime *string `pulumi:"createTime"`
	// Required. A unique identifier, generated by the client application.
	EventId *string `pulumi:"eventId"`
	// Notes about the event provided by recruiters or other users, for example, feedback on why a job was bookmarked.
	EventNotes *string `pulumi:"eventNotes"`
	// An event issued when a job seeker interacts with the application that implements Cloud Talent Solution.
	JobEvent   *JobEvent `pulumi:"jobEvent"`
	ProjectsId string    `pulumi:"projectsId"`
	// Strongly recommended for the best service experience. A unique ID generated in the API responses. It can be found in ResponseMetadata.request_id.
	RequestId *string `pulumi:"requestId"`
	TenantsId string  `pulumi:"tenantsId"`
}

// The set of arguments for constructing a TenantClientEvent resource.
type TenantClientEventArgs struct {
	// Required. The timestamp of the event.
	CreateTime pulumi.StringPtrInput
	// Required. A unique identifier, generated by the client application.
	EventId pulumi.StringPtrInput
	// Notes about the event provided by recruiters or other users, for example, feedback on why a job was bookmarked.
	EventNotes pulumi.StringPtrInput
	// An event issued when a job seeker interacts with the application that implements Cloud Talent Solution.
	JobEvent   JobEventPtrInput
	ProjectsId pulumi.StringInput
	// Strongly recommended for the best service experience. A unique ID generated in the API responses. It can be found in ResponseMetadata.request_id.
	RequestId pulumi.StringPtrInput
	TenantsId pulumi.StringInput
}

func (TenantClientEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tenantClientEventArgs)(nil)).Elem()
}

type TenantClientEventInput interface {
	pulumi.Input

	ToTenantClientEventOutput() TenantClientEventOutput
	ToTenantClientEventOutputWithContext(ctx context.Context) TenantClientEventOutput
}

func (*TenantClientEvent) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantClientEvent)(nil))
}

func (i *TenantClientEvent) ToTenantClientEventOutput() TenantClientEventOutput {
	return i.ToTenantClientEventOutputWithContext(context.Background())
}

func (i *TenantClientEvent) ToTenantClientEventOutputWithContext(ctx context.Context) TenantClientEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantClientEventOutput)
}

type TenantClientEventOutput struct {
	*pulumi.OutputState
}

func (TenantClientEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantClientEvent)(nil))
}

func (o TenantClientEventOutput) ToTenantClientEventOutput() TenantClientEventOutput {
	return o
}

func (o TenantClientEventOutput) ToTenantClientEventOutputWithContext(ctx context.Context) TenantClientEventOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(TenantClientEventOutput{})
}
