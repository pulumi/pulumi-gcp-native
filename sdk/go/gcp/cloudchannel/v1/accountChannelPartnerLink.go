// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Initiates a channel partner link between a distributor and a reseller, or between resellers in an n-tier reseller channel. Invited partners need to follow the invite_link_uri provided in the response to accept. After accepting the invitation, a link is set up between the two parties. You must be a distributor to call this method. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * ALREADY_EXISTS: The ChannelPartnerLink sent in the request already exists. * NOT_FOUND: No Cloud Identity customer exists for provided domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The new ChannelPartnerLink resource.
type AccountChannelPartnerLink struct {
	pulumi.CustomResourceState

	// Cloud Identity info of the channel partner (IR).
	ChannelPartnerCloudIdentityInfo GoogleCloudChannelV1CloudIdentityInfoResponseOutput `pulumi:"channelPartnerCloudIdentityInfo"`
	// Timestamp of when the channel partner link is created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// URI of the web page where partner accepts the link invitation.
	InviteLinkUri pulumi.StringOutput `pulumi:"inviteLinkUri"`
	// Required. State of the channel partner link.
	LinkState pulumi.StringOutput `pulumi:"linkState"`
	// Resource name for the channel partner link, in the format accounts/{account_id}/channelPartnerLinks/{id}.
	Name pulumi.StringOutput `pulumi:"name"`
	// Public identifier that a customer must use to generate a transfer token to move to this distributor-reseller combination.
	PublicId pulumi.StringOutput `pulumi:"publicId"`
	// Required. Cloud Identity ID of the linked reseller.
	ResellerCloudIdentityId pulumi.StringOutput `pulumi:"resellerCloudIdentityId"`
	// Timestamp of when the channel partner link is updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewAccountChannelPartnerLink registers a new resource with the given unique name, arguments, and options.
func NewAccountChannelPartnerLink(ctx *pulumi.Context,
	name string, args *AccountChannelPartnerLinkArgs, opts ...pulumi.ResourceOption) (*AccountChannelPartnerLink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountsId == nil {
		return nil, errors.New("invalid value for required argument 'AccountsId'")
	}
	if args.ChannelPartnerLinksId == nil {
		return nil, errors.New("invalid value for required argument 'ChannelPartnerLinksId'")
	}
	var resource AccountChannelPartnerLink
	err := ctx.RegisterResource("gcp-native:cloudchannel/v1:AccountChannelPartnerLink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountChannelPartnerLink gets an existing AccountChannelPartnerLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountChannelPartnerLink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountChannelPartnerLinkState, opts ...pulumi.ResourceOption) (*AccountChannelPartnerLink, error) {
	var resource AccountChannelPartnerLink
	err := ctx.ReadResource("gcp-native:cloudchannel/v1:AccountChannelPartnerLink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountChannelPartnerLink resources.
type accountChannelPartnerLinkState struct {
	// Cloud Identity info of the channel partner (IR).
	ChannelPartnerCloudIdentityInfo *GoogleCloudChannelV1CloudIdentityInfoResponse `pulumi:"channelPartnerCloudIdentityInfo"`
	// Timestamp of when the channel partner link is created.
	CreateTime *string `pulumi:"createTime"`
	// URI of the web page where partner accepts the link invitation.
	InviteLinkUri *string `pulumi:"inviteLinkUri"`
	// Required. State of the channel partner link.
	LinkState *string `pulumi:"linkState"`
	// Resource name for the channel partner link, in the format accounts/{account_id}/channelPartnerLinks/{id}.
	Name *string `pulumi:"name"`
	// Public identifier that a customer must use to generate a transfer token to move to this distributor-reseller combination.
	PublicId *string `pulumi:"publicId"`
	// Required. Cloud Identity ID of the linked reseller.
	ResellerCloudIdentityId *string `pulumi:"resellerCloudIdentityId"`
	// Timestamp of when the channel partner link is updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type AccountChannelPartnerLinkState struct {
	// Cloud Identity info of the channel partner (IR).
	ChannelPartnerCloudIdentityInfo GoogleCloudChannelV1CloudIdentityInfoResponsePtrInput
	// Timestamp of when the channel partner link is created.
	CreateTime pulumi.StringPtrInput
	// URI of the web page where partner accepts the link invitation.
	InviteLinkUri pulumi.StringPtrInput
	// Required. State of the channel partner link.
	LinkState pulumi.StringPtrInput
	// Resource name for the channel partner link, in the format accounts/{account_id}/channelPartnerLinks/{id}.
	Name pulumi.StringPtrInput
	// Public identifier that a customer must use to generate a transfer token to move to this distributor-reseller combination.
	PublicId pulumi.StringPtrInput
	// Required. Cloud Identity ID of the linked reseller.
	ResellerCloudIdentityId pulumi.StringPtrInput
	// Timestamp of when the channel partner link is updated.
	UpdateTime pulumi.StringPtrInput
}

func (AccountChannelPartnerLinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountChannelPartnerLinkState)(nil)).Elem()
}

type accountChannelPartnerLinkArgs struct {
	AccountsId            string `pulumi:"accountsId"`
	ChannelPartnerLinksId string `pulumi:"channelPartnerLinksId"`
	// Required. State of the channel partner link.
	LinkState *string `pulumi:"linkState"`
	// Required. Cloud Identity ID of the linked reseller.
	ResellerCloudIdentityId *string `pulumi:"resellerCloudIdentityId"`
}

// The set of arguments for constructing a AccountChannelPartnerLink resource.
type AccountChannelPartnerLinkArgs struct {
	AccountsId            pulumi.StringInput
	ChannelPartnerLinksId pulumi.StringInput
	// Required. State of the channel partner link.
	LinkState pulumi.StringPtrInput
	// Required. Cloud Identity ID of the linked reseller.
	ResellerCloudIdentityId pulumi.StringPtrInput
}

func (AccountChannelPartnerLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountChannelPartnerLinkArgs)(nil)).Elem()
}

type AccountChannelPartnerLinkInput interface {
	pulumi.Input

	ToAccountChannelPartnerLinkOutput() AccountChannelPartnerLinkOutput
	ToAccountChannelPartnerLinkOutputWithContext(ctx context.Context) AccountChannelPartnerLinkOutput
}

func (*AccountChannelPartnerLink) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountChannelPartnerLink)(nil))
}

func (i *AccountChannelPartnerLink) ToAccountChannelPartnerLinkOutput() AccountChannelPartnerLinkOutput {
	return i.ToAccountChannelPartnerLinkOutputWithContext(context.Background())
}

func (i *AccountChannelPartnerLink) ToAccountChannelPartnerLinkOutputWithContext(ctx context.Context) AccountChannelPartnerLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountChannelPartnerLinkOutput)
}

type AccountChannelPartnerLinkOutput struct {
	*pulumi.OutputState
}

func (AccountChannelPartnerLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountChannelPartnerLink)(nil))
}

func (o AccountChannelPartnerLinkOutput) ToAccountChannelPartnerLinkOutput() AccountChannelPartnerLinkOutput {
	return o
}

func (o AccountChannelPartnerLinkOutput) ToAccountChannelPartnerLinkOutputWithContext(ctx context.Context) AccountChannelPartnerLinkOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AccountChannelPartnerLinkOutput{})
}
