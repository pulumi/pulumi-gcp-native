// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A lightweight description of a file.
type ApigatewayApiConfigFile struct {
	// The bytes that constitute the file.
	Contents *string `pulumi:"contents"`
	// The file path (full or relative path). This is typically the path of the file when it is uploaded.
	Path *string `pulumi:"path"`
}

// ApigatewayApiConfigFileInput is an input type that accepts ApigatewayApiConfigFileArgs and ApigatewayApiConfigFileOutput values.
// You can construct a concrete instance of `ApigatewayApiConfigFileInput` via:
//
//          ApigatewayApiConfigFileArgs{...}
type ApigatewayApiConfigFileInput interface {
	pulumi.Input

	ToApigatewayApiConfigFileOutput() ApigatewayApiConfigFileOutput
	ToApigatewayApiConfigFileOutputWithContext(context.Context) ApigatewayApiConfigFileOutput
}

// A lightweight description of a file.
type ApigatewayApiConfigFileArgs struct {
	// The bytes that constitute the file.
	Contents pulumi.StringPtrInput `pulumi:"contents"`
	// The file path (full or relative path). This is typically the path of the file when it is uploaded.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ApigatewayApiConfigFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayApiConfigFile)(nil)).Elem()
}

func (i ApigatewayApiConfigFileArgs) ToApigatewayApiConfigFileOutput() ApigatewayApiConfigFileOutput {
	return i.ToApigatewayApiConfigFileOutputWithContext(context.Background())
}

func (i ApigatewayApiConfigFileArgs) ToApigatewayApiConfigFileOutputWithContext(ctx context.Context) ApigatewayApiConfigFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayApiConfigFileOutput)
}

func (i ApigatewayApiConfigFileArgs) ToApigatewayApiConfigFilePtrOutput() ApigatewayApiConfigFilePtrOutput {
	return i.ToApigatewayApiConfigFilePtrOutputWithContext(context.Background())
}

func (i ApigatewayApiConfigFileArgs) ToApigatewayApiConfigFilePtrOutputWithContext(ctx context.Context) ApigatewayApiConfigFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayApiConfigFileOutput).ToApigatewayApiConfigFilePtrOutputWithContext(ctx)
}

// ApigatewayApiConfigFilePtrInput is an input type that accepts ApigatewayApiConfigFileArgs, ApigatewayApiConfigFilePtr and ApigatewayApiConfigFilePtrOutput values.
// You can construct a concrete instance of `ApigatewayApiConfigFilePtrInput` via:
//
//          ApigatewayApiConfigFileArgs{...}
//
//  or:
//
//          nil
type ApigatewayApiConfigFilePtrInput interface {
	pulumi.Input

	ToApigatewayApiConfigFilePtrOutput() ApigatewayApiConfigFilePtrOutput
	ToApigatewayApiConfigFilePtrOutputWithContext(context.Context) ApigatewayApiConfigFilePtrOutput
}

type apigatewayApiConfigFilePtrType ApigatewayApiConfigFileArgs

func ApigatewayApiConfigFilePtr(v *ApigatewayApiConfigFileArgs) ApigatewayApiConfigFilePtrInput {
	return (*apigatewayApiConfigFilePtrType)(v)
}

func (*apigatewayApiConfigFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigatewayApiConfigFile)(nil)).Elem()
}

func (i *apigatewayApiConfigFilePtrType) ToApigatewayApiConfigFilePtrOutput() ApigatewayApiConfigFilePtrOutput {
	return i.ToApigatewayApiConfigFilePtrOutputWithContext(context.Background())
}

func (i *apigatewayApiConfigFilePtrType) ToApigatewayApiConfigFilePtrOutputWithContext(ctx context.Context) ApigatewayApiConfigFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayApiConfigFilePtrOutput)
}

// ApigatewayApiConfigFileArrayInput is an input type that accepts ApigatewayApiConfigFileArray and ApigatewayApiConfigFileArrayOutput values.
// You can construct a concrete instance of `ApigatewayApiConfigFileArrayInput` via:
//
//          ApigatewayApiConfigFileArray{ ApigatewayApiConfigFileArgs{...} }
type ApigatewayApiConfigFileArrayInput interface {
	pulumi.Input

	ToApigatewayApiConfigFileArrayOutput() ApigatewayApiConfigFileArrayOutput
	ToApigatewayApiConfigFileArrayOutputWithContext(context.Context) ApigatewayApiConfigFileArrayOutput
}

type ApigatewayApiConfigFileArray []ApigatewayApiConfigFileInput

func (ApigatewayApiConfigFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayApiConfigFile)(nil)).Elem()
}

func (i ApigatewayApiConfigFileArray) ToApigatewayApiConfigFileArrayOutput() ApigatewayApiConfigFileArrayOutput {
	return i.ToApigatewayApiConfigFileArrayOutputWithContext(context.Background())
}

func (i ApigatewayApiConfigFileArray) ToApigatewayApiConfigFileArrayOutputWithContext(ctx context.Context) ApigatewayApiConfigFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayApiConfigFileArrayOutput)
}

// A lightweight description of a file.
type ApigatewayApiConfigFileOutput struct{ *pulumi.OutputState }

func (ApigatewayApiConfigFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayApiConfigFile)(nil)).Elem()
}

func (o ApigatewayApiConfigFileOutput) ToApigatewayApiConfigFileOutput() ApigatewayApiConfigFileOutput {
	return o
}

func (o ApigatewayApiConfigFileOutput) ToApigatewayApiConfigFileOutputWithContext(ctx context.Context) ApigatewayApiConfigFileOutput {
	return o
}

func (o ApigatewayApiConfigFileOutput) ToApigatewayApiConfigFilePtrOutput() ApigatewayApiConfigFilePtrOutput {
	return o.ToApigatewayApiConfigFilePtrOutputWithContext(context.Background())
}

func (o ApigatewayApiConfigFileOutput) ToApigatewayApiConfigFilePtrOutputWithContext(ctx context.Context) ApigatewayApiConfigFilePtrOutput {
	return o.ApplyT(func(v ApigatewayApiConfigFile) *ApigatewayApiConfigFile {
		return &v
	}).(ApigatewayApiConfigFilePtrOutput)
}

// The bytes that constitute the file.
func (o ApigatewayApiConfigFileOutput) Contents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigatewayApiConfigFile) *string { return v.Contents }).(pulumi.StringPtrOutput)
}

// The file path (full or relative path). This is typically the path of the file when it is uploaded.
func (o ApigatewayApiConfigFileOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigatewayApiConfigFile) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ApigatewayApiConfigFilePtrOutput struct{ *pulumi.OutputState }

func (ApigatewayApiConfigFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigatewayApiConfigFile)(nil)).Elem()
}

func (o ApigatewayApiConfigFilePtrOutput) ToApigatewayApiConfigFilePtrOutput() ApigatewayApiConfigFilePtrOutput {
	return o
}

func (o ApigatewayApiConfigFilePtrOutput) ToApigatewayApiConfigFilePtrOutputWithContext(ctx context.Context) ApigatewayApiConfigFilePtrOutput {
	return o
}

func (o ApigatewayApiConfigFilePtrOutput) Elem() ApigatewayApiConfigFileOutput {
	return o.ApplyT(func(v *ApigatewayApiConfigFile) ApigatewayApiConfigFile { return *v }).(ApigatewayApiConfigFileOutput)
}

// The bytes that constitute the file.
func (o ApigatewayApiConfigFilePtrOutput) Contents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigatewayApiConfigFile) *string {
		if v == nil {
			return nil
		}
		return v.Contents
	}).(pulumi.StringPtrOutput)
}

// The file path (full or relative path). This is typically the path of the file when it is uploaded.
func (o ApigatewayApiConfigFilePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigatewayApiConfigFile) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type ApigatewayApiConfigFileArrayOutput struct{ *pulumi.OutputState }

func (ApigatewayApiConfigFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayApiConfigFile)(nil)).Elem()
}

func (o ApigatewayApiConfigFileArrayOutput) ToApigatewayApiConfigFileArrayOutput() ApigatewayApiConfigFileArrayOutput {
	return o
}

func (o ApigatewayApiConfigFileArrayOutput) ToApigatewayApiConfigFileArrayOutputWithContext(ctx context.Context) ApigatewayApiConfigFileArrayOutput {
	return o
}

func (o ApigatewayApiConfigFileArrayOutput) Index(i pulumi.IntInput) ApigatewayApiConfigFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigatewayApiConfigFile {
		return vs[0].([]ApigatewayApiConfigFile)[vs[1].(int)]
	}).(ApigatewayApiConfigFileOutput)
}

// A lightweight description of a file.
type ApigatewayApiConfigFileResponse struct {
	// The bytes that constitute the file.
	Contents string `pulumi:"contents"`
	// The file path (full or relative path). This is typically the path of the file when it is uploaded.
	Path string `pulumi:"path"`
}

// ApigatewayApiConfigFileResponseInput is an input type that accepts ApigatewayApiConfigFileResponseArgs and ApigatewayApiConfigFileResponseOutput values.
// You can construct a concrete instance of `ApigatewayApiConfigFileResponseInput` via:
//
//          ApigatewayApiConfigFileResponseArgs{...}
type ApigatewayApiConfigFileResponseInput interface {
	pulumi.Input

	ToApigatewayApiConfigFileResponseOutput() ApigatewayApiConfigFileResponseOutput
	ToApigatewayApiConfigFileResponseOutputWithContext(context.Context) ApigatewayApiConfigFileResponseOutput
}

// A lightweight description of a file.
type ApigatewayApiConfigFileResponseArgs struct {
	// The bytes that constitute the file.
	Contents pulumi.StringInput `pulumi:"contents"`
	// The file path (full or relative path). This is typically the path of the file when it is uploaded.
	Path pulumi.StringInput `pulumi:"path"`
}

func (ApigatewayApiConfigFileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayApiConfigFileResponse)(nil)).Elem()
}

func (i ApigatewayApiConfigFileResponseArgs) ToApigatewayApiConfigFileResponseOutput() ApigatewayApiConfigFileResponseOutput {
	return i.ToApigatewayApiConfigFileResponseOutputWithContext(context.Background())
}

func (i ApigatewayApiConfigFileResponseArgs) ToApigatewayApiConfigFileResponseOutputWithContext(ctx context.Context) ApigatewayApiConfigFileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayApiConfigFileResponseOutput)
}

// ApigatewayApiConfigFileResponseArrayInput is an input type that accepts ApigatewayApiConfigFileResponseArray and ApigatewayApiConfigFileResponseArrayOutput values.
// You can construct a concrete instance of `ApigatewayApiConfigFileResponseArrayInput` via:
//
//          ApigatewayApiConfigFileResponseArray{ ApigatewayApiConfigFileResponseArgs{...} }
type ApigatewayApiConfigFileResponseArrayInput interface {
	pulumi.Input

	ToApigatewayApiConfigFileResponseArrayOutput() ApigatewayApiConfigFileResponseArrayOutput
	ToApigatewayApiConfigFileResponseArrayOutputWithContext(context.Context) ApigatewayApiConfigFileResponseArrayOutput
}

type ApigatewayApiConfigFileResponseArray []ApigatewayApiConfigFileResponseInput

func (ApigatewayApiConfigFileResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayApiConfigFileResponse)(nil)).Elem()
}

func (i ApigatewayApiConfigFileResponseArray) ToApigatewayApiConfigFileResponseArrayOutput() ApigatewayApiConfigFileResponseArrayOutput {
	return i.ToApigatewayApiConfigFileResponseArrayOutputWithContext(context.Background())
}

func (i ApigatewayApiConfigFileResponseArray) ToApigatewayApiConfigFileResponseArrayOutputWithContext(ctx context.Context) ApigatewayApiConfigFileResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayApiConfigFileResponseArrayOutput)
}

// A lightweight description of a file.
type ApigatewayApiConfigFileResponseOutput struct{ *pulumi.OutputState }

func (ApigatewayApiConfigFileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayApiConfigFileResponse)(nil)).Elem()
}

func (o ApigatewayApiConfigFileResponseOutput) ToApigatewayApiConfigFileResponseOutput() ApigatewayApiConfigFileResponseOutput {
	return o
}

func (o ApigatewayApiConfigFileResponseOutput) ToApigatewayApiConfigFileResponseOutputWithContext(ctx context.Context) ApigatewayApiConfigFileResponseOutput {
	return o
}

// The bytes that constitute the file.
func (o ApigatewayApiConfigFileResponseOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func(v ApigatewayApiConfigFileResponse) string { return v.Contents }).(pulumi.StringOutput)
}

// The file path (full or relative path). This is typically the path of the file when it is uploaded.
func (o ApigatewayApiConfigFileResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ApigatewayApiConfigFileResponse) string { return v.Path }).(pulumi.StringOutput)
}

type ApigatewayApiConfigFileResponseArrayOutput struct{ *pulumi.OutputState }

func (ApigatewayApiConfigFileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayApiConfigFileResponse)(nil)).Elem()
}

func (o ApigatewayApiConfigFileResponseArrayOutput) ToApigatewayApiConfigFileResponseArrayOutput() ApigatewayApiConfigFileResponseArrayOutput {
	return o
}

func (o ApigatewayApiConfigFileResponseArrayOutput) ToApigatewayApiConfigFileResponseArrayOutputWithContext(ctx context.Context) ApigatewayApiConfigFileResponseArrayOutput {
	return o
}

func (o ApigatewayApiConfigFileResponseArrayOutput) Index(i pulumi.IntInput) ApigatewayApiConfigFileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigatewayApiConfigFileResponse {
		return vs[0].([]ApigatewayApiConfigFileResponse)[vs[1].(int)]
	}).(ApigatewayApiConfigFileResponseOutput)
}

// A gRPC service definition.
type ApigatewayApiConfigGrpcServiceDefinition struct {
	// Input only. File descriptor set, generated by protoc. To generate, use protoc with imports and source info included. For an example test.proto file, the following command would put the value in a new file named out.pb. $ protoc --include_imports --include_source_info test.proto -o out.pb
	FileDescriptorSet *ApigatewayApiConfigFile `pulumi:"fileDescriptorSet"`
	// Optional. Uncompiled proto files associated with the descriptor set, used for display purposes (server-side compilation is not supported). These should match the inputs to 'protoc' command used to generate file_descriptor_set.
	Source []ApigatewayApiConfigFile `pulumi:"source"`
}

// ApigatewayApiConfigGrpcServiceDefinitionInput is an input type that accepts ApigatewayApiConfigGrpcServiceDefinitionArgs and ApigatewayApiConfigGrpcServiceDefinitionOutput values.
// You can construct a concrete instance of `ApigatewayApiConfigGrpcServiceDefinitionInput` via:
//
//          ApigatewayApiConfigGrpcServiceDefinitionArgs{...}
type ApigatewayApiConfigGrpcServiceDefinitionInput interface {
	pulumi.Input

	ToApigatewayApiConfigGrpcServiceDefinitionOutput() ApigatewayApiConfigGrpcServiceDefinitionOutput
	ToApigatewayApiConfigGrpcServiceDefinitionOutputWithContext(context.Context) ApigatewayApiConfigGrpcServiceDefinitionOutput
}

// A gRPC service definition.
type ApigatewayApiConfigGrpcServiceDefinitionArgs struct {
	// Input only. File descriptor set, generated by protoc. To generate, use protoc with imports and source info included. For an example test.proto file, the following command would put the value in a new file named out.pb. $ protoc --include_imports --include_source_info test.proto -o out.pb
	FileDescriptorSet ApigatewayApiConfigFilePtrInput `pulumi:"fileDescriptorSet"`
	// Optional. Uncompiled proto files associated with the descriptor set, used for display purposes (server-side compilation is not supported). These should match the inputs to 'protoc' command used to generate file_descriptor_set.
	Source ApigatewayApiConfigFileArrayInput `pulumi:"source"`
}

func (ApigatewayApiConfigGrpcServiceDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayApiConfigGrpcServiceDefinition)(nil)).Elem()
}

func (i ApigatewayApiConfigGrpcServiceDefinitionArgs) ToApigatewayApiConfigGrpcServiceDefinitionOutput() ApigatewayApiConfigGrpcServiceDefinitionOutput {
	return i.ToApigatewayApiConfigGrpcServiceDefinitionOutputWithContext(context.Background())
}

func (i ApigatewayApiConfigGrpcServiceDefinitionArgs) ToApigatewayApiConfigGrpcServiceDefinitionOutputWithContext(ctx context.Context) ApigatewayApiConfigGrpcServiceDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayApiConfigGrpcServiceDefinitionOutput)
}

// ApigatewayApiConfigGrpcServiceDefinitionArrayInput is an input type that accepts ApigatewayApiConfigGrpcServiceDefinitionArray and ApigatewayApiConfigGrpcServiceDefinitionArrayOutput values.
// You can construct a concrete instance of `ApigatewayApiConfigGrpcServiceDefinitionArrayInput` via:
//
//          ApigatewayApiConfigGrpcServiceDefinitionArray{ ApigatewayApiConfigGrpcServiceDefinitionArgs{...} }
type ApigatewayApiConfigGrpcServiceDefinitionArrayInput interface {
	pulumi.Input

	ToApigatewayApiConfigGrpcServiceDefinitionArrayOutput() ApigatewayApiConfigGrpcServiceDefinitionArrayOutput
	ToApigatewayApiConfigGrpcServiceDefinitionArrayOutputWithContext(context.Context) ApigatewayApiConfigGrpcServiceDefinitionArrayOutput
}

type ApigatewayApiConfigGrpcServiceDefinitionArray []ApigatewayApiConfigGrpcServiceDefinitionInput

func (ApigatewayApiConfigGrpcServiceDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayApiConfigGrpcServiceDefinition)(nil)).Elem()
}

func (i ApigatewayApiConfigGrpcServiceDefinitionArray) ToApigatewayApiConfigGrpcServiceDefinitionArrayOutput() ApigatewayApiConfigGrpcServiceDefinitionArrayOutput {
	return i.ToApigatewayApiConfigGrpcServiceDefinitionArrayOutputWithContext(context.Background())
}

func (i ApigatewayApiConfigGrpcServiceDefinitionArray) ToApigatewayApiConfigGrpcServiceDefinitionArrayOutputWithContext(ctx context.Context) ApigatewayApiConfigGrpcServiceDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayApiConfigGrpcServiceDefinitionArrayOutput)
}

// A gRPC service definition.
type ApigatewayApiConfigGrpcServiceDefinitionOutput struct{ *pulumi.OutputState }

func (ApigatewayApiConfigGrpcServiceDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayApiConfigGrpcServiceDefinition)(nil)).Elem()
}

func (o ApigatewayApiConfigGrpcServiceDefinitionOutput) ToApigatewayApiConfigGrpcServiceDefinitionOutput() ApigatewayApiConfigGrpcServiceDefinitionOutput {
	return o
}

func (o ApigatewayApiConfigGrpcServiceDefinitionOutput) ToApigatewayApiConfigGrpcServiceDefinitionOutputWithContext(ctx context.Context) ApigatewayApiConfigGrpcServiceDefinitionOutput {
	return o
}

// Input only. File descriptor set, generated by protoc. To generate, use protoc with imports and source info included. For an example test.proto file, the following command would put the value in a new file named out.pb. $ protoc --include_imports --include_source_info test.proto -o out.pb
func (o ApigatewayApiConfigGrpcServiceDefinitionOutput) FileDescriptorSet() ApigatewayApiConfigFilePtrOutput {
	return o.ApplyT(func(v ApigatewayApiConfigGrpcServiceDefinition) *ApigatewayApiConfigFile { return v.FileDescriptorSet }).(ApigatewayApiConfigFilePtrOutput)
}

// Optional. Uncompiled proto files associated with the descriptor set, used for display purposes (server-side compilation is not supported). These should match the inputs to 'protoc' command used to generate file_descriptor_set.
func (o ApigatewayApiConfigGrpcServiceDefinitionOutput) Source() ApigatewayApiConfigFileArrayOutput {
	return o.ApplyT(func(v ApigatewayApiConfigGrpcServiceDefinition) []ApigatewayApiConfigFile { return v.Source }).(ApigatewayApiConfigFileArrayOutput)
}

type ApigatewayApiConfigGrpcServiceDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ApigatewayApiConfigGrpcServiceDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayApiConfigGrpcServiceDefinition)(nil)).Elem()
}

func (o ApigatewayApiConfigGrpcServiceDefinitionArrayOutput) ToApigatewayApiConfigGrpcServiceDefinitionArrayOutput() ApigatewayApiConfigGrpcServiceDefinitionArrayOutput {
	return o
}

func (o ApigatewayApiConfigGrpcServiceDefinitionArrayOutput) ToApigatewayApiConfigGrpcServiceDefinitionArrayOutputWithContext(ctx context.Context) ApigatewayApiConfigGrpcServiceDefinitionArrayOutput {
	return o
}

func (o ApigatewayApiConfigGrpcServiceDefinitionArrayOutput) Index(i pulumi.IntInput) ApigatewayApiConfigGrpcServiceDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigatewayApiConfigGrpcServiceDefinition {
		return vs[0].([]ApigatewayApiConfigGrpcServiceDefinition)[vs[1].(int)]
	}).(ApigatewayApiConfigGrpcServiceDefinitionOutput)
}

// A gRPC service definition.
type ApigatewayApiConfigGrpcServiceDefinitionResponse struct {
	// Input only. File descriptor set, generated by protoc. To generate, use protoc with imports and source info included. For an example test.proto file, the following command would put the value in a new file named out.pb. $ protoc --include_imports --include_source_info test.proto -o out.pb
	FileDescriptorSet ApigatewayApiConfigFileResponse `pulumi:"fileDescriptorSet"`
	// Optional. Uncompiled proto files associated with the descriptor set, used for display purposes (server-side compilation is not supported). These should match the inputs to 'protoc' command used to generate file_descriptor_set.
	Source []ApigatewayApiConfigFileResponse `pulumi:"source"`
}

// ApigatewayApiConfigGrpcServiceDefinitionResponseInput is an input type that accepts ApigatewayApiConfigGrpcServiceDefinitionResponseArgs and ApigatewayApiConfigGrpcServiceDefinitionResponseOutput values.
// You can construct a concrete instance of `ApigatewayApiConfigGrpcServiceDefinitionResponseInput` via:
//
//          ApigatewayApiConfigGrpcServiceDefinitionResponseArgs{...}
type ApigatewayApiConfigGrpcServiceDefinitionResponseInput interface {
	pulumi.Input

	ToApigatewayApiConfigGrpcServiceDefinitionResponseOutput() ApigatewayApiConfigGrpcServiceDefinitionResponseOutput
	ToApigatewayApiConfigGrpcServiceDefinitionResponseOutputWithContext(context.Context) ApigatewayApiConfigGrpcServiceDefinitionResponseOutput
}

// A gRPC service definition.
type ApigatewayApiConfigGrpcServiceDefinitionResponseArgs struct {
	// Input only. File descriptor set, generated by protoc. To generate, use protoc with imports and source info included. For an example test.proto file, the following command would put the value in a new file named out.pb. $ protoc --include_imports --include_source_info test.proto -o out.pb
	FileDescriptorSet ApigatewayApiConfigFileResponseInput `pulumi:"fileDescriptorSet"`
	// Optional. Uncompiled proto files associated with the descriptor set, used for display purposes (server-side compilation is not supported). These should match the inputs to 'protoc' command used to generate file_descriptor_set.
	Source ApigatewayApiConfigFileResponseArrayInput `pulumi:"source"`
}

func (ApigatewayApiConfigGrpcServiceDefinitionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayApiConfigGrpcServiceDefinitionResponse)(nil)).Elem()
}

func (i ApigatewayApiConfigGrpcServiceDefinitionResponseArgs) ToApigatewayApiConfigGrpcServiceDefinitionResponseOutput() ApigatewayApiConfigGrpcServiceDefinitionResponseOutput {
	return i.ToApigatewayApiConfigGrpcServiceDefinitionResponseOutputWithContext(context.Background())
}

func (i ApigatewayApiConfigGrpcServiceDefinitionResponseArgs) ToApigatewayApiConfigGrpcServiceDefinitionResponseOutputWithContext(ctx context.Context) ApigatewayApiConfigGrpcServiceDefinitionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayApiConfigGrpcServiceDefinitionResponseOutput)
}

// ApigatewayApiConfigGrpcServiceDefinitionResponseArrayInput is an input type that accepts ApigatewayApiConfigGrpcServiceDefinitionResponseArray and ApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput values.
// You can construct a concrete instance of `ApigatewayApiConfigGrpcServiceDefinitionResponseArrayInput` via:
//
//          ApigatewayApiConfigGrpcServiceDefinitionResponseArray{ ApigatewayApiConfigGrpcServiceDefinitionResponseArgs{...} }
type ApigatewayApiConfigGrpcServiceDefinitionResponseArrayInput interface {
	pulumi.Input

	ToApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput() ApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput
	ToApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutputWithContext(context.Context) ApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput
}

type ApigatewayApiConfigGrpcServiceDefinitionResponseArray []ApigatewayApiConfigGrpcServiceDefinitionResponseInput

func (ApigatewayApiConfigGrpcServiceDefinitionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayApiConfigGrpcServiceDefinitionResponse)(nil)).Elem()
}

func (i ApigatewayApiConfigGrpcServiceDefinitionResponseArray) ToApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput() ApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput {
	return i.ToApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutputWithContext(context.Background())
}

func (i ApigatewayApiConfigGrpcServiceDefinitionResponseArray) ToApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutputWithContext(ctx context.Context) ApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput)
}

// A gRPC service definition.
type ApigatewayApiConfigGrpcServiceDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ApigatewayApiConfigGrpcServiceDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayApiConfigGrpcServiceDefinitionResponse)(nil)).Elem()
}

func (o ApigatewayApiConfigGrpcServiceDefinitionResponseOutput) ToApigatewayApiConfigGrpcServiceDefinitionResponseOutput() ApigatewayApiConfigGrpcServiceDefinitionResponseOutput {
	return o
}

func (o ApigatewayApiConfigGrpcServiceDefinitionResponseOutput) ToApigatewayApiConfigGrpcServiceDefinitionResponseOutputWithContext(ctx context.Context) ApigatewayApiConfigGrpcServiceDefinitionResponseOutput {
	return o
}

// Input only. File descriptor set, generated by protoc. To generate, use protoc with imports and source info included. For an example test.proto file, the following command would put the value in a new file named out.pb. $ protoc --include_imports --include_source_info test.proto -o out.pb
func (o ApigatewayApiConfigGrpcServiceDefinitionResponseOutput) FileDescriptorSet() ApigatewayApiConfigFileResponseOutput {
	return o.ApplyT(func(v ApigatewayApiConfigGrpcServiceDefinitionResponse) ApigatewayApiConfigFileResponse {
		return v.FileDescriptorSet
	}).(ApigatewayApiConfigFileResponseOutput)
}

// Optional. Uncompiled proto files associated with the descriptor set, used for display purposes (server-side compilation is not supported). These should match the inputs to 'protoc' command used to generate file_descriptor_set.
func (o ApigatewayApiConfigGrpcServiceDefinitionResponseOutput) Source() ApigatewayApiConfigFileResponseArrayOutput {
	return o.ApplyT(func(v ApigatewayApiConfigGrpcServiceDefinitionResponse) []ApigatewayApiConfigFileResponse {
		return v.Source
	}).(ApigatewayApiConfigFileResponseArrayOutput)
}

type ApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (ApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayApiConfigGrpcServiceDefinitionResponse)(nil)).Elem()
}

func (o ApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput) ToApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput() ApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput {
	return o
}

func (o ApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput) ToApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutputWithContext(ctx context.Context) ApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput {
	return o
}

func (o ApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput) Index(i pulumi.IntInput) ApigatewayApiConfigGrpcServiceDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigatewayApiConfigGrpcServiceDefinitionResponse {
		return vs[0].([]ApigatewayApiConfigGrpcServiceDefinitionResponse)[vs[1].(int)]
	}).(ApigatewayApiConfigGrpcServiceDefinitionResponseOutput)
}

// An OpenAPI Specification Document describing an API.
type ApigatewayApiConfigOpenApiDocument struct {
	// The OpenAPI Specification document file.
	Document *ApigatewayApiConfigFile `pulumi:"document"`
}

// ApigatewayApiConfigOpenApiDocumentInput is an input type that accepts ApigatewayApiConfigOpenApiDocumentArgs and ApigatewayApiConfigOpenApiDocumentOutput values.
// You can construct a concrete instance of `ApigatewayApiConfigOpenApiDocumentInput` via:
//
//          ApigatewayApiConfigOpenApiDocumentArgs{...}
type ApigatewayApiConfigOpenApiDocumentInput interface {
	pulumi.Input

	ToApigatewayApiConfigOpenApiDocumentOutput() ApigatewayApiConfigOpenApiDocumentOutput
	ToApigatewayApiConfigOpenApiDocumentOutputWithContext(context.Context) ApigatewayApiConfigOpenApiDocumentOutput
}

// An OpenAPI Specification Document describing an API.
type ApigatewayApiConfigOpenApiDocumentArgs struct {
	// The OpenAPI Specification document file.
	Document ApigatewayApiConfigFilePtrInput `pulumi:"document"`
}

func (ApigatewayApiConfigOpenApiDocumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayApiConfigOpenApiDocument)(nil)).Elem()
}

func (i ApigatewayApiConfigOpenApiDocumentArgs) ToApigatewayApiConfigOpenApiDocumentOutput() ApigatewayApiConfigOpenApiDocumentOutput {
	return i.ToApigatewayApiConfigOpenApiDocumentOutputWithContext(context.Background())
}

func (i ApigatewayApiConfigOpenApiDocumentArgs) ToApigatewayApiConfigOpenApiDocumentOutputWithContext(ctx context.Context) ApigatewayApiConfigOpenApiDocumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayApiConfigOpenApiDocumentOutput)
}

// ApigatewayApiConfigOpenApiDocumentArrayInput is an input type that accepts ApigatewayApiConfigOpenApiDocumentArray and ApigatewayApiConfigOpenApiDocumentArrayOutput values.
// You can construct a concrete instance of `ApigatewayApiConfigOpenApiDocumentArrayInput` via:
//
//          ApigatewayApiConfigOpenApiDocumentArray{ ApigatewayApiConfigOpenApiDocumentArgs{...} }
type ApigatewayApiConfigOpenApiDocumentArrayInput interface {
	pulumi.Input

	ToApigatewayApiConfigOpenApiDocumentArrayOutput() ApigatewayApiConfigOpenApiDocumentArrayOutput
	ToApigatewayApiConfigOpenApiDocumentArrayOutputWithContext(context.Context) ApigatewayApiConfigOpenApiDocumentArrayOutput
}

type ApigatewayApiConfigOpenApiDocumentArray []ApigatewayApiConfigOpenApiDocumentInput

func (ApigatewayApiConfigOpenApiDocumentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayApiConfigOpenApiDocument)(nil)).Elem()
}

func (i ApigatewayApiConfigOpenApiDocumentArray) ToApigatewayApiConfigOpenApiDocumentArrayOutput() ApigatewayApiConfigOpenApiDocumentArrayOutput {
	return i.ToApigatewayApiConfigOpenApiDocumentArrayOutputWithContext(context.Background())
}

func (i ApigatewayApiConfigOpenApiDocumentArray) ToApigatewayApiConfigOpenApiDocumentArrayOutputWithContext(ctx context.Context) ApigatewayApiConfigOpenApiDocumentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayApiConfigOpenApiDocumentArrayOutput)
}

// An OpenAPI Specification Document describing an API.
type ApigatewayApiConfigOpenApiDocumentOutput struct{ *pulumi.OutputState }

func (ApigatewayApiConfigOpenApiDocumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayApiConfigOpenApiDocument)(nil)).Elem()
}

func (o ApigatewayApiConfigOpenApiDocumentOutput) ToApigatewayApiConfigOpenApiDocumentOutput() ApigatewayApiConfigOpenApiDocumentOutput {
	return o
}

func (o ApigatewayApiConfigOpenApiDocumentOutput) ToApigatewayApiConfigOpenApiDocumentOutputWithContext(ctx context.Context) ApigatewayApiConfigOpenApiDocumentOutput {
	return o
}

// The OpenAPI Specification document file.
func (o ApigatewayApiConfigOpenApiDocumentOutput) Document() ApigatewayApiConfigFilePtrOutput {
	return o.ApplyT(func(v ApigatewayApiConfigOpenApiDocument) *ApigatewayApiConfigFile { return v.Document }).(ApigatewayApiConfigFilePtrOutput)
}

type ApigatewayApiConfigOpenApiDocumentArrayOutput struct{ *pulumi.OutputState }

func (ApigatewayApiConfigOpenApiDocumentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayApiConfigOpenApiDocument)(nil)).Elem()
}

func (o ApigatewayApiConfigOpenApiDocumentArrayOutput) ToApigatewayApiConfigOpenApiDocumentArrayOutput() ApigatewayApiConfigOpenApiDocumentArrayOutput {
	return o
}

func (o ApigatewayApiConfigOpenApiDocumentArrayOutput) ToApigatewayApiConfigOpenApiDocumentArrayOutputWithContext(ctx context.Context) ApigatewayApiConfigOpenApiDocumentArrayOutput {
	return o
}

func (o ApigatewayApiConfigOpenApiDocumentArrayOutput) Index(i pulumi.IntInput) ApigatewayApiConfigOpenApiDocumentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigatewayApiConfigOpenApiDocument {
		return vs[0].([]ApigatewayApiConfigOpenApiDocument)[vs[1].(int)]
	}).(ApigatewayApiConfigOpenApiDocumentOutput)
}

// An OpenAPI Specification Document describing an API.
type ApigatewayApiConfigOpenApiDocumentResponse struct {
	// The OpenAPI Specification document file.
	Document ApigatewayApiConfigFileResponse `pulumi:"document"`
}

// ApigatewayApiConfigOpenApiDocumentResponseInput is an input type that accepts ApigatewayApiConfigOpenApiDocumentResponseArgs and ApigatewayApiConfigOpenApiDocumentResponseOutput values.
// You can construct a concrete instance of `ApigatewayApiConfigOpenApiDocumentResponseInput` via:
//
//          ApigatewayApiConfigOpenApiDocumentResponseArgs{...}
type ApigatewayApiConfigOpenApiDocumentResponseInput interface {
	pulumi.Input

	ToApigatewayApiConfigOpenApiDocumentResponseOutput() ApigatewayApiConfigOpenApiDocumentResponseOutput
	ToApigatewayApiConfigOpenApiDocumentResponseOutputWithContext(context.Context) ApigatewayApiConfigOpenApiDocumentResponseOutput
}

// An OpenAPI Specification Document describing an API.
type ApigatewayApiConfigOpenApiDocumentResponseArgs struct {
	// The OpenAPI Specification document file.
	Document ApigatewayApiConfigFileResponseInput `pulumi:"document"`
}

func (ApigatewayApiConfigOpenApiDocumentResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayApiConfigOpenApiDocumentResponse)(nil)).Elem()
}

func (i ApigatewayApiConfigOpenApiDocumentResponseArgs) ToApigatewayApiConfigOpenApiDocumentResponseOutput() ApigatewayApiConfigOpenApiDocumentResponseOutput {
	return i.ToApigatewayApiConfigOpenApiDocumentResponseOutputWithContext(context.Background())
}

func (i ApigatewayApiConfigOpenApiDocumentResponseArgs) ToApigatewayApiConfigOpenApiDocumentResponseOutputWithContext(ctx context.Context) ApigatewayApiConfigOpenApiDocumentResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayApiConfigOpenApiDocumentResponseOutput)
}

// ApigatewayApiConfigOpenApiDocumentResponseArrayInput is an input type that accepts ApigatewayApiConfigOpenApiDocumentResponseArray and ApigatewayApiConfigOpenApiDocumentResponseArrayOutput values.
// You can construct a concrete instance of `ApigatewayApiConfigOpenApiDocumentResponseArrayInput` via:
//
//          ApigatewayApiConfigOpenApiDocumentResponseArray{ ApigatewayApiConfigOpenApiDocumentResponseArgs{...} }
type ApigatewayApiConfigOpenApiDocumentResponseArrayInput interface {
	pulumi.Input

	ToApigatewayApiConfigOpenApiDocumentResponseArrayOutput() ApigatewayApiConfigOpenApiDocumentResponseArrayOutput
	ToApigatewayApiConfigOpenApiDocumentResponseArrayOutputWithContext(context.Context) ApigatewayApiConfigOpenApiDocumentResponseArrayOutput
}

type ApigatewayApiConfigOpenApiDocumentResponseArray []ApigatewayApiConfigOpenApiDocumentResponseInput

func (ApigatewayApiConfigOpenApiDocumentResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayApiConfigOpenApiDocumentResponse)(nil)).Elem()
}

func (i ApigatewayApiConfigOpenApiDocumentResponseArray) ToApigatewayApiConfigOpenApiDocumentResponseArrayOutput() ApigatewayApiConfigOpenApiDocumentResponseArrayOutput {
	return i.ToApigatewayApiConfigOpenApiDocumentResponseArrayOutputWithContext(context.Background())
}

func (i ApigatewayApiConfigOpenApiDocumentResponseArray) ToApigatewayApiConfigOpenApiDocumentResponseArrayOutputWithContext(ctx context.Context) ApigatewayApiConfigOpenApiDocumentResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayApiConfigOpenApiDocumentResponseArrayOutput)
}

// An OpenAPI Specification Document describing an API.
type ApigatewayApiConfigOpenApiDocumentResponseOutput struct{ *pulumi.OutputState }

func (ApigatewayApiConfigOpenApiDocumentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayApiConfigOpenApiDocumentResponse)(nil)).Elem()
}

func (o ApigatewayApiConfigOpenApiDocumentResponseOutput) ToApigatewayApiConfigOpenApiDocumentResponseOutput() ApigatewayApiConfigOpenApiDocumentResponseOutput {
	return o
}

func (o ApigatewayApiConfigOpenApiDocumentResponseOutput) ToApigatewayApiConfigOpenApiDocumentResponseOutputWithContext(ctx context.Context) ApigatewayApiConfigOpenApiDocumentResponseOutput {
	return o
}

// The OpenAPI Specification document file.
func (o ApigatewayApiConfigOpenApiDocumentResponseOutput) Document() ApigatewayApiConfigFileResponseOutput {
	return o.ApplyT(func(v ApigatewayApiConfigOpenApiDocumentResponse) ApigatewayApiConfigFileResponse { return v.Document }).(ApigatewayApiConfigFileResponseOutput)
}

type ApigatewayApiConfigOpenApiDocumentResponseArrayOutput struct{ *pulumi.OutputState }

func (ApigatewayApiConfigOpenApiDocumentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayApiConfigOpenApiDocumentResponse)(nil)).Elem()
}

func (o ApigatewayApiConfigOpenApiDocumentResponseArrayOutput) ToApigatewayApiConfigOpenApiDocumentResponseArrayOutput() ApigatewayApiConfigOpenApiDocumentResponseArrayOutput {
	return o
}

func (o ApigatewayApiConfigOpenApiDocumentResponseArrayOutput) ToApigatewayApiConfigOpenApiDocumentResponseArrayOutputWithContext(ctx context.Context) ApigatewayApiConfigOpenApiDocumentResponseArrayOutput {
	return o
}

func (o ApigatewayApiConfigOpenApiDocumentResponseArrayOutput) Index(i pulumi.IntInput) ApigatewayApiConfigOpenApiDocumentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigatewayApiConfigOpenApiDocumentResponse {
		return vs[0].([]ApigatewayApiConfigOpenApiDocumentResponse)[vs[1].(int)]
	}).(ApigatewayApiConfigOpenApiDocumentResponseOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type ApigatewayAuditConfig struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []ApigatewayAuditLogConfig `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service *string `pulumi:"service"`
}

// ApigatewayAuditConfigInput is an input type that accepts ApigatewayAuditConfigArgs and ApigatewayAuditConfigOutput values.
// You can construct a concrete instance of `ApigatewayAuditConfigInput` via:
//
//          ApigatewayAuditConfigArgs{...}
type ApigatewayAuditConfigInput interface {
	pulumi.Input

	ToApigatewayAuditConfigOutput() ApigatewayAuditConfigOutput
	ToApigatewayAuditConfigOutputWithContext(context.Context) ApigatewayAuditConfigOutput
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type ApigatewayAuditConfigArgs struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs ApigatewayAuditLogConfigArrayInput `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ApigatewayAuditConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayAuditConfig)(nil)).Elem()
}

func (i ApigatewayAuditConfigArgs) ToApigatewayAuditConfigOutput() ApigatewayAuditConfigOutput {
	return i.ToApigatewayAuditConfigOutputWithContext(context.Background())
}

func (i ApigatewayAuditConfigArgs) ToApigatewayAuditConfigOutputWithContext(ctx context.Context) ApigatewayAuditConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayAuditConfigOutput)
}

// ApigatewayAuditConfigArrayInput is an input type that accepts ApigatewayAuditConfigArray and ApigatewayAuditConfigArrayOutput values.
// You can construct a concrete instance of `ApigatewayAuditConfigArrayInput` via:
//
//          ApigatewayAuditConfigArray{ ApigatewayAuditConfigArgs{...} }
type ApigatewayAuditConfigArrayInput interface {
	pulumi.Input

	ToApigatewayAuditConfigArrayOutput() ApigatewayAuditConfigArrayOutput
	ToApigatewayAuditConfigArrayOutputWithContext(context.Context) ApigatewayAuditConfigArrayOutput
}

type ApigatewayAuditConfigArray []ApigatewayAuditConfigInput

func (ApigatewayAuditConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayAuditConfig)(nil)).Elem()
}

func (i ApigatewayAuditConfigArray) ToApigatewayAuditConfigArrayOutput() ApigatewayAuditConfigArrayOutput {
	return i.ToApigatewayAuditConfigArrayOutputWithContext(context.Background())
}

func (i ApigatewayAuditConfigArray) ToApigatewayAuditConfigArrayOutputWithContext(ctx context.Context) ApigatewayAuditConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayAuditConfigArrayOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type ApigatewayAuditConfigOutput struct{ *pulumi.OutputState }

func (ApigatewayAuditConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayAuditConfig)(nil)).Elem()
}

func (o ApigatewayAuditConfigOutput) ToApigatewayAuditConfigOutput() ApigatewayAuditConfigOutput {
	return o
}

func (o ApigatewayAuditConfigOutput) ToApigatewayAuditConfigOutputWithContext(ctx context.Context) ApigatewayAuditConfigOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o ApigatewayAuditConfigOutput) AuditLogConfigs() ApigatewayAuditLogConfigArrayOutput {
	return o.ApplyT(func(v ApigatewayAuditConfig) []ApigatewayAuditLogConfig { return v.AuditLogConfigs }).(ApigatewayAuditLogConfigArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o ApigatewayAuditConfigOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigatewayAuditConfig) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ApigatewayAuditConfigArrayOutput struct{ *pulumi.OutputState }

func (ApigatewayAuditConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayAuditConfig)(nil)).Elem()
}

func (o ApigatewayAuditConfigArrayOutput) ToApigatewayAuditConfigArrayOutput() ApigatewayAuditConfigArrayOutput {
	return o
}

func (o ApigatewayAuditConfigArrayOutput) ToApigatewayAuditConfigArrayOutputWithContext(ctx context.Context) ApigatewayAuditConfigArrayOutput {
	return o
}

func (o ApigatewayAuditConfigArrayOutput) Index(i pulumi.IntInput) ApigatewayAuditConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigatewayAuditConfig {
		return vs[0].([]ApigatewayAuditConfig)[vs[1].(int)]
	}).(ApigatewayAuditConfigOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type ApigatewayAuditConfigResponse struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []ApigatewayAuditLogConfigResponse `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service string `pulumi:"service"`
}

// ApigatewayAuditConfigResponseInput is an input type that accepts ApigatewayAuditConfigResponseArgs and ApigatewayAuditConfigResponseOutput values.
// You can construct a concrete instance of `ApigatewayAuditConfigResponseInput` via:
//
//          ApigatewayAuditConfigResponseArgs{...}
type ApigatewayAuditConfigResponseInput interface {
	pulumi.Input

	ToApigatewayAuditConfigResponseOutput() ApigatewayAuditConfigResponseOutput
	ToApigatewayAuditConfigResponseOutputWithContext(context.Context) ApigatewayAuditConfigResponseOutput
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type ApigatewayAuditConfigResponseArgs struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs ApigatewayAuditLogConfigResponseArrayInput `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service pulumi.StringInput `pulumi:"service"`
}

func (ApigatewayAuditConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayAuditConfigResponse)(nil)).Elem()
}

func (i ApigatewayAuditConfigResponseArgs) ToApigatewayAuditConfigResponseOutput() ApigatewayAuditConfigResponseOutput {
	return i.ToApigatewayAuditConfigResponseOutputWithContext(context.Background())
}

func (i ApigatewayAuditConfigResponseArgs) ToApigatewayAuditConfigResponseOutputWithContext(ctx context.Context) ApigatewayAuditConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayAuditConfigResponseOutput)
}

// ApigatewayAuditConfigResponseArrayInput is an input type that accepts ApigatewayAuditConfigResponseArray and ApigatewayAuditConfigResponseArrayOutput values.
// You can construct a concrete instance of `ApigatewayAuditConfigResponseArrayInput` via:
//
//          ApigatewayAuditConfigResponseArray{ ApigatewayAuditConfigResponseArgs{...} }
type ApigatewayAuditConfigResponseArrayInput interface {
	pulumi.Input

	ToApigatewayAuditConfigResponseArrayOutput() ApigatewayAuditConfigResponseArrayOutput
	ToApigatewayAuditConfigResponseArrayOutputWithContext(context.Context) ApigatewayAuditConfigResponseArrayOutput
}

type ApigatewayAuditConfigResponseArray []ApigatewayAuditConfigResponseInput

func (ApigatewayAuditConfigResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayAuditConfigResponse)(nil)).Elem()
}

func (i ApigatewayAuditConfigResponseArray) ToApigatewayAuditConfigResponseArrayOutput() ApigatewayAuditConfigResponseArrayOutput {
	return i.ToApigatewayAuditConfigResponseArrayOutputWithContext(context.Background())
}

func (i ApigatewayAuditConfigResponseArray) ToApigatewayAuditConfigResponseArrayOutputWithContext(ctx context.Context) ApigatewayAuditConfigResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayAuditConfigResponseArrayOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type ApigatewayAuditConfigResponseOutput struct{ *pulumi.OutputState }

func (ApigatewayAuditConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayAuditConfigResponse)(nil)).Elem()
}

func (o ApigatewayAuditConfigResponseOutput) ToApigatewayAuditConfigResponseOutput() ApigatewayAuditConfigResponseOutput {
	return o
}

func (o ApigatewayAuditConfigResponseOutput) ToApigatewayAuditConfigResponseOutputWithContext(ctx context.Context) ApigatewayAuditConfigResponseOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o ApigatewayAuditConfigResponseOutput) AuditLogConfigs() ApigatewayAuditLogConfigResponseArrayOutput {
	return o.ApplyT(func(v ApigatewayAuditConfigResponse) []ApigatewayAuditLogConfigResponse { return v.AuditLogConfigs }).(ApigatewayAuditLogConfigResponseArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o ApigatewayAuditConfigResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v ApigatewayAuditConfigResponse) string { return v.Service }).(pulumi.StringOutput)
}

type ApigatewayAuditConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (ApigatewayAuditConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayAuditConfigResponse)(nil)).Elem()
}

func (o ApigatewayAuditConfigResponseArrayOutput) ToApigatewayAuditConfigResponseArrayOutput() ApigatewayAuditConfigResponseArrayOutput {
	return o
}

func (o ApigatewayAuditConfigResponseArrayOutput) ToApigatewayAuditConfigResponseArrayOutputWithContext(ctx context.Context) ApigatewayAuditConfigResponseArrayOutput {
	return o
}

func (o ApigatewayAuditConfigResponseArrayOutput) Index(i pulumi.IntInput) ApigatewayAuditConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigatewayAuditConfigResponse {
		return vs[0].([]ApigatewayAuditConfigResponse)[vs[1].(int)]
	}).(ApigatewayAuditConfigResponseOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type ApigatewayAuditLogConfig struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType *string `pulumi:"logType"`
}

// ApigatewayAuditLogConfigInput is an input type that accepts ApigatewayAuditLogConfigArgs and ApigatewayAuditLogConfigOutput values.
// You can construct a concrete instance of `ApigatewayAuditLogConfigInput` via:
//
//          ApigatewayAuditLogConfigArgs{...}
type ApigatewayAuditLogConfigInput interface {
	pulumi.Input

	ToApigatewayAuditLogConfigOutput() ApigatewayAuditLogConfigOutput
	ToApigatewayAuditLogConfigOutputWithContext(context.Context) ApigatewayAuditLogConfigOutput
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type ApigatewayAuditLogConfigArgs struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType pulumi.StringPtrInput `pulumi:"logType"`
}

func (ApigatewayAuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayAuditLogConfig)(nil)).Elem()
}

func (i ApigatewayAuditLogConfigArgs) ToApigatewayAuditLogConfigOutput() ApigatewayAuditLogConfigOutput {
	return i.ToApigatewayAuditLogConfigOutputWithContext(context.Background())
}

func (i ApigatewayAuditLogConfigArgs) ToApigatewayAuditLogConfigOutputWithContext(ctx context.Context) ApigatewayAuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayAuditLogConfigOutput)
}

// ApigatewayAuditLogConfigArrayInput is an input type that accepts ApigatewayAuditLogConfigArray and ApigatewayAuditLogConfigArrayOutput values.
// You can construct a concrete instance of `ApigatewayAuditLogConfigArrayInput` via:
//
//          ApigatewayAuditLogConfigArray{ ApigatewayAuditLogConfigArgs{...} }
type ApigatewayAuditLogConfigArrayInput interface {
	pulumi.Input

	ToApigatewayAuditLogConfigArrayOutput() ApigatewayAuditLogConfigArrayOutput
	ToApigatewayAuditLogConfigArrayOutputWithContext(context.Context) ApigatewayAuditLogConfigArrayOutput
}

type ApigatewayAuditLogConfigArray []ApigatewayAuditLogConfigInput

func (ApigatewayAuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayAuditLogConfig)(nil)).Elem()
}

func (i ApigatewayAuditLogConfigArray) ToApigatewayAuditLogConfigArrayOutput() ApigatewayAuditLogConfigArrayOutput {
	return i.ToApigatewayAuditLogConfigArrayOutputWithContext(context.Background())
}

func (i ApigatewayAuditLogConfigArray) ToApigatewayAuditLogConfigArrayOutputWithContext(ctx context.Context) ApigatewayAuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayAuditLogConfigArrayOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type ApigatewayAuditLogConfigOutput struct{ *pulumi.OutputState }

func (ApigatewayAuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayAuditLogConfig)(nil)).Elem()
}

func (o ApigatewayAuditLogConfigOutput) ToApigatewayAuditLogConfigOutput() ApigatewayAuditLogConfigOutput {
	return o
}

func (o ApigatewayAuditLogConfigOutput) ToApigatewayAuditLogConfigOutputWithContext(ctx context.Context) ApigatewayAuditLogConfigOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o ApigatewayAuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApigatewayAuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o ApigatewayAuditLogConfigOutput) LogType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigatewayAuditLogConfig) *string { return v.LogType }).(pulumi.StringPtrOutput)
}

type ApigatewayAuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (ApigatewayAuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayAuditLogConfig)(nil)).Elem()
}

func (o ApigatewayAuditLogConfigArrayOutput) ToApigatewayAuditLogConfigArrayOutput() ApigatewayAuditLogConfigArrayOutput {
	return o
}

func (o ApigatewayAuditLogConfigArrayOutput) ToApigatewayAuditLogConfigArrayOutputWithContext(ctx context.Context) ApigatewayAuditLogConfigArrayOutput {
	return o
}

func (o ApigatewayAuditLogConfigArrayOutput) Index(i pulumi.IntInput) ApigatewayAuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigatewayAuditLogConfig {
		return vs[0].([]ApigatewayAuditLogConfig)[vs[1].(int)]
	}).(ApigatewayAuditLogConfigOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type ApigatewayAuditLogConfigResponse struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType string `pulumi:"logType"`
}

// ApigatewayAuditLogConfigResponseInput is an input type that accepts ApigatewayAuditLogConfigResponseArgs and ApigatewayAuditLogConfigResponseOutput values.
// You can construct a concrete instance of `ApigatewayAuditLogConfigResponseInput` via:
//
//          ApigatewayAuditLogConfigResponseArgs{...}
type ApigatewayAuditLogConfigResponseInput interface {
	pulumi.Input

	ToApigatewayAuditLogConfigResponseOutput() ApigatewayAuditLogConfigResponseOutput
	ToApigatewayAuditLogConfigResponseOutputWithContext(context.Context) ApigatewayAuditLogConfigResponseOutput
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type ApigatewayAuditLogConfigResponseArgs struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (ApigatewayAuditLogConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayAuditLogConfigResponse)(nil)).Elem()
}

func (i ApigatewayAuditLogConfigResponseArgs) ToApigatewayAuditLogConfigResponseOutput() ApigatewayAuditLogConfigResponseOutput {
	return i.ToApigatewayAuditLogConfigResponseOutputWithContext(context.Background())
}

func (i ApigatewayAuditLogConfigResponseArgs) ToApigatewayAuditLogConfigResponseOutputWithContext(ctx context.Context) ApigatewayAuditLogConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayAuditLogConfigResponseOutput)
}

// ApigatewayAuditLogConfigResponseArrayInput is an input type that accepts ApigatewayAuditLogConfigResponseArray and ApigatewayAuditLogConfigResponseArrayOutput values.
// You can construct a concrete instance of `ApigatewayAuditLogConfigResponseArrayInput` via:
//
//          ApigatewayAuditLogConfigResponseArray{ ApigatewayAuditLogConfigResponseArgs{...} }
type ApigatewayAuditLogConfigResponseArrayInput interface {
	pulumi.Input

	ToApigatewayAuditLogConfigResponseArrayOutput() ApigatewayAuditLogConfigResponseArrayOutput
	ToApigatewayAuditLogConfigResponseArrayOutputWithContext(context.Context) ApigatewayAuditLogConfigResponseArrayOutput
}

type ApigatewayAuditLogConfigResponseArray []ApigatewayAuditLogConfigResponseInput

func (ApigatewayAuditLogConfigResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayAuditLogConfigResponse)(nil)).Elem()
}

func (i ApigatewayAuditLogConfigResponseArray) ToApigatewayAuditLogConfigResponseArrayOutput() ApigatewayAuditLogConfigResponseArrayOutput {
	return i.ToApigatewayAuditLogConfigResponseArrayOutputWithContext(context.Background())
}

func (i ApigatewayAuditLogConfigResponseArray) ToApigatewayAuditLogConfigResponseArrayOutputWithContext(ctx context.Context) ApigatewayAuditLogConfigResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayAuditLogConfigResponseArrayOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type ApigatewayAuditLogConfigResponseOutput struct{ *pulumi.OutputState }

func (ApigatewayAuditLogConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayAuditLogConfigResponse)(nil)).Elem()
}

func (o ApigatewayAuditLogConfigResponseOutput) ToApigatewayAuditLogConfigResponseOutput() ApigatewayAuditLogConfigResponseOutput {
	return o
}

func (o ApigatewayAuditLogConfigResponseOutput) ToApigatewayAuditLogConfigResponseOutputWithContext(ctx context.Context) ApigatewayAuditLogConfigResponseOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o ApigatewayAuditLogConfigResponseOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApigatewayAuditLogConfigResponse) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o ApigatewayAuditLogConfigResponseOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v ApigatewayAuditLogConfigResponse) string { return v.LogType }).(pulumi.StringOutput)
}

type ApigatewayAuditLogConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (ApigatewayAuditLogConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayAuditLogConfigResponse)(nil)).Elem()
}

func (o ApigatewayAuditLogConfigResponseArrayOutput) ToApigatewayAuditLogConfigResponseArrayOutput() ApigatewayAuditLogConfigResponseArrayOutput {
	return o
}

func (o ApigatewayAuditLogConfigResponseArrayOutput) ToApigatewayAuditLogConfigResponseArrayOutputWithContext(ctx context.Context) ApigatewayAuditLogConfigResponseArrayOutput {
	return o
}

func (o ApigatewayAuditLogConfigResponseArrayOutput) Index(i pulumi.IntInput) ApigatewayAuditLogConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigatewayAuditLogConfigResponse {
		return vs[0].([]ApigatewayAuditLogConfigResponse)[vs[1].(int)]
	}).(ApigatewayAuditLogConfigResponseOutput)
}

// Configuration for all backends.
type ApigatewayBackendConfig struct {
	// Google Cloud IAM service account used to sign OIDC tokens for backends that have authentication configured (https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.configs#backend). This may either be the Service Account's email (i.e. "{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com") or its full resource name (i.e. "projects/{PROJECT}/accounts/{UNIQUE_ID}"). This is most often used when the backend is a GCP resource such as a Cloud Run Service or an IAP-secured service. Note that this token is always sent as an authorization header bearer token. The audience of the OIDC token is configured in the associated Service Config in the BackendRule option (https://github.com/googleapis/googleapis/blob/master/google/api/backend.proto#L125).
	GoogleServiceAccount *string `pulumi:"googleServiceAccount"`
}

// ApigatewayBackendConfigInput is an input type that accepts ApigatewayBackendConfigArgs and ApigatewayBackendConfigOutput values.
// You can construct a concrete instance of `ApigatewayBackendConfigInput` via:
//
//          ApigatewayBackendConfigArgs{...}
type ApigatewayBackendConfigInput interface {
	pulumi.Input

	ToApigatewayBackendConfigOutput() ApigatewayBackendConfigOutput
	ToApigatewayBackendConfigOutputWithContext(context.Context) ApigatewayBackendConfigOutput
}

// Configuration for all backends.
type ApigatewayBackendConfigArgs struct {
	// Google Cloud IAM service account used to sign OIDC tokens for backends that have authentication configured (https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.configs#backend). This may either be the Service Account's email (i.e. "{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com") or its full resource name (i.e. "projects/{PROJECT}/accounts/{UNIQUE_ID}"). This is most often used when the backend is a GCP resource such as a Cloud Run Service or an IAP-secured service. Note that this token is always sent as an authorization header bearer token. The audience of the OIDC token is configured in the associated Service Config in the BackendRule option (https://github.com/googleapis/googleapis/blob/master/google/api/backend.proto#L125).
	GoogleServiceAccount pulumi.StringPtrInput `pulumi:"googleServiceAccount"`
}

func (ApigatewayBackendConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayBackendConfig)(nil)).Elem()
}

func (i ApigatewayBackendConfigArgs) ToApigatewayBackendConfigOutput() ApigatewayBackendConfigOutput {
	return i.ToApigatewayBackendConfigOutputWithContext(context.Background())
}

func (i ApigatewayBackendConfigArgs) ToApigatewayBackendConfigOutputWithContext(ctx context.Context) ApigatewayBackendConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayBackendConfigOutput)
}

func (i ApigatewayBackendConfigArgs) ToApigatewayBackendConfigPtrOutput() ApigatewayBackendConfigPtrOutput {
	return i.ToApigatewayBackendConfigPtrOutputWithContext(context.Background())
}

func (i ApigatewayBackendConfigArgs) ToApigatewayBackendConfigPtrOutputWithContext(ctx context.Context) ApigatewayBackendConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayBackendConfigOutput).ToApigatewayBackendConfigPtrOutputWithContext(ctx)
}

// ApigatewayBackendConfigPtrInput is an input type that accepts ApigatewayBackendConfigArgs, ApigatewayBackendConfigPtr and ApigatewayBackendConfigPtrOutput values.
// You can construct a concrete instance of `ApigatewayBackendConfigPtrInput` via:
//
//          ApigatewayBackendConfigArgs{...}
//
//  or:
//
//          nil
type ApigatewayBackendConfigPtrInput interface {
	pulumi.Input

	ToApigatewayBackendConfigPtrOutput() ApigatewayBackendConfigPtrOutput
	ToApigatewayBackendConfigPtrOutputWithContext(context.Context) ApigatewayBackendConfigPtrOutput
}

type apigatewayBackendConfigPtrType ApigatewayBackendConfigArgs

func ApigatewayBackendConfigPtr(v *ApigatewayBackendConfigArgs) ApigatewayBackendConfigPtrInput {
	return (*apigatewayBackendConfigPtrType)(v)
}

func (*apigatewayBackendConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigatewayBackendConfig)(nil)).Elem()
}

func (i *apigatewayBackendConfigPtrType) ToApigatewayBackendConfigPtrOutput() ApigatewayBackendConfigPtrOutput {
	return i.ToApigatewayBackendConfigPtrOutputWithContext(context.Background())
}

func (i *apigatewayBackendConfigPtrType) ToApigatewayBackendConfigPtrOutputWithContext(ctx context.Context) ApigatewayBackendConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayBackendConfigPtrOutput)
}

// Configuration for all backends.
type ApigatewayBackendConfigOutput struct{ *pulumi.OutputState }

func (ApigatewayBackendConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayBackendConfig)(nil)).Elem()
}

func (o ApigatewayBackendConfigOutput) ToApigatewayBackendConfigOutput() ApigatewayBackendConfigOutput {
	return o
}

func (o ApigatewayBackendConfigOutput) ToApigatewayBackendConfigOutputWithContext(ctx context.Context) ApigatewayBackendConfigOutput {
	return o
}

func (o ApigatewayBackendConfigOutput) ToApigatewayBackendConfigPtrOutput() ApigatewayBackendConfigPtrOutput {
	return o.ToApigatewayBackendConfigPtrOutputWithContext(context.Background())
}

func (o ApigatewayBackendConfigOutput) ToApigatewayBackendConfigPtrOutputWithContext(ctx context.Context) ApigatewayBackendConfigPtrOutput {
	return o.ApplyT(func(v ApigatewayBackendConfig) *ApigatewayBackendConfig {
		return &v
	}).(ApigatewayBackendConfigPtrOutput)
}

// Google Cloud IAM service account used to sign OIDC tokens for backends that have authentication configured (https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.configs#backend). This may either be the Service Account's email (i.e. "{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com") or its full resource name (i.e. "projects/{PROJECT}/accounts/{UNIQUE_ID}"). This is most often used when the backend is a GCP resource such as a Cloud Run Service or an IAP-secured service. Note that this token is always sent as an authorization header bearer token. The audience of the OIDC token is configured in the associated Service Config in the BackendRule option (https://github.com/googleapis/googleapis/blob/master/google/api/backend.proto#L125).
func (o ApigatewayBackendConfigOutput) GoogleServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigatewayBackendConfig) *string { return v.GoogleServiceAccount }).(pulumi.StringPtrOutput)
}

type ApigatewayBackendConfigPtrOutput struct{ *pulumi.OutputState }

func (ApigatewayBackendConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigatewayBackendConfig)(nil)).Elem()
}

func (o ApigatewayBackendConfigPtrOutput) ToApigatewayBackendConfigPtrOutput() ApigatewayBackendConfigPtrOutput {
	return o
}

func (o ApigatewayBackendConfigPtrOutput) ToApigatewayBackendConfigPtrOutputWithContext(ctx context.Context) ApigatewayBackendConfigPtrOutput {
	return o
}

func (o ApigatewayBackendConfigPtrOutput) Elem() ApigatewayBackendConfigOutput {
	return o.ApplyT(func(v *ApigatewayBackendConfig) ApigatewayBackendConfig { return *v }).(ApigatewayBackendConfigOutput)
}

// Google Cloud IAM service account used to sign OIDC tokens for backends that have authentication configured (https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.configs#backend). This may either be the Service Account's email (i.e. "{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com") or its full resource name (i.e. "projects/{PROJECT}/accounts/{UNIQUE_ID}"). This is most often used when the backend is a GCP resource such as a Cloud Run Service or an IAP-secured service. Note that this token is always sent as an authorization header bearer token. The audience of the OIDC token is configured in the associated Service Config in the BackendRule option (https://github.com/googleapis/googleapis/blob/master/google/api/backend.proto#L125).
func (o ApigatewayBackendConfigPtrOutput) GoogleServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigatewayBackendConfig) *string {
		if v == nil {
			return nil
		}
		return v.GoogleServiceAccount
	}).(pulumi.StringPtrOutput)
}

// Configuration for all backends.
type ApigatewayBackendConfigResponse struct {
	// Google Cloud IAM service account used to sign OIDC tokens for backends that have authentication configured (https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.configs#backend). This may either be the Service Account's email (i.e. "{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com") or its full resource name (i.e. "projects/{PROJECT}/accounts/{UNIQUE_ID}"). This is most often used when the backend is a GCP resource such as a Cloud Run Service or an IAP-secured service. Note that this token is always sent as an authorization header bearer token. The audience of the OIDC token is configured in the associated Service Config in the BackendRule option (https://github.com/googleapis/googleapis/blob/master/google/api/backend.proto#L125).
	GoogleServiceAccount string `pulumi:"googleServiceAccount"`
}

// ApigatewayBackendConfigResponseInput is an input type that accepts ApigatewayBackendConfigResponseArgs and ApigatewayBackendConfigResponseOutput values.
// You can construct a concrete instance of `ApigatewayBackendConfigResponseInput` via:
//
//          ApigatewayBackendConfigResponseArgs{...}
type ApigatewayBackendConfigResponseInput interface {
	pulumi.Input

	ToApigatewayBackendConfigResponseOutput() ApigatewayBackendConfigResponseOutput
	ToApigatewayBackendConfigResponseOutputWithContext(context.Context) ApigatewayBackendConfigResponseOutput
}

// Configuration for all backends.
type ApigatewayBackendConfigResponseArgs struct {
	// Google Cloud IAM service account used to sign OIDC tokens for backends that have authentication configured (https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.configs#backend). This may either be the Service Account's email (i.e. "{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com") or its full resource name (i.e. "projects/{PROJECT}/accounts/{UNIQUE_ID}"). This is most often used when the backend is a GCP resource such as a Cloud Run Service or an IAP-secured service. Note that this token is always sent as an authorization header bearer token. The audience of the OIDC token is configured in the associated Service Config in the BackendRule option (https://github.com/googleapis/googleapis/blob/master/google/api/backend.proto#L125).
	GoogleServiceAccount pulumi.StringInput `pulumi:"googleServiceAccount"`
}

func (ApigatewayBackendConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayBackendConfigResponse)(nil)).Elem()
}

func (i ApigatewayBackendConfigResponseArgs) ToApigatewayBackendConfigResponseOutput() ApigatewayBackendConfigResponseOutput {
	return i.ToApigatewayBackendConfigResponseOutputWithContext(context.Background())
}

func (i ApigatewayBackendConfigResponseArgs) ToApigatewayBackendConfigResponseOutputWithContext(ctx context.Context) ApigatewayBackendConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayBackendConfigResponseOutput)
}

func (i ApigatewayBackendConfigResponseArgs) ToApigatewayBackendConfigResponsePtrOutput() ApigatewayBackendConfigResponsePtrOutput {
	return i.ToApigatewayBackendConfigResponsePtrOutputWithContext(context.Background())
}

func (i ApigatewayBackendConfigResponseArgs) ToApigatewayBackendConfigResponsePtrOutputWithContext(ctx context.Context) ApigatewayBackendConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayBackendConfigResponseOutput).ToApigatewayBackendConfigResponsePtrOutputWithContext(ctx)
}

// ApigatewayBackendConfigResponsePtrInput is an input type that accepts ApigatewayBackendConfigResponseArgs, ApigatewayBackendConfigResponsePtr and ApigatewayBackendConfigResponsePtrOutput values.
// You can construct a concrete instance of `ApigatewayBackendConfigResponsePtrInput` via:
//
//          ApigatewayBackendConfigResponseArgs{...}
//
//  or:
//
//          nil
type ApigatewayBackendConfigResponsePtrInput interface {
	pulumi.Input

	ToApigatewayBackendConfigResponsePtrOutput() ApigatewayBackendConfigResponsePtrOutput
	ToApigatewayBackendConfigResponsePtrOutputWithContext(context.Context) ApigatewayBackendConfigResponsePtrOutput
}

type apigatewayBackendConfigResponsePtrType ApigatewayBackendConfigResponseArgs

func ApigatewayBackendConfigResponsePtr(v *ApigatewayBackendConfigResponseArgs) ApigatewayBackendConfigResponsePtrInput {
	return (*apigatewayBackendConfigResponsePtrType)(v)
}

func (*apigatewayBackendConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigatewayBackendConfigResponse)(nil)).Elem()
}

func (i *apigatewayBackendConfigResponsePtrType) ToApigatewayBackendConfigResponsePtrOutput() ApigatewayBackendConfigResponsePtrOutput {
	return i.ToApigatewayBackendConfigResponsePtrOutputWithContext(context.Background())
}

func (i *apigatewayBackendConfigResponsePtrType) ToApigatewayBackendConfigResponsePtrOutputWithContext(ctx context.Context) ApigatewayBackendConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayBackendConfigResponsePtrOutput)
}

// Configuration for all backends.
type ApigatewayBackendConfigResponseOutput struct{ *pulumi.OutputState }

func (ApigatewayBackendConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayBackendConfigResponse)(nil)).Elem()
}

func (o ApigatewayBackendConfigResponseOutput) ToApigatewayBackendConfigResponseOutput() ApigatewayBackendConfigResponseOutput {
	return o
}

func (o ApigatewayBackendConfigResponseOutput) ToApigatewayBackendConfigResponseOutputWithContext(ctx context.Context) ApigatewayBackendConfigResponseOutput {
	return o
}

func (o ApigatewayBackendConfigResponseOutput) ToApigatewayBackendConfigResponsePtrOutput() ApigatewayBackendConfigResponsePtrOutput {
	return o.ToApigatewayBackendConfigResponsePtrOutputWithContext(context.Background())
}

func (o ApigatewayBackendConfigResponseOutput) ToApigatewayBackendConfigResponsePtrOutputWithContext(ctx context.Context) ApigatewayBackendConfigResponsePtrOutput {
	return o.ApplyT(func(v ApigatewayBackendConfigResponse) *ApigatewayBackendConfigResponse {
		return &v
	}).(ApigatewayBackendConfigResponsePtrOutput)
}

// Google Cloud IAM service account used to sign OIDC tokens for backends that have authentication configured (https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.configs#backend). This may either be the Service Account's email (i.e. "{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com") or its full resource name (i.e. "projects/{PROJECT}/accounts/{UNIQUE_ID}"). This is most often used when the backend is a GCP resource such as a Cloud Run Service or an IAP-secured service. Note that this token is always sent as an authorization header bearer token. The audience of the OIDC token is configured in the associated Service Config in the BackendRule option (https://github.com/googleapis/googleapis/blob/master/google/api/backend.proto#L125).
func (o ApigatewayBackendConfigResponseOutput) GoogleServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v ApigatewayBackendConfigResponse) string { return v.GoogleServiceAccount }).(pulumi.StringOutput)
}

type ApigatewayBackendConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ApigatewayBackendConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigatewayBackendConfigResponse)(nil)).Elem()
}

func (o ApigatewayBackendConfigResponsePtrOutput) ToApigatewayBackendConfigResponsePtrOutput() ApigatewayBackendConfigResponsePtrOutput {
	return o
}

func (o ApigatewayBackendConfigResponsePtrOutput) ToApigatewayBackendConfigResponsePtrOutputWithContext(ctx context.Context) ApigatewayBackendConfigResponsePtrOutput {
	return o
}

func (o ApigatewayBackendConfigResponsePtrOutput) Elem() ApigatewayBackendConfigResponseOutput {
	return o.ApplyT(func(v *ApigatewayBackendConfigResponse) ApigatewayBackendConfigResponse { return *v }).(ApigatewayBackendConfigResponseOutput)
}

// Google Cloud IAM service account used to sign OIDC tokens for backends that have authentication configured (https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.configs#backend). This may either be the Service Account's email (i.e. "{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com") or its full resource name (i.e. "projects/{PROJECT}/accounts/{UNIQUE_ID}"). This is most often used when the backend is a GCP resource such as a Cloud Run Service or an IAP-secured service. Note that this token is always sent as an authorization header bearer token. The audience of the OIDC token is configured in the associated Service Config in the BackendRule option (https://github.com/googleapis/googleapis/blob/master/google/api/backend.proto#L125).
func (o ApigatewayBackendConfigResponsePtrOutput) GoogleServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigatewayBackendConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GoogleServiceAccount
	}).(pulumi.StringPtrOutput)
}

// Associates `members` with a `role`.
type ApigatewayBinding struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition *ApigatewayExpr `pulumi:"condition"`
	// Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
	Members []string `pulumi:"members"`
	// Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role *string `pulumi:"role"`
}

// ApigatewayBindingInput is an input type that accepts ApigatewayBindingArgs and ApigatewayBindingOutput values.
// You can construct a concrete instance of `ApigatewayBindingInput` via:
//
//          ApigatewayBindingArgs{...}
type ApigatewayBindingInput interface {
	pulumi.Input

	ToApigatewayBindingOutput() ApigatewayBindingOutput
	ToApigatewayBindingOutputWithContext(context.Context) ApigatewayBindingOutput
}

// Associates `members` with a `role`.
type ApigatewayBindingArgs struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ApigatewayExprPtrInput `pulumi:"condition"`
	// Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (ApigatewayBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayBinding)(nil)).Elem()
}

func (i ApigatewayBindingArgs) ToApigatewayBindingOutput() ApigatewayBindingOutput {
	return i.ToApigatewayBindingOutputWithContext(context.Background())
}

func (i ApigatewayBindingArgs) ToApigatewayBindingOutputWithContext(ctx context.Context) ApigatewayBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayBindingOutput)
}

// ApigatewayBindingArrayInput is an input type that accepts ApigatewayBindingArray and ApigatewayBindingArrayOutput values.
// You can construct a concrete instance of `ApigatewayBindingArrayInput` via:
//
//          ApigatewayBindingArray{ ApigatewayBindingArgs{...} }
type ApigatewayBindingArrayInput interface {
	pulumi.Input

	ToApigatewayBindingArrayOutput() ApigatewayBindingArrayOutput
	ToApigatewayBindingArrayOutputWithContext(context.Context) ApigatewayBindingArrayOutput
}

type ApigatewayBindingArray []ApigatewayBindingInput

func (ApigatewayBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayBinding)(nil)).Elem()
}

func (i ApigatewayBindingArray) ToApigatewayBindingArrayOutput() ApigatewayBindingArrayOutput {
	return i.ToApigatewayBindingArrayOutputWithContext(context.Background())
}

func (i ApigatewayBindingArray) ToApigatewayBindingArrayOutputWithContext(ctx context.Context) ApigatewayBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayBindingArrayOutput)
}

// Associates `members` with a `role`.
type ApigatewayBindingOutput struct{ *pulumi.OutputState }

func (ApigatewayBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayBinding)(nil)).Elem()
}

func (o ApigatewayBindingOutput) ToApigatewayBindingOutput() ApigatewayBindingOutput {
	return o
}

func (o ApigatewayBindingOutput) ToApigatewayBindingOutputWithContext(ctx context.Context) ApigatewayBindingOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o ApigatewayBindingOutput) Condition() ApigatewayExprPtrOutput {
	return o.ApplyT(func(v ApigatewayBinding) *ApigatewayExpr { return v.Condition }).(ApigatewayExprPtrOutput)
}

// Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
func (o ApigatewayBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApigatewayBinding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o ApigatewayBindingOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigatewayBinding) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type ApigatewayBindingArrayOutput struct{ *pulumi.OutputState }

func (ApigatewayBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayBinding)(nil)).Elem()
}

func (o ApigatewayBindingArrayOutput) ToApigatewayBindingArrayOutput() ApigatewayBindingArrayOutput {
	return o
}

func (o ApigatewayBindingArrayOutput) ToApigatewayBindingArrayOutputWithContext(ctx context.Context) ApigatewayBindingArrayOutput {
	return o
}

func (o ApigatewayBindingArrayOutput) Index(i pulumi.IntInput) ApigatewayBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigatewayBinding {
		return vs[0].([]ApigatewayBinding)[vs[1].(int)]
	}).(ApigatewayBindingOutput)
}

// Associates `members` with a `role`.
type ApigatewayBindingResponse struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ApigatewayExprResponse `pulumi:"condition"`
	// Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
	Members []string `pulumi:"members"`
	// Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role string `pulumi:"role"`
}

// ApigatewayBindingResponseInput is an input type that accepts ApigatewayBindingResponseArgs and ApigatewayBindingResponseOutput values.
// You can construct a concrete instance of `ApigatewayBindingResponseInput` via:
//
//          ApigatewayBindingResponseArgs{...}
type ApigatewayBindingResponseInput interface {
	pulumi.Input

	ToApigatewayBindingResponseOutput() ApigatewayBindingResponseOutput
	ToApigatewayBindingResponseOutputWithContext(context.Context) ApigatewayBindingResponseOutput
}

// Associates `members` with a `role`.
type ApigatewayBindingResponseArgs struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ApigatewayExprResponseInput `pulumi:"condition"`
	// Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role pulumi.StringInput `pulumi:"role"`
}

func (ApigatewayBindingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayBindingResponse)(nil)).Elem()
}

func (i ApigatewayBindingResponseArgs) ToApigatewayBindingResponseOutput() ApigatewayBindingResponseOutput {
	return i.ToApigatewayBindingResponseOutputWithContext(context.Background())
}

func (i ApigatewayBindingResponseArgs) ToApigatewayBindingResponseOutputWithContext(ctx context.Context) ApigatewayBindingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayBindingResponseOutput)
}

// ApigatewayBindingResponseArrayInput is an input type that accepts ApigatewayBindingResponseArray and ApigatewayBindingResponseArrayOutput values.
// You can construct a concrete instance of `ApigatewayBindingResponseArrayInput` via:
//
//          ApigatewayBindingResponseArray{ ApigatewayBindingResponseArgs{...} }
type ApigatewayBindingResponseArrayInput interface {
	pulumi.Input

	ToApigatewayBindingResponseArrayOutput() ApigatewayBindingResponseArrayOutput
	ToApigatewayBindingResponseArrayOutputWithContext(context.Context) ApigatewayBindingResponseArrayOutput
}

type ApigatewayBindingResponseArray []ApigatewayBindingResponseInput

func (ApigatewayBindingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayBindingResponse)(nil)).Elem()
}

func (i ApigatewayBindingResponseArray) ToApigatewayBindingResponseArrayOutput() ApigatewayBindingResponseArrayOutput {
	return i.ToApigatewayBindingResponseArrayOutputWithContext(context.Background())
}

func (i ApigatewayBindingResponseArray) ToApigatewayBindingResponseArrayOutputWithContext(ctx context.Context) ApigatewayBindingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayBindingResponseArrayOutput)
}

// Associates `members` with a `role`.
type ApigatewayBindingResponseOutput struct{ *pulumi.OutputState }

func (ApigatewayBindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayBindingResponse)(nil)).Elem()
}

func (o ApigatewayBindingResponseOutput) ToApigatewayBindingResponseOutput() ApigatewayBindingResponseOutput {
	return o
}

func (o ApigatewayBindingResponseOutput) ToApigatewayBindingResponseOutputWithContext(ctx context.Context) ApigatewayBindingResponseOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o ApigatewayBindingResponseOutput) Condition() ApigatewayExprResponseOutput {
	return o.ApplyT(func(v ApigatewayBindingResponse) ApigatewayExprResponse { return v.Condition }).(ApigatewayExprResponseOutput)
}

// Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
func (o ApigatewayBindingResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApigatewayBindingResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o ApigatewayBindingResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v ApigatewayBindingResponse) string { return v.Role }).(pulumi.StringOutput)
}

type ApigatewayBindingResponseArrayOutput struct{ *pulumi.OutputState }

func (ApigatewayBindingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayBindingResponse)(nil)).Elem()
}

func (o ApigatewayBindingResponseArrayOutput) ToApigatewayBindingResponseArrayOutput() ApigatewayBindingResponseArrayOutput {
	return o
}

func (o ApigatewayBindingResponseArrayOutput) ToApigatewayBindingResponseArrayOutputWithContext(ctx context.Context) ApigatewayBindingResponseArrayOutput {
	return o
}

func (o ApigatewayBindingResponseArrayOutput) Index(i pulumi.IntInput) ApigatewayBindingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigatewayBindingResponse {
		return vs[0].([]ApigatewayBindingResponse)[vs[1].(int)]
	}).(ApigatewayBindingResponseOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ApigatewayExpr struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression *string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// ApigatewayExprInput is an input type that accepts ApigatewayExprArgs and ApigatewayExprOutput values.
// You can construct a concrete instance of `ApigatewayExprInput` via:
//
//          ApigatewayExprArgs{...}
type ApigatewayExprInput interface {
	pulumi.Input

	ToApigatewayExprOutput() ApigatewayExprOutput
	ToApigatewayExprOutputWithContext(context.Context) ApigatewayExprOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ApigatewayExprArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (ApigatewayExprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayExpr)(nil)).Elem()
}

func (i ApigatewayExprArgs) ToApigatewayExprOutput() ApigatewayExprOutput {
	return i.ToApigatewayExprOutputWithContext(context.Background())
}

func (i ApigatewayExprArgs) ToApigatewayExprOutputWithContext(ctx context.Context) ApigatewayExprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayExprOutput)
}

func (i ApigatewayExprArgs) ToApigatewayExprPtrOutput() ApigatewayExprPtrOutput {
	return i.ToApigatewayExprPtrOutputWithContext(context.Background())
}

func (i ApigatewayExprArgs) ToApigatewayExprPtrOutputWithContext(ctx context.Context) ApigatewayExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayExprOutput).ToApigatewayExprPtrOutputWithContext(ctx)
}

// ApigatewayExprPtrInput is an input type that accepts ApigatewayExprArgs, ApigatewayExprPtr and ApigatewayExprPtrOutput values.
// You can construct a concrete instance of `ApigatewayExprPtrInput` via:
//
//          ApigatewayExprArgs{...}
//
//  or:
//
//          nil
type ApigatewayExprPtrInput interface {
	pulumi.Input

	ToApigatewayExprPtrOutput() ApigatewayExprPtrOutput
	ToApigatewayExprPtrOutputWithContext(context.Context) ApigatewayExprPtrOutput
}

type apigatewayExprPtrType ApigatewayExprArgs

func ApigatewayExprPtr(v *ApigatewayExprArgs) ApigatewayExprPtrInput {
	return (*apigatewayExprPtrType)(v)
}

func (*apigatewayExprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigatewayExpr)(nil)).Elem()
}

func (i *apigatewayExprPtrType) ToApigatewayExprPtrOutput() ApigatewayExprPtrOutput {
	return i.ToApigatewayExprPtrOutputWithContext(context.Background())
}

func (i *apigatewayExprPtrType) ToApigatewayExprPtrOutputWithContext(ctx context.Context) ApigatewayExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayExprPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ApigatewayExprOutput struct{ *pulumi.OutputState }

func (ApigatewayExprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayExpr)(nil)).Elem()
}

func (o ApigatewayExprOutput) ToApigatewayExprOutput() ApigatewayExprOutput {
	return o
}

func (o ApigatewayExprOutput) ToApigatewayExprOutputWithContext(ctx context.Context) ApigatewayExprOutput {
	return o
}

func (o ApigatewayExprOutput) ToApigatewayExprPtrOutput() ApigatewayExprPtrOutput {
	return o.ToApigatewayExprPtrOutputWithContext(context.Background())
}

func (o ApigatewayExprOutput) ToApigatewayExprPtrOutputWithContext(ctx context.Context) ApigatewayExprPtrOutput {
	return o.ApplyT(func(v ApigatewayExpr) *ApigatewayExpr {
		return &v
	}).(ApigatewayExprPtrOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ApigatewayExprOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigatewayExpr) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ApigatewayExprOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigatewayExpr) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ApigatewayExprOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigatewayExpr) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ApigatewayExprOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigatewayExpr) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ApigatewayExprPtrOutput struct{ *pulumi.OutputState }

func (ApigatewayExprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigatewayExpr)(nil)).Elem()
}

func (o ApigatewayExprPtrOutput) ToApigatewayExprPtrOutput() ApigatewayExprPtrOutput {
	return o
}

func (o ApigatewayExprPtrOutput) ToApigatewayExprPtrOutputWithContext(ctx context.Context) ApigatewayExprPtrOutput {
	return o
}

func (o ApigatewayExprPtrOutput) Elem() ApigatewayExprOutput {
	return o.ApplyT(func(v *ApigatewayExpr) ApigatewayExpr { return *v }).(ApigatewayExprOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ApigatewayExprPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigatewayExpr) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ApigatewayExprPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigatewayExpr) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ApigatewayExprPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigatewayExpr) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ApigatewayExprPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigatewayExpr) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ApigatewayExprResponse struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title string `pulumi:"title"`
}

// ApigatewayExprResponseInput is an input type that accepts ApigatewayExprResponseArgs and ApigatewayExprResponseOutput values.
// You can construct a concrete instance of `ApigatewayExprResponseInput` via:
//
//          ApigatewayExprResponseArgs{...}
type ApigatewayExprResponseInput interface {
	pulumi.Input

	ToApigatewayExprResponseOutput() ApigatewayExprResponseOutput
	ToApigatewayExprResponseOutputWithContext(context.Context) ApigatewayExprResponseOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ApigatewayExprResponseArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringInput `pulumi:"title"`
}

func (ApigatewayExprResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayExprResponse)(nil)).Elem()
}

func (i ApigatewayExprResponseArgs) ToApigatewayExprResponseOutput() ApigatewayExprResponseOutput {
	return i.ToApigatewayExprResponseOutputWithContext(context.Background())
}

func (i ApigatewayExprResponseArgs) ToApigatewayExprResponseOutputWithContext(ctx context.Context) ApigatewayExprResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayExprResponseOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ApigatewayExprResponseOutput struct{ *pulumi.OutputState }

func (ApigatewayExprResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayExprResponse)(nil)).Elem()
}

func (o ApigatewayExprResponseOutput) ToApigatewayExprResponseOutput() ApigatewayExprResponseOutput {
	return o
}

func (o ApigatewayExprResponseOutput) ToApigatewayExprResponseOutputWithContext(ctx context.Context) ApigatewayExprResponseOutput {
	return o
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ApigatewayExprResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ApigatewayExprResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ApigatewayExprResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ApigatewayExprResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ApigatewayExprResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ApigatewayExprResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ApigatewayExprResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ApigatewayExprResponse) string { return v.Title }).(pulumi.StringOutput)
}

// Configuration settings for Gateways.
type ApigatewayGatewayConfig struct {
	// Required. Backend settings that are applied to all backends of the Gateway.
	BackendConfig *ApigatewayBackendConfig `pulumi:"backendConfig"`
}

// ApigatewayGatewayConfigInput is an input type that accepts ApigatewayGatewayConfigArgs and ApigatewayGatewayConfigOutput values.
// You can construct a concrete instance of `ApigatewayGatewayConfigInput` via:
//
//          ApigatewayGatewayConfigArgs{...}
type ApigatewayGatewayConfigInput interface {
	pulumi.Input

	ToApigatewayGatewayConfigOutput() ApigatewayGatewayConfigOutput
	ToApigatewayGatewayConfigOutputWithContext(context.Context) ApigatewayGatewayConfigOutput
}

// Configuration settings for Gateways.
type ApigatewayGatewayConfigArgs struct {
	// Required. Backend settings that are applied to all backends of the Gateway.
	BackendConfig ApigatewayBackendConfigPtrInput `pulumi:"backendConfig"`
}

func (ApigatewayGatewayConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayGatewayConfig)(nil)).Elem()
}

func (i ApigatewayGatewayConfigArgs) ToApigatewayGatewayConfigOutput() ApigatewayGatewayConfigOutput {
	return i.ToApigatewayGatewayConfigOutputWithContext(context.Background())
}

func (i ApigatewayGatewayConfigArgs) ToApigatewayGatewayConfigOutputWithContext(ctx context.Context) ApigatewayGatewayConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayGatewayConfigOutput)
}

func (i ApigatewayGatewayConfigArgs) ToApigatewayGatewayConfigPtrOutput() ApigatewayGatewayConfigPtrOutput {
	return i.ToApigatewayGatewayConfigPtrOutputWithContext(context.Background())
}

func (i ApigatewayGatewayConfigArgs) ToApigatewayGatewayConfigPtrOutputWithContext(ctx context.Context) ApigatewayGatewayConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayGatewayConfigOutput).ToApigatewayGatewayConfigPtrOutputWithContext(ctx)
}

// ApigatewayGatewayConfigPtrInput is an input type that accepts ApigatewayGatewayConfigArgs, ApigatewayGatewayConfigPtr and ApigatewayGatewayConfigPtrOutput values.
// You can construct a concrete instance of `ApigatewayGatewayConfigPtrInput` via:
//
//          ApigatewayGatewayConfigArgs{...}
//
//  or:
//
//          nil
type ApigatewayGatewayConfigPtrInput interface {
	pulumi.Input

	ToApigatewayGatewayConfigPtrOutput() ApigatewayGatewayConfigPtrOutput
	ToApigatewayGatewayConfigPtrOutputWithContext(context.Context) ApigatewayGatewayConfigPtrOutput
}

type apigatewayGatewayConfigPtrType ApigatewayGatewayConfigArgs

func ApigatewayGatewayConfigPtr(v *ApigatewayGatewayConfigArgs) ApigatewayGatewayConfigPtrInput {
	return (*apigatewayGatewayConfigPtrType)(v)
}

func (*apigatewayGatewayConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigatewayGatewayConfig)(nil)).Elem()
}

func (i *apigatewayGatewayConfigPtrType) ToApigatewayGatewayConfigPtrOutput() ApigatewayGatewayConfigPtrOutput {
	return i.ToApigatewayGatewayConfigPtrOutputWithContext(context.Background())
}

func (i *apigatewayGatewayConfigPtrType) ToApigatewayGatewayConfigPtrOutputWithContext(ctx context.Context) ApigatewayGatewayConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayGatewayConfigPtrOutput)
}

// Configuration settings for Gateways.
type ApigatewayGatewayConfigOutput struct{ *pulumi.OutputState }

func (ApigatewayGatewayConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayGatewayConfig)(nil)).Elem()
}

func (o ApigatewayGatewayConfigOutput) ToApigatewayGatewayConfigOutput() ApigatewayGatewayConfigOutput {
	return o
}

func (o ApigatewayGatewayConfigOutput) ToApigatewayGatewayConfigOutputWithContext(ctx context.Context) ApigatewayGatewayConfigOutput {
	return o
}

func (o ApigatewayGatewayConfigOutput) ToApigatewayGatewayConfigPtrOutput() ApigatewayGatewayConfigPtrOutput {
	return o.ToApigatewayGatewayConfigPtrOutputWithContext(context.Background())
}

func (o ApigatewayGatewayConfigOutput) ToApigatewayGatewayConfigPtrOutputWithContext(ctx context.Context) ApigatewayGatewayConfigPtrOutput {
	return o.ApplyT(func(v ApigatewayGatewayConfig) *ApigatewayGatewayConfig {
		return &v
	}).(ApigatewayGatewayConfigPtrOutput)
}

// Required. Backend settings that are applied to all backends of the Gateway.
func (o ApigatewayGatewayConfigOutput) BackendConfig() ApigatewayBackendConfigPtrOutput {
	return o.ApplyT(func(v ApigatewayGatewayConfig) *ApigatewayBackendConfig { return v.BackendConfig }).(ApigatewayBackendConfigPtrOutput)
}

type ApigatewayGatewayConfigPtrOutput struct{ *pulumi.OutputState }

func (ApigatewayGatewayConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigatewayGatewayConfig)(nil)).Elem()
}

func (o ApigatewayGatewayConfigPtrOutput) ToApigatewayGatewayConfigPtrOutput() ApigatewayGatewayConfigPtrOutput {
	return o
}

func (o ApigatewayGatewayConfigPtrOutput) ToApigatewayGatewayConfigPtrOutputWithContext(ctx context.Context) ApigatewayGatewayConfigPtrOutput {
	return o
}

func (o ApigatewayGatewayConfigPtrOutput) Elem() ApigatewayGatewayConfigOutput {
	return o.ApplyT(func(v *ApigatewayGatewayConfig) ApigatewayGatewayConfig { return *v }).(ApigatewayGatewayConfigOutput)
}

// Required. Backend settings that are applied to all backends of the Gateway.
func (o ApigatewayGatewayConfigPtrOutput) BackendConfig() ApigatewayBackendConfigPtrOutput {
	return o.ApplyT(func(v *ApigatewayGatewayConfig) *ApigatewayBackendConfig {
		if v == nil {
			return nil
		}
		return v.BackendConfig
	}).(ApigatewayBackendConfigPtrOutput)
}

// Configuration settings for Gateways.
type ApigatewayGatewayConfigResponse struct {
	// Required. Backend settings that are applied to all backends of the Gateway.
	BackendConfig ApigatewayBackendConfigResponse `pulumi:"backendConfig"`
}

// ApigatewayGatewayConfigResponseInput is an input type that accepts ApigatewayGatewayConfigResponseArgs and ApigatewayGatewayConfigResponseOutput values.
// You can construct a concrete instance of `ApigatewayGatewayConfigResponseInput` via:
//
//          ApigatewayGatewayConfigResponseArgs{...}
type ApigatewayGatewayConfigResponseInput interface {
	pulumi.Input

	ToApigatewayGatewayConfigResponseOutput() ApigatewayGatewayConfigResponseOutput
	ToApigatewayGatewayConfigResponseOutputWithContext(context.Context) ApigatewayGatewayConfigResponseOutput
}

// Configuration settings for Gateways.
type ApigatewayGatewayConfigResponseArgs struct {
	// Required. Backend settings that are applied to all backends of the Gateway.
	BackendConfig ApigatewayBackendConfigResponseInput `pulumi:"backendConfig"`
}

func (ApigatewayGatewayConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayGatewayConfigResponse)(nil)).Elem()
}

func (i ApigatewayGatewayConfigResponseArgs) ToApigatewayGatewayConfigResponseOutput() ApigatewayGatewayConfigResponseOutput {
	return i.ToApigatewayGatewayConfigResponseOutputWithContext(context.Background())
}

func (i ApigatewayGatewayConfigResponseArgs) ToApigatewayGatewayConfigResponseOutputWithContext(ctx context.Context) ApigatewayGatewayConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayGatewayConfigResponseOutput)
}

func (i ApigatewayGatewayConfigResponseArgs) ToApigatewayGatewayConfigResponsePtrOutput() ApigatewayGatewayConfigResponsePtrOutput {
	return i.ToApigatewayGatewayConfigResponsePtrOutputWithContext(context.Background())
}

func (i ApigatewayGatewayConfigResponseArgs) ToApigatewayGatewayConfigResponsePtrOutputWithContext(ctx context.Context) ApigatewayGatewayConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayGatewayConfigResponseOutput).ToApigatewayGatewayConfigResponsePtrOutputWithContext(ctx)
}

// ApigatewayGatewayConfigResponsePtrInput is an input type that accepts ApigatewayGatewayConfigResponseArgs, ApigatewayGatewayConfigResponsePtr and ApigatewayGatewayConfigResponsePtrOutput values.
// You can construct a concrete instance of `ApigatewayGatewayConfigResponsePtrInput` via:
//
//          ApigatewayGatewayConfigResponseArgs{...}
//
//  or:
//
//          nil
type ApigatewayGatewayConfigResponsePtrInput interface {
	pulumi.Input

	ToApigatewayGatewayConfigResponsePtrOutput() ApigatewayGatewayConfigResponsePtrOutput
	ToApigatewayGatewayConfigResponsePtrOutputWithContext(context.Context) ApigatewayGatewayConfigResponsePtrOutput
}

type apigatewayGatewayConfigResponsePtrType ApigatewayGatewayConfigResponseArgs

func ApigatewayGatewayConfigResponsePtr(v *ApigatewayGatewayConfigResponseArgs) ApigatewayGatewayConfigResponsePtrInput {
	return (*apigatewayGatewayConfigResponsePtrType)(v)
}

func (*apigatewayGatewayConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigatewayGatewayConfigResponse)(nil)).Elem()
}

func (i *apigatewayGatewayConfigResponsePtrType) ToApigatewayGatewayConfigResponsePtrOutput() ApigatewayGatewayConfigResponsePtrOutput {
	return i.ToApigatewayGatewayConfigResponsePtrOutputWithContext(context.Background())
}

func (i *apigatewayGatewayConfigResponsePtrType) ToApigatewayGatewayConfigResponsePtrOutputWithContext(ctx context.Context) ApigatewayGatewayConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayGatewayConfigResponsePtrOutput)
}

// Configuration settings for Gateways.
type ApigatewayGatewayConfigResponseOutput struct{ *pulumi.OutputState }

func (ApigatewayGatewayConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayGatewayConfigResponse)(nil)).Elem()
}

func (o ApigatewayGatewayConfigResponseOutput) ToApigatewayGatewayConfigResponseOutput() ApigatewayGatewayConfigResponseOutput {
	return o
}

func (o ApigatewayGatewayConfigResponseOutput) ToApigatewayGatewayConfigResponseOutputWithContext(ctx context.Context) ApigatewayGatewayConfigResponseOutput {
	return o
}

func (o ApigatewayGatewayConfigResponseOutput) ToApigatewayGatewayConfigResponsePtrOutput() ApigatewayGatewayConfigResponsePtrOutput {
	return o.ToApigatewayGatewayConfigResponsePtrOutputWithContext(context.Background())
}

func (o ApigatewayGatewayConfigResponseOutput) ToApigatewayGatewayConfigResponsePtrOutputWithContext(ctx context.Context) ApigatewayGatewayConfigResponsePtrOutput {
	return o.ApplyT(func(v ApigatewayGatewayConfigResponse) *ApigatewayGatewayConfigResponse {
		return &v
	}).(ApigatewayGatewayConfigResponsePtrOutput)
}

// Required. Backend settings that are applied to all backends of the Gateway.
func (o ApigatewayGatewayConfigResponseOutput) BackendConfig() ApigatewayBackendConfigResponseOutput {
	return o.ApplyT(func(v ApigatewayGatewayConfigResponse) ApigatewayBackendConfigResponse { return v.BackendConfig }).(ApigatewayBackendConfigResponseOutput)
}

type ApigatewayGatewayConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ApigatewayGatewayConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigatewayGatewayConfigResponse)(nil)).Elem()
}

func (o ApigatewayGatewayConfigResponsePtrOutput) ToApigatewayGatewayConfigResponsePtrOutput() ApigatewayGatewayConfigResponsePtrOutput {
	return o
}

func (o ApigatewayGatewayConfigResponsePtrOutput) ToApigatewayGatewayConfigResponsePtrOutputWithContext(ctx context.Context) ApigatewayGatewayConfigResponsePtrOutput {
	return o
}

func (o ApigatewayGatewayConfigResponsePtrOutput) Elem() ApigatewayGatewayConfigResponseOutput {
	return o.ApplyT(func(v *ApigatewayGatewayConfigResponse) ApigatewayGatewayConfigResponse { return *v }).(ApigatewayGatewayConfigResponseOutput)
}

// Required. Backend settings that are applied to all backends of the Gateway.
func (o ApigatewayGatewayConfigResponsePtrOutput) BackendConfig() ApigatewayBackendConfigResponsePtrOutput {
	return o.ApplyT(func(v *ApigatewayGatewayConfigResponse) *ApigatewayBackendConfigResponse {
		if v == nil {
			return nil
		}
		return &v.BackendConfig
	}).(ApigatewayBackendConfigResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApigatewayApiConfigFileOutput{})
	pulumi.RegisterOutputType(ApigatewayApiConfigFilePtrOutput{})
	pulumi.RegisterOutputType(ApigatewayApiConfigFileArrayOutput{})
	pulumi.RegisterOutputType(ApigatewayApiConfigFileResponseOutput{})
	pulumi.RegisterOutputType(ApigatewayApiConfigFileResponseArrayOutput{})
	pulumi.RegisterOutputType(ApigatewayApiConfigGrpcServiceDefinitionOutput{})
	pulumi.RegisterOutputType(ApigatewayApiConfigGrpcServiceDefinitionArrayOutput{})
	pulumi.RegisterOutputType(ApigatewayApiConfigGrpcServiceDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ApigatewayApiConfigGrpcServiceDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(ApigatewayApiConfigOpenApiDocumentOutput{})
	pulumi.RegisterOutputType(ApigatewayApiConfigOpenApiDocumentArrayOutput{})
	pulumi.RegisterOutputType(ApigatewayApiConfigOpenApiDocumentResponseOutput{})
	pulumi.RegisterOutputType(ApigatewayApiConfigOpenApiDocumentResponseArrayOutput{})
	pulumi.RegisterOutputType(ApigatewayAuditConfigOutput{})
	pulumi.RegisterOutputType(ApigatewayAuditConfigArrayOutput{})
	pulumi.RegisterOutputType(ApigatewayAuditConfigResponseOutput{})
	pulumi.RegisterOutputType(ApigatewayAuditConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(ApigatewayAuditLogConfigOutput{})
	pulumi.RegisterOutputType(ApigatewayAuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(ApigatewayAuditLogConfigResponseOutput{})
	pulumi.RegisterOutputType(ApigatewayAuditLogConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(ApigatewayBackendConfigOutput{})
	pulumi.RegisterOutputType(ApigatewayBackendConfigPtrOutput{})
	pulumi.RegisterOutputType(ApigatewayBackendConfigResponseOutput{})
	pulumi.RegisterOutputType(ApigatewayBackendConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ApigatewayBindingOutput{})
	pulumi.RegisterOutputType(ApigatewayBindingArrayOutput{})
	pulumi.RegisterOutputType(ApigatewayBindingResponseOutput{})
	pulumi.RegisterOutputType(ApigatewayBindingResponseArrayOutput{})
	pulumi.RegisterOutputType(ApigatewayExprOutput{})
	pulumi.RegisterOutputType(ApigatewayExprPtrOutput{})
	pulumi.RegisterOutputType(ApigatewayExprResponseOutput{})
	pulumi.RegisterOutputType(ApigatewayGatewayConfigOutput{})
	pulumi.RegisterOutputType(ApigatewayGatewayConfigPtrOutput{})
	pulumi.RegisterOutputType(ApigatewayGatewayConfigResponseOutput{})
	pulumi.RegisterOutputType(ApigatewayGatewayConfigResponsePtrOutput{})
}
