// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new ResourceRecordSet.
type ManagedZoneRrset struct {
	pulumi.CustomResourceState

	Kind pulumi.StringOutput `pulumi:"kind"`
	// For example, www.example.com.
	Name pulumi.StringOutput `pulumi:"name"`
	// As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples.
	Rrdatas pulumi.StringArrayOutput `pulumi:"rrdatas"`
	// As defined in RFC 4034 (section 3.2).
	SignatureRrdatas pulumi.StringArrayOutput `pulumi:"signatureRrdatas"`
	// Number of seconds that this ResourceRecordSet can be cached by resolvers.
	Ttl pulumi.IntOutput `pulumi:"ttl"`
	// The identifier of a supported record type. See the list of Supported DNS record types.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewManagedZoneRrset registers a new resource with the given unique name, arguments, and options.
func NewManagedZoneRrset(ctx *pulumi.Context,
	name string, args *ManagedZoneRrsetArgs, opts ...pulumi.ResourceOption) (*ManagedZoneRrset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedZone == nil {
		return nil, errors.New("invalid value for required argument 'ManagedZone'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource ManagedZoneRrset
	err := ctx.RegisterResource("gcp-native:dns/v1:ManagedZoneRrset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedZoneRrset gets an existing ManagedZoneRrset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedZoneRrset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedZoneRrsetState, opts ...pulumi.ResourceOption) (*ManagedZoneRrset, error) {
	var resource ManagedZoneRrset
	err := ctx.ReadResource("gcp-native:dns/v1:ManagedZoneRrset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedZoneRrset resources.
type managedZoneRrsetState struct {
	Kind *string `pulumi:"kind"`
	// For example, www.example.com.
	Name *string `pulumi:"name"`
	// As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples.
	Rrdatas []string `pulumi:"rrdatas"`
	// As defined in RFC 4034 (section 3.2).
	SignatureRrdatas []string `pulumi:"signatureRrdatas"`
	// Number of seconds that this ResourceRecordSet can be cached by resolvers.
	Ttl *int `pulumi:"ttl"`
	// The identifier of a supported record type. See the list of Supported DNS record types.
	Type *string `pulumi:"type"`
}

type ManagedZoneRrsetState struct {
	Kind pulumi.StringPtrInput
	// For example, www.example.com.
	Name pulumi.StringPtrInput
	// As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples.
	Rrdatas pulumi.StringArrayInput
	// As defined in RFC 4034 (section 3.2).
	SignatureRrdatas pulumi.StringArrayInput
	// Number of seconds that this ResourceRecordSet can be cached by resolvers.
	Ttl pulumi.IntPtrInput
	// The identifier of a supported record type. See the list of Supported DNS record types.
	Type pulumi.StringPtrInput
}

func (ManagedZoneRrsetState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedZoneRrsetState)(nil)).Elem()
}

type managedZoneRrsetArgs struct {
	Kind        *string `pulumi:"kind"`
	ManagedZone string  `pulumi:"managedZone"`
	// For example, www.example.com.
	Name    string `pulumi:"name"`
	Project string `pulumi:"project"`
	// As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples.
	Rrdatas []string `pulumi:"rrdatas"`
	// As defined in RFC 4034 (section 3.2).
	SignatureRrdatas []string `pulumi:"signatureRrdatas"`
	// Number of seconds that this ResourceRecordSet can be cached by resolvers.
	Ttl *int `pulumi:"ttl"`
	// The identifier of a supported record type. See the list of Supported DNS record types.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a ManagedZoneRrset resource.
type ManagedZoneRrsetArgs struct {
	Kind        pulumi.StringPtrInput
	ManagedZone pulumi.StringInput
	// For example, www.example.com.
	Name    pulumi.StringInput
	Project pulumi.StringInput
	// As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples.
	Rrdatas pulumi.StringArrayInput
	// As defined in RFC 4034 (section 3.2).
	SignatureRrdatas pulumi.StringArrayInput
	// Number of seconds that this ResourceRecordSet can be cached by resolvers.
	Ttl pulumi.IntPtrInput
	// The identifier of a supported record type. See the list of Supported DNS record types.
	Type pulumi.StringInput
}

func (ManagedZoneRrsetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedZoneRrsetArgs)(nil)).Elem()
}

type ManagedZoneRrsetInput interface {
	pulumi.Input

	ToManagedZoneRrsetOutput() ManagedZoneRrsetOutput
	ToManagedZoneRrsetOutputWithContext(ctx context.Context) ManagedZoneRrsetOutput
}

func (*ManagedZoneRrset) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneRrset)(nil))
}

func (i *ManagedZoneRrset) ToManagedZoneRrsetOutput() ManagedZoneRrsetOutput {
	return i.ToManagedZoneRrsetOutputWithContext(context.Background())
}

func (i *ManagedZoneRrset) ToManagedZoneRrsetOutputWithContext(ctx context.Context) ManagedZoneRrsetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneRrsetOutput)
}

type ManagedZoneRrsetOutput struct {
	*pulumi.OutputState
}

func (ManagedZoneRrsetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneRrset)(nil))
}

func (o ManagedZoneRrsetOutput) ToManagedZoneRrsetOutput() ManagedZoneRrsetOutput {
	return o
}

func (o ManagedZoneRrsetOutput) ToManagedZoneRrsetOutputWithContext(ctx context.Context) ManagedZoneRrsetOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ManagedZoneRrsetOutput{})
}
