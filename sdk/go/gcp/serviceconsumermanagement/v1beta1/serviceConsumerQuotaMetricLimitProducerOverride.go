// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a producer override. A producer override is applied by the owner or administrator of a service to increase or decrease the amount of quota a consumer of the service is allowed to use. To create multiple overrides at once, use ImportProducerOverrides instead. If an override with the specified dimensions already exists, this call will fail. To overwrite an existing override if one is already present ("upsert" semantics), use ImportProducerOverrides instead.
type ServiceConsumerQuotaMetricLimitProducerOverride struct {
	pulumi.CustomResourceState
}

// NewServiceConsumerQuotaMetricLimitProducerOverride registers a new resource with the given unique name, arguments, and options.
func NewServiceConsumerQuotaMetricLimitProducerOverride(ctx *pulumi.Context,
	name string, args *ServiceConsumerQuotaMetricLimitProducerOverrideArgs, opts ...pulumi.ResourceOption) (*ServiceConsumerQuotaMetricLimitProducerOverride, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConsumerQuotaMetricsId == nil {
		return nil, errors.New("invalid value for required argument 'ConsumerQuotaMetricsId'")
	}
	if args.LimitsId == nil {
		return nil, errors.New("invalid value for required argument 'LimitsId'")
	}
	if args.ProducerOverridesId == nil {
		return nil, errors.New("invalid value for required argument 'ProducerOverridesId'")
	}
	if args.ServicesId == nil {
		return nil, errors.New("invalid value for required argument 'ServicesId'")
	}
	if args.ServicesId1 == nil {
		return nil, errors.New("invalid value for required argument 'ServicesId1'")
	}
	if args.ServicesId2 == nil {
		return nil, errors.New("invalid value for required argument 'ServicesId2'")
	}
	var resource ServiceConsumerQuotaMetricLimitProducerOverride
	err := ctx.RegisterResource("gcp-native:serviceconsumermanagement/v1beta1:ServiceConsumerQuotaMetricLimitProducerOverride", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceConsumerQuotaMetricLimitProducerOverride gets an existing ServiceConsumerQuotaMetricLimitProducerOverride resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceConsumerQuotaMetricLimitProducerOverride(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceConsumerQuotaMetricLimitProducerOverrideState, opts ...pulumi.ResourceOption) (*ServiceConsumerQuotaMetricLimitProducerOverride, error) {
	var resource ServiceConsumerQuotaMetricLimitProducerOverride
	err := ctx.ReadResource("gcp-native:serviceconsumermanagement/v1beta1:ServiceConsumerQuotaMetricLimitProducerOverride", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceConsumerQuotaMetricLimitProducerOverride resources.
type serviceConsumerQuotaMetricLimitProducerOverrideState struct {
}

type ServiceConsumerQuotaMetricLimitProducerOverrideState struct {
}

func (ServiceConsumerQuotaMetricLimitProducerOverrideState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConsumerQuotaMetricLimitProducerOverrideState)(nil)).Elem()
}

type serviceConsumerQuotaMetricLimitProducerOverrideArgs struct {
	// The resource name of the ancestor that requested the override. For example: "organizations/12345" or "folders/67890". Used by admin overrides only.
	AdminOverrideAncestor  *string `pulumi:"adminOverrideAncestor"`
	ConsumerQuotaMetricsId string  `pulumi:"consumerQuotaMetricsId"`
	//  If this map is nonempty, then this override applies only to specific values for dimensions defined in the limit unit. For example, an override on a limit with the unit 1/{project}/{region} could contain an entry with the key "region" and the value "us-east-1"; the override is only applied to quota consumed in that region. This map has the following restrictions: * Keys that are not defined in the limit's unit are not valid keys. Any string appearing in {brackets} in the unit (besides {project} or {user}) is a defined key. * "project" is not a valid key; the project is already specified in the parent resource name. * "user" is not a valid key; the API does not support quota overrides that apply only to a specific user. * If "region" appears as a key, its value must be a valid Cloud region. * If "zone" appears as a key, its value must be a valid Cloud zone. * If any valid key other than "region" or "zone" appears in the map, then all valid keys other than "region" or "zone" must also appear in the map.
	Dimensions map[string]string `pulumi:"dimensions"`
	LimitsId   string            `pulumi:"limitsId"`
	// The name of the metric to which this override applies. An example name would be: `compute.googleapis.com/cpus`
	Metric *string `pulumi:"metric"`
	// The resource name of the producer override. An example name would be: `services/compute.googleapis.com/projects/123/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/producerOverrides/4a3f2c1d`
	Name *string `pulumi:"name"`
	// The overriding quota limit value. Can be any nonnegative integer, or -1 (unlimited quota).
	OverrideValue       *string `pulumi:"overrideValue"`
	ProducerOverridesId string  `pulumi:"producerOverridesId"`
	ServicesId          string  `pulumi:"servicesId"`
	ServicesId1         string  `pulumi:"servicesId1"`
	ServicesId2         string  `pulumi:"servicesId2"`
	// The limit unit of the limit to which this override applies. An example unit would be: `1/{project}/{region}` Note that `{project}` and `{region}` are not placeholders in this example; the literal characters `{` and `}` occur in the string.
	Unit *string `pulumi:"unit"`
}

// The set of arguments for constructing a ServiceConsumerQuotaMetricLimitProducerOverride resource.
type ServiceConsumerQuotaMetricLimitProducerOverrideArgs struct {
	// The resource name of the ancestor that requested the override. For example: "organizations/12345" or "folders/67890". Used by admin overrides only.
	AdminOverrideAncestor  pulumi.StringPtrInput
	ConsumerQuotaMetricsId pulumi.StringInput
	//  If this map is nonempty, then this override applies only to specific values for dimensions defined in the limit unit. For example, an override on a limit with the unit 1/{project}/{region} could contain an entry with the key "region" and the value "us-east-1"; the override is only applied to quota consumed in that region. This map has the following restrictions: * Keys that are not defined in the limit's unit are not valid keys. Any string appearing in {brackets} in the unit (besides {project} or {user}) is a defined key. * "project" is not a valid key; the project is already specified in the parent resource name. * "user" is not a valid key; the API does not support quota overrides that apply only to a specific user. * If "region" appears as a key, its value must be a valid Cloud region. * If "zone" appears as a key, its value must be a valid Cloud zone. * If any valid key other than "region" or "zone" appears in the map, then all valid keys other than "region" or "zone" must also appear in the map.
	Dimensions pulumi.StringMapInput
	LimitsId   pulumi.StringInput
	// The name of the metric to which this override applies. An example name would be: `compute.googleapis.com/cpus`
	Metric pulumi.StringPtrInput
	// The resource name of the producer override. An example name would be: `services/compute.googleapis.com/projects/123/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/producerOverrides/4a3f2c1d`
	Name pulumi.StringPtrInput
	// The overriding quota limit value. Can be any nonnegative integer, or -1 (unlimited quota).
	OverrideValue       pulumi.StringPtrInput
	ProducerOverridesId pulumi.StringInput
	ServicesId          pulumi.StringInput
	ServicesId1         pulumi.StringInput
	ServicesId2         pulumi.StringInput
	// The limit unit of the limit to which this override applies. An example unit would be: `1/{project}/{region}` Note that `{project}` and `{region}` are not placeholders in this example; the literal characters `{` and `}` occur in the string.
	Unit pulumi.StringPtrInput
}

func (ServiceConsumerQuotaMetricLimitProducerOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConsumerQuotaMetricLimitProducerOverrideArgs)(nil)).Elem()
}

type ServiceConsumerQuotaMetricLimitProducerOverrideInput interface {
	pulumi.Input

	ToServiceConsumerQuotaMetricLimitProducerOverrideOutput() ServiceConsumerQuotaMetricLimitProducerOverrideOutput
	ToServiceConsumerQuotaMetricLimitProducerOverrideOutputWithContext(ctx context.Context) ServiceConsumerQuotaMetricLimitProducerOverrideOutput
}

func (*ServiceConsumerQuotaMetricLimitProducerOverride) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConsumerQuotaMetricLimitProducerOverride)(nil))
}

func (i *ServiceConsumerQuotaMetricLimitProducerOverride) ToServiceConsumerQuotaMetricLimitProducerOverrideOutput() ServiceConsumerQuotaMetricLimitProducerOverrideOutput {
	return i.ToServiceConsumerQuotaMetricLimitProducerOverrideOutputWithContext(context.Background())
}

func (i *ServiceConsumerQuotaMetricLimitProducerOverride) ToServiceConsumerQuotaMetricLimitProducerOverrideOutputWithContext(ctx context.Context) ServiceConsumerQuotaMetricLimitProducerOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConsumerQuotaMetricLimitProducerOverrideOutput)
}

type ServiceConsumerQuotaMetricLimitProducerOverrideOutput struct {
	*pulumi.OutputState
}

func (ServiceConsumerQuotaMetricLimitProducerOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConsumerQuotaMetricLimitProducerOverride)(nil))
}

func (o ServiceConsumerQuotaMetricLimitProducerOverrideOutput) ToServiceConsumerQuotaMetricLimitProducerOverrideOutput() ServiceConsumerQuotaMetricLimitProducerOverrideOutput {
	return o
}

func (o ServiceConsumerQuotaMetricLimitProducerOverrideOutput) ToServiceConsumerQuotaMetricLimitProducerOverrideOutputWithContext(ctx context.Context) ServiceConsumerQuotaMetricLimitProducerOverrideOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ServiceConsumerQuotaMetricLimitProducerOverrideOutput{})
}
