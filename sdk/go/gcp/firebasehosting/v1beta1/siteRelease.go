// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new release, which makes the content of the specified version actively display on the appropriate URL(s).
type SiteRelease struct {
	pulumi.CustomResourceState
}

// NewSiteRelease registers a new resource with the given unique name, arguments, and options.
func NewSiteRelease(ctx *pulumi.Context,
	name string, args *SiteReleaseArgs, opts ...pulumi.ResourceOption) (*SiteRelease, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SitesId == nil {
		return nil, errors.New("invalid value for required argument 'SitesId'")
	}
	var resource SiteRelease
	err := ctx.RegisterResource("gcp-native:firebasehosting/v1beta1:SiteRelease", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSiteRelease gets an existing SiteRelease resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSiteRelease(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SiteReleaseState, opts ...pulumi.ResourceOption) (*SiteRelease, error) {
	var resource SiteRelease
	err := ctx.ReadResource("gcp-native:firebasehosting/v1beta1:SiteRelease", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SiteRelease resources.
type siteReleaseState struct {
}

type SiteReleaseState struct {
}

func (SiteReleaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*siteReleaseState)(nil)).Elem()
}

type siteReleaseArgs struct {
	// The deploy description when the release was created. The value can be up to 512 characters.
	Message *string `pulumi:"message"`
	// The unique identifier for the release, in either of the following formats: - sites/SITE_ID/releases/RELEASE_ID - sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID This name is provided in the response body when you call [`releases.create`](sites.releases/create) or [`channels.releases.create`](sites.channels.releases/create).
	Name *string `pulumi:"name"`
	// The time at which the version is set to be public.
	ReleaseTime *string `pulumi:"releaseTime"`
	// Identifies the user who created the release.
	ReleaseUser *ActingUser `pulumi:"releaseUser"`
	SitesId     string      `pulumi:"sitesId"`
	// Explains the reason for the release. Specify a value for this field only when creating a `SITE_DISABLE` type release.
	Type *string `pulumi:"type"`
	// The configuration and content that was released.
	Version *Version `pulumi:"version"`
}

// The set of arguments for constructing a SiteRelease resource.
type SiteReleaseArgs struct {
	// The deploy description when the release was created. The value can be up to 512 characters.
	Message pulumi.StringPtrInput
	// The unique identifier for the release, in either of the following formats: - sites/SITE_ID/releases/RELEASE_ID - sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID This name is provided in the response body when you call [`releases.create`](sites.releases/create) or [`channels.releases.create`](sites.channels.releases/create).
	Name pulumi.StringPtrInput
	// The time at which the version is set to be public.
	ReleaseTime pulumi.StringPtrInput
	// Identifies the user who created the release.
	ReleaseUser ActingUserPtrInput
	SitesId     pulumi.StringInput
	// Explains the reason for the release. Specify a value for this field only when creating a `SITE_DISABLE` type release.
	Type pulumi.StringPtrInput
	// The configuration and content that was released.
	Version VersionPtrInput
}

func (SiteReleaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*siteReleaseArgs)(nil)).Elem()
}

type SiteReleaseInput interface {
	pulumi.Input

	ToSiteReleaseOutput() SiteReleaseOutput
	ToSiteReleaseOutputWithContext(ctx context.Context) SiteReleaseOutput
}

func (*SiteRelease) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteRelease)(nil))
}

func (i *SiteRelease) ToSiteReleaseOutput() SiteReleaseOutput {
	return i.ToSiteReleaseOutputWithContext(context.Background())
}

func (i *SiteRelease) ToSiteReleaseOutputWithContext(ctx context.Context) SiteReleaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteReleaseOutput)
}

type SiteReleaseOutput struct {
	*pulumi.OutputState
}

func (SiteReleaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteRelease)(nil))
}

func (o SiteReleaseOutput) ToSiteReleaseOutput() SiteReleaseOutput {
	return o
}

func (o SiteReleaseOutput) ToSiteReleaseOutputWithContext(ctx context.Context) SiteReleaseOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SiteReleaseOutput{})
}
