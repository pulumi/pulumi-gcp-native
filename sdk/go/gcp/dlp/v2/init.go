// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-gcp-native/sdk/go/gcp"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "gcp-native:dlp/v2:DeidentifyTemplate":
		r = &DeidentifyTemplate{}
	case "gcp-native:dlp/v2:DlpJob":
		r = &DlpJob{}
	case "gcp-native:dlp/v2:InspectTemplate":
		r = &InspectTemplate{}
	case "gcp-native:dlp/v2:JobTrigger":
		r = &JobTrigger{}
	case "gcp-native:dlp/v2:OrganizationDeidentifyTemplate":
		r = &OrganizationDeidentifyTemplate{}
	case "gcp-native:dlp/v2:OrganizationInspectTemplate":
		r = &OrganizationInspectTemplate{}
	case "gcp-native:dlp/v2:OrganizationJobTrigger":
		r = &OrganizationJobTrigger{}
	case "gcp-native:dlp/v2:OrganizationStoredInfoType":
		r = &OrganizationStoredInfoType{}
	case "gcp-native:dlp/v2:StoredInfoType":
		r = &StoredInfoType{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := gcp.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"gcp-native",
		"dlp/v2",
		&module{version},
	)
}
