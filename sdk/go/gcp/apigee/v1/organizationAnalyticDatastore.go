// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create a Datastore for an org
type OrganizationAnalyticDatastore struct {
	pulumi.CustomResourceState

	// Datastore create time, in milliseconds since the epoch of 1970-01-01T00:00:00Z
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Datastore Configurations.
	DatastoreConfig GoogleCloudApigeeV1DatastoreConfigResponseOutput `pulumi:"datastoreConfig"`
	// Required. Display name in UI
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Datastore last update time, in milliseconds since the epoch of 1970-01-01T00:00:00Z
	LastUpdateTime pulumi.StringOutput `pulumi:"lastUpdateTime"`
	// Organization that the datastore belongs to
	Org pulumi.StringOutput `pulumi:"org"`
	// Resource link of Datastore. Example: `/organizations/{org}/analytics/datastores/{uuid}`
	Self pulumi.StringOutput `pulumi:"self"`
	// Destination storage type. Supported types `gcs` or `bigquery`.
	TargetType pulumi.StringOutput `pulumi:"targetType"`
}

// NewOrganizationAnalyticDatastore registers a new resource with the given unique name, arguments, and options.
func NewOrganizationAnalyticDatastore(ctx *pulumi.Context,
	name string, args *OrganizationAnalyticDatastoreArgs, opts ...pulumi.ResourceOption) (*OrganizationAnalyticDatastore, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatastoresId == nil {
		return nil, errors.New("invalid value for required argument 'DatastoresId'")
	}
	if args.OrganizationsId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationsId'")
	}
	var resource OrganizationAnalyticDatastore
	err := ctx.RegisterResource("gcp-native:apigee/v1:OrganizationAnalyticDatastore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationAnalyticDatastore gets an existing OrganizationAnalyticDatastore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationAnalyticDatastore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationAnalyticDatastoreState, opts ...pulumi.ResourceOption) (*OrganizationAnalyticDatastore, error) {
	var resource OrganizationAnalyticDatastore
	err := ctx.ReadResource("gcp-native:apigee/v1:OrganizationAnalyticDatastore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationAnalyticDatastore resources.
type organizationAnalyticDatastoreState struct {
	// Datastore create time, in milliseconds since the epoch of 1970-01-01T00:00:00Z
	CreateTime *string `pulumi:"createTime"`
	// Datastore Configurations.
	DatastoreConfig *GoogleCloudApigeeV1DatastoreConfigResponse `pulumi:"datastoreConfig"`
	// Required. Display name in UI
	DisplayName *string `pulumi:"displayName"`
	// Datastore last update time, in milliseconds since the epoch of 1970-01-01T00:00:00Z
	LastUpdateTime *string `pulumi:"lastUpdateTime"`
	// Organization that the datastore belongs to
	Org *string `pulumi:"org"`
	// Resource link of Datastore. Example: `/organizations/{org}/analytics/datastores/{uuid}`
	Self *string `pulumi:"self"`
	// Destination storage type. Supported types `gcs` or `bigquery`.
	TargetType *string `pulumi:"targetType"`
}

type OrganizationAnalyticDatastoreState struct {
	// Datastore create time, in milliseconds since the epoch of 1970-01-01T00:00:00Z
	CreateTime pulumi.StringPtrInput
	// Datastore Configurations.
	DatastoreConfig GoogleCloudApigeeV1DatastoreConfigResponsePtrInput
	// Required. Display name in UI
	DisplayName pulumi.StringPtrInput
	// Datastore last update time, in milliseconds since the epoch of 1970-01-01T00:00:00Z
	LastUpdateTime pulumi.StringPtrInput
	// Organization that the datastore belongs to
	Org pulumi.StringPtrInput
	// Resource link of Datastore. Example: `/organizations/{org}/analytics/datastores/{uuid}`
	Self pulumi.StringPtrInput
	// Destination storage type. Supported types `gcs` or `bigquery`.
	TargetType pulumi.StringPtrInput
}

func (OrganizationAnalyticDatastoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationAnalyticDatastoreState)(nil)).Elem()
}

type organizationAnalyticDatastoreArgs struct {
	// Datastore Configurations.
	DatastoreConfig *GoogleCloudApigeeV1DatastoreConfig `pulumi:"datastoreConfig"`
	DatastoresId    string                              `pulumi:"datastoresId"`
	// Required. Display name in UI
	DisplayName     *string `pulumi:"displayName"`
	OrganizationsId string  `pulumi:"organizationsId"`
	// Destination storage type. Supported types `gcs` or `bigquery`.
	TargetType *string `pulumi:"targetType"`
}

// The set of arguments for constructing a OrganizationAnalyticDatastore resource.
type OrganizationAnalyticDatastoreArgs struct {
	// Datastore Configurations.
	DatastoreConfig GoogleCloudApigeeV1DatastoreConfigPtrInput
	DatastoresId    pulumi.StringInput
	// Required. Display name in UI
	DisplayName     pulumi.StringPtrInput
	OrganizationsId pulumi.StringInput
	// Destination storage type. Supported types `gcs` or `bigquery`.
	TargetType pulumi.StringPtrInput
}

func (OrganizationAnalyticDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationAnalyticDatastoreArgs)(nil)).Elem()
}

type OrganizationAnalyticDatastoreInput interface {
	pulumi.Input

	ToOrganizationAnalyticDatastoreOutput() OrganizationAnalyticDatastoreOutput
	ToOrganizationAnalyticDatastoreOutputWithContext(ctx context.Context) OrganizationAnalyticDatastoreOutput
}

func (*OrganizationAnalyticDatastore) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAnalyticDatastore)(nil))
}

func (i *OrganizationAnalyticDatastore) ToOrganizationAnalyticDatastoreOutput() OrganizationAnalyticDatastoreOutput {
	return i.ToOrganizationAnalyticDatastoreOutputWithContext(context.Background())
}

func (i *OrganizationAnalyticDatastore) ToOrganizationAnalyticDatastoreOutputWithContext(ctx context.Context) OrganizationAnalyticDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationAnalyticDatastoreOutput)
}

type OrganizationAnalyticDatastoreOutput struct {
	*pulumi.OutputState
}

func (OrganizationAnalyticDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAnalyticDatastore)(nil))
}

func (o OrganizationAnalyticDatastoreOutput) ToOrganizationAnalyticDatastoreOutput() OrganizationAnalyticDatastoreOutput {
	return o
}

func (o OrganizationAnalyticDatastoreOutput) ToOrganizationAnalyticDatastoreOutputWithContext(ctx context.Context) OrganizationAnalyticDatastoreOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationAnalyticDatastoreOutput{})
}
