// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new attachment of an environment to an environment group.
type OrganizationEnvgroupAttachment struct {
	pulumi.CustomResourceState

	// The time at which the environment group attachment was created as milliseconds since epoch.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Required. ID of the attached environment.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// ID of the environment group attachment.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewOrganizationEnvgroupAttachment registers a new resource with the given unique name, arguments, and options.
func NewOrganizationEnvgroupAttachment(ctx *pulumi.Context,
	name string, args *OrganizationEnvgroupAttachmentArgs, opts ...pulumi.ResourceOption) (*OrganizationEnvgroupAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AttachmentsId == nil {
		return nil, errors.New("invalid value for required argument 'AttachmentsId'")
	}
	if args.EnvgroupsId == nil {
		return nil, errors.New("invalid value for required argument 'EnvgroupsId'")
	}
	if args.OrganizationsId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationsId'")
	}
	var resource OrganizationEnvgroupAttachment
	err := ctx.RegisterResource("gcp-native:apigee/v1:OrganizationEnvgroupAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationEnvgroupAttachment gets an existing OrganizationEnvgroupAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationEnvgroupAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationEnvgroupAttachmentState, opts ...pulumi.ResourceOption) (*OrganizationEnvgroupAttachment, error) {
	var resource OrganizationEnvgroupAttachment
	err := ctx.ReadResource("gcp-native:apigee/v1:OrganizationEnvgroupAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationEnvgroupAttachment resources.
type organizationEnvgroupAttachmentState struct {
	// The time at which the environment group attachment was created as milliseconds since epoch.
	CreatedAt *string `pulumi:"createdAt"`
	// Required. ID of the attached environment.
	Environment *string `pulumi:"environment"`
	// ID of the environment group attachment.
	Name *string `pulumi:"name"`
}

type OrganizationEnvgroupAttachmentState struct {
	// The time at which the environment group attachment was created as milliseconds since epoch.
	CreatedAt pulumi.StringPtrInput
	// Required. ID of the attached environment.
	Environment pulumi.StringPtrInput
	// ID of the environment group attachment.
	Name pulumi.StringPtrInput
}

func (OrganizationEnvgroupAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvgroupAttachmentState)(nil)).Elem()
}

type organizationEnvgroupAttachmentArgs struct {
	AttachmentsId string `pulumi:"attachmentsId"`
	EnvgroupsId   string `pulumi:"envgroupsId"`
	// Required. ID of the attached environment.
	Environment *string `pulumi:"environment"`
	// ID of the environment group attachment.
	Name            *string `pulumi:"name"`
	OrganizationsId string  `pulumi:"organizationsId"`
}

// The set of arguments for constructing a OrganizationEnvgroupAttachment resource.
type OrganizationEnvgroupAttachmentArgs struct {
	AttachmentsId pulumi.StringInput
	EnvgroupsId   pulumi.StringInput
	// Required. ID of the attached environment.
	Environment pulumi.StringPtrInput
	// ID of the environment group attachment.
	Name            pulumi.StringPtrInput
	OrganizationsId pulumi.StringInput
}

func (OrganizationEnvgroupAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvgroupAttachmentArgs)(nil)).Elem()
}

type OrganizationEnvgroupAttachmentInput interface {
	pulumi.Input

	ToOrganizationEnvgroupAttachmentOutput() OrganizationEnvgroupAttachmentOutput
	ToOrganizationEnvgroupAttachmentOutputWithContext(ctx context.Context) OrganizationEnvgroupAttachmentOutput
}

func (*OrganizationEnvgroupAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationEnvgroupAttachment)(nil))
}

func (i *OrganizationEnvgroupAttachment) ToOrganizationEnvgroupAttachmentOutput() OrganizationEnvgroupAttachmentOutput {
	return i.ToOrganizationEnvgroupAttachmentOutputWithContext(context.Background())
}

func (i *OrganizationEnvgroupAttachment) ToOrganizationEnvgroupAttachmentOutputWithContext(ctx context.Context) OrganizationEnvgroupAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationEnvgroupAttachmentOutput)
}

type OrganizationEnvgroupAttachmentOutput struct {
	*pulumi.OutputState
}

func (OrganizationEnvgroupAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationEnvgroupAttachment)(nil))
}

func (o OrganizationEnvgroupAttachmentOutput) ToOrganizationEnvgroupAttachmentOutput() OrganizationEnvgroupAttachmentOutput {
	return o
}

func (o OrganizationEnvgroupAttachmentOutput) ToOrganizationEnvgroupAttachmentOutputWithContext(ctx context.Context) OrganizationEnvgroupAttachmentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationEnvgroupAttachmentOutput{})
}
