// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new data collector.
type OrganizationDatacollector struct {
	pulumi.CustomResourceState

	// The time at which the data collector was created in milliseconds since the epoch.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A description of the data collector.
	Description pulumi.StringOutput `pulumi:"description"`
	// The time at which the Data Collector was last updated in milliseconds since the epoch.
	LastModifiedAt pulumi.StringOutput `pulumi:"lastModifiedAt"`
	// ID of the data collector. Must begin with `dc_`.
	Name pulumi.StringOutput `pulumi:"name"`
	// Immutable. The type of data this data collector will collect.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewOrganizationDatacollector registers a new resource with the given unique name, arguments, and options.
func NewOrganizationDatacollector(ctx *pulumi.Context,
	name string, args *OrganizationDatacollectorArgs, opts ...pulumi.ResourceOption) (*OrganizationDatacollector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatacollectorsId == nil {
		return nil, errors.New("invalid value for required argument 'DatacollectorsId'")
	}
	if args.OrganizationsId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationsId'")
	}
	var resource OrganizationDatacollector
	err := ctx.RegisterResource("gcp-native:apigee/v1:OrganizationDatacollector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationDatacollector gets an existing OrganizationDatacollector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationDatacollector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationDatacollectorState, opts ...pulumi.ResourceOption) (*OrganizationDatacollector, error) {
	var resource OrganizationDatacollector
	err := ctx.ReadResource("gcp-native:apigee/v1:OrganizationDatacollector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationDatacollector resources.
type organizationDatacollectorState struct {
	// The time at which the data collector was created in milliseconds since the epoch.
	CreatedAt *string `pulumi:"createdAt"`
	// A description of the data collector.
	Description *string `pulumi:"description"`
	// The time at which the Data Collector was last updated in milliseconds since the epoch.
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// ID of the data collector. Must begin with `dc_`.
	Name *string `pulumi:"name"`
	// Immutable. The type of data this data collector will collect.
	Type *string `pulumi:"type"`
}

type OrganizationDatacollectorState struct {
	// The time at which the data collector was created in milliseconds since the epoch.
	CreatedAt pulumi.StringPtrInput
	// A description of the data collector.
	Description pulumi.StringPtrInput
	// The time at which the Data Collector was last updated in milliseconds since the epoch.
	LastModifiedAt pulumi.StringPtrInput
	// ID of the data collector. Must begin with `dc_`.
	Name pulumi.StringPtrInput
	// Immutable. The type of data this data collector will collect.
	Type pulumi.StringPtrInput
}

func (OrganizationDatacollectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationDatacollectorState)(nil)).Elem()
}

type organizationDatacollectorArgs struct {
	DatacollectorsId string `pulumi:"datacollectorsId"`
	// A description of the data collector.
	Description *string `pulumi:"description"`
	// ID of the data collector. Must begin with `dc_`.
	Name            *string `pulumi:"name"`
	OrganizationsId string  `pulumi:"organizationsId"`
	// Immutable. The type of data this data collector will collect.
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a OrganizationDatacollector resource.
type OrganizationDatacollectorArgs struct {
	DatacollectorsId pulumi.StringInput
	// A description of the data collector.
	Description pulumi.StringPtrInput
	// ID of the data collector. Must begin with `dc_`.
	Name            pulumi.StringPtrInput
	OrganizationsId pulumi.StringInput
	// Immutable. The type of data this data collector will collect.
	Type pulumi.StringPtrInput
}

func (OrganizationDatacollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationDatacollectorArgs)(nil)).Elem()
}

type OrganizationDatacollectorInput interface {
	pulumi.Input

	ToOrganizationDatacollectorOutput() OrganizationDatacollectorOutput
	ToOrganizationDatacollectorOutputWithContext(ctx context.Context) OrganizationDatacollectorOutput
}

func (*OrganizationDatacollector) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationDatacollector)(nil))
}

func (i *OrganizationDatacollector) ToOrganizationDatacollectorOutput() OrganizationDatacollectorOutput {
	return i.ToOrganizationDatacollectorOutputWithContext(context.Background())
}

func (i *OrganizationDatacollector) ToOrganizationDatacollectorOutputWithContext(ctx context.Context) OrganizationDatacollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationDatacollectorOutput)
}

type OrganizationDatacollectorOutput struct {
	*pulumi.OutputState
}

func (OrganizationDatacollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationDatacollector)(nil))
}

func (o OrganizationDatacollectorOutput) ToOrganizationDatacollectorOutput() OrganizationDatacollectorOutput {
	return o
}

func (o OrganizationDatacollectorOutput) ToOrganizationDatacollectorOutputWithContext(ctx context.Context) OrganizationDatacollectorOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationDatacollectorOutput{})
}
