// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-gcp-native/sdk/go/gcp"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "gcp-native:apigee/v1:Organization":
		r, err = NewOrganization(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationAnalyticDatastore":
		r, err = NewOrganizationAnalyticDatastore(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationApi":
		r, err = NewOrganizationApi(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationApiproduct":
		r, err = NewOrganizationApiproduct(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationDatacollector":
		r, err = NewOrganizationDatacollector(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationDeveloper":
		r, err = NewOrganizationDeveloper(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationDeveloperApp":
		r, err = NewOrganizationDeveloperApp(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationDeveloperAppKey":
		r, err = NewOrganizationDeveloperAppKey(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationEnvgroup":
		r, err = NewOrganizationEnvgroup(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationEnvgroupAttachment":
		r, err = NewOrganizationEnvgroupAttachment(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationEnvironment":
		r, err = NewOrganizationEnvironment(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationEnvironmentAnalyticExport":
		r, err = NewOrganizationEnvironmentAnalyticExport(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationEnvironmentApiRevisionDebugsession":
		r, err = NewOrganizationEnvironmentApiRevisionDebugsession(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationEnvironmentIamPolicy":
		r, err = NewOrganizationEnvironmentIamPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationEnvironmentKeystore":
		r, err = NewOrganizationEnvironmentKeystore(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationEnvironmentKeystoreAlias":
		r, err = NewOrganizationEnvironmentKeystoreAlias(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationEnvironmentQuery":
		r, err = NewOrganizationEnvironmentQuery(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationEnvironmentReference":
		r, err = NewOrganizationEnvironmentReference(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationEnvironmentResourcefile":
		r, err = NewOrganizationEnvironmentResourcefile(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationEnvironmentTargetserver":
		r, err = NewOrganizationEnvironmentTargetserver(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationEnvironmentTraceConfigOverride":
		r, err = NewOrganizationEnvironmentTraceConfigOverride(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationHostQuery":
		r, err = NewOrganizationHostQuery(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationInstance":
		r, err = NewOrganizationInstance(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationInstanceAttachment":
		r, err = NewOrganizationInstanceAttachment(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationInstanceCanaryevaluation":
		r, err = NewOrganizationInstanceCanaryevaluation(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationInstanceNatAddress":
		r, err = NewOrganizationInstanceNatAddress(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationReport":
		r, err = NewOrganizationReport(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationSharedflow":
		r, err = NewOrganizationSharedflow(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:apigee/v1:OrganizationSiteApicategory":
		r, err = NewOrganizationSiteApicategory(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := gcp.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"gcp-native",
		"apigee/v1",
		&module{version},
	)
}
