// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-gcp-native/sdk/go/gcp"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "gcp-native:pubsub/v1:Schema":
		r, err = NewSchema(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:pubsub/v1:SchemaIamPolicy":
		r, err = NewSchemaIamPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:pubsub/v1:Snapshot":
		r, err = NewSnapshot(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:pubsub/v1:SnapshotIamPolicy":
		r, err = NewSnapshotIamPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:pubsub/v1:Subscription":
		r, err = NewSubscription(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:pubsub/v1:SubscriptionIamPolicy":
		r, err = NewSubscriptionIamPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:pubsub/v1:Topic":
		r, err = NewTopic(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:pubsub/v1:TopicIamPolicy":
		r, err = NewTopicIamPolicy(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := gcp.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"gcp-native",
		"pubsub/v1",
		&module{version},
	)
}
