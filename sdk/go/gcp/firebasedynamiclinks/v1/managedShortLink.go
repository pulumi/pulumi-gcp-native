// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a managed short Dynamic Link given either a valid long Dynamic Link or details such as Dynamic Link domain, Android and iOS app information. The created short Dynamic Link will not expire. This differs from CreateShortDynamicLink in the following ways: - The request will also contain a name for the link (non unique name for the front end). - The response must be authenticated with an auth token (generated with the admin service account). - The link will appear in the FDL list of links in the console front end. The Dynamic Link domain in the request must be owned by requester's Firebase project.
type ManagedShortLink struct {
	pulumi.CustomResourceState
}

// NewManagedShortLink registers a new resource with the given unique name, arguments, and options.
func NewManagedShortLink(ctx *pulumi.Context,
	name string, args *ManagedShortLinkArgs, opts ...pulumi.ResourceOption) (*ManagedShortLink, error) {
	if args == nil {
		args = &ManagedShortLinkArgs{}
	}

	var resource ManagedShortLink
	err := ctx.RegisterResource("gcp-native:firebasedynamiclinks/v1:ManagedShortLink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedShortLink gets an existing ManagedShortLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedShortLink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedShortLinkState, opts ...pulumi.ResourceOption) (*ManagedShortLink, error) {
	var resource ManagedShortLink
	err := ctx.ReadResource("gcp-native:firebasedynamiclinks/v1:ManagedShortLink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedShortLink resources.
type managedShortLinkState struct {
}

type ManagedShortLinkState struct {
}

func (ManagedShortLinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedShortLinkState)(nil)).Elem()
}

type managedShortLinkArgs struct {
	// Information about the Dynamic Link to be shortened. [Learn more](https://firebase.google.com/docs/reference/dynamic-links/link-shortener).
	DynamicLinkInfo *DynamicLinkInfo `pulumi:"dynamicLinkInfo"`
	// Full long Dynamic Link URL with desired query parameters specified. For example, "https://sample.app.goo.gl/?link=http://www.google.com&apn=com.sample", [Learn more](https://firebase.google.com/docs/reference/dynamic-links/link-shortener).
	LongDynamicLink *string `pulumi:"longDynamicLink"`
	// Link name to associate with the link. It's used for marketer to identify manually-created links in the Firebase console (https://console.firebase.google.com/). Links must be named to be tracked.
	Name *string `pulumi:"name"`
	// Google SDK version. Version takes the form "$major.$minor.$patch"
	SdkVersion *string `pulumi:"sdkVersion"`
	// Short Dynamic Link suffix. Optional.
	Suffix *Suffix `pulumi:"suffix"`
}

// The set of arguments for constructing a ManagedShortLink resource.
type ManagedShortLinkArgs struct {
	// Information about the Dynamic Link to be shortened. [Learn more](https://firebase.google.com/docs/reference/dynamic-links/link-shortener).
	DynamicLinkInfo DynamicLinkInfoPtrInput
	// Full long Dynamic Link URL with desired query parameters specified. For example, "https://sample.app.goo.gl/?link=http://www.google.com&apn=com.sample", [Learn more](https://firebase.google.com/docs/reference/dynamic-links/link-shortener).
	LongDynamicLink pulumi.StringPtrInput
	// Link name to associate with the link. It's used for marketer to identify manually-created links in the Firebase console (https://console.firebase.google.com/). Links must be named to be tracked.
	Name pulumi.StringPtrInput
	// Google SDK version. Version takes the form "$major.$minor.$patch"
	SdkVersion pulumi.StringPtrInput
	// Short Dynamic Link suffix. Optional.
	Suffix SuffixPtrInput
}

func (ManagedShortLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedShortLinkArgs)(nil)).Elem()
}

type ManagedShortLinkInput interface {
	pulumi.Input

	ToManagedShortLinkOutput() ManagedShortLinkOutput
	ToManagedShortLinkOutputWithContext(ctx context.Context) ManagedShortLinkOutput
}

func (*ManagedShortLink) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedShortLink)(nil))
}

func (i *ManagedShortLink) ToManagedShortLinkOutput() ManagedShortLinkOutput {
	return i.ToManagedShortLinkOutputWithContext(context.Background())
}

func (i *ManagedShortLink) ToManagedShortLinkOutputWithContext(ctx context.Context) ManagedShortLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedShortLinkOutput)
}

type ManagedShortLinkOutput struct {
	*pulumi.OutputState
}

func (ManagedShortLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedShortLink)(nil))
}

func (o ManagedShortLinkOutput) ToManagedShortLinkOutput() ManagedShortLinkOutput {
	return o
}

func (o ManagedShortLinkOutput) ToManagedShortLinkOutputWithContext(ctx context.Context) ManagedShortLinkOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ManagedShortLinkOutput{})
}
