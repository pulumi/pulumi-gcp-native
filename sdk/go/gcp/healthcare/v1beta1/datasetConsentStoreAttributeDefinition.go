// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a new Attribute definition in the parent consent store.
type DatasetConsentStoreAttributeDefinition struct {
	pulumi.CustomResourceState

	// Required. Possible values for the attribute. The number of allowed values must not exceed 100. An empty list is invalid. The list can only be expanded after creation.
	AllowedValues pulumi.StringArrayOutput `pulumi:"allowedValues"`
	// Required. The category of the attribute. The value of this field cannot be changed after creation.
	Category pulumi.StringOutput `pulumi:"category"`
	// Optional. Default values of the attribute in Consents. If no default values are specified, it defaults to an empty value.
	ConsentDefaultValues pulumi.StringArrayOutput `pulumi:"consentDefaultValues"`
	// Optional. Default value of the attribute in User data mappings. If no default value is specified, it defaults to an empty value. This field is only applicable to attributes of the category `RESOURCE`.
	DataMappingDefaultValue pulumi.StringOutput `pulumi:"dataMappingDefaultValue"`
	// Optional. A description of the attribute.
	Description pulumi.StringOutput `pulumi:"description"`
	// Resource name of the Attribute definition, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/{attribute_definition_id}`. Cannot be changed after creation.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewDatasetConsentStoreAttributeDefinition registers a new resource with the given unique name, arguments, and options.
func NewDatasetConsentStoreAttributeDefinition(ctx *pulumi.Context,
	name string, args *DatasetConsentStoreAttributeDefinitionArgs, opts ...pulumi.ResourceOption) (*DatasetConsentStoreAttributeDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AttributeDefinitionsId == nil {
		return nil, errors.New("invalid value for required argument 'AttributeDefinitionsId'")
	}
	if args.ConsentStoresId == nil {
		return nil, errors.New("invalid value for required argument 'ConsentStoresId'")
	}
	if args.DatasetsId == nil {
		return nil, errors.New("invalid value for required argument 'DatasetsId'")
	}
	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	var resource DatasetConsentStoreAttributeDefinition
	err := ctx.RegisterResource("gcp-native:healthcare/v1beta1:DatasetConsentStoreAttributeDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatasetConsentStoreAttributeDefinition gets an existing DatasetConsentStoreAttributeDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatasetConsentStoreAttributeDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatasetConsentStoreAttributeDefinitionState, opts ...pulumi.ResourceOption) (*DatasetConsentStoreAttributeDefinition, error) {
	var resource DatasetConsentStoreAttributeDefinition
	err := ctx.ReadResource("gcp-native:healthcare/v1beta1:DatasetConsentStoreAttributeDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatasetConsentStoreAttributeDefinition resources.
type datasetConsentStoreAttributeDefinitionState struct {
	// Required. Possible values for the attribute. The number of allowed values must not exceed 100. An empty list is invalid. The list can only be expanded after creation.
	AllowedValues []string `pulumi:"allowedValues"`
	// Required. The category of the attribute. The value of this field cannot be changed after creation.
	Category *string `pulumi:"category"`
	// Optional. Default values of the attribute in Consents. If no default values are specified, it defaults to an empty value.
	ConsentDefaultValues []string `pulumi:"consentDefaultValues"`
	// Optional. Default value of the attribute in User data mappings. If no default value is specified, it defaults to an empty value. This field is only applicable to attributes of the category `RESOURCE`.
	DataMappingDefaultValue *string `pulumi:"dataMappingDefaultValue"`
	// Optional. A description of the attribute.
	Description *string `pulumi:"description"`
	// Resource name of the Attribute definition, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/{attribute_definition_id}`. Cannot be changed after creation.
	Name *string `pulumi:"name"`
}

type DatasetConsentStoreAttributeDefinitionState struct {
	// Required. Possible values for the attribute. The number of allowed values must not exceed 100. An empty list is invalid. The list can only be expanded after creation.
	AllowedValues pulumi.StringArrayInput
	// Required. The category of the attribute. The value of this field cannot be changed after creation.
	Category pulumi.StringPtrInput
	// Optional. Default values of the attribute in Consents. If no default values are specified, it defaults to an empty value.
	ConsentDefaultValues pulumi.StringArrayInput
	// Optional. Default value of the attribute in User data mappings. If no default value is specified, it defaults to an empty value. This field is only applicable to attributes of the category `RESOURCE`.
	DataMappingDefaultValue pulumi.StringPtrInput
	// Optional. A description of the attribute.
	Description pulumi.StringPtrInput
	// Resource name of the Attribute definition, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/{attribute_definition_id}`. Cannot be changed after creation.
	Name pulumi.StringPtrInput
}

func (DatasetConsentStoreAttributeDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetConsentStoreAttributeDefinitionState)(nil)).Elem()
}

type datasetConsentStoreAttributeDefinitionArgs struct {
	// Required. Possible values for the attribute. The number of allowed values must not exceed 100. An empty list is invalid. The list can only be expanded after creation.
	AllowedValues          []string `pulumi:"allowedValues"`
	AttributeDefinitionsId string   `pulumi:"attributeDefinitionsId"`
	// Required. The category of the attribute. The value of this field cannot be changed after creation.
	Category *string `pulumi:"category"`
	// Optional. Default values of the attribute in Consents. If no default values are specified, it defaults to an empty value.
	ConsentDefaultValues []string `pulumi:"consentDefaultValues"`
	ConsentStoresId      string   `pulumi:"consentStoresId"`
	// Optional. Default value of the attribute in User data mappings. If no default value is specified, it defaults to an empty value. This field is only applicable to attributes of the category `RESOURCE`.
	DataMappingDefaultValue *string `pulumi:"dataMappingDefaultValue"`
	DatasetsId              string  `pulumi:"datasetsId"`
	// Optional. A description of the attribute.
	Description *string `pulumi:"description"`
	LocationsId string  `pulumi:"locationsId"`
	// Resource name of the Attribute definition, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/{attribute_definition_id}`. Cannot be changed after creation.
	Name       *string `pulumi:"name"`
	ProjectsId string  `pulumi:"projectsId"`
}

// The set of arguments for constructing a DatasetConsentStoreAttributeDefinition resource.
type DatasetConsentStoreAttributeDefinitionArgs struct {
	// Required. Possible values for the attribute. The number of allowed values must not exceed 100. An empty list is invalid. The list can only be expanded after creation.
	AllowedValues          pulumi.StringArrayInput
	AttributeDefinitionsId pulumi.StringInput
	// Required. The category of the attribute. The value of this field cannot be changed after creation.
	Category pulumi.StringPtrInput
	// Optional. Default values of the attribute in Consents. If no default values are specified, it defaults to an empty value.
	ConsentDefaultValues pulumi.StringArrayInput
	ConsentStoresId      pulumi.StringInput
	// Optional. Default value of the attribute in User data mappings. If no default value is specified, it defaults to an empty value. This field is only applicable to attributes of the category `RESOURCE`.
	DataMappingDefaultValue pulumi.StringPtrInput
	DatasetsId              pulumi.StringInput
	// Optional. A description of the attribute.
	Description pulumi.StringPtrInput
	LocationsId pulumi.StringInput
	// Resource name of the Attribute definition, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/{attribute_definition_id}`. Cannot be changed after creation.
	Name       pulumi.StringPtrInput
	ProjectsId pulumi.StringInput
}

func (DatasetConsentStoreAttributeDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetConsentStoreAttributeDefinitionArgs)(nil)).Elem()
}

type DatasetConsentStoreAttributeDefinitionInput interface {
	pulumi.Input

	ToDatasetConsentStoreAttributeDefinitionOutput() DatasetConsentStoreAttributeDefinitionOutput
	ToDatasetConsentStoreAttributeDefinitionOutputWithContext(ctx context.Context) DatasetConsentStoreAttributeDefinitionOutput
}

func (*DatasetConsentStoreAttributeDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetConsentStoreAttributeDefinition)(nil))
}

func (i *DatasetConsentStoreAttributeDefinition) ToDatasetConsentStoreAttributeDefinitionOutput() DatasetConsentStoreAttributeDefinitionOutput {
	return i.ToDatasetConsentStoreAttributeDefinitionOutputWithContext(context.Background())
}

func (i *DatasetConsentStoreAttributeDefinition) ToDatasetConsentStoreAttributeDefinitionOutputWithContext(ctx context.Context) DatasetConsentStoreAttributeDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetConsentStoreAttributeDefinitionOutput)
}

type DatasetConsentStoreAttributeDefinitionOutput struct {
	*pulumi.OutputState
}

func (DatasetConsentStoreAttributeDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetConsentStoreAttributeDefinition)(nil))
}

func (o DatasetConsentStoreAttributeDefinitionOutput) ToDatasetConsentStoreAttributeDefinitionOutput() DatasetConsentStoreAttributeDefinitionOutput {
	return o
}

func (o DatasetConsentStoreAttributeDefinitionOutput) ToDatasetConsentStoreAttributeDefinitionOutputWithContext(ctx context.Context) DatasetConsentStoreAttributeDefinitionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DatasetConsentStoreAttributeDefinitionOutput{})
}
