// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Parses and stores an HL7v2 message. This method triggers an asynchronous notification to any Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig, if the filtering matches the message. If an MLLP adapter is configured to listen to a Pub/Sub topic, the adapter transmits the message when a notification is received.
type DatasetHl7V2StoreMessage struct {
	pulumi.CustomResourceState

	// The datetime when the message was created. Set by the server.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Raw message bytes.
	Data pulumi.StringOutput `pulumi:"data"`
	// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The message type for this message. MSH-9.1.
	MessageType pulumi.StringOutput `pulumi:"messageType"`
	// Resource name of the Message, of the form `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.
	Name pulumi.StringOutput `pulumi:"name"`
	// The parsed version of the raw message data.
	ParsedData ParsedDataResponseOutput `pulumi:"parsedData"`
	// All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this message.
	PatientIds PatientIdResponseArrayOutput `pulumi:"patientIds"`
	// The parsed version of the raw message data schematized according to this store's schemas and type definitions.
	SchematizedData SchematizedDataResponseOutput `pulumi:"schematizedData"`
	// The hospital that this message came from. MSH-4.
	SendFacility pulumi.StringOutput `pulumi:"sendFacility"`
	// The datetime the sending application sent this message. MSH-7.
	SendTime pulumi.StringOutput `pulumi:"sendTime"`
}

// NewDatasetHl7V2StoreMessage registers a new resource with the given unique name, arguments, and options.
func NewDatasetHl7V2StoreMessage(ctx *pulumi.Context,
	name string, args *DatasetHl7V2StoreMessageArgs, opts ...pulumi.ResourceOption) (*DatasetHl7V2StoreMessage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatasetsId == nil {
		return nil, errors.New("invalid value for required argument 'DatasetsId'")
	}
	if args.Hl7V2StoresId == nil {
		return nil, errors.New("invalid value for required argument 'Hl7V2StoresId'")
	}
	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.MessagesId == nil {
		return nil, errors.New("invalid value for required argument 'MessagesId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	var resource DatasetHl7V2StoreMessage
	err := ctx.RegisterResource("gcp-native:healthcare/v1:DatasetHl7V2StoreMessage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatasetHl7V2StoreMessage gets an existing DatasetHl7V2StoreMessage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatasetHl7V2StoreMessage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatasetHl7V2StoreMessageState, opts ...pulumi.ResourceOption) (*DatasetHl7V2StoreMessage, error) {
	var resource DatasetHl7V2StoreMessage
	err := ctx.ReadResource("gcp-native:healthcare/v1:DatasetHl7V2StoreMessage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatasetHl7V2StoreMessage resources.
type datasetHl7V2StoreMessageState struct {
	// The datetime when the message was created. Set by the server.
	CreateTime *string `pulumi:"createTime"`
	// Raw message bytes.
	Data *string `pulumi:"data"`
	// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
	Labels map[string]string `pulumi:"labels"`
	// The message type for this message. MSH-9.1.
	MessageType *string `pulumi:"messageType"`
	// Resource name of the Message, of the form `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.
	Name *string `pulumi:"name"`
	// The parsed version of the raw message data.
	ParsedData *ParsedDataResponse `pulumi:"parsedData"`
	// All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this message.
	PatientIds []PatientIdResponse `pulumi:"patientIds"`
	// The parsed version of the raw message data schematized according to this store's schemas and type definitions.
	SchematizedData *SchematizedDataResponse `pulumi:"schematizedData"`
	// The hospital that this message came from. MSH-4.
	SendFacility *string `pulumi:"sendFacility"`
	// The datetime the sending application sent this message. MSH-7.
	SendTime *string `pulumi:"sendTime"`
}

type DatasetHl7V2StoreMessageState struct {
	// The datetime when the message was created. Set by the server.
	CreateTime pulumi.StringPtrInput
	// Raw message bytes.
	Data pulumi.StringPtrInput
	// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
	Labels pulumi.StringMapInput
	// The message type for this message. MSH-9.1.
	MessageType pulumi.StringPtrInput
	// Resource name of the Message, of the form `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.
	Name pulumi.StringPtrInput
	// The parsed version of the raw message data.
	ParsedData ParsedDataResponsePtrInput
	// All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this message.
	PatientIds PatientIdResponseArrayInput
	// The parsed version of the raw message data schematized according to this store's schemas and type definitions.
	SchematizedData SchematizedDataResponsePtrInput
	// The hospital that this message came from. MSH-4.
	SendFacility pulumi.StringPtrInput
	// The datetime the sending application sent this message. MSH-7.
	SendTime pulumi.StringPtrInput
}

func (DatasetHl7V2StoreMessageState) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetHl7V2StoreMessageState)(nil)).Elem()
}

type datasetHl7V2StoreMessageArgs struct {
	// Raw message bytes.
	Data          *string `pulumi:"data"`
	DatasetsId    string  `pulumi:"datasetsId"`
	Hl7V2StoresId string  `pulumi:"hl7V2StoresId"`
	// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
	Labels      map[string]string `pulumi:"labels"`
	LocationsId string            `pulumi:"locationsId"`
	// The message type for this message. MSH-9.1.
	MessageType *string `pulumi:"messageType"`
	MessagesId  string  `pulumi:"messagesId"`
	// Resource name of the Message, of the form `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.
	Name *string `pulumi:"name"`
	// All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this message.
	PatientIds []PatientId `pulumi:"patientIds"`
	ProjectsId string      `pulumi:"projectsId"`
	// The parsed version of the raw message data schematized according to this store's schemas and type definitions.
	SchematizedData *SchematizedData `pulumi:"schematizedData"`
	// The hospital that this message came from. MSH-4.
	SendFacility *string `pulumi:"sendFacility"`
	// The datetime the sending application sent this message. MSH-7.
	SendTime *string `pulumi:"sendTime"`
}

// The set of arguments for constructing a DatasetHl7V2StoreMessage resource.
type DatasetHl7V2StoreMessageArgs struct {
	// Raw message bytes.
	Data          pulumi.StringPtrInput
	DatasetsId    pulumi.StringInput
	Hl7V2StoresId pulumi.StringInput
	// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
	Labels      pulumi.StringMapInput
	LocationsId pulumi.StringInput
	// The message type for this message. MSH-9.1.
	MessageType pulumi.StringPtrInput
	MessagesId  pulumi.StringInput
	// Resource name of the Message, of the form `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.
	Name pulumi.StringPtrInput
	// All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this message.
	PatientIds PatientIdArrayInput
	ProjectsId pulumi.StringInput
	// The parsed version of the raw message data schematized according to this store's schemas and type definitions.
	SchematizedData SchematizedDataPtrInput
	// The hospital that this message came from. MSH-4.
	SendFacility pulumi.StringPtrInput
	// The datetime the sending application sent this message. MSH-7.
	SendTime pulumi.StringPtrInput
}

func (DatasetHl7V2StoreMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetHl7V2StoreMessageArgs)(nil)).Elem()
}

type DatasetHl7V2StoreMessageInput interface {
	pulumi.Input

	ToDatasetHl7V2StoreMessageOutput() DatasetHl7V2StoreMessageOutput
	ToDatasetHl7V2StoreMessageOutputWithContext(ctx context.Context) DatasetHl7V2StoreMessageOutput
}

func (*DatasetHl7V2StoreMessage) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetHl7V2StoreMessage)(nil))
}

func (i *DatasetHl7V2StoreMessage) ToDatasetHl7V2StoreMessageOutput() DatasetHl7V2StoreMessageOutput {
	return i.ToDatasetHl7V2StoreMessageOutputWithContext(context.Background())
}

func (i *DatasetHl7V2StoreMessage) ToDatasetHl7V2StoreMessageOutputWithContext(ctx context.Context) DatasetHl7V2StoreMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetHl7V2StoreMessageOutput)
}

type DatasetHl7V2StoreMessageOutput struct {
	*pulumi.OutputState
}

func (DatasetHl7V2StoreMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetHl7V2StoreMessage)(nil))
}

func (o DatasetHl7V2StoreMessageOutput) ToDatasetHl7V2StoreMessageOutput() DatasetHl7V2StoreMessageOutput {
	return o
}

func (o DatasetHl7V2StoreMessageOutput) ToDatasetHl7V2StoreMessageOutputWithContext(ctx context.Context) DatasetHl7V2StoreMessageOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DatasetHl7V2StoreMessageOutput{})
}
