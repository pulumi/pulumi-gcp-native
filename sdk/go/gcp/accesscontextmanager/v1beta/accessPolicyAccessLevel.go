// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create an Access Level. The longrunning operation from this RPC will have a successful status once the Access Level has propagated to long-lasting storage. Access Levels containing errors will result in an error response for the first error encountered.
type AccessPolicyAccessLevel struct {
	pulumi.CustomResourceState

	// A `BasicLevel` composed of `Conditions`.
	Basic BasicLevelResponseOutput `pulumi:"basic"`
	// A `CustomLevel` written in the Common Expression Language.
	Custom CustomLevelResponseOutput `pulumi:"custom"`
	// Description of the `AccessLevel` and its use. Does not affect behavior.
	Description pulumi.StringOutput `pulumi:"description"`
	// Required. Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{policy_id}/accessLevels/{short_name}`. The maximum length // of the `short_name` component is 50 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// Human readable title. Must be unique within the Policy.
	Title pulumi.StringOutput `pulumi:"title"`
}

// NewAccessPolicyAccessLevel registers a new resource with the given unique name, arguments, and options.
func NewAccessPolicyAccessLevel(ctx *pulumi.Context,
	name string, args *AccessPolicyAccessLevelArgs, opts ...pulumi.ResourceOption) (*AccessPolicyAccessLevel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessLevelsId == nil {
		return nil, errors.New("invalid value for required argument 'AccessLevelsId'")
	}
	if args.AccessPoliciesId == nil {
		return nil, errors.New("invalid value for required argument 'AccessPoliciesId'")
	}
	var resource AccessPolicyAccessLevel
	err := ctx.RegisterResource("gcp-native:accesscontextmanager/v1beta:AccessPolicyAccessLevel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessPolicyAccessLevel gets an existing AccessPolicyAccessLevel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessPolicyAccessLevel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessPolicyAccessLevelState, opts ...pulumi.ResourceOption) (*AccessPolicyAccessLevel, error) {
	var resource AccessPolicyAccessLevel
	err := ctx.ReadResource("gcp-native:accesscontextmanager/v1beta:AccessPolicyAccessLevel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessPolicyAccessLevel resources.
type accessPolicyAccessLevelState struct {
	// A `BasicLevel` composed of `Conditions`.
	Basic *BasicLevelResponse `pulumi:"basic"`
	// A `CustomLevel` written in the Common Expression Language.
	Custom *CustomLevelResponse `pulumi:"custom"`
	// Description of the `AccessLevel` and its use. Does not affect behavior.
	Description *string `pulumi:"description"`
	// Required. Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{policy_id}/accessLevels/{short_name}`. The maximum length // of the `short_name` component is 50 characters.
	Name *string `pulumi:"name"`
	// Human readable title. Must be unique within the Policy.
	Title *string `pulumi:"title"`
}

type AccessPolicyAccessLevelState struct {
	// A `BasicLevel` composed of `Conditions`.
	Basic BasicLevelResponsePtrInput
	// A `CustomLevel` written in the Common Expression Language.
	Custom CustomLevelResponsePtrInput
	// Description of the `AccessLevel` and its use. Does not affect behavior.
	Description pulumi.StringPtrInput
	// Required. Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{policy_id}/accessLevels/{short_name}`. The maximum length // of the `short_name` component is 50 characters.
	Name pulumi.StringPtrInput
	// Human readable title. Must be unique within the Policy.
	Title pulumi.StringPtrInput
}

func (AccessPolicyAccessLevelState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessPolicyAccessLevelState)(nil)).Elem()
}

type accessPolicyAccessLevelArgs struct {
	AccessLevelsId   string `pulumi:"accessLevelsId"`
	AccessPoliciesId string `pulumi:"accessPoliciesId"`
	// A `BasicLevel` composed of `Conditions`.
	Basic *BasicLevel `pulumi:"basic"`
	// A `CustomLevel` written in the Common Expression Language.
	Custom *CustomLevel `pulumi:"custom"`
	// Description of the `AccessLevel` and its use. Does not affect behavior.
	Description *string `pulumi:"description"`
	// Required. Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{policy_id}/accessLevels/{short_name}`. The maximum length // of the `short_name` component is 50 characters.
	Name *string `pulumi:"name"`
	// Human readable title. Must be unique within the Policy.
	Title *string `pulumi:"title"`
}

// The set of arguments for constructing a AccessPolicyAccessLevel resource.
type AccessPolicyAccessLevelArgs struct {
	AccessLevelsId   pulumi.StringInput
	AccessPoliciesId pulumi.StringInput
	// A `BasicLevel` composed of `Conditions`.
	Basic BasicLevelPtrInput
	// A `CustomLevel` written in the Common Expression Language.
	Custom CustomLevelPtrInput
	// Description of the `AccessLevel` and its use. Does not affect behavior.
	Description pulumi.StringPtrInput
	// Required. Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{policy_id}/accessLevels/{short_name}`. The maximum length // of the `short_name` component is 50 characters.
	Name pulumi.StringPtrInput
	// Human readable title. Must be unique within the Policy.
	Title pulumi.StringPtrInput
}

func (AccessPolicyAccessLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessPolicyAccessLevelArgs)(nil)).Elem()
}

type AccessPolicyAccessLevelInput interface {
	pulumi.Input

	ToAccessPolicyAccessLevelOutput() AccessPolicyAccessLevelOutput
	ToAccessPolicyAccessLevelOutputWithContext(ctx context.Context) AccessPolicyAccessLevelOutput
}

func (*AccessPolicyAccessLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyAccessLevel)(nil))
}

func (i *AccessPolicyAccessLevel) ToAccessPolicyAccessLevelOutput() AccessPolicyAccessLevelOutput {
	return i.ToAccessPolicyAccessLevelOutputWithContext(context.Background())
}

func (i *AccessPolicyAccessLevel) ToAccessPolicyAccessLevelOutputWithContext(ctx context.Context) AccessPolicyAccessLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyAccessLevelOutput)
}

type AccessPolicyAccessLevelOutput struct {
	*pulumi.OutputState
}

func (AccessPolicyAccessLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyAccessLevel)(nil))
}

func (o AccessPolicyAccessLevelOutput) ToAccessPolicyAccessLevelOutput() AccessPolicyAccessLevelOutput {
	return o
}

func (o AccessPolicyAccessLevelOutput) ToAccessPolicyAccessLevelOutputWithContext(ctx context.Context) AccessPolicyAccessLevelOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AccessPolicyAccessLevelOutput{})
}
