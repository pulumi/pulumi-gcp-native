// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v3beta1

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-gcp-native/sdk/go/gcp"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "gcp-native:dialogflow/v3beta1:Agent":
		r, err = NewAgent(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:dialogflow/v3beta1:AgentEntityType":
		r, err = NewAgentEntityType(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:dialogflow/v3beta1:AgentEnvironment":
		r, err = NewAgentEnvironment(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:dialogflow/v3beta1:AgentEnvironmentExperiment":
		r, err = NewAgentEnvironmentExperiment(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:dialogflow/v3beta1:AgentEnvironmentSessionEntityType":
		r, err = NewAgentEnvironmentSessionEntityType(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:dialogflow/v3beta1:AgentFlow":
		r, err = NewAgentFlow(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:dialogflow/v3beta1:AgentFlowPage":
		r, err = NewAgentFlowPage(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:dialogflow/v3beta1:AgentFlowTransitionRouteGroup":
		r, err = NewAgentFlowTransitionRouteGroup(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:dialogflow/v3beta1:AgentFlowVersion":
		r, err = NewAgentFlowVersion(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:dialogflow/v3beta1:AgentIntent":
		r, err = NewAgentIntent(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:dialogflow/v3beta1:AgentSessionEntityType":
		r, err = NewAgentSessionEntityType(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:dialogflow/v3beta1:AgentTestCase":
		r, err = NewAgentTestCase(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:dialogflow/v3beta1:AgentWebhook":
		r, err = NewAgentWebhook(ctx, name, nil, pulumi.URN_(urn))
	case "gcp-native:dialogflow/v3beta1:SecuritySetting":
		r, err = NewSecuritySetting(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := gcp.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"gcp-native",
		"dialogflow/v3beta1",
		&module{version},
	)
}
