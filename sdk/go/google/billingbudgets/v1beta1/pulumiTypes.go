// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// AllUpdatesRule defines notifications that are sent based on budget spend and thresholds.
type GoogleCloudBillingBudgetsV1beta1AllUpdatesRule struct {
	// Optional. When set to true, disables default notifications sent when a threshold is exceeded. Default notifications are sent to those with Billing Account Administrator and Billing Account User IAM roles for the target account.
	DisableDefaultIamRecipients *bool `pulumi:"disableDefaultIamRecipients"`
	// Optional. When set to true, and when the budget has a single project configured, notifications will be sent to project level recipients of that project. This field will be ignored if the budget has multiple or no project configured. Currently, project level recipients are the users with `Owner` role on a cloud project.
	EnableProjectLevelRecipients *bool `pulumi:"enableProjectLevelRecipients"`
	// Optional. Targets to send notifications to when a threshold is exceeded. This is in addition to default recipients who have billing account IAM roles. The value is the full REST resource name of a monitoring notification channel with the form `projects/{project_id}/notificationChannels/{channel_id}`. A maximum of 5 channels are allowed. See https://cloud.google.com/billing/docs/how-to/budgets-notification-recipients for more details.
	MonitoringNotificationChannels []string `pulumi:"monitoringNotificationChannels"`
	// Optional. The name of the Pub/Sub topic where budget related messages will be published, in the form `projects/{project_id}/topics/{topic_id}`. Updates are sent at regular intervals to the topic. The topic needs to be created before the budget is created; see https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications for more details. Caller is expected to have `pubsub.topics.setIamPolicy` permission on the topic when it's set for a budget, otherwise, the API call will fail with PERMISSION_DENIED. See https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#permissions_required_for_this_task for more details on Pub/Sub roles and permissions.
	PubsubTopic *string `pulumi:"pubsubTopic"`
	// Optional. Required when AllUpdatesRule.pubsub_topic is set. The schema version of the notification sent to AllUpdatesRule.pubsub_topic. Only "1.0" is accepted. It represents the JSON schema as defined in https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format.
	SchemaVersion *string `pulumi:"schemaVersion"`
}

// GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleInput is an input type that accepts GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleArgs and GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput values.
// You can construct a concrete instance of `GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleInput` via:
//
//	GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleArgs{...}
type GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleInput interface {
	pulumi.Input

	ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput() GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput
	ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutputWithContext(context.Context) GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput
}

// AllUpdatesRule defines notifications that are sent based on budget spend and thresholds.
type GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleArgs struct {
	// Optional. When set to true, disables default notifications sent when a threshold is exceeded. Default notifications are sent to those with Billing Account Administrator and Billing Account User IAM roles for the target account.
	DisableDefaultIamRecipients pulumi.BoolPtrInput `pulumi:"disableDefaultIamRecipients"`
	// Optional. When set to true, and when the budget has a single project configured, notifications will be sent to project level recipients of that project. This field will be ignored if the budget has multiple or no project configured. Currently, project level recipients are the users with `Owner` role on a cloud project.
	EnableProjectLevelRecipients pulumi.BoolPtrInput `pulumi:"enableProjectLevelRecipients"`
	// Optional. Targets to send notifications to when a threshold is exceeded. This is in addition to default recipients who have billing account IAM roles. The value is the full REST resource name of a monitoring notification channel with the form `projects/{project_id}/notificationChannels/{channel_id}`. A maximum of 5 channels are allowed. See https://cloud.google.com/billing/docs/how-to/budgets-notification-recipients for more details.
	MonitoringNotificationChannels pulumi.StringArrayInput `pulumi:"monitoringNotificationChannels"`
	// Optional. The name of the Pub/Sub topic where budget related messages will be published, in the form `projects/{project_id}/topics/{topic_id}`. Updates are sent at regular intervals to the topic. The topic needs to be created before the budget is created; see https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications for more details. Caller is expected to have `pubsub.topics.setIamPolicy` permission on the topic when it's set for a budget, otherwise, the API call will fail with PERMISSION_DENIED. See https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#permissions_required_for_this_task for more details on Pub/Sub roles and permissions.
	PubsubTopic pulumi.StringPtrInput `pulumi:"pubsubTopic"`
	// Optional. Required when AllUpdatesRule.pubsub_topic is set. The schema version of the notification sent to AllUpdatesRule.pubsub_topic. Only "1.0" is accepted. It represents the JSON schema as defined in https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format.
	SchemaVersion pulumi.StringPtrInput `pulumi:"schemaVersion"`
}

func (GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1AllUpdatesRule)(nil)).Elem()
}

func (i GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleArgs) ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput() GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutputWithContext(context.Background())
}

func (i GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleArgs) ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput)
}

func (i GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleArgs) ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput() GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutputWithContext(context.Background())
}

func (i GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleArgs) ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput).ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutputWithContext(ctx)
}

// GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrInput is an input type that accepts GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleArgs, GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtr and GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput values.
// You can construct a concrete instance of `GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrInput` via:
//
//	        GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrInput interface {
	pulumi.Input

	ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput() GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput
	ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutputWithContext(context.Context) GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput
}

type googleCloudBillingBudgetsV1beta1AllUpdatesRulePtrType GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleArgs

func GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtr(v *GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleArgs) GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrInput {
	return (*googleCloudBillingBudgetsV1beta1AllUpdatesRulePtrType)(v)
}

func (*googleCloudBillingBudgetsV1beta1AllUpdatesRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBillingBudgetsV1beta1AllUpdatesRule)(nil)).Elem()
}

func (i *googleCloudBillingBudgetsV1beta1AllUpdatesRulePtrType) ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput() GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutputWithContext(context.Background())
}

func (i *googleCloudBillingBudgetsV1beta1AllUpdatesRulePtrType) ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput)
}

// AllUpdatesRule defines notifications that are sent based on budget spend and thresholds.
type GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1AllUpdatesRule)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput) ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput() GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput) ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput) ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput() GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput {
	return o.ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutputWithContext(context.Background())
}

func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput) ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudBillingBudgetsV1beta1AllUpdatesRule) *GoogleCloudBillingBudgetsV1beta1AllUpdatesRule {
		return &v
	}).(GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput)
}

// Optional. When set to true, disables default notifications sent when a threshold is exceeded. Default notifications are sent to those with Billing Account Administrator and Billing Account User IAM roles for the target account.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput) DisableDefaultIamRecipients() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1AllUpdatesRule) *bool { return v.DisableDefaultIamRecipients }).(pulumi.BoolPtrOutput)
}

// Optional. When set to true, and when the budget has a single project configured, notifications will be sent to project level recipients of that project. This field will be ignored if the budget has multiple or no project configured. Currently, project level recipients are the users with `Owner` role on a cloud project.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput) EnableProjectLevelRecipients() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1AllUpdatesRule) *bool { return v.EnableProjectLevelRecipients }).(pulumi.BoolPtrOutput)
}

// Optional. Targets to send notifications to when a threshold is exceeded. This is in addition to default recipients who have billing account IAM roles. The value is the full REST resource name of a monitoring notification channel with the form `projects/{project_id}/notificationChannels/{channel_id}`. A maximum of 5 channels are allowed. See https://cloud.google.com/billing/docs/how-to/budgets-notification-recipients for more details.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput) MonitoringNotificationChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1AllUpdatesRule) []string {
		return v.MonitoringNotificationChannels
	}).(pulumi.StringArrayOutput)
}

// Optional. The name of the Pub/Sub topic where budget related messages will be published, in the form `projects/{project_id}/topics/{topic_id}`. Updates are sent at regular intervals to the topic. The topic needs to be created before the budget is created; see https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications for more details. Caller is expected to have `pubsub.topics.setIamPolicy` permission on the topic when it's set for a budget, otherwise, the API call will fail with PERMISSION_DENIED. See https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#permissions_required_for_this_task for more details on Pub/Sub roles and permissions.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput) PubsubTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1AllUpdatesRule) *string { return v.PubsubTopic }).(pulumi.StringPtrOutput)
}

// Optional. Required when AllUpdatesRule.pubsub_topic is set. The schema version of the notification sent to AllUpdatesRule.pubsub_topic. Only "1.0" is accepted. It represents the JSON schema as defined in https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput) SchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1AllUpdatesRule) *string { return v.SchemaVersion }).(pulumi.StringPtrOutput)
}

type GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBillingBudgetsV1beta1AllUpdatesRule)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput) ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput() GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput) ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput) Elem() GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1AllUpdatesRule) GoogleCloudBillingBudgetsV1beta1AllUpdatesRule {
		if v != nil {
			return *v
		}
		var ret GoogleCloudBillingBudgetsV1beta1AllUpdatesRule
		return ret
	}).(GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput)
}

// Optional. When set to true, disables default notifications sent when a threshold is exceeded. Default notifications are sent to those with Billing Account Administrator and Billing Account User IAM roles for the target account.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput) DisableDefaultIamRecipients() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1AllUpdatesRule) *bool {
		if v == nil {
			return nil
		}
		return v.DisableDefaultIamRecipients
	}).(pulumi.BoolPtrOutput)
}

// Optional. When set to true, and when the budget has a single project configured, notifications will be sent to project level recipients of that project. This field will be ignored if the budget has multiple or no project configured. Currently, project level recipients are the users with `Owner` role on a cloud project.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput) EnableProjectLevelRecipients() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1AllUpdatesRule) *bool {
		if v == nil {
			return nil
		}
		return v.EnableProjectLevelRecipients
	}).(pulumi.BoolPtrOutput)
}

// Optional. Targets to send notifications to when a threshold is exceeded. This is in addition to default recipients who have billing account IAM roles. The value is the full REST resource name of a monitoring notification channel with the form `projects/{project_id}/notificationChannels/{channel_id}`. A maximum of 5 channels are allowed. See https://cloud.google.com/billing/docs/how-to/budgets-notification-recipients for more details.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput) MonitoringNotificationChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1AllUpdatesRule) []string {
		if v == nil {
			return nil
		}
		return v.MonitoringNotificationChannels
	}).(pulumi.StringArrayOutput)
}

// Optional. The name of the Pub/Sub topic where budget related messages will be published, in the form `projects/{project_id}/topics/{topic_id}`. Updates are sent at regular intervals to the topic. The topic needs to be created before the budget is created; see https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications for more details. Caller is expected to have `pubsub.topics.setIamPolicy` permission on the topic when it's set for a budget, otherwise, the API call will fail with PERMISSION_DENIED. See https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#permissions_required_for_this_task for more details on Pub/Sub roles and permissions.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput) PubsubTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1AllUpdatesRule) *string {
		if v == nil {
			return nil
		}
		return v.PubsubTopic
	}).(pulumi.StringPtrOutput)
}

// Optional. Required when AllUpdatesRule.pubsub_topic is set. The schema version of the notification sent to AllUpdatesRule.pubsub_topic. Only "1.0" is accepted. It represents the JSON schema as defined in https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput) SchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1AllUpdatesRule) *string {
		if v == nil {
			return nil
		}
		return v.SchemaVersion
	}).(pulumi.StringPtrOutput)
}

// AllUpdatesRule defines notifications that are sent based on budget spend and thresholds.
type GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse struct {
	// Optional. When set to true, disables default notifications sent when a threshold is exceeded. Default notifications are sent to those with Billing Account Administrator and Billing Account User IAM roles for the target account.
	DisableDefaultIamRecipients bool `pulumi:"disableDefaultIamRecipients"`
	// Optional. When set to true, and when the budget has a single project configured, notifications will be sent to project level recipients of that project. This field will be ignored if the budget has multiple or no project configured. Currently, project level recipients are the users with `Owner` role on a cloud project.
	EnableProjectLevelRecipients bool `pulumi:"enableProjectLevelRecipients"`
	// Optional. Targets to send notifications to when a threshold is exceeded. This is in addition to default recipients who have billing account IAM roles. The value is the full REST resource name of a monitoring notification channel with the form `projects/{project_id}/notificationChannels/{channel_id}`. A maximum of 5 channels are allowed. See https://cloud.google.com/billing/docs/how-to/budgets-notification-recipients for more details.
	MonitoringNotificationChannels []string `pulumi:"monitoringNotificationChannels"`
	// Optional. The name of the Pub/Sub topic where budget related messages will be published, in the form `projects/{project_id}/topics/{topic_id}`. Updates are sent at regular intervals to the topic. The topic needs to be created before the budget is created; see https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications for more details. Caller is expected to have `pubsub.topics.setIamPolicy` permission on the topic when it's set for a budget, otherwise, the API call will fail with PERMISSION_DENIED. See https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#permissions_required_for_this_task for more details on Pub/Sub roles and permissions.
	PubsubTopic string `pulumi:"pubsubTopic"`
	// Optional. Required when AllUpdatesRule.pubsub_topic is set. The schema version of the notification sent to AllUpdatesRule.pubsub_topic. Only "1.0" is accepted. It represents the JSON schema as defined in https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format.
	SchemaVersion string `pulumi:"schemaVersion"`
}

// AllUpdatesRule defines notifications that are sent based on budget spend and thresholds.
type GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponseOutput) ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponseOutput() GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponseOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponseOutput) ToGoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponseOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponseOutput {
	return o
}

// Optional. When set to true, disables default notifications sent when a threshold is exceeded. Default notifications are sent to those with Billing Account Administrator and Billing Account User IAM roles for the target account.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponseOutput) DisableDefaultIamRecipients() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse) bool {
		return v.DisableDefaultIamRecipients
	}).(pulumi.BoolOutput)
}

// Optional. When set to true, and when the budget has a single project configured, notifications will be sent to project level recipients of that project. This field will be ignored if the budget has multiple or no project configured. Currently, project level recipients are the users with `Owner` role on a cloud project.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponseOutput) EnableProjectLevelRecipients() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse) bool {
		return v.EnableProjectLevelRecipients
	}).(pulumi.BoolOutput)
}

// Optional. Targets to send notifications to when a threshold is exceeded. This is in addition to default recipients who have billing account IAM roles. The value is the full REST resource name of a monitoring notification channel with the form `projects/{project_id}/notificationChannels/{channel_id}`. A maximum of 5 channels are allowed. See https://cloud.google.com/billing/docs/how-to/budgets-notification-recipients for more details.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponseOutput) MonitoringNotificationChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse) []string {
		return v.MonitoringNotificationChannels
	}).(pulumi.StringArrayOutput)
}

// Optional. The name of the Pub/Sub topic where budget related messages will be published, in the form `projects/{project_id}/topics/{topic_id}`. Updates are sent at regular intervals to the topic. The topic needs to be created before the budget is created; see https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications for more details. Caller is expected to have `pubsub.topics.setIamPolicy` permission on the topic when it's set for a budget, otherwise, the API call will fail with PERMISSION_DENIED. See https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#permissions_required_for_this_task for more details on Pub/Sub roles and permissions.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponseOutput) PubsubTopic() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse) string { return v.PubsubTopic }).(pulumi.StringOutput)
}

// Optional. Required when AllUpdatesRule.pubsub_topic is set. The schema version of the notification sent to AllUpdatesRule.pubsub_topic. Only "1.0" is accepted. It represents the JSON schema as defined in https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format.
func (o GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponseOutput) SchemaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponse) string { return v.SchemaVersion }).(pulumi.StringOutput)
}

// The budgeted amount for each usage period.
type GoogleCloudBillingBudgetsV1beta1BudgetAmount struct {
	// Use the last period's actual spend as the budget for the present period. LastPeriodAmount can only be set when the budget's time period is a Filter.calendar_period. It cannot be set in combination with Filter.custom_period.
	LastPeriodAmount *GoogleCloudBillingBudgetsV1beta1LastPeriodAmount `pulumi:"lastPeriodAmount"`
	// A specified amount to use as the budget. `currency_code` is optional. If specified when creating a budget, it must match the currency of the billing account. If specified when updating a budget, it must match the currency_code of the existing budget. The `currency_code` is provided on output.
	SpecifiedAmount *GoogleTypeMoney `pulumi:"specifiedAmount"`
}

// GoogleCloudBillingBudgetsV1beta1BudgetAmountInput is an input type that accepts GoogleCloudBillingBudgetsV1beta1BudgetAmountArgs and GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput values.
// You can construct a concrete instance of `GoogleCloudBillingBudgetsV1beta1BudgetAmountInput` via:
//
//	GoogleCloudBillingBudgetsV1beta1BudgetAmountArgs{...}
type GoogleCloudBillingBudgetsV1beta1BudgetAmountInput interface {
	pulumi.Input

	ToGoogleCloudBillingBudgetsV1beta1BudgetAmountOutput() GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput
	ToGoogleCloudBillingBudgetsV1beta1BudgetAmountOutputWithContext(context.Context) GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput
}

// The budgeted amount for each usage period.
type GoogleCloudBillingBudgetsV1beta1BudgetAmountArgs struct {
	// Use the last period's actual spend as the budget for the present period. LastPeriodAmount can only be set when the budget's time period is a Filter.calendar_period. It cannot be set in combination with Filter.custom_period.
	LastPeriodAmount GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrInput `pulumi:"lastPeriodAmount"`
	// A specified amount to use as the budget. `currency_code` is optional. If specified when creating a budget, it must match the currency of the billing account. If specified when updating a budget, it must match the currency_code of the existing budget. The `currency_code` is provided on output.
	SpecifiedAmount GoogleTypeMoneyPtrInput `pulumi:"specifiedAmount"`
}

func (GoogleCloudBillingBudgetsV1beta1BudgetAmountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1BudgetAmount)(nil)).Elem()
}

func (i GoogleCloudBillingBudgetsV1beta1BudgetAmountArgs) ToGoogleCloudBillingBudgetsV1beta1BudgetAmountOutput() GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1BudgetAmountOutputWithContext(context.Background())
}

func (i GoogleCloudBillingBudgetsV1beta1BudgetAmountArgs) ToGoogleCloudBillingBudgetsV1beta1BudgetAmountOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput)
}

// The budgeted amount for each usage period.
type GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1BudgetAmount)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput) ToGoogleCloudBillingBudgetsV1beta1BudgetAmountOutput() GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput) ToGoogleCloudBillingBudgetsV1beta1BudgetAmountOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput {
	return o
}

// Use the last period's actual spend as the budget for the present period. LastPeriodAmount can only be set when the budget's time period is a Filter.calendar_period. It cannot be set in combination with Filter.custom_period.
func (o GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput) LastPeriodAmount() GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1BudgetAmount) *GoogleCloudBillingBudgetsV1beta1LastPeriodAmount {
		return v.LastPeriodAmount
	}).(GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput)
}

// A specified amount to use as the budget. `currency_code` is optional. If specified when creating a budget, it must match the currency of the billing account. If specified when updating a budget, it must match the currency_code of the existing budget. The `currency_code` is provided on output.
func (o GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput) SpecifiedAmount() GoogleTypeMoneyPtrOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1BudgetAmount) *GoogleTypeMoney { return v.SpecifiedAmount }).(GoogleTypeMoneyPtrOutput)
}

// The budgeted amount for each usage period.
type GoogleCloudBillingBudgetsV1beta1BudgetAmountResponse struct {
	// Use the last period's actual spend as the budget for the present period. LastPeriodAmount can only be set when the budget's time period is a Filter.calendar_period. It cannot be set in combination with Filter.custom_period.
	LastPeriodAmount GoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponse `pulumi:"lastPeriodAmount"`
	// A specified amount to use as the budget. `currency_code` is optional. If specified when creating a budget, it must match the currency of the billing account. If specified when updating a budget, it must match the currency_code of the existing budget. The `currency_code` is provided on output.
	SpecifiedAmount GoogleTypeMoneyResponse `pulumi:"specifiedAmount"`
}

// The budgeted amount for each usage period.
type GoogleCloudBillingBudgetsV1beta1BudgetAmountResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1BudgetAmountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1BudgetAmountResponse)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1BudgetAmountResponseOutput) ToGoogleCloudBillingBudgetsV1beta1BudgetAmountResponseOutput() GoogleCloudBillingBudgetsV1beta1BudgetAmountResponseOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1BudgetAmountResponseOutput) ToGoogleCloudBillingBudgetsV1beta1BudgetAmountResponseOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1BudgetAmountResponseOutput {
	return o
}

// Use the last period's actual spend as the budget for the present period. LastPeriodAmount can only be set when the budget's time period is a Filter.calendar_period. It cannot be set in combination with Filter.custom_period.
func (o GoogleCloudBillingBudgetsV1beta1BudgetAmountResponseOutput) LastPeriodAmount() GoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponseOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1BudgetAmountResponse) GoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponse {
		return v.LastPeriodAmount
	}).(GoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponseOutput)
}

// A specified amount to use as the budget. `currency_code` is optional. If specified when creating a budget, it must match the currency of the billing account. If specified when updating a budget, it must match the currency_code of the existing budget. The `currency_code` is provided on output.
func (o GoogleCloudBillingBudgetsV1beta1BudgetAmountResponseOutput) SpecifiedAmount() GoogleTypeMoneyResponseOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1BudgetAmountResponse) GoogleTypeMoneyResponse {
		return v.SpecifiedAmount
	}).(GoogleTypeMoneyResponseOutput)
}

// All date times begin at 12 AM US and Canadian Pacific Time (UTC-8).
type GoogleCloudBillingBudgetsV1beta1CustomPeriod struct {
	// Optional. The end date of the time period. Budgets with elapsed end date won't be processed. If unset, specifies to track all usage incurred since the start_date.
	EndDate *GoogleTypeDate `pulumi:"endDate"`
	// The start date must be after January 1, 2017.
	StartDate GoogleTypeDate `pulumi:"startDate"`
}

// GoogleCloudBillingBudgetsV1beta1CustomPeriodInput is an input type that accepts GoogleCloudBillingBudgetsV1beta1CustomPeriodArgs and GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput values.
// You can construct a concrete instance of `GoogleCloudBillingBudgetsV1beta1CustomPeriodInput` via:
//
//	GoogleCloudBillingBudgetsV1beta1CustomPeriodArgs{...}
type GoogleCloudBillingBudgetsV1beta1CustomPeriodInput interface {
	pulumi.Input

	ToGoogleCloudBillingBudgetsV1beta1CustomPeriodOutput() GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput
	ToGoogleCloudBillingBudgetsV1beta1CustomPeriodOutputWithContext(context.Context) GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput
}

// All date times begin at 12 AM US and Canadian Pacific Time (UTC-8).
type GoogleCloudBillingBudgetsV1beta1CustomPeriodArgs struct {
	// Optional. The end date of the time period. Budgets with elapsed end date won't be processed. If unset, specifies to track all usage incurred since the start_date.
	EndDate GoogleTypeDatePtrInput `pulumi:"endDate"`
	// The start date must be after January 1, 2017.
	StartDate GoogleTypeDateInput `pulumi:"startDate"`
}

func (GoogleCloudBillingBudgetsV1beta1CustomPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1CustomPeriod)(nil)).Elem()
}

func (i GoogleCloudBillingBudgetsV1beta1CustomPeriodArgs) ToGoogleCloudBillingBudgetsV1beta1CustomPeriodOutput() GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1CustomPeriodOutputWithContext(context.Background())
}

func (i GoogleCloudBillingBudgetsV1beta1CustomPeriodArgs) ToGoogleCloudBillingBudgetsV1beta1CustomPeriodOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput)
}

func (i GoogleCloudBillingBudgetsV1beta1CustomPeriodArgs) ToGoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput() GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutputWithContext(context.Background())
}

func (i GoogleCloudBillingBudgetsV1beta1CustomPeriodArgs) ToGoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput).ToGoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutputWithContext(ctx)
}

// GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrInput is an input type that accepts GoogleCloudBillingBudgetsV1beta1CustomPeriodArgs, GoogleCloudBillingBudgetsV1beta1CustomPeriodPtr and GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput values.
// You can construct a concrete instance of `GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrInput` via:
//
//	        GoogleCloudBillingBudgetsV1beta1CustomPeriodArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrInput interface {
	pulumi.Input

	ToGoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput() GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput
	ToGoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutputWithContext(context.Context) GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput
}

type googleCloudBillingBudgetsV1beta1CustomPeriodPtrType GoogleCloudBillingBudgetsV1beta1CustomPeriodArgs

func GoogleCloudBillingBudgetsV1beta1CustomPeriodPtr(v *GoogleCloudBillingBudgetsV1beta1CustomPeriodArgs) GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrInput {
	return (*googleCloudBillingBudgetsV1beta1CustomPeriodPtrType)(v)
}

func (*googleCloudBillingBudgetsV1beta1CustomPeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBillingBudgetsV1beta1CustomPeriod)(nil)).Elem()
}

func (i *googleCloudBillingBudgetsV1beta1CustomPeriodPtrType) ToGoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput() GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutputWithContext(context.Background())
}

func (i *googleCloudBillingBudgetsV1beta1CustomPeriodPtrType) ToGoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput)
}

// All date times begin at 12 AM US and Canadian Pacific Time (UTC-8).
type GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1CustomPeriod)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput) ToGoogleCloudBillingBudgetsV1beta1CustomPeriodOutput() GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput) ToGoogleCloudBillingBudgetsV1beta1CustomPeriodOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput) ToGoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput() GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput {
	return o.ToGoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutputWithContext(context.Background())
}

func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput) ToGoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudBillingBudgetsV1beta1CustomPeriod) *GoogleCloudBillingBudgetsV1beta1CustomPeriod {
		return &v
	}).(GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput)
}

// Optional. The end date of the time period. Budgets with elapsed end date won't be processed. If unset, specifies to track all usage incurred since the start_date.
func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput) EndDate() GoogleTypeDatePtrOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1CustomPeriod) *GoogleTypeDate { return v.EndDate }).(GoogleTypeDatePtrOutput)
}

// The start date must be after January 1, 2017.
func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput) StartDate() GoogleTypeDateOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1CustomPeriod) GoogleTypeDate { return v.StartDate }).(GoogleTypeDateOutput)
}

type GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBillingBudgetsV1beta1CustomPeriod)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput) ToGoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput() GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput) ToGoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput) Elem() GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1CustomPeriod) GoogleCloudBillingBudgetsV1beta1CustomPeriod {
		if v != nil {
			return *v
		}
		var ret GoogleCloudBillingBudgetsV1beta1CustomPeriod
		return ret
	}).(GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput)
}

// Optional. The end date of the time period. Budgets with elapsed end date won't be processed. If unset, specifies to track all usage incurred since the start_date.
func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput) EndDate() GoogleTypeDatePtrOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1CustomPeriod) *GoogleTypeDate {
		if v == nil {
			return nil
		}
		return v.EndDate
	}).(GoogleTypeDatePtrOutput)
}

// The start date must be after January 1, 2017.
func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput) StartDate() GoogleTypeDatePtrOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1CustomPeriod) *GoogleTypeDate {
		if v == nil {
			return nil
		}
		return &v.StartDate
	}).(GoogleTypeDatePtrOutput)
}

// All date times begin at 12 AM US and Canadian Pacific Time (UTC-8).
type GoogleCloudBillingBudgetsV1beta1CustomPeriodResponse struct {
	// Optional. The end date of the time period. Budgets with elapsed end date won't be processed. If unset, specifies to track all usage incurred since the start_date.
	EndDate GoogleTypeDateResponse `pulumi:"endDate"`
	// The start date must be after January 1, 2017.
	StartDate GoogleTypeDateResponse `pulumi:"startDate"`
}

// All date times begin at 12 AM US and Canadian Pacific Time (UTC-8).
type GoogleCloudBillingBudgetsV1beta1CustomPeriodResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1CustomPeriodResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1CustomPeriodResponse)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodResponseOutput) ToGoogleCloudBillingBudgetsV1beta1CustomPeriodResponseOutput() GoogleCloudBillingBudgetsV1beta1CustomPeriodResponseOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodResponseOutput) ToGoogleCloudBillingBudgetsV1beta1CustomPeriodResponseOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1CustomPeriodResponseOutput {
	return o
}

// Optional. The end date of the time period. Budgets with elapsed end date won't be processed. If unset, specifies to track all usage incurred since the start_date.
func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodResponseOutput) EndDate() GoogleTypeDateResponseOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1CustomPeriodResponse) GoogleTypeDateResponse { return v.EndDate }).(GoogleTypeDateResponseOutput)
}

// The start date must be after January 1, 2017.
func (o GoogleCloudBillingBudgetsV1beta1CustomPeriodResponseOutput) StartDate() GoogleTypeDateResponseOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1CustomPeriodResponse) GoogleTypeDateResponse {
		return v.StartDate
	}).(GoogleTypeDateResponseOutput)
}

// A filter for a budget, limiting the scope of the cost to calculate.
type GoogleCloudBillingBudgetsV1beta1Filter struct {
	// Optional. Specifies to track usage for recurring calendar period. For example, assume that CalendarPeriod.QUARTER is set. The budget will track usage from April 1 to June 30, when the current calendar month is April, May, June. After that, it will track usage from July 1 to September 30 when the current calendar month is July, August, September, so on.
	CalendarPeriod *GoogleCloudBillingBudgetsV1beta1FilterCalendarPeriod `pulumi:"calendarPeriod"`
	// Optional. If Filter.credit_types_treatment is INCLUDE_SPECIFIED_CREDITS, this is a list of credit types to be subtracted from gross cost to determine the spend for threshold calculations. See [a list of acceptable credit type values](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type). If Filter.credit_types_treatment is **not** INCLUDE_SPECIFIED_CREDITS, this field must be empty.
	CreditTypes []string `pulumi:"creditTypes"`
	// Optional. If not set, default behavior is `INCLUDE_ALL_CREDITS`.
	CreditTypesTreatment *GoogleCloudBillingBudgetsV1beta1FilterCreditTypesTreatment `pulumi:"creditTypesTreatment"`
	// Optional. Specifies to track usage from any start date (required) to any end date (optional). This time period is static, it does not recur.
	CustomPeriod *GoogleCloudBillingBudgetsV1beta1CustomPeriod `pulumi:"customPeriod"`
	// Optional. A single label and value pair specifying that usage from only this set of labeled resources should be included in the budget. If omitted, the report will include all labeled and unlabeled usage. An object containing a single `"key": value` pair. Example: `{ "name": "wrench" }`. _Currently, multiple entries or multiple values per entry are not allowed._
	Labels map[string][]interface{} `pulumi:"labels"`
	// Optional. A set of projects of the form `projects/{project}`, specifying that usage from only this set of projects should be included in the budget. If omitted, the report will include all usage for the billing account, regardless of which project the usage occurred on.
	Projects []string `pulumi:"projects"`
	// Optional. A set of folder and organization names of the form `folders/{folderId}` or `organizations/{organizationId}`, specifying that usage from only this set of folders and organizations should be included in the budget. If omitted, the budget includes all usage that the billing account pays for. If the folder or organization contains projects that are paid for by a different Cloud Billing account, the budget *doesn't* apply to those projects.
	ResourceAncestors []string `pulumi:"resourceAncestors"`
	// Optional. A set of services of the form `services/{service_id}`, specifying that usage from only this set of services should be included in the budget. If omitted, the report will include usage for all the services. The service names are available through the Catalog API: https://cloud.google.com/billing/v1/how-tos/catalog-api.
	Services []string `pulumi:"services"`
	// Optional. A set of subaccounts of the form `billingAccounts/{account_id}`, specifying that usage from only this set of subaccounts should be included in the budget. If a subaccount is set to the name of the parent account, usage from the parent account will be included. If omitted, the report will include usage from the parent account and all subaccounts, if they exist.
	Subaccounts []string `pulumi:"subaccounts"`
}

// GoogleCloudBillingBudgetsV1beta1FilterInput is an input type that accepts GoogleCloudBillingBudgetsV1beta1FilterArgs and GoogleCloudBillingBudgetsV1beta1FilterOutput values.
// You can construct a concrete instance of `GoogleCloudBillingBudgetsV1beta1FilterInput` via:
//
//	GoogleCloudBillingBudgetsV1beta1FilterArgs{...}
type GoogleCloudBillingBudgetsV1beta1FilterInput interface {
	pulumi.Input

	ToGoogleCloudBillingBudgetsV1beta1FilterOutput() GoogleCloudBillingBudgetsV1beta1FilterOutput
	ToGoogleCloudBillingBudgetsV1beta1FilterOutputWithContext(context.Context) GoogleCloudBillingBudgetsV1beta1FilterOutput
}

// A filter for a budget, limiting the scope of the cost to calculate.
type GoogleCloudBillingBudgetsV1beta1FilterArgs struct {
	// Optional. Specifies to track usage for recurring calendar period. For example, assume that CalendarPeriod.QUARTER is set. The budget will track usage from April 1 to June 30, when the current calendar month is April, May, June. After that, it will track usage from July 1 to September 30 when the current calendar month is July, August, September, so on.
	CalendarPeriod GoogleCloudBillingBudgetsV1beta1FilterCalendarPeriodPtrInput `pulumi:"calendarPeriod"`
	// Optional. If Filter.credit_types_treatment is INCLUDE_SPECIFIED_CREDITS, this is a list of credit types to be subtracted from gross cost to determine the spend for threshold calculations. See [a list of acceptable credit type values](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type). If Filter.credit_types_treatment is **not** INCLUDE_SPECIFIED_CREDITS, this field must be empty.
	CreditTypes pulumi.StringArrayInput `pulumi:"creditTypes"`
	// Optional. If not set, default behavior is `INCLUDE_ALL_CREDITS`.
	CreditTypesTreatment GoogleCloudBillingBudgetsV1beta1FilterCreditTypesTreatmentPtrInput `pulumi:"creditTypesTreatment"`
	// Optional. Specifies to track usage from any start date (required) to any end date (optional). This time period is static, it does not recur.
	CustomPeriod GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrInput `pulumi:"customPeriod"`
	// Optional. A single label and value pair specifying that usage from only this set of labeled resources should be included in the budget. If omitted, the report will include all labeled and unlabeled usage. An object containing a single `"key": value` pair. Example: `{ "name": "wrench" }`. _Currently, multiple entries or multiple values per entry are not allowed._
	Labels pulumi.ArrayMapInput `pulumi:"labels"`
	// Optional. A set of projects of the form `projects/{project}`, specifying that usage from only this set of projects should be included in the budget. If omitted, the report will include all usage for the billing account, regardless of which project the usage occurred on.
	Projects pulumi.StringArrayInput `pulumi:"projects"`
	// Optional. A set of folder and organization names of the form `folders/{folderId}` or `organizations/{organizationId}`, specifying that usage from only this set of folders and organizations should be included in the budget. If omitted, the budget includes all usage that the billing account pays for. If the folder or organization contains projects that are paid for by a different Cloud Billing account, the budget *doesn't* apply to those projects.
	ResourceAncestors pulumi.StringArrayInput `pulumi:"resourceAncestors"`
	// Optional. A set of services of the form `services/{service_id}`, specifying that usage from only this set of services should be included in the budget. If omitted, the report will include usage for all the services. The service names are available through the Catalog API: https://cloud.google.com/billing/v1/how-tos/catalog-api.
	Services pulumi.StringArrayInput `pulumi:"services"`
	// Optional. A set of subaccounts of the form `billingAccounts/{account_id}`, specifying that usage from only this set of subaccounts should be included in the budget. If a subaccount is set to the name of the parent account, usage from the parent account will be included. If omitted, the report will include usage from the parent account and all subaccounts, if they exist.
	Subaccounts pulumi.StringArrayInput `pulumi:"subaccounts"`
}

func (GoogleCloudBillingBudgetsV1beta1FilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1Filter)(nil)).Elem()
}

func (i GoogleCloudBillingBudgetsV1beta1FilterArgs) ToGoogleCloudBillingBudgetsV1beta1FilterOutput() GoogleCloudBillingBudgetsV1beta1FilterOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1FilterOutputWithContext(context.Background())
}

func (i GoogleCloudBillingBudgetsV1beta1FilterArgs) ToGoogleCloudBillingBudgetsV1beta1FilterOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1FilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1FilterOutput)
}

func (i GoogleCloudBillingBudgetsV1beta1FilterArgs) ToGoogleCloudBillingBudgetsV1beta1FilterPtrOutput() GoogleCloudBillingBudgetsV1beta1FilterPtrOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1FilterPtrOutputWithContext(context.Background())
}

func (i GoogleCloudBillingBudgetsV1beta1FilterArgs) ToGoogleCloudBillingBudgetsV1beta1FilterPtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1FilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1FilterOutput).ToGoogleCloudBillingBudgetsV1beta1FilterPtrOutputWithContext(ctx)
}

// GoogleCloudBillingBudgetsV1beta1FilterPtrInput is an input type that accepts GoogleCloudBillingBudgetsV1beta1FilterArgs, GoogleCloudBillingBudgetsV1beta1FilterPtr and GoogleCloudBillingBudgetsV1beta1FilterPtrOutput values.
// You can construct a concrete instance of `GoogleCloudBillingBudgetsV1beta1FilterPtrInput` via:
//
//	        GoogleCloudBillingBudgetsV1beta1FilterArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudBillingBudgetsV1beta1FilterPtrInput interface {
	pulumi.Input

	ToGoogleCloudBillingBudgetsV1beta1FilterPtrOutput() GoogleCloudBillingBudgetsV1beta1FilterPtrOutput
	ToGoogleCloudBillingBudgetsV1beta1FilterPtrOutputWithContext(context.Context) GoogleCloudBillingBudgetsV1beta1FilterPtrOutput
}

type googleCloudBillingBudgetsV1beta1FilterPtrType GoogleCloudBillingBudgetsV1beta1FilterArgs

func GoogleCloudBillingBudgetsV1beta1FilterPtr(v *GoogleCloudBillingBudgetsV1beta1FilterArgs) GoogleCloudBillingBudgetsV1beta1FilterPtrInput {
	return (*googleCloudBillingBudgetsV1beta1FilterPtrType)(v)
}

func (*googleCloudBillingBudgetsV1beta1FilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBillingBudgetsV1beta1Filter)(nil)).Elem()
}

func (i *googleCloudBillingBudgetsV1beta1FilterPtrType) ToGoogleCloudBillingBudgetsV1beta1FilterPtrOutput() GoogleCloudBillingBudgetsV1beta1FilterPtrOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1FilterPtrOutputWithContext(context.Background())
}

func (i *googleCloudBillingBudgetsV1beta1FilterPtrType) ToGoogleCloudBillingBudgetsV1beta1FilterPtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1FilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1FilterPtrOutput)
}

// A filter for a budget, limiting the scope of the cost to calculate.
type GoogleCloudBillingBudgetsV1beta1FilterOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1FilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1Filter)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1FilterOutput) ToGoogleCloudBillingBudgetsV1beta1FilterOutput() GoogleCloudBillingBudgetsV1beta1FilterOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1FilterOutput) ToGoogleCloudBillingBudgetsV1beta1FilterOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1FilterOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1FilterOutput) ToGoogleCloudBillingBudgetsV1beta1FilterPtrOutput() GoogleCloudBillingBudgetsV1beta1FilterPtrOutput {
	return o.ToGoogleCloudBillingBudgetsV1beta1FilterPtrOutputWithContext(context.Background())
}

func (o GoogleCloudBillingBudgetsV1beta1FilterOutput) ToGoogleCloudBillingBudgetsV1beta1FilterPtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1FilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudBillingBudgetsV1beta1Filter) *GoogleCloudBillingBudgetsV1beta1Filter {
		return &v
	}).(GoogleCloudBillingBudgetsV1beta1FilterPtrOutput)
}

// Optional. Specifies to track usage for recurring calendar period. For example, assume that CalendarPeriod.QUARTER is set. The budget will track usage from April 1 to June 30, when the current calendar month is April, May, June. After that, it will track usage from July 1 to September 30 when the current calendar month is July, August, September, so on.
func (o GoogleCloudBillingBudgetsV1beta1FilterOutput) CalendarPeriod() GoogleCloudBillingBudgetsV1beta1FilterCalendarPeriodPtrOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1Filter) *GoogleCloudBillingBudgetsV1beta1FilterCalendarPeriod {
		return v.CalendarPeriod
	}).(GoogleCloudBillingBudgetsV1beta1FilterCalendarPeriodPtrOutput)
}

// Optional. If Filter.credit_types_treatment is INCLUDE_SPECIFIED_CREDITS, this is a list of credit types to be subtracted from gross cost to determine the spend for threshold calculations. See [a list of acceptable credit type values](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type). If Filter.credit_types_treatment is **not** INCLUDE_SPECIFIED_CREDITS, this field must be empty.
func (o GoogleCloudBillingBudgetsV1beta1FilterOutput) CreditTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1Filter) []string { return v.CreditTypes }).(pulumi.StringArrayOutput)
}

// Optional. If not set, default behavior is `INCLUDE_ALL_CREDITS`.
func (o GoogleCloudBillingBudgetsV1beta1FilterOutput) CreditTypesTreatment() GoogleCloudBillingBudgetsV1beta1FilterCreditTypesTreatmentPtrOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1Filter) *GoogleCloudBillingBudgetsV1beta1FilterCreditTypesTreatment {
		return v.CreditTypesTreatment
	}).(GoogleCloudBillingBudgetsV1beta1FilterCreditTypesTreatmentPtrOutput)
}

// Optional. Specifies to track usage from any start date (required) to any end date (optional). This time period is static, it does not recur.
func (o GoogleCloudBillingBudgetsV1beta1FilterOutput) CustomPeriod() GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1Filter) *GoogleCloudBillingBudgetsV1beta1CustomPeriod {
		return v.CustomPeriod
	}).(GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput)
}

// Optional. A single label and value pair specifying that usage from only this set of labeled resources should be included in the budget. If omitted, the report will include all labeled and unlabeled usage. An object containing a single `"key": value` pair. Example: `{ "name": "wrench" }`. _Currently, multiple entries or multiple values per entry are not allowed._
func (o GoogleCloudBillingBudgetsV1beta1FilterOutput) Labels() pulumi.ArrayMapOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1Filter) map[string][]interface{} { return v.Labels }).(pulumi.ArrayMapOutput)
}

// Optional. A set of projects of the form `projects/{project}`, specifying that usage from only this set of projects should be included in the budget. If omitted, the report will include all usage for the billing account, regardless of which project the usage occurred on.
func (o GoogleCloudBillingBudgetsV1beta1FilterOutput) Projects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1Filter) []string { return v.Projects }).(pulumi.StringArrayOutput)
}

// Optional. A set of folder and organization names of the form `folders/{folderId}` or `organizations/{organizationId}`, specifying that usage from only this set of folders and organizations should be included in the budget. If omitted, the budget includes all usage that the billing account pays for. If the folder or organization contains projects that are paid for by a different Cloud Billing account, the budget *doesn't* apply to those projects.
func (o GoogleCloudBillingBudgetsV1beta1FilterOutput) ResourceAncestors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1Filter) []string { return v.ResourceAncestors }).(pulumi.StringArrayOutput)
}

// Optional. A set of services of the form `services/{service_id}`, specifying that usage from only this set of services should be included in the budget. If omitted, the report will include usage for all the services. The service names are available through the Catalog API: https://cloud.google.com/billing/v1/how-tos/catalog-api.
func (o GoogleCloudBillingBudgetsV1beta1FilterOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1Filter) []string { return v.Services }).(pulumi.StringArrayOutput)
}

// Optional. A set of subaccounts of the form `billingAccounts/{account_id}`, specifying that usage from only this set of subaccounts should be included in the budget. If a subaccount is set to the name of the parent account, usage from the parent account will be included. If omitted, the report will include usage from the parent account and all subaccounts, if they exist.
func (o GoogleCloudBillingBudgetsV1beta1FilterOutput) Subaccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1Filter) []string { return v.Subaccounts }).(pulumi.StringArrayOutput)
}

type GoogleCloudBillingBudgetsV1beta1FilterPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1FilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBillingBudgetsV1beta1Filter)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1FilterPtrOutput) ToGoogleCloudBillingBudgetsV1beta1FilterPtrOutput() GoogleCloudBillingBudgetsV1beta1FilterPtrOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1FilterPtrOutput) ToGoogleCloudBillingBudgetsV1beta1FilterPtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1FilterPtrOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1FilterPtrOutput) Elem() GoogleCloudBillingBudgetsV1beta1FilterOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1Filter) GoogleCloudBillingBudgetsV1beta1Filter {
		if v != nil {
			return *v
		}
		var ret GoogleCloudBillingBudgetsV1beta1Filter
		return ret
	}).(GoogleCloudBillingBudgetsV1beta1FilterOutput)
}

// Optional. Specifies to track usage for recurring calendar period. For example, assume that CalendarPeriod.QUARTER is set. The budget will track usage from April 1 to June 30, when the current calendar month is April, May, June. After that, it will track usage from July 1 to September 30 when the current calendar month is July, August, September, so on.
func (o GoogleCloudBillingBudgetsV1beta1FilterPtrOutput) CalendarPeriod() GoogleCloudBillingBudgetsV1beta1FilterCalendarPeriodPtrOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1Filter) *GoogleCloudBillingBudgetsV1beta1FilterCalendarPeriod {
		if v == nil {
			return nil
		}
		return v.CalendarPeriod
	}).(GoogleCloudBillingBudgetsV1beta1FilterCalendarPeriodPtrOutput)
}

// Optional. If Filter.credit_types_treatment is INCLUDE_SPECIFIED_CREDITS, this is a list of credit types to be subtracted from gross cost to determine the spend for threshold calculations. See [a list of acceptable credit type values](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type). If Filter.credit_types_treatment is **not** INCLUDE_SPECIFIED_CREDITS, this field must be empty.
func (o GoogleCloudBillingBudgetsV1beta1FilterPtrOutput) CreditTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1Filter) []string {
		if v == nil {
			return nil
		}
		return v.CreditTypes
	}).(pulumi.StringArrayOutput)
}

// Optional. If not set, default behavior is `INCLUDE_ALL_CREDITS`.
func (o GoogleCloudBillingBudgetsV1beta1FilterPtrOutput) CreditTypesTreatment() GoogleCloudBillingBudgetsV1beta1FilterCreditTypesTreatmentPtrOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1Filter) *GoogleCloudBillingBudgetsV1beta1FilterCreditTypesTreatment {
		if v == nil {
			return nil
		}
		return v.CreditTypesTreatment
	}).(GoogleCloudBillingBudgetsV1beta1FilterCreditTypesTreatmentPtrOutput)
}

// Optional. Specifies to track usage from any start date (required) to any end date (optional). This time period is static, it does not recur.
func (o GoogleCloudBillingBudgetsV1beta1FilterPtrOutput) CustomPeriod() GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1Filter) *GoogleCloudBillingBudgetsV1beta1CustomPeriod {
		if v == nil {
			return nil
		}
		return v.CustomPeriod
	}).(GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput)
}

// Optional. A single label and value pair specifying that usage from only this set of labeled resources should be included in the budget. If omitted, the report will include all labeled and unlabeled usage. An object containing a single `"key": value` pair. Example: `{ "name": "wrench" }`. _Currently, multiple entries or multiple values per entry are not allowed._
func (o GoogleCloudBillingBudgetsV1beta1FilterPtrOutput) Labels() pulumi.ArrayMapOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1Filter) map[string][]interface{} {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.ArrayMapOutput)
}

// Optional. A set of projects of the form `projects/{project}`, specifying that usage from only this set of projects should be included in the budget. If omitted, the report will include all usage for the billing account, regardless of which project the usage occurred on.
func (o GoogleCloudBillingBudgetsV1beta1FilterPtrOutput) Projects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1Filter) []string {
		if v == nil {
			return nil
		}
		return v.Projects
	}).(pulumi.StringArrayOutput)
}

// Optional. A set of folder and organization names of the form `folders/{folderId}` or `organizations/{organizationId}`, specifying that usage from only this set of folders and organizations should be included in the budget. If omitted, the budget includes all usage that the billing account pays for. If the folder or organization contains projects that are paid for by a different Cloud Billing account, the budget *doesn't* apply to those projects.
func (o GoogleCloudBillingBudgetsV1beta1FilterPtrOutput) ResourceAncestors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1Filter) []string {
		if v == nil {
			return nil
		}
		return v.ResourceAncestors
	}).(pulumi.StringArrayOutput)
}

// Optional. A set of services of the form `services/{service_id}`, specifying that usage from only this set of services should be included in the budget. If omitted, the report will include usage for all the services. The service names are available through the Catalog API: https://cloud.google.com/billing/v1/how-tos/catalog-api.
func (o GoogleCloudBillingBudgetsV1beta1FilterPtrOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1Filter) []string {
		if v == nil {
			return nil
		}
		return v.Services
	}).(pulumi.StringArrayOutput)
}

// Optional. A set of subaccounts of the form `billingAccounts/{account_id}`, specifying that usage from only this set of subaccounts should be included in the budget. If a subaccount is set to the name of the parent account, usage from the parent account will be included. If omitted, the report will include usage from the parent account and all subaccounts, if they exist.
func (o GoogleCloudBillingBudgetsV1beta1FilterPtrOutput) Subaccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1Filter) []string {
		if v == nil {
			return nil
		}
		return v.Subaccounts
	}).(pulumi.StringArrayOutput)
}

// A filter for a budget, limiting the scope of the cost to calculate.
type GoogleCloudBillingBudgetsV1beta1FilterResponse struct {
	// Optional. Specifies to track usage for recurring calendar period. For example, assume that CalendarPeriod.QUARTER is set. The budget will track usage from April 1 to June 30, when the current calendar month is April, May, June. After that, it will track usage from July 1 to September 30 when the current calendar month is July, August, September, so on.
	CalendarPeriod string `pulumi:"calendarPeriod"`
	// Optional. If Filter.credit_types_treatment is INCLUDE_SPECIFIED_CREDITS, this is a list of credit types to be subtracted from gross cost to determine the spend for threshold calculations. See [a list of acceptable credit type values](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type). If Filter.credit_types_treatment is **not** INCLUDE_SPECIFIED_CREDITS, this field must be empty.
	CreditTypes []string `pulumi:"creditTypes"`
	// Optional. If not set, default behavior is `INCLUDE_ALL_CREDITS`.
	CreditTypesTreatment string `pulumi:"creditTypesTreatment"`
	// Optional. Specifies to track usage from any start date (required) to any end date (optional). This time period is static, it does not recur.
	CustomPeriod GoogleCloudBillingBudgetsV1beta1CustomPeriodResponse `pulumi:"customPeriod"`
	// Optional. A single label and value pair specifying that usage from only this set of labeled resources should be included in the budget. If omitted, the report will include all labeled and unlabeled usage. An object containing a single `"key": value` pair. Example: `{ "name": "wrench" }`. _Currently, multiple entries or multiple values per entry are not allowed._
	Labels map[string][]interface{} `pulumi:"labels"`
	// Optional. A set of projects of the form `projects/{project}`, specifying that usage from only this set of projects should be included in the budget. If omitted, the report will include all usage for the billing account, regardless of which project the usage occurred on.
	Projects []string `pulumi:"projects"`
	// Optional. A set of folder and organization names of the form `folders/{folderId}` or `organizations/{organizationId}`, specifying that usage from only this set of folders and organizations should be included in the budget. If omitted, the budget includes all usage that the billing account pays for. If the folder or organization contains projects that are paid for by a different Cloud Billing account, the budget *doesn't* apply to those projects.
	ResourceAncestors []string `pulumi:"resourceAncestors"`
	// Optional. A set of services of the form `services/{service_id}`, specifying that usage from only this set of services should be included in the budget. If omitted, the report will include usage for all the services. The service names are available through the Catalog API: https://cloud.google.com/billing/v1/how-tos/catalog-api.
	Services []string `pulumi:"services"`
	// Optional. A set of subaccounts of the form `billingAccounts/{account_id}`, specifying that usage from only this set of subaccounts should be included in the budget. If a subaccount is set to the name of the parent account, usage from the parent account will be included. If omitted, the report will include usage from the parent account and all subaccounts, if they exist.
	Subaccounts []string `pulumi:"subaccounts"`
}

// A filter for a budget, limiting the scope of the cost to calculate.
type GoogleCloudBillingBudgetsV1beta1FilterResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1FilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1FilterResponse)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1FilterResponseOutput) ToGoogleCloudBillingBudgetsV1beta1FilterResponseOutput() GoogleCloudBillingBudgetsV1beta1FilterResponseOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1FilterResponseOutput) ToGoogleCloudBillingBudgetsV1beta1FilterResponseOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1FilterResponseOutput {
	return o
}

// Optional. Specifies to track usage for recurring calendar period. For example, assume that CalendarPeriod.QUARTER is set. The budget will track usage from April 1 to June 30, when the current calendar month is April, May, June. After that, it will track usage from July 1 to September 30 when the current calendar month is July, August, September, so on.
func (o GoogleCloudBillingBudgetsV1beta1FilterResponseOutput) CalendarPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1FilterResponse) string { return v.CalendarPeriod }).(pulumi.StringOutput)
}

// Optional. If Filter.credit_types_treatment is INCLUDE_SPECIFIED_CREDITS, this is a list of credit types to be subtracted from gross cost to determine the spend for threshold calculations. See [a list of acceptable credit type values](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type). If Filter.credit_types_treatment is **not** INCLUDE_SPECIFIED_CREDITS, this field must be empty.
func (o GoogleCloudBillingBudgetsV1beta1FilterResponseOutput) CreditTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1FilterResponse) []string { return v.CreditTypes }).(pulumi.StringArrayOutput)
}

// Optional. If not set, default behavior is `INCLUDE_ALL_CREDITS`.
func (o GoogleCloudBillingBudgetsV1beta1FilterResponseOutput) CreditTypesTreatment() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1FilterResponse) string { return v.CreditTypesTreatment }).(pulumi.StringOutput)
}

// Optional. Specifies to track usage from any start date (required) to any end date (optional). This time period is static, it does not recur.
func (o GoogleCloudBillingBudgetsV1beta1FilterResponseOutput) CustomPeriod() GoogleCloudBillingBudgetsV1beta1CustomPeriodResponseOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1FilterResponse) GoogleCloudBillingBudgetsV1beta1CustomPeriodResponse {
		return v.CustomPeriod
	}).(GoogleCloudBillingBudgetsV1beta1CustomPeriodResponseOutput)
}

// Optional. A single label and value pair specifying that usage from only this set of labeled resources should be included in the budget. If omitted, the report will include all labeled and unlabeled usage. An object containing a single `"key": value` pair. Example: `{ "name": "wrench" }`. _Currently, multiple entries or multiple values per entry are not allowed._
func (o GoogleCloudBillingBudgetsV1beta1FilterResponseOutput) Labels() pulumi.ArrayMapOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1FilterResponse) map[string][]interface{} { return v.Labels }).(pulumi.ArrayMapOutput)
}

// Optional. A set of projects of the form `projects/{project}`, specifying that usage from only this set of projects should be included in the budget. If omitted, the report will include all usage for the billing account, regardless of which project the usage occurred on.
func (o GoogleCloudBillingBudgetsV1beta1FilterResponseOutput) Projects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1FilterResponse) []string { return v.Projects }).(pulumi.StringArrayOutput)
}

// Optional. A set of folder and organization names of the form `folders/{folderId}` or `organizations/{organizationId}`, specifying that usage from only this set of folders and organizations should be included in the budget. If omitted, the budget includes all usage that the billing account pays for. If the folder or organization contains projects that are paid for by a different Cloud Billing account, the budget *doesn't* apply to those projects.
func (o GoogleCloudBillingBudgetsV1beta1FilterResponseOutput) ResourceAncestors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1FilterResponse) []string { return v.ResourceAncestors }).(pulumi.StringArrayOutput)
}

// Optional. A set of services of the form `services/{service_id}`, specifying that usage from only this set of services should be included in the budget. If omitted, the report will include usage for all the services. The service names are available through the Catalog API: https://cloud.google.com/billing/v1/how-tos/catalog-api.
func (o GoogleCloudBillingBudgetsV1beta1FilterResponseOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1FilterResponse) []string { return v.Services }).(pulumi.StringArrayOutput)
}

// Optional. A set of subaccounts of the form `billingAccounts/{account_id}`, specifying that usage from only this set of subaccounts should be included in the budget. If a subaccount is set to the name of the parent account, usage from the parent account will be included. If omitted, the report will include usage from the parent account and all subaccounts, if they exist.
func (o GoogleCloudBillingBudgetsV1beta1FilterResponseOutput) Subaccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1FilterResponse) []string { return v.Subaccounts }).(pulumi.StringArrayOutput)
}

// Describes a budget amount targeted to the last Filter.calendar_period spend. At this time, the amount is automatically 100% of the last calendar period's spend; that is, there are no other options yet. Future configuration options will be described here (for example, configuring a percentage of last period's spend). LastPeriodAmount cannot be set for a budget configured with a Filter.custom_period.
type GoogleCloudBillingBudgetsV1beta1LastPeriodAmount struct {
}

// GoogleCloudBillingBudgetsV1beta1LastPeriodAmountInput is an input type that accepts GoogleCloudBillingBudgetsV1beta1LastPeriodAmountArgs and GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput values.
// You can construct a concrete instance of `GoogleCloudBillingBudgetsV1beta1LastPeriodAmountInput` via:
//
//	GoogleCloudBillingBudgetsV1beta1LastPeriodAmountArgs{...}
type GoogleCloudBillingBudgetsV1beta1LastPeriodAmountInput interface {
	pulumi.Input

	ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput() GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput
	ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutputWithContext(context.Context) GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput
}

// Describes a budget amount targeted to the last Filter.calendar_period spend. At this time, the amount is automatically 100% of the last calendar period's spend; that is, there are no other options yet. Future configuration options will be described here (for example, configuring a percentage of last period's spend). LastPeriodAmount cannot be set for a budget configured with a Filter.custom_period.
type GoogleCloudBillingBudgetsV1beta1LastPeriodAmountArgs struct {
}

func (GoogleCloudBillingBudgetsV1beta1LastPeriodAmountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1LastPeriodAmount)(nil)).Elem()
}

func (i GoogleCloudBillingBudgetsV1beta1LastPeriodAmountArgs) ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput() GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutputWithContext(context.Background())
}

func (i GoogleCloudBillingBudgetsV1beta1LastPeriodAmountArgs) ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput)
}

func (i GoogleCloudBillingBudgetsV1beta1LastPeriodAmountArgs) ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput() GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutputWithContext(context.Background())
}

func (i GoogleCloudBillingBudgetsV1beta1LastPeriodAmountArgs) ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput).ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutputWithContext(ctx)
}

// GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrInput is an input type that accepts GoogleCloudBillingBudgetsV1beta1LastPeriodAmountArgs, GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtr and GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput values.
// You can construct a concrete instance of `GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrInput` via:
//
//	        GoogleCloudBillingBudgetsV1beta1LastPeriodAmountArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrInput interface {
	pulumi.Input

	ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput() GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput
	ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutputWithContext(context.Context) GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput
}

type googleCloudBillingBudgetsV1beta1LastPeriodAmountPtrType GoogleCloudBillingBudgetsV1beta1LastPeriodAmountArgs

func GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtr(v *GoogleCloudBillingBudgetsV1beta1LastPeriodAmountArgs) GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrInput {
	return (*googleCloudBillingBudgetsV1beta1LastPeriodAmountPtrType)(v)
}

func (*googleCloudBillingBudgetsV1beta1LastPeriodAmountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBillingBudgetsV1beta1LastPeriodAmount)(nil)).Elem()
}

func (i *googleCloudBillingBudgetsV1beta1LastPeriodAmountPtrType) ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput() GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutputWithContext(context.Background())
}

func (i *googleCloudBillingBudgetsV1beta1LastPeriodAmountPtrType) ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput)
}

// Describes a budget amount targeted to the last Filter.calendar_period spend. At this time, the amount is automatically 100% of the last calendar period's spend; that is, there are no other options yet. Future configuration options will be described here (for example, configuring a percentage of last period's spend). LastPeriodAmount cannot be set for a budget configured with a Filter.custom_period.
type GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1LastPeriodAmount)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput) ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput() GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput) ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput) ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput() GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput {
	return o.ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutputWithContext(context.Background())
}

func (o GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput) ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudBillingBudgetsV1beta1LastPeriodAmount) *GoogleCloudBillingBudgetsV1beta1LastPeriodAmount {
		return &v
	}).(GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput)
}

type GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBillingBudgetsV1beta1LastPeriodAmount)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput) ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput() GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput) ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput) Elem() GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput {
	return o.ApplyT(func(v *GoogleCloudBillingBudgetsV1beta1LastPeriodAmount) GoogleCloudBillingBudgetsV1beta1LastPeriodAmount {
		if v != nil {
			return *v
		}
		var ret GoogleCloudBillingBudgetsV1beta1LastPeriodAmount
		return ret
	}).(GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput)
}

// Describes a budget amount targeted to the last Filter.calendar_period spend. At this time, the amount is automatically 100% of the last calendar period's spend; that is, there are no other options yet. Future configuration options will be described here (for example, configuring a percentage of last period's spend). LastPeriodAmount cannot be set for a budget configured with a Filter.custom_period.
type GoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponse struct {
}

// Describes a budget amount targeted to the last Filter.calendar_period spend. At this time, the amount is automatically 100% of the last calendar period's spend; that is, there are no other options yet. Future configuration options will be described here (for example, configuring a percentage of last period's spend). LastPeriodAmount cannot be set for a budget configured with a Filter.custom_period.
type GoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponse)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponseOutput) ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponseOutput() GoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponseOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponseOutput) ToGoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponseOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponseOutput {
	return o
}

// ThresholdRule contains the definition of a threshold. Threshold rules define the triggering events used to generate a budget notification email. When a threshold is crossed (spend exceeds the specified percentages of the budget), budget alert emails are sent to the email recipients you specify in the [NotificationsRule](#notificationsrule). Threshold rules also affect the fields included in the [JSON data object](https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format) sent to a Pub/Sub topic. Threshold rules are _required_ if using email notifications. Threshold rules are _optional_ if only setting a [`pubsubTopic` NotificationsRule](#NotificationsRule), unless you want your JSON data object to include data about the thresholds you set. For more information, see [set budget threshold rules and actions](https://cloud.google.com/billing/docs/how-to/budgets#budget-actions).
type GoogleCloudBillingBudgetsV1beta1ThresholdRule struct {
	// Optional. The type of basis used to determine if spend has passed the threshold. Behavior defaults to CURRENT_SPEND if not set.
	SpendBasis *GoogleCloudBillingBudgetsV1beta1ThresholdRuleSpendBasis `pulumi:"spendBasis"`
	// Send an alert when this threshold is exceeded. This is a 1.0-based percentage, so 0.5 = 50%. Validation: non-negative number.
	ThresholdPercent float64 `pulumi:"thresholdPercent"`
}

// GoogleCloudBillingBudgetsV1beta1ThresholdRuleInput is an input type that accepts GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs and GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput values.
// You can construct a concrete instance of `GoogleCloudBillingBudgetsV1beta1ThresholdRuleInput` via:
//
//	GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs{...}
type GoogleCloudBillingBudgetsV1beta1ThresholdRuleInput interface {
	pulumi.Input

	ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput() GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput
	ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleOutputWithContext(context.Context) GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput
}

// ThresholdRule contains the definition of a threshold. Threshold rules define the triggering events used to generate a budget notification email. When a threshold is crossed (spend exceeds the specified percentages of the budget), budget alert emails are sent to the email recipients you specify in the [NotificationsRule](#notificationsrule). Threshold rules also affect the fields included in the [JSON data object](https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format) sent to a Pub/Sub topic. Threshold rules are _required_ if using email notifications. Threshold rules are _optional_ if only setting a [`pubsubTopic` NotificationsRule](#NotificationsRule), unless you want your JSON data object to include data about the thresholds you set. For more information, see [set budget threshold rules and actions](https://cloud.google.com/billing/docs/how-to/budgets#budget-actions).
type GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs struct {
	// Optional. The type of basis used to determine if spend has passed the threshold. Behavior defaults to CURRENT_SPEND if not set.
	SpendBasis GoogleCloudBillingBudgetsV1beta1ThresholdRuleSpendBasisPtrInput `pulumi:"spendBasis"`
	// Send an alert when this threshold is exceeded. This is a 1.0-based percentage, so 0.5 = 50%. Validation: non-negative number.
	ThresholdPercent pulumi.Float64Input `pulumi:"thresholdPercent"`
}

func (GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1ThresholdRule)(nil)).Elem()
}

func (i GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs) ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput() GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleOutputWithContext(context.Background())
}

func (i GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs) ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput)
}

// GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayInput is an input type that accepts GoogleCloudBillingBudgetsV1beta1ThresholdRuleArray and GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput values.
// You can construct a concrete instance of `GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayInput` via:
//
//	GoogleCloudBillingBudgetsV1beta1ThresholdRuleArray{ GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs{...} }
type GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayInput interface {
	pulumi.Input

	ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput() GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput
	ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutputWithContext(context.Context) GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput
}

type GoogleCloudBillingBudgetsV1beta1ThresholdRuleArray []GoogleCloudBillingBudgetsV1beta1ThresholdRuleInput

func (GoogleCloudBillingBudgetsV1beta1ThresholdRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudBillingBudgetsV1beta1ThresholdRule)(nil)).Elem()
}

func (i GoogleCloudBillingBudgetsV1beta1ThresholdRuleArray) ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput() GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput {
	return i.ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutputWithContext(context.Background())
}

func (i GoogleCloudBillingBudgetsV1beta1ThresholdRuleArray) ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput)
}

// ThresholdRule contains the definition of a threshold. Threshold rules define the triggering events used to generate a budget notification email. When a threshold is crossed (spend exceeds the specified percentages of the budget), budget alert emails are sent to the email recipients you specify in the [NotificationsRule](#notificationsrule). Threshold rules also affect the fields included in the [JSON data object](https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format) sent to a Pub/Sub topic. Threshold rules are _required_ if using email notifications. Threshold rules are _optional_ if only setting a [`pubsubTopic` NotificationsRule](#NotificationsRule), unless you want your JSON data object to include data about the thresholds you set. For more information, see [set budget threshold rules and actions](https://cloud.google.com/billing/docs/how-to/budgets#budget-actions).
type GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1ThresholdRule)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput) ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput() GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput) ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput {
	return o
}

// Optional. The type of basis used to determine if spend has passed the threshold. Behavior defaults to CURRENT_SPEND if not set.
func (o GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput) SpendBasis() GoogleCloudBillingBudgetsV1beta1ThresholdRuleSpendBasisPtrOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1ThresholdRule) *GoogleCloudBillingBudgetsV1beta1ThresholdRuleSpendBasis {
		return v.SpendBasis
	}).(GoogleCloudBillingBudgetsV1beta1ThresholdRuleSpendBasisPtrOutput)
}

// Send an alert when this threshold is exceeded. This is a 1.0-based percentage, so 0.5 = 50%. Validation: non-negative number.
func (o GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput) ThresholdPercent() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1ThresholdRule) float64 { return v.ThresholdPercent }).(pulumi.Float64Output)
}

type GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudBillingBudgetsV1beta1ThresholdRule)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput) ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput() GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput) ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput) Index(i pulumi.IntInput) GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudBillingBudgetsV1beta1ThresholdRule {
		return vs[0].([]GoogleCloudBillingBudgetsV1beta1ThresholdRule)[vs[1].(int)]
	}).(GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput)
}

// ThresholdRule contains the definition of a threshold. Threshold rules define the triggering events used to generate a budget notification email. When a threshold is crossed (spend exceeds the specified percentages of the budget), budget alert emails are sent to the email recipients you specify in the [NotificationsRule](#notificationsrule). Threshold rules also affect the fields included in the [JSON data object](https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format) sent to a Pub/Sub topic. Threshold rules are _required_ if using email notifications. Threshold rules are _optional_ if only setting a [`pubsubTopic` NotificationsRule](#NotificationsRule), unless you want your JSON data object to include data about the thresholds you set. For more information, see [set budget threshold rules and actions](https://cloud.google.com/billing/docs/how-to/budgets#budget-actions).
type GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponse struct {
	// Optional. The type of basis used to determine if spend has passed the threshold. Behavior defaults to CURRENT_SPEND if not set.
	SpendBasis string `pulumi:"spendBasis"`
	// Send an alert when this threshold is exceeded. This is a 1.0-based percentage, so 0.5 = 50%. Validation: non-negative number.
	ThresholdPercent float64 `pulumi:"thresholdPercent"`
}

// ThresholdRule contains the definition of a threshold. Threshold rules define the triggering events used to generate a budget notification email. When a threshold is crossed (spend exceeds the specified percentages of the budget), budget alert emails are sent to the email recipients you specify in the [NotificationsRule](#notificationsrule). Threshold rules also affect the fields included in the [JSON data object](https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format) sent to a Pub/Sub topic. Threshold rules are _required_ if using email notifications. Threshold rules are _optional_ if only setting a [`pubsubTopic` NotificationsRule](#NotificationsRule), unless you want your JSON data object to include data about the thresholds you set. For more information, see [set budget threshold rules and actions](https://cloud.google.com/billing/docs/how-to/budgets#budget-actions).
type GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponse)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseOutput) ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseOutput() GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseOutput) ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseOutput {
	return o
}

// Optional. The type of basis used to determine if spend has passed the threshold. Behavior defaults to CURRENT_SPEND if not set.
func (o GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseOutput) SpendBasis() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponse) string { return v.SpendBasis }).(pulumi.StringOutput)
}

// Send an alert when this threshold is exceeded. This is a 1.0-based percentage, so 0.5 = 50%. Validation: non-negative number.
func (o GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseOutput) ThresholdPercent() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponse) float64 { return v.ThresholdPercent }).(pulumi.Float64Output)
}

type GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponse)(nil)).Elem()
}

func (o GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseArrayOutput) ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseArrayOutput() GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseArrayOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseArrayOutput) ToGoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseArrayOutputWithContext(ctx context.Context) GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseArrayOutput {
	return o
}

func (o GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponse {
		return vs[0].([]GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponse)[vs[1].(int)]
	}).(GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseOutput)
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
type GoogleTypeDate struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day *int `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month *int `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year *int `pulumi:"year"`
}

// GoogleTypeDateInput is an input type that accepts GoogleTypeDateArgs and GoogleTypeDateOutput values.
// You can construct a concrete instance of `GoogleTypeDateInput` via:
//
//	GoogleTypeDateArgs{...}
type GoogleTypeDateInput interface {
	pulumi.Input

	ToGoogleTypeDateOutput() GoogleTypeDateOutput
	ToGoogleTypeDateOutputWithContext(context.Context) GoogleTypeDateOutput
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
type GoogleTypeDateArgs struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day pulumi.IntPtrInput `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month pulumi.IntPtrInput `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year pulumi.IntPtrInput `pulumi:"year"`
}

func (GoogleTypeDateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeDate)(nil)).Elem()
}

func (i GoogleTypeDateArgs) ToGoogleTypeDateOutput() GoogleTypeDateOutput {
	return i.ToGoogleTypeDateOutputWithContext(context.Background())
}

func (i GoogleTypeDateArgs) ToGoogleTypeDateOutputWithContext(ctx context.Context) GoogleTypeDateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeDateOutput)
}

func (i GoogleTypeDateArgs) ToGoogleTypeDatePtrOutput() GoogleTypeDatePtrOutput {
	return i.ToGoogleTypeDatePtrOutputWithContext(context.Background())
}

func (i GoogleTypeDateArgs) ToGoogleTypeDatePtrOutputWithContext(ctx context.Context) GoogleTypeDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeDateOutput).ToGoogleTypeDatePtrOutputWithContext(ctx)
}

// GoogleTypeDatePtrInput is an input type that accepts GoogleTypeDateArgs, GoogleTypeDatePtr and GoogleTypeDatePtrOutput values.
// You can construct a concrete instance of `GoogleTypeDatePtrInput` via:
//
//	        GoogleTypeDateArgs{...}
//
//	or:
//
//	        nil
type GoogleTypeDatePtrInput interface {
	pulumi.Input

	ToGoogleTypeDatePtrOutput() GoogleTypeDatePtrOutput
	ToGoogleTypeDatePtrOutputWithContext(context.Context) GoogleTypeDatePtrOutput
}

type googleTypeDatePtrType GoogleTypeDateArgs

func GoogleTypeDatePtr(v *GoogleTypeDateArgs) GoogleTypeDatePtrInput {
	return (*googleTypeDatePtrType)(v)
}

func (*googleTypeDatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeDate)(nil)).Elem()
}

func (i *googleTypeDatePtrType) ToGoogleTypeDatePtrOutput() GoogleTypeDatePtrOutput {
	return i.ToGoogleTypeDatePtrOutputWithContext(context.Background())
}

func (i *googleTypeDatePtrType) ToGoogleTypeDatePtrOutputWithContext(ctx context.Context) GoogleTypeDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeDatePtrOutput)
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
type GoogleTypeDateOutput struct{ *pulumi.OutputState }

func (GoogleTypeDateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeDate)(nil)).Elem()
}

func (o GoogleTypeDateOutput) ToGoogleTypeDateOutput() GoogleTypeDateOutput {
	return o
}

func (o GoogleTypeDateOutput) ToGoogleTypeDateOutputWithContext(ctx context.Context) GoogleTypeDateOutput {
	return o
}

func (o GoogleTypeDateOutput) ToGoogleTypeDatePtrOutput() GoogleTypeDatePtrOutput {
	return o.ToGoogleTypeDatePtrOutputWithContext(context.Background())
}

func (o GoogleTypeDateOutput) ToGoogleTypeDatePtrOutputWithContext(ctx context.Context) GoogleTypeDatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleTypeDate) *GoogleTypeDate {
		return &v
	}).(GoogleTypeDatePtrOutput)
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
func (o GoogleTypeDateOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleTypeDate) *int { return v.Day }).(pulumi.IntPtrOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
func (o GoogleTypeDateOutput) Month() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleTypeDate) *int { return v.Month }).(pulumi.IntPtrOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
func (o GoogleTypeDateOutput) Year() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleTypeDate) *int { return v.Year }).(pulumi.IntPtrOutput)
}

type GoogleTypeDatePtrOutput struct{ *pulumi.OutputState }

func (GoogleTypeDatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeDate)(nil)).Elem()
}

func (o GoogleTypeDatePtrOutput) ToGoogleTypeDatePtrOutput() GoogleTypeDatePtrOutput {
	return o
}

func (o GoogleTypeDatePtrOutput) ToGoogleTypeDatePtrOutputWithContext(ctx context.Context) GoogleTypeDatePtrOutput {
	return o
}

func (o GoogleTypeDatePtrOutput) Elem() GoogleTypeDateOutput {
	return o.ApplyT(func(v *GoogleTypeDate) GoogleTypeDate {
		if v != nil {
			return *v
		}
		var ret GoogleTypeDate
		return ret
	}).(GoogleTypeDateOutput)
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
func (o GoogleTypeDatePtrOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeDate) *int {
		if v == nil {
			return nil
		}
		return v.Day
	}).(pulumi.IntPtrOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
func (o GoogleTypeDatePtrOutput) Month() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeDate) *int {
		if v == nil {
			return nil
		}
		return v.Month
	}).(pulumi.IntPtrOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
func (o GoogleTypeDatePtrOutput) Year() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeDate) *int {
		if v == nil {
			return nil
		}
		return v.Year
	}).(pulumi.IntPtrOutput)
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
type GoogleTypeDateResponse struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day int `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month int `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year int `pulumi:"year"`
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
type GoogleTypeDateResponseOutput struct{ *pulumi.OutputState }

func (GoogleTypeDateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeDateResponse)(nil)).Elem()
}

func (o GoogleTypeDateResponseOutput) ToGoogleTypeDateResponseOutput() GoogleTypeDateResponseOutput {
	return o
}

func (o GoogleTypeDateResponseOutput) ToGoogleTypeDateResponseOutputWithContext(ctx context.Context) GoogleTypeDateResponseOutput {
	return o
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
func (o GoogleTypeDateResponseOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypeDateResponse) int { return v.Day }).(pulumi.IntOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
func (o GoogleTypeDateResponseOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypeDateResponse) int { return v.Month }).(pulumi.IntOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
func (o GoogleTypeDateResponseOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypeDateResponse) int { return v.Year }).(pulumi.IntOutput)
}

// Represents an amount of money with its currency type.
type GoogleTypeMoney struct {
	// The three-letter currency code defined in ISO 4217.
	CurrencyCode *string `pulumi:"currencyCode"`
	// Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
	Nanos *int `pulumi:"nanos"`
	// The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
	Units *string `pulumi:"units"`
}

// GoogleTypeMoneyInput is an input type that accepts GoogleTypeMoneyArgs and GoogleTypeMoneyOutput values.
// You can construct a concrete instance of `GoogleTypeMoneyInput` via:
//
//	GoogleTypeMoneyArgs{...}
type GoogleTypeMoneyInput interface {
	pulumi.Input

	ToGoogleTypeMoneyOutput() GoogleTypeMoneyOutput
	ToGoogleTypeMoneyOutputWithContext(context.Context) GoogleTypeMoneyOutput
}

// Represents an amount of money with its currency type.
type GoogleTypeMoneyArgs struct {
	// The three-letter currency code defined in ISO 4217.
	CurrencyCode pulumi.StringPtrInput `pulumi:"currencyCode"`
	// Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
	Units pulumi.StringPtrInput `pulumi:"units"`
}

func (GoogleTypeMoneyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeMoney)(nil)).Elem()
}

func (i GoogleTypeMoneyArgs) ToGoogleTypeMoneyOutput() GoogleTypeMoneyOutput {
	return i.ToGoogleTypeMoneyOutputWithContext(context.Background())
}

func (i GoogleTypeMoneyArgs) ToGoogleTypeMoneyOutputWithContext(ctx context.Context) GoogleTypeMoneyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeMoneyOutput)
}

func (i GoogleTypeMoneyArgs) ToGoogleTypeMoneyPtrOutput() GoogleTypeMoneyPtrOutput {
	return i.ToGoogleTypeMoneyPtrOutputWithContext(context.Background())
}

func (i GoogleTypeMoneyArgs) ToGoogleTypeMoneyPtrOutputWithContext(ctx context.Context) GoogleTypeMoneyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeMoneyOutput).ToGoogleTypeMoneyPtrOutputWithContext(ctx)
}

// GoogleTypeMoneyPtrInput is an input type that accepts GoogleTypeMoneyArgs, GoogleTypeMoneyPtr and GoogleTypeMoneyPtrOutput values.
// You can construct a concrete instance of `GoogleTypeMoneyPtrInput` via:
//
//	        GoogleTypeMoneyArgs{...}
//
//	or:
//
//	        nil
type GoogleTypeMoneyPtrInput interface {
	pulumi.Input

	ToGoogleTypeMoneyPtrOutput() GoogleTypeMoneyPtrOutput
	ToGoogleTypeMoneyPtrOutputWithContext(context.Context) GoogleTypeMoneyPtrOutput
}

type googleTypeMoneyPtrType GoogleTypeMoneyArgs

func GoogleTypeMoneyPtr(v *GoogleTypeMoneyArgs) GoogleTypeMoneyPtrInput {
	return (*googleTypeMoneyPtrType)(v)
}

func (*googleTypeMoneyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeMoney)(nil)).Elem()
}

func (i *googleTypeMoneyPtrType) ToGoogleTypeMoneyPtrOutput() GoogleTypeMoneyPtrOutput {
	return i.ToGoogleTypeMoneyPtrOutputWithContext(context.Background())
}

func (i *googleTypeMoneyPtrType) ToGoogleTypeMoneyPtrOutputWithContext(ctx context.Context) GoogleTypeMoneyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeMoneyPtrOutput)
}

// Represents an amount of money with its currency type.
type GoogleTypeMoneyOutput struct{ *pulumi.OutputState }

func (GoogleTypeMoneyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeMoney)(nil)).Elem()
}

func (o GoogleTypeMoneyOutput) ToGoogleTypeMoneyOutput() GoogleTypeMoneyOutput {
	return o
}

func (o GoogleTypeMoneyOutput) ToGoogleTypeMoneyOutputWithContext(ctx context.Context) GoogleTypeMoneyOutput {
	return o
}

func (o GoogleTypeMoneyOutput) ToGoogleTypeMoneyPtrOutput() GoogleTypeMoneyPtrOutput {
	return o.ToGoogleTypeMoneyPtrOutputWithContext(context.Background())
}

func (o GoogleTypeMoneyOutput) ToGoogleTypeMoneyPtrOutputWithContext(ctx context.Context) GoogleTypeMoneyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleTypeMoney) *GoogleTypeMoney {
		return &v
	}).(GoogleTypeMoneyPtrOutput)
}

// The three-letter currency code defined in ISO 4217.
func (o GoogleTypeMoneyOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypeMoney) *string { return v.CurrencyCode }).(pulumi.StringPtrOutput)
}

// Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
func (o GoogleTypeMoneyOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleTypeMoney) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
func (o GoogleTypeMoneyOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypeMoney) *string { return v.Units }).(pulumi.StringPtrOutput)
}

type GoogleTypeMoneyPtrOutput struct{ *pulumi.OutputState }

func (GoogleTypeMoneyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeMoney)(nil)).Elem()
}

func (o GoogleTypeMoneyPtrOutput) ToGoogleTypeMoneyPtrOutput() GoogleTypeMoneyPtrOutput {
	return o
}

func (o GoogleTypeMoneyPtrOutput) ToGoogleTypeMoneyPtrOutputWithContext(ctx context.Context) GoogleTypeMoneyPtrOutput {
	return o
}

func (o GoogleTypeMoneyPtrOutput) Elem() GoogleTypeMoneyOutput {
	return o.ApplyT(func(v *GoogleTypeMoney) GoogleTypeMoney {
		if v != nil {
			return *v
		}
		var ret GoogleTypeMoney
		return ret
	}).(GoogleTypeMoneyOutput)
}

// The three-letter currency code defined in ISO 4217.
func (o GoogleTypeMoneyPtrOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleTypeMoney) *string {
		if v == nil {
			return nil
		}
		return v.CurrencyCode
	}).(pulumi.StringPtrOutput)
}

// Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
func (o GoogleTypeMoneyPtrOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeMoney) *int {
		if v == nil {
			return nil
		}
		return v.Nanos
	}).(pulumi.IntPtrOutput)
}

// The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
func (o GoogleTypeMoneyPtrOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleTypeMoney) *string {
		if v == nil {
			return nil
		}
		return v.Units
	}).(pulumi.StringPtrOutput)
}

// Represents an amount of money with its currency type.
type GoogleTypeMoneyResponse struct {
	// The three-letter currency code defined in ISO 4217.
	CurrencyCode string `pulumi:"currencyCode"`
	// Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
	Nanos int `pulumi:"nanos"`
	// The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
	Units string `pulumi:"units"`
}

// Represents an amount of money with its currency type.
type GoogleTypeMoneyResponseOutput struct{ *pulumi.OutputState }

func (GoogleTypeMoneyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeMoneyResponse)(nil)).Elem()
}

func (o GoogleTypeMoneyResponseOutput) ToGoogleTypeMoneyResponseOutput() GoogleTypeMoneyResponseOutput {
	return o
}

func (o GoogleTypeMoneyResponseOutput) ToGoogleTypeMoneyResponseOutputWithContext(ctx context.Context) GoogleTypeMoneyResponseOutput {
	return o
}

// The three-letter currency code defined in ISO 4217.
func (o GoogleTypeMoneyResponseOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypeMoneyResponse) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

// Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
func (o GoogleTypeMoneyResponseOutput) Nanos() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypeMoneyResponse) int { return v.Nanos }).(pulumi.IntOutput)
}

// The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
func (o GoogleTypeMoneyResponseOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypeMoneyResponse) string { return v.Units }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleInput)(nil)).Elem(), GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrInput)(nil)).Elem(), GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1BudgetAmountInput)(nil)).Elem(), GoogleCloudBillingBudgetsV1beta1BudgetAmountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1CustomPeriodInput)(nil)).Elem(), GoogleCloudBillingBudgetsV1beta1CustomPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrInput)(nil)).Elem(), GoogleCloudBillingBudgetsV1beta1CustomPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1FilterInput)(nil)).Elem(), GoogleCloudBillingBudgetsV1beta1FilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1FilterPtrInput)(nil)).Elem(), GoogleCloudBillingBudgetsV1beta1FilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1LastPeriodAmountInput)(nil)).Elem(), GoogleCloudBillingBudgetsV1beta1LastPeriodAmountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrInput)(nil)).Elem(), GoogleCloudBillingBudgetsV1beta1LastPeriodAmountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1ThresholdRuleInput)(nil)).Elem(), GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayInput)(nil)).Elem(), GoogleCloudBillingBudgetsV1beta1ThresholdRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleTypeDateInput)(nil)).Elem(), GoogleTypeDateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleTypeDatePtrInput)(nil)).Elem(), GoogleTypeDateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleTypeMoneyInput)(nil)).Elem(), GoogleTypeMoneyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleTypeMoneyPtrInput)(nil)).Elem(), GoogleTypeMoneyArgs{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1AllUpdatesRulePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1AllUpdatesRuleResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1BudgetAmountOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1BudgetAmountResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1CustomPeriodOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1CustomPeriodPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1CustomPeriodResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1FilterOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1FilterPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1FilterResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1LastPeriodAmountOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1LastPeriodAmountPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1LastPeriodAmountResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1ThresholdRuleOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1ThresholdRuleArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudBillingBudgetsV1beta1ThresholdRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleTypeDateOutput{})
	pulumi.RegisterOutputType(GoogleTypeDatePtrOutput{})
	pulumi.RegisterOutputType(GoogleTypeDateResponseOutput{})
	pulumi.RegisterOutputType(GoogleTypeMoneyOutput{})
	pulumi.RegisterOutputType(GoogleTypeMoneyPtrOutput{})
	pulumi.RegisterOutputType(GoogleTypeMoneyResponseOutput{})
}
