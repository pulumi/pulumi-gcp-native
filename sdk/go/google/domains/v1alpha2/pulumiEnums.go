// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The log type that this config enables.
type AuditLogConfigLogType pulumi.String

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. Privacy setting for the contacts associated with the `Registration`.
type ContactSettingsPrivacy pulumi.String

const (
	// The contact privacy settings are undefined.
	ContactSettingsPrivacyContactPrivacyUnspecified = ContactSettingsPrivacy("CONTACT_PRIVACY_UNSPECIFIED")
	// All the data from `ContactSettings` is publicly available. When setting this option, you must also provide a `PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT` in the `contact_notices` field of the request.
	ContactSettingsPrivacyPublicContactData = ContactSettingsPrivacy("PUBLIC_CONTACT_DATA")
	// None of the data from `ContactSettings` is publicly available. Instead, proxy contact data is published for your domain. Email sent to the proxy email address is forwarded to the registrant's email address. Cloud Domains provides this privacy proxy service at no additional cost.
	ContactSettingsPrivacyPrivateContactData = ContactSettingsPrivacy("PRIVATE_CONTACT_DATA")
	// Some data from `ContactSettings` is publicly available. The actual information redacted depends on the domain. For details, see [the registration privacy article](https://support.google.com/domains/answer/3251242).
	ContactSettingsPrivacyRedactedContactData = ContactSettingsPrivacy("REDACTED_CONTACT_DATA")
)

func (ContactSettingsPrivacy) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ContactSettingsPrivacy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactSettingsPrivacy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactSettingsPrivacy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContactSettingsPrivacy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The algorithm used to generate the referenced DNSKEY.
type DsRecordAlgorithm pulumi.String

const (
	// The algorithm is unspecified.
	DsRecordAlgorithmAlgorithmUnspecified = DsRecordAlgorithm("ALGORITHM_UNSPECIFIED")
	// DSA/SHA1. Not recommended for new deployments.
	DsRecordAlgorithmDsa = DsRecordAlgorithm("DSA")
	// ECC. Not recommended for new deployments.
	DsRecordAlgorithmEcc = DsRecordAlgorithm("ECC")
	// RSA/SHA-1. Not recommended for new deployments.
	DsRecordAlgorithmRsasha1 = DsRecordAlgorithm("RSASHA1")
	// DSA-NSEC3-SHA1. Not recommended for new deployments.
	DsRecordAlgorithmDsansec3sha1 = DsRecordAlgorithm("DSANSEC3SHA1")
	// RSA/SHA1-NSEC3-SHA1. Not recommended for new deployments.
	DsRecordAlgorithmRsasha1nsec3sha1 = DsRecordAlgorithm("RSASHA1NSEC3SHA1")
	// RSA/SHA-256.
	DsRecordAlgorithmRsasha256 = DsRecordAlgorithm("RSASHA256")
	// RSA/SHA-512.
	DsRecordAlgorithmRsasha512 = DsRecordAlgorithm("RSASHA512")
	// GOST R 34.10-2001.
	DsRecordAlgorithmEccgost = DsRecordAlgorithm("ECCGOST")
	// ECDSA Curve P-256 with SHA-256.
	DsRecordAlgorithmEcdsap256sha256 = DsRecordAlgorithm("ECDSAP256SHA256")
	// ECDSA Curve P-384 with SHA-384.
	DsRecordAlgorithmEcdsap384sha384 = DsRecordAlgorithm("ECDSAP384SHA384")
	// Ed25519.
	DsRecordAlgorithmEd25519 = DsRecordAlgorithm("ED25519")
	// Ed448.
	DsRecordAlgorithmEd448 = DsRecordAlgorithm("ED448")
)

func (DsRecordAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DsRecordAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DsRecordAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DsRecordAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DsRecordAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The hash function used to generate the digest of the referenced DNSKEY.
type DsRecordDigestType pulumi.String

const (
	// The DigestType is unspecified.
	DsRecordDigestTypeDigestTypeUnspecified = DsRecordDigestType("DIGEST_TYPE_UNSPECIFIED")
	// SHA-1. Not recommended for new deployments.
	DsRecordDigestTypeSha1 = DsRecordDigestType("SHA1")
	// SHA-256.
	DsRecordDigestTypeSha256 = DsRecordDigestType("SHA256")
	// GOST R 34.11-94.
	DsRecordDigestTypeGost3411 = DsRecordDigestType("GOST3411")
	// SHA-384.
	DsRecordDigestTypeSha384 = DsRecordDigestType("SHA384")
)

func (DsRecordDigestType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DsRecordDigestType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DsRecordDigestType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DsRecordDigestType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DsRecordDigestType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. The state of DS records for this domain. Used to enable or disable automatic DNSSEC.
type GoogleDomainsDnsDsState pulumi.String

const (
	// DS state is unspecified.
	GoogleDomainsDnsDsStateDsStateUnspecified = GoogleDomainsDnsDsState("DS_STATE_UNSPECIFIED")
	// DNSSEC is disabled for this domain. No DS records for this domain are published in the parent DNS zone.
	GoogleDomainsDnsDsStateDsRecordsUnpublished = GoogleDomainsDnsDsState("DS_RECORDS_UNPUBLISHED")
	// DNSSEC is enabled for this domain. Appropriate DS records for this domain are published in the parent DNS zone. This option is valid only if the DNS zone referenced in the `Registration`'s `dns_provider` field is already DNSSEC-signed.
	GoogleDomainsDnsDsStateDsRecordsPublished = GoogleDomainsDnsDsState("DS_RECORDS_PUBLISHED")
)

func (GoogleDomainsDnsDsState) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleDomainsDnsDsState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleDomainsDnsDsState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleDomainsDnsDsState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleDomainsDnsDsState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Controls whether the domain can be transferred to another registrar.
type ManagementSettingsTransferLockState pulumi.String

const (
	// The state is unspecified.
	ManagementSettingsTransferLockStateTransferLockStateUnspecified = ManagementSettingsTransferLockState("TRANSFER_LOCK_STATE_UNSPECIFIED")
	// The domain is unlocked and can be transferred to another registrar.
	ManagementSettingsTransferLockStateUnlocked = ManagementSettingsTransferLockState("UNLOCKED")
	// The domain is locked and cannot be transferred to another registrar.
	ManagementSettingsTransferLockStateLocked = ManagementSettingsTransferLockState("LOCKED")
)

func (ManagementSettingsTransferLockState) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ManagementSettingsTransferLockState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagementSettingsTransferLockState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagementSettingsTransferLockState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagementSettingsTransferLockState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegistrationContactNoticesItem pulumi.String

const (
	// The notice is undefined.
	RegistrationContactNoticesItemContactNoticeUnspecified = RegistrationContactNoticesItem("CONTACT_NOTICE_UNSPECIFIED")
	// Required when setting the `privacy` field of `ContactSettings` to `PUBLIC_CONTACT_DATA`, which exposes contact data publicly.
	RegistrationContactNoticesItemPublicContactDataAcknowledgement = RegistrationContactNoticesItem("PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT")
)

func (RegistrationContactNoticesItem) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e RegistrationContactNoticesItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistrationContactNoticesItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistrationContactNoticesItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegistrationContactNoticesItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// RegistrationContactNoticesItemArrayInput is an input type that accepts RegistrationContactNoticesItemArray and RegistrationContactNoticesItemArrayOutput values.
// You can construct a concrete instance of `RegistrationContactNoticesItemArrayInput` via:
//
//          RegistrationContactNoticesItemArray{ RegistrationContactNoticesItemArgs{...} }
type RegistrationContactNoticesItemArrayInput interface {
	pulumi.Input

	ToRegistrationContactNoticesItemArrayOutput() RegistrationContactNoticesItemArrayOutput
	ToRegistrationContactNoticesItemArrayOutputWithContext(context.Context) RegistrationContactNoticesItemArrayOutput
}

type RegistrationContactNoticesItemArray []RegistrationContactNoticesItem

func (RegistrationContactNoticesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistrationContactNoticesItem)(nil)).Elem()
}

func (i RegistrationContactNoticesItemArray) ToRegistrationContactNoticesItemArrayOutput() RegistrationContactNoticesItemArrayOutput {
	return i.ToRegistrationContactNoticesItemArrayOutputWithContext(context.Background())
}

func (i RegistrationContactNoticesItemArray) ToRegistrationContactNoticesItemArrayOutputWithContext(ctx context.Context) RegistrationContactNoticesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationContactNoticesItemArrayOutput)
}

type RegistrationContactNoticesItemArrayOutput struct{ *pulumi.OutputState }

func (RegistrationContactNoticesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistrationContactNoticesItem)(nil)).Elem()
}

func (o RegistrationContactNoticesItemArrayOutput) ToRegistrationContactNoticesItemArrayOutput() RegistrationContactNoticesItemArrayOutput {
	return o
}

func (o RegistrationContactNoticesItemArrayOutput) ToRegistrationContactNoticesItemArrayOutputWithContext(ctx context.Context) RegistrationContactNoticesItemArrayOutput {
	return o
}

func (o RegistrationContactNoticesItemArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]RegistrationContactNoticesItem)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}

type RegistrationDomainNoticesItem pulumi.String

const (
	// The notice is undefined.
	RegistrationDomainNoticesItemDomainNoticeUnspecified = RegistrationDomainNoticesItem("DOMAIN_NOTICE_UNSPECIFIED")
	// Indicates that the domain is preloaded on the HTTP Strict Transport Security list in browsers. Serving a website on such domain requires an SSL certificate. For details, see [how to get an SSL certificate](https://support.google.com/domains/answer/7638036).
	RegistrationDomainNoticesItemHstsPreloaded = RegistrationDomainNoticesItem("HSTS_PRELOADED")
)

func (RegistrationDomainNoticesItem) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e RegistrationDomainNoticesItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistrationDomainNoticesItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistrationDomainNoticesItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegistrationDomainNoticesItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// RegistrationDomainNoticesItemArrayInput is an input type that accepts RegistrationDomainNoticesItemArray and RegistrationDomainNoticesItemArrayOutput values.
// You can construct a concrete instance of `RegistrationDomainNoticesItemArrayInput` via:
//
//          RegistrationDomainNoticesItemArray{ RegistrationDomainNoticesItemArgs{...} }
type RegistrationDomainNoticesItemArrayInput interface {
	pulumi.Input

	ToRegistrationDomainNoticesItemArrayOutput() RegistrationDomainNoticesItemArrayOutput
	ToRegistrationDomainNoticesItemArrayOutputWithContext(context.Context) RegistrationDomainNoticesItemArrayOutput
}

type RegistrationDomainNoticesItemArray []RegistrationDomainNoticesItem

func (RegistrationDomainNoticesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistrationDomainNoticesItem)(nil)).Elem()
}

func (i RegistrationDomainNoticesItemArray) ToRegistrationDomainNoticesItemArrayOutput() RegistrationDomainNoticesItemArrayOutput {
	return i.ToRegistrationDomainNoticesItemArrayOutputWithContext(context.Background())
}

func (i RegistrationDomainNoticesItemArray) ToRegistrationDomainNoticesItemArrayOutputWithContext(ctx context.Context) RegistrationDomainNoticesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationDomainNoticesItemArrayOutput)
}

type RegistrationDomainNoticesItemArrayOutput struct{ *pulumi.OutputState }

func (RegistrationDomainNoticesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistrationDomainNoticesItem)(nil)).Elem()
}

func (o RegistrationDomainNoticesItemArrayOutput) ToRegistrationDomainNoticesItemArrayOutput() RegistrationDomainNoticesItemArrayOutput {
	return o
}

func (o RegistrationDomainNoticesItemArrayOutput) ToRegistrationDomainNoticesItemArrayOutputWithContext(ctx context.Context) RegistrationDomainNoticesItemArrayOutput {
	return o
}

func (o RegistrationDomainNoticesItemArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]RegistrationDomainNoticesItem)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}
