// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The log type that this config enables.
type AuditLogConfigLogType pulumi.String

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CompositeTypeStatus pulumi.String

const (
	CompositeTypeStatusUnknownStatus = CompositeTypeStatus("UNKNOWN_STATUS")
	CompositeTypeStatusDeprecated    = CompositeTypeStatus("DEPRECATED")
	CompositeTypeStatusExperimental  = CompositeTypeStatus("EXPERIMENTAL")
	CompositeTypeStatusSupported     = CompositeTypeStatus("SUPPORTED")
)

func (CompositeTypeStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CompositeTypeStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CompositeTypeStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CompositeTypeStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CompositeTypeStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Level to record this diagnostic.
type DiagnosticLevel pulumi.String

const (
	DiagnosticLevelUnknown = DiagnosticLevel("UNKNOWN")
	// If level is informational, it only gets displayed as part of the resource.
	DiagnosticLevelInformation = DiagnosticLevel("INFORMATION")
	// If level is warning, will end up in the resource as a warning.
	DiagnosticLevelWarning = DiagnosticLevel("WARNING")
	// If level is error, it will indicate an error occurred after finishCondition is set, and this field will populate resource errors and operation errors.
	DiagnosticLevelError = DiagnosticLevel("ERROR")
)

func (DiagnosticLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DiagnosticLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiagnosticLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiagnosticLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiagnosticLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The location where this mapping applies.
type InputMappingLocation pulumi.String

const (
	InputMappingLocationUnknown = InputMappingLocation("UNKNOWN")
	InputMappingLocationPath    = InputMappingLocation("PATH")
	InputMappingLocationQuery   = InputMappingLocation("QUERY")
	InputMappingLocationBody    = InputMappingLocation("BODY")
	InputMappingLocationHeader  = InputMappingLocation("HEADER")
)

func (InputMappingLocation) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e InputMappingLocation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InputMappingLocation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InputMappingLocation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InputMappingLocation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Which interpreter (python or jinja) should be used during expansion.
type TemplateContentsInterpreter pulumi.String

const (
	TemplateContentsInterpreterUnknownInterpreter = TemplateContentsInterpreter("UNKNOWN_INTERPRETER")
	TemplateContentsInterpreterPython             = TemplateContentsInterpreter("PYTHON")
	TemplateContentsInterpreterJinja              = TemplateContentsInterpreter("JINJA")
)

func (TemplateContentsInterpreter) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e TemplateContentsInterpreter) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateContentsInterpreter) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateContentsInterpreter) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateContentsInterpreter) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Customize how deployment manager will validate the resource against schema errors.
type ValidationOptionsSchemaValidation pulumi.String

const (
	ValidationOptionsSchemaValidationUnknown = ValidationOptionsSchemaValidation("UNKNOWN")
	// Ignore schema failures.
	ValidationOptionsSchemaValidationIgnore = ValidationOptionsSchemaValidation("IGNORE")
	// Ignore schema failures but display them as warnings.
	ValidationOptionsSchemaValidationIgnoreWithWarnings = ValidationOptionsSchemaValidation("IGNORE_WITH_WARNINGS")
	// Fail the resource if the schema is not valid, this is the default behavior.
	ValidationOptionsSchemaValidationFail = ValidationOptionsSchemaValidation("FAIL")
)

func (ValidationOptionsSchemaValidation) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ValidationOptionsSchemaValidation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValidationOptionsSchemaValidation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValidationOptionsSchemaValidation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ValidationOptionsSchemaValidation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Specify what to do with extra properties when executing a request.
type ValidationOptionsUndeclaredProperties pulumi.String

const (
	ValidationOptionsUndeclaredPropertiesUnknown = ValidationOptionsUndeclaredProperties("UNKNOWN")
	// Always include even if not present on discovery doc.
	ValidationOptionsUndeclaredPropertiesInclude = ValidationOptionsUndeclaredProperties("INCLUDE")
	// Always ignore if not present on discovery doc.
	ValidationOptionsUndeclaredPropertiesIgnore = ValidationOptionsUndeclaredProperties("IGNORE")
	// Include on request, but emit a warning.
	ValidationOptionsUndeclaredPropertiesIncludeWithWarnings = ValidationOptionsUndeclaredProperties("INCLUDE_WITH_WARNINGS")
	// Ignore properties, but emit a warning.
	ValidationOptionsUndeclaredPropertiesIgnoreWithWarnings = ValidationOptionsUndeclaredProperties("IGNORE_WITH_WARNINGS")
	// Always fail if undeclared properties are present.
	ValidationOptionsUndeclaredPropertiesFail = ValidationOptionsUndeclaredProperties("FAIL")
)

func (ValidationOptionsUndeclaredProperties) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ValidationOptionsUndeclaredProperties) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValidationOptionsUndeclaredProperties) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValidationOptionsUndeclaredProperties) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ValidationOptionsUndeclaredProperties) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
