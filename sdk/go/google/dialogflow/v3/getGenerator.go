// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the specified generator.
func LookupGenerator(ctx *pulumi.Context, args *LookupGeneratorArgs, opts ...pulumi.InvokeOption) (*LookupGeneratorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGeneratorResult
	err := ctx.Invoke("google-native:dialogflow/v3:getGenerator", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGeneratorArgs struct {
	AgentId      string  `pulumi:"agentId"`
	GeneratorId  string  `pulumi:"generatorId"`
	LanguageCode *string `pulumi:"languageCode"`
	Location     string  `pulumi:"location"`
	Project      *string `pulumi:"project"`
}

type LookupGeneratorResult struct {
	// The human-readable name of the generator, unique within the agent. The prompt contains pre-defined parameters such as $conversation, $last-user-utterance, etc. populated by Dialogflow. It can also contain custom placeholders which will be resolved during fulfillment.
	DisplayName string `pulumi:"displayName"`
	// The unique identifier of the generator. Must be set for the Generators.UpdateGenerator method. Generators.CreateGenerate populates the name automatically. Format: `projects//locations//agents//generators/`.
	Name string `pulumi:"name"`
	// Optional. List of custom placeholders in the prompt text.
	Placeholders []GoogleCloudDialogflowCxV3GeneratorPlaceholderResponse `pulumi:"placeholders"`
	// Prompt for the LLM model.
	PromptText GoogleCloudDialogflowCxV3PhraseResponse `pulumi:"promptText"`
}

func LookupGeneratorOutput(ctx *pulumi.Context, args LookupGeneratorOutputArgs, opts ...pulumi.InvokeOption) LookupGeneratorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGeneratorResult, error) {
			args := v.(LookupGeneratorArgs)
			r, err := LookupGenerator(ctx, &args, opts...)
			var s LookupGeneratorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGeneratorResultOutput)
}

type LookupGeneratorOutputArgs struct {
	AgentId      pulumi.StringInput    `pulumi:"agentId"`
	GeneratorId  pulumi.StringInput    `pulumi:"generatorId"`
	LanguageCode pulumi.StringPtrInput `pulumi:"languageCode"`
	Location     pulumi.StringInput    `pulumi:"location"`
	Project      pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupGeneratorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGeneratorArgs)(nil)).Elem()
}

type LookupGeneratorResultOutput struct{ *pulumi.OutputState }

func (LookupGeneratorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGeneratorResult)(nil)).Elem()
}

func (o LookupGeneratorResultOutput) ToLookupGeneratorResultOutput() LookupGeneratorResultOutput {
	return o
}

func (o LookupGeneratorResultOutput) ToLookupGeneratorResultOutputWithContext(ctx context.Context) LookupGeneratorResultOutput {
	return o
}

// The human-readable name of the generator, unique within the agent. The prompt contains pre-defined parameters such as $conversation, $last-user-utterance, etc. populated by Dialogflow. It can also contain custom placeholders which will be resolved during fulfillment.
func (o LookupGeneratorResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeneratorResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The unique identifier of the generator. Must be set for the Generators.UpdateGenerator method. Generators.CreateGenerate populates the name automatically. Format: `projects//locations//agents//generators/`.
func (o LookupGeneratorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeneratorResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. List of custom placeholders in the prompt text.
func (o LookupGeneratorResultOutput) Placeholders() GoogleCloudDialogflowCxV3GeneratorPlaceholderResponseArrayOutput {
	return o.ApplyT(func(v LookupGeneratorResult) []GoogleCloudDialogflowCxV3GeneratorPlaceholderResponse {
		return v.Placeholders
	}).(GoogleCloudDialogflowCxV3GeneratorPlaceholderResponseArrayOutput)
}

// Prompt for the LLM model.
func (o LookupGeneratorResultOutput) PromptText() GoogleCloudDialogflowCxV3PhraseResponseOutput {
	return o.ApplyT(func(v LookupGeneratorResult) GoogleCloudDialogflowCxV3PhraseResponse { return v.PromptText }).(GoogleCloudDialogflowCxV3PhraseResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGeneratorResultOutput{})
}
