// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
type GoogleCloudDialogflowCxV3AdvancedSettings struct {
	// If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels: - Agent level - Flow level
	AudioExportGcsDestination *GoogleCloudDialogflowCxV3GcsDestination `pulumi:"audioExportGcsDestination"`
	// Settings for DTMF. Exposed at the following levels: - Agent level - Flow level - Page level - Parameter level.
	DtmfSettings *GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings `pulumi:"dtmfSettings"`
	// Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels: - Agent level.
	LoggingSettings *GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings `pulumi:"loggingSettings"`
}

// GoogleCloudDialogflowCxV3AdvancedSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3AdvancedSettingsArgs and GoogleCloudDialogflowCxV3AdvancedSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AdvancedSettingsInput` via:
//
//	GoogleCloudDialogflowCxV3AdvancedSettingsArgs{...}
type GoogleCloudDialogflowCxV3AdvancedSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AdvancedSettingsOutput() GoogleCloudDialogflowCxV3AdvancedSettingsOutput
	ToGoogleCloudDialogflowCxV3AdvancedSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsOutput
}

// Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
type GoogleCloudDialogflowCxV3AdvancedSettingsArgs struct {
	// If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels: - Agent level - Flow level
	AudioExportGcsDestination GoogleCloudDialogflowCxV3GcsDestinationPtrInput `pulumi:"audioExportGcsDestination"`
	// Settings for DTMF. Exposed at the following levels: - Agent level - Flow level - Page level - Parameter level.
	DtmfSettings GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrInput `pulumi:"dtmfSettings"`
	// Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels: - Agent level.
	LoggingSettings GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrInput `pulumi:"loggingSettings"`
}

func (GoogleCloudDialogflowCxV3AdvancedSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3AdvancedSettingsArgs) ToGoogleCloudDialogflowCxV3AdvancedSettingsOutput() GoogleCloudDialogflowCxV3AdvancedSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3AdvancedSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AdvancedSettingsArgs) ToGoogleCloudDialogflowCxV3AdvancedSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AdvancedSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3AdvancedSettingsArgs) ToGoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AdvancedSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AdvancedSettingsArgs) ToGoogleCloudDialogflowCxV3AdvancedSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AdvancedSettingsOutput).ToGoogleCloudDialogflowCxV3AdvancedSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3AdvancedSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3AdvancedSettingsArgs, GoogleCloudDialogflowCxV3AdvancedSettingsPtr and GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AdvancedSettingsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3AdvancedSettingsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3AdvancedSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3AdvancedSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput
}

type googleCloudDialogflowCxV3AdvancedSettingsPtrType GoogleCloudDialogflowCxV3AdvancedSettingsArgs

func GoogleCloudDialogflowCxV3AdvancedSettingsPtr(v *GoogleCloudDialogflowCxV3AdvancedSettingsArgs) GoogleCloudDialogflowCxV3AdvancedSettingsPtrInput {
	return (*googleCloudDialogflowCxV3AdvancedSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3AdvancedSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AdvancedSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3AdvancedSettingsPtrType) ToGoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AdvancedSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3AdvancedSettingsPtrType) ToGoogleCloudDialogflowCxV3AdvancedSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput)
}

// Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
type GoogleCloudDialogflowCxV3AdvancedSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AdvancedSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsOutput() GoogleCloudDialogflowCxV3AdvancedSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3AdvancedSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3AdvancedSettings) *GoogleCloudDialogflowCxV3AdvancedSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput)
}

// If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels: - Agent level - Flow level
func (o GoogleCloudDialogflowCxV3AdvancedSettingsOutput) AudioExportGcsDestination() GoogleCloudDialogflowCxV3GcsDestinationPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettings) *GoogleCloudDialogflowCxV3GcsDestination {
		return v.AudioExportGcsDestination
	}).(GoogleCloudDialogflowCxV3GcsDestinationPtrOutput)
}

// Settings for DTMF. Exposed at the following levels: - Agent level - Flow level - Page level - Parameter level.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsOutput) DtmfSettings() GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettings) *GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings {
		return v.DtmfSettings
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput)
}

// Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels: - Agent level.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsOutput) LoggingSettings() GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettings) *GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings {
		return v.LoggingSettings
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput)
}

type GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AdvancedSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3AdvancedSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AdvancedSettings) GoogleCloudDialogflowCxV3AdvancedSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3AdvancedSettings
		return ret
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsOutput)
}

// If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels: - Agent level - Flow level
func (o GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput) AudioExportGcsDestination() GoogleCloudDialogflowCxV3GcsDestinationPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AdvancedSettings) *GoogleCloudDialogflowCxV3GcsDestination {
		if v == nil {
			return nil
		}
		return v.AudioExportGcsDestination
	}).(GoogleCloudDialogflowCxV3GcsDestinationPtrOutput)
}

// Settings for DTMF. Exposed at the following levels: - Agent level - Flow level - Page level - Parameter level.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput) DtmfSettings() GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AdvancedSettings) *GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings {
		if v == nil {
			return nil
		}
		return v.DtmfSettings
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput)
}

// Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels: - Agent level.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput) LoggingSettings() GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AdvancedSettings) *GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings {
		if v == nil {
			return nil
		}
		return v.LoggingSettings
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput)
}

// Define behaviors for DTMF (dual tone multi frequency).
type GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings struct {
	// If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
	Enabled *bool `pulumi:"enabled"`
	// The digit that terminates a DTMF digit sequence.
	FinishDigit *string `pulumi:"finishDigit"`
	// Max length of DTMF digits.
	MaxDigits *int `pulumi:"maxDigits"`
}

// GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsArgs and GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsInput` via:
//
//	GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsArgs{...}
type GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput() GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput
	ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput
}

// Define behaviors for DTMF (dual tone multi frequency).
type GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsArgs struct {
	// If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The digit that terminates a DTMF digit sequence.
	FinishDigit pulumi.StringPtrInput `pulumi:"finishDigit"`
	// Max length of DTMF digits.
	MaxDigits pulumi.IntPtrInput `pulumi:"maxDigits"`
}

func (GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsArgs) ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput() GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsArgs) ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsArgs) ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsArgs) ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput).ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsArgs, GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtr and GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput
}

type googleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrType GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsArgs

func GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtr(v *GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsArgs) GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrInput {
	return (*googleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrType) ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrType) ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput)
}

// Define behaviors for DTMF (dual tone multi frequency).
type GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput() GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings) *GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput)
}

// If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The digit that terminates a DTMF digit sequence.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput) FinishDigit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings) *string { return v.FinishDigit }).(pulumi.StringPtrOutput)
}

// Max length of DTMF digits.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput) MaxDigits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings) *int { return v.MaxDigits }).(pulumi.IntPtrOutput)
}

type GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings) GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings
		return ret
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput)
}

// If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The digit that terminates a DTMF digit sequence.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput) FinishDigit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings) *string {
		if v == nil {
			return nil
		}
		return v.FinishDigit
	}).(pulumi.StringPtrOutput)
}

// Max length of DTMF digits.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput) MaxDigits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxDigits
	}).(pulumi.IntPtrOutput)
}

// Define behaviors for DTMF (dual tone multi frequency).
type GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponse struct {
	// If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
	Enabled bool `pulumi:"enabled"`
	// The digit that terminates a DTMF digit sequence.
	FinishDigit string `pulumi:"finishDigit"`
	// Max length of DTMF digits.
	MaxDigits int `pulumi:"maxDigits"`
}

// Define behaviors for DTMF (dual tone multi frequency).
type GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponseOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponseOutput() GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponseOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponseOutput {
	return o
}

// If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The digit that terminates a DTMF digit sequence.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponseOutput) FinishDigit() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponse) string { return v.FinishDigit }).(pulumi.StringOutput)
}

// Max length of DTMF digits.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponseOutput) MaxDigits() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponse) int { return v.MaxDigits }).(pulumi.IntOutput)
}

// Define behaviors on logging.
type GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings struct {
	// If true, DF Interaction logging is currently enabled.
	EnableInteractionLogging *bool `pulumi:"enableInteractionLogging"`
	// If true, StackDriver logging is currently enabled.
	EnableStackdriverLogging *bool `pulumi:"enableStackdriverLogging"`
}

// GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsArgs and GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsInput` via:
//
//	GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsArgs{...}
type GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput() GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput
	ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput
}

// Define behaviors on logging.
type GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsArgs struct {
	// If true, DF Interaction logging is currently enabled.
	EnableInteractionLogging pulumi.BoolPtrInput `pulumi:"enableInteractionLogging"`
	// If true, StackDriver logging is currently enabled.
	EnableStackdriverLogging pulumi.BoolPtrInput `pulumi:"enableStackdriverLogging"`
}

func (GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsArgs) ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput() GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsArgs) ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsArgs) ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsArgs) ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput).ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsArgs, GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtr and GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput
}

type googleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrType GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsArgs

func GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtr(v *GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsArgs) GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrInput {
	return (*googleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrType) ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrType) ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput)
}

// Define behaviors on logging.
type GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput() GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings) *GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput)
}

// If true, DF Interaction logging is currently enabled.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput) EnableInteractionLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings) *bool {
		return v.EnableInteractionLogging
	}).(pulumi.BoolPtrOutput)
}

// If true, StackDriver logging is currently enabled.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput) EnableStackdriverLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings) *bool {
		return v.EnableStackdriverLogging
	}).(pulumi.BoolPtrOutput)
}

type GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput() GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings) GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings
		return ret
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput)
}

// If true, DF Interaction logging is currently enabled.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput) EnableInteractionLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableInteractionLogging
	}).(pulumi.BoolPtrOutput)
}

// If true, StackDriver logging is currently enabled.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput) EnableStackdriverLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableStackdriverLogging
	}).(pulumi.BoolPtrOutput)
}

// Define behaviors on logging.
type GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponse struct {
	// If true, DF Interaction logging is currently enabled.
	EnableInteractionLogging bool `pulumi:"enableInteractionLogging"`
	// If true, StackDriver logging is currently enabled.
	EnableStackdriverLogging bool `pulumi:"enableStackdriverLogging"`
}

// Define behaviors on logging.
type GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponseOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponseOutput() GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponseOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponseOutput {
	return o
}

// If true, DF Interaction logging is currently enabled.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponseOutput) EnableInteractionLogging() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponse) bool {
		return v.EnableInteractionLogging
	}).(pulumi.BoolOutput)
}

// If true, StackDriver logging is currently enabled.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponseOutput) EnableStackdriverLogging() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponse) bool {
		return v.EnableStackdriverLogging
	}).(pulumi.BoolOutput)
}

// Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
type GoogleCloudDialogflowCxV3AdvancedSettingsResponse struct {
	// If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels: - Agent level - Flow level
	AudioExportGcsDestination GoogleCloudDialogflowCxV3GcsDestinationResponse `pulumi:"audioExportGcsDestination"`
	// Settings for DTMF. Exposed at the following levels: - Agent level - Flow level - Page level - Parameter level.
	DtmfSettings GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponse `pulumi:"dtmfSettings"`
	// Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels: - Agent level.
	LoggingSettings GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponse `pulumi:"loggingSettings"`
}

// Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
type GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput() GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput) ToGoogleCloudDialogflowCxV3AdvancedSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput {
	return o
}

// If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels: - Agent level - Flow level
func (o GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput) AudioExportGcsDestination() GoogleCloudDialogflowCxV3GcsDestinationResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettingsResponse) GoogleCloudDialogflowCxV3GcsDestinationResponse {
		return v.AudioExportGcsDestination
	}).(GoogleCloudDialogflowCxV3GcsDestinationResponseOutput)
}

// Settings for DTMF. Exposed at the following levels: - Agent level - Flow level - Page level - Parameter level.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput) DtmfSettings() GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettingsResponse) GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponse {
		return v.DtmfSettings
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponseOutput)
}

// Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels: - Agent level.
func (o GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput) LoggingSettings() GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AdvancedSettingsResponse) GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponse {
		return v.LoggingSettings
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponseOutput)
}

// Settings for answer feedback collection.
type GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings struct {
	// Optional. If enabled, end users will be able to provide answer feedback to Dialogflow responses. Feature works only if interaction logging is enabled in the Dialogflow agent.
	EnableAnswerFeedback *bool `pulumi:"enableAnswerFeedback"`
}

// GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsArgs and GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsInput` via:
//
//	GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsArgs{...}
type GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput() GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput
	ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput
}

// Settings for answer feedback collection.
type GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsArgs struct {
	// Optional. If enabled, end users will be able to provide answer feedback to Dialogflow responses. Feature works only if interaction logging is enabled in the Dialogflow agent.
	EnableAnswerFeedback pulumi.BoolPtrInput `pulumi:"enableAnswerFeedback"`
}

func (GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsArgs) ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput() GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsArgs) ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsArgs) ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsArgs) ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput).ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsArgs, GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtr and GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput
}

type googleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrType GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsArgs

func GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtr(v *GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsArgs) GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrInput {
	return (*googleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrType) ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrType) ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput)
}

// Settings for answer feedback collection.
type GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput) ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput() GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput) ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput) ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput) ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings) *GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput)
}

// Optional. If enabled, end users will be able to provide answer feedback to Dialogflow responses. Feature works only if interaction logging is enabled in the Dialogflow agent.
func (o GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput) EnableAnswerFeedback() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings) *bool { return v.EnableAnswerFeedback }).(pulumi.BoolPtrOutput)
}

type GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput) ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput) ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings) GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings
		return ret
	}).(GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput)
}

// Optional. If enabled, end users will be able to provide answer feedback to Dialogflow responses. Feature works only if interaction logging is enabled in the Dialogflow agent.
func (o GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput) EnableAnswerFeedback() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAnswerFeedback
	}).(pulumi.BoolPtrOutput)
}

// Settings for answer feedback collection.
type GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsResponse struct {
	// Optional. If enabled, end users will be able to provide answer feedback to Dialogflow responses. Feature works only if interaction logging is enabled in the Dialogflow agent.
	EnableAnswerFeedback bool `pulumi:"enableAnswerFeedback"`
}

// Settings for answer feedback collection.
type GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsResponseOutput) ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsResponseOutput() GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsResponseOutput) ToGoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsResponseOutput {
	return o
}

// Optional. If enabled, end users will be able to provide answer feedback to Dialogflow responses. Feature works only if interaction logging is enabled in the Dialogflow agent.
func (o GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsResponseOutput) EnableAnswerFeedback() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsResponse) bool {
		return v.EnableAnswerFeedback
	}).(pulumi.BoolOutput)
}

// Settings for Gen App Builder.
type GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings struct {
	// The full name of the Gen App Builder engine related to this agent if there is one. Format: `projects/{Project ID}/locations/{Location ID}/collections/{Collection ID}/engines/{Engine ID}`
	Engine string `pulumi:"engine"`
}

// GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsArgs and GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsInput` via:
//
//	GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsArgs{...}
type GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput() GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput
	ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput
}

// Settings for Gen App Builder.
type GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsArgs struct {
	// The full name of the Gen App Builder engine related to this agent if there is one. Format: `projects/{Project ID}/locations/{Location ID}/collections/{Collection ID}/engines/{Engine ID}`
	Engine pulumi.StringInput `pulumi:"engine"`
}

func (GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsArgs) ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput() GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsArgs) ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsArgs) ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsArgs) ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput).ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsArgs, GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtr and GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput
}

type googleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrType GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsArgs

func GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtr(v *GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsArgs) GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrInput {
	return (*googleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrType) ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrType) ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput)
}

// Settings for Gen App Builder.
type GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput) ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput() GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput) ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput) ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput) ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings) *GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput)
}

// The full name of the Gen App Builder engine related to this agent if there is one. Format: `projects/{Project ID}/locations/{Location ID}/collections/{Collection ID}/engines/{Engine ID}`
func (o GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings) string { return v.Engine }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput) ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput) ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings) GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings
		return ret
	}).(GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput)
}

// The full name of the Gen App Builder engine related to this agent if there is one. Format: `projects/{Project ID}/locations/{Location ID}/collections/{Collection ID}/engines/{Engine ID}`
func (o GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput) Engine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Engine
	}).(pulumi.StringPtrOutput)
}

// Settings for Gen App Builder.
type GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsResponse struct {
	// The full name of the Gen App Builder engine related to this agent if there is one. Format: `projects/{Project ID}/locations/{Location ID}/collections/{Collection ID}/engines/{Engine ID}`
	Engine string `pulumi:"engine"`
}

// Settings for Gen App Builder.
type GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsResponseOutput) ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsResponseOutput() GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsResponseOutput) ToGoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsResponseOutput {
	return o
}

// The full name of the Gen App Builder engine related to this agent if there is one. Format: `projects/{Project ID}/locations/{Location ID}/collections/{Collection ID}/engines/{Engine ID}`
func (o GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsResponseOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsResponse) string { return v.Engine }).(pulumi.StringOutput)
}

// Settings for connecting to Git repository for an agent.
type GoogleCloudDialogflowCxV3AgentGitIntegrationSettings struct {
	// GitHub settings.
	GithubSettings *GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings `pulumi:"githubSettings"`
}

// GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsArgs and GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsInput` via:
//
//	GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsArgs{...}
type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput
	ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput
}

// Settings for connecting to Git repository for an agent.
type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsArgs struct {
	// GitHub settings.
	GithubSettings GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrInput `pulumi:"githubSettings"`
}

func (GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGitIntegrationSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsArgs) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsArgs) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsArgs) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsArgs) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput).ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsArgs, GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtr and GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput
}

type googleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrType GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsArgs

func GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtr(v *GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsArgs) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrInput {
	return (*googleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AgentGitIntegrationSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrType) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrType) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput)
}

// Settings for connecting to Git repository for an agent.
type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGitIntegrationSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3AgentGitIntegrationSettings) *GoogleCloudDialogflowCxV3AgentGitIntegrationSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput)
}

// GitHub settings.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput) GithubSettings() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentGitIntegrationSettings) *GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings {
		return v.GithubSettings
	}).(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput)
}

type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AgentGitIntegrationSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AgentGitIntegrationSettings) GoogleCloudDialogflowCxV3AgentGitIntegrationSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3AgentGitIntegrationSettings
		return ret
	}).(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput)
}

// GitHub settings.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput) GithubSettings() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AgentGitIntegrationSettings) *GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings {
		if v == nil {
			return nil
		}
		return v.GithubSettings
	}).(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput)
}

// Settings of integration with GitHub.
type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings struct {
	// The access token used to authenticate the access to the GitHub repository.
	AccessToken *string `pulumi:"accessToken"`
	// A list of branches configured to be used from Dialogflow.
	Branches []string `pulumi:"branches"`
	// The unique repository display name for the GitHub repository.
	DisplayName *string `pulumi:"displayName"`
	// The GitHub repository URI related to the agent.
	RepositoryUri *string `pulumi:"repositoryUri"`
	// The branch of the GitHub repository tracked for this agent.
	TrackingBranch *string `pulumi:"trackingBranch"`
}

// GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsArgs and GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsInput` via:
//
//	GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsArgs{...}
type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput
	ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput
}

// Settings of integration with GitHub.
type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsArgs struct {
	// The access token used to authenticate the access to the GitHub repository.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// A list of branches configured to be used from Dialogflow.
	Branches pulumi.StringArrayInput `pulumi:"branches"`
	// The unique repository display name for the GitHub repository.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The GitHub repository URI related to the agent.
	RepositoryUri pulumi.StringPtrInput `pulumi:"repositoryUri"`
	// The branch of the GitHub repository tracked for this agent.
	TrackingBranch pulumi.StringPtrInput `pulumi:"trackingBranch"`
}

func (GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsArgs) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsArgs) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsArgs) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsArgs) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput).ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsArgs, GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtr and GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput
}

type googleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrType GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsArgs

func GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtr(v *GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsArgs) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrInput {
	return (*googleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrType) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrType) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput)
}

// Settings of integration with GitHub.
type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings) *GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput)
}

// The access token used to authenticate the access to the GitHub repository.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings) *string {
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// A list of branches configured to be used from Dialogflow.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput) Branches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings) []string { return v.Branches }).(pulumi.StringArrayOutput)
}

// The unique repository display name for the GitHub repository.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings) *string {
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The GitHub repository URI related to the agent.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput) RepositoryUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings) *string {
		return v.RepositoryUri
	}).(pulumi.StringPtrOutput)
}

// The branch of the GitHub repository tracked for this agent.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput) TrackingBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings) *string {
		return v.TrackingBranch
	}).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings
		return ret
	}).(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput)
}

// The access token used to authenticate the access to the GitHub repository.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// A list of branches configured to be used from Dialogflow.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput) Branches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings) []string {
		if v == nil {
			return nil
		}
		return v.Branches
	}).(pulumi.StringArrayOutput)
}

// The unique repository display name for the GitHub repository.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The GitHub repository URI related to the agent.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput) RepositoryUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryUri
	}).(pulumi.StringPtrOutput)
}

// The branch of the GitHub repository tracked for this agent.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput) TrackingBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings) *string {
		if v == nil {
			return nil
		}
		return v.TrackingBranch
	}).(pulumi.StringPtrOutput)
}

// Settings of integration with GitHub.
type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponse struct {
	// The access token used to authenticate the access to the GitHub repository.
	AccessToken string `pulumi:"accessToken"`
	// A list of branches configured to be used from Dialogflow.
	Branches []string `pulumi:"branches"`
	// The unique repository display name for the GitHub repository.
	DisplayName string `pulumi:"displayName"`
	// The GitHub repository URI related to the agent.
	RepositoryUri string `pulumi:"repositoryUri"`
	// The branch of the GitHub repository tracked for this agent.
	TrackingBranch string `pulumi:"trackingBranch"`
}

// Settings of integration with GitHub.
type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput {
	return o
}

// The access token used to authenticate the access to the GitHub repository.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponse) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

// A list of branches configured to be used from Dialogflow.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput) Branches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponse) []string {
		return v.Branches
	}).(pulumi.StringArrayOutput)
}

// The unique repository display name for the GitHub repository.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponse) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// The GitHub repository URI related to the agent.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput) RepositoryUri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponse) string {
		return v.RepositoryUri
	}).(pulumi.StringOutput)
}

// The branch of the GitHub repository tracked for this agent.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput) TrackingBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponse) string {
		return v.TrackingBranch
	}).(pulumi.StringOutput)
}

// Settings for connecting to Git repository for an agent.
type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsResponse struct {
	// GitHub settings.
	GithubSettings GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponse `pulumi:"githubSettings"`
}

// Settings for connecting to Git repository for an agent.
type GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsResponseOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsResponseOutput() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsResponseOutput) ToGoogleCloudDialogflowCxV3AgentGitIntegrationSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsResponseOutput {
	return o
}

// GitHub settings.
func (o GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsResponseOutput) GithubSettings() GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsResponse) GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponse {
		return v.GithubSettings
	}).(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput)
}

// Represents the natural speech audio to be processed.
type GoogleCloudDialogflowCxV3AudioInput struct {
	// The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.
	Audio *string `pulumi:"audio"`
	// Instructs the speech recognizer how to process the speech audio.
	Config GoogleCloudDialogflowCxV3InputAudioConfig `pulumi:"config"`
}

// GoogleCloudDialogflowCxV3AudioInputInput is an input type that accepts GoogleCloudDialogflowCxV3AudioInputArgs and GoogleCloudDialogflowCxV3AudioInputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AudioInputInput` via:
//
//	GoogleCloudDialogflowCxV3AudioInputArgs{...}
type GoogleCloudDialogflowCxV3AudioInputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AudioInputOutput() GoogleCloudDialogflowCxV3AudioInputOutput
	ToGoogleCloudDialogflowCxV3AudioInputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AudioInputOutput
}

// Represents the natural speech audio to be processed.
type GoogleCloudDialogflowCxV3AudioInputArgs struct {
	// The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.
	Audio pulumi.StringPtrInput `pulumi:"audio"`
	// Instructs the speech recognizer how to process the speech audio.
	Config GoogleCloudDialogflowCxV3InputAudioConfigInput `pulumi:"config"`
}

func (GoogleCloudDialogflowCxV3AudioInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AudioInput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3AudioInputArgs) ToGoogleCloudDialogflowCxV3AudioInputOutput() GoogleCloudDialogflowCxV3AudioInputOutput {
	return i.ToGoogleCloudDialogflowCxV3AudioInputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AudioInputArgs) ToGoogleCloudDialogflowCxV3AudioInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AudioInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AudioInputOutput)
}

func (i GoogleCloudDialogflowCxV3AudioInputArgs) ToGoogleCloudDialogflowCxV3AudioInputPtrOutput() GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AudioInputArgs) ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AudioInputOutput).ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3AudioInputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3AudioInputArgs, GoogleCloudDialogflowCxV3AudioInputPtr and GoogleCloudDialogflowCxV3AudioInputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AudioInputPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3AudioInputArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3AudioInputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AudioInputPtrOutput() GoogleCloudDialogflowCxV3AudioInputPtrOutput
	ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AudioInputPtrOutput
}

type googleCloudDialogflowCxV3AudioInputPtrType GoogleCloudDialogflowCxV3AudioInputArgs

func GoogleCloudDialogflowCxV3AudioInputPtr(v *GoogleCloudDialogflowCxV3AudioInputArgs) GoogleCloudDialogflowCxV3AudioInputPtrInput {
	return (*googleCloudDialogflowCxV3AudioInputPtrType)(v)
}

func (*googleCloudDialogflowCxV3AudioInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AudioInput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3AudioInputPtrType) ToGoogleCloudDialogflowCxV3AudioInputPtrOutput() GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3AudioInputPtrType) ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AudioInputPtrOutput)
}

// Represents the natural speech audio to be processed.
type GoogleCloudDialogflowCxV3AudioInputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AudioInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AudioInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AudioInputOutput) ToGoogleCloudDialogflowCxV3AudioInputOutput() GoogleCloudDialogflowCxV3AudioInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AudioInputOutput) ToGoogleCloudDialogflowCxV3AudioInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AudioInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AudioInputOutput) ToGoogleCloudDialogflowCxV3AudioInputPtrOutput() GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3AudioInputOutput) ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3AudioInput) *GoogleCloudDialogflowCxV3AudioInput {
		return &v
	}).(GoogleCloudDialogflowCxV3AudioInputPtrOutput)
}

// The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.
func (o GoogleCloudDialogflowCxV3AudioInputOutput) Audio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AudioInput) *string { return v.Audio }).(pulumi.StringPtrOutput)
}

// Instructs the speech recognizer how to process the speech audio.
func (o GoogleCloudDialogflowCxV3AudioInputOutput) Config() GoogleCloudDialogflowCxV3InputAudioConfigOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AudioInput) GoogleCloudDialogflowCxV3InputAudioConfig { return v.Config }).(GoogleCloudDialogflowCxV3InputAudioConfigOutput)
}

type GoogleCloudDialogflowCxV3AudioInputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AudioInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AudioInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AudioInputPtrOutput) ToGoogleCloudDialogflowCxV3AudioInputPtrOutput() GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AudioInputPtrOutput) ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AudioInputPtrOutput) Elem() GoogleCloudDialogflowCxV3AudioInputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AudioInput) GoogleCloudDialogflowCxV3AudioInput {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3AudioInput
		return ret
	}).(GoogleCloudDialogflowCxV3AudioInputOutput)
}

// The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.
func (o GoogleCloudDialogflowCxV3AudioInputPtrOutput) Audio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AudioInput) *string {
		if v == nil {
			return nil
		}
		return v.Audio
	}).(pulumi.StringPtrOutput)
}

// Instructs the speech recognizer how to process the speech audio.
func (o GoogleCloudDialogflowCxV3AudioInputPtrOutput) Config() GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AudioInput) *GoogleCloudDialogflowCxV3InputAudioConfig {
		if v == nil {
			return nil
		}
		return &v.Config
	}).(GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput)
}

// Represents the natural speech audio to be processed.
type GoogleCloudDialogflowCxV3AudioInputResponse struct {
	// The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.
	Audio string `pulumi:"audio"`
	// Instructs the speech recognizer how to process the speech audio.
	Config GoogleCloudDialogflowCxV3InputAudioConfigResponse `pulumi:"config"`
}

// Represents the natural speech audio to be processed.
type GoogleCloudDialogflowCxV3AudioInputResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AudioInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AudioInputResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AudioInputResponseOutput) ToGoogleCloudDialogflowCxV3AudioInputResponseOutput() GoogleCloudDialogflowCxV3AudioInputResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AudioInputResponseOutput) ToGoogleCloudDialogflowCxV3AudioInputResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AudioInputResponseOutput {
	return o
}

// The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.
func (o GoogleCloudDialogflowCxV3AudioInputResponseOutput) Audio() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AudioInputResponse) string { return v.Audio }).(pulumi.StringOutput)
}

// Instructs the speech recognizer how to process the speech audio.
func (o GoogleCloudDialogflowCxV3AudioInputResponseOutput) Config() GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AudioInputResponse) GoogleCloudDialogflowCxV3InputAudioConfigResponse {
		return v.Config
	}).(GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput)
}

// Configuration of the barge-in behavior. Barge-in instructs the API to return a detected utterance at a proper time while the client is playing back the response audio from a previous request. When the client sees the utterance, it should stop the playback and immediately get ready for receiving the responses for the current request. The barge-in handling requires the client to start streaming audio input as soon as it starts playing back the audio from the previous response. The playback is modeled into two phases: * No barge-in phase: which goes first and during which speech detection should not be carried out. * Barge-in phase: which follows the no barge-in phase and during which the API starts speech detection and may inform the client that an utterance has been detected. Note that no-speech event is not expected in this phase. The client provides this configuration in terms of the durations of those two phases. The durations are measured in terms of the audio length fromt the the start of the input audio. The flow goes like below: --> Time without speech detection | utterance only | utterance or no-speech event | | +-------------+ | +------------+ | +---------------+ ----------+ no barge-in +-|-+ barge-in +-|-+ normal period +----------- +-------------+ | +------------+ | +---------------+ No-speech event is a response with END_OF_UTTERANCE without any transcript following up.
type GoogleCloudDialogflowCxV3BargeInConfig struct {
	// Duration that is not eligible for barge-in at the beginning of the input audio.
	NoBargeInDuration *string `pulumi:"noBargeInDuration"`
	// Total duration for the playback at the beginning of the input audio.
	TotalDuration *string `pulumi:"totalDuration"`
}

// GoogleCloudDialogflowCxV3BargeInConfigInput is an input type that accepts GoogleCloudDialogflowCxV3BargeInConfigArgs and GoogleCloudDialogflowCxV3BargeInConfigOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3BargeInConfigInput` via:
//
//	GoogleCloudDialogflowCxV3BargeInConfigArgs{...}
type GoogleCloudDialogflowCxV3BargeInConfigInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3BargeInConfigOutput() GoogleCloudDialogflowCxV3BargeInConfigOutput
	ToGoogleCloudDialogflowCxV3BargeInConfigOutputWithContext(context.Context) GoogleCloudDialogflowCxV3BargeInConfigOutput
}

// Configuration of the barge-in behavior. Barge-in instructs the API to return a detected utterance at a proper time while the client is playing back the response audio from a previous request. When the client sees the utterance, it should stop the playback and immediately get ready for receiving the responses for the current request. The barge-in handling requires the client to start streaming audio input as soon as it starts playing back the audio from the previous response. The playback is modeled into two phases: * No barge-in phase: which goes first and during which speech detection should not be carried out. * Barge-in phase: which follows the no barge-in phase and during which the API starts speech detection and may inform the client that an utterance has been detected. Note that no-speech event is not expected in this phase. The client provides this configuration in terms of the durations of those two phases. The durations are measured in terms of the audio length fromt the the start of the input audio. The flow goes like below: --> Time without speech detection | utterance only | utterance or no-speech event | | +-------------+ | +------------+ | +---------------+ ----------+ no barge-in +-|-+ barge-in +-|-+ normal period +----------- +-------------+ | +------------+ | +---------------+ No-speech event is a response with END_OF_UTTERANCE without any transcript following up.
type GoogleCloudDialogflowCxV3BargeInConfigArgs struct {
	// Duration that is not eligible for barge-in at the beginning of the input audio.
	NoBargeInDuration pulumi.StringPtrInput `pulumi:"noBargeInDuration"`
	// Total duration for the playback at the beginning of the input audio.
	TotalDuration pulumi.StringPtrInput `pulumi:"totalDuration"`
}

func (GoogleCloudDialogflowCxV3BargeInConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3BargeInConfig)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3BargeInConfigArgs) ToGoogleCloudDialogflowCxV3BargeInConfigOutput() GoogleCloudDialogflowCxV3BargeInConfigOutput {
	return i.ToGoogleCloudDialogflowCxV3BargeInConfigOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3BargeInConfigArgs) ToGoogleCloudDialogflowCxV3BargeInConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3BargeInConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3BargeInConfigOutput)
}

func (i GoogleCloudDialogflowCxV3BargeInConfigArgs) ToGoogleCloudDialogflowCxV3BargeInConfigPtrOutput() GoogleCloudDialogflowCxV3BargeInConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3BargeInConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3BargeInConfigArgs) ToGoogleCloudDialogflowCxV3BargeInConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3BargeInConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3BargeInConfigOutput).ToGoogleCloudDialogflowCxV3BargeInConfigPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3BargeInConfigPtrInput is an input type that accepts GoogleCloudDialogflowCxV3BargeInConfigArgs, GoogleCloudDialogflowCxV3BargeInConfigPtr and GoogleCloudDialogflowCxV3BargeInConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3BargeInConfigPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3BargeInConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3BargeInConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3BargeInConfigPtrOutput() GoogleCloudDialogflowCxV3BargeInConfigPtrOutput
	ToGoogleCloudDialogflowCxV3BargeInConfigPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3BargeInConfigPtrOutput
}

type googleCloudDialogflowCxV3BargeInConfigPtrType GoogleCloudDialogflowCxV3BargeInConfigArgs

func GoogleCloudDialogflowCxV3BargeInConfigPtr(v *GoogleCloudDialogflowCxV3BargeInConfigArgs) GoogleCloudDialogflowCxV3BargeInConfigPtrInput {
	return (*googleCloudDialogflowCxV3BargeInConfigPtrType)(v)
}

func (*googleCloudDialogflowCxV3BargeInConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3BargeInConfig)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3BargeInConfigPtrType) ToGoogleCloudDialogflowCxV3BargeInConfigPtrOutput() GoogleCloudDialogflowCxV3BargeInConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3BargeInConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3BargeInConfigPtrType) ToGoogleCloudDialogflowCxV3BargeInConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3BargeInConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3BargeInConfigPtrOutput)
}

// Configuration of the barge-in behavior. Barge-in instructs the API to return a detected utterance at a proper time while the client is playing back the response audio from a previous request. When the client sees the utterance, it should stop the playback and immediately get ready for receiving the responses for the current request. The barge-in handling requires the client to start streaming audio input as soon as it starts playing back the audio from the previous response. The playback is modeled into two phases: * No barge-in phase: which goes first and during which speech detection should not be carried out. * Barge-in phase: which follows the no barge-in phase and during which the API starts speech detection and may inform the client that an utterance has been detected. Note that no-speech event is not expected in this phase. The client provides this configuration in terms of the durations of those two phases. The durations are measured in terms of the audio length fromt the the start of the input audio. The flow goes like below: --> Time without speech detection | utterance only | utterance or no-speech event | | +-------------+ | +------------+ | +---------------+ ----------+ no barge-in +-|-+ barge-in +-|-+ normal period +----------- +-------------+ | +------------+ | +---------------+ No-speech event is a response with END_OF_UTTERANCE without any transcript following up.
type GoogleCloudDialogflowCxV3BargeInConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3BargeInConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3BargeInConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3BargeInConfigOutput) ToGoogleCloudDialogflowCxV3BargeInConfigOutput() GoogleCloudDialogflowCxV3BargeInConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3BargeInConfigOutput) ToGoogleCloudDialogflowCxV3BargeInConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3BargeInConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3BargeInConfigOutput) ToGoogleCloudDialogflowCxV3BargeInConfigPtrOutput() GoogleCloudDialogflowCxV3BargeInConfigPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3BargeInConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3BargeInConfigOutput) ToGoogleCloudDialogflowCxV3BargeInConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3BargeInConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3BargeInConfig) *GoogleCloudDialogflowCxV3BargeInConfig {
		return &v
	}).(GoogleCloudDialogflowCxV3BargeInConfigPtrOutput)
}

// Duration that is not eligible for barge-in at the beginning of the input audio.
func (o GoogleCloudDialogflowCxV3BargeInConfigOutput) NoBargeInDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3BargeInConfig) *string { return v.NoBargeInDuration }).(pulumi.StringPtrOutput)
}

// Total duration for the playback at the beginning of the input audio.
func (o GoogleCloudDialogflowCxV3BargeInConfigOutput) TotalDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3BargeInConfig) *string { return v.TotalDuration }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3BargeInConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3BargeInConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3BargeInConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3BargeInConfigPtrOutput) ToGoogleCloudDialogflowCxV3BargeInConfigPtrOutput() GoogleCloudDialogflowCxV3BargeInConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3BargeInConfigPtrOutput) ToGoogleCloudDialogflowCxV3BargeInConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3BargeInConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3BargeInConfigPtrOutput) Elem() GoogleCloudDialogflowCxV3BargeInConfigOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3BargeInConfig) GoogleCloudDialogflowCxV3BargeInConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3BargeInConfig
		return ret
	}).(GoogleCloudDialogflowCxV3BargeInConfigOutput)
}

// Duration that is not eligible for barge-in at the beginning of the input audio.
func (o GoogleCloudDialogflowCxV3BargeInConfigPtrOutput) NoBargeInDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3BargeInConfig) *string {
		if v == nil {
			return nil
		}
		return v.NoBargeInDuration
	}).(pulumi.StringPtrOutput)
}

// Total duration for the playback at the beginning of the input audio.
func (o GoogleCloudDialogflowCxV3BargeInConfigPtrOutput) TotalDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3BargeInConfig) *string {
		if v == nil {
			return nil
		}
		return v.TotalDuration
	}).(pulumi.StringPtrOutput)
}

// Configuration of the barge-in behavior. Barge-in instructs the API to return a detected utterance at a proper time while the client is playing back the response audio from a previous request. When the client sees the utterance, it should stop the playback and immediately get ready for receiving the responses for the current request. The barge-in handling requires the client to start streaming audio input as soon as it starts playing back the audio from the previous response. The playback is modeled into two phases: * No barge-in phase: which goes first and during which speech detection should not be carried out. * Barge-in phase: which follows the no barge-in phase and during which the API starts speech detection and may inform the client that an utterance has been detected. Note that no-speech event is not expected in this phase. The client provides this configuration in terms of the durations of those two phases. The durations are measured in terms of the audio length fromt the the start of the input audio. The flow goes like below: --> Time without speech detection | utterance only | utterance or no-speech event | | +-------------+ | +------------+ | +---------------+ ----------+ no barge-in +-|-+ barge-in +-|-+ normal period +----------- +-------------+ | +------------+ | +---------------+ No-speech event is a response with END_OF_UTTERANCE without any transcript following up.
type GoogleCloudDialogflowCxV3BargeInConfigResponse struct {
	// Duration that is not eligible for barge-in at the beginning of the input audio.
	NoBargeInDuration string `pulumi:"noBargeInDuration"`
	// Total duration for the playback at the beginning of the input audio.
	TotalDuration string `pulumi:"totalDuration"`
}

// Configuration of the barge-in behavior. Barge-in instructs the API to return a detected utterance at a proper time while the client is playing back the response audio from a previous request. When the client sees the utterance, it should stop the playback and immediately get ready for receiving the responses for the current request. The barge-in handling requires the client to start streaming audio input as soon as it starts playing back the audio from the previous response. The playback is modeled into two phases: * No barge-in phase: which goes first and during which speech detection should not be carried out. * Barge-in phase: which follows the no barge-in phase and during which the API starts speech detection and may inform the client that an utterance has been detected. Note that no-speech event is not expected in this phase. The client provides this configuration in terms of the durations of those two phases. The durations are measured in terms of the audio length fromt the the start of the input audio. The flow goes like below: --> Time without speech detection | utterance only | utterance or no-speech event | | +-------------+ | +------------+ | +---------------+ ----------+ no barge-in +-|-+ barge-in +-|-+ normal period +----------- +-------------+ | +------------+ | +---------------+ No-speech event is a response with END_OF_UTTERANCE without any transcript following up.
type GoogleCloudDialogflowCxV3BargeInConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3BargeInConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3BargeInConfigResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3BargeInConfigResponseOutput) ToGoogleCloudDialogflowCxV3BargeInConfigResponseOutput() GoogleCloudDialogflowCxV3BargeInConfigResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3BargeInConfigResponseOutput) ToGoogleCloudDialogflowCxV3BargeInConfigResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3BargeInConfigResponseOutput {
	return o
}

// Duration that is not eligible for barge-in at the beginning of the input audio.
func (o GoogleCloudDialogflowCxV3BargeInConfigResponseOutput) NoBargeInDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3BargeInConfigResponse) string { return v.NoBargeInDuration }).(pulumi.StringOutput)
}

// Total duration for the playback at the beginning of the input audio.
func (o GoogleCloudDialogflowCxV3BargeInConfigResponseOutput) TotalDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3BargeInConfigResponse) string { return v.TotalDuration }).(pulumi.StringOutput)
}

// One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.
type GoogleCloudDialogflowCxV3ConversationTurn struct {
	// The user input.
	UserInput *GoogleCloudDialogflowCxV3ConversationTurnUserInput `pulumi:"userInput"`
	// The virtual agent output.
	VirtualAgentOutput *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput `pulumi:"virtualAgentOutput"`
}

// GoogleCloudDialogflowCxV3ConversationTurnInput is an input type that accepts GoogleCloudDialogflowCxV3ConversationTurnArgs and GoogleCloudDialogflowCxV3ConversationTurnOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ConversationTurnInput` via:
//
//	GoogleCloudDialogflowCxV3ConversationTurnArgs{...}
type GoogleCloudDialogflowCxV3ConversationTurnInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ConversationTurnOutput() GoogleCloudDialogflowCxV3ConversationTurnOutput
	ToGoogleCloudDialogflowCxV3ConversationTurnOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ConversationTurnOutput
}

// One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.
type GoogleCloudDialogflowCxV3ConversationTurnArgs struct {
	// The user input.
	UserInput GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrInput `pulumi:"userInput"`
	// The virtual agent output.
	VirtualAgentOutput GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrInput `pulumi:"virtualAgentOutput"`
}

func (GoogleCloudDialogflowCxV3ConversationTurnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurn)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ConversationTurnArgs) ToGoogleCloudDialogflowCxV3ConversationTurnOutput() GoogleCloudDialogflowCxV3ConversationTurnOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ConversationTurnArgs) ToGoogleCloudDialogflowCxV3ConversationTurnOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnOutput)
}

// GoogleCloudDialogflowCxV3ConversationTurnArrayInput is an input type that accepts GoogleCloudDialogflowCxV3ConversationTurnArray and GoogleCloudDialogflowCxV3ConversationTurnArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ConversationTurnArrayInput` via:
//
//	GoogleCloudDialogflowCxV3ConversationTurnArray{ GoogleCloudDialogflowCxV3ConversationTurnArgs{...} }
type GoogleCloudDialogflowCxV3ConversationTurnArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ConversationTurnArrayOutput() GoogleCloudDialogflowCxV3ConversationTurnArrayOutput
	ToGoogleCloudDialogflowCxV3ConversationTurnArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ConversationTurnArrayOutput
}

type GoogleCloudDialogflowCxV3ConversationTurnArray []GoogleCloudDialogflowCxV3ConversationTurnInput

func (GoogleCloudDialogflowCxV3ConversationTurnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ConversationTurn)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ConversationTurnArray) ToGoogleCloudDialogflowCxV3ConversationTurnArrayOutput() GoogleCloudDialogflowCxV3ConversationTurnArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ConversationTurnArray) ToGoogleCloudDialogflowCxV3ConversationTurnArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnArrayOutput)
}

// One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.
type GoogleCloudDialogflowCxV3ConversationTurnOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurn)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnOutput) ToGoogleCloudDialogflowCxV3ConversationTurnOutput() GoogleCloudDialogflowCxV3ConversationTurnOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnOutput) ToGoogleCloudDialogflowCxV3ConversationTurnOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnOutput {
	return o
}

// The user input.
func (o GoogleCloudDialogflowCxV3ConversationTurnOutput) UserInput() GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurn) *GoogleCloudDialogflowCxV3ConversationTurnUserInput {
		return v.UserInput
	}).(GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput)
}

// The virtual agent output.
func (o GoogleCloudDialogflowCxV3ConversationTurnOutput) VirtualAgentOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurn) *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput {
		return v.VirtualAgentOutput
	}).(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput)
}

type GoogleCloudDialogflowCxV3ConversationTurnArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ConversationTurn)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnArrayOutput) ToGoogleCloudDialogflowCxV3ConversationTurnArrayOutput() GoogleCloudDialogflowCxV3ConversationTurnArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnArrayOutput) ToGoogleCloudDialogflowCxV3ConversationTurnArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ConversationTurnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ConversationTurn {
		return vs[0].([]GoogleCloudDialogflowCxV3ConversationTurn)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ConversationTurnOutput)
}

// One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.
type GoogleCloudDialogflowCxV3ConversationTurnResponse struct {
	// The user input.
	UserInput GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse `pulumi:"userInput"`
	// The virtual agent output.
	VirtualAgentOutput GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponse `pulumi:"virtualAgentOutput"`
}

// One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.
type GoogleCloudDialogflowCxV3ConversationTurnResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnResponseOutput) ToGoogleCloudDialogflowCxV3ConversationTurnResponseOutput() GoogleCloudDialogflowCxV3ConversationTurnResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnResponseOutput) ToGoogleCloudDialogflowCxV3ConversationTurnResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnResponseOutput {
	return o
}

// The user input.
func (o GoogleCloudDialogflowCxV3ConversationTurnResponseOutput) UserInput() GoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnResponse) GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse {
		return v.UserInput
	}).(GoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutput)
}

// The virtual agent output.
func (o GoogleCloudDialogflowCxV3ConversationTurnResponseOutput) VirtualAgentOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnResponse) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponse {
		return v.VirtualAgentOutput
	}).(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput)
}

type GoogleCloudDialogflowCxV3ConversationTurnResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ConversationTurnResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnResponseArrayOutput) ToGoogleCloudDialogflowCxV3ConversationTurnResponseArrayOutput() GoogleCloudDialogflowCxV3ConversationTurnResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnResponseArrayOutput) ToGoogleCloudDialogflowCxV3ConversationTurnResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ConversationTurnResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ConversationTurnResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3ConversationTurnResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ConversationTurnResponseOutput)
}

// The input from the human user.
type GoogleCloudDialogflowCxV3ConversationTurnUserInput struct {
	// Whether sentiment analysis is enabled.
	EnableSentimentAnalysis *bool `pulumi:"enableSentimentAnalysis"`
	// Parameters that need to be injected into the conversation during intent detection.
	InjectedParameters map[string]interface{} `pulumi:"injectedParameters"`
	// Supports text input, event input, dtmf input in the test case.
	Input *GoogleCloudDialogflowCxV3QueryInput `pulumi:"input"`
	// If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
	IsWebhookEnabled *bool `pulumi:"isWebhookEnabled"`
}

// GoogleCloudDialogflowCxV3ConversationTurnUserInputInput is an input type that accepts GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs and GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ConversationTurnUserInputInput` via:
//
//	GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs{...}
type GoogleCloudDialogflowCxV3ConversationTurnUserInputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ConversationTurnUserInputOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput
	ToGoogleCloudDialogflowCxV3ConversationTurnUserInputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput
}

// The input from the human user.
type GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs struct {
	// Whether sentiment analysis is enabled.
	EnableSentimentAnalysis pulumi.BoolPtrInput `pulumi:"enableSentimentAnalysis"`
	// Parameters that need to be injected into the conversation during intent detection.
	InjectedParameters pulumi.MapInput `pulumi:"injectedParameters"`
	// Supports text input, event input, dtmf input in the test case.
	Input GoogleCloudDialogflowCxV3QueryInputPtrInput `pulumi:"input"`
	// If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
	IsWebhookEnabled pulumi.BoolPtrInput `pulumi:"isWebhookEnabled"`
}

func (GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnUserInput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnUserInputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput)
}

func (i GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput).ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs, GoogleCloudDialogflowCxV3ConversationTurnUserInputPtr and GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput
	ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput
}

type googleCloudDialogflowCxV3ConversationTurnUserInputPtrType GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs

func GoogleCloudDialogflowCxV3ConversationTurnUserInputPtr(v *GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs) GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrInput {
	return (*googleCloudDialogflowCxV3ConversationTurnUserInputPtrType)(v)
}

func (*googleCloudDialogflowCxV3ConversationTurnUserInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ConversationTurnUserInput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ConversationTurnUserInputPtrType) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ConversationTurnUserInputPtrType) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput)
}

// The input from the human user.
type GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnUserInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3ConversationTurnUserInput) *GoogleCloudDialogflowCxV3ConversationTurnUserInput {
		return &v
	}).(GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput)
}

// Whether sentiment analysis is enabled.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) EnableSentimentAnalysis() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnUserInput) *bool { return v.EnableSentimentAnalysis }).(pulumi.BoolPtrOutput)
}

// Parameters that need to be injected into the conversation during intent detection.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) InjectedParameters() pulumi.MapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnUserInput) map[string]interface{} {
		return v.InjectedParameters
	}).(pulumi.MapOutput)
}

// Supports text input, event input, dtmf input in the test case.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) Input() GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnUserInput) *GoogleCloudDialogflowCxV3QueryInput {
		return v.Input
	}).(GoogleCloudDialogflowCxV3QueryInputPtrOutput)
}

// If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) IsWebhookEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnUserInput) *bool { return v.IsWebhookEnabled }).(pulumi.BoolPtrOutput)
}

type GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ConversationTurnUserInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) Elem() GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnUserInput) GoogleCloudDialogflowCxV3ConversationTurnUserInput {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3ConversationTurnUserInput
		return ret
	}).(GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput)
}

// Whether sentiment analysis is enabled.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) EnableSentimentAnalysis() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnUserInput) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSentimentAnalysis
	}).(pulumi.BoolPtrOutput)
}

// Parameters that need to be injected into the conversation during intent detection.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) InjectedParameters() pulumi.MapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnUserInput) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.InjectedParameters
	}).(pulumi.MapOutput)
}

// Supports text input, event input, dtmf input in the test case.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) Input() GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnUserInput) *GoogleCloudDialogflowCxV3QueryInput {
		if v == nil {
			return nil
		}
		return v.Input
	}).(GoogleCloudDialogflowCxV3QueryInputPtrOutput)
}

// If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) IsWebhookEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnUserInput) *bool {
		if v == nil {
			return nil
		}
		return v.IsWebhookEnabled
	}).(pulumi.BoolPtrOutput)
}

// The input from the human user.
type GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse struct {
	// Whether sentiment analysis is enabled.
	EnableSentimentAnalysis bool `pulumi:"enableSentimentAnalysis"`
	// Parameters that need to be injected into the conversation during intent detection.
	InjectedParameters map[string]interface{} `pulumi:"injectedParameters"`
	// Supports text input, event input, dtmf input in the test case.
	Input GoogleCloudDialogflowCxV3QueryInputResponse `pulumi:"input"`
	// If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
	IsWebhookEnabled bool `pulumi:"isWebhookEnabled"`
}

// The input from the human user.
type GoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutput) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutput) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutput {
	return o
}

// Whether sentiment analysis is enabled.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutput) EnableSentimentAnalysis() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse) bool {
		return v.EnableSentimentAnalysis
	}).(pulumi.BoolOutput)
}

// Parameters that need to be injected into the conversation during intent detection.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutput) InjectedParameters() pulumi.MapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse) map[string]interface{} {
		return v.InjectedParameters
	}).(pulumi.MapOutput)
}

// Supports text input, event input, dtmf input in the test case.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutput) Input() GoogleCloudDialogflowCxV3QueryInputResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse) GoogleCloudDialogflowCxV3QueryInputResponse {
		return v.Input
	}).(GoogleCloudDialogflowCxV3QueryInputResponseOutput)
}

// If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutput) IsWebhookEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse) bool { return v.IsWebhookEnabled }).(pulumi.BoolOutput)
}

// The output from the virtual agent.
type GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput struct {
	// The Page on which the utterance was spoken. Only name and displayName will be set.
	CurrentPage *GoogleCloudDialogflowCxV3Page `pulumi:"currentPage"`
	// Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.
	DiagnosticInfo map[string]interface{} `pulumi:"diagnosticInfo"`
	// The session parameters available to the bot at this point.
	SessionParameters map[string]interface{} `pulumi:"sessionParameters"`
	// Response error from the agent in the test result. If set, other output is empty.
	Status *GoogleRpcStatus `pulumi:"status"`
	// The text responses from the agent for the turn.
	TextResponses []GoogleCloudDialogflowCxV3ResponseMessageText `pulumi:"textResponses"`
	// The Intent that triggered the response. Only name and displayName will be set.
	TriggeredIntent *GoogleCloudDialogflowCxV3Intent `pulumi:"triggeredIntent"`
}

// GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputInput is an input type that accepts GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs and GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputInput` via:
//
//	GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs{...}
type GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput
	ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput
}

// The output from the virtual agent.
type GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs struct {
	// The Page on which the utterance was spoken. Only name and displayName will be set.
	CurrentPage GoogleCloudDialogflowCxV3PagePtrInput `pulumi:"currentPage"`
	// Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.
	DiagnosticInfo pulumi.MapInput `pulumi:"diagnosticInfo"`
	// The session parameters available to the bot at this point.
	SessionParameters pulumi.MapInput `pulumi:"sessionParameters"`
	// Response error from the agent in the test result. If set, other output is empty.
	Status GoogleRpcStatusPtrInput `pulumi:"status"`
	// The text responses from the agent for the turn.
	TextResponses GoogleCloudDialogflowCxV3ResponseMessageTextArrayInput `pulumi:"textResponses"`
	// The Intent that triggered the response. Only name and displayName will be set.
	TriggeredIntent GoogleCloudDialogflowCxV3IntentPtrInput `pulumi:"triggeredIntent"`
}

func (GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput)
}

func (i GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput).ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs, GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtr and GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput
	ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput
}

type googleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrType GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs

func GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtr(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrInput {
	return (*googleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrType)(v)
}

func (*googleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrType) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrType) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput)
}

// The output from the virtual agent.
type GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput {
		return &v
	}).(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput)
}

// The Page on which the utterance was spoken. Only name and displayName will be set.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) CurrentPage() GoogleCloudDialogflowCxV3PagePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) *GoogleCloudDialogflowCxV3Page {
		return v.CurrentPage
	}).(GoogleCloudDialogflowCxV3PagePtrOutput)
}

// Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) DiagnosticInfo() pulumi.MapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) map[string]interface{} {
		return v.DiagnosticInfo
	}).(pulumi.MapOutput)
}

// The session parameters available to the bot at this point.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) SessionParameters() pulumi.MapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) map[string]interface{} {
		return v.SessionParameters
	}).(pulumi.MapOutput)
}

// Response error from the agent in the test result. If set, other output is empty.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) Status() GoogleRpcStatusPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) *GoogleRpcStatus { return v.Status }).(GoogleRpcStatusPtrOutput)
}

// The text responses from the agent for the turn.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) TextResponses() GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) []GoogleCloudDialogflowCxV3ResponseMessageText {
		return v.TextResponses
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput)
}

// The Intent that triggered the response. Only name and displayName will be set.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) TriggeredIntent() GoogleCloudDialogflowCxV3IntentPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) *GoogleCloudDialogflowCxV3Intent {
		return v.TriggeredIntent
	}).(GoogleCloudDialogflowCxV3IntentPtrOutput)
}

type GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) Elem() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput
		return ret
	}).(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput)
}

// The Page on which the utterance was spoken. Only name and displayName will be set.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) CurrentPage() GoogleCloudDialogflowCxV3PagePtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) *GoogleCloudDialogflowCxV3Page {
		if v == nil {
			return nil
		}
		return v.CurrentPage
	}).(GoogleCloudDialogflowCxV3PagePtrOutput)
}

// Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) DiagnosticInfo() pulumi.MapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.DiagnosticInfo
	}).(pulumi.MapOutput)
}

// The session parameters available to the bot at this point.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) SessionParameters() pulumi.MapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SessionParameters
	}).(pulumi.MapOutput)
}

// Response error from the agent in the test result. If set, other output is empty.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) Status() GoogleRpcStatusPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) *GoogleRpcStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(GoogleRpcStatusPtrOutput)
}

// The text responses from the agent for the turn.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) TextResponses() GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) []GoogleCloudDialogflowCxV3ResponseMessageText {
		if v == nil {
			return nil
		}
		return v.TextResponses
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput)
}

// The Intent that triggered the response. Only name and displayName will be set.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) TriggeredIntent() GoogleCloudDialogflowCxV3IntentPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) *GoogleCloudDialogflowCxV3Intent {
		if v == nil {
			return nil
		}
		return v.TriggeredIntent
	}).(GoogleCloudDialogflowCxV3IntentPtrOutput)
}

// The output from the virtual agent.
type GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponse struct {
	// The Page on which the utterance was spoken. Only name and displayName will be set.
	CurrentPage GoogleCloudDialogflowCxV3PageResponse `pulumi:"currentPage"`
	// Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.
	DiagnosticInfo map[string]interface{} `pulumi:"diagnosticInfo"`
	// If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.
	Differences []GoogleCloudDialogflowCxV3TestRunDifferenceResponse `pulumi:"differences"`
	// The session parameters available to the bot at this point.
	SessionParameters map[string]interface{} `pulumi:"sessionParameters"`
	// Response error from the agent in the test result. If set, other output is empty.
	Status GoogleRpcStatusResponse `pulumi:"status"`
	// The text responses from the agent for the turn.
	TextResponses []GoogleCloudDialogflowCxV3ResponseMessageTextResponse `pulumi:"textResponses"`
	// The Intent that triggered the response. Only name and displayName will be set.
	TriggeredIntent GoogleCloudDialogflowCxV3IntentResponse `pulumi:"triggeredIntent"`
}

// The output from the virtual agent.
type GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput {
	return o
}

// The Page on which the utterance was spoken. Only name and displayName will be set.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput) CurrentPage() GoogleCloudDialogflowCxV3PageResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponse) GoogleCloudDialogflowCxV3PageResponse {
		return v.CurrentPage
	}).(GoogleCloudDialogflowCxV3PageResponseOutput)
}

// Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput) DiagnosticInfo() pulumi.MapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponse) map[string]interface{} {
		return v.DiagnosticInfo
	}).(pulumi.MapOutput)
}

// If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput) Differences() GoogleCloudDialogflowCxV3TestRunDifferenceResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponse) []GoogleCloudDialogflowCxV3TestRunDifferenceResponse {
		return v.Differences
	}).(GoogleCloudDialogflowCxV3TestRunDifferenceResponseArrayOutput)
}

// The session parameters available to the bot at this point.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput) SessionParameters() pulumi.MapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponse) map[string]interface{} {
		return v.SessionParameters
	}).(pulumi.MapOutput)
}

// Response error from the agent in the test result. If set, other output is empty.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput) Status() GoogleRpcStatusResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponse) GoogleRpcStatusResponse {
		return v.Status
	}).(GoogleRpcStatusResponseOutput)
}

// The text responses from the agent for the turn.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput) TextResponses() GoogleCloudDialogflowCxV3ResponseMessageTextResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponse) []GoogleCloudDialogflowCxV3ResponseMessageTextResponse {
		return v.TextResponses
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextResponseArrayOutput)
}

// The Intent that triggered the response. Only name and displayName will be set.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput) TriggeredIntent() GoogleCloudDialogflowCxV3IntentResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponse) GoogleCloudDialogflowCxV3IntentResponse {
		return v.TriggeredIntent
	}).(GoogleCloudDialogflowCxV3IntentResponseOutput)
}

// A data store connection. It represents a data store in Discovery Engine and the type of the contents it contains.
type GoogleCloudDialogflowCxV3DataStoreConnection struct {
	// The full name of the referenced data store. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}`
	DataStore *string `pulumi:"dataStore"`
	// The type of the connected data store.
	DataStoreType *GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType `pulumi:"dataStoreType"`
}

// GoogleCloudDialogflowCxV3DataStoreConnectionInput is an input type that accepts GoogleCloudDialogflowCxV3DataStoreConnectionArgs and GoogleCloudDialogflowCxV3DataStoreConnectionOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3DataStoreConnectionInput` via:
//
//	GoogleCloudDialogflowCxV3DataStoreConnectionArgs{...}
type GoogleCloudDialogflowCxV3DataStoreConnectionInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3DataStoreConnectionOutput() GoogleCloudDialogflowCxV3DataStoreConnectionOutput
	ToGoogleCloudDialogflowCxV3DataStoreConnectionOutputWithContext(context.Context) GoogleCloudDialogflowCxV3DataStoreConnectionOutput
}

// A data store connection. It represents a data store in Discovery Engine and the type of the contents it contains.
type GoogleCloudDialogflowCxV3DataStoreConnectionArgs struct {
	// The full name of the referenced data store. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}`
	DataStore pulumi.StringPtrInput `pulumi:"dataStore"`
	// The type of the connected data store.
	DataStoreType GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreTypePtrInput `pulumi:"dataStoreType"`
}

func (GoogleCloudDialogflowCxV3DataStoreConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3DataStoreConnection)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3DataStoreConnectionArgs) ToGoogleCloudDialogflowCxV3DataStoreConnectionOutput() GoogleCloudDialogflowCxV3DataStoreConnectionOutput {
	return i.ToGoogleCloudDialogflowCxV3DataStoreConnectionOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3DataStoreConnectionArgs) ToGoogleCloudDialogflowCxV3DataStoreConnectionOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DataStoreConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3DataStoreConnectionOutput)
}

// GoogleCloudDialogflowCxV3DataStoreConnectionArrayInput is an input type that accepts GoogleCloudDialogflowCxV3DataStoreConnectionArray and GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3DataStoreConnectionArrayInput` via:
//
//	GoogleCloudDialogflowCxV3DataStoreConnectionArray{ GoogleCloudDialogflowCxV3DataStoreConnectionArgs{...} }
type GoogleCloudDialogflowCxV3DataStoreConnectionArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput() GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput
	ToGoogleCloudDialogflowCxV3DataStoreConnectionArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput
}

type GoogleCloudDialogflowCxV3DataStoreConnectionArray []GoogleCloudDialogflowCxV3DataStoreConnectionInput

func (GoogleCloudDialogflowCxV3DataStoreConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3DataStoreConnection)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3DataStoreConnectionArray) ToGoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput() GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3DataStoreConnectionArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3DataStoreConnectionArray) ToGoogleCloudDialogflowCxV3DataStoreConnectionArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput)
}

// A data store connection. It represents a data store in Discovery Engine and the type of the contents it contains.
type GoogleCloudDialogflowCxV3DataStoreConnectionOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3DataStoreConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3DataStoreConnection)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3DataStoreConnectionOutput) ToGoogleCloudDialogflowCxV3DataStoreConnectionOutput() GoogleCloudDialogflowCxV3DataStoreConnectionOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DataStoreConnectionOutput) ToGoogleCloudDialogflowCxV3DataStoreConnectionOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DataStoreConnectionOutput {
	return o
}

// The full name of the referenced data store. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}`
func (o GoogleCloudDialogflowCxV3DataStoreConnectionOutput) DataStore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3DataStoreConnection) *string { return v.DataStore }).(pulumi.StringPtrOutput)
}

// The type of the connected data store.
func (o GoogleCloudDialogflowCxV3DataStoreConnectionOutput) DataStoreType() GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreTypePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3DataStoreConnection) *GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType {
		return v.DataStoreType
	}).(GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreTypePtrOutput)
}

type GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3DataStoreConnection)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput) ToGoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput() GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput) ToGoogleCloudDialogflowCxV3DataStoreConnectionArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3DataStoreConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3DataStoreConnection {
		return vs[0].([]GoogleCloudDialogflowCxV3DataStoreConnection)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3DataStoreConnectionOutput)
}

// A data store connection. It represents a data store in Discovery Engine and the type of the contents it contains.
type GoogleCloudDialogflowCxV3DataStoreConnectionResponse struct {
	// The full name of the referenced data store. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}`
	DataStore string `pulumi:"dataStore"`
	// The type of the connected data store.
	DataStoreType string `pulumi:"dataStoreType"`
}

// A data store connection. It represents a data store in Discovery Engine and the type of the contents it contains.
type GoogleCloudDialogflowCxV3DataStoreConnectionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3DataStoreConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3DataStoreConnectionResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3DataStoreConnectionResponseOutput) ToGoogleCloudDialogflowCxV3DataStoreConnectionResponseOutput() GoogleCloudDialogflowCxV3DataStoreConnectionResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DataStoreConnectionResponseOutput) ToGoogleCloudDialogflowCxV3DataStoreConnectionResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DataStoreConnectionResponseOutput {
	return o
}

// The full name of the referenced data store. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}`
func (o GoogleCloudDialogflowCxV3DataStoreConnectionResponseOutput) DataStore() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3DataStoreConnectionResponse) string { return v.DataStore }).(pulumi.StringOutput)
}

// The type of the connected data store.
func (o GoogleCloudDialogflowCxV3DataStoreConnectionResponseOutput) DataStoreType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3DataStoreConnectionResponse) string { return v.DataStoreType }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3DataStoreConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3DataStoreConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3DataStoreConnectionResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3DataStoreConnectionResponseArrayOutput) ToGoogleCloudDialogflowCxV3DataStoreConnectionResponseArrayOutput() GoogleCloudDialogflowCxV3DataStoreConnectionResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DataStoreConnectionResponseArrayOutput) ToGoogleCloudDialogflowCxV3DataStoreConnectionResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DataStoreConnectionResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DataStoreConnectionResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3DataStoreConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3DataStoreConnectionResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3DataStoreConnectionResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3DataStoreConnectionResponseOutput)
}

// Represents the input for dtmf event.
type GoogleCloudDialogflowCxV3DtmfInput struct {
	// The dtmf digits.
	Digits *string `pulumi:"digits"`
	// The finish digit (if any).
	FinishDigit *string `pulumi:"finishDigit"`
}

// GoogleCloudDialogflowCxV3DtmfInputInput is an input type that accepts GoogleCloudDialogflowCxV3DtmfInputArgs and GoogleCloudDialogflowCxV3DtmfInputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3DtmfInputInput` via:
//
//	GoogleCloudDialogflowCxV3DtmfInputArgs{...}
type GoogleCloudDialogflowCxV3DtmfInputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3DtmfInputOutput() GoogleCloudDialogflowCxV3DtmfInputOutput
	ToGoogleCloudDialogflowCxV3DtmfInputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3DtmfInputOutput
}

// Represents the input for dtmf event.
type GoogleCloudDialogflowCxV3DtmfInputArgs struct {
	// The dtmf digits.
	Digits pulumi.StringPtrInput `pulumi:"digits"`
	// The finish digit (if any).
	FinishDigit pulumi.StringPtrInput `pulumi:"finishDigit"`
}

func (GoogleCloudDialogflowCxV3DtmfInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3DtmfInput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3DtmfInputArgs) ToGoogleCloudDialogflowCxV3DtmfInputOutput() GoogleCloudDialogflowCxV3DtmfInputOutput {
	return i.ToGoogleCloudDialogflowCxV3DtmfInputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3DtmfInputArgs) ToGoogleCloudDialogflowCxV3DtmfInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DtmfInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3DtmfInputOutput)
}

func (i GoogleCloudDialogflowCxV3DtmfInputArgs) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutput() GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3DtmfInputArgs) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3DtmfInputOutput).ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3DtmfInputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3DtmfInputArgs, GoogleCloudDialogflowCxV3DtmfInputPtr and GoogleCloudDialogflowCxV3DtmfInputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3DtmfInputPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3DtmfInputArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3DtmfInputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3DtmfInputPtrOutput() GoogleCloudDialogflowCxV3DtmfInputPtrOutput
	ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3DtmfInputPtrOutput
}

type googleCloudDialogflowCxV3DtmfInputPtrType GoogleCloudDialogflowCxV3DtmfInputArgs

func GoogleCloudDialogflowCxV3DtmfInputPtr(v *GoogleCloudDialogflowCxV3DtmfInputArgs) GoogleCloudDialogflowCxV3DtmfInputPtrInput {
	return (*googleCloudDialogflowCxV3DtmfInputPtrType)(v)
}

func (*googleCloudDialogflowCxV3DtmfInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3DtmfInput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3DtmfInputPtrType) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutput() GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3DtmfInputPtrType) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3DtmfInputPtrOutput)
}

// Represents the input for dtmf event.
type GoogleCloudDialogflowCxV3DtmfInputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3DtmfInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3DtmfInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3DtmfInputOutput) ToGoogleCloudDialogflowCxV3DtmfInputOutput() GoogleCloudDialogflowCxV3DtmfInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DtmfInputOutput) ToGoogleCloudDialogflowCxV3DtmfInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DtmfInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DtmfInputOutput) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutput() GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3DtmfInputOutput) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3DtmfInput) *GoogleCloudDialogflowCxV3DtmfInput {
		return &v
	}).(GoogleCloudDialogflowCxV3DtmfInputPtrOutput)
}

// The dtmf digits.
func (o GoogleCloudDialogflowCxV3DtmfInputOutput) Digits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3DtmfInput) *string { return v.Digits }).(pulumi.StringPtrOutput)
}

// The finish digit (if any).
func (o GoogleCloudDialogflowCxV3DtmfInputOutput) FinishDigit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3DtmfInput) *string { return v.FinishDigit }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3DtmfInputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3DtmfInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3DtmfInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3DtmfInputPtrOutput) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutput() GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DtmfInputPtrOutput) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DtmfInputPtrOutput) Elem() GoogleCloudDialogflowCxV3DtmfInputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3DtmfInput) GoogleCloudDialogflowCxV3DtmfInput {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3DtmfInput
		return ret
	}).(GoogleCloudDialogflowCxV3DtmfInputOutput)
}

// The dtmf digits.
func (o GoogleCloudDialogflowCxV3DtmfInputPtrOutput) Digits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3DtmfInput) *string {
		if v == nil {
			return nil
		}
		return v.Digits
	}).(pulumi.StringPtrOutput)
}

// The finish digit (if any).
func (o GoogleCloudDialogflowCxV3DtmfInputPtrOutput) FinishDigit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3DtmfInput) *string {
		if v == nil {
			return nil
		}
		return v.FinishDigit
	}).(pulumi.StringPtrOutput)
}

// Represents the input for dtmf event.
type GoogleCloudDialogflowCxV3DtmfInputResponse struct {
	// The dtmf digits.
	Digits string `pulumi:"digits"`
	// The finish digit (if any).
	FinishDigit string `pulumi:"finishDigit"`
}

// Represents the input for dtmf event.
type GoogleCloudDialogflowCxV3DtmfInputResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3DtmfInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3DtmfInputResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3DtmfInputResponseOutput) ToGoogleCloudDialogflowCxV3DtmfInputResponseOutput() GoogleCloudDialogflowCxV3DtmfInputResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DtmfInputResponseOutput) ToGoogleCloudDialogflowCxV3DtmfInputResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DtmfInputResponseOutput {
	return o
}

// The dtmf digits.
func (o GoogleCloudDialogflowCxV3DtmfInputResponseOutput) Digits() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3DtmfInputResponse) string { return v.Digits }).(pulumi.StringOutput)
}

// The finish digit (if any).
func (o GoogleCloudDialogflowCxV3DtmfInputResponseOutput) FinishDigit() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3DtmfInputResponse) string { return v.FinishDigit }).(pulumi.StringOutput)
}

// An **entity entry** for an associated entity type.
type GoogleCloudDialogflowCxV3EntityTypeEntity struct {
	// A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.
	Synonyms []string `pulumi:"synonyms"`
	// The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A canonical value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).
	Value string `pulumi:"value"`
}

// GoogleCloudDialogflowCxV3EntityTypeEntityInput is an input type that accepts GoogleCloudDialogflowCxV3EntityTypeEntityArgs and GoogleCloudDialogflowCxV3EntityTypeEntityOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EntityTypeEntityInput` via:
//
//	GoogleCloudDialogflowCxV3EntityTypeEntityArgs{...}
type GoogleCloudDialogflowCxV3EntityTypeEntityInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EntityTypeEntityOutput() GoogleCloudDialogflowCxV3EntityTypeEntityOutput
	ToGoogleCloudDialogflowCxV3EntityTypeEntityOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EntityTypeEntityOutput
}

// An **entity entry** for an associated entity type.
type GoogleCloudDialogflowCxV3EntityTypeEntityArgs struct {
	// A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.
	Synonyms pulumi.StringArrayInput `pulumi:"synonyms"`
	// The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A canonical value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).
	Value pulumi.StringInput `pulumi:"value"`
}

func (GoogleCloudDialogflowCxV3EntityTypeEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityTypeEntity)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EntityTypeEntityArgs) ToGoogleCloudDialogflowCxV3EntityTypeEntityOutput() GoogleCloudDialogflowCxV3EntityTypeEntityOutput {
	return i.ToGoogleCloudDialogflowCxV3EntityTypeEntityOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EntityTypeEntityArgs) ToGoogleCloudDialogflowCxV3EntityTypeEntityOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EntityTypeEntityOutput)
}

// GoogleCloudDialogflowCxV3EntityTypeEntityArrayInput is an input type that accepts GoogleCloudDialogflowCxV3EntityTypeEntityArray and GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EntityTypeEntityArrayInput` via:
//
//	GoogleCloudDialogflowCxV3EntityTypeEntityArray{ GoogleCloudDialogflowCxV3EntityTypeEntityArgs{...} }
type GoogleCloudDialogflowCxV3EntityTypeEntityArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput() GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput
	ToGoogleCloudDialogflowCxV3EntityTypeEntityArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput
}

type GoogleCloudDialogflowCxV3EntityTypeEntityArray []GoogleCloudDialogflowCxV3EntityTypeEntityInput

func (GoogleCloudDialogflowCxV3EntityTypeEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EntityTypeEntity)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EntityTypeEntityArray) ToGoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput() GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3EntityTypeEntityArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EntityTypeEntityArray) ToGoogleCloudDialogflowCxV3EntityTypeEntityArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput)
}

// An **entity entry** for an associated entity type.
type GoogleCloudDialogflowCxV3EntityTypeEntityOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EntityTypeEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityTypeEntity)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityOutput) ToGoogleCloudDialogflowCxV3EntityTypeEntityOutput() GoogleCloudDialogflowCxV3EntityTypeEntityOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityOutput) ToGoogleCloudDialogflowCxV3EntityTypeEntityOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeEntityOutput {
	return o
}

// A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.
func (o GoogleCloudDialogflowCxV3EntityTypeEntityOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EntityTypeEntity) []string { return v.Synonyms }).(pulumi.StringArrayOutput)
}

// The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A canonical value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).
func (o GoogleCloudDialogflowCxV3EntityTypeEntityOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EntityTypeEntity) string { return v.Value }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EntityTypeEntity)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput) ToGoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput() GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput) ToGoogleCloudDialogflowCxV3EntityTypeEntityArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3EntityTypeEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3EntityTypeEntity {
		return vs[0].([]GoogleCloudDialogflowCxV3EntityTypeEntity)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3EntityTypeEntityOutput)
}

// An **entity entry** for an associated entity type.
type GoogleCloudDialogflowCxV3EntityTypeEntityResponse struct {
	// A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.
	Synonyms []string `pulumi:"synonyms"`
	// The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A canonical value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).
	Value string `pulumi:"value"`
}

// An **entity entry** for an associated entity type.
type GoogleCloudDialogflowCxV3EntityTypeEntityResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EntityTypeEntityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityTypeEntityResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityResponseOutput) ToGoogleCloudDialogflowCxV3EntityTypeEntityResponseOutput() GoogleCloudDialogflowCxV3EntityTypeEntityResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityResponseOutput) ToGoogleCloudDialogflowCxV3EntityTypeEntityResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeEntityResponseOutput {
	return o
}

// A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.
func (o GoogleCloudDialogflowCxV3EntityTypeEntityResponseOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EntityTypeEntityResponse) []string { return v.Synonyms }).(pulumi.StringArrayOutput)
}

// The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A canonical value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).
func (o GoogleCloudDialogflowCxV3EntityTypeEntityResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EntityTypeEntityResponse) string { return v.Value }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3EntityTypeEntityResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EntityTypeEntityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EntityTypeEntityResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityResponseArrayOutput) ToGoogleCloudDialogflowCxV3EntityTypeEntityResponseArrayOutput() GoogleCloudDialogflowCxV3EntityTypeEntityResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityResponseArrayOutput) ToGoogleCloudDialogflowCxV3EntityTypeEntityResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeEntityResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3EntityTypeEntityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3EntityTypeEntityResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3EntityTypeEntityResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3EntityTypeEntityResponseOutput)
}

// An excluded entity phrase that should not be matched.
type GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase struct {
	// The word or phrase to be excluded.
	Value string `pulumi:"value"`
}

// GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseInput is an input type that accepts GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs and GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseInput` via:
//
//	GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs{...}
type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput() GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput
	ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput
}

// An excluded entity phrase that should not be matched.
type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs struct {
	// The word or phrase to be excluded.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput() GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput {
	return i.ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput)
}

// GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayInput is an input type that accepts GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArray and GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayInput` via:
//
//	GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArray{ GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs{...} }
type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput() GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput
	ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput
}

type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArray []GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseInput

func (GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArray) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput() GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArray) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput)
}

// An excluded entity phrase that should not be matched.
type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput() GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput {
	return o
}

// The word or phrase to be excluded.
func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase) string { return v.Value }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput() GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase {
		return vs[0].([]GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput)
}

// An excluded entity phrase that should not be matched.
type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse struct {
	// The word or phrase to be excluded.
	Value string `pulumi:"value"`
}

// An excluded entity phrase that should not be matched.
type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseOutput) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseOutput() GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseOutput) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseOutput {
	return o
}

// The word or phrase to be excluded.
func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse) string { return v.Value }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseArrayOutput) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseArrayOutput() GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseArrayOutput) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseOutput)
}

// The configuration for continuous tests.
type GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig struct {
	// Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day.
	EnableContinuousRun *bool `pulumi:"enableContinuousRun"`
	// Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false.
	EnablePredeploymentRun *bool `pulumi:"enablePredeploymentRun"`
	// A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`
	TestCases []string `pulumi:"testCases"`
}

// GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigInput is an input type that accepts GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigArgs and GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigInput` via:
//
//	GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigArgs{...}
type GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput() GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput
	ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput
}

// The configuration for continuous tests.
type GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigArgs struct {
	// Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day.
	EnableContinuousRun pulumi.BoolPtrInput `pulumi:"enableContinuousRun"`
	// Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false.
	EnablePredeploymentRun pulumi.BoolPtrInput `pulumi:"enablePredeploymentRun"`
	// A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`
	TestCases pulumi.StringArrayInput `pulumi:"testCases"`
}

func (GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigArgs) ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput() GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput {
	return i.ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigArgs) ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput)
}

func (i GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigArgs) ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput() GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigArgs) ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput).ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrInput is an input type that accepts GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigArgs, GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtr and GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput() GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput
	ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput
}

type googleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrType GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigArgs

func GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtr(v *GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigArgs) GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrInput {
	return (*googleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrType)(v)
}

func (*googleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrType) ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput() GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrType) ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput)
}

// The configuration for continuous tests.
type GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput) ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput() GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput) ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput) ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput() GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput) ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig) *GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig {
		return &v
	}).(GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput)
}

// Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day.
func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput) EnableContinuousRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig) *bool { return v.EnableContinuousRun }).(pulumi.BoolPtrOutput)
}

// Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false.
func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput) EnablePredeploymentRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig) *bool { return v.EnablePredeploymentRun }).(pulumi.BoolPtrOutput)
}

// A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`
func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput) TestCases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig) []string { return v.TestCases }).(pulumi.StringArrayOutput)
}

type GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput) ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput() GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput) ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput) Elem() GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig) GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig
		return ret
	}).(GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput)
}

// Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day.
func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput) EnableContinuousRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableContinuousRun
	}).(pulumi.BoolPtrOutput)
}

// Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false.
func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput) EnablePredeploymentRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePredeploymentRun
	}).(pulumi.BoolPtrOutput)
}

// A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`
func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput) TestCases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig) []string {
		if v == nil {
			return nil
		}
		return v.TestCases
	}).(pulumi.StringArrayOutput)
}

// The configuration for continuous tests.
type GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponse struct {
	// Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day.
	EnableContinuousRun bool `pulumi:"enableContinuousRun"`
	// Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false.
	EnablePredeploymentRun bool `pulumi:"enablePredeploymentRun"`
	// A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`
	TestCases []string `pulumi:"testCases"`
}

// The configuration for continuous tests.
type GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponseOutput) ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponseOutput() GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponseOutput) ToGoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponseOutput {
	return o
}

// Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day.
func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponseOutput) EnableContinuousRun() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponse) bool { return v.EnableContinuousRun }).(pulumi.BoolOutput)
}

// Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false.
func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponseOutput) EnablePredeploymentRun() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponse) bool {
		return v.EnablePredeploymentRun
	}).(pulumi.BoolOutput)
}

// A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`
func (o GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponseOutput) TestCases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponse) []string { return v.TestCases }).(pulumi.StringArrayOutput)
}

// Configuration for the version.
type GoogleCloudDialogflowCxV3EnvironmentVersionConfig struct {
	// Format: projects//locations//agents//flows//versions/.
	Version string `pulumi:"version"`
}

// GoogleCloudDialogflowCxV3EnvironmentVersionConfigInput is an input type that accepts GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs and GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EnvironmentVersionConfigInput` via:
//
//	GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs{...}
type GoogleCloudDialogflowCxV3EnvironmentVersionConfigInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput() GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput
	ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput
}

// Configuration for the version.
type GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs struct {
	// Format: projects//locations//agents//flows//versions/.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentVersionConfig)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput() GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput {
	return i.ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput)
}

// GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayInput is an input type that accepts GoogleCloudDialogflowCxV3EnvironmentVersionConfigArray and GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayInput` via:
//
//	GoogleCloudDialogflowCxV3EnvironmentVersionConfigArray{ GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs{...} }
type GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput() GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput
	ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput
}

type GoogleCloudDialogflowCxV3EnvironmentVersionConfigArray []GoogleCloudDialogflowCxV3EnvironmentVersionConfigInput

func (GoogleCloudDialogflowCxV3EnvironmentVersionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EnvironmentVersionConfig)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EnvironmentVersionConfigArray) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput() GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EnvironmentVersionConfigArray) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput)
}

// Configuration for the version.
type GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentVersionConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput() GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput {
	return o
}

// Format: projects//locations//agents//flows//versions/.
func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EnvironmentVersionConfig) string { return v.Version }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EnvironmentVersionConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput() GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3EnvironmentVersionConfig {
		return vs[0].([]GoogleCloudDialogflowCxV3EnvironmentVersionConfig)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput)
}

// Configuration for the version.
type GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponse struct {
	// Format: projects//locations//agents//flows//versions/.
	Version string `pulumi:"version"`
}

// Configuration for the version.
type GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseOutput) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseOutput() GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseOutput) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseOutput {
	return o
}

// Format: projects//locations//agents//flows//versions/.
func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponse) string { return v.Version }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseArrayOutput) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseArrayOutput() GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseArrayOutput) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseOutput)
}

// Configuration for webhooks.
type GoogleCloudDialogflowCxV3EnvironmentWebhookConfig struct {
	// The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`.
	WebhookOverrides []GoogleCloudDialogflowCxV3Webhook `pulumi:"webhookOverrides"`
}

// GoogleCloudDialogflowCxV3EnvironmentWebhookConfigInput is an input type that accepts GoogleCloudDialogflowCxV3EnvironmentWebhookConfigArgs and GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EnvironmentWebhookConfigInput` via:
//
//	GoogleCloudDialogflowCxV3EnvironmentWebhookConfigArgs{...}
type GoogleCloudDialogflowCxV3EnvironmentWebhookConfigInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput() GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput
	ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput
}

// Configuration for webhooks.
type GoogleCloudDialogflowCxV3EnvironmentWebhookConfigArgs struct {
	// The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`.
	WebhookOverrides GoogleCloudDialogflowCxV3WebhookArrayInput `pulumi:"webhookOverrides"`
}

func (GoogleCloudDialogflowCxV3EnvironmentWebhookConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentWebhookConfig)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EnvironmentWebhookConfigArgs) ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput() GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput {
	return i.ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EnvironmentWebhookConfigArgs) ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput)
}

func (i GoogleCloudDialogflowCxV3EnvironmentWebhookConfigArgs) ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput() GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EnvironmentWebhookConfigArgs) ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput).ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrInput is an input type that accepts GoogleCloudDialogflowCxV3EnvironmentWebhookConfigArgs, GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtr and GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3EnvironmentWebhookConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput() GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput
	ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput
}

type googleCloudDialogflowCxV3EnvironmentWebhookConfigPtrType GoogleCloudDialogflowCxV3EnvironmentWebhookConfigArgs

func GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtr(v *GoogleCloudDialogflowCxV3EnvironmentWebhookConfigArgs) GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrInput {
	return (*googleCloudDialogflowCxV3EnvironmentWebhookConfigPtrType)(v)
}

func (*googleCloudDialogflowCxV3EnvironmentWebhookConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3EnvironmentWebhookConfig)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3EnvironmentWebhookConfigPtrType) ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput() GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3EnvironmentWebhookConfigPtrType) ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput)
}

// Configuration for webhooks.
type GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentWebhookConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput) ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput() GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput) ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput) ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput() GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput) ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3EnvironmentWebhookConfig) *GoogleCloudDialogflowCxV3EnvironmentWebhookConfig {
		return &v
	}).(GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput)
}

// The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`.
func (o GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput) WebhookOverrides() GoogleCloudDialogflowCxV3WebhookArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EnvironmentWebhookConfig) []GoogleCloudDialogflowCxV3Webhook {
		return v.WebhookOverrides
	}).(GoogleCloudDialogflowCxV3WebhookArrayOutput)
}

type GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3EnvironmentWebhookConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput) ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput() GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput) ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput) Elem() GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3EnvironmentWebhookConfig) GoogleCloudDialogflowCxV3EnvironmentWebhookConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3EnvironmentWebhookConfig
		return ret
	}).(GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput)
}

// The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`.
func (o GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput) WebhookOverrides() GoogleCloudDialogflowCxV3WebhookArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3EnvironmentWebhookConfig) []GoogleCloudDialogflowCxV3Webhook {
		if v == nil {
			return nil
		}
		return v.WebhookOverrides
	}).(GoogleCloudDialogflowCxV3WebhookArrayOutput)
}

// Configuration for webhooks.
type GoogleCloudDialogflowCxV3EnvironmentWebhookConfigResponse struct {
	// The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`.
	WebhookOverrides []GoogleCloudDialogflowCxV3WebhookResponse `pulumi:"webhookOverrides"`
}

// Configuration for webhooks.
type GoogleCloudDialogflowCxV3EnvironmentWebhookConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EnvironmentWebhookConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentWebhookConfigResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EnvironmentWebhookConfigResponseOutput) ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigResponseOutput() GoogleCloudDialogflowCxV3EnvironmentWebhookConfigResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentWebhookConfigResponseOutput) ToGoogleCloudDialogflowCxV3EnvironmentWebhookConfigResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentWebhookConfigResponseOutput {
	return o
}

// The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`.
func (o GoogleCloudDialogflowCxV3EnvironmentWebhookConfigResponseOutput) WebhookOverrides() GoogleCloudDialogflowCxV3WebhookResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EnvironmentWebhookConfigResponse) []GoogleCloudDialogflowCxV3WebhookResponse {
		return v.WebhookOverrides
	}).(GoogleCloudDialogflowCxV3WebhookResponseArrayOutput)
}

// An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3EventHandler struct {
	// The name of the event to handle.
	Event string `pulumi:"event"`
	// The target flow to transition to. Format: `projects//locations//agents//flows/`.
	TargetFlow *string `pulumi:"targetFlow"`
	// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
	TargetPage *string `pulumi:"targetPage"`
	// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
	TriggerFulfillment *GoogleCloudDialogflowCxV3Fulfillment `pulumi:"triggerFulfillment"`
}

// GoogleCloudDialogflowCxV3EventHandlerInput is an input type that accepts GoogleCloudDialogflowCxV3EventHandlerArgs and GoogleCloudDialogflowCxV3EventHandlerOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EventHandlerInput` via:
//
//	GoogleCloudDialogflowCxV3EventHandlerArgs{...}
type GoogleCloudDialogflowCxV3EventHandlerInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EventHandlerOutput() GoogleCloudDialogflowCxV3EventHandlerOutput
	ToGoogleCloudDialogflowCxV3EventHandlerOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EventHandlerOutput
}

// An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3EventHandlerArgs struct {
	// The name of the event to handle.
	Event pulumi.StringInput `pulumi:"event"`
	// The target flow to transition to. Format: `projects//locations//agents//flows/`.
	TargetFlow pulumi.StringPtrInput `pulumi:"targetFlow"`
	// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
	TargetPage pulumi.StringPtrInput `pulumi:"targetPage"`
	// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
	TriggerFulfillment GoogleCloudDialogflowCxV3FulfillmentPtrInput `pulumi:"triggerFulfillment"`
}

func (GoogleCloudDialogflowCxV3EventHandlerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EventHandler)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EventHandlerArgs) ToGoogleCloudDialogflowCxV3EventHandlerOutput() GoogleCloudDialogflowCxV3EventHandlerOutput {
	return i.ToGoogleCloudDialogflowCxV3EventHandlerOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EventHandlerArgs) ToGoogleCloudDialogflowCxV3EventHandlerOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventHandlerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EventHandlerOutput)
}

// GoogleCloudDialogflowCxV3EventHandlerArrayInput is an input type that accepts GoogleCloudDialogflowCxV3EventHandlerArray and GoogleCloudDialogflowCxV3EventHandlerArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EventHandlerArrayInput` via:
//
//	GoogleCloudDialogflowCxV3EventHandlerArray{ GoogleCloudDialogflowCxV3EventHandlerArgs{...} }
type GoogleCloudDialogflowCxV3EventHandlerArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EventHandlerArrayOutput() GoogleCloudDialogflowCxV3EventHandlerArrayOutput
	ToGoogleCloudDialogflowCxV3EventHandlerArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EventHandlerArrayOutput
}

type GoogleCloudDialogflowCxV3EventHandlerArray []GoogleCloudDialogflowCxV3EventHandlerInput

func (GoogleCloudDialogflowCxV3EventHandlerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EventHandler)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EventHandlerArray) ToGoogleCloudDialogflowCxV3EventHandlerArrayOutput() GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3EventHandlerArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EventHandlerArray) ToGoogleCloudDialogflowCxV3EventHandlerArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EventHandlerArrayOutput)
}

// An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3EventHandlerOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EventHandlerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EventHandler)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EventHandlerOutput) ToGoogleCloudDialogflowCxV3EventHandlerOutput() GoogleCloudDialogflowCxV3EventHandlerOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventHandlerOutput) ToGoogleCloudDialogflowCxV3EventHandlerOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventHandlerOutput {
	return o
}

// The name of the event to handle.
func (o GoogleCloudDialogflowCxV3EventHandlerOutput) Event() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventHandler) string { return v.Event }).(pulumi.StringOutput)
}

// The target flow to transition to. Format: `projects//locations//agents//flows/`.
func (o GoogleCloudDialogflowCxV3EventHandlerOutput) TargetFlow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventHandler) *string { return v.TargetFlow }).(pulumi.StringPtrOutput)
}

// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
func (o GoogleCloudDialogflowCxV3EventHandlerOutput) TargetPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventHandler) *string { return v.TargetPage }).(pulumi.StringPtrOutput)
}

// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
func (o GoogleCloudDialogflowCxV3EventHandlerOutput) TriggerFulfillment() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventHandler) *GoogleCloudDialogflowCxV3Fulfillment {
		return v.TriggerFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

type GoogleCloudDialogflowCxV3EventHandlerArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EventHandlerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EventHandler)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EventHandlerArrayOutput) ToGoogleCloudDialogflowCxV3EventHandlerArrayOutput() GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventHandlerArrayOutput) ToGoogleCloudDialogflowCxV3EventHandlerArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventHandlerArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3EventHandlerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3EventHandler {
		return vs[0].([]GoogleCloudDialogflowCxV3EventHandler)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3EventHandlerOutput)
}

// An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3EventHandlerResponse struct {
	// The name of the event to handle.
	Event string `pulumi:"event"`
	// The unique identifier of this event handler.
	Name string `pulumi:"name"`
	// The target flow to transition to. Format: `projects//locations//agents//flows/`.
	TargetFlow string `pulumi:"targetFlow"`
	// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
	TargetPage string `pulumi:"targetPage"`
	// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
	TriggerFulfillment GoogleCloudDialogflowCxV3FulfillmentResponse `pulumi:"triggerFulfillment"`
}

// An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3EventHandlerResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EventHandlerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EventHandlerResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EventHandlerResponseOutput) ToGoogleCloudDialogflowCxV3EventHandlerResponseOutput() GoogleCloudDialogflowCxV3EventHandlerResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventHandlerResponseOutput) ToGoogleCloudDialogflowCxV3EventHandlerResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventHandlerResponseOutput {
	return o
}

// The name of the event to handle.
func (o GoogleCloudDialogflowCxV3EventHandlerResponseOutput) Event() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventHandlerResponse) string { return v.Event }).(pulumi.StringOutput)
}

// The unique identifier of this event handler.
func (o GoogleCloudDialogflowCxV3EventHandlerResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventHandlerResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The target flow to transition to. Format: `projects//locations//agents//flows/`.
func (o GoogleCloudDialogflowCxV3EventHandlerResponseOutput) TargetFlow() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventHandlerResponse) string { return v.TargetFlow }).(pulumi.StringOutput)
}

// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
func (o GoogleCloudDialogflowCxV3EventHandlerResponseOutput) TargetPage() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventHandlerResponse) string { return v.TargetPage }).(pulumi.StringOutput)
}

// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
func (o GoogleCloudDialogflowCxV3EventHandlerResponseOutput) TriggerFulfillment() GoogleCloudDialogflowCxV3FulfillmentResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventHandlerResponse) GoogleCloudDialogflowCxV3FulfillmentResponse {
		return v.TriggerFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentResponseOutput)
}

type GoogleCloudDialogflowCxV3EventHandlerResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EventHandlerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EventHandlerResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EventHandlerResponseArrayOutput) ToGoogleCloudDialogflowCxV3EventHandlerResponseArrayOutput() GoogleCloudDialogflowCxV3EventHandlerResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventHandlerResponseArrayOutput) ToGoogleCloudDialogflowCxV3EventHandlerResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventHandlerResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventHandlerResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3EventHandlerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3EventHandlerResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3EventHandlerResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3EventHandlerResponseOutput)
}

// Represents the event to trigger.
type GoogleCloudDialogflowCxV3EventInput struct {
	// Name of the event.
	Event *string `pulumi:"event"`
}

// GoogleCloudDialogflowCxV3EventInputInput is an input type that accepts GoogleCloudDialogflowCxV3EventInputArgs and GoogleCloudDialogflowCxV3EventInputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EventInputInput` via:
//
//	GoogleCloudDialogflowCxV3EventInputArgs{...}
type GoogleCloudDialogflowCxV3EventInputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EventInputOutput() GoogleCloudDialogflowCxV3EventInputOutput
	ToGoogleCloudDialogflowCxV3EventInputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EventInputOutput
}

// Represents the event to trigger.
type GoogleCloudDialogflowCxV3EventInputArgs struct {
	// Name of the event.
	Event pulumi.StringPtrInput `pulumi:"event"`
}

func (GoogleCloudDialogflowCxV3EventInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EventInput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EventInputArgs) ToGoogleCloudDialogflowCxV3EventInputOutput() GoogleCloudDialogflowCxV3EventInputOutput {
	return i.ToGoogleCloudDialogflowCxV3EventInputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EventInputArgs) ToGoogleCloudDialogflowCxV3EventInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EventInputOutput)
}

func (i GoogleCloudDialogflowCxV3EventInputArgs) ToGoogleCloudDialogflowCxV3EventInputPtrOutput() GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EventInputArgs) ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EventInputOutput).ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3EventInputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3EventInputArgs, GoogleCloudDialogflowCxV3EventInputPtr and GoogleCloudDialogflowCxV3EventInputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EventInputPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3EventInputArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3EventInputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EventInputPtrOutput() GoogleCloudDialogflowCxV3EventInputPtrOutput
	ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EventInputPtrOutput
}

type googleCloudDialogflowCxV3EventInputPtrType GoogleCloudDialogflowCxV3EventInputArgs

func GoogleCloudDialogflowCxV3EventInputPtr(v *GoogleCloudDialogflowCxV3EventInputArgs) GoogleCloudDialogflowCxV3EventInputPtrInput {
	return (*googleCloudDialogflowCxV3EventInputPtrType)(v)
}

func (*googleCloudDialogflowCxV3EventInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3EventInput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3EventInputPtrType) ToGoogleCloudDialogflowCxV3EventInputPtrOutput() GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3EventInputPtrType) ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EventInputPtrOutput)
}

// Represents the event to trigger.
type GoogleCloudDialogflowCxV3EventInputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EventInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EventInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EventInputOutput) ToGoogleCloudDialogflowCxV3EventInputOutput() GoogleCloudDialogflowCxV3EventInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventInputOutput) ToGoogleCloudDialogflowCxV3EventInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventInputOutput) ToGoogleCloudDialogflowCxV3EventInputPtrOutput() GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3EventInputOutput) ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3EventInput) *GoogleCloudDialogflowCxV3EventInput {
		return &v
	}).(GoogleCloudDialogflowCxV3EventInputPtrOutput)
}

// Name of the event.
func (o GoogleCloudDialogflowCxV3EventInputOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventInput) *string { return v.Event }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3EventInputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EventInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3EventInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EventInputPtrOutput) ToGoogleCloudDialogflowCxV3EventInputPtrOutput() GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventInputPtrOutput) ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventInputPtrOutput) Elem() GoogleCloudDialogflowCxV3EventInputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3EventInput) GoogleCloudDialogflowCxV3EventInput {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3EventInput
		return ret
	}).(GoogleCloudDialogflowCxV3EventInputOutput)
}

// Name of the event.
func (o GoogleCloudDialogflowCxV3EventInputPtrOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3EventInput) *string {
		if v == nil {
			return nil
		}
		return v.Event
	}).(pulumi.StringPtrOutput)
}

// Represents the event to trigger.
type GoogleCloudDialogflowCxV3EventInputResponse struct {
	// Name of the event.
	Event string `pulumi:"event"`
}

// Represents the event to trigger.
type GoogleCloudDialogflowCxV3EventInputResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EventInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EventInputResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EventInputResponseOutput) ToGoogleCloudDialogflowCxV3EventInputResponseOutput() GoogleCloudDialogflowCxV3EventInputResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventInputResponseOutput) ToGoogleCloudDialogflowCxV3EventInputResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventInputResponseOutput {
	return o
}

// Name of the event.
func (o GoogleCloudDialogflowCxV3EventInputResponseOutput) Event() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventInputResponse) string { return v.Event }).(pulumi.StringOutput)
}

// Definition of the experiment.
type GoogleCloudDialogflowCxV3ExperimentDefinition struct {
	// The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. "query_input.language_code=en" See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	Condition *string `pulumi:"condition"`
	// The flow versions as the variants of this experiment.
	VersionVariants *GoogleCloudDialogflowCxV3VersionVariants `pulumi:"versionVariants"`
}

// GoogleCloudDialogflowCxV3ExperimentDefinitionInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentDefinitionArgs and GoogleCloudDialogflowCxV3ExperimentDefinitionOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentDefinitionInput` via:
//
//	GoogleCloudDialogflowCxV3ExperimentDefinitionArgs{...}
type GoogleCloudDialogflowCxV3ExperimentDefinitionInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentDefinitionOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionOutput
	ToGoogleCloudDialogflowCxV3ExperimentDefinitionOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionOutput
}

// Definition of the experiment.
type GoogleCloudDialogflowCxV3ExperimentDefinitionArgs struct {
	// The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. "query_input.language_code=en" See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The flow versions as the variants of this experiment.
	VersionVariants GoogleCloudDialogflowCxV3VersionVariantsPtrInput `pulumi:"versionVariants"`
}

func (GoogleCloudDialogflowCxV3ExperimentDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentDefinition)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ExperimentDefinitionArgs) ToGoogleCloudDialogflowCxV3ExperimentDefinitionOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentDefinitionOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentDefinitionArgs) ToGoogleCloudDialogflowCxV3ExperimentDefinitionOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentDefinitionOutput)
}

func (i GoogleCloudDialogflowCxV3ExperimentDefinitionArgs) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentDefinitionArgs) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentDefinitionOutput).ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ExperimentDefinitionPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentDefinitionArgs, GoogleCloudDialogflowCxV3ExperimentDefinitionPtr and GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentDefinitionPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3ExperimentDefinitionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3ExperimentDefinitionPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput
	ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput
}

type googleCloudDialogflowCxV3ExperimentDefinitionPtrType GoogleCloudDialogflowCxV3ExperimentDefinitionArgs

func GoogleCloudDialogflowCxV3ExperimentDefinitionPtr(v *GoogleCloudDialogflowCxV3ExperimentDefinitionArgs) GoogleCloudDialogflowCxV3ExperimentDefinitionPtrInput {
	return (*googleCloudDialogflowCxV3ExperimentDefinitionPtrType)(v)
}

func (*googleCloudDialogflowCxV3ExperimentDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ExperimentDefinition)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ExperimentDefinitionPtrType) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ExperimentDefinitionPtrType) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput)
}

// Definition of the experiment.
type GoogleCloudDialogflowCxV3ExperimentDefinitionOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentDefinition)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionOutput) ToGoogleCloudDialogflowCxV3ExperimentDefinitionOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionOutput) ToGoogleCloudDialogflowCxV3ExperimentDefinitionOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionOutput) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionOutput) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3ExperimentDefinition) *GoogleCloudDialogflowCxV3ExperimentDefinition {
		return &v
	}).(GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput)
}

// The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. "query_input.language_code=en" See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
func (o GoogleCloudDialogflowCxV3ExperimentDefinitionOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentDefinition) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The flow versions as the variants of this experiment.
func (o GoogleCloudDialogflowCxV3ExperimentDefinitionOutput) VersionVariants() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentDefinition) *GoogleCloudDialogflowCxV3VersionVariants {
		return v.VersionVariants
	}).(GoogleCloudDialogflowCxV3VersionVariantsPtrOutput)
}

type GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ExperimentDefinition)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput) Elem() GoogleCloudDialogflowCxV3ExperimentDefinitionOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentDefinition) GoogleCloudDialogflowCxV3ExperimentDefinition {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3ExperimentDefinition
		return ret
	}).(GoogleCloudDialogflowCxV3ExperimentDefinitionOutput)
}

// The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. "query_input.language_code=en" See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
func (o GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

// The flow versions as the variants of this experiment.
func (o GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput) VersionVariants() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentDefinition) *GoogleCloudDialogflowCxV3VersionVariants {
		if v == nil {
			return nil
		}
		return v.VersionVariants
	}).(GoogleCloudDialogflowCxV3VersionVariantsPtrOutput)
}

// Definition of the experiment.
type GoogleCloudDialogflowCxV3ExperimentDefinitionResponse struct {
	// The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. "query_input.language_code=en" See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	Condition string `pulumi:"condition"`
	// The flow versions as the variants of this experiment.
	VersionVariants GoogleCloudDialogflowCxV3VersionVariantsResponse `pulumi:"versionVariants"`
}

// Definition of the experiment.
type GoogleCloudDialogflowCxV3ExperimentDefinitionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentDefinitionResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionResponseOutput) ToGoogleCloudDialogflowCxV3ExperimentDefinitionResponseOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionResponseOutput) ToGoogleCloudDialogflowCxV3ExperimentDefinitionResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionResponseOutput {
	return o
}

// The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. "query_input.language_code=en" See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
func (o GoogleCloudDialogflowCxV3ExperimentDefinitionResponseOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentDefinitionResponse) string { return v.Condition }).(pulumi.StringOutput)
}

// The flow versions as the variants of this experiment.
func (o GoogleCloudDialogflowCxV3ExperimentDefinitionResponseOutput) VersionVariants() GoogleCloudDialogflowCxV3VersionVariantsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentDefinitionResponse) GoogleCloudDialogflowCxV3VersionVariantsResponse {
		return v.VersionVariants
	}).(GoogleCloudDialogflowCxV3VersionVariantsResponseOutput)
}

// The inference result which includes an objective metric to optimize and the confidence interval.
type GoogleCloudDialogflowCxV3ExperimentResult struct {
	// The last time the experiment's stats data was updated. Will have default value if stats have never been computed for this experiment.
	LastUpdateTime *string `pulumi:"lastUpdateTime"`
	// Version variants and metrics.
	VersionMetrics []GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics `pulumi:"versionMetrics"`
}

// GoogleCloudDialogflowCxV3ExperimentResultInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultArgs and GoogleCloudDialogflowCxV3ExperimentResultOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultInput` via:
//
//	GoogleCloudDialogflowCxV3ExperimentResultArgs{...}
type GoogleCloudDialogflowCxV3ExperimentResultInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultOutput() GoogleCloudDialogflowCxV3ExperimentResultOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultOutput
}

// The inference result which includes an objective metric to optimize and the confidence interval.
type GoogleCloudDialogflowCxV3ExperimentResultArgs struct {
	// The last time the experiment's stats data was updated. Will have default value if stats have never been computed for this experiment.
	LastUpdateTime pulumi.StringPtrInput `pulumi:"lastUpdateTime"`
	// Version variants and metrics.
	VersionMetrics GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayInput `pulumi:"versionMetrics"`
}

func (GoogleCloudDialogflowCxV3ExperimentResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResult)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ExperimentResultArgs) ToGoogleCloudDialogflowCxV3ExperimentResultOutput() GoogleCloudDialogflowCxV3ExperimentResultOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultArgs) ToGoogleCloudDialogflowCxV3ExperimentResultOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultOutput)
}

func (i GoogleCloudDialogflowCxV3ExperimentResultArgs) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultArgs) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultOutput).ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ExperimentResultPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultArgs, GoogleCloudDialogflowCxV3ExperimentResultPtr and GoogleCloudDialogflowCxV3ExperimentResultPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3ExperimentResultArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3ExperimentResultPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultPtrOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultPtrOutput
}

type googleCloudDialogflowCxV3ExperimentResultPtrType GoogleCloudDialogflowCxV3ExperimentResultArgs

func GoogleCloudDialogflowCxV3ExperimentResultPtr(v *GoogleCloudDialogflowCxV3ExperimentResultArgs) GoogleCloudDialogflowCxV3ExperimentResultPtrInput {
	return (*googleCloudDialogflowCxV3ExperimentResultPtrType)(v)
}

func (*googleCloudDialogflowCxV3ExperimentResultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ExperimentResult)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ExperimentResultPtrType) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ExperimentResultPtrType) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultPtrOutput)
}

// The inference result which includes an objective metric to optimize and the confidence interval.
type GoogleCloudDialogflowCxV3ExperimentResultOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResult)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultOutput) ToGoogleCloudDialogflowCxV3ExperimentResultOutput() GoogleCloudDialogflowCxV3ExperimentResultOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultOutput) ToGoogleCloudDialogflowCxV3ExperimentResultOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultOutput) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ExperimentResultOutput) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3ExperimentResult) *GoogleCloudDialogflowCxV3ExperimentResult {
		return &v
	}).(GoogleCloudDialogflowCxV3ExperimentResultPtrOutput)
}

// The last time the experiment's stats data was updated. Will have default value if stats have never been computed for this experiment.
func (o GoogleCloudDialogflowCxV3ExperimentResultOutput) LastUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResult) *string { return v.LastUpdateTime }).(pulumi.StringPtrOutput)
}

// Version variants and metrics.
func (o GoogleCloudDialogflowCxV3ExperimentResultOutput) VersionMetrics() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResult) []GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics {
		return v.VersionMetrics
	}).(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput)
}

type GoogleCloudDialogflowCxV3ExperimentResultPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ExperimentResult)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultPtrOutput) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultPtrOutput) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultPtrOutput) Elem() GoogleCloudDialogflowCxV3ExperimentResultOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResult) GoogleCloudDialogflowCxV3ExperimentResult {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3ExperimentResult
		return ret
	}).(GoogleCloudDialogflowCxV3ExperimentResultOutput)
}

// The last time the experiment's stats data was updated. Will have default value if stats have never been computed for this experiment.
func (o GoogleCloudDialogflowCxV3ExperimentResultPtrOutput) LastUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResult) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdateTime
	}).(pulumi.StringPtrOutput)
}

// Version variants and metrics.
func (o GoogleCloudDialogflowCxV3ExperimentResultPtrOutput) VersionMetrics() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResult) []GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics {
		if v == nil {
			return nil
		}
		return v.VersionMetrics
	}).(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput)
}

// A confidence interval is a range of possible values for the experiment objective you are trying to measure.
type GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval struct {
	// The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval.
	ConfidenceLevel *float64 `pulumi:"confidenceLevel"`
	// Lower bound of the interval.
	LowerBound *float64 `pulumi:"lowerBound"`
	// The percent change between an experiment metric's value and the value for its control.
	Ratio *float64 `pulumi:"ratio"`
	// Upper bound of the interval.
	UpperBound *float64 `pulumi:"upperBound"`
}

// GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs and GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalInput` via:
//
//	GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs{...}
type GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput
}

// A confidence interval is a range of possible values for the experiment objective you are trying to measure.
type GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs struct {
	// The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval.
	ConfidenceLevel pulumi.Float64PtrInput `pulumi:"confidenceLevel"`
	// Lower bound of the interval.
	LowerBound pulumi.Float64PtrInput `pulumi:"lowerBound"`
	// The percent change between an experiment metric's value and the value for its control.
	Ratio pulumi.Float64PtrInput `pulumi:"ratio"`
	// Upper bound of the interval.
	UpperBound pulumi.Float64PtrInput `pulumi:"upperBound"`
}

func (GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput)
}

func (i GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput).ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs, GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtr and GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput
}

type googleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrType GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs

func GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtr(v *GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrInput {
	return (*googleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrType)(v)
}

func (*googleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrType) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrType) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput)
}

// A confidence interval is a range of possible values for the experiment objective you are trying to measure.
type GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval {
		return &v
	}).(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput)
}

// The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) ConfidenceLevel() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 { return v.ConfidenceLevel }).(pulumi.Float64PtrOutput)
}

// Lower bound of the interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) LowerBound() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 { return v.LowerBound }).(pulumi.Float64PtrOutput)
}

// The percent change between an experiment metric's value and the value for its control.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) Ratio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 { return v.Ratio }).(pulumi.Float64PtrOutput)
}

// Upper bound of the interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) UpperBound() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 { return v.UpperBound }).(pulumi.Float64PtrOutput)
}

type GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) Elem() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval
		return ret
	}).(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput)
}

// The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) ConfidenceLevel() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 {
		if v == nil {
			return nil
		}
		return v.ConfidenceLevel
	}).(pulumi.Float64PtrOutput)
}

// Lower bound of the interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) LowerBound() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 {
		if v == nil {
			return nil
		}
		return v.LowerBound
	}).(pulumi.Float64PtrOutput)
}

// The percent change between an experiment metric's value and the value for its control.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) Ratio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 {
		if v == nil {
			return nil
		}
		return v.Ratio
	}).(pulumi.Float64PtrOutput)
}

// Upper bound of the interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) UpperBound() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 {
		if v == nil {
			return nil
		}
		return v.UpperBound
	}).(pulumi.Float64PtrOutput)
}

// A confidence interval is a range of possible values for the experiment objective you are trying to measure.
type GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponse struct {
	// The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval.
	ConfidenceLevel float64 `pulumi:"confidenceLevel"`
	// Lower bound of the interval.
	LowerBound float64 `pulumi:"lowerBound"`
	// The percent change between an experiment metric's value and the value for its control.
	Ratio float64 `pulumi:"ratio"`
	// Upper bound of the interval.
	UpperBound float64 `pulumi:"upperBound"`
}

// A confidence interval is a range of possible values for the experiment objective you are trying to measure.
type GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutput) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutput) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutput {
	return o
}

// The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutput) ConfidenceLevel() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponse) float64 {
		return v.ConfidenceLevel
	}).(pulumi.Float64Output)
}

// Lower bound of the interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutput) LowerBound() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponse) float64 {
		return v.LowerBound
	}).(pulumi.Float64Output)
}

// The percent change between an experiment metric's value and the value for its control.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutput) Ratio() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponse) float64 { return v.Ratio }).(pulumi.Float64Output)
}

// Upper bound of the interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutput) UpperBound() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponse) float64 {
		return v.UpperBound
	}).(pulumi.Float64Output)
}

// Metric and corresponding confidence intervals.
type GoogleCloudDialogflowCxV3ExperimentResultMetric struct {
	// The probability that the treatment is better than all other treatments in the experiment
	ConfidenceInterval *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval `pulumi:"confidenceInterval"`
	// Count value of a metric.
	Count *float64 `pulumi:"count"`
	// Count-based metric type. Only one of type or count_type is specified in each Metric.
	CountType *GoogleCloudDialogflowCxV3ExperimentResultMetricCountType `pulumi:"countType"`
	// Ratio value of a metric.
	Ratio *float64 `pulumi:"ratio"`
	// Ratio-based metric type. Only one of type or count_type is specified in each Metric.
	Type *GoogleCloudDialogflowCxV3ExperimentResultMetricType `pulumi:"type"`
}

// GoogleCloudDialogflowCxV3ExperimentResultMetricInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultMetricArgs and GoogleCloudDialogflowCxV3ExperimentResultMetricOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultMetricInput` via:
//
//	GoogleCloudDialogflowCxV3ExperimentResultMetricArgs{...}
type GoogleCloudDialogflowCxV3ExperimentResultMetricInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultMetricOutput() GoogleCloudDialogflowCxV3ExperimentResultMetricOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultMetricOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultMetricOutput
}

// Metric and corresponding confidence intervals.
type GoogleCloudDialogflowCxV3ExperimentResultMetricArgs struct {
	// The probability that the treatment is better than all other treatments in the experiment
	ConfidenceInterval GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrInput `pulumi:"confidenceInterval"`
	// Count value of a metric.
	Count pulumi.Float64PtrInput `pulumi:"count"`
	// Count-based metric type. Only one of type or count_type is specified in each Metric.
	CountType GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypePtrInput `pulumi:"countType"`
	// Ratio value of a metric.
	Ratio pulumi.Float64PtrInput `pulumi:"ratio"`
	// Ratio-based metric type. Only one of type or count_type is specified in each Metric.
	Type GoogleCloudDialogflowCxV3ExperimentResultMetricTypePtrInput `pulumi:"type"`
}

func (GoogleCloudDialogflowCxV3ExperimentResultMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultMetric)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ExperimentResultMetricArgs) ToGoogleCloudDialogflowCxV3ExperimentResultMetricOutput() GoogleCloudDialogflowCxV3ExperimentResultMetricOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultMetricOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultMetricArgs) ToGoogleCloudDialogflowCxV3ExperimentResultMetricOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultMetricOutput)
}

// GoogleCloudDialogflowCxV3ExperimentResultMetricArrayInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultMetricArray and GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultMetricArrayInput` via:
//
//	GoogleCloudDialogflowCxV3ExperimentResultMetricArray{ GoogleCloudDialogflowCxV3ExperimentResultMetricArgs{...} }
type GoogleCloudDialogflowCxV3ExperimentResultMetricArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput() GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput
}

type GoogleCloudDialogflowCxV3ExperimentResultMetricArray []GoogleCloudDialogflowCxV3ExperimentResultMetricInput

func (GoogleCloudDialogflowCxV3ExperimentResultMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ExperimentResultMetric)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ExperimentResultMetricArray) ToGoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput() GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultMetricArray) ToGoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput)
}

// Metric and corresponding confidence intervals.
type GoogleCloudDialogflowCxV3ExperimentResultMetricOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultMetric)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) ToGoogleCloudDialogflowCxV3ExperimentResultMetricOutput() GoogleCloudDialogflowCxV3ExperimentResultMetricOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) ToGoogleCloudDialogflowCxV3ExperimentResultMetricOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultMetricOutput {
	return o
}

// The probability that the treatment is better than all other treatments in the experiment
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) ConfidenceInterval() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetric) *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval {
		return v.ConfidenceInterval
	}).(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput)
}

// Count value of a metric.
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetric) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

// Count-based metric type. Only one of type or count_type is specified in each Metric.
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) CountType() GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetric) *GoogleCloudDialogflowCxV3ExperimentResultMetricCountType {
		return v.CountType
	}).(GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypePtrOutput)
}

// Ratio value of a metric.
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) Ratio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetric) *float64 { return v.Ratio }).(pulumi.Float64PtrOutput)
}

// Ratio-based metric type. Only one of type or count_type is specified in each Metric.
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) Type() GoogleCloudDialogflowCxV3ExperimentResultMetricTypePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetric) *GoogleCloudDialogflowCxV3ExperimentResultMetricType {
		return v.Type
	}).(GoogleCloudDialogflowCxV3ExperimentResultMetricTypePtrOutput)
}

type GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ExperimentResultMetric)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput) ToGoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput() GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput) ToGoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ExperimentResultMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ExperimentResultMetric {
		return vs[0].([]GoogleCloudDialogflowCxV3ExperimentResultMetric)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ExperimentResultMetricOutput)
}

// Metric and corresponding confidence intervals.
type GoogleCloudDialogflowCxV3ExperimentResultMetricResponse struct {
	// The probability that the treatment is better than all other treatments in the experiment
	ConfidenceInterval GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponse `pulumi:"confidenceInterval"`
	// Count value of a metric.
	Count float64 `pulumi:"count"`
	// Count-based metric type. Only one of type or count_type is specified in each Metric.
	CountType string `pulumi:"countType"`
	// Ratio value of a metric.
	Ratio float64 `pulumi:"ratio"`
	// Ratio-based metric type. Only one of type or count_type is specified in each Metric.
	Type string `pulumi:"type"`
}

// Metric and corresponding confidence intervals.
type GoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultMetricResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput) ToGoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput() GoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput) ToGoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput {
	return o
}

// The probability that the treatment is better than all other treatments in the experiment
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput) ConfidenceInterval() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetricResponse) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponse {
		return v.ConfidenceInterval
	}).(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutput)
}

// Count value of a metric.
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput) Count() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetricResponse) float64 { return v.Count }).(pulumi.Float64Output)
}

// Count-based metric type. Only one of type or count_type is specified in each Metric.
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput) CountType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetricResponse) string { return v.CountType }).(pulumi.StringOutput)
}

// Ratio value of a metric.
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput) Ratio() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetricResponse) float64 { return v.Ratio }).(pulumi.Float64Output)
}

// Ratio-based metric type. Only one of type or count_type is specified in each Metric.
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetricResponse) string { return v.Type }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3ExperimentResultMetricResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultMetricResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ExperimentResultMetricResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricResponseArrayOutput) ToGoogleCloudDialogflowCxV3ExperimentResultMetricResponseArrayOutput() GoogleCloudDialogflowCxV3ExperimentResultMetricResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricResponseArrayOutput) ToGoogleCloudDialogflowCxV3ExperimentResultMetricResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultMetricResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ExperimentResultMetricResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3ExperimentResultMetricResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput)
}

// The inference result which includes an objective metric to optimize and the confidence interval.
type GoogleCloudDialogflowCxV3ExperimentResultResponse struct {
	// The last time the experiment's stats data was updated. Will have default value if stats have never been computed for this experiment.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// Version variants and metrics.
	VersionMetrics []GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponse `pulumi:"versionMetrics"`
}

// The inference result which includes an objective metric to optimize and the confidence interval.
type GoogleCloudDialogflowCxV3ExperimentResultResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultResponseOutput) ToGoogleCloudDialogflowCxV3ExperimentResultResponseOutput() GoogleCloudDialogflowCxV3ExperimentResultResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultResponseOutput) ToGoogleCloudDialogflowCxV3ExperimentResultResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultResponseOutput {
	return o
}

// The last time the experiment's stats data was updated. Will have default value if stats have never been computed for this experiment.
func (o GoogleCloudDialogflowCxV3ExperimentResultResponseOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultResponse) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// Version variants and metrics.
func (o GoogleCloudDialogflowCxV3ExperimentResultResponseOutput) VersionMetrics() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultResponse) []GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponse {
		return v.VersionMetrics
	}).(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseArrayOutput)
}

// Version variant and associated metrics.
type GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics struct {
	// The metrics and corresponding confidence intervals in the inference result.
	Metrics []GoogleCloudDialogflowCxV3ExperimentResultMetric `pulumi:"metrics"`
	// Number of sessions that were allocated to this version.
	SessionCount *int `pulumi:"sessionCount"`
	// The name of the flow Version. Format: `projects//locations//agents//flows//versions/`.
	Version *string `pulumi:"version"`
}

// GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs and GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsInput` via:
//
//	GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs{...}
type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput
}

// Version variant and associated metrics.
type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs struct {
	// The metrics and corresponding confidence intervals in the inference result.
	Metrics GoogleCloudDialogflowCxV3ExperimentResultMetricArrayInput `pulumi:"metrics"`
	// Number of sessions that were allocated to this version.
	SessionCount pulumi.IntPtrInput `pulumi:"sessionCount"`
	// The name of the flow Version. Format: `projects//locations//agents//flows//versions/`.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput)
}

// GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArray and GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayInput` via:
//
//	GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArray{ GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs{...} }
type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput
}

type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArray []GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsInput

func (GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArray) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArray) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput)
}

// Version variant and associated metrics.
type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput {
	return o
}

// The metrics and corresponding confidence intervals in the inference result.
func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput) Metrics() GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics) []GoogleCloudDialogflowCxV3ExperimentResultMetric {
		return v.Metrics
	}).(GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput)
}

// Number of sessions that were allocated to this version.
func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput) SessionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics) *int { return v.SessionCount }).(pulumi.IntPtrOutput)
}

// The name of the flow Version. Format: `projects//locations//agents//flows//versions/`.
func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics {
		return vs[0].([]GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput)
}

// Version variant and associated metrics.
type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponse struct {
	// The metrics and corresponding confidence intervals in the inference result.
	Metrics []GoogleCloudDialogflowCxV3ExperimentResultMetricResponse `pulumi:"metrics"`
	// Number of sessions that were allocated to this version.
	SessionCount int `pulumi:"sessionCount"`
	// The name of the flow Version. Format: `projects//locations//agents//flows//versions/`.
	Version string `pulumi:"version"`
}

// Version variant and associated metrics.
type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseOutput) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseOutput() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseOutput) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseOutput {
	return o
}

// The metrics and corresponding confidence intervals in the inference result.
func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseOutput) Metrics() GoogleCloudDialogflowCxV3ExperimentResultMetricResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponse) []GoogleCloudDialogflowCxV3ExperimentResultMetricResponse {
		return v.Metrics
	}).(GoogleCloudDialogflowCxV3ExperimentResultMetricResponseArrayOutput)
}

// Number of sessions that were allocated to this version.
func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseOutput) SessionCount() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponse) int { return v.SessionCount }).(pulumi.IntOutput)
}

// The name of the flow Version. Format: `projects//locations//agents//flows//versions/`.
func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponse) string { return v.Version }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseArrayOutput) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseArrayOutput() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseArrayOutput) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseOutput)
}

// A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.
type GoogleCloudDialogflowCxV3Form struct {
	// Parameters to collect from the user.
	Parameters []GoogleCloudDialogflowCxV3FormParameter `pulumi:"parameters"`
}

// GoogleCloudDialogflowCxV3FormInput is an input type that accepts GoogleCloudDialogflowCxV3FormArgs and GoogleCloudDialogflowCxV3FormOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FormInput` via:
//
//	GoogleCloudDialogflowCxV3FormArgs{...}
type GoogleCloudDialogflowCxV3FormInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FormOutput() GoogleCloudDialogflowCxV3FormOutput
	ToGoogleCloudDialogflowCxV3FormOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FormOutput
}

// A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.
type GoogleCloudDialogflowCxV3FormArgs struct {
	// Parameters to collect from the user.
	Parameters GoogleCloudDialogflowCxV3FormParameterArrayInput `pulumi:"parameters"`
}

func (GoogleCloudDialogflowCxV3FormArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Form)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FormArgs) ToGoogleCloudDialogflowCxV3FormOutput() GoogleCloudDialogflowCxV3FormOutput {
	return i.ToGoogleCloudDialogflowCxV3FormOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FormArgs) ToGoogleCloudDialogflowCxV3FormOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FormOutput)
}

func (i GoogleCloudDialogflowCxV3FormArgs) ToGoogleCloudDialogflowCxV3FormPtrOutput() GoogleCloudDialogflowCxV3FormPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FormArgs) ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FormOutput).ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3FormPtrInput is an input type that accepts GoogleCloudDialogflowCxV3FormArgs, GoogleCloudDialogflowCxV3FormPtr and GoogleCloudDialogflowCxV3FormPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FormPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3FormArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3FormPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FormPtrOutput() GoogleCloudDialogflowCxV3FormPtrOutput
	ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FormPtrOutput
}

type googleCloudDialogflowCxV3FormPtrType GoogleCloudDialogflowCxV3FormArgs

func GoogleCloudDialogflowCxV3FormPtr(v *GoogleCloudDialogflowCxV3FormArgs) GoogleCloudDialogflowCxV3FormPtrInput {
	return (*googleCloudDialogflowCxV3FormPtrType)(v)
}

func (*googleCloudDialogflowCxV3FormPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Form)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3FormPtrType) ToGoogleCloudDialogflowCxV3FormPtrOutput() GoogleCloudDialogflowCxV3FormPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3FormPtrType) ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FormPtrOutput)
}

// A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.
type GoogleCloudDialogflowCxV3FormOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Form)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormOutput) ToGoogleCloudDialogflowCxV3FormOutput() GoogleCloudDialogflowCxV3FormOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormOutput) ToGoogleCloudDialogflowCxV3FormOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormOutput) ToGoogleCloudDialogflowCxV3FormPtrOutput() GoogleCloudDialogflowCxV3FormPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3FormOutput) ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3Form) *GoogleCloudDialogflowCxV3Form {
		return &v
	}).(GoogleCloudDialogflowCxV3FormPtrOutput)
}

// Parameters to collect from the user.
func (o GoogleCloudDialogflowCxV3FormOutput) Parameters() GoogleCloudDialogflowCxV3FormParameterArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Form) []GoogleCloudDialogflowCxV3FormParameter { return v.Parameters }).(GoogleCloudDialogflowCxV3FormParameterArrayOutput)
}

type GoogleCloudDialogflowCxV3FormPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Form)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormPtrOutput) ToGoogleCloudDialogflowCxV3FormPtrOutput() GoogleCloudDialogflowCxV3FormPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormPtrOutput) ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormPtrOutput) Elem() GoogleCloudDialogflowCxV3FormOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Form) GoogleCloudDialogflowCxV3Form {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3Form
		return ret
	}).(GoogleCloudDialogflowCxV3FormOutput)
}

// Parameters to collect from the user.
func (o GoogleCloudDialogflowCxV3FormPtrOutput) Parameters() GoogleCloudDialogflowCxV3FormParameterArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Form) []GoogleCloudDialogflowCxV3FormParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(GoogleCloudDialogflowCxV3FormParameterArrayOutput)
}

// Represents a form parameter.
type GoogleCloudDialogflowCxV3FormParameter struct {
	// Hierarchical advanced settings for this parameter. The settings exposed at the lower level overrides the settings exposed at the higher level.
	AdvancedSettings *GoogleCloudDialogflowCxV3AdvancedSettings `pulumi:"advancedSettings"`
	// The default value of an optional parameter. If the parameter is required, the default value will be ignored.
	DefaultValue interface{} `pulumi:"defaultValue"`
	// The human-readable name of the parameter, unique within the form.
	DisplayName string `pulumi:"displayName"`
	// The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
	EntityType string `pulumi:"entityType"`
	// Defines fill behavior for the parameter.
	FillBehavior GoogleCloudDialogflowCxV3FormParameterFillBehavior `pulumi:"fillBehavior"`
	// Indicates whether the parameter represents a list of values.
	IsList *bool `pulumi:"isList"`
	// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
	Redact *bool `pulumi:"redact"`
	// Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
	Required *bool `pulumi:"required"`
}

// GoogleCloudDialogflowCxV3FormParameterInput is an input type that accepts GoogleCloudDialogflowCxV3FormParameterArgs and GoogleCloudDialogflowCxV3FormParameterOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FormParameterInput` via:
//
//	GoogleCloudDialogflowCxV3FormParameterArgs{...}
type GoogleCloudDialogflowCxV3FormParameterInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FormParameterOutput() GoogleCloudDialogflowCxV3FormParameterOutput
	ToGoogleCloudDialogflowCxV3FormParameterOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FormParameterOutput
}

// Represents a form parameter.
type GoogleCloudDialogflowCxV3FormParameterArgs struct {
	// Hierarchical advanced settings for this parameter. The settings exposed at the lower level overrides the settings exposed at the higher level.
	AdvancedSettings GoogleCloudDialogflowCxV3AdvancedSettingsPtrInput `pulumi:"advancedSettings"`
	// The default value of an optional parameter. If the parameter is required, the default value will be ignored.
	DefaultValue pulumi.Input `pulumi:"defaultValue"`
	// The human-readable name of the parameter, unique within the form.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Defines fill behavior for the parameter.
	FillBehavior GoogleCloudDialogflowCxV3FormParameterFillBehaviorInput `pulumi:"fillBehavior"`
	// Indicates whether the parameter represents a list of values.
	IsList pulumi.BoolPtrInput `pulumi:"isList"`
	// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
	Redact pulumi.BoolPtrInput `pulumi:"redact"`
	// Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
	Required pulumi.BoolPtrInput `pulumi:"required"`
}

func (GoogleCloudDialogflowCxV3FormParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FormParameter)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FormParameterArgs) ToGoogleCloudDialogflowCxV3FormParameterOutput() GoogleCloudDialogflowCxV3FormParameterOutput {
	return i.ToGoogleCloudDialogflowCxV3FormParameterOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FormParameterArgs) ToGoogleCloudDialogflowCxV3FormParameterOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FormParameterOutput)
}

// GoogleCloudDialogflowCxV3FormParameterArrayInput is an input type that accepts GoogleCloudDialogflowCxV3FormParameterArray and GoogleCloudDialogflowCxV3FormParameterArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FormParameterArrayInput` via:
//
//	GoogleCloudDialogflowCxV3FormParameterArray{ GoogleCloudDialogflowCxV3FormParameterArgs{...} }
type GoogleCloudDialogflowCxV3FormParameterArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FormParameterArrayOutput() GoogleCloudDialogflowCxV3FormParameterArrayOutput
	ToGoogleCloudDialogflowCxV3FormParameterArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FormParameterArrayOutput
}

type GoogleCloudDialogflowCxV3FormParameterArray []GoogleCloudDialogflowCxV3FormParameterInput

func (GoogleCloudDialogflowCxV3FormParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FormParameter)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FormParameterArray) ToGoogleCloudDialogflowCxV3FormParameterArrayOutput() GoogleCloudDialogflowCxV3FormParameterArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3FormParameterArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FormParameterArray) ToGoogleCloudDialogflowCxV3FormParameterArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FormParameterArrayOutput)
}

// Represents a form parameter.
type GoogleCloudDialogflowCxV3FormParameterOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FormParameter)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormParameterOutput) ToGoogleCloudDialogflowCxV3FormParameterOutput() GoogleCloudDialogflowCxV3FormParameterOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterOutput) ToGoogleCloudDialogflowCxV3FormParameterOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterOutput {
	return o
}

// Hierarchical advanced settings for this parameter. The settings exposed at the lower level overrides the settings exposed at the higher level.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) AdvancedSettings() GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) *GoogleCloudDialogflowCxV3AdvancedSettings {
		return v.AdvancedSettings
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput)
}

// The default value of an optional parameter. If the parameter is required, the default value will be ignored.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) DefaultValue() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) interface{} { return v.DefaultValue }).(pulumi.AnyOutput)
}

// The human-readable name of the parameter, unique within the form.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) string { return v.EntityType }).(pulumi.StringOutput)
}

// Defines fill behavior for the parameter.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) FillBehavior() GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) GoogleCloudDialogflowCxV3FormParameterFillBehavior {
		return v.FillBehavior
	}).(GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput)
}

// Indicates whether the parameter represents a list of values.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) IsList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) *bool { return v.IsList }).(pulumi.BoolPtrOutput)
}

// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) Redact() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) *bool { return v.Redact }).(pulumi.BoolPtrOutput)
}

// Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

type GoogleCloudDialogflowCxV3FormParameterArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FormParameter)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormParameterArrayOutput) ToGoogleCloudDialogflowCxV3FormParameterArrayOutput() GoogleCloudDialogflowCxV3FormParameterArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterArrayOutput) ToGoogleCloudDialogflowCxV3FormParameterArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FormParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FormParameter {
		return vs[0].([]GoogleCloudDialogflowCxV3FormParameter)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FormParameterOutput)
}

// Configuration for how the filling of a parameter should be handled.
type GoogleCloudDialogflowCxV3FormParameterFillBehavior struct {
	// The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
	InitialPromptFulfillment GoogleCloudDialogflowCxV3Fulfillment `pulumi:"initialPromptFulfillment"`
	// The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.
	RepromptEventHandlers []GoogleCloudDialogflowCxV3EventHandler `pulumi:"repromptEventHandlers"`
}

// GoogleCloudDialogflowCxV3FormParameterFillBehaviorInput is an input type that accepts GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs and GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FormParameterFillBehaviorInput` via:
//
//	GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs{...}
type GoogleCloudDialogflowCxV3FormParameterFillBehaviorInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput() GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput
	ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput
}

// Configuration for how the filling of a parameter should be handled.
type GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs struct {
	// The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
	InitialPromptFulfillment GoogleCloudDialogflowCxV3FulfillmentInput `pulumi:"initialPromptFulfillment"`
	// The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.
	RepromptEventHandlers GoogleCloudDialogflowCxV3EventHandlerArrayInput `pulumi:"repromptEventHandlers"`
}

func (GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FormParameterFillBehavior)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput() GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput {
	return i.ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput)
}

// Configuration for how the filling of a parameter should be handled.
type GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FormParameterFillBehavior)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput() GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput {
	return o
}

// The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput) InitialPromptFulfillment() GoogleCloudDialogflowCxV3FulfillmentOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterFillBehavior) GoogleCloudDialogflowCxV3Fulfillment {
		return v.InitialPromptFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentOutput)
}

// The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.
func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput) RepromptEventHandlers() GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterFillBehavior) []GoogleCloudDialogflowCxV3EventHandler {
		return v.RepromptEventHandlers
	}).(GoogleCloudDialogflowCxV3EventHandlerArrayOutput)
}

// Configuration for how the filling of a parameter should be handled.
type GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponse struct {
	// The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
	InitialPromptFulfillment GoogleCloudDialogflowCxV3FulfillmentResponse `pulumi:"initialPromptFulfillment"`
	// The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.
	RepromptEventHandlers []GoogleCloudDialogflowCxV3EventHandlerResponse `pulumi:"repromptEventHandlers"`
}

// Configuration for how the filling of a parameter should be handled.
type GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponseOutput) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorResponseOutput() GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponseOutput) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponseOutput {
	return o
}

// The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponseOutput) InitialPromptFulfillment() GoogleCloudDialogflowCxV3FulfillmentResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponse) GoogleCloudDialogflowCxV3FulfillmentResponse {
		return v.InitialPromptFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentResponseOutput)
}

// The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.
func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponseOutput) RepromptEventHandlers() GoogleCloudDialogflowCxV3EventHandlerResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponse) []GoogleCloudDialogflowCxV3EventHandlerResponse {
		return v.RepromptEventHandlers
	}).(GoogleCloudDialogflowCxV3EventHandlerResponseArrayOutput)
}

// Represents a form parameter.
type GoogleCloudDialogflowCxV3FormParameterResponse struct {
	// Hierarchical advanced settings for this parameter. The settings exposed at the lower level overrides the settings exposed at the higher level.
	AdvancedSettings GoogleCloudDialogflowCxV3AdvancedSettingsResponse `pulumi:"advancedSettings"`
	// The default value of an optional parameter. If the parameter is required, the default value will be ignored.
	DefaultValue interface{} `pulumi:"defaultValue"`
	// The human-readable name of the parameter, unique within the form.
	DisplayName string `pulumi:"displayName"`
	// The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
	EntityType string `pulumi:"entityType"`
	// Defines fill behavior for the parameter.
	FillBehavior GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponse `pulumi:"fillBehavior"`
	// Indicates whether the parameter represents a list of values.
	IsList bool `pulumi:"isList"`
	// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
	Redact bool `pulumi:"redact"`
	// Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
	Required bool `pulumi:"required"`
}

// Represents a form parameter.
type GoogleCloudDialogflowCxV3FormParameterResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FormParameterResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormParameterResponseOutput) ToGoogleCloudDialogflowCxV3FormParameterResponseOutput() GoogleCloudDialogflowCxV3FormParameterResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterResponseOutput) ToGoogleCloudDialogflowCxV3FormParameterResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterResponseOutput {
	return o
}

// Hierarchical advanced settings for this parameter. The settings exposed at the lower level overrides the settings exposed at the higher level.
func (o GoogleCloudDialogflowCxV3FormParameterResponseOutput) AdvancedSettings() GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterResponse) GoogleCloudDialogflowCxV3AdvancedSettingsResponse {
		return v.AdvancedSettings
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput)
}

// The default value of an optional parameter. If the parameter is required, the default value will be ignored.
func (o GoogleCloudDialogflowCxV3FormParameterResponseOutput) DefaultValue() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterResponse) interface{} { return v.DefaultValue }).(pulumi.AnyOutput)
}

// The human-readable name of the parameter, unique within the form.
func (o GoogleCloudDialogflowCxV3FormParameterResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
func (o GoogleCloudDialogflowCxV3FormParameterResponseOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterResponse) string { return v.EntityType }).(pulumi.StringOutput)
}

// Defines fill behavior for the parameter.
func (o GoogleCloudDialogflowCxV3FormParameterResponseOutput) FillBehavior() GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterResponse) GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponse {
		return v.FillBehavior
	}).(GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponseOutput)
}

// Indicates whether the parameter represents a list of values.
func (o GoogleCloudDialogflowCxV3FormParameterResponseOutput) IsList() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterResponse) bool { return v.IsList }).(pulumi.BoolOutput)
}

// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
func (o GoogleCloudDialogflowCxV3FormParameterResponseOutput) Redact() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterResponse) bool { return v.Redact }).(pulumi.BoolOutput)
}

// Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
func (o GoogleCloudDialogflowCxV3FormParameterResponseOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterResponse) bool { return v.Required }).(pulumi.BoolOutput)
}

type GoogleCloudDialogflowCxV3FormParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FormParameterResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormParameterResponseArrayOutput) ToGoogleCloudDialogflowCxV3FormParameterResponseArrayOutput() GoogleCloudDialogflowCxV3FormParameterResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterResponseArrayOutput) ToGoogleCloudDialogflowCxV3FormParameterResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FormParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FormParameterResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3FormParameterResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FormParameterResponseOutput)
}

// A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.
type GoogleCloudDialogflowCxV3FormResponse struct {
	// Parameters to collect from the user.
	Parameters []GoogleCloudDialogflowCxV3FormParameterResponse `pulumi:"parameters"`
}

// A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.
type GoogleCloudDialogflowCxV3FormResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FormResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormResponseOutput) ToGoogleCloudDialogflowCxV3FormResponseOutput() GoogleCloudDialogflowCxV3FormResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormResponseOutput) ToGoogleCloudDialogflowCxV3FormResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormResponseOutput {
	return o
}

// Parameters to collect from the user.
func (o GoogleCloudDialogflowCxV3FormResponseOutput) Parameters() GoogleCloudDialogflowCxV3FormParameterResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormResponse) []GoogleCloudDialogflowCxV3FormParameterResponse {
		return v.Parameters
	}).(GoogleCloudDialogflowCxV3FormParameterResponseArrayOutput)
}

// A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.
type GoogleCloudDialogflowCxV3Fulfillment struct {
	// Hierarchical advanced settings for this fulfillment. The settings exposed at the lower level overrides the settings exposed at the higher level.
	AdvancedSettings *GoogleCloudDialogflowCxV3AdvancedSettings `pulumi:"advancedSettings"`
	// Conditional cases for this fulfillment.
	ConditionalCases []GoogleCloudDialogflowCxV3FulfillmentConditionalCases `pulumi:"conditionalCases"`
	// If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated with no-match event handlers.
	EnableGenerativeFallback *bool `pulumi:"enableGenerativeFallback"`
	// The list of rich message responses to present to the user.
	Messages []GoogleCloudDialogflowCxV3ResponseMessage `pulumi:"messages"`
	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses *bool `pulumi:"returnPartialResponses"`
	// Set parameter values before executing the webhook.
	SetParameterActions []GoogleCloudDialogflowCxV3FulfillmentSetParameterAction `pulumi:"setParameterActions"`
	// The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
	Tag *string `pulumi:"tag"`
	// The webhook to call. Format: `projects//locations//agents//webhooks/`.
	Webhook *string `pulumi:"webhook"`
}

// GoogleCloudDialogflowCxV3FulfillmentInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentArgs and GoogleCloudDialogflowCxV3FulfillmentOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentInput` via:
//
//	GoogleCloudDialogflowCxV3FulfillmentArgs{...}
type GoogleCloudDialogflowCxV3FulfillmentInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentOutput() GoogleCloudDialogflowCxV3FulfillmentOutput
	ToGoogleCloudDialogflowCxV3FulfillmentOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentOutput
}

// A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.
type GoogleCloudDialogflowCxV3FulfillmentArgs struct {
	// Hierarchical advanced settings for this fulfillment. The settings exposed at the lower level overrides the settings exposed at the higher level.
	AdvancedSettings GoogleCloudDialogflowCxV3AdvancedSettingsPtrInput `pulumi:"advancedSettings"`
	// Conditional cases for this fulfillment.
	ConditionalCases GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayInput `pulumi:"conditionalCases"`
	// If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated with no-match event handlers.
	EnableGenerativeFallback pulumi.BoolPtrInput `pulumi:"enableGenerativeFallback"`
	// The list of rich message responses to present to the user.
	Messages GoogleCloudDialogflowCxV3ResponseMessageArrayInput `pulumi:"messages"`
	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses pulumi.BoolPtrInput `pulumi:"returnPartialResponses"`
	// Set parameter values before executing the webhook.
	SetParameterActions GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayInput `pulumi:"setParameterActions"`
	// The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The webhook to call. Format: `projects//locations//agents//webhooks/`.
	Webhook pulumi.StringPtrInput `pulumi:"webhook"`
}

func (GoogleCloudDialogflowCxV3FulfillmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Fulfillment)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentArgs) ToGoogleCloudDialogflowCxV3FulfillmentOutput() GoogleCloudDialogflowCxV3FulfillmentOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentArgs) ToGoogleCloudDialogflowCxV3FulfillmentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentOutput)
}

func (i GoogleCloudDialogflowCxV3FulfillmentArgs) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutput() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentArgs) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentOutput).ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3FulfillmentPtrInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentArgs, GoogleCloudDialogflowCxV3FulfillmentPtr and GoogleCloudDialogflowCxV3FulfillmentPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3FulfillmentArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3FulfillmentPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentPtrOutput() GoogleCloudDialogflowCxV3FulfillmentPtrOutput
	ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentPtrOutput
}

type googleCloudDialogflowCxV3FulfillmentPtrType GoogleCloudDialogflowCxV3FulfillmentArgs

func GoogleCloudDialogflowCxV3FulfillmentPtr(v *GoogleCloudDialogflowCxV3FulfillmentArgs) GoogleCloudDialogflowCxV3FulfillmentPtrInput {
	return (*googleCloudDialogflowCxV3FulfillmentPtrType)(v)
}

func (*googleCloudDialogflowCxV3FulfillmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Fulfillment)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3FulfillmentPtrType) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutput() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3FulfillmentPtrType) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

// A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.
type GoogleCloudDialogflowCxV3FulfillmentOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Fulfillment)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentOutput) ToGoogleCloudDialogflowCxV3FulfillmentOutput() GoogleCloudDialogflowCxV3FulfillmentOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentOutput) ToGoogleCloudDialogflowCxV3FulfillmentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentOutput) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutput() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3FulfillmentOutput) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3Fulfillment) *GoogleCloudDialogflowCxV3Fulfillment {
		return &v
	}).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

// Hierarchical advanced settings for this fulfillment. The settings exposed at the lower level overrides the settings exposed at the higher level.
func (o GoogleCloudDialogflowCxV3FulfillmentOutput) AdvancedSettings() GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Fulfillment) *GoogleCloudDialogflowCxV3AdvancedSettings {
		return v.AdvancedSettings
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput)
}

// Conditional cases for this fulfillment.
func (o GoogleCloudDialogflowCxV3FulfillmentOutput) ConditionalCases() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Fulfillment) []GoogleCloudDialogflowCxV3FulfillmentConditionalCases {
		return v.ConditionalCases
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput)
}

// If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated with no-match event handlers.
func (o GoogleCloudDialogflowCxV3FulfillmentOutput) EnableGenerativeFallback() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Fulfillment) *bool { return v.EnableGenerativeFallback }).(pulumi.BoolPtrOutput)
}

// The list of rich message responses to present to the user.
func (o GoogleCloudDialogflowCxV3FulfillmentOutput) Messages() GoogleCloudDialogflowCxV3ResponseMessageArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Fulfillment) []GoogleCloudDialogflowCxV3ResponseMessage {
		return v.Messages
	}).(GoogleCloudDialogflowCxV3ResponseMessageArrayOutput)
}

// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
func (o GoogleCloudDialogflowCxV3FulfillmentOutput) ReturnPartialResponses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Fulfillment) *bool { return v.ReturnPartialResponses }).(pulumi.BoolPtrOutput)
}

// Set parameter values before executing the webhook.
func (o GoogleCloudDialogflowCxV3FulfillmentOutput) SetParameterActions() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Fulfillment) []GoogleCloudDialogflowCxV3FulfillmentSetParameterAction {
		return v.SetParameterActions
	}).(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput)
}

// The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
func (o GoogleCloudDialogflowCxV3FulfillmentOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Fulfillment) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The webhook to call. Format: `projects//locations//agents//webhooks/`.
func (o GoogleCloudDialogflowCxV3FulfillmentOutput) Webhook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Fulfillment) *string { return v.Webhook }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Fulfillment)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutput() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) Elem() GoogleCloudDialogflowCxV3FulfillmentOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) GoogleCloudDialogflowCxV3Fulfillment {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3Fulfillment
		return ret
	}).(GoogleCloudDialogflowCxV3FulfillmentOutput)
}

// Hierarchical advanced settings for this fulfillment. The settings exposed at the lower level overrides the settings exposed at the higher level.
func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) AdvancedSettings() GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) *GoogleCloudDialogflowCxV3AdvancedSettings {
		if v == nil {
			return nil
		}
		return v.AdvancedSettings
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput)
}

// Conditional cases for this fulfillment.
func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) ConditionalCases() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) []GoogleCloudDialogflowCxV3FulfillmentConditionalCases {
		if v == nil {
			return nil
		}
		return v.ConditionalCases
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput)
}

// If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated with no-match event handlers.
func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) EnableGenerativeFallback() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) *bool {
		if v == nil {
			return nil
		}
		return v.EnableGenerativeFallback
	}).(pulumi.BoolPtrOutput)
}

// The list of rich message responses to present to the user.
func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) Messages() GoogleCloudDialogflowCxV3ResponseMessageArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) []GoogleCloudDialogflowCxV3ResponseMessage {
		if v == nil {
			return nil
		}
		return v.Messages
	}).(GoogleCloudDialogflowCxV3ResponseMessageArrayOutput)
}

// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) ReturnPartialResponses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) *bool {
		if v == nil {
			return nil
		}
		return v.ReturnPartialResponses
	}).(pulumi.BoolPtrOutput)
}

// Set parameter values before executing the webhook.
func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) SetParameterActions() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) []GoogleCloudDialogflowCxV3FulfillmentSetParameterAction {
		if v == nil {
			return nil
		}
		return v.SetParameterActions
	}).(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput)
}

// The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// The webhook to call. Format: `projects//locations//agents//webhooks/`.
func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) Webhook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) *string {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(pulumi.StringPtrOutput)
}

// A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCases struct {
	// A list of cascading if-else conditions.
	Cases []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase `pulumi:"cases"`
}

// GoogleCloudDialogflowCxV3FulfillmentConditionalCasesInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs and GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesInput` via:
//
//	GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs{...}
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput
	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput
}

// A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs struct {
	// A list of cascading if-else conditions.
	Cases GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayInput `pulumi:"cases"`
}

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCases)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput)
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput).ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs, GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtr and GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput
	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput
}

type googleCloudDialogflowCxV3FulfillmentConditionalCasesPtrType GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs

func GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtr(v *GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrInput {
	return (*googleCloudDialogflowCxV3FulfillmentConditionalCasesPtrType)(v)
}

func (*googleCloudDialogflowCxV3FulfillmentConditionalCasesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3FulfillmentConditionalCases)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3FulfillmentConditionalCasesPtrType) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3FulfillmentConditionalCasesPtrType) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput)
}

// GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArray and GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayInput` via:
//
//	GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArray{ GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs{...} }
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput
	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArray []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesInput

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCases)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArray) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArray) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput)
}

// A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCases)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3FulfillmentConditionalCases) *GoogleCloudDialogflowCxV3FulfillmentConditionalCases {
		return &v
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput)
}

// A list of cascading if-else conditions.
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput) Cases() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCases) []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase {
		return v.Cases
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3FulfillmentConditionalCases)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput) Elem() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3FulfillmentConditionalCases) GoogleCloudDialogflowCxV3FulfillmentConditionalCases {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3FulfillmentConditionalCases
		return ret
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput)
}

// A list of cascading if-else conditions.
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput) Cases() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3FulfillmentConditionalCases) []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase {
		if v == nil {
			return nil
		}
		return v.Cases
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCases)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FulfillmentConditionalCases {
		return vs[0].([]GoogleCloudDialogflowCxV3FulfillmentConditionalCases)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput)
}

// Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase struct {
	// A list of case content.
	CaseContent []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent `pulumi:"caseContent"`
	// The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	Condition *string `pulumi:"condition"`
}

// GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs and GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseInput` via:
//
//	GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs{...}
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput
	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput
}

// Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs struct {
	// A list of case content.
	CaseContent GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayInput `pulumi:"caseContent"`
	// The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	Condition pulumi.StringPtrInput `pulumi:"condition"`
}

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput)
}

// GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArray and GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayInput` via:
//
//	GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArray{ GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs{...} }
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput
	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArray []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseInput

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArray) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArray) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput)
}

// Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput {
	return o
}

// A list of case content.
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput) CaseContent() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase) []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent {
		return v.CaseContent
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput)
}

// The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase {
		return vs[0].([]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput)
}

// The list of messages or conditional cases to activate for this case.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent struct {
	// Additional cases to be evaluated.
	AdditionalCases *GoogleCloudDialogflowCxV3FulfillmentConditionalCases `pulumi:"additionalCases"`
	// Returned message.
	Message *GoogleCloudDialogflowCxV3ResponseMessage `pulumi:"message"`
}

// GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs and GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentInput` via:
//
//	GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs{...}
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput
	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput
}

// The list of messages or conditional cases to activate for this case.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs struct {
	// Additional cases to be evaluated.
	AdditionalCases GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrInput `pulumi:"additionalCases"`
	// Returned message.
	Message GoogleCloudDialogflowCxV3ResponseMessagePtrInput `pulumi:"message"`
}

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput)
}

// GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArray and GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayInput` via:
//
//	GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArray{ GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs{...} }
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput
	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArray []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentInput

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArray) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArray) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput)
}

// The list of messages or conditional cases to activate for this case.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput {
	return o
}

// Additional cases to be evaluated.
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput) AdditionalCases() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent) *GoogleCloudDialogflowCxV3FulfillmentConditionalCases {
		return v.AdditionalCases
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput)
}

// Returned message.
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput) Message() GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent) *GoogleCloudDialogflowCxV3ResponseMessage {
		return v.Message
	}).(GoogleCloudDialogflowCxV3ResponseMessagePtrOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent {
		return vs[0].([]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput)
}

// The list of messages or conditional cases to activate for this case.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponse struct {
	// Additional cases to be evaluated.
	AdditionalCases GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponse `pulumi:"additionalCases"`
	// Returned message.
	Message GoogleCloudDialogflowCxV3ResponseMessageResponse `pulumi:"message"`
}

// The list of messages or conditional cases to activate for this case.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseOutput {
	return o
}

// Additional cases to be evaluated.
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseOutput) AdditionalCases() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponse) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponse {
		return v.AdditionalCases
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseOutput)
}

// Returned message.
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseOutput) Message() GoogleCloudDialogflowCxV3ResponseMessageResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponse) GoogleCloudDialogflowCxV3ResponseMessageResponse {
		return v.Message
	}).(GoogleCloudDialogflowCxV3ResponseMessageResponseOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseOutput)
}

// Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponse struct {
	// A list of case content.
	CaseContent []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponse `pulumi:"caseContent"`
	// The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	Condition string `pulumi:"condition"`
}

// Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseOutput {
	return o
}

// A list of case content.
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseOutput) CaseContent() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponse) []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponse {
		return v.CaseContent
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseArrayOutput)
}

// The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponse) string { return v.Condition }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseOutput)
}

// A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponse struct {
	// A list of cascading if-else conditions.
	Cases []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponse `pulumi:"cases"`
}

// A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseOutput {
	return o
}

// A list of cascading if-else conditions.
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseOutput) Cases() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponse) []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponse {
		return v.Cases
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseArrayOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseOutput)
}

// A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.
type GoogleCloudDialogflowCxV3FulfillmentResponse struct {
	// Hierarchical advanced settings for this fulfillment. The settings exposed at the lower level overrides the settings exposed at the higher level.
	AdvancedSettings GoogleCloudDialogflowCxV3AdvancedSettingsResponse `pulumi:"advancedSettings"`
	// Conditional cases for this fulfillment.
	ConditionalCases []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponse `pulumi:"conditionalCases"`
	// If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated with no-match event handlers.
	EnableGenerativeFallback bool `pulumi:"enableGenerativeFallback"`
	// The list of rich message responses to present to the user.
	Messages []GoogleCloudDialogflowCxV3ResponseMessageResponse `pulumi:"messages"`
	// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
	ReturnPartialResponses bool `pulumi:"returnPartialResponses"`
	// Set parameter values before executing the webhook.
	SetParameterActions []GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponse `pulumi:"setParameterActions"`
	// The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
	Tag string `pulumi:"tag"`
	// The webhook to call. Format: `projects//locations//agents//webhooks/`.
	Webhook string `pulumi:"webhook"`
}

// A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.
type GoogleCloudDialogflowCxV3FulfillmentResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentResponseOutput) ToGoogleCloudDialogflowCxV3FulfillmentResponseOutput() GoogleCloudDialogflowCxV3FulfillmentResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentResponseOutput) ToGoogleCloudDialogflowCxV3FulfillmentResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentResponseOutput {
	return o
}

// Hierarchical advanced settings for this fulfillment. The settings exposed at the lower level overrides the settings exposed at the higher level.
func (o GoogleCloudDialogflowCxV3FulfillmentResponseOutput) AdvancedSettings() GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentResponse) GoogleCloudDialogflowCxV3AdvancedSettingsResponse {
		return v.AdvancedSettings
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput)
}

// Conditional cases for this fulfillment.
func (o GoogleCloudDialogflowCxV3FulfillmentResponseOutput) ConditionalCases() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentResponse) []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponse {
		return v.ConditionalCases
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseArrayOutput)
}

// If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated with no-match event handlers.
func (o GoogleCloudDialogflowCxV3FulfillmentResponseOutput) EnableGenerativeFallback() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentResponse) bool { return v.EnableGenerativeFallback }).(pulumi.BoolOutput)
}

// The list of rich message responses to present to the user.
func (o GoogleCloudDialogflowCxV3FulfillmentResponseOutput) Messages() GoogleCloudDialogflowCxV3ResponseMessageResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentResponse) []GoogleCloudDialogflowCxV3ResponseMessageResponse {
		return v.Messages
	}).(GoogleCloudDialogflowCxV3ResponseMessageResponseArrayOutput)
}

// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
func (o GoogleCloudDialogflowCxV3FulfillmentResponseOutput) ReturnPartialResponses() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentResponse) bool { return v.ReturnPartialResponses }).(pulumi.BoolOutput)
}

// Set parameter values before executing the webhook.
func (o GoogleCloudDialogflowCxV3FulfillmentResponseOutput) SetParameterActions() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentResponse) []GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponse {
		return v.SetParameterActions
	}).(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseArrayOutput)
}

// The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
func (o GoogleCloudDialogflowCxV3FulfillmentResponseOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentResponse) string { return v.Tag }).(pulumi.StringOutput)
}

// The webhook to call. Format: `projects//locations//agents//webhooks/`.
func (o GoogleCloudDialogflowCxV3FulfillmentResponseOutput) Webhook() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentResponse) string { return v.Webhook }).(pulumi.StringOutput)
}

// Setting a parameter value.
type GoogleCloudDialogflowCxV3FulfillmentSetParameterAction struct {
	// Display name of the parameter.
	Parameter *string `pulumi:"parameter"`
	// The new value of the parameter. A null value clears the parameter.
	Value interface{} `pulumi:"value"`
}

// GoogleCloudDialogflowCxV3FulfillmentSetParameterActionInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs and GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentSetParameterActionInput` via:
//
//	GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs{...}
type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput
	ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput
}

// Setting a parameter value.
type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs struct {
	// Display name of the parameter.
	Parameter pulumi.StringPtrInput `pulumi:"parameter"`
	// The new value of the parameter. A null value clears the parameter.
	Value pulumi.Input `pulumi:"value"`
}

func (GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentSetParameterAction)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput)
}

// GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArray and GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayInput` via:
//
//	GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArray{ GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs{...} }
type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput
	ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput
}

type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArray []GoogleCloudDialogflowCxV3FulfillmentSetParameterActionInput

func (GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentSetParameterAction)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArray) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArray) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput)
}

// Setting a parameter value.
type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentSetParameterAction)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput {
	return o
}

// Display name of the parameter.
func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentSetParameterAction) *string { return v.Parameter }).(pulumi.StringPtrOutput)
}

// The new value of the parameter. A null value clears the parameter.
func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentSetParameterAction) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentSetParameterAction)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FulfillmentSetParameterAction {
		return vs[0].([]GoogleCloudDialogflowCxV3FulfillmentSetParameterAction)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput)
}

// Setting a parameter value.
type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponse struct {
	// Display name of the parameter.
	Parameter string `pulumi:"parameter"`
	// The new value of the parameter. A null value clears the parameter.
	Value interface{} `pulumi:"value"`
}

// Setting a parameter value.
type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseOutput) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseOutput() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseOutput) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseOutput {
	return o
}

// Display name of the parameter.
func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseOutput) Parameter() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponse) string { return v.Parameter }).(pulumi.StringOutput)
}

// The new value of the parameter. A null value clears the parameter.
func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponse) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseArrayOutput() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseOutput)
}

// Google Cloud Storage location for a Dialogflow operation that writes or exports objects (e.g. exported agent or transcripts) outside of Dialogflow.
type GoogleCloudDialogflowCxV3GcsDestination struct {
	// The Google Cloud Storage URI for the exported objects. A URI is of the form: `gs://bucket/object-name-or-prefix` Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation.
	Uri string `pulumi:"uri"`
}

// GoogleCloudDialogflowCxV3GcsDestinationInput is an input type that accepts GoogleCloudDialogflowCxV3GcsDestinationArgs and GoogleCloudDialogflowCxV3GcsDestinationOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3GcsDestinationInput` via:
//
//	GoogleCloudDialogflowCxV3GcsDestinationArgs{...}
type GoogleCloudDialogflowCxV3GcsDestinationInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3GcsDestinationOutput() GoogleCloudDialogflowCxV3GcsDestinationOutput
	ToGoogleCloudDialogflowCxV3GcsDestinationOutputWithContext(context.Context) GoogleCloudDialogflowCxV3GcsDestinationOutput
}

// Google Cloud Storage location for a Dialogflow operation that writes or exports objects (e.g. exported agent or transcripts) outside of Dialogflow.
type GoogleCloudDialogflowCxV3GcsDestinationArgs struct {
	// The Google Cloud Storage URI for the exported objects. A URI is of the form: `gs://bucket/object-name-or-prefix` Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GoogleCloudDialogflowCxV3GcsDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3GcsDestination)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3GcsDestinationArgs) ToGoogleCloudDialogflowCxV3GcsDestinationOutput() GoogleCloudDialogflowCxV3GcsDestinationOutput {
	return i.ToGoogleCloudDialogflowCxV3GcsDestinationOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3GcsDestinationArgs) ToGoogleCloudDialogflowCxV3GcsDestinationOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3GcsDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3GcsDestinationOutput)
}

func (i GoogleCloudDialogflowCxV3GcsDestinationArgs) ToGoogleCloudDialogflowCxV3GcsDestinationPtrOutput() GoogleCloudDialogflowCxV3GcsDestinationPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3GcsDestinationPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3GcsDestinationArgs) ToGoogleCloudDialogflowCxV3GcsDestinationPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3GcsDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3GcsDestinationOutput).ToGoogleCloudDialogflowCxV3GcsDestinationPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3GcsDestinationPtrInput is an input type that accepts GoogleCloudDialogflowCxV3GcsDestinationArgs, GoogleCloudDialogflowCxV3GcsDestinationPtr and GoogleCloudDialogflowCxV3GcsDestinationPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3GcsDestinationPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3GcsDestinationArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3GcsDestinationPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3GcsDestinationPtrOutput() GoogleCloudDialogflowCxV3GcsDestinationPtrOutput
	ToGoogleCloudDialogflowCxV3GcsDestinationPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3GcsDestinationPtrOutput
}

type googleCloudDialogflowCxV3GcsDestinationPtrType GoogleCloudDialogflowCxV3GcsDestinationArgs

func GoogleCloudDialogflowCxV3GcsDestinationPtr(v *GoogleCloudDialogflowCxV3GcsDestinationArgs) GoogleCloudDialogflowCxV3GcsDestinationPtrInput {
	return (*googleCloudDialogflowCxV3GcsDestinationPtrType)(v)
}

func (*googleCloudDialogflowCxV3GcsDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3GcsDestination)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3GcsDestinationPtrType) ToGoogleCloudDialogflowCxV3GcsDestinationPtrOutput() GoogleCloudDialogflowCxV3GcsDestinationPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3GcsDestinationPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3GcsDestinationPtrType) ToGoogleCloudDialogflowCxV3GcsDestinationPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3GcsDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3GcsDestinationPtrOutput)
}

// Google Cloud Storage location for a Dialogflow operation that writes or exports objects (e.g. exported agent or transcripts) outside of Dialogflow.
type GoogleCloudDialogflowCxV3GcsDestinationOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3GcsDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3GcsDestination)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3GcsDestinationOutput) ToGoogleCloudDialogflowCxV3GcsDestinationOutput() GoogleCloudDialogflowCxV3GcsDestinationOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3GcsDestinationOutput) ToGoogleCloudDialogflowCxV3GcsDestinationOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3GcsDestinationOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3GcsDestinationOutput) ToGoogleCloudDialogflowCxV3GcsDestinationPtrOutput() GoogleCloudDialogflowCxV3GcsDestinationPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3GcsDestinationPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3GcsDestinationOutput) ToGoogleCloudDialogflowCxV3GcsDestinationPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3GcsDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3GcsDestination) *GoogleCloudDialogflowCxV3GcsDestination {
		return &v
	}).(GoogleCloudDialogflowCxV3GcsDestinationPtrOutput)
}

// The Google Cloud Storage URI for the exported objects. A URI is of the form: `gs://bucket/object-name-or-prefix` Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation.
func (o GoogleCloudDialogflowCxV3GcsDestinationOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3GcsDestination) string { return v.Uri }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3GcsDestinationPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3GcsDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3GcsDestination)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3GcsDestinationPtrOutput) ToGoogleCloudDialogflowCxV3GcsDestinationPtrOutput() GoogleCloudDialogflowCxV3GcsDestinationPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3GcsDestinationPtrOutput) ToGoogleCloudDialogflowCxV3GcsDestinationPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3GcsDestinationPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3GcsDestinationPtrOutput) Elem() GoogleCloudDialogflowCxV3GcsDestinationOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3GcsDestination) GoogleCloudDialogflowCxV3GcsDestination {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3GcsDestination
		return ret
	}).(GoogleCloudDialogflowCxV3GcsDestinationOutput)
}

// The Google Cloud Storage URI for the exported objects. A URI is of the form: `gs://bucket/object-name-or-prefix` Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation.
func (o GoogleCloudDialogflowCxV3GcsDestinationPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3GcsDestination) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

// Google Cloud Storage location for a Dialogflow operation that writes or exports objects (e.g. exported agent or transcripts) outside of Dialogflow.
type GoogleCloudDialogflowCxV3GcsDestinationResponse struct {
	// The Google Cloud Storage URI for the exported objects. A URI is of the form: `gs://bucket/object-name-or-prefix` Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation.
	Uri string `pulumi:"uri"`
}

// Google Cloud Storage location for a Dialogflow operation that writes or exports objects (e.g. exported agent or transcripts) outside of Dialogflow.
type GoogleCloudDialogflowCxV3GcsDestinationResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3GcsDestinationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3GcsDestinationResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3GcsDestinationResponseOutput) ToGoogleCloudDialogflowCxV3GcsDestinationResponseOutput() GoogleCloudDialogflowCxV3GcsDestinationResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3GcsDestinationResponseOutput) ToGoogleCloudDialogflowCxV3GcsDestinationResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3GcsDestinationResponseOutput {
	return o
}

// The Google Cloud Storage URI for the exported objects. A URI is of the form: `gs://bucket/object-name-or-prefix` Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation.
func (o GoogleCloudDialogflowCxV3GcsDestinationResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3GcsDestinationResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Instructs the speech recognizer on how to process the audio content.
type GoogleCloudDialogflowCxV3InputAudioConfig struct {
	// Audio encoding of the audio content to process.
	AudioEncoding GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding `pulumi:"audioEncoding"`
	// Configuration of barge-in behavior during the streaming of input audio.
	BargeInConfig *GoogleCloudDialogflowCxV3BargeInConfig `pulumi:"bargeInConfig"`
	// Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
	EnableWordInfo *bool `pulumi:"enableWordInfo"`
	// Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details. If you specify a model, the following models typically have the best performance: - phone_call (best for Agent Assist and telephony) - latest_short (best for Dialogflow non-telephony) - command_and_search (best for very short utterances and commands)
	Model *string `pulumi:"model"`
	// Optional. Which variant of the Speech model to use.
	ModelVariant *GoogleCloudDialogflowCxV3InputAudioConfigModelVariant `pulumi:"modelVariant"`
	// Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
	PhraseHints []string `pulumi:"phraseHints"`
	// Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
	SampleRateHertz *int `pulumi:"sampleRateHertz"`
	// Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.
	SingleUtterance *bool `pulumi:"singleUtterance"`
}

// GoogleCloudDialogflowCxV3InputAudioConfigInput is an input type that accepts GoogleCloudDialogflowCxV3InputAudioConfigArgs and GoogleCloudDialogflowCxV3InputAudioConfigOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3InputAudioConfigInput` via:
//
//	GoogleCloudDialogflowCxV3InputAudioConfigArgs{...}
type GoogleCloudDialogflowCxV3InputAudioConfigInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3InputAudioConfigOutput() GoogleCloudDialogflowCxV3InputAudioConfigOutput
	ToGoogleCloudDialogflowCxV3InputAudioConfigOutputWithContext(context.Context) GoogleCloudDialogflowCxV3InputAudioConfigOutput
}

// Instructs the speech recognizer on how to process the audio content.
type GoogleCloudDialogflowCxV3InputAudioConfigArgs struct {
	// Audio encoding of the audio content to process.
	AudioEncoding GoogleCloudDialogflowCxV3InputAudioConfigAudioEncodingInput `pulumi:"audioEncoding"`
	// Configuration of barge-in behavior during the streaming of input audio.
	BargeInConfig GoogleCloudDialogflowCxV3BargeInConfigPtrInput `pulumi:"bargeInConfig"`
	// Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
	EnableWordInfo pulumi.BoolPtrInput `pulumi:"enableWordInfo"`
	// Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details. If you specify a model, the following models typically have the best performance: - phone_call (best for Agent Assist and telephony) - latest_short (best for Dialogflow non-telephony) - command_and_search (best for very short utterances and commands)
	Model pulumi.StringPtrInput `pulumi:"model"`
	// Optional. Which variant of the Speech model to use.
	ModelVariant GoogleCloudDialogflowCxV3InputAudioConfigModelVariantPtrInput `pulumi:"modelVariant"`
	// Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
	PhraseHints pulumi.StringArrayInput `pulumi:"phraseHints"`
	// Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
	SampleRateHertz pulumi.IntPtrInput `pulumi:"sampleRateHertz"`
	// Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.
	SingleUtterance pulumi.BoolPtrInput `pulumi:"singleUtterance"`
}

func (GoogleCloudDialogflowCxV3InputAudioConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3InputAudioConfig)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3InputAudioConfigArgs) ToGoogleCloudDialogflowCxV3InputAudioConfigOutput() GoogleCloudDialogflowCxV3InputAudioConfigOutput {
	return i.ToGoogleCloudDialogflowCxV3InputAudioConfigOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3InputAudioConfigArgs) ToGoogleCloudDialogflowCxV3InputAudioConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3InputAudioConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3InputAudioConfigOutput)
}

func (i GoogleCloudDialogflowCxV3InputAudioConfigArgs) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutput() GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3InputAudioConfigArgs) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3InputAudioConfigOutput).ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3InputAudioConfigPtrInput is an input type that accepts GoogleCloudDialogflowCxV3InputAudioConfigArgs, GoogleCloudDialogflowCxV3InputAudioConfigPtr and GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3InputAudioConfigPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3InputAudioConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3InputAudioConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutput() GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput
	ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput
}

type googleCloudDialogflowCxV3InputAudioConfigPtrType GoogleCloudDialogflowCxV3InputAudioConfigArgs

func GoogleCloudDialogflowCxV3InputAudioConfigPtr(v *GoogleCloudDialogflowCxV3InputAudioConfigArgs) GoogleCloudDialogflowCxV3InputAudioConfigPtrInput {
	return (*googleCloudDialogflowCxV3InputAudioConfigPtrType)(v)
}

func (*googleCloudDialogflowCxV3InputAudioConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3InputAudioConfig)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3InputAudioConfigPtrType) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutput() GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3InputAudioConfigPtrType) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput)
}

// Instructs the speech recognizer on how to process the audio content.
type GoogleCloudDialogflowCxV3InputAudioConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3InputAudioConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3InputAudioConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) ToGoogleCloudDialogflowCxV3InputAudioConfigOutput() GoogleCloudDialogflowCxV3InputAudioConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) ToGoogleCloudDialogflowCxV3InputAudioConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3InputAudioConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutput() GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3InputAudioConfig) *GoogleCloudDialogflowCxV3InputAudioConfig {
		return &v
	}).(GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput)
}

// Audio encoding of the audio content to process.
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) AudioEncoding() GoogleCloudDialogflowCxV3InputAudioConfigAudioEncodingOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding {
		return v.AudioEncoding
	}).(GoogleCloudDialogflowCxV3InputAudioConfigAudioEncodingOutput)
}

// Configuration of barge-in behavior during the streaming of input audio.
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) BargeInConfig() GoogleCloudDialogflowCxV3BargeInConfigPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) *GoogleCloudDialogflowCxV3BargeInConfig {
		return v.BargeInConfig
	}).(GoogleCloudDialogflowCxV3BargeInConfigPtrOutput)
}

// Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) EnableWordInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) *bool { return v.EnableWordInfo }).(pulumi.BoolPtrOutput)
}

// Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details. If you specify a model, the following models typically have the best performance: - phone_call (best for Agent Assist and telephony) - latest_short (best for Dialogflow non-telephony) - command_and_search (best for very short utterances and commands)
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) *string { return v.Model }).(pulumi.StringPtrOutput)
}

// Optional. Which variant of the Speech model to use.
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) ModelVariant() GoogleCloudDialogflowCxV3InputAudioConfigModelVariantPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) *GoogleCloudDialogflowCxV3InputAudioConfigModelVariant {
		return v.ModelVariant
	}).(GoogleCloudDialogflowCxV3InputAudioConfigModelVariantPtrOutput)
}

// Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) PhraseHints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) []string { return v.PhraseHints }).(pulumi.StringArrayOutput)
}

// Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) SampleRateHertz() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) *int { return v.SampleRateHertz }).(pulumi.IntPtrOutput)
}

// Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) SingleUtterance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) *bool { return v.SingleUtterance }).(pulumi.BoolPtrOutput)
}

type GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3InputAudioConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutput() GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) Elem() GoogleCloudDialogflowCxV3InputAudioConfigOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) GoogleCloudDialogflowCxV3InputAudioConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3InputAudioConfig
		return ret
	}).(GoogleCloudDialogflowCxV3InputAudioConfigOutput)
}

// Audio encoding of the audio content to process.
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) AudioEncoding() GoogleCloudDialogflowCxV3InputAudioConfigAudioEncodingPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) *GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding {
		if v == nil {
			return nil
		}
		return &v.AudioEncoding
	}).(GoogleCloudDialogflowCxV3InputAudioConfigAudioEncodingPtrOutput)
}

// Configuration of barge-in behavior during the streaming of input audio.
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) BargeInConfig() GoogleCloudDialogflowCxV3BargeInConfigPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) *GoogleCloudDialogflowCxV3BargeInConfig {
		if v == nil {
			return nil
		}
		return v.BargeInConfig
	}).(GoogleCloudDialogflowCxV3BargeInConfigPtrOutput)
}

// Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) EnableWordInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableWordInfo
	}).(pulumi.BoolPtrOutput)
}

// Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details. If you specify a model, the following models typically have the best performance: - phone_call (best for Agent Assist and telephony) - latest_short (best for Dialogflow non-telephony) - command_and_search (best for very short utterances and commands)
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) *string {
		if v == nil {
			return nil
		}
		return v.Model
	}).(pulumi.StringPtrOutput)
}

// Optional. Which variant of the Speech model to use.
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) ModelVariant() GoogleCloudDialogflowCxV3InputAudioConfigModelVariantPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) *GoogleCloudDialogflowCxV3InputAudioConfigModelVariant {
		if v == nil {
			return nil
		}
		return v.ModelVariant
	}).(GoogleCloudDialogflowCxV3InputAudioConfigModelVariantPtrOutput)
}

// Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) PhraseHints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) []string {
		if v == nil {
			return nil
		}
		return v.PhraseHints
	}).(pulumi.StringArrayOutput)
}

// Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) SampleRateHertz() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) *int {
		if v == nil {
			return nil
		}
		return v.SampleRateHertz
	}).(pulumi.IntPtrOutput)
}

// Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) SingleUtterance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) *bool {
		if v == nil {
			return nil
		}
		return v.SingleUtterance
	}).(pulumi.BoolPtrOutput)
}

// Instructs the speech recognizer on how to process the audio content.
type GoogleCloudDialogflowCxV3InputAudioConfigResponse struct {
	// Audio encoding of the audio content to process.
	AudioEncoding string `pulumi:"audioEncoding"`
	// Configuration of barge-in behavior during the streaming of input audio.
	BargeInConfig GoogleCloudDialogflowCxV3BargeInConfigResponse `pulumi:"bargeInConfig"`
	// Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
	EnableWordInfo bool `pulumi:"enableWordInfo"`
	// Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details. If you specify a model, the following models typically have the best performance: - phone_call (best for Agent Assist and telephony) - latest_short (best for Dialogflow non-telephony) - command_and_search (best for very short utterances and commands)
	Model string `pulumi:"model"`
	// Optional. Which variant of the Speech model to use.
	ModelVariant string `pulumi:"modelVariant"`
	// Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
	PhraseHints []string `pulumi:"phraseHints"`
	// Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
	SampleRateHertz int `pulumi:"sampleRateHertz"`
	// Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.
	SingleUtterance bool `pulumi:"singleUtterance"`
}

// Instructs the speech recognizer on how to process the audio content.
type GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3InputAudioConfigResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput) ToGoogleCloudDialogflowCxV3InputAudioConfigResponseOutput() GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput) ToGoogleCloudDialogflowCxV3InputAudioConfigResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput {
	return o
}

// Audio encoding of the audio content to process.
func (o GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput) AudioEncoding() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfigResponse) string { return v.AudioEncoding }).(pulumi.StringOutput)
}

// Configuration of barge-in behavior during the streaming of input audio.
func (o GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput) BargeInConfig() GoogleCloudDialogflowCxV3BargeInConfigResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfigResponse) GoogleCloudDialogflowCxV3BargeInConfigResponse {
		return v.BargeInConfig
	}).(GoogleCloudDialogflowCxV3BargeInConfigResponseOutput)
}

// Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
func (o GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput) EnableWordInfo() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfigResponse) bool { return v.EnableWordInfo }).(pulumi.BoolOutput)
}

// Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details. If you specify a model, the following models typically have the best performance: - phone_call (best for Agent Assist and telephony) - latest_short (best for Dialogflow non-telephony) - command_and_search (best for very short utterances and commands)
func (o GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfigResponse) string { return v.Model }).(pulumi.StringOutput)
}

// Optional. Which variant of the Speech model to use.
func (o GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput) ModelVariant() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfigResponse) string { return v.ModelVariant }).(pulumi.StringOutput)
}

// Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
func (o GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput) PhraseHints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfigResponse) []string { return v.PhraseHints }).(pulumi.StringArrayOutput)
}

// Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
func (o GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput) SampleRateHertz() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfigResponse) int { return v.SampleRateHertz }).(pulumi.IntOutput)
}

// Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.
func (o GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput) SingleUtterance() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfigResponse) bool { return v.SingleUtterance }).(pulumi.BoolOutput)
}

// An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.
type GoogleCloudDialogflowCxV3Intent struct {
	// Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
	Description *string `pulumi:"description"`
	// The human-readable name of the intent, unique within the agent.
	DisplayName string `pulumi:"displayName"`
	// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
	IsFallback *bool `pulumi:"isFallback"`
	// The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
	Labels map[string]string `pulumi:"labels"`
	// The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.
	Name *string `pulumi:"name"`
	// The collection of parameters associated with the intent.
	Parameters []GoogleCloudDialogflowCxV3IntentParameter `pulumi:"parameters"`
	// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
	Priority *int `pulumi:"priority"`
	// The collection of training phrases the agent is trained on to identify the intent.
	TrainingPhrases []GoogleCloudDialogflowCxV3IntentTrainingPhrase `pulumi:"trainingPhrases"`
}

// GoogleCloudDialogflowCxV3IntentInput is an input type that accepts GoogleCloudDialogflowCxV3IntentArgs and GoogleCloudDialogflowCxV3IntentOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentInput` via:
//
//	GoogleCloudDialogflowCxV3IntentArgs{...}
type GoogleCloudDialogflowCxV3IntentInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentOutput() GoogleCloudDialogflowCxV3IntentOutput
	ToGoogleCloudDialogflowCxV3IntentOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentOutput
}

// An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.
type GoogleCloudDialogflowCxV3IntentArgs struct {
	// Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The human-readable name of the intent, unique within the agent.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
	IsFallback pulumi.BoolPtrInput `pulumi:"isFallback"`
	// The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The collection of parameters associated with the intent.
	Parameters GoogleCloudDialogflowCxV3IntentParameterArrayInput `pulumi:"parameters"`
	// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The collection of training phrases the agent is trained on to identify the intent.
	TrainingPhrases GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayInput `pulumi:"trainingPhrases"`
}

func (GoogleCloudDialogflowCxV3IntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Intent)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentArgs) ToGoogleCloudDialogflowCxV3IntentOutput() GoogleCloudDialogflowCxV3IntentOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentArgs) ToGoogleCloudDialogflowCxV3IntentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentOutput)
}

func (i GoogleCloudDialogflowCxV3IntentArgs) ToGoogleCloudDialogflowCxV3IntentPtrOutput() GoogleCloudDialogflowCxV3IntentPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentArgs) ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentOutput).ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3IntentPtrInput is an input type that accepts GoogleCloudDialogflowCxV3IntentArgs, GoogleCloudDialogflowCxV3IntentPtr and GoogleCloudDialogflowCxV3IntentPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3IntentArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3IntentPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentPtrOutput() GoogleCloudDialogflowCxV3IntentPtrOutput
	ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentPtrOutput
}

type googleCloudDialogflowCxV3IntentPtrType GoogleCloudDialogflowCxV3IntentArgs

func GoogleCloudDialogflowCxV3IntentPtr(v *GoogleCloudDialogflowCxV3IntentArgs) GoogleCloudDialogflowCxV3IntentPtrInput {
	return (*googleCloudDialogflowCxV3IntentPtrType)(v)
}

func (*googleCloudDialogflowCxV3IntentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Intent)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3IntentPtrType) ToGoogleCloudDialogflowCxV3IntentPtrOutput() GoogleCloudDialogflowCxV3IntentPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3IntentPtrType) ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentPtrOutput)
}

// An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.
type GoogleCloudDialogflowCxV3IntentOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Intent)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentOutput) ToGoogleCloudDialogflowCxV3IntentOutput() GoogleCloudDialogflowCxV3IntentOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentOutput) ToGoogleCloudDialogflowCxV3IntentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentOutput) ToGoogleCloudDialogflowCxV3IntentPtrOutput() GoogleCloudDialogflowCxV3IntentPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3IntentOutput) ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3Intent) *GoogleCloudDialogflowCxV3Intent {
		return &v
	}).(GoogleCloudDialogflowCxV3IntentPtrOutput)
}

// Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
func (o GoogleCloudDialogflowCxV3IntentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The human-readable name of the intent, unique within the agent.
func (o GoogleCloudDialogflowCxV3IntentOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
func (o GoogleCloudDialogflowCxV3IntentOutput) IsFallback() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) *bool { return v.IsFallback }).(pulumi.BoolPtrOutput)
}

// The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
func (o GoogleCloudDialogflowCxV3IntentOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.
func (o GoogleCloudDialogflowCxV3IntentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The collection of parameters associated with the intent.
func (o GoogleCloudDialogflowCxV3IntentOutput) Parameters() GoogleCloudDialogflowCxV3IntentParameterArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) []GoogleCloudDialogflowCxV3IntentParameter {
		return v.Parameters
	}).(GoogleCloudDialogflowCxV3IntentParameterArrayOutput)
}

// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
func (o GoogleCloudDialogflowCxV3IntentOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The collection of training phrases the agent is trained on to identify the intent.
func (o GoogleCloudDialogflowCxV3IntentOutput) TrainingPhrases() GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) []GoogleCloudDialogflowCxV3IntentTrainingPhrase {
		return v.TrainingPhrases
	}).(GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput)
}

type GoogleCloudDialogflowCxV3IntentPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Intent)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentPtrOutput) ToGoogleCloudDialogflowCxV3IntentPtrOutput() GoogleCloudDialogflowCxV3IntentPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentPtrOutput) ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentPtrOutput) Elem() GoogleCloudDialogflowCxV3IntentOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) GoogleCloudDialogflowCxV3Intent {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3Intent
		return ret
	}).(GoogleCloudDialogflowCxV3IntentOutput)
}

// Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The human-readable name of the intent, unique within the agent.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) IsFallback() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) *bool {
		if v == nil {
			return nil
		}
		return v.IsFallback
	}).(pulumi.BoolPtrOutput)
}

// The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The collection of parameters associated with the intent.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) Parameters() GoogleCloudDialogflowCxV3IntentParameterArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) []GoogleCloudDialogflowCxV3IntentParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(GoogleCloudDialogflowCxV3IntentParameterArrayOutput)
}

// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// The collection of training phrases the agent is trained on to identify the intent.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) TrainingPhrases() GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) []GoogleCloudDialogflowCxV3IntentTrainingPhrase {
		if v == nil {
			return nil
		}
		return v.TrainingPhrases
	}).(GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput)
}

// Represents the intent to trigger programmatically rather than as a result of natural language processing.
type GoogleCloudDialogflowCxV3IntentInputType struct {
	// The unique identifier of the intent. Format: `projects//locations//agents//intents/`.
	Intent string `pulumi:"intent"`
}

// GoogleCloudDialogflowCxV3IntentInputTypeInput is an input type that accepts GoogleCloudDialogflowCxV3IntentInputTypeArgs and GoogleCloudDialogflowCxV3IntentInputTypeOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentInputTypeInput` via:
//
//	GoogleCloudDialogflowCxV3IntentInputTypeArgs{...}
type GoogleCloudDialogflowCxV3IntentInputTypeInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentInputTypeOutput() GoogleCloudDialogflowCxV3IntentInputTypeOutput
	ToGoogleCloudDialogflowCxV3IntentInputTypeOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentInputTypeOutput
}

// Represents the intent to trigger programmatically rather than as a result of natural language processing.
type GoogleCloudDialogflowCxV3IntentInputTypeArgs struct {
	// The unique identifier of the intent. Format: `projects//locations//agents//intents/`.
	Intent pulumi.StringInput `pulumi:"intent"`
}

func (GoogleCloudDialogflowCxV3IntentInputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentInputType)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentInputTypeArgs) ToGoogleCloudDialogflowCxV3IntentInputTypeOutput() GoogleCloudDialogflowCxV3IntentInputTypeOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentInputTypeOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentInputTypeArgs) ToGoogleCloudDialogflowCxV3IntentInputTypeOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentInputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentInputTypeOutput)
}

func (i GoogleCloudDialogflowCxV3IntentInputTypeArgs) ToGoogleCloudDialogflowCxV3IntentInputTypePtrOutput() GoogleCloudDialogflowCxV3IntentInputTypePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentInputTypePtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentInputTypeArgs) ToGoogleCloudDialogflowCxV3IntentInputTypePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentInputTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentInputTypeOutput).ToGoogleCloudDialogflowCxV3IntentInputTypePtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3IntentInputTypePtrInput is an input type that accepts GoogleCloudDialogflowCxV3IntentInputTypeArgs, GoogleCloudDialogflowCxV3IntentInputTypePtr and GoogleCloudDialogflowCxV3IntentInputTypePtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentInputTypePtrInput` via:
//
//	        GoogleCloudDialogflowCxV3IntentInputTypeArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3IntentInputTypePtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentInputTypePtrOutput() GoogleCloudDialogflowCxV3IntentInputTypePtrOutput
	ToGoogleCloudDialogflowCxV3IntentInputTypePtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentInputTypePtrOutput
}

type googleCloudDialogflowCxV3IntentInputTypePtrType GoogleCloudDialogflowCxV3IntentInputTypeArgs

func GoogleCloudDialogflowCxV3IntentInputTypePtr(v *GoogleCloudDialogflowCxV3IntentInputTypeArgs) GoogleCloudDialogflowCxV3IntentInputTypePtrInput {
	return (*googleCloudDialogflowCxV3IntentInputTypePtrType)(v)
}

func (*googleCloudDialogflowCxV3IntentInputTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3IntentInputType)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3IntentInputTypePtrType) ToGoogleCloudDialogflowCxV3IntentInputTypePtrOutput() GoogleCloudDialogflowCxV3IntentInputTypePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentInputTypePtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3IntentInputTypePtrType) ToGoogleCloudDialogflowCxV3IntentInputTypePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentInputTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentInputTypePtrOutput)
}

// Represents the intent to trigger programmatically rather than as a result of natural language processing.
type GoogleCloudDialogflowCxV3IntentInputTypeOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentInputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentInputType)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentInputTypeOutput) ToGoogleCloudDialogflowCxV3IntentInputTypeOutput() GoogleCloudDialogflowCxV3IntentInputTypeOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentInputTypeOutput) ToGoogleCloudDialogflowCxV3IntentInputTypeOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentInputTypeOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentInputTypeOutput) ToGoogleCloudDialogflowCxV3IntentInputTypePtrOutput() GoogleCloudDialogflowCxV3IntentInputTypePtrOutput {
	return o.ToGoogleCloudDialogflowCxV3IntentInputTypePtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3IntentInputTypeOutput) ToGoogleCloudDialogflowCxV3IntentInputTypePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentInputTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3IntentInputType) *GoogleCloudDialogflowCxV3IntentInputType {
		return &v
	}).(GoogleCloudDialogflowCxV3IntentInputTypePtrOutput)
}

// The unique identifier of the intent. Format: `projects//locations//agents//intents/`.
func (o GoogleCloudDialogflowCxV3IntentInputTypeOutput) Intent() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentInputType) string { return v.Intent }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3IntentInputTypePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentInputTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3IntentInputType)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentInputTypePtrOutput) ToGoogleCloudDialogflowCxV3IntentInputTypePtrOutput() GoogleCloudDialogflowCxV3IntentInputTypePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentInputTypePtrOutput) ToGoogleCloudDialogflowCxV3IntentInputTypePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentInputTypePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentInputTypePtrOutput) Elem() GoogleCloudDialogflowCxV3IntentInputTypeOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3IntentInputType) GoogleCloudDialogflowCxV3IntentInputType {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3IntentInputType
		return ret
	}).(GoogleCloudDialogflowCxV3IntentInputTypeOutput)
}

// The unique identifier of the intent. Format: `projects//locations//agents//intents/`.
func (o GoogleCloudDialogflowCxV3IntentInputTypePtrOutput) Intent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3IntentInputType) *string {
		if v == nil {
			return nil
		}
		return &v.Intent
	}).(pulumi.StringPtrOutput)
}

// Represents the intent to trigger programmatically rather than as a result of natural language processing.
type GoogleCloudDialogflowCxV3IntentInputResponse struct {
	// The unique identifier of the intent. Format: `projects//locations//agents//intents/`.
	Intent string `pulumi:"intent"`
}

// Represents the intent to trigger programmatically rather than as a result of natural language processing.
type GoogleCloudDialogflowCxV3IntentInputResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentInputResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentInputResponseOutput) ToGoogleCloudDialogflowCxV3IntentInputResponseOutput() GoogleCloudDialogflowCxV3IntentInputResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentInputResponseOutput) ToGoogleCloudDialogflowCxV3IntentInputResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentInputResponseOutput {
	return o
}

// The unique identifier of the intent. Format: `projects//locations//agents//intents/`.
func (o GoogleCloudDialogflowCxV3IntentInputResponseOutput) Intent() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentInputResponse) string { return v.Intent }).(pulumi.StringOutput)
}

// Represents an intent parameter.
type GoogleCloudDialogflowCxV3IntentParameter struct {
	// The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
	EntityType string `pulumi:"entityType"`
	// The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
	Id string `pulumi:"id"`
	// Indicates whether the parameter represents a list of values.
	IsList *bool `pulumi:"isList"`
	// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
	Redact *bool `pulumi:"redact"`
}

// GoogleCloudDialogflowCxV3IntentParameterInput is an input type that accepts GoogleCloudDialogflowCxV3IntentParameterArgs and GoogleCloudDialogflowCxV3IntentParameterOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentParameterInput` via:
//
//	GoogleCloudDialogflowCxV3IntentParameterArgs{...}
type GoogleCloudDialogflowCxV3IntentParameterInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentParameterOutput() GoogleCloudDialogflowCxV3IntentParameterOutput
	ToGoogleCloudDialogflowCxV3IntentParameterOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentParameterOutput
}

// Represents an intent parameter.
type GoogleCloudDialogflowCxV3IntentParameterArgs struct {
	// The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates whether the parameter represents a list of values.
	IsList pulumi.BoolPtrInput `pulumi:"isList"`
	// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
	Redact pulumi.BoolPtrInput `pulumi:"redact"`
}

func (GoogleCloudDialogflowCxV3IntentParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentParameter)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentParameterArgs) ToGoogleCloudDialogflowCxV3IntentParameterOutput() GoogleCloudDialogflowCxV3IntentParameterOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentParameterOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentParameterArgs) ToGoogleCloudDialogflowCxV3IntentParameterOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentParameterOutput)
}

// GoogleCloudDialogflowCxV3IntentParameterArrayInput is an input type that accepts GoogleCloudDialogflowCxV3IntentParameterArray and GoogleCloudDialogflowCxV3IntentParameterArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentParameterArrayInput` via:
//
//	GoogleCloudDialogflowCxV3IntentParameterArray{ GoogleCloudDialogflowCxV3IntentParameterArgs{...} }
type GoogleCloudDialogflowCxV3IntentParameterArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentParameterArrayOutput() GoogleCloudDialogflowCxV3IntentParameterArrayOutput
	ToGoogleCloudDialogflowCxV3IntentParameterArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentParameterArrayOutput
}

type GoogleCloudDialogflowCxV3IntentParameterArray []GoogleCloudDialogflowCxV3IntentParameterInput

func (GoogleCloudDialogflowCxV3IntentParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentParameter)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentParameterArray) ToGoogleCloudDialogflowCxV3IntentParameterArrayOutput() GoogleCloudDialogflowCxV3IntentParameterArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentParameterArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentParameterArray) ToGoogleCloudDialogflowCxV3IntentParameterArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentParameterArrayOutput)
}

// Represents an intent parameter.
type GoogleCloudDialogflowCxV3IntentParameterOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentParameter)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentParameterOutput) ToGoogleCloudDialogflowCxV3IntentParameterOutput() GoogleCloudDialogflowCxV3IntentParameterOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentParameterOutput) ToGoogleCloudDialogflowCxV3IntentParameterOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentParameterOutput {
	return o
}

// The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
func (o GoogleCloudDialogflowCxV3IntentParameterOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentParameter) string { return v.EntityType }).(pulumi.StringOutput)
}

// The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
func (o GoogleCloudDialogflowCxV3IntentParameterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentParameter) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether the parameter represents a list of values.
func (o GoogleCloudDialogflowCxV3IntentParameterOutput) IsList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentParameter) *bool { return v.IsList }).(pulumi.BoolPtrOutput)
}

// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
func (o GoogleCloudDialogflowCxV3IntentParameterOutput) Redact() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentParameter) *bool { return v.Redact }).(pulumi.BoolPtrOutput)
}

type GoogleCloudDialogflowCxV3IntentParameterArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentParameter)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentParameterArrayOutput) ToGoogleCloudDialogflowCxV3IntentParameterArrayOutput() GoogleCloudDialogflowCxV3IntentParameterArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentParameterArrayOutput) ToGoogleCloudDialogflowCxV3IntentParameterArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentParameterArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentParameterArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3IntentParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3IntentParameter {
		return vs[0].([]GoogleCloudDialogflowCxV3IntentParameter)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3IntentParameterOutput)
}

// Represents an intent parameter.
type GoogleCloudDialogflowCxV3IntentParameterResponse struct {
	// The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
	EntityType string `pulumi:"entityType"`
	// Indicates whether the parameter represents a list of values.
	IsList bool `pulumi:"isList"`
	// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
	Redact bool `pulumi:"redact"`
}

// Represents an intent parameter.
type GoogleCloudDialogflowCxV3IntentParameterResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentParameterResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentParameterResponseOutput) ToGoogleCloudDialogflowCxV3IntentParameterResponseOutput() GoogleCloudDialogflowCxV3IntentParameterResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentParameterResponseOutput) ToGoogleCloudDialogflowCxV3IntentParameterResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentParameterResponseOutput {
	return o
}

// The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
func (o GoogleCloudDialogflowCxV3IntentParameterResponseOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentParameterResponse) string { return v.EntityType }).(pulumi.StringOutput)
}

// Indicates whether the parameter represents a list of values.
func (o GoogleCloudDialogflowCxV3IntentParameterResponseOutput) IsList() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentParameterResponse) bool { return v.IsList }).(pulumi.BoolOutput)
}

// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
func (o GoogleCloudDialogflowCxV3IntentParameterResponseOutput) Redact() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentParameterResponse) bool { return v.Redact }).(pulumi.BoolOutput)
}

type GoogleCloudDialogflowCxV3IntentParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentParameterResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentParameterResponseArrayOutput) ToGoogleCloudDialogflowCxV3IntentParameterResponseArrayOutput() GoogleCloudDialogflowCxV3IntentParameterResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentParameterResponseArrayOutput) ToGoogleCloudDialogflowCxV3IntentParameterResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentParameterResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentParameterResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3IntentParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3IntentParameterResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3IntentParameterResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3IntentParameterResponseOutput)
}

// An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.
type GoogleCloudDialogflowCxV3IntentResponse struct {
	// Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
	Description string `pulumi:"description"`
	// The human-readable name of the intent, unique within the agent.
	DisplayName string `pulumi:"displayName"`
	// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
	IsFallback bool `pulumi:"isFallback"`
	// The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
	Labels map[string]string `pulumi:"labels"`
	// The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.
	Name string `pulumi:"name"`
	// The collection of parameters associated with the intent.
	Parameters []GoogleCloudDialogflowCxV3IntentParameterResponse `pulumi:"parameters"`
	// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
	Priority int `pulumi:"priority"`
	// The collection of training phrases the agent is trained on to identify the intent.
	TrainingPhrases []GoogleCloudDialogflowCxV3IntentTrainingPhraseResponse `pulumi:"trainingPhrases"`
}

// An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.
type GoogleCloudDialogflowCxV3IntentResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentResponseOutput) ToGoogleCloudDialogflowCxV3IntentResponseOutput() GoogleCloudDialogflowCxV3IntentResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentResponseOutput) ToGoogleCloudDialogflowCxV3IntentResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentResponseOutput {
	return o
}

// Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
func (o GoogleCloudDialogflowCxV3IntentResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The human-readable name of the intent, unique within the agent.
func (o GoogleCloudDialogflowCxV3IntentResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
func (o GoogleCloudDialogflowCxV3IntentResponseOutput) IsFallback() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentResponse) bool { return v.IsFallback }).(pulumi.BoolOutput)
}

// The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
func (o GoogleCloudDialogflowCxV3IntentResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentResponse) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.
func (o GoogleCloudDialogflowCxV3IntentResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The collection of parameters associated with the intent.
func (o GoogleCloudDialogflowCxV3IntentResponseOutput) Parameters() GoogleCloudDialogflowCxV3IntentParameterResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentResponse) []GoogleCloudDialogflowCxV3IntentParameterResponse {
		return v.Parameters
	}).(GoogleCloudDialogflowCxV3IntentParameterResponseArrayOutput)
}

// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
func (o GoogleCloudDialogflowCxV3IntentResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// The collection of training phrases the agent is trained on to identify the intent.
func (o GoogleCloudDialogflowCxV3IntentResponseOutput) TrainingPhrases() GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentResponse) []GoogleCloudDialogflowCxV3IntentTrainingPhraseResponse {
		return v.TrainingPhrases
	}).(GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseArrayOutput)
}

// Represents an example that the agent is trained on to identify the intent.
type GoogleCloudDialogflowCxV3IntentTrainingPhrase struct {
	// The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.
	Parts []GoogleCloudDialogflowCxV3IntentTrainingPhrasePart `pulumi:"parts"`
	// Indicates how many times this example was added to the intent.
	RepeatCount *int `pulumi:"repeatCount"`
}

// GoogleCloudDialogflowCxV3IntentTrainingPhraseInput is an input type that accepts GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs and GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentTrainingPhraseInput` via:
//
//	GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs{...}
type GoogleCloudDialogflowCxV3IntentTrainingPhraseInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentTrainingPhraseOutput() GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput
	ToGoogleCloudDialogflowCxV3IntentTrainingPhraseOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput
}

// Represents an example that the agent is trained on to identify the intent.
type GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs struct {
	// The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.
	Parts GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayInput `pulumi:"parts"`
	// Indicates how many times this example was added to the intent.
	RepeatCount pulumi.IntPtrInput `pulumi:"repeatCount"`
}

func (GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentTrainingPhrase)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseOutput() GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentTrainingPhraseOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput)
}

// GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayInput is an input type that accepts GoogleCloudDialogflowCxV3IntentTrainingPhraseArray and GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayInput` via:
//
//	GoogleCloudDialogflowCxV3IntentTrainingPhraseArray{ GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs{...} }
type GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput() GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput
	ToGoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput
}

type GoogleCloudDialogflowCxV3IntentTrainingPhraseArray []GoogleCloudDialogflowCxV3IntentTrainingPhraseInput

func (GoogleCloudDialogflowCxV3IntentTrainingPhraseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentTrainingPhrase)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhraseArray) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput() GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhraseArray) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput)
}

// Represents an example that the agent is trained on to identify the intent.
type GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentTrainingPhrase)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseOutput() GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput {
	return o
}

// The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.
func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput) Parts() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentTrainingPhrase) []GoogleCloudDialogflowCxV3IntentTrainingPhrasePart {
		return v.Parts
	}).(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput)
}

// Indicates how many times this example was added to the intent.
func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput) RepeatCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentTrainingPhrase) *int { return v.RepeatCount }).(pulumi.IntPtrOutput)
}

type GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentTrainingPhrase)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput() GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3IntentTrainingPhrase {
		return vs[0].([]GoogleCloudDialogflowCxV3IntentTrainingPhrase)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput)
}

// Represents a part of a training phrase.
type GoogleCloudDialogflowCxV3IntentTrainingPhrasePart struct {
	// The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
	ParameterId *string `pulumi:"parameterId"`
	// The text for this part.
	Text string `pulumi:"text"`
}

// GoogleCloudDialogflowCxV3IntentTrainingPhrasePartInput is an input type that accepts GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs and GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentTrainingPhrasePartInput` via:
//
//	GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs{...}
type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput
	ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput
}

// Represents a part of a training phrase.
type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs struct {
	// The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
	ParameterId pulumi.StringPtrInput `pulumi:"parameterId"`
	// The text for this part.
	Text pulumi.StringInput `pulumi:"text"`
}

func (GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentTrainingPhrasePart)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput)
}

// GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayInput is an input type that accepts GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArray and GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayInput` via:
//
//	GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArray{ GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs{...} }
type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput
	ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput
}

type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArray []GoogleCloudDialogflowCxV3IntentTrainingPhrasePartInput

func (GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentTrainingPhrasePart)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArray) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArray) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput)
}

// Represents a part of a training phrase.
type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentTrainingPhrasePart)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput {
	return o
}

// The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput) ParameterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentTrainingPhrasePart) *string { return v.ParameterId }).(pulumi.StringPtrOutput)
}

// The text for this part.
func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentTrainingPhrasePart) string { return v.Text }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentTrainingPhrasePart)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3IntentTrainingPhrasePart {
		return vs[0].([]GoogleCloudDialogflowCxV3IntentTrainingPhrasePart)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput)
}

// Represents a part of a training phrase.
type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponse struct {
	// The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
	ParameterId string `pulumi:"parameterId"`
	// The text for this part.
	Text string `pulumi:"text"`
}

// Represents a part of a training phrase.
type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseOutput() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseOutput {
	return o
}

// The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseOutput) ParameterId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponse) string { return v.ParameterId }).(pulumi.StringOutput)
}

// The text for this part.
func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponse) string { return v.Text }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseArrayOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseArrayOutput() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseArrayOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseOutput)
}

// Represents an example that the agent is trained on to identify the intent.
type GoogleCloudDialogflowCxV3IntentTrainingPhraseResponse struct {
	// The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.
	Parts []GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponse `pulumi:"parts"`
	// Indicates how many times this example was added to the intent.
	RepeatCount int `pulumi:"repeatCount"`
}

// Represents an example that the agent is trained on to identify the intent.
type GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentTrainingPhraseResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseResponseOutput() GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseOutput {
	return o
}

// The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.
func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseOutput) Parts() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentTrainingPhraseResponse) []GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponse {
		return v.Parts
	}).(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseArrayOutput)
}

// Indicates how many times this example was added to the intent.
func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseOutput) RepeatCount() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentTrainingPhraseResponse) int { return v.RepeatCount }).(pulumi.IntOutput)
}

type GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentTrainingPhraseResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseArrayOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseResponseArrayOutput() GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseArrayOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3IntentTrainingPhraseResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3IntentTrainingPhraseResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseOutput)
}

// The Knowledge Connector settings for this page or flow. This includes information such as the attached Knowledge Bases, and the way to execute fulfillment.
type GoogleCloudDialogflowCxV3KnowledgeConnectorSettings struct {
	// Optional. List of related data store connections.
	DataStoreConnections []GoogleCloudDialogflowCxV3DataStoreConnection `pulumi:"dataStoreConnections"`
	// Whether Knowledge Connector is enabled or not.
	Enabled *bool `pulumi:"enabled"`
	// The target flow to transition to. Format: `projects//locations//agents//flows/`.
	TargetFlow *string `pulumi:"targetFlow"`
	// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
	TargetPage *string `pulumi:"targetPage"`
	// The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter `$request.knowledge.answers` (contains up to the 5 highest confidence answers) and `$request.knowledge.questions` (contains the corresponding questions) to construct the fulfillment.
	TriggerFulfillment *GoogleCloudDialogflowCxV3Fulfillment `pulumi:"triggerFulfillment"`
}

// GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsArgs and GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsInput` via:
//
//	GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsArgs{...}
type GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput() GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput
	ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput
}

// The Knowledge Connector settings for this page or flow. This includes information such as the attached Knowledge Bases, and the way to execute fulfillment.
type GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsArgs struct {
	// Optional. List of related data store connections.
	DataStoreConnections GoogleCloudDialogflowCxV3DataStoreConnectionArrayInput `pulumi:"dataStoreConnections"`
	// Whether Knowledge Connector is enabled or not.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The target flow to transition to. Format: `projects//locations//agents//flows/`.
	TargetFlow pulumi.StringPtrInput `pulumi:"targetFlow"`
	// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
	TargetPage pulumi.StringPtrInput `pulumi:"targetPage"`
	// The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter `$request.knowledge.answers` (contains up to the 5 highest confidence answers) and `$request.knowledge.questions` (contains the corresponding questions) to construct the fulfillment.
	TriggerFulfillment GoogleCloudDialogflowCxV3FulfillmentPtrInput `pulumi:"triggerFulfillment"`
}

func (GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3KnowledgeConnectorSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsArgs) ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput() GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsArgs) ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsArgs) ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput() GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsArgs) ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput).ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsArgs, GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtr and GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput() GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput
}

type googleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrType GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsArgs

func GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtr(v *GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsArgs) GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrInput {
	return (*googleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3KnowledgeConnectorSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrType) ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput() GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrType) ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput)
}

// The Knowledge Connector settings for this page or flow. This includes information such as the attached Knowledge Bases, and the way to execute fulfillment.
type GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3KnowledgeConnectorSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput) ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput() GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput) ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput) ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput() GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput) ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) *GoogleCloudDialogflowCxV3KnowledgeConnectorSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput)
}

// Optional. List of related data store connections.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput) DataStoreConnections() GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) []GoogleCloudDialogflowCxV3DataStoreConnection {
		return v.DataStoreConnections
	}).(GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput)
}

// Whether Knowledge Connector is enabled or not.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The target flow to transition to. Format: `projects//locations//agents//flows/`.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput) TargetFlow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) *string { return v.TargetFlow }).(pulumi.StringPtrOutput)
}

// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput) TargetPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) *string { return v.TargetPage }).(pulumi.StringPtrOutput)
}

// The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter `$request.knowledge.answers` (contains up to the 5 highest confidence answers) and `$request.knowledge.questions` (contains the corresponding questions) to construct the fulfillment.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput) TriggerFulfillment() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) *GoogleCloudDialogflowCxV3Fulfillment {
		return v.TriggerFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

type GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3KnowledgeConnectorSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput) ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput() GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput) ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) GoogleCloudDialogflowCxV3KnowledgeConnectorSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3KnowledgeConnectorSettings
		return ret
	}).(GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput)
}

// Optional. List of related data store connections.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput) DataStoreConnections() GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) []GoogleCloudDialogflowCxV3DataStoreConnection {
		if v == nil {
			return nil
		}
		return v.DataStoreConnections
	}).(GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput)
}

// Whether Knowledge Connector is enabled or not.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The target flow to transition to. Format: `projects//locations//agents//flows/`.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput) TargetFlow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) *string {
		if v == nil {
			return nil
		}
		return v.TargetFlow
	}).(pulumi.StringPtrOutput)
}

// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput) TargetPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) *string {
		if v == nil {
			return nil
		}
		return v.TargetPage
	}).(pulumi.StringPtrOutput)
}

// The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter `$request.knowledge.answers` (contains up to the 5 highest confidence answers) and `$request.knowledge.questions` (contains the corresponding questions) to construct the fulfillment.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput) TriggerFulfillment() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3KnowledgeConnectorSettings) *GoogleCloudDialogflowCxV3Fulfillment {
		if v == nil {
			return nil
		}
		return v.TriggerFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

// The Knowledge Connector settings for this page or flow. This includes information such as the attached Knowledge Bases, and the way to execute fulfillment.
type GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponse struct {
	// Optional. List of related data store connections.
	DataStoreConnections []GoogleCloudDialogflowCxV3DataStoreConnectionResponse `pulumi:"dataStoreConnections"`
	// Whether Knowledge Connector is enabled or not.
	Enabled bool `pulumi:"enabled"`
	// The target flow to transition to. Format: `projects//locations//agents//flows/`.
	TargetFlow string `pulumi:"targetFlow"`
	// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
	TargetPage string `pulumi:"targetPage"`
	// The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter `$request.knowledge.answers` (contains up to the 5 highest confidence answers) and `$request.knowledge.questions` (contains the corresponding questions) to construct the fulfillment.
	TriggerFulfillment GoogleCloudDialogflowCxV3FulfillmentResponse `pulumi:"triggerFulfillment"`
}

// The Knowledge Connector settings for this page or flow. This includes information such as the attached Knowledge Bases, and the way to execute fulfillment.
type GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput) ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput() GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput) ToGoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput {
	return o
}

// Optional. List of related data store connections.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput) DataStoreConnections() GoogleCloudDialogflowCxV3DataStoreConnectionResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponse) []GoogleCloudDialogflowCxV3DataStoreConnectionResponse {
		return v.DataStoreConnections
	}).(GoogleCloudDialogflowCxV3DataStoreConnectionResponseArrayOutput)
}

// Whether Knowledge Connector is enabled or not.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The target flow to transition to. Format: `projects//locations//agents//flows/`.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput) TargetFlow() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponse) string { return v.TargetFlow }).(pulumi.StringOutput)
}

// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput) TargetPage() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponse) string { return v.TargetPage }).(pulumi.StringOutput)
}

// The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter `$request.knowledge.answers` (contains up to the 5 highest confidence answers) and `$request.knowledge.questions` (contains the corresponding questions) to construct the fulfillment.
func (o GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput) TriggerFulfillment() GoogleCloudDialogflowCxV3FulfillmentResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponse) GoogleCloudDialogflowCxV3FulfillmentResponse {
		return v.TriggerFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentResponseOutput)
}

// Settings related to NLU.
type GoogleCloudDialogflowCxV3NluSettings struct {
	// To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
	ClassificationThreshold *float64 `pulumi:"classificationThreshold"`
	// Indicates NLU model training mode.
	ModelTrainingMode *GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode `pulumi:"modelTrainingMode"`
	// Indicates the type of NLU model.
	ModelType *GoogleCloudDialogflowCxV3NluSettingsModelType `pulumi:"modelType"`
}

// GoogleCloudDialogflowCxV3NluSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3NluSettingsArgs and GoogleCloudDialogflowCxV3NluSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3NluSettingsInput` via:
//
//	GoogleCloudDialogflowCxV3NluSettingsArgs{...}
type GoogleCloudDialogflowCxV3NluSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3NluSettingsOutput() GoogleCloudDialogflowCxV3NluSettingsOutput
	ToGoogleCloudDialogflowCxV3NluSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3NluSettingsOutput
}

// Settings related to NLU.
type GoogleCloudDialogflowCxV3NluSettingsArgs struct {
	// To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
	ClassificationThreshold pulumi.Float64PtrInput `pulumi:"classificationThreshold"`
	// Indicates NLU model training mode.
	ModelTrainingMode GoogleCloudDialogflowCxV3NluSettingsModelTrainingModePtrInput `pulumi:"modelTrainingMode"`
	// Indicates the type of NLU model.
	ModelType GoogleCloudDialogflowCxV3NluSettingsModelTypePtrInput `pulumi:"modelType"`
}

func (GoogleCloudDialogflowCxV3NluSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3NluSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3NluSettingsArgs) ToGoogleCloudDialogflowCxV3NluSettingsOutput() GoogleCloudDialogflowCxV3NluSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3NluSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3NluSettingsArgs) ToGoogleCloudDialogflowCxV3NluSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3NluSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3NluSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3NluSettingsArgs) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutput() GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3NluSettingsArgs) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3NluSettingsOutput).ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3NluSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3NluSettingsArgs, GoogleCloudDialogflowCxV3NluSettingsPtr and GoogleCloudDialogflowCxV3NluSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3NluSettingsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3NluSettingsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3NluSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3NluSettingsPtrOutput() GoogleCloudDialogflowCxV3NluSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3NluSettingsPtrOutput
}

type googleCloudDialogflowCxV3NluSettingsPtrType GoogleCloudDialogflowCxV3NluSettingsArgs

func GoogleCloudDialogflowCxV3NluSettingsPtr(v *GoogleCloudDialogflowCxV3NluSettingsArgs) GoogleCloudDialogflowCxV3NluSettingsPtrInput {
	return (*googleCloudDialogflowCxV3NluSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3NluSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3NluSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3NluSettingsPtrType) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutput() GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3NluSettingsPtrType) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3NluSettingsPtrOutput)
}

// Settings related to NLU.
type GoogleCloudDialogflowCxV3NluSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3NluSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3NluSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3NluSettingsOutput) ToGoogleCloudDialogflowCxV3NluSettingsOutput() GoogleCloudDialogflowCxV3NluSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3NluSettingsOutput) ToGoogleCloudDialogflowCxV3NluSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3NluSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3NluSettingsOutput) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutput() GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3NluSettingsOutput) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3NluSettings) *GoogleCloudDialogflowCxV3NluSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3NluSettingsPtrOutput)
}

// To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
func (o GoogleCloudDialogflowCxV3NluSettingsOutput) ClassificationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3NluSettings) *float64 { return v.ClassificationThreshold }).(pulumi.Float64PtrOutput)
}

// Indicates NLU model training mode.
func (o GoogleCloudDialogflowCxV3NluSettingsOutput) ModelTrainingMode() GoogleCloudDialogflowCxV3NluSettingsModelTrainingModePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3NluSettings) *GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode {
		return v.ModelTrainingMode
	}).(GoogleCloudDialogflowCxV3NluSettingsModelTrainingModePtrOutput)
}

// Indicates the type of NLU model.
func (o GoogleCloudDialogflowCxV3NluSettingsOutput) ModelType() GoogleCloudDialogflowCxV3NluSettingsModelTypePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3NluSettings) *GoogleCloudDialogflowCxV3NluSettingsModelType {
		return v.ModelType
	}).(GoogleCloudDialogflowCxV3NluSettingsModelTypePtrOutput)
}

type GoogleCloudDialogflowCxV3NluSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3NluSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3NluSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3NluSettingsPtrOutput) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutput() GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3NluSettingsPtrOutput) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3NluSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3NluSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3NluSettings) GoogleCloudDialogflowCxV3NluSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3NluSettings
		return ret
	}).(GoogleCloudDialogflowCxV3NluSettingsOutput)
}

// To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
func (o GoogleCloudDialogflowCxV3NluSettingsPtrOutput) ClassificationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3NluSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.ClassificationThreshold
	}).(pulumi.Float64PtrOutput)
}

// Indicates NLU model training mode.
func (o GoogleCloudDialogflowCxV3NluSettingsPtrOutput) ModelTrainingMode() GoogleCloudDialogflowCxV3NluSettingsModelTrainingModePtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3NluSettings) *GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode {
		if v == nil {
			return nil
		}
		return v.ModelTrainingMode
	}).(GoogleCloudDialogflowCxV3NluSettingsModelTrainingModePtrOutput)
}

// Indicates the type of NLU model.
func (o GoogleCloudDialogflowCxV3NluSettingsPtrOutput) ModelType() GoogleCloudDialogflowCxV3NluSettingsModelTypePtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3NluSettings) *GoogleCloudDialogflowCxV3NluSettingsModelType {
		if v == nil {
			return nil
		}
		return v.ModelType
	}).(GoogleCloudDialogflowCxV3NluSettingsModelTypePtrOutput)
}

// Settings related to NLU.
type GoogleCloudDialogflowCxV3NluSettingsResponse struct {
	// To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
	ClassificationThreshold float64 `pulumi:"classificationThreshold"`
	// Indicates NLU model training mode.
	ModelTrainingMode string `pulumi:"modelTrainingMode"`
	// Indicates the type of NLU model.
	ModelType string `pulumi:"modelType"`
}

// Settings related to NLU.
type GoogleCloudDialogflowCxV3NluSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3NluSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3NluSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3NluSettingsResponseOutput) ToGoogleCloudDialogflowCxV3NluSettingsResponseOutput() GoogleCloudDialogflowCxV3NluSettingsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3NluSettingsResponseOutput) ToGoogleCloudDialogflowCxV3NluSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3NluSettingsResponseOutput {
	return o
}

// To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
func (o GoogleCloudDialogflowCxV3NluSettingsResponseOutput) ClassificationThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3NluSettingsResponse) float64 { return v.ClassificationThreshold }).(pulumi.Float64Output)
}

// Indicates NLU model training mode.
func (o GoogleCloudDialogflowCxV3NluSettingsResponseOutput) ModelTrainingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3NluSettingsResponse) string { return v.ModelTrainingMode }).(pulumi.StringOutput)
}

// Indicates the type of NLU model.
func (o GoogleCloudDialogflowCxV3NluSettingsResponseOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3NluSettingsResponse) string { return v.ModelType }).(pulumi.StringOutput)
}

// A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
type GoogleCloudDialogflowCxV3Page struct {
	// Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at the higher level.
	AdvancedSettings *GoogleCloudDialogflowCxV3AdvancedSettings `pulumi:"advancedSettings"`
	// The human-readable name of the page, unique within the flow.
	DisplayName string `pulumi:"displayName"`
	// The fulfillment to call when the session is entering the page.
	EntryFulfillment *GoogleCloudDialogflowCxV3Fulfillment `pulumi:"entryFulfillment"`
	// Handlers associated with the page to handle events such as webhook errors, no match or no input.
	EventHandlers []GoogleCloudDialogflowCxV3EventHandler `pulumi:"eventHandlers"`
	// The form associated with the page, used for collecting parameters relevant to the page.
	Form *GoogleCloudDialogflowCxV3Form `pulumi:"form"`
	// Optional. Knowledge connector configuration.
	KnowledgeConnectorSettings *GoogleCloudDialogflowCxV3KnowledgeConnectorSettings `pulumi:"knowledgeConnectorSettings"`
	// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.
	Name *string `pulumi:"name"`
	// Ordered list of `TransitionRouteGroups` added to the page. Transition route groups must be unique within a page. If the page links both flow-level transition route groups and agent-level transition route groups, the flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/` or `projects//locations//agents//transitionRouteGroups/` for agent-level groups.
	TransitionRouteGroups []string `pulumi:"transitionRouteGroups"`
	// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
	TransitionRoutes []GoogleCloudDialogflowCxV3TransitionRoute `pulumi:"transitionRoutes"`
}

// GoogleCloudDialogflowCxV3PageInput is an input type that accepts GoogleCloudDialogflowCxV3PageArgs and GoogleCloudDialogflowCxV3PageOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3PageInput` via:
//
//	GoogleCloudDialogflowCxV3PageArgs{...}
type GoogleCloudDialogflowCxV3PageInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3PageOutput() GoogleCloudDialogflowCxV3PageOutput
	ToGoogleCloudDialogflowCxV3PageOutputWithContext(context.Context) GoogleCloudDialogflowCxV3PageOutput
}

// A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
type GoogleCloudDialogflowCxV3PageArgs struct {
	// Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at the higher level.
	AdvancedSettings GoogleCloudDialogflowCxV3AdvancedSettingsPtrInput `pulumi:"advancedSettings"`
	// The human-readable name of the page, unique within the flow.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The fulfillment to call when the session is entering the page.
	EntryFulfillment GoogleCloudDialogflowCxV3FulfillmentPtrInput `pulumi:"entryFulfillment"`
	// Handlers associated with the page to handle events such as webhook errors, no match or no input.
	EventHandlers GoogleCloudDialogflowCxV3EventHandlerArrayInput `pulumi:"eventHandlers"`
	// The form associated with the page, used for collecting parameters relevant to the page.
	Form GoogleCloudDialogflowCxV3FormPtrInput `pulumi:"form"`
	// Optional. Knowledge connector configuration.
	KnowledgeConnectorSettings GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrInput `pulumi:"knowledgeConnectorSettings"`
	// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Ordered list of `TransitionRouteGroups` added to the page. Transition route groups must be unique within a page. If the page links both flow-level transition route groups and agent-level transition route groups, the flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/` or `projects//locations//agents//transitionRouteGroups/` for agent-level groups.
	TransitionRouteGroups pulumi.StringArrayInput `pulumi:"transitionRouteGroups"`
	// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
	TransitionRoutes GoogleCloudDialogflowCxV3TransitionRouteArrayInput `pulumi:"transitionRoutes"`
}

func (GoogleCloudDialogflowCxV3PageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Page)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3PageArgs) ToGoogleCloudDialogflowCxV3PageOutput() GoogleCloudDialogflowCxV3PageOutput {
	return i.ToGoogleCloudDialogflowCxV3PageOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3PageArgs) ToGoogleCloudDialogflowCxV3PageOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3PageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3PageOutput)
}

func (i GoogleCloudDialogflowCxV3PageArgs) ToGoogleCloudDialogflowCxV3PagePtrOutput() GoogleCloudDialogflowCxV3PagePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3PageArgs) ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3PagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3PageOutput).ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3PagePtrInput is an input type that accepts GoogleCloudDialogflowCxV3PageArgs, GoogleCloudDialogflowCxV3PagePtr and GoogleCloudDialogflowCxV3PagePtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3PagePtrInput` via:
//
//	        GoogleCloudDialogflowCxV3PageArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3PagePtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3PagePtrOutput() GoogleCloudDialogflowCxV3PagePtrOutput
	ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3PagePtrOutput
}

type googleCloudDialogflowCxV3PagePtrType GoogleCloudDialogflowCxV3PageArgs

func GoogleCloudDialogflowCxV3PagePtr(v *GoogleCloudDialogflowCxV3PageArgs) GoogleCloudDialogflowCxV3PagePtrInput {
	return (*googleCloudDialogflowCxV3PagePtrType)(v)
}

func (*googleCloudDialogflowCxV3PagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Page)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3PagePtrType) ToGoogleCloudDialogflowCxV3PagePtrOutput() GoogleCloudDialogflowCxV3PagePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3PagePtrType) ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3PagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3PagePtrOutput)
}

// A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
type GoogleCloudDialogflowCxV3PageOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3PageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Page)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3PageOutput) ToGoogleCloudDialogflowCxV3PageOutput() GoogleCloudDialogflowCxV3PageOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3PageOutput) ToGoogleCloudDialogflowCxV3PageOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3PageOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3PageOutput) ToGoogleCloudDialogflowCxV3PagePtrOutput() GoogleCloudDialogflowCxV3PagePtrOutput {
	return o.ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3PageOutput) ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3PagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3Page) *GoogleCloudDialogflowCxV3Page {
		return &v
	}).(GoogleCloudDialogflowCxV3PagePtrOutput)
}

// Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at the higher level.
func (o GoogleCloudDialogflowCxV3PageOutput) AdvancedSettings() GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) *GoogleCloudDialogflowCxV3AdvancedSettings {
		return v.AdvancedSettings
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput)
}

// The human-readable name of the page, unique within the flow.
func (o GoogleCloudDialogflowCxV3PageOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The fulfillment to call when the session is entering the page.
func (o GoogleCloudDialogflowCxV3PageOutput) EntryFulfillment() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) *GoogleCloudDialogflowCxV3Fulfillment { return v.EntryFulfillment }).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

// Handlers associated with the page to handle events such as webhook errors, no match or no input.
func (o GoogleCloudDialogflowCxV3PageOutput) EventHandlers() GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) []GoogleCloudDialogflowCxV3EventHandler { return v.EventHandlers }).(GoogleCloudDialogflowCxV3EventHandlerArrayOutput)
}

// The form associated with the page, used for collecting parameters relevant to the page.
func (o GoogleCloudDialogflowCxV3PageOutput) Form() GoogleCloudDialogflowCxV3FormPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) *GoogleCloudDialogflowCxV3Form { return v.Form }).(GoogleCloudDialogflowCxV3FormPtrOutput)
}

// Optional. Knowledge connector configuration.
func (o GoogleCloudDialogflowCxV3PageOutput) KnowledgeConnectorSettings() GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) *GoogleCloudDialogflowCxV3KnowledgeConnectorSettings {
		return v.KnowledgeConnectorSettings
	}).(GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput)
}

// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.
func (o GoogleCloudDialogflowCxV3PageOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Ordered list of `TransitionRouteGroups` added to the page. Transition route groups must be unique within a page. If the page links both flow-level transition route groups and agent-level transition route groups, the flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/` or `projects//locations//agents//transitionRouteGroups/` for agent-level groups.
func (o GoogleCloudDialogflowCxV3PageOutput) TransitionRouteGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) []string { return v.TransitionRouteGroups }).(pulumi.StringArrayOutput)
}

// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
func (o GoogleCloudDialogflowCxV3PageOutput) TransitionRoutes() GoogleCloudDialogflowCxV3TransitionRouteArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) []GoogleCloudDialogflowCxV3TransitionRoute {
		return v.TransitionRoutes
	}).(GoogleCloudDialogflowCxV3TransitionRouteArrayOutput)
}

type GoogleCloudDialogflowCxV3PagePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3PagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Page)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3PagePtrOutput) ToGoogleCloudDialogflowCxV3PagePtrOutput() GoogleCloudDialogflowCxV3PagePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3PagePtrOutput) ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3PagePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3PagePtrOutput) Elem() GoogleCloudDialogflowCxV3PageOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) GoogleCloudDialogflowCxV3Page {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3Page
		return ret
	}).(GoogleCloudDialogflowCxV3PageOutput)
}

// Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at the higher level.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) AdvancedSettings() GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) *GoogleCloudDialogflowCxV3AdvancedSettings {
		if v == nil {
			return nil
		}
		return v.AdvancedSettings
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput)
}

// The human-readable name of the page, unique within the flow.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The fulfillment to call when the session is entering the page.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) EntryFulfillment() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) *GoogleCloudDialogflowCxV3Fulfillment {
		if v == nil {
			return nil
		}
		return v.EntryFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

// Handlers associated with the page to handle events such as webhook errors, no match or no input.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) EventHandlers() GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) []GoogleCloudDialogflowCxV3EventHandler {
		if v == nil {
			return nil
		}
		return v.EventHandlers
	}).(GoogleCloudDialogflowCxV3EventHandlerArrayOutput)
}

// The form associated with the page, used for collecting parameters relevant to the page.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) Form() GoogleCloudDialogflowCxV3FormPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) *GoogleCloudDialogflowCxV3Form {
		if v == nil {
			return nil
		}
		return v.Form
	}).(GoogleCloudDialogflowCxV3FormPtrOutput)
}

// Optional. Knowledge connector configuration.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) KnowledgeConnectorSettings() GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) *GoogleCloudDialogflowCxV3KnowledgeConnectorSettings {
		if v == nil {
			return nil
		}
		return v.KnowledgeConnectorSettings
	}).(GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput)
}

// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Ordered list of `TransitionRouteGroups` added to the page. Transition route groups must be unique within a page. If the page links both flow-level transition route groups and agent-level transition route groups, the flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/` or `projects//locations//agents//transitionRouteGroups/` for agent-level groups.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) TransitionRouteGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) []string {
		if v == nil {
			return nil
		}
		return v.TransitionRouteGroups
	}).(pulumi.StringArrayOutput)
}

// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) TransitionRoutes() GoogleCloudDialogflowCxV3TransitionRouteArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) []GoogleCloudDialogflowCxV3TransitionRoute {
		if v == nil {
			return nil
		}
		return v.TransitionRoutes
	}).(GoogleCloudDialogflowCxV3TransitionRouteArrayOutput)
}

// A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
type GoogleCloudDialogflowCxV3PageResponse struct {
	// Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at the higher level.
	AdvancedSettings GoogleCloudDialogflowCxV3AdvancedSettingsResponse `pulumi:"advancedSettings"`
	// The human-readable name of the page, unique within the flow.
	DisplayName string `pulumi:"displayName"`
	// The fulfillment to call when the session is entering the page.
	EntryFulfillment GoogleCloudDialogflowCxV3FulfillmentResponse `pulumi:"entryFulfillment"`
	// Handlers associated with the page to handle events such as webhook errors, no match or no input.
	EventHandlers []GoogleCloudDialogflowCxV3EventHandlerResponse `pulumi:"eventHandlers"`
	// The form associated with the page, used for collecting parameters relevant to the page.
	Form GoogleCloudDialogflowCxV3FormResponse `pulumi:"form"`
	// Optional. Knowledge connector configuration.
	KnowledgeConnectorSettings GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponse `pulumi:"knowledgeConnectorSettings"`
	// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.
	Name string `pulumi:"name"`
	// Ordered list of `TransitionRouteGroups` added to the page. Transition route groups must be unique within a page. If the page links both flow-level transition route groups and agent-level transition route groups, the flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/` or `projects//locations//agents//transitionRouteGroups/` for agent-level groups.
	TransitionRouteGroups []string `pulumi:"transitionRouteGroups"`
	// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
	TransitionRoutes []GoogleCloudDialogflowCxV3TransitionRouteResponse `pulumi:"transitionRoutes"`
}

// A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
type GoogleCloudDialogflowCxV3PageResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3PageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3PageResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3PageResponseOutput) ToGoogleCloudDialogflowCxV3PageResponseOutput() GoogleCloudDialogflowCxV3PageResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3PageResponseOutput) ToGoogleCloudDialogflowCxV3PageResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3PageResponseOutput {
	return o
}

// Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at the higher level.
func (o GoogleCloudDialogflowCxV3PageResponseOutput) AdvancedSettings() GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3PageResponse) GoogleCloudDialogflowCxV3AdvancedSettingsResponse {
		return v.AdvancedSettings
	}).(GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput)
}

// The human-readable name of the page, unique within the flow.
func (o GoogleCloudDialogflowCxV3PageResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3PageResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The fulfillment to call when the session is entering the page.
func (o GoogleCloudDialogflowCxV3PageResponseOutput) EntryFulfillment() GoogleCloudDialogflowCxV3FulfillmentResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3PageResponse) GoogleCloudDialogflowCxV3FulfillmentResponse {
		return v.EntryFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentResponseOutput)
}

// Handlers associated with the page to handle events such as webhook errors, no match or no input.
func (o GoogleCloudDialogflowCxV3PageResponseOutput) EventHandlers() GoogleCloudDialogflowCxV3EventHandlerResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3PageResponse) []GoogleCloudDialogflowCxV3EventHandlerResponse {
		return v.EventHandlers
	}).(GoogleCloudDialogflowCxV3EventHandlerResponseArrayOutput)
}

// The form associated with the page, used for collecting parameters relevant to the page.
func (o GoogleCloudDialogflowCxV3PageResponseOutput) Form() GoogleCloudDialogflowCxV3FormResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3PageResponse) GoogleCloudDialogflowCxV3FormResponse { return v.Form }).(GoogleCloudDialogflowCxV3FormResponseOutput)
}

// Optional. Knowledge connector configuration.
func (o GoogleCloudDialogflowCxV3PageResponseOutput) KnowledgeConnectorSettings() GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3PageResponse) GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponse {
		return v.KnowledgeConnectorSettings
	}).(GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput)
}

// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.
func (o GoogleCloudDialogflowCxV3PageResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3PageResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Ordered list of `TransitionRouteGroups` added to the page. Transition route groups must be unique within a page. If the page links both flow-level transition route groups and agent-level transition route groups, the flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/` or `projects//locations//agents//transitionRouteGroups/` for agent-level groups.
func (o GoogleCloudDialogflowCxV3PageResponseOutput) TransitionRouteGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3PageResponse) []string { return v.TransitionRouteGroups }).(pulumi.StringArrayOutput)
}

// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
func (o GoogleCloudDialogflowCxV3PageResponseOutput) TransitionRoutes() GoogleCloudDialogflowCxV3TransitionRouteResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3PageResponse) []GoogleCloudDialogflowCxV3TransitionRouteResponse {
		return v.TransitionRoutes
	}).(GoogleCloudDialogflowCxV3TransitionRouteResponseArrayOutput)
}

// Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. 5. DTMF digits to invoke an intent and fill in parameter value.
type GoogleCloudDialogflowCxV3QueryInput struct {
	// The natural language speech audio to be processed.
	Audio *GoogleCloudDialogflowCxV3AudioInput `pulumi:"audio"`
	// The DTMF event to be handled.
	Dtmf *GoogleCloudDialogflowCxV3DtmfInput `pulumi:"dtmf"`
	// The event to be triggered.
	Event *GoogleCloudDialogflowCxV3EventInput `pulumi:"event"`
	// The intent to be triggered.
	Intent *GoogleCloudDialogflowCxV3IntentInputType `pulumi:"intent"`
	// The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
	LanguageCode string `pulumi:"languageCode"`
	// The natural language text to be processed.
	Text *GoogleCloudDialogflowCxV3TextInput `pulumi:"text"`
}

// GoogleCloudDialogflowCxV3QueryInputInput is an input type that accepts GoogleCloudDialogflowCxV3QueryInputArgs and GoogleCloudDialogflowCxV3QueryInputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3QueryInputInput` via:
//
//	GoogleCloudDialogflowCxV3QueryInputArgs{...}
type GoogleCloudDialogflowCxV3QueryInputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3QueryInputOutput() GoogleCloudDialogflowCxV3QueryInputOutput
	ToGoogleCloudDialogflowCxV3QueryInputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3QueryInputOutput
}

// Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. 5. DTMF digits to invoke an intent and fill in parameter value.
type GoogleCloudDialogflowCxV3QueryInputArgs struct {
	// The natural language speech audio to be processed.
	Audio GoogleCloudDialogflowCxV3AudioInputPtrInput `pulumi:"audio"`
	// The DTMF event to be handled.
	Dtmf GoogleCloudDialogflowCxV3DtmfInputPtrInput `pulumi:"dtmf"`
	// The event to be triggered.
	Event GoogleCloudDialogflowCxV3EventInputPtrInput `pulumi:"event"`
	// The intent to be triggered.
	Intent GoogleCloudDialogflowCxV3IntentInputTypePtrInput `pulumi:"intent"`
	// The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
	LanguageCode pulumi.StringInput `pulumi:"languageCode"`
	// The natural language text to be processed.
	Text GoogleCloudDialogflowCxV3TextInputPtrInput `pulumi:"text"`
}

func (GoogleCloudDialogflowCxV3QueryInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3QueryInput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3QueryInputArgs) ToGoogleCloudDialogflowCxV3QueryInputOutput() GoogleCloudDialogflowCxV3QueryInputOutput {
	return i.ToGoogleCloudDialogflowCxV3QueryInputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3QueryInputArgs) ToGoogleCloudDialogflowCxV3QueryInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3QueryInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3QueryInputOutput)
}

func (i GoogleCloudDialogflowCxV3QueryInputArgs) ToGoogleCloudDialogflowCxV3QueryInputPtrOutput() GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3QueryInputArgs) ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3QueryInputOutput).ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3QueryInputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3QueryInputArgs, GoogleCloudDialogflowCxV3QueryInputPtr and GoogleCloudDialogflowCxV3QueryInputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3QueryInputPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3QueryInputArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3QueryInputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3QueryInputPtrOutput() GoogleCloudDialogflowCxV3QueryInputPtrOutput
	ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3QueryInputPtrOutput
}

type googleCloudDialogflowCxV3QueryInputPtrType GoogleCloudDialogflowCxV3QueryInputArgs

func GoogleCloudDialogflowCxV3QueryInputPtr(v *GoogleCloudDialogflowCxV3QueryInputArgs) GoogleCloudDialogflowCxV3QueryInputPtrInput {
	return (*googleCloudDialogflowCxV3QueryInputPtrType)(v)
}

func (*googleCloudDialogflowCxV3QueryInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3QueryInput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3QueryInputPtrType) ToGoogleCloudDialogflowCxV3QueryInputPtrOutput() GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3QueryInputPtrType) ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3QueryInputPtrOutput)
}

// Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. 5. DTMF digits to invoke an intent and fill in parameter value.
type GoogleCloudDialogflowCxV3QueryInputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3QueryInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3QueryInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3QueryInputOutput) ToGoogleCloudDialogflowCxV3QueryInputOutput() GoogleCloudDialogflowCxV3QueryInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3QueryInputOutput) ToGoogleCloudDialogflowCxV3QueryInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3QueryInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3QueryInputOutput) ToGoogleCloudDialogflowCxV3QueryInputPtrOutput() GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3QueryInputOutput) ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3QueryInput {
		return &v
	}).(GoogleCloudDialogflowCxV3QueryInputPtrOutput)
}

// The natural language speech audio to be processed.
func (o GoogleCloudDialogflowCxV3QueryInputOutput) Audio() GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3AudioInput { return v.Audio }).(GoogleCloudDialogflowCxV3AudioInputPtrOutput)
}

// The DTMF event to be handled.
func (o GoogleCloudDialogflowCxV3QueryInputOutput) Dtmf() GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3DtmfInput { return v.Dtmf }).(GoogleCloudDialogflowCxV3DtmfInputPtrOutput)
}

// The event to be triggered.
func (o GoogleCloudDialogflowCxV3QueryInputOutput) Event() GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3EventInput { return v.Event }).(GoogleCloudDialogflowCxV3EventInputPtrOutput)
}

// The intent to be triggered.
func (o GoogleCloudDialogflowCxV3QueryInputOutput) Intent() GoogleCloudDialogflowCxV3IntentInputTypePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3IntentInputType { return v.Intent }).(GoogleCloudDialogflowCxV3IntentInputTypePtrOutput)
}

// The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
func (o GoogleCloudDialogflowCxV3QueryInputOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInput) string { return v.LanguageCode }).(pulumi.StringOutput)
}

// The natural language text to be processed.
func (o GoogleCloudDialogflowCxV3QueryInputOutput) Text() GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3TextInput { return v.Text }).(GoogleCloudDialogflowCxV3TextInputPtrOutput)
}

type GoogleCloudDialogflowCxV3QueryInputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3QueryInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3QueryInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) ToGoogleCloudDialogflowCxV3QueryInputPtrOutput() GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) Elem() GoogleCloudDialogflowCxV3QueryInputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3QueryInput) GoogleCloudDialogflowCxV3QueryInput {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3QueryInput
		return ret
	}).(GoogleCloudDialogflowCxV3QueryInputOutput)
}

// The natural language speech audio to be processed.
func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) Audio() GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3AudioInput {
		if v == nil {
			return nil
		}
		return v.Audio
	}).(GoogleCloudDialogflowCxV3AudioInputPtrOutput)
}

// The DTMF event to be handled.
func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) Dtmf() GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3DtmfInput {
		if v == nil {
			return nil
		}
		return v.Dtmf
	}).(GoogleCloudDialogflowCxV3DtmfInputPtrOutput)
}

// The event to be triggered.
func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) Event() GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3EventInput {
		if v == nil {
			return nil
		}
		return v.Event
	}).(GoogleCloudDialogflowCxV3EventInputPtrOutput)
}

// The intent to be triggered.
func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) Intent() GoogleCloudDialogflowCxV3IntentInputTypePtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3IntentInputType {
		if v == nil {
			return nil
		}
		return v.Intent
	}).(GoogleCloudDialogflowCxV3IntentInputTypePtrOutput)
}

// The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3QueryInput) *string {
		if v == nil {
			return nil
		}
		return &v.LanguageCode
	}).(pulumi.StringPtrOutput)
}

// The natural language text to be processed.
func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) Text() GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3TextInput {
		if v == nil {
			return nil
		}
		return v.Text
	}).(GoogleCloudDialogflowCxV3TextInputPtrOutput)
}

// Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. 5. DTMF digits to invoke an intent and fill in parameter value.
type GoogleCloudDialogflowCxV3QueryInputResponse struct {
	// The natural language speech audio to be processed.
	Audio GoogleCloudDialogflowCxV3AudioInputResponse `pulumi:"audio"`
	// The DTMF event to be handled.
	Dtmf GoogleCloudDialogflowCxV3DtmfInputResponse `pulumi:"dtmf"`
	// The event to be triggered.
	Event GoogleCloudDialogflowCxV3EventInputResponse `pulumi:"event"`
	// The intent to be triggered.
	Intent GoogleCloudDialogflowCxV3IntentInputResponse `pulumi:"intent"`
	// The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
	LanguageCode string `pulumi:"languageCode"`
	// The natural language text to be processed.
	Text GoogleCloudDialogflowCxV3TextInputResponse `pulumi:"text"`
}

// Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. 5. DTMF digits to invoke an intent and fill in parameter value.
type GoogleCloudDialogflowCxV3QueryInputResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3QueryInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3QueryInputResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3QueryInputResponseOutput) ToGoogleCloudDialogflowCxV3QueryInputResponseOutput() GoogleCloudDialogflowCxV3QueryInputResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3QueryInputResponseOutput) ToGoogleCloudDialogflowCxV3QueryInputResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3QueryInputResponseOutput {
	return o
}

// The natural language speech audio to be processed.
func (o GoogleCloudDialogflowCxV3QueryInputResponseOutput) Audio() GoogleCloudDialogflowCxV3AudioInputResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInputResponse) GoogleCloudDialogflowCxV3AudioInputResponse {
		return v.Audio
	}).(GoogleCloudDialogflowCxV3AudioInputResponseOutput)
}

// The DTMF event to be handled.
func (o GoogleCloudDialogflowCxV3QueryInputResponseOutput) Dtmf() GoogleCloudDialogflowCxV3DtmfInputResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInputResponse) GoogleCloudDialogflowCxV3DtmfInputResponse {
		return v.Dtmf
	}).(GoogleCloudDialogflowCxV3DtmfInputResponseOutput)
}

// The event to be triggered.
func (o GoogleCloudDialogflowCxV3QueryInputResponseOutput) Event() GoogleCloudDialogflowCxV3EventInputResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInputResponse) GoogleCloudDialogflowCxV3EventInputResponse {
		return v.Event
	}).(GoogleCloudDialogflowCxV3EventInputResponseOutput)
}

// The intent to be triggered.
func (o GoogleCloudDialogflowCxV3QueryInputResponseOutput) Intent() GoogleCloudDialogflowCxV3IntentInputResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInputResponse) GoogleCloudDialogflowCxV3IntentInputResponse {
		return v.Intent
	}).(GoogleCloudDialogflowCxV3IntentInputResponseOutput)
}

// The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
func (o GoogleCloudDialogflowCxV3QueryInputResponseOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInputResponse) string { return v.LanguageCode }).(pulumi.StringOutput)
}

// The natural language text to be processed.
func (o GoogleCloudDialogflowCxV3QueryInputResponseOutput) Text() GoogleCloudDialogflowCxV3TextInputResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInputResponse) GoogleCloudDialogflowCxV3TextInputResponse {
		return v.Text
	}).(GoogleCloudDialogflowCxV3TextInputResponseOutput)
}

// Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.
type GoogleCloudDialogflowCxV3ResponseMessage struct {
	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel *string `pulumi:"channel"`
	// Indicates that the conversation succeeded.
	ConversationSuccess *GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess `pulumi:"conversationSuccess"`
	// Represents info card for knowledge answers, to be better rendered in Dialogflow Messenger.
	KnowledgeInfoCard *GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard `pulumi:"knowledgeInfoCard"`
	// Hands off conversation to a human agent.
	LiveAgentHandoff *GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff `pulumi:"liveAgentHandoff"`
	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	OutputAudioText *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText `pulumi:"outputAudioText"`
	// Returns a response containing a custom, platform-specific payload.
	Payload map[string]interface{} `pulumi:"payload"`
	// Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
	PlayAudio *GoogleCloudDialogflowCxV3ResponseMessagePlayAudio `pulumi:"playAudio"`
	// Response type.
	ResponseType *GoogleCloudDialogflowCxV3ResponseMessageResponseType `pulumi:"responseType"`
	// A signal that the client should transfer the phone call connected to this agent to a third-party endpoint.
	TelephonyTransferCall *GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall `pulumi:"telephonyTransferCall"`
	// Returns a text response.
	Text *GoogleCloudDialogflowCxV3ResponseMessageText `pulumi:"text"`
}

// GoogleCloudDialogflowCxV3ResponseMessageInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageArgs and GoogleCloudDialogflowCxV3ResponseMessageOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageInput` via:
//
//	GoogleCloudDialogflowCxV3ResponseMessageArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageOutput() GoogleCloudDialogflowCxV3ResponseMessageOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutput
}

// Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.
type GoogleCloudDialogflowCxV3ResponseMessageArgs struct {
	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel pulumi.StringPtrInput `pulumi:"channel"`
	// Indicates that the conversation succeeded.
	ConversationSuccess GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrInput `pulumi:"conversationSuccess"`
	// Represents info card for knowledge answers, to be better rendered in Dialogflow Messenger.
	KnowledgeInfoCard GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrInput `pulumi:"knowledgeInfoCard"`
	// Hands off conversation to a human agent.
	LiveAgentHandoff GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrInput `pulumi:"liveAgentHandoff"`
	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	OutputAudioText GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrInput `pulumi:"outputAudioText"`
	// Returns a response containing a custom, platform-specific payload.
	Payload pulumi.MapInput `pulumi:"payload"`
	// Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
	PlayAudio GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrInput `pulumi:"playAudio"`
	// Response type.
	ResponseType GoogleCloudDialogflowCxV3ResponseMessageResponseTypePtrInput `pulumi:"responseType"`
	// A signal that the client should transfer the phone call connected to this agent to a third-party endpoint.
	TelephonyTransferCall GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrInput `pulumi:"telephonyTransferCall"`
	// Returns a text response.
	Text GoogleCloudDialogflowCxV3ResponseMessageTextPtrInput `pulumi:"text"`
}

func (GoogleCloudDialogflowCxV3ResponseMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessage)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageArgs) ToGoogleCloudDialogflowCxV3ResponseMessageOutput() GoogleCloudDialogflowCxV3ResponseMessageOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageArgs) ToGoogleCloudDialogflowCxV3ResponseMessageOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessageArgs) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageArgs) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageOutput).ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessagePtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageArgs, GoogleCloudDialogflowCxV3ResponseMessagePtr and GoogleCloudDialogflowCxV3ResponseMessagePtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessagePtrInput` via:
//
//	        GoogleCloudDialogflowCxV3ResponseMessageArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3ResponseMessagePtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessagePtrOutput
}

type googleCloudDialogflowCxV3ResponseMessagePtrType GoogleCloudDialogflowCxV3ResponseMessageArgs

func GoogleCloudDialogflowCxV3ResponseMessagePtr(v *GoogleCloudDialogflowCxV3ResponseMessageArgs) GoogleCloudDialogflowCxV3ResponseMessagePtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessagePtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessage)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessagePtrType) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessagePtrType) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessagePtrOutput)
}

// GoogleCloudDialogflowCxV3ResponseMessageArrayInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageArray and GoogleCloudDialogflowCxV3ResponseMessageArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageArrayInput` via:
//
//	GoogleCloudDialogflowCxV3ResponseMessageArray{ GoogleCloudDialogflowCxV3ResponseMessageArgs{...} }
type GoogleCloudDialogflowCxV3ResponseMessageArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageArrayOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageArrayOutput
}

type GoogleCloudDialogflowCxV3ResponseMessageArray []GoogleCloudDialogflowCxV3ResponseMessageInput

func (GoogleCloudDialogflowCxV3ResponseMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ResponseMessage)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageArray) ToGoogleCloudDialogflowCxV3ResponseMessageArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageArray) ToGoogleCloudDialogflowCxV3ResponseMessageArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageArrayOutput)
}

// Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.
type GoogleCloudDialogflowCxV3ResponseMessageOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessage)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutput() GoogleCloudDialogflowCxV3ResponseMessageOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessage {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessagePtrOutput)
}

// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *string { return v.Channel }).(pulumi.StringPtrOutput)
}

// Indicates that the conversation succeeded.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) ConversationSuccess() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess {
		return v.ConversationSuccess
	}).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput)
}

// Represents info card for knowledge answers, to be better rendered in Dialogflow Messenger.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) KnowledgeInfoCard() GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard {
		return v.KnowledgeInfoCard
	}).(GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput)
}

// Hands off conversation to a human agent.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) LiveAgentHandoff() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff {
		return v.LiveAgentHandoff
	}).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput)
}

// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) OutputAudioText() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText {
		return v.OutputAudioText
	}).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput)
}

// Returns a response containing a custom, platform-specific payload.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) Payload() pulumi.MapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) map[string]interface{} { return v.Payload }).(pulumi.MapOutput)
}

// Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) PlayAudio() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessagePlayAudio {
		return v.PlayAudio
	}).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput)
}

// Response type.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) ResponseType() GoogleCloudDialogflowCxV3ResponseMessageResponseTypePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageResponseType {
		return v.ResponseType
	}).(GoogleCloudDialogflowCxV3ResponseMessageResponseTypePtrOutput)
}

// A signal that the client should transfer the phone call connected to this agent to a third-party endpoint.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) TelephonyTransferCall() GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall {
		return v.TelephonyTransferCall
	}).(GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput)
}

// Returns a text response.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) Text() GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageText {
		return v.Text
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessagePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessage)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessageOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) GoogleCloudDialogflowCxV3ResponseMessage {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3ResponseMessage
		return ret
	}).(GoogleCloudDialogflowCxV3ResponseMessageOutput)
}

// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *string {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.StringPtrOutput)
}

// Indicates that the conversation succeeded.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) ConversationSuccess() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess {
		if v == nil {
			return nil
		}
		return v.ConversationSuccess
	}).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput)
}

// Represents info card for knowledge answers, to be better rendered in Dialogflow Messenger.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) KnowledgeInfoCard() GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard {
		if v == nil {
			return nil
		}
		return v.KnowledgeInfoCard
	}).(GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput)
}

// Hands off conversation to a human agent.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) LiveAgentHandoff() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff {
		if v == nil {
			return nil
		}
		return v.LiveAgentHandoff
	}).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput)
}

// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) OutputAudioText() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText {
		if v == nil {
			return nil
		}
		return v.OutputAudioText
	}).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput)
}

// Returns a response containing a custom, platform-specific payload.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) Payload() pulumi.MapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(pulumi.MapOutput)
}

// Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) PlayAudio() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessagePlayAudio {
		if v == nil {
			return nil
		}
		return v.PlayAudio
	}).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput)
}

// Response type.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) ResponseType() GoogleCloudDialogflowCxV3ResponseMessageResponseTypePtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageResponseType {
		if v == nil {
			return nil
		}
		return v.ResponseType
	}).(GoogleCloudDialogflowCxV3ResponseMessageResponseTypePtrOutput)
}

// A signal that the client should transfer the phone call connected to this agent to a third-party endpoint.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) TelephonyTransferCall() GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall {
		if v == nil {
			return nil
		}
		return v.TelephonyTransferCall
	}).(GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput)
}

// Returns a text response.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) Text() GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageText {
		if v == nil {
			return nil
		}
		return v.Text
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ResponseMessage)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ResponseMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ResponseMessage {
		return vs[0].([]GoogleCloudDialogflowCxV3ResponseMessage)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ResponseMessageOutput)
}

// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.
type GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess struct {
	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata map[string]interface{} `pulumi:"metadata"`
}

// GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs and GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessInput` via:
//
//	GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput
}

// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.
type GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs struct {
	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata pulumi.MapInput `pulumi:"metadata"`
}

func (GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput).ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs, GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtr and GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput
}

type googleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrType GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs

func GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtr(v *GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput)
}

// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.
type GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess) *GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput)
}

// Custom metadata. Dialogflow doesn't impose any structure on this.
func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess) map[string]interface{} {
		return v.Metadata
	}).(pulumi.MapOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess
		return ret
	}).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput)
}

// Custom metadata. Dialogflow doesn't impose any structure on this.
func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.MapOutput)
}

// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.
type GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponse struct {
	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata map[string]interface{} `pulumi:"metadata"`
}

// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.
type GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponseOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponseOutput {
	return o
}

// Custom metadata. Dialogflow doesn't impose any structure on this.
func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponseOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponse) map[string]interface{} {
		return v.Metadata
	}).(pulumi.MapOutput)
}

// Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
type GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponse struct {
}

// Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
type GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponseOutput() GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponseOutput {
	return o
}

// Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card. Otherwise, the info card response is skipped.
type GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard struct {
}

// GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardArgs and GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardInput` via:
//
//	GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput() GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput
}

// Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card. Otherwise, the info card response is skipped.
type GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardArgs struct {
}

func (GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardArgs) ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput() GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardArgs) ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardArgs) ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardArgs) ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput).ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardArgs, GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtr and GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput
}

type googleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrType GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardArgs

func GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtr(v *GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardArgs) GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput)
}

// Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card. Otherwise, the info card response is skipped.
type GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput) ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput() GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput) ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput) ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput) ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard) *GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard) GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard
		return ret
	}).(GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput)
}

// Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card. Otherwise, the info card response is skipped.
type GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponse struct {
}

// Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card. Otherwise, the info card response is skipped.
type GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponseOutput() GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponseOutput {
	return o
}

// Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.
type GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff struct {
	// Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
	Metadata map[string]interface{} `pulumi:"metadata"`
}

// GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs and GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffInput` via:
//
//	GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput
}

// Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.
type GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs struct {
	// Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
	Metadata pulumi.MapInput `pulumi:"metadata"`
}

func (GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput).ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs, GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtr and GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput
}

type googleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrType GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs

func GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtr(v *GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput)
}

// Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.
type GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff) *GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput)
}

// Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff) map[string]interface{} {
		return v.Metadata
	}).(pulumi.MapOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff
		return ret
	}).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput)
}

// Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.MapOutput)
}

// Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.
type GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponse struct {
	// Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
	Metadata map[string]interface{} `pulumi:"metadata"`
}

// Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.
type GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponseOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponseOutput {
	return o
}

// Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponseOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponse) map[string]interface{} {
		return v.Metadata
	}).(pulumi.MapOutput)
}

// Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponse struct {
	// Segments this audio response is composed of.
	Segments []GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponse `pulumi:"segments"`
}

// Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponseOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponseOutput {
	return o
}

// Segments this audio response is composed of.
func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponseOutput) Segments() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponse) []GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponse {
		return v.Segments
	}).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseArrayOutput)
}

// Represents one segment of audio.
type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponse struct {
	// Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request.
	AllowPlaybackInterruption bool `pulumi:"allowPlaybackInterruption"`
	// Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.
	Audio string `pulumi:"audio"`
	// Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.
	Uri string `pulumi:"uri"`
}

// Represents one segment of audio.
type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseOutput {
	return o
}

// Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request.
func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseOutput) AllowPlaybackInterruption() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponse) bool {
		return v.AllowPlaybackInterruption
	}).(pulumi.BoolOutput)
}

// Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.
func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseOutput) Audio() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponse) string { return v.Audio }).(pulumi.StringOutput)
}

// Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.
func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponse) string { return v.Uri }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseOutput)
}

// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
type GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText struct {
	// The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
	Ssml *string `pulumi:"ssml"`
	// The raw text to be synthesized.
	Text *string `pulumi:"text"`
}

// GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs and GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextInput` via:
//
//	GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput
}

// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
type GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs struct {
	// The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
	Ssml pulumi.StringPtrInput `pulumi:"ssml"`
	// The raw text to be synthesized.
	Text pulumi.StringPtrInput `pulumi:"text"`
}

func (GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput).ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs, GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtr and GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput
}

type googleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrType GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs

func GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtr(v *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput)
}

// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
type GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText) *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput)
}

// The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) Ssml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText) *string { return v.Ssml }).(pulumi.StringPtrOutput)
}

// The raw text to be synthesized.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText) *string { return v.Text }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText
		return ret
	}).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput)
}

// The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput) Ssml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText) *string {
		if v == nil {
			return nil
		}
		return v.Ssml
	}).(pulumi.StringPtrOutput)
}

// The raw text to be synthesized.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText) *string {
		if v == nil {
			return nil
		}
		return v.Text
	}).(pulumi.StringPtrOutput)
}

// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
type GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponse struct {
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption bool `pulumi:"allowPlaybackInterruption"`
	// The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
	Ssml string `pulumi:"ssml"`
	// The raw text to be synthesized.
	Text string `pulumi:"text"`
}

// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
type GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponseOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponseOutput {
	return o
}

// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponseOutput) AllowPlaybackInterruption() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponse) bool {
		return v.AllowPlaybackInterruption
	}).(pulumi.BoolOutput)
}

// The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponseOutput) Ssml() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponse) string { return v.Ssml }).(pulumi.StringOutput)
}

// The raw text to be synthesized.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponseOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponse) string { return v.Text }).(pulumi.StringOutput)
}

// Specifies an audio clip to be played by the client as part of the response.
type GoogleCloudDialogflowCxV3ResponseMessagePlayAudio struct {
	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioUri string `pulumi:"audioUri"`
}

// GoogleCloudDialogflowCxV3ResponseMessagePlayAudioInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs and GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessagePlayAudioInput` via:
//
//	GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessagePlayAudioInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput
	ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput
}

// Specifies an audio clip to be played by the client as part of the response.
type GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs struct {
	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioUri pulumi.StringInput `pulumi:"audioUri"`
}

func (GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessagePlayAudio)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput).ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs, GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtr and GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput
}

type googleCloudDialogflowCxV3ResponseMessagePlayAudioPtrType GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs

func GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtr(v *GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessagePlayAudioPtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessagePlayAudioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessagePlayAudio)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessagePlayAudioPtrType) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessagePlayAudioPtrType) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput)
}

// Specifies an audio clip to be played by the client as part of the response.
type GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessagePlayAudio)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3ResponseMessagePlayAudio) *GoogleCloudDialogflowCxV3ResponseMessagePlayAudio {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput)
}

// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput) AudioUri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessagePlayAudio) string { return v.AudioUri }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessagePlayAudio)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessagePlayAudio) GoogleCloudDialogflowCxV3ResponseMessagePlayAudio {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3ResponseMessagePlayAudio
		return ret
	}).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput)
}

// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput) AudioUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessagePlayAudio) *string {
		if v == nil {
			return nil
		}
		return &v.AudioUri
	}).(pulumi.StringPtrOutput)
}

// Specifies an audio clip to be played by the client as part of the response.
type GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponse struct {
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption bool `pulumi:"allowPlaybackInterruption"`
	// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioUri string `pulumi:"audioUri"`
}

// Specifies an audio clip to be played by the client as part of the response.
type GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponseOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponseOutput {
	return o
}

// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponseOutput) AllowPlaybackInterruption() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponse) bool {
		return v.AllowPlaybackInterruption
	}).(pulumi.BoolOutput)
}

// URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponseOutput) AudioUri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponse) string { return v.AudioUri }).(pulumi.StringOutput)
}

// Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.
type GoogleCloudDialogflowCxV3ResponseMessageResponse struct {
	// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
	Channel string `pulumi:"channel"`
	// Indicates that the conversation succeeded.
	ConversationSuccess GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponse `pulumi:"conversationSuccess"`
	// A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.
	EndInteraction GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponse `pulumi:"endInteraction"`
	// Represents info card for knowledge answers, to be better rendered in Dialogflow Messenger.
	KnowledgeInfoCard GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponse `pulumi:"knowledgeInfoCard"`
	// Hands off conversation to a human agent.
	LiveAgentHandoff GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponse `pulumi:"liveAgentHandoff"`
	// An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
	MixedAudio GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponse `pulumi:"mixedAudio"`
	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	OutputAudioText GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponse `pulumi:"outputAudioText"`
	// Returns a response containing a custom, platform-specific payload.
	Payload map[string]interface{} `pulumi:"payload"`
	// Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
	PlayAudio GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponse `pulumi:"playAudio"`
	// Response type.
	ResponseType string `pulumi:"responseType"`
	// A signal that the client should transfer the phone call connected to this agent to a third-party endpoint.
	TelephonyTransferCall GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponse `pulumi:"telephonyTransferCall"`
	// Returns a text response.
	Text GoogleCloudDialogflowCxV3ResponseMessageTextResponse `pulumi:"text"`
}

// Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.
type GoogleCloudDialogflowCxV3ResponseMessageResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageResponseOutput() GoogleCloudDialogflowCxV3ResponseMessageResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageResponseOutput {
	return o
}

// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
func (o GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageResponse) string { return v.Channel }).(pulumi.StringOutput)
}

// Indicates that the conversation succeeded.
func (o GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) ConversationSuccess() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageResponse) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponse {
		return v.ConversationSuccess
	}).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponseOutput)
}

// A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.
func (o GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) EndInteraction() GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageResponse) GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponse {
		return v.EndInteraction
	}).(GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponseOutput)
}

// Represents info card for knowledge answers, to be better rendered in Dialogflow Messenger.
func (o GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) KnowledgeInfoCard() GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageResponse) GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponse {
		return v.KnowledgeInfoCard
	}).(GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponseOutput)
}

// Hands off conversation to a human agent.
func (o GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) LiveAgentHandoff() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageResponse) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponse {
		return v.LiveAgentHandoff
	}).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponseOutput)
}

// An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
func (o GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) MixedAudio() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageResponse) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponse {
		return v.MixedAudio
	}).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponseOutput)
}

// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
func (o GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) OutputAudioText() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageResponse) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponse {
		return v.OutputAudioText
	}).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponseOutput)
}

// Returns a response containing a custom, platform-specific payload.
func (o GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) Payload() pulumi.MapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageResponse) map[string]interface{} { return v.Payload }).(pulumi.MapOutput)
}

// Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
func (o GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) PlayAudio() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageResponse) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponse {
		return v.PlayAudio
	}).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponseOutput)
}

// Response type.
func (o GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) ResponseType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageResponse) string { return v.ResponseType }).(pulumi.StringOutput)
}

// A signal that the client should transfer the phone call connected to this agent to a third-party endpoint.
func (o GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) TelephonyTransferCall() GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageResponse) GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponse {
		return v.TelephonyTransferCall
	}).(GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponseOutput)
}

// Returns a text response.
func (o GoogleCloudDialogflowCxV3ResponseMessageResponseOutput) Text() GoogleCloudDialogflowCxV3ResponseMessageTextResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageResponse) GoogleCloudDialogflowCxV3ResponseMessageTextResponse {
		return v.Text
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextResponseOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ResponseMessageResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageResponseArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageResponseArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageResponseArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ResponseMessageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ResponseMessageResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3ResponseMessageResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ResponseMessageResponseOutput)
}

// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
type GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall struct {
	// Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
	PhoneNumber *string `pulumi:"phoneNumber"`
}

// GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallArgs and GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallInput` via:
//
//	GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput() GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput
}

// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
type GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallArgs struct {
	// Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
	PhoneNumber pulumi.StringPtrInput `pulumi:"phoneNumber"`
}

func (GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallArgs) ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput() GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallArgs) ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallArgs) ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallArgs) ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput).ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallArgs, GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtr and GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput
}

type googleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrType GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallArgs

func GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtr(v *GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallArgs) GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput)
}

// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
type GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput() GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall) *GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput)
}

// Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
func (o GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall) *string { return v.PhoneNumber }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall) GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall
		return ret
	}).(GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput)
}

// Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
func (o GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall) *string {
		if v == nil {
			return nil
		}
		return v.PhoneNumber
	}).(pulumi.StringPtrOutput)
}

// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
type GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponse struct {
	// Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
	PhoneNumber string `pulumi:"phoneNumber"`
}

// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
type GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponseOutput() GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponseOutput {
	return o
}

// Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
func (o GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponseOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponse) string {
		return v.PhoneNumber
	}).(pulumi.StringOutput)
}

// The text response message.
type GoogleCloudDialogflowCxV3ResponseMessageText struct {
	// A collection of text responses.
	Text []string `pulumi:"text"`
}

// GoogleCloudDialogflowCxV3ResponseMessageTextInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageTextArgs and GoogleCloudDialogflowCxV3ResponseMessageTextOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageTextInput` via:
//
//	GoogleCloudDialogflowCxV3ResponseMessageTextArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageTextInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageTextOutput() GoogleCloudDialogflowCxV3ResponseMessageTextOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageTextOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextOutput
}

// The text response message.
type GoogleCloudDialogflowCxV3ResponseMessageTextArgs struct {
	// A collection of text responses.
	Text pulumi.StringArrayInput `pulumi:"text"`
}

func (GoogleCloudDialogflowCxV3ResponseMessageTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageText)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageTextOutput() GoogleCloudDialogflowCxV3ResponseMessageTextOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageTextOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageTextOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageTextOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageTextOutput).ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessageTextPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageTextArgs, GoogleCloudDialogflowCxV3ResponseMessageTextPtr and GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageTextPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3ResponseMessageTextArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3ResponseMessageTextPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput
}

type googleCloudDialogflowCxV3ResponseMessageTextPtrType GoogleCloudDialogflowCxV3ResponseMessageTextArgs

func GoogleCloudDialogflowCxV3ResponseMessageTextPtr(v *GoogleCloudDialogflowCxV3ResponseMessageTextArgs) GoogleCloudDialogflowCxV3ResponseMessageTextPtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessageTextPtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessageTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageText)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessageTextPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessageTextPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput)
}

// GoogleCloudDialogflowCxV3ResponseMessageTextArrayInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageTextArray and GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageTextArrayInput` via:
//
//	GoogleCloudDialogflowCxV3ResponseMessageTextArray{ GoogleCloudDialogflowCxV3ResponseMessageTextArgs{...} }
type GoogleCloudDialogflowCxV3ResponseMessageTextArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageTextArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput
}

type GoogleCloudDialogflowCxV3ResponseMessageTextArray []GoogleCloudDialogflowCxV3ResponseMessageTextInput

func (GoogleCloudDialogflowCxV3ResponseMessageTextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ResponseMessageText)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTextArray) ToGoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageTextArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTextArray) ToGoogleCloudDialogflowCxV3ResponseMessageTextArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput)
}

// The text response message.
type GoogleCloudDialogflowCxV3ResponseMessageTextOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageText)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextOutput() GoogleCloudDialogflowCxV3ResponseMessageTextOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3ResponseMessageText) *GoogleCloudDialogflowCxV3ResponseMessageText {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput)
}

// A collection of text responses.
func (o GoogleCloudDialogflowCxV3ResponseMessageTextOutput) Text() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageText) []string { return v.Text }).(pulumi.StringArrayOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageText)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessageTextOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageText) GoogleCloudDialogflowCxV3ResponseMessageText {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3ResponseMessageText
		return ret
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextOutput)
}

// A collection of text responses.
func (o GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput) Text() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageText) []string {
		if v == nil {
			return nil
		}
		return v.Text
	}).(pulumi.StringArrayOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ResponseMessageText)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ResponseMessageTextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ResponseMessageText {
		return vs[0].([]GoogleCloudDialogflowCxV3ResponseMessageText)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextOutput)
}

// The text response message.
type GoogleCloudDialogflowCxV3ResponseMessageTextResponse struct {
	// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption bool `pulumi:"allowPlaybackInterruption"`
	// A collection of text responses.
	Text []string `pulumi:"text"`
}

// The text response message.
type GoogleCloudDialogflowCxV3ResponseMessageTextResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageTextResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageTextResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextResponseOutput() GoogleCloudDialogflowCxV3ResponseMessageTextResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextResponseOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextResponseOutput {
	return o
}

// Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
func (o GoogleCloudDialogflowCxV3ResponseMessageTextResponseOutput) AllowPlaybackInterruption() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageTextResponse) bool { return v.AllowPlaybackInterruption }).(pulumi.BoolOutput)
}

// A collection of text responses.
func (o GoogleCloudDialogflowCxV3ResponseMessageTextResponseOutput) Text() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageTextResponse) []string { return v.Text }).(pulumi.StringArrayOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageTextResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageTextResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ResponseMessageTextResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextResponseArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextResponseArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageTextResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextResponseArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ResponseMessageTextResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ResponseMessageTextResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3ResponseMessageTextResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextResponseOutput)
}

// The configuration for auto rollout.
type GoogleCloudDialogflowCxV3RolloutConfig struct {
	// The conditions that are used to evaluate the failure of a rollout step. If not specified, no rollout steps will fail. E.g. "containment_rate < 10% OR average_turn_count < 3". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	FailureCondition *string `pulumi:"failureCondition"`
	// The conditions that are used to evaluate the success of a rollout step. If not specified, all rollout steps will proceed to the next one unless failure conditions are met. E.g. "containment_rate > 60% AND callback_rate < 20%". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	RolloutCondition *string `pulumi:"rolloutCondition"`
	// Steps to roll out a flow version. Steps should be sorted by percentage in ascending order.
	RolloutSteps []GoogleCloudDialogflowCxV3RolloutConfigRolloutStep `pulumi:"rolloutSteps"`
}

// GoogleCloudDialogflowCxV3RolloutConfigInput is an input type that accepts GoogleCloudDialogflowCxV3RolloutConfigArgs and GoogleCloudDialogflowCxV3RolloutConfigOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3RolloutConfigInput` via:
//
//	GoogleCloudDialogflowCxV3RolloutConfigArgs{...}
type GoogleCloudDialogflowCxV3RolloutConfigInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3RolloutConfigOutput() GoogleCloudDialogflowCxV3RolloutConfigOutput
	ToGoogleCloudDialogflowCxV3RolloutConfigOutputWithContext(context.Context) GoogleCloudDialogflowCxV3RolloutConfigOutput
}

// The configuration for auto rollout.
type GoogleCloudDialogflowCxV3RolloutConfigArgs struct {
	// The conditions that are used to evaluate the failure of a rollout step. If not specified, no rollout steps will fail. E.g. "containment_rate < 10% OR average_turn_count < 3". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	FailureCondition pulumi.StringPtrInput `pulumi:"failureCondition"`
	// The conditions that are used to evaluate the success of a rollout step. If not specified, all rollout steps will proceed to the next one unless failure conditions are met. E.g. "containment_rate > 60% AND callback_rate < 20%". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	RolloutCondition pulumi.StringPtrInput `pulumi:"rolloutCondition"`
	// Steps to roll out a flow version. Steps should be sorted by percentage in ascending order.
	RolloutSteps GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayInput `pulumi:"rolloutSteps"`
}

func (GoogleCloudDialogflowCxV3RolloutConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutConfig)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3RolloutConfigArgs) ToGoogleCloudDialogflowCxV3RolloutConfigOutput() GoogleCloudDialogflowCxV3RolloutConfigOutput {
	return i.ToGoogleCloudDialogflowCxV3RolloutConfigOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3RolloutConfigArgs) ToGoogleCloudDialogflowCxV3RolloutConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3RolloutConfigOutput)
}

func (i GoogleCloudDialogflowCxV3RolloutConfigArgs) ToGoogleCloudDialogflowCxV3RolloutConfigPtrOutput() GoogleCloudDialogflowCxV3RolloutConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3RolloutConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3RolloutConfigArgs) ToGoogleCloudDialogflowCxV3RolloutConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3RolloutConfigOutput).ToGoogleCloudDialogflowCxV3RolloutConfigPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3RolloutConfigPtrInput is an input type that accepts GoogleCloudDialogflowCxV3RolloutConfigArgs, GoogleCloudDialogflowCxV3RolloutConfigPtr and GoogleCloudDialogflowCxV3RolloutConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3RolloutConfigPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3RolloutConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3RolloutConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3RolloutConfigPtrOutput() GoogleCloudDialogflowCxV3RolloutConfigPtrOutput
	ToGoogleCloudDialogflowCxV3RolloutConfigPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3RolloutConfigPtrOutput
}

type googleCloudDialogflowCxV3RolloutConfigPtrType GoogleCloudDialogflowCxV3RolloutConfigArgs

func GoogleCloudDialogflowCxV3RolloutConfigPtr(v *GoogleCloudDialogflowCxV3RolloutConfigArgs) GoogleCloudDialogflowCxV3RolloutConfigPtrInput {
	return (*googleCloudDialogflowCxV3RolloutConfigPtrType)(v)
}

func (*googleCloudDialogflowCxV3RolloutConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3RolloutConfig)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3RolloutConfigPtrType) ToGoogleCloudDialogflowCxV3RolloutConfigPtrOutput() GoogleCloudDialogflowCxV3RolloutConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3RolloutConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3RolloutConfigPtrType) ToGoogleCloudDialogflowCxV3RolloutConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3RolloutConfigPtrOutput)
}

// The configuration for auto rollout.
type GoogleCloudDialogflowCxV3RolloutConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3RolloutConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3RolloutConfigOutput) ToGoogleCloudDialogflowCxV3RolloutConfigOutput() GoogleCloudDialogflowCxV3RolloutConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutConfigOutput) ToGoogleCloudDialogflowCxV3RolloutConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutConfigOutput) ToGoogleCloudDialogflowCxV3RolloutConfigPtrOutput() GoogleCloudDialogflowCxV3RolloutConfigPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3RolloutConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3RolloutConfigOutput) ToGoogleCloudDialogflowCxV3RolloutConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3RolloutConfig) *GoogleCloudDialogflowCxV3RolloutConfig {
		return &v
	}).(GoogleCloudDialogflowCxV3RolloutConfigPtrOutput)
}

// The conditions that are used to evaluate the failure of a rollout step. If not specified, no rollout steps will fail. E.g. "containment_rate < 10% OR average_turn_count < 3". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
func (o GoogleCloudDialogflowCxV3RolloutConfigOutput) FailureCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutConfig) *string { return v.FailureCondition }).(pulumi.StringPtrOutput)
}

// The conditions that are used to evaluate the success of a rollout step. If not specified, all rollout steps will proceed to the next one unless failure conditions are met. E.g. "containment_rate > 60% AND callback_rate < 20%". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
func (o GoogleCloudDialogflowCxV3RolloutConfigOutput) RolloutCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutConfig) *string { return v.RolloutCondition }).(pulumi.StringPtrOutput)
}

// Steps to roll out a flow version. Steps should be sorted by percentage in ascending order.
func (o GoogleCloudDialogflowCxV3RolloutConfigOutput) RolloutSteps() GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutConfig) []GoogleCloudDialogflowCxV3RolloutConfigRolloutStep {
		return v.RolloutSteps
	}).(GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput)
}

type GoogleCloudDialogflowCxV3RolloutConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3RolloutConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3RolloutConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3RolloutConfigPtrOutput) ToGoogleCloudDialogflowCxV3RolloutConfigPtrOutput() GoogleCloudDialogflowCxV3RolloutConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutConfigPtrOutput) ToGoogleCloudDialogflowCxV3RolloutConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutConfigPtrOutput) Elem() GoogleCloudDialogflowCxV3RolloutConfigOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3RolloutConfig) GoogleCloudDialogflowCxV3RolloutConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3RolloutConfig
		return ret
	}).(GoogleCloudDialogflowCxV3RolloutConfigOutput)
}

// The conditions that are used to evaluate the failure of a rollout step. If not specified, no rollout steps will fail. E.g. "containment_rate < 10% OR average_turn_count < 3". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
func (o GoogleCloudDialogflowCxV3RolloutConfigPtrOutput) FailureCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3RolloutConfig) *string {
		if v == nil {
			return nil
		}
		return v.FailureCondition
	}).(pulumi.StringPtrOutput)
}

// The conditions that are used to evaluate the success of a rollout step. If not specified, all rollout steps will proceed to the next one unless failure conditions are met. E.g. "containment_rate > 60% AND callback_rate < 20%". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
func (o GoogleCloudDialogflowCxV3RolloutConfigPtrOutput) RolloutCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3RolloutConfig) *string {
		if v == nil {
			return nil
		}
		return v.RolloutCondition
	}).(pulumi.StringPtrOutput)
}

// Steps to roll out a flow version. Steps should be sorted by percentage in ascending order.
func (o GoogleCloudDialogflowCxV3RolloutConfigPtrOutput) RolloutSteps() GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3RolloutConfig) []GoogleCloudDialogflowCxV3RolloutConfigRolloutStep {
		if v == nil {
			return nil
		}
		return v.RolloutSteps
	}).(GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput)
}

// The configuration for auto rollout.
type GoogleCloudDialogflowCxV3RolloutConfigResponse struct {
	// The conditions that are used to evaluate the failure of a rollout step. If not specified, no rollout steps will fail. E.g. "containment_rate < 10% OR average_turn_count < 3". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	FailureCondition string `pulumi:"failureCondition"`
	// The conditions that are used to evaluate the success of a rollout step. If not specified, all rollout steps will proceed to the next one unless failure conditions are met. E.g. "containment_rate > 60% AND callback_rate < 20%". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	RolloutCondition string `pulumi:"rolloutCondition"`
	// Steps to roll out a flow version. Steps should be sorted by percentage in ascending order.
	RolloutSteps []GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponse `pulumi:"rolloutSteps"`
}

// The configuration for auto rollout.
type GoogleCloudDialogflowCxV3RolloutConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3RolloutConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutConfigResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3RolloutConfigResponseOutput) ToGoogleCloudDialogflowCxV3RolloutConfigResponseOutput() GoogleCloudDialogflowCxV3RolloutConfigResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutConfigResponseOutput) ToGoogleCloudDialogflowCxV3RolloutConfigResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutConfigResponseOutput {
	return o
}

// The conditions that are used to evaluate the failure of a rollout step. If not specified, no rollout steps will fail. E.g. "containment_rate < 10% OR average_turn_count < 3". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
func (o GoogleCloudDialogflowCxV3RolloutConfigResponseOutput) FailureCondition() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutConfigResponse) string { return v.FailureCondition }).(pulumi.StringOutput)
}

// The conditions that are used to evaluate the success of a rollout step. If not specified, all rollout steps will proceed to the next one unless failure conditions are met. E.g. "containment_rate > 60% AND callback_rate < 20%". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
func (o GoogleCloudDialogflowCxV3RolloutConfigResponseOutput) RolloutCondition() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutConfigResponse) string { return v.RolloutCondition }).(pulumi.StringOutput)
}

// Steps to roll out a flow version. Steps should be sorted by percentage in ascending order.
func (o GoogleCloudDialogflowCxV3RolloutConfigResponseOutput) RolloutSteps() GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutConfigResponse) []GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponse {
		return v.RolloutSteps
	}).(GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseArrayOutput)
}

// A single rollout step with specified traffic allocation.
type GoogleCloudDialogflowCxV3RolloutConfigRolloutStep struct {
	// The name of the rollout step;
	DisplayName *string `pulumi:"displayName"`
	// The minimum time that this step should last. Should be longer than 1 hour. If not set, the default minimum duration for each step will be 1 hour.
	MinDuration *string `pulumi:"minDuration"`
	// The percentage of traffic allocated to the flow version of this rollout step. (0%, 100%].
	TrafficPercent *int `pulumi:"trafficPercent"`
}

// GoogleCloudDialogflowCxV3RolloutConfigRolloutStepInput is an input type that accepts GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArgs and GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3RolloutConfigRolloutStepInput` via:
//
//	GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArgs{...}
type GoogleCloudDialogflowCxV3RolloutConfigRolloutStepInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput() GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput
	ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutputWithContext(context.Context) GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput
}

// A single rollout step with specified traffic allocation.
type GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArgs struct {
	// The name of the rollout step;
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The minimum time that this step should last. Should be longer than 1 hour. If not set, the default minimum duration for each step will be 1 hour.
	MinDuration pulumi.StringPtrInput `pulumi:"minDuration"`
	// The percentage of traffic allocated to the flow version of this rollout step. (0%, 100%].
	TrafficPercent pulumi.IntPtrInput `pulumi:"trafficPercent"`
}

func (GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutConfigRolloutStep)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArgs) ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput() GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput {
	return i.ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArgs) ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput)
}

// GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayInput is an input type that accepts GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArray and GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayInput` via:
//
//	GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArray{ GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArgs{...} }
type GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput() GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput
	ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput
}

type GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArray []GoogleCloudDialogflowCxV3RolloutConfigRolloutStepInput

func (GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3RolloutConfigRolloutStep)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArray) ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput() GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArray) ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput)
}

// A single rollout step with specified traffic allocation.
type GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutConfigRolloutStep)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput) ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput() GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput) ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput {
	return o
}

// The name of the rollout step;
func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutConfigRolloutStep) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The minimum time that this step should last. Should be longer than 1 hour. If not set, the default minimum duration for each step will be 1 hour.
func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput) MinDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutConfigRolloutStep) *string { return v.MinDuration }).(pulumi.StringPtrOutput)
}

// The percentage of traffic allocated to the flow version of this rollout step. (0%, 100%].
func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput) TrafficPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutConfigRolloutStep) *int { return v.TrafficPercent }).(pulumi.IntPtrOutput)
}

type GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3RolloutConfigRolloutStep)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput) ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput() GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput) ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3RolloutConfigRolloutStep {
		return vs[0].([]GoogleCloudDialogflowCxV3RolloutConfigRolloutStep)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput)
}

// A single rollout step with specified traffic allocation.
type GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponse struct {
	// The name of the rollout step;
	DisplayName string `pulumi:"displayName"`
	// The minimum time that this step should last. Should be longer than 1 hour. If not set, the default minimum duration for each step will be 1 hour.
	MinDuration string `pulumi:"minDuration"`
	// The percentage of traffic allocated to the flow version of this rollout step. (0%, 100%].
	TrafficPercent int `pulumi:"trafficPercent"`
}

// A single rollout step with specified traffic allocation.
type GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseOutput) ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseOutput() GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseOutput) ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseOutput {
	return o
}

// The name of the rollout step;
func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The minimum time that this step should last. Should be longer than 1 hour. If not set, the default minimum duration for each step will be 1 hour.
func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseOutput) MinDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponse) string { return v.MinDuration }).(pulumi.StringOutput)
}

// The percentage of traffic allocated to the flow version of this rollout step. (0%, 100%].
func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseOutput) TrafficPercent() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponse) int { return v.TrafficPercent }).(pulumi.IntOutput)
}

type GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseArrayOutput) ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseArrayOutput() GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseArrayOutput) ToGoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseOutput)
}

// State of the auto-rollout process.
type GoogleCloudDialogflowCxV3RolloutState struct {
	// Start time of the current step.
	StartTime *string `pulumi:"startTime"`
	// Display name of the current auto rollout step.
	Step *string `pulumi:"step"`
	// Index of the current step in the auto rollout steps list.
	StepIndex *int `pulumi:"stepIndex"`
}

// GoogleCloudDialogflowCxV3RolloutStateInput is an input type that accepts GoogleCloudDialogflowCxV3RolloutStateArgs and GoogleCloudDialogflowCxV3RolloutStateOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3RolloutStateInput` via:
//
//	GoogleCloudDialogflowCxV3RolloutStateArgs{...}
type GoogleCloudDialogflowCxV3RolloutStateInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3RolloutStateOutput() GoogleCloudDialogflowCxV3RolloutStateOutput
	ToGoogleCloudDialogflowCxV3RolloutStateOutputWithContext(context.Context) GoogleCloudDialogflowCxV3RolloutStateOutput
}

// State of the auto-rollout process.
type GoogleCloudDialogflowCxV3RolloutStateArgs struct {
	// Start time of the current step.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// Display name of the current auto rollout step.
	Step pulumi.StringPtrInput `pulumi:"step"`
	// Index of the current step in the auto rollout steps list.
	StepIndex pulumi.IntPtrInput `pulumi:"stepIndex"`
}

func (GoogleCloudDialogflowCxV3RolloutStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutState)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3RolloutStateArgs) ToGoogleCloudDialogflowCxV3RolloutStateOutput() GoogleCloudDialogflowCxV3RolloutStateOutput {
	return i.ToGoogleCloudDialogflowCxV3RolloutStateOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3RolloutStateArgs) ToGoogleCloudDialogflowCxV3RolloutStateOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3RolloutStateOutput)
}

func (i GoogleCloudDialogflowCxV3RolloutStateArgs) ToGoogleCloudDialogflowCxV3RolloutStatePtrOutput() GoogleCloudDialogflowCxV3RolloutStatePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3RolloutStatePtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3RolloutStateArgs) ToGoogleCloudDialogflowCxV3RolloutStatePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3RolloutStateOutput).ToGoogleCloudDialogflowCxV3RolloutStatePtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3RolloutStatePtrInput is an input type that accepts GoogleCloudDialogflowCxV3RolloutStateArgs, GoogleCloudDialogflowCxV3RolloutStatePtr and GoogleCloudDialogflowCxV3RolloutStatePtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3RolloutStatePtrInput` via:
//
//	        GoogleCloudDialogflowCxV3RolloutStateArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3RolloutStatePtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3RolloutStatePtrOutput() GoogleCloudDialogflowCxV3RolloutStatePtrOutput
	ToGoogleCloudDialogflowCxV3RolloutStatePtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3RolloutStatePtrOutput
}

type googleCloudDialogflowCxV3RolloutStatePtrType GoogleCloudDialogflowCxV3RolloutStateArgs

func GoogleCloudDialogflowCxV3RolloutStatePtr(v *GoogleCloudDialogflowCxV3RolloutStateArgs) GoogleCloudDialogflowCxV3RolloutStatePtrInput {
	return (*googleCloudDialogflowCxV3RolloutStatePtrType)(v)
}

func (*googleCloudDialogflowCxV3RolloutStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3RolloutState)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3RolloutStatePtrType) ToGoogleCloudDialogflowCxV3RolloutStatePtrOutput() GoogleCloudDialogflowCxV3RolloutStatePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3RolloutStatePtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3RolloutStatePtrType) ToGoogleCloudDialogflowCxV3RolloutStatePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3RolloutStatePtrOutput)
}

// State of the auto-rollout process.
type GoogleCloudDialogflowCxV3RolloutStateOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3RolloutStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutState)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3RolloutStateOutput) ToGoogleCloudDialogflowCxV3RolloutStateOutput() GoogleCloudDialogflowCxV3RolloutStateOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutStateOutput) ToGoogleCloudDialogflowCxV3RolloutStateOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutStateOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutStateOutput) ToGoogleCloudDialogflowCxV3RolloutStatePtrOutput() GoogleCloudDialogflowCxV3RolloutStatePtrOutput {
	return o.ToGoogleCloudDialogflowCxV3RolloutStatePtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3RolloutStateOutput) ToGoogleCloudDialogflowCxV3RolloutStatePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3RolloutState) *GoogleCloudDialogflowCxV3RolloutState {
		return &v
	}).(GoogleCloudDialogflowCxV3RolloutStatePtrOutput)
}

// Start time of the current step.
func (o GoogleCloudDialogflowCxV3RolloutStateOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutState) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Display name of the current auto rollout step.
func (o GoogleCloudDialogflowCxV3RolloutStateOutput) Step() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutState) *string { return v.Step }).(pulumi.StringPtrOutput)
}

// Index of the current step in the auto rollout steps list.
func (o GoogleCloudDialogflowCxV3RolloutStateOutput) StepIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutState) *int { return v.StepIndex }).(pulumi.IntPtrOutput)
}

type GoogleCloudDialogflowCxV3RolloutStatePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3RolloutStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3RolloutState)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3RolloutStatePtrOutput) ToGoogleCloudDialogflowCxV3RolloutStatePtrOutput() GoogleCloudDialogflowCxV3RolloutStatePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutStatePtrOutput) ToGoogleCloudDialogflowCxV3RolloutStatePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutStatePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutStatePtrOutput) Elem() GoogleCloudDialogflowCxV3RolloutStateOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3RolloutState) GoogleCloudDialogflowCxV3RolloutState {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3RolloutState
		return ret
	}).(GoogleCloudDialogflowCxV3RolloutStateOutput)
}

// Start time of the current step.
func (o GoogleCloudDialogflowCxV3RolloutStatePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3RolloutState) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Display name of the current auto rollout step.
func (o GoogleCloudDialogflowCxV3RolloutStatePtrOutput) Step() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3RolloutState) *string {
		if v == nil {
			return nil
		}
		return v.Step
	}).(pulumi.StringPtrOutput)
}

// Index of the current step in the auto rollout steps list.
func (o GoogleCloudDialogflowCxV3RolloutStatePtrOutput) StepIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3RolloutState) *int {
		if v == nil {
			return nil
		}
		return v.StepIndex
	}).(pulumi.IntPtrOutput)
}

// State of the auto-rollout process.
type GoogleCloudDialogflowCxV3RolloutStateResponse struct {
	// Start time of the current step.
	StartTime string `pulumi:"startTime"`
	// Display name of the current auto rollout step.
	Step string `pulumi:"step"`
	// Index of the current step in the auto rollout steps list.
	StepIndex int `pulumi:"stepIndex"`
}

// State of the auto-rollout process.
type GoogleCloudDialogflowCxV3RolloutStateResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3RolloutStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutStateResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3RolloutStateResponseOutput) ToGoogleCloudDialogflowCxV3RolloutStateResponseOutput() GoogleCloudDialogflowCxV3RolloutStateResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3RolloutStateResponseOutput) ToGoogleCloudDialogflowCxV3RolloutStateResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3RolloutStateResponseOutput {
	return o
}

// Start time of the current step.
func (o GoogleCloudDialogflowCxV3RolloutStateResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutStateResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Display name of the current auto rollout step.
func (o GoogleCloudDialogflowCxV3RolloutStateResponseOutput) Step() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutStateResponse) string { return v.Step }).(pulumi.StringOutput)
}

// Index of the current step in the auto rollout steps list.
func (o GoogleCloudDialogflowCxV3RolloutStateResponseOutput) StepIndex() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3RolloutStateResponse) int { return v.StepIndex }).(pulumi.IntOutput)
}

// Settings for exporting audio.
type GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings struct {
	// Filename pattern for exported audio.
	AudioExportPattern *string `pulumi:"audioExportPattern"`
	// File format for exported audio file. Currently only in telephony recordings.
	AudioFormat *GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat `pulumi:"audioFormat"`
	// Enable audio redaction if it is true.
	EnableAudioRedaction *bool `pulumi:"enableAudioRedaction"`
	// Cloud Storage bucket to export audio record to. Setting this field would grant the Storage Object Creator role to the Dialogflow Service Agent. API caller that tries to modify this field should have the permission of storage.buckets.setIamPolicy.
	GcsBucket *string `pulumi:"gcsBucket"`
}

// GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs and GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsInput` via:
//
//	GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs{...}
type GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput() GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput
	ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput
}

// Settings for exporting audio.
type GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs struct {
	// Filename pattern for exported audio.
	AudioExportPattern pulumi.StringPtrInput `pulumi:"audioExportPattern"`
	// File format for exported audio file. Currently only in telephony recordings.
	AudioFormat GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormatPtrInput `pulumi:"audioFormat"`
	// Enable audio redaction if it is true.
	EnableAudioRedaction pulumi.BoolPtrInput `pulumi:"enableAudioRedaction"`
	// Cloud Storage bucket to export audio record to. Setting this field would grant the Storage Object Creator role to the Dialogflow Service Agent. API caller that tries to modify this field should have the permission of storage.buckets.setIamPolicy.
	GcsBucket pulumi.StringPtrInput `pulumi:"gcsBucket"`
}

func (GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs) ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput() GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs) ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs) ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput() GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs) ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput).ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs, GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtr and GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput() GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput
}

type googleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrType GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs

func GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtr(v *GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs) GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrInput {
	return (*googleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrType) ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput() GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrType) ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput)
}

// Settings for exporting audio.
type GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput() GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput() GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings) *GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput)
}

// Filename pattern for exported audio.
func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput) AudioExportPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings) *string {
		return v.AudioExportPattern
	}).(pulumi.StringPtrOutput)
}

// File format for exported audio file. Currently only in telephony recordings.
func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput) AudioFormat() GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormatPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings) *GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat {
		return v.AudioFormat
	}).(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormatPtrOutput)
}

// Enable audio redaction if it is true.
func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput) EnableAudioRedaction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings) *bool {
		return v.EnableAudioRedaction
	}).(pulumi.BoolPtrOutput)
}

// Cloud Storage bucket to export audio record to. Setting this field would grant the Storage Object Creator role to the Dialogflow Service Agent. API caller that tries to modify this field should have the permission of storage.buckets.setIamPolicy.
func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput) GcsBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings) *string { return v.GcsBucket }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput() GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings) GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings
		return ret
	}).(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput)
}

// Filename pattern for exported audio.
func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput) AudioExportPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings) *string {
		if v == nil {
			return nil
		}
		return v.AudioExportPattern
	}).(pulumi.StringPtrOutput)
}

// File format for exported audio file. Currently only in telephony recordings.
func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput) AudioFormat() GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormatPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings) *GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat {
		if v == nil {
			return nil
		}
		return v.AudioFormat
	}).(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormatPtrOutput)
}

// Enable audio redaction if it is true.
func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput) EnableAudioRedaction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAudioRedaction
	}).(pulumi.BoolPtrOutput)
}

// Cloud Storage bucket to export audio record to. Setting this field would grant the Storage Object Creator role to the Dialogflow Service Agent. API caller that tries to modify this field should have the permission of storage.buckets.setIamPolicy.
func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput) GcsBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings) *string {
		if v == nil {
			return nil
		}
		return v.GcsBucket
	}).(pulumi.StringPtrOutput)
}

// Settings for exporting audio.
type GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponse struct {
	// Filename pattern for exported audio.
	AudioExportPattern string `pulumi:"audioExportPattern"`
	// File format for exported audio file. Currently only in telephony recordings.
	AudioFormat string `pulumi:"audioFormat"`
	// Enable audio redaction if it is true.
	EnableAudioRedaction bool `pulumi:"enableAudioRedaction"`
	// Cloud Storage bucket to export audio record to. Setting this field would grant the Storage Object Creator role to the Dialogflow Service Agent. API caller that tries to modify this field should have the permission of storage.buckets.setIamPolicy.
	GcsBucket string `pulumi:"gcsBucket"`
}

// Settings for exporting audio.
type GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponseOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponseOutput() GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponseOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponseOutput {
	return o
}

// Filename pattern for exported audio.
func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponseOutput) AudioExportPattern() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponse) string {
		return v.AudioExportPattern
	}).(pulumi.StringOutput)
}

// File format for exported audio file. Currently only in telephony recordings.
func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponseOutput) AudioFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponse) string {
		return v.AudioFormat
	}).(pulumi.StringOutput)
}

// Enable audio redaction if it is true.
func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponseOutput) EnableAudioRedaction() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponse) bool {
		return v.EnableAudioRedaction
	}).(pulumi.BoolOutput)
}

// Cloud Storage bucket to export audio record to. Setting this field would grant the Storage Object Creator role to the Dialogflow Service Agent. API caller that tries to modify this field should have the permission of storage.buckets.setIamPolicy.
func (o GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponseOutput) GcsBucket() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponse) string {
		return v.GcsBucket
	}).(pulumi.StringOutput)
}

// Settings for exporting conversations to [Insights](https://cloud.google.com/contact-center/insights/docs).
type GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings struct {
	// If enabled, we will automatically exports conversations to Insights and Insights runs its analyzers.
	EnableInsightsExport *bool `pulumi:"enableInsightsExport"`
}

// GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs and GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsInput` via:
//
//	GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs{...}
type GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput() GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput
	ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput
}

// Settings for exporting conversations to [Insights](https://cloud.google.com/contact-center/insights/docs).
type GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs struct {
	// If enabled, we will automatically exports conversations to Insights and Insights runs its analyzers.
	EnableInsightsExport pulumi.BoolPtrInput `pulumi:"enableInsightsExport"`
}

func (GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs) ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput() GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs) ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs) ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput() GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs) ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput).ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs, GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtr and GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput() GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput
}

type googleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrType GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs

func GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtr(v *GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs) GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrInput {
	return (*googleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrType) ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput() GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrType) ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput)
}

// Settings for exporting conversations to [Insights](https://cloud.google.com/contact-center/insights/docs).
type GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput() GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput() GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings) *GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput)
}

// If enabled, we will automatically exports conversations to Insights and Insights runs its analyzers.
func (o GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput) EnableInsightsExport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings) *bool {
		return v.EnableInsightsExport
	}).(pulumi.BoolPtrOutput)
}

type GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput() GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings) GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings
		return ret
	}).(GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput)
}

// If enabled, we will automatically exports conversations to Insights and Insights runs its analyzers.
func (o GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput) EnableInsightsExport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableInsightsExport
	}).(pulumi.BoolPtrOutput)
}

// Settings for exporting conversations to [Insights](https://cloud.google.com/contact-center/insights/docs).
type GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsResponse struct {
	// If enabled, we will automatically exports conversations to Insights and Insights runs its analyzers.
	EnableInsightsExport bool `pulumi:"enableInsightsExport"`
}

// Settings for exporting conversations to [Insights](https://cloud.google.com/contact-center/insights/docs).
type GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsResponseOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsResponseOutput() GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsResponseOutput) ToGoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsResponseOutput {
	return o
}

// If enabled, we will automatically exports conversations to Insights and Insights runs its analyzers.
func (o GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsResponseOutput) EnableInsightsExport() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsResponse) bool {
		return v.EnableInsightsExport
	}).(pulumi.BoolOutput)
}

// Settings related to speech recognition.
type GoogleCloudDialogflowCxV3SpeechToTextSettings struct {
	// Whether to use speech adaptation for speech recognition.
	EnableSpeechAdaptation *bool `pulumi:"enableSpeechAdaptation"`
}

// GoogleCloudDialogflowCxV3SpeechToTextSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs and GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3SpeechToTextSettingsInput` via:
//
//	GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs{...}
type GoogleCloudDialogflowCxV3SpeechToTextSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3SpeechToTextSettingsOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput
	ToGoogleCloudDialogflowCxV3SpeechToTextSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput
}

// Settings related to speech recognition.
type GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs struct {
	// Whether to use speech adaptation for speech recognition.
	EnableSpeechAdaptation pulumi.BoolPtrInput `pulumi:"enableSpeechAdaptation"`
}

func (GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SpeechToTextSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3SpeechToTextSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput).ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs, GoogleCloudDialogflowCxV3SpeechToTextSettingsPtr and GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput
}

type googleCloudDialogflowCxV3SpeechToTextSettingsPtrType GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs

func GoogleCloudDialogflowCxV3SpeechToTextSettingsPtr(v *GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs) GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrInput {
	return (*googleCloudDialogflowCxV3SpeechToTextSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3SpeechToTextSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3SpeechToTextSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3SpeechToTextSettingsPtrType) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3SpeechToTextSettingsPtrType) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput)
}

// Settings related to speech recognition.
type GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SpeechToTextSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3SpeechToTextSettings) *GoogleCloudDialogflowCxV3SpeechToTextSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput)
}

// Whether to use speech adaptation for speech recognition.
func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput) EnableSpeechAdaptation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SpeechToTextSettings) *bool { return v.EnableSpeechAdaptation }).(pulumi.BoolPtrOutput)
}

type GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3SpeechToTextSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SpeechToTextSettings) GoogleCloudDialogflowCxV3SpeechToTextSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3SpeechToTextSettings
		return ret
	}).(GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput)
}

// Whether to use speech adaptation for speech recognition.
func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput) EnableSpeechAdaptation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SpeechToTextSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSpeechAdaptation
	}).(pulumi.BoolPtrOutput)
}

// Settings related to speech recognition.
type GoogleCloudDialogflowCxV3SpeechToTextSettingsResponse struct {
	// Whether to use speech adaptation for speech recognition.
	EnableSpeechAdaptation bool `pulumi:"enableSpeechAdaptation"`
}

// Settings related to speech recognition.
type GoogleCloudDialogflowCxV3SpeechToTextSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3SpeechToTextSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SpeechToTextSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsResponseOutput) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsResponseOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsResponseOutput) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsResponseOutput {
	return o
}

// Whether to use speech adaptation for speech recognition.
func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsResponseOutput) EnableSpeechAdaptation() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SpeechToTextSettingsResponse) bool { return v.EnableSpeechAdaptation }).(pulumi.BoolOutput)
}

// Configuration of how speech should be synthesized.
type GoogleCloudDialogflowCxV3SynthesizeSpeechConfig struct {
	// Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.
	EffectsProfileId []string `pulumi:"effectsProfileId"`
	// Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.
	Pitch *float64 `pulumi:"pitch"`
	// Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.
	SpeakingRate *float64 `pulumi:"speakingRate"`
	// Optional. The desired voice of the synthesized audio.
	Voice *GoogleCloudDialogflowCxV3VoiceSelectionParams `pulumi:"voice"`
	// Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.
	VolumeGainDb *float64 `pulumi:"volumeGainDb"`
}

// GoogleCloudDialogflowCxV3SynthesizeSpeechConfigInput is an input type that accepts GoogleCloudDialogflowCxV3SynthesizeSpeechConfigArgs and GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3SynthesizeSpeechConfigInput` via:
//
//	GoogleCloudDialogflowCxV3SynthesizeSpeechConfigArgs{...}
type GoogleCloudDialogflowCxV3SynthesizeSpeechConfigInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput() GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput
	ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutputWithContext(context.Context) GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput
}

// Configuration of how speech should be synthesized.
type GoogleCloudDialogflowCxV3SynthesizeSpeechConfigArgs struct {
	// Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.
	EffectsProfileId pulumi.StringArrayInput `pulumi:"effectsProfileId"`
	// Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.
	Pitch pulumi.Float64PtrInput `pulumi:"pitch"`
	// Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.
	SpeakingRate pulumi.Float64PtrInput `pulumi:"speakingRate"`
	// Optional. The desired voice of the synthesized audio.
	Voice GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrInput `pulumi:"voice"`
	// Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.
	VolumeGainDb pulumi.Float64PtrInput `pulumi:"volumeGainDb"`
}

func (GoogleCloudDialogflowCxV3SynthesizeSpeechConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SynthesizeSpeechConfig)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3SynthesizeSpeechConfigArgs) ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput() GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput {
	return i.ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3SynthesizeSpeechConfigArgs) ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput)
}

func (i GoogleCloudDialogflowCxV3SynthesizeSpeechConfigArgs) ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput() GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3SynthesizeSpeechConfigArgs) ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput).ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrInput is an input type that accepts GoogleCloudDialogflowCxV3SynthesizeSpeechConfigArgs, GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtr and GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3SynthesizeSpeechConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput() GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput
	ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput
}

type googleCloudDialogflowCxV3SynthesizeSpeechConfigPtrType GoogleCloudDialogflowCxV3SynthesizeSpeechConfigArgs

func GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtr(v *GoogleCloudDialogflowCxV3SynthesizeSpeechConfigArgs) GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrInput {
	return (*googleCloudDialogflowCxV3SynthesizeSpeechConfigPtrType)(v)
}

func (*googleCloudDialogflowCxV3SynthesizeSpeechConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3SynthesizeSpeechConfig)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3SynthesizeSpeechConfigPtrType) ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput() GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3SynthesizeSpeechConfigPtrType) ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput)
}

// Configuration of how speech should be synthesized.
type GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SynthesizeSpeechConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput) ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput() GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput) ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput) ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput() GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput) ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3SynthesizeSpeechConfig) *GoogleCloudDialogflowCxV3SynthesizeSpeechConfig {
		return &v
	}).(GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput)
}

// Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput) EffectsProfileId() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SynthesizeSpeechConfig) []string { return v.EffectsProfileId }).(pulumi.StringArrayOutput)
}

// Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput) Pitch() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SynthesizeSpeechConfig) *float64 { return v.Pitch }).(pulumi.Float64PtrOutput)
}

// Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput) SpeakingRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SynthesizeSpeechConfig) *float64 { return v.SpeakingRate }).(pulumi.Float64PtrOutput)
}

// Optional. The desired voice of the synthesized audio.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput) Voice() GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SynthesizeSpeechConfig) *GoogleCloudDialogflowCxV3VoiceSelectionParams {
		return v.Voice
	}).(GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput)
}

// Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput) VolumeGainDb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SynthesizeSpeechConfig) *float64 { return v.VolumeGainDb }).(pulumi.Float64PtrOutput)
}

type GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3SynthesizeSpeechConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput) ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput() GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput) ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput) Elem() GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SynthesizeSpeechConfig) GoogleCloudDialogflowCxV3SynthesizeSpeechConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3SynthesizeSpeechConfig
		return ret
	}).(GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput)
}

// Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput) EffectsProfileId() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SynthesizeSpeechConfig) []string {
		if v == nil {
			return nil
		}
		return v.EffectsProfileId
	}).(pulumi.StringArrayOutput)
}

// Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput) Pitch() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SynthesizeSpeechConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.Pitch
	}).(pulumi.Float64PtrOutput)
}

// Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput) SpeakingRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SynthesizeSpeechConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.SpeakingRate
	}).(pulumi.Float64PtrOutput)
}

// Optional. The desired voice of the synthesized audio.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput) Voice() GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SynthesizeSpeechConfig) *GoogleCloudDialogflowCxV3VoiceSelectionParams {
		if v == nil {
			return nil
		}
		return v.Voice
	}).(GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput)
}

// Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput) VolumeGainDb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SynthesizeSpeechConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.VolumeGainDb
	}).(pulumi.Float64PtrOutput)
}

// Configuration of how speech should be synthesized.
type GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponse struct {
	// Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.
	EffectsProfileId []string `pulumi:"effectsProfileId"`
	// Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.
	Pitch float64 `pulumi:"pitch"`
	// Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.
	SpeakingRate float64 `pulumi:"speakingRate"`
	// Optional. The desired voice of the synthesized audio.
	Voice GoogleCloudDialogflowCxV3VoiceSelectionParamsResponse `pulumi:"voice"`
	// Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.
	VolumeGainDb float64 `pulumi:"volumeGainDb"`
}

// Configuration of how speech should be synthesized.
type GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput) ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput() GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput) ToGoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput {
	return o
}

// Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput) EffectsProfileId() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponse) []string { return v.EffectsProfileId }).(pulumi.StringArrayOutput)
}

// Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput) Pitch() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponse) float64 { return v.Pitch }).(pulumi.Float64Output)
}

// Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput) SpeakingRate() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponse) float64 { return v.SpeakingRate }).(pulumi.Float64Output)
}

// Optional. The desired voice of the synthesized audio.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput) Voice() GoogleCloudDialogflowCxV3VoiceSelectionParamsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponse) GoogleCloudDialogflowCxV3VoiceSelectionParamsResponse {
		return v.Voice
	}).(GoogleCloudDialogflowCxV3VoiceSelectionParamsResponseOutput)
}

// Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.
func (o GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput) VolumeGainDb() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponse) float64 { return v.VolumeGainDb }).(pulumi.Float64Output)
}

// Represents a result from running a test case in an agent environment.
type GoogleCloudDialogflowCxV3TestCaseResult struct {
	// The conversation turns uttered during the test case replay in chronological order.
	ConversationTurns []GoogleCloudDialogflowCxV3ConversationTurn `pulumi:"conversationTurns"`
	// Environment where the test was run. If not set, it indicates the draft environment.
	Environment *string `pulumi:"environment"`
	// The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.
	Name *string `pulumi:"name"`
	// Whether the test case passed in the agent environment.
	TestResult *GoogleCloudDialogflowCxV3TestCaseResultTestResult `pulumi:"testResult"`
	// The time that the test was run.
	TestTime *string `pulumi:"testTime"`
}

// GoogleCloudDialogflowCxV3TestCaseResultInput is an input type that accepts GoogleCloudDialogflowCxV3TestCaseResultArgs and GoogleCloudDialogflowCxV3TestCaseResultOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TestCaseResultInput` via:
//
//	GoogleCloudDialogflowCxV3TestCaseResultArgs{...}
type GoogleCloudDialogflowCxV3TestCaseResultInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TestCaseResultOutput() GoogleCloudDialogflowCxV3TestCaseResultOutput
	ToGoogleCloudDialogflowCxV3TestCaseResultOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TestCaseResultOutput
}

// Represents a result from running a test case in an agent environment.
type GoogleCloudDialogflowCxV3TestCaseResultArgs struct {
	// The conversation turns uttered during the test case replay in chronological order.
	ConversationTurns GoogleCloudDialogflowCxV3ConversationTurnArrayInput `pulumi:"conversationTurns"`
	// Environment where the test was run. If not set, it indicates the draft environment.
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether the test case passed in the agent environment.
	TestResult GoogleCloudDialogflowCxV3TestCaseResultTestResultPtrInput `pulumi:"testResult"`
	// The time that the test was run.
	TestTime pulumi.StringPtrInput `pulumi:"testTime"`
}

func (GoogleCloudDialogflowCxV3TestCaseResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TestCaseResult)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3TestCaseResultArgs) ToGoogleCloudDialogflowCxV3TestCaseResultOutput() GoogleCloudDialogflowCxV3TestCaseResultOutput {
	return i.ToGoogleCloudDialogflowCxV3TestCaseResultOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TestCaseResultArgs) ToGoogleCloudDialogflowCxV3TestCaseResultOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestCaseResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TestCaseResultOutput)
}

func (i GoogleCloudDialogflowCxV3TestCaseResultArgs) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutput() GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TestCaseResultArgs) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TestCaseResultOutput).ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3TestCaseResultPtrInput is an input type that accepts GoogleCloudDialogflowCxV3TestCaseResultArgs, GoogleCloudDialogflowCxV3TestCaseResultPtr and GoogleCloudDialogflowCxV3TestCaseResultPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TestCaseResultPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3TestCaseResultArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3TestCaseResultPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutput() GoogleCloudDialogflowCxV3TestCaseResultPtrOutput
	ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TestCaseResultPtrOutput
}

type googleCloudDialogflowCxV3TestCaseResultPtrType GoogleCloudDialogflowCxV3TestCaseResultArgs

func GoogleCloudDialogflowCxV3TestCaseResultPtr(v *GoogleCloudDialogflowCxV3TestCaseResultArgs) GoogleCloudDialogflowCxV3TestCaseResultPtrInput {
	return (*googleCloudDialogflowCxV3TestCaseResultPtrType)(v)
}

func (*googleCloudDialogflowCxV3TestCaseResultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3TestCaseResult)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3TestCaseResultPtrType) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutput() GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3TestCaseResultPtrType) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TestCaseResultPtrOutput)
}

// Represents a result from running a test case in an agent environment.
type GoogleCloudDialogflowCxV3TestCaseResultOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TestCaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TestCaseResult)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) ToGoogleCloudDialogflowCxV3TestCaseResultOutput() GoogleCloudDialogflowCxV3TestCaseResultOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) ToGoogleCloudDialogflowCxV3TestCaseResultOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestCaseResultOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutput() GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3TestCaseResult) *GoogleCloudDialogflowCxV3TestCaseResult {
		return &v
	}).(GoogleCloudDialogflowCxV3TestCaseResultPtrOutput)
}

// The conversation turns uttered during the test case replay in chronological order.
func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) ConversationTurns() GoogleCloudDialogflowCxV3ConversationTurnArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResult) []GoogleCloudDialogflowCxV3ConversationTurn {
		return v.ConversationTurns
	}).(GoogleCloudDialogflowCxV3ConversationTurnArrayOutput)
}

// Environment where the test was run. If not set, it indicates the draft environment.
func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResult) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.
func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the test case passed in the agent environment.
func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) TestResult() GoogleCloudDialogflowCxV3TestCaseResultTestResultPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResult) *GoogleCloudDialogflowCxV3TestCaseResultTestResult {
		return v.TestResult
	}).(GoogleCloudDialogflowCxV3TestCaseResultTestResultPtrOutput)
}

// The time that the test was run.
func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) TestTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResult) *string { return v.TestTime }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3TestCaseResultPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3TestCaseResult)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutput() GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) Elem() GoogleCloudDialogflowCxV3TestCaseResultOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestCaseResult) GoogleCloudDialogflowCxV3TestCaseResult {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3TestCaseResult
		return ret
	}).(GoogleCloudDialogflowCxV3TestCaseResultOutput)
}

// The conversation turns uttered during the test case replay in chronological order.
func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) ConversationTurns() GoogleCloudDialogflowCxV3ConversationTurnArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestCaseResult) []GoogleCloudDialogflowCxV3ConversationTurn {
		if v == nil {
			return nil
		}
		return v.ConversationTurns
	}).(GoogleCloudDialogflowCxV3ConversationTurnArrayOutput)
}

// Environment where the test was run. If not set, it indicates the draft environment.
func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestCaseResult) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.
func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestCaseResult) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Whether the test case passed in the agent environment.
func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) TestResult() GoogleCloudDialogflowCxV3TestCaseResultTestResultPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestCaseResult) *GoogleCloudDialogflowCxV3TestCaseResultTestResult {
		if v == nil {
			return nil
		}
		return v.TestResult
	}).(GoogleCloudDialogflowCxV3TestCaseResultTestResultPtrOutput)
}

// The time that the test was run.
func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) TestTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestCaseResult) *string {
		if v == nil {
			return nil
		}
		return v.TestTime
	}).(pulumi.StringPtrOutput)
}

// Represents a result from running a test case in an agent environment.
type GoogleCloudDialogflowCxV3TestCaseResultResponse struct {
	// The conversation turns uttered during the test case replay in chronological order.
	ConversationTurns []GoogleCloudDialogflowCxV3ConversationTurnResponse `pulumi:"conversationTurns"`
	// Environment where the test was run. If not set, it indicates the draft environment.
	Environment string `pulumi:"environment"`
	// The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.
	Name string `pulumi:"name"`
	// Whether the test case passed in the agent environment.
	TestResult string `pulumi:"testResult"`
	// The time that the test was run.
	TestTime string `pulumi:"testTime"`
}

// Represents a result from running a test case in an agent environment.
type GoogleCloudDialogflowCxV3TestCaseResultResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TestCaseResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TestCaseResultResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TestCaseResultResponseOutput) ToGoogleCloudDialogflowCxV3TestCaseResultResponseOutput() GoogleCloudDialogflowCxV3TestCaseResultResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestCaseResultResponseOutput) ToGoogleCloudDialogflowCxV3TestCaseResultResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestCaseResultResponseOutput {
	return o
}

// The conversation turns uttered during the test case replay in chronological order.
func (o GoogleCloudDialogflowCxV3TestCaseResultResponseOutput) ConversationTurns() GoogleCloudDialogflowCxV3ConversationTurnResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResultResponse) []GoogleCloudDialogflowCxV3ConversationTurnResponse {
		return v.ConversationTurns
	}).(GoogleCloudDialogflowCxV3ConversationTurnResponseArrayOutput)
}

// Environment where the test was run. If not set, it indicates the draft environment.
func (o GoogleCloudDialogflowCxV3TestCaseResultResponseOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResultResponse) string { return v.Environment }).(pulumi.StringOutput)
}

// The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.
func (o GoogleCloudDialogflowCxV3TestCaseResultResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResultResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Whether the test case passed in the agent environment.
func (o GoogleCloudDialogflowCxV3TestCaseResultResponseOutput) TestResult() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResultResponse) string { return v.TestResult }).(pulumi.StringOutput)
}

// The time that the test was run.
func (o GoogleCloudDialogflowCxV3TestCaseResultResponseOutput) TestTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResultResponse) string { return v.TestTime }).(pulumi.StringOutput)
}

// Represents configurations for a test case.
type GoogleCloudDialogflowCxV3TestConfig struct {
	// Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
	Flow *string `pulumi:"flow"`
	// The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
	Page *string `pulumi:"page"`
	// Session parameters to be compared when calculating differences.
	TrackingParameters []string `pulumi:"trackingParameters"`
}

// GoogleCloudDialogflowCxV3TestConfigInput is an input type that accepts GoogleCloudDialogflowCxV3TestConfigArgs and GoogleCloudDialogflowCxV3TestConfigOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TestConfigInput` via:
//
//	GoogleCloudDialogflowCxV3TestConfigArgs{...}
type GoogleCloudDialogflowCxV3TestConfigInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TestConfigOutput() GoogleCloudDialogflowCxV3TestConfigOutput
	ToGoogleCloudDialogflowCxV3TestConfigOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TestConfigOutput
}

// Represents configurations for a test case.
type GoogleCloudDialogflowCxV3TestConfigArgs struct {
	// Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
	Flow pulumi.StringPtrInput `pulumi:"flow"`
	// The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
	Page pulumi.StringPtrInput `pulumi:"page"`
	// Session parameters to be compared when calculating differences.
	TrackingParameters pulumi.StringArrayInput `pulumi:"trackingParameters"`
}

func (GoogleCloudDialogflowCxV3TestConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TestConfig)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3TestConfigArgs) ToGoogleCloudDialogflowCxV3TestConfigOutput() GoogleCloudDialogflowCxV3TestConfigOutput {
	return i.ToGoogleCloudDialogflowCxV3TestConfigOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TestConfigArgs) ToGoogleCloudDialogflowCxV3TestConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TestConfigOutput)
}

func (i GoogleCloudDialogflowCxV3TestConfigArgs) ToGoogleCloudDialogflowCxV3TestConfigPtrOutput() GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TestConfigArgs) ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TestConfigOutput).ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3TestConfigPtrInput is an input type that accepts GoogleCloudDialogflowCxV3TestConfigArgs, GoogleCloudDialogflowCxV3TestConfigPtr and GoogleCloudDialogflowCxV3TestConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TestConfigPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3TestConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3TestConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TestConfigPtrOutput() GoogleCloudDialogflowCxV3TestConfigPtrOutput
	ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TestConfigPtrOutput
}

type googleCloudDialogflowCxV3TestConfigPtrType GoogleCloudDialogflowCxV3TestConfigArgs

func GoogleCloudDialogflowCxV3TestConfigPtr(v *GoogleCloudDialogflowCxV3TestConfigArgs) GoogleCloudDialogflowCxV3TestConfigPtrInput {
	return (*googleCloudDialogflowCxV3TestConfigPtrType)(v)
}

func (*googleCloudDialogflowCxV3TestConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3TestConfig)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3TestConfigPtrType) ToGoogleCloudDialogflowCxV3TestConfigPtrOutput() GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3TestConfigPtrType) ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TestConfigPtrOutput)
}

// Represents configurations for a test case.
type GoogleCloudDialogflowCxV3TestConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TestConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TestConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TestConfigOutput) ToGoogleCloudDialogflowCxV3TestConfigOutput() GoogleCloudDialogflowCxV3TestConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestConfigOutput) ToGoogleCloudDialogflowCxV3TestConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestConfigOutput) ToGoogleCloudDialogflowCxV3TestConfigPtrOutput() GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3TestConfigOutput) ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3TestConfig) *GoogleCloudDialogflowCxV3TestConfig {
		return &v
	}).(GoogleCloudDialogflowCxV3TestConfigPtrOutput)
}

// Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
func (o GoogleCloudDialogflowCxV3TestConfigOutput) Flow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestConfig) *string { return v.Flow }).(pulumi.StringPtrOutput)
}

// The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
func (o GoogleCloudDialogflowCxV3TestConfigOutput) Page() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestConfig) *string { return v.Page }).(pulumi.StringPtrOutput)
}

// Session parameters to be compared when calculating differences.
func (o GoogleCloudDialogflowCxV3TestConfigOutput) TrackingParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestConfig) []string { return v.TrackingParameters }).(pulumi.StringArrayOutput)
}

type GoogleCloudDialogflowCxV3TestConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TestConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3TestConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TestConfigPtrOutput) ToGoogleCloudDialogflowCxV3TestConfigPtrOutput() GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestConfigPtrOutput) ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestConfigPtrOutput) Elem() GoogleCloudDialogflowCxV3TestConfigOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestConfig) GoogleCloudDialogflowCxV3TestConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3TestConfig
		return ret
	}).(GoogleCloudDialogflowCxV3TestConfigOutput)
}

// Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
func (o GoogleCloudDialogflowCxV3TestConfigPtrOutput) Flow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestConfig) *string {
		if v == nil {
			return nil
		}
		return v.Flow
	}).(pulumi.StringPtrOutput)
}

// The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
func (o GoogleCloudDialogflowCxV3TestConfigPtrOutput) Page() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestConfig) *string {
		if v == nil {
			return nil
		}
		return v.Page
	}).(pulumi.StringPtrOutput)
}

// Session parameters to be compared when calculating differences.
func (o GoogleCloudDialogflowCxV3TestConfigPtrOutput) TrackingParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestConfig) []string {
		if v == nil {
			return nil
		}
		return v.TrackingParameters
	}).(pulumi.StringArrayOutput)
}

// Represents configurations for a test case.
type GoogleCloudDialogflowCxV3TestConfigResponse struct {
	// Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
	Flow string `pulumi:"flow"`
	// The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
	Page string `pulumi:"page"`
	// Session parameters to be compared when calculating differences.
	TrackingParameters []string `pulumi:"trackingParameters"`
}

// Represents configurations for a test case.
type GoogleCloudDialogflowCxV3TestConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TestConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TestConfigResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TestConfigResponseOutput) ToGoogleCloudDialogflowCxV3TestConfigResponseOutput() GoogleCloudDialogflowCxV3TestConfigResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestConfigResponseOutput) ToGoogleCloudDialogflowCxV3TestConfigResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestConfigResponseOutput {
	return o
}

// Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
func (o GoogleCloudDialogflowCxV3TestConfigResponseOutput) Flow() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestConfigResponse) string { return v.Flow }).(pulumi.StringOutput)
}

// The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow.
func (o GoogleCloudDialogflowCxV3TestConfigResponseOutput) Page() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestConfigResponse) string { return v.Page }).(pulumi.StringOutput)
}

// Session parameters to be compared when calculating differences.
func (o GoogleCloudDialogflowCxV3TestConfigResponseOutput) TrackingParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestConfigResponse) []string { return v.TrackingParameters }).(pulumi.StringArrayOutput)
}

// The description of differences between original and replayed agent output.
type GoogleCloudDialogflowCxV3TestRunDifferenceResponse struct {
	// A human readable description of the diff, showing the actual output vs expected output.
	Description string `pulumi:"description"`
	// The type of diff.
	Type string `pulumi:"type"`
}

// The description of differences between original and replayed agent output.
type GoogleCloudDialogflowCxV3TestRunDifferenceResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TestRunDifferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TestRunDifferenceResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TestRunDifferenceResponseOutput) ToGoogleCloudDialogflowCxV3TestRunDifferenceResponseOutput() GoogleCloudDialogflowCxV3TestRunDifferenceResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestRunDifferenceResponseOutput) ToGoogleCloudDialogflowCxV3TestRunDifferenceResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestRunDifferenceResponseOutput {
	return o
}

// A human readable description of the diff, showing the actual output vs expected output.
func (o GoogleCloudDialogflowCxV3TestRunDifferenceResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestRunDifferenceResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The type of diff.
func (o GoogleCloudDialogflowCxV3TestRunDifferenceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestRunDifferenceResponse) string { return v.Type }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3TestRunDifferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TestRunDifferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3TestRunDifferenceResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TestRunDifferenceResponseArrayOutput) ToGoogleCloudDialogflowCxV3TestRunDifferenceResponseArrayOutput() GoogleCloudDialogflowCxV3TestRunDifferenceResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestRunDifferenceResponseArrayOutput) ToGoogleCloudDialogflowCxV3TestRunDifferenceResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestRunDifferenceResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestRunDifferenceResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3TestRunDifferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3TestRunDifferenceResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3TestRunDifferenceResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3TestRunDifferenceResponseOutput)
}

// Represents the natural language text to be processed.
type GoogleCloudDialogflowCxV3TextInput struct {
	// The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters.
	Text string `pulumi:"text"`
}

// GoogleCloudDialogflowCxV3TextInputInput is an input type that accepts GoogleCloudDialogflowCxV3TextInputArgs and GoogleCloudDialogflowCxV3TextInputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TextInputInput` via:
//
//	GoogleCloudDialogflowCxV3TextInputArgs{...}
type GoogleCloudDialogflowCxV3TextInputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TextInputOutput() GoogleCloudDialogflowCxV3TextInputOutput
	ToGoogleCloudDialogflowCxV3TextInputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TextInputOutput
}

// Represents the natural language text to be processed.
type GoogleCloudDialogflowCxV3TextInputArgs struct {
	// The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters.
	Text pulumi.StringInput `pulumi:"text"`
}

func (GoogleCloudDialogflowCxV3TextInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TextInput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3TextInputArgs) ToGoogleCloudDialogflowCxV3TextInputOutput() GoogleCloudDialogflowCxV3TextInputOutput {
	return i.ToGoogleCloudDialogflowCxV3TextInputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TextInputArgs) ToGoogleCloudDialogflowCxV3TextInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TextInputOutput)
}

func (i GoogleCloudDialogflowCxV3TextInputArgs) ToGoogleCloudDialogflowCxV3TextInputPtrOutput() GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TextInputArgs) ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TextInputOutput).ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3TextInputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3TextInputArgs, GoogleCloudDialogflowCxV3TextInputPtr and GoogleCloudDialogflowCxV3TextInputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TextInputPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3TextInputArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3TextInputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TextInputPtrOutput() GoogleCloudDialogflowCxV3TextInputPtrOutput
	ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TextInputPtrOutput
}

type googleCloudDialogflowCxV3TextInputPtrType GoogleCloudDialogflowCxV3TextInputArgs

func GoogleCloudDialogflowCxV3TextInputPtr(v *GoogleCloudDialogflowCxV3TextInputArgs) GoogleCloudDialogflowCxV3TextInputPtrInput {
	return (*googleCloudDialogflowCxV3TextInputPtrType)(v)
}

func (*googleCloudDialogflowCxV3TextInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3TextInput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3TextInputPtrType) ToGoogleCloudDialogflowCxV3TextInputPtrOutput() GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3TextInputPtrType) ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TextInputPtrOutput)
}

// Represents the natural language text to be processed.
type GoogleCloudDialogflowCxV3TextInputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TextInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TextInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TextInputOutput) ToGoogleCloudDialogflowCxV3TextInputOutput() GoogleCloudDialogflowCxV3TextInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TextInputOutput) ToGoogleCloudDialogflowCxV3TextInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TextInputOutput) ToGoogleCloudDialogflowCxV3TextInputPtrOutput() GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3TextInputOutput) ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3TextInput) *GoogleCloudDialogflowCxV3TextInput {
		return &v
	}).(GoogleCloudDialogflowCxV3TextInputPtrOutput)
}

// The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters.
func (o GoogleCloudDialogflowCxV3TextInputOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TextInput) string { return v.Text }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3TextInputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TextInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3TextInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TextInputPtrOutput) ToGoogleCloudDialogflowCxV3TextInputPtrOutput() GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TextInputPtrOutput) ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TextInputPtrOutput) Elem() GoogleCloudDialogflowCxV3TextInputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TextInput) GoogleCloudDialogflowCxV3TextInput {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3TextInput
		return ret
	}).(GoogleCloudDialogflowCxV3TextInputOutput)
}

// The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters.
func (o GoogleCloudDialogflowCxV3TextInputPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TextInput) *string {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(pulumi.StringPtrOutput)
}

// Represents the natural language text to be processed.
type GoogleCloudDialogflowCxV3TextInputResponse struct {
	// The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters.
	Text string `pulumi:"text"`
}

// Represents the natural language text to be processed.
type GoogleCloudDialogflowCxV3TextInputResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TextInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TextInputResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TextInputResponseOutput) ToGoogleCloudDialogflowCxV3TextInputResponseOutput() GoogleCloudDialogflowCxV3TextInputResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TextInputResponseOutput) ToGoogleCloudDialogflowCxV3TextInputResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextInputResponseOutput {
	return o
}

// The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters.
func (o GoogleCloudDialogflowCxV3TextInputResponseOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TextInputResponse) string { return v.Text }).(pulumi.StringOutput)
}

// Settings related to speech synthesizing.
type GoogleCloudDialogflowCxV3TextToSpeechSettings struct {
	// Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/cx/docs/reference/language) to SynthesizeSpeechConfig. These settings affect: - The [phone gateway](https://cloud.google.com/dialogflow/cx/docs/concept/integration/phone-gateway) synthesize configuration set via Agent.text_to_speech_settings. - How speech is synthesized when invoking session APIs. Agent.text_to_speech_settings only applies if OutputAudioConfig.synthesize_speech_config is not specified.
	SynthesizeSpeechConfigs *GoogleCloudDialogflowCxV3SynthesizeSpeechConfig `pulumi:"synthesizeSpeechConfigs"`
}

// GoogleCloudDialogflowCxV3TextToSpeechSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3TextToSpeechSettingsArgs and GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TextToSpeechSettingsInput` via:
//
//	GoogleCloudDialogflowCxV3TextToSpeechSettingsArgs{...}
type GoogleCloudDialogflowCxV3TextToSpeechSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TextToSpeechSettingsOutput() GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput
	ToGoogleCloudDialogflowCxV3TextToSpeechSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput
}

// Settings related to speech synthesizing.
type GoogleCloudDialogflowCxV3TextToSpeechSettingsArgs struct {
	// Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/cx/docs/reference/language) to SynthesizeSpeechConfig. These settings affect: - The [phone gateway](https://cloud.google.com/dialogflow/cx/docs/concept/integration/phone-gateway) synthesize configuration set via Agent.text_to_speech_settings. - How speech is synthesized when invoking session APIs. Agent.text_to_speech_settings only applies if OutputAudioConfig.synthesize_speech_config is not specified.
	SynthesizeSpeechConfigs GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrInput `pulumi:"synthesizeSpeechConfigs"`
}

func (GoogleCloudDialogflowCxV3TextToSpeechSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TextToSpeechSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3TextToSpeechSettingsArgs) ToGoogleCloudDialogflowCxV3TextToSpeechSettingsOutput() GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3TextToSpeechSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TextToSpeechSettingsArgs) ToGoogleCloudDialogflowCxV3TextToSpeechSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3TextToSpeechSettingsArgs) ToGoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput() GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TextToSpeechSettingsArgs) ToGoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput).ToGoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3TextToSpeechSettingsArgs, GoogleCloudDialogflowCxV3TextToSpeechSettingsPtr and GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3TextToSpeechSettingsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput() GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput
}

type googleCloudDialogflowCxV3TextToSpeechSettingsPtrType GoogleCloudDialogflowCxV3TextToSpeechSettingsArgs

func GoogleCloudDialogflowCxV3TextToSpeechSettingsPtr(v *GoogleCloudDialogflowCxV3TextToSpeechSettingsArgs) GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrInput {
	return (*googleCloudDialogflowCxV3TextToSpeechSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3TextToSpeechSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3TextToSpeechSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3TextToSpeechSettingsPtrType) ToGoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput() GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3TextToSpeechSettingsPtrType) ToGoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput)
}

// Settings related to speech synthesizing.
type GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TextToSpeechSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput) ToGoogleCloudDialogflowCxV3TextToSpeechSettingsOutput() GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput) ToGoogleCloudDialogflowCxV3TextToSpeechSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput) ToGoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput() GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput) ToGoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3TextToSpeechSettings) *GoogleCloudDialogflowCxV3TextToSpeechSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput)
}

// Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/cx/docs/reference/language) to SynthesizeSpeechConfig. These settings affect: - The [phone gateway](https://cloud.google.com/dialogflow/cx/docs/concept/integration/phone-gateway) synthesize configuration set via Agent.text_to_speech_settings. - How speech is synthesized when invoking session APIs. Agent.text_to_speech_settings only applies if OutputAudioConfig.synthesize_speech_config is not specified.
func (o GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput) SynthesizeSpeechConfigs() GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TextToSpeechSettings) *GoogleCloudDialogflowCxV3SynthesizeSpeechConfig {
		return v.SynthesizeSpeechConfigs
	}).(GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput)
}

type GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3TextToSpeechSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput) ToGoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput() GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput) ToGoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TextToSpeechSettings) GoogleCloudDialogflowCxV3TextToSpeechSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3TextToSpeechSettings
		return ret
	}).(GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput)
}

// Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/cx/docs/reference/language) to SynthesizeSpeechConfig. These settings affect: - The [phone gateway](https://cloud.google.com/dialogflow/cx/docs/concept/integration/phone-gateway) synthesize configuration set via Agent.text_to_speech_settings. - How speech is synthesized when invoking session APIs. Agent.text_to_speech_settings only applies if OutputAudioConfig.synthesize_speech_config is not specified.
func (o GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput) SynthesizeSpeechConfigs() GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TextToSpeechSettings) *GoogleCloudDialogflowCxV3SynthesizeSpeechConfig {
		if v == nil {
			return nil
		}
		return v.SynthesizeSpeechConfigs
	}).(GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput)
}

// Settings related to speech synthesizing.
type GoogleCloudDialogflowCxV3TextToSpeechSettingsResponse struct {
	// Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/cx/docs/reference/language) to SynthesizeSpeechConfig. These settings affect: - The [phone gateway](https://cloud.google.com/dialogflow/cx/docs/concept/integration/phone-gateway) synthesize configuration set via Agent.text_to_speech_settings. - How speech is synthesized when invoking session APIs. Agent.text_to_speech_settings only applies if OutputAudioConfig.synthesize_speech_config is not specified.
	SynthesizeSpeechConfigs GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponse `pulumi:"synthesizeSpeechConfigs"`
}

// Settings related to speech synthesizing.
type GoogleCloudDialogflowCxV3TextToSpeechSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TextToSpeechSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TextToSpeechSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TextToSpeechSettingsResponseOutput) ToGoogleCloudDialogflowCxV3TextToSpeechSettingsResponseOutput() GoogleCloudDialogflowCxV3TextToSpeechSettingsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TextToSpeechSettingsResponseOutput) ToGoogleCloudDialogflowCxV3TextToSpeechSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextToSpeechSettingsResponseOutput {
	return o
}

// Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/cx/docs/reference/language) to SynthesizeSpeechConfig. These settings affect: - The [phone gateway](https://cloud.google.com/dialogflow/cx/docs/concept/integration/phone-gateway) synthesize configuration set via Agent.text_to_speech_settings. - How speech is synthesized when invoking session APIs. Agent.text_to_speech_settings only applies if OutputAudioConfig.synthesize_speech_config is not specified.
func (o GoogleCloudDialogflowCxV3TextToSpeechSettingsResponseOutput) SynthesizeSpeechConfigs() GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TextToSpeechSettingsResponse) GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponse {
		return v.SynthesizeSpeechConfigs
	}).(GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput)
}

// A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3TransitionRoute struct {
	// The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
	Condition *string `pulumi:"condition"`
	// Optional. The description of the transition route. The maximum length is 500 characters.
	Description *string `pulumi:"description"`
	// The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
	Intent *string `pulumi:"intent"`
	// The target flow to transition to. Format: `projects//locations//agents//flows/`.
	TargetFlow *string `pulumi:"targetFlow"`
	// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
	TargetPage *string `pulumi:"targetPage"`
	// The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.
	TriggerFulfillment *GoogleCloudDialogflowCxV3Fulfillment `pulumi:"triggerFulfillment"`
}

// GoogleCloudDialogflowCxV3TransitionRouteInput is an input type that accepts GoogleCloudDialogflowCxV3TransitionRouteArgs and GoogleCloudDialogflowCxV3TransitionRouteOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TransitionRouteInput` via:
//
//	GoogleCloudDialogflowCxV3TransitionRouteArgs{...}
type GoogleCloudDialogflowCxV3TransitionRouteInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TransitionRouteOutput() GoogleCloudDialogflowCxV3TransitionRouteOutput
	ToGoogleCloudDialogflowCxV3TransitionRouteOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TransitionRouteOutput
}

// A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3TransitionRouteArgs struct {
	// The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// Optional. The description of the transition route. The maximum length is 500 characters.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
	Intent pulumi.StringPtrInput `pulumi:"intent"`
	// The target flow to transition to. Format: `projects//locations//agents//flows/`.
	TargetFlow pulumi.StringPtrInput `pulumi:"targetFlow"`
	// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
	TargetPage pulumi.StringPtrInput `pulumi:"targetPage"`
	// The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.
	TriggerFulfillment GoogleCloudDialogflowCxV3FulfillmentPtrInput `pulumi:"triggerFulfillment"`
}

func (GoogleCloudDialogflowCxV3TransitionRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TransitionRoute)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3TransitionRouteArgs) ToGoogleCloudDialogflowCxV3TransitionRouteOutput() GoogleCloudDialogflowCxV3TransitionRouteOutput {
	return i.ToGoogleCloudDialogflowCxV3TransitionRouteOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TransitionRouteArgs) ToGoogleCloudDialogflowCxV3TransitionRouteOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TransitionRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TransitionRouteOutput)
}

// GoogleCloudDialogflowCxV3TransitionRouteArrayInput is an input type that accepts GoogleCloudDialogflowCxV3TransitionRouteArray and GoogleCloudDialogflowCxV3TransitionRouteArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TransitionRouteArrayInput` via:
//
//	GoogleCloudDialogflowCxV3TransitionRouteArray{ GoogleCloudDialogflowCxV3TransitionRouteArgs{...} }
type GoogleCloudDialogflowCxV3TransitionRouteArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TransitionRouteArrayOutput() GoogleCloudDialogflowCxV3TransitionRouteArrayOutput
	ToGoogleCloudDialogflowCxV3TransitionRouteArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TransitionRouteArrayOutput
}

type GoogleCloudDialogflowCxV3TransitionRouteArray []GoogleCloudDialogflowCxV3TransitionRouteInput

func (GoogleCloudDialogflowCxV3TransitionRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3TransitionRoute)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3TransitionRouteArray) ToGoogleCloudDialogflowCxV3TransitionRouteArrayOutput() GoogleCloudDialogflowCxV3TransitionRouteArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3TransitionRouteArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TransitionRouteArray) ToGoogleCloudDialogflowCxV3TransitionRouteArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TransitionRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TransitionRouteArrayOutput)
}

// A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3TransitionRouteOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TransitionRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TransitionRoute)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) ToGoogleCloudDialogflowCxV3TransitionRouteOutput() GoogleCloudDialogflowCxV3TransitionRouteOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) ToGoogleCloudDialogflowCxV3TransitionRouteOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TransitionRouteOutput {
	return o
}

// The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRoute) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// Optional. The description of the transition route. The maximum length is 500 characters.
func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRoute) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) Intent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRoute) *string { return v.Intent }).(pulumi.StringPtrOutput)
}

// The target flow to transition to. Format: `projects//locations//agents//flows/`.
func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) TargetFlow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRoute) *string { return v.TargetFlow }).(pulumi.StringPtrOutput)
}

// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) TargetPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRoute) *string { return v.TargetPage }).(pulumi.StringPtrOutput)
}

// The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.
func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) TriggerFulfillment() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRoute) *GoogleCloudDialogflowCxV3Fulfillment {
		return v.TriggerFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

type GoogleCloudDialogflowCxV3TransitionRouteArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TransitionRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3TransitionRoute)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TransitionRouteArrayOutput) ToGoogleCloudDialogflowCxV3TransitionRouteArrayOutput() GoogleCloudDialogflowCxV3TransitionRouteArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TransitionRouteArrayOutput) ToGoogleCloudDialogflowCxV3TransitionRouteArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TransitionRouteArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TransitionRouteArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3TransitionRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3TransitionRoute {
		return vs[0].([]GoogleCloudDialogflowCxV3TransitionRoute)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3TransitionRouteOutput)
}

// A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3TransitionRouteResponse struct {
	// The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
	Condition string `pulumi:"condition"`
	// Optional. The description of the transition route. The maximum length is 500 characters.
	Description string `pulumi:"description"`
	// The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
	Intent string `pulumi:"intent"`
	// The unique identifier of this transition route.
	Name string `pulumi:"name"`
	// The target flow to transition to. Format: `projects//locations//agents//flows/`.
	TargetFlow string `pulumi:"targetFlow"`
	// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
	TargetPage string `pulumi:"targetPage"`
	// The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.
	TriggerFulfillment GoogleCloudDialogflowCxV3FulfillmentResponse `pulumi:"triggerFulfillment"`
}

// A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3TransitionRouteResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TransitionRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TransitionRouteResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TransitionRouteResponseOutput) ToGoogleCloudDialogflowCxV3TransitionRouteResponseOutput() GoogleCloudDialogflowCxV3TransitionRouteResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TransitionRouteResponseOutput) ToGoogleCloudDialogflowCxV3TransitionRouteResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TransitionRouteResponseOutput {
	return o
}

// The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
func (o GoogleCloudDialogflowCxV3TransitionRouteResponseOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRouteResponse) string { return v.Condition }).(pulumi.StringOutput)
}

// Optional. The description of the transition route. The maximum length is 500 characters.
func (o GoogleCloudDialogflowCxV3TransitionRouteResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRouteResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
func (o GoogleCloudDialogflowCxV3TransitionRouteResponseOutput) Intent() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRouteResponse) string { return v.Intent }).(pulumi.StringOutput)
}

// The unique identifier of this transition route.
func (o GoogleCloudDialogflowCxV3TransitionRouteResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRouteResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The target flow to transition to. Format: `projects//locations//agents//flows/`.
func (o GoogleCloudDialogflowCxV3TransitionRouteResponseOutput) TargetFlow() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRouteResponse) string { return v.TargetFlow }).(pulumi.StringOutput)
}

// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
func (o GoogleCloudDialogflowCxV3TransitionRouteResponseOutput) TargetPage() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRouteResponse) string { return v.TargetPage }).(pulumi.StringOutput)
}

// The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.
func (o GoogleCloudDialogflowCxV3TransitionRouteResponseOutput) TriggerFulfillment() GoogleCloudDialogflowCxV3FulfillmentResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRouteResponse) GoogleCloudDialogflowCxV3FulfillmentResponse {
		return v.TriggerFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentResponseOutput)
}

type GoogleCloudDialogflowCxV3TransitionRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TransitionRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3TransitionRouteResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TransitionRouteResponseArrayOutput) ToGoogleCloudDialogflowCxV3TransitionRouteResponseArrayOutput() GoogleCloudDialogflowCxV3TransitionRouteResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TransitionRouteResponseArrayOutput) ToGoogleCloudDialogflowCxV3TransitionRouteResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TransitionRouteResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TransitionRouteResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3TransitionRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3TransitionRouteResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3TransitionRouteResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3TransitionRouteResponseOutput)
}

// The history of variants update.
type GoogleCloudDialogflowCxV3VariantsHistory struct {
	// Update time of the variants.
	UpdateTime *string `pulumi:"updateTime"`
	// The flow versions as the variants.
	VersionVariants *GoogleCloudDialogflowCxV3VersionVariants `pulumi:"versionVariants"`
}

// GoogleCloudDialogflowCxV3VariantsHistoryInput is an input type that accepts GoogleCloudDialogflowCxV3VariantsHistoryArgs and GoogleCloudDialogflowCxV3VariantsHistoryOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3VariantsHistoryInput` via:
//
//	GoogleCloudDialogflowCxV3VariantsHistoryArgs{...}
type GoogleCloudDialogflowCxV3VariantsHistoryInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3VariantsHistoryOutput() GoogleCloudDialogflowCxV3VariantsHistoryOutput
	ToGoogleCloudDialogflowCxV3VariantsHistoryOutputWithContext(context.Context) GoogleCloudDialogflowCxV3VariantsHistoryOutput
}

// The history of variants update.
type GoogleCloudDialogflowCxV3VariantsHistoryArgs struct {
	// Update time of the variants.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
	// The flow versions as the variants.
	VersionVariants GoogleCloudDialogflowCxV3VersionVariantsPtrInput `pulumi:"versionVariants"`
}

func (GoogleCloudDialogflowCxV3VariantsHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VariantsHistory)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3VariantsHistoryArgs) ToGoogleCloudDialogflowCxV3VariantsHistoryOutput() GoogleCloudDialogflowCxV3VariantsHistoryOutput {
	return i.ToGoogleCloudDialogflowCxV3VariantsHistoryOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3VariantsHistoryArgs) ToGoogleCloudDialogflowCxV3VariantsHistoryOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VariantsHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VariantsHistoryOutput)
}

// GoogleCloudDialogflowCxV3VariantsHistoryArrayInput is an input type that accepts GoogleCloudDialogflowCxV3VariantsHistoryArray and GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3VariantsHistoryArrayInput` via:
//
//	GoogleCloudDialogflowCxV3VariantsHistoryArray{ GoogleCloudDialogflowCxV3VariantsHistoryArgs{...} }
type GoogleCloudDialogflowCxV3VariantsHistoryArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3VariantsHistoryArrayOutput() GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput
	ToGoogleCloudDialogflowCxV3VariantsHistoryArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput
}

type GoogleCloudDialogflowCxV3VariantsHistoryArray []GoogleCloudDialogflowCxV3VariantsHistoryInput

func (GoogleCloudDialogflowCxV3VariantsHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3VariantsHistory)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3VariantsHistoryArray) ToGoogleCloudDialogflowCxV3VariantsHistoryArrayOutput() GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3VariantsHistoryArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3VariantsHistoryArray) ToGoogleCloudDialogflowCxV3VariantsHistoryArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput)
}

// The history of variants update.
type GoogleCloudDialogflowCxV3VariantsHistoryOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VariantsHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VariantsHistory)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryOutput) ToGoogleCloudDialogflowCxV3VariantsHistoryOutput() GoogleCloudDialogflowCxV3VariantsHistoryOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryOutput) ToGoogleCloudDialogflowCxV3VariantsHistoryOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VariantsHistoryOutput {
	return o
}

// Update time of the variants.
func (o GoogleCloudDialogflowCxV3VariantsHistoryOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VariantsHistory) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

// The flow versions as the variants.
func (o GoogleCloudDialogflowCxV3VariantsHistoryOutput) VersionVariants() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VariantsHistory) *GoogleCloudDialogflowCxV3VersionVariants {
		return v.VersionVariants
	}).(GoogleCloudDialogflowCxV3VersionVariantsPtrOutput)
}

type GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3VariantsHistory)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput) ToGoogleCloudDialogflowCxV3VariantsHistoryArrayOutput() GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput) ToGoogleCloudDialogflowCxV3VariantsHistoryArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3VariantsHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3VariantsHistory {
		return vs[0].([]GoogleCloudDialogflowCxV3VariantsHistory)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3VariantsHistoryOutput)
}

// The history of variants update.
type GoogleCloudDialogflowCxV3VariantsHistoryResponse struct {
	// Update time of the variants.
	UpdateTime string `pulumi:"updateTime"`
	// The flow versions as the variants.
	VersionVariants GoogleCloudDialogflowCxV3VersionVariantsResponse `pulumi:"versionVariants"`
}

// The history of variants update.
type GoogleCloudDialogflowCxV3VariantsHistoryResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VariantsHistoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VariantsHistoryResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryResponseOutput) ToGoogleCloudDialogflowCxV3VariantsHistoryResponseOutput() GoogleCloudDialogflowCxV3VariantsHistoryResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryResponseOutput) ToGoogleCloudDialogflowCxV3VariantsHistoryResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VariantsHistoryResponseOutput {
	return o
}

// Update time of the variants.
func (o GoogleCloudDialogflowCxV3VariantsHistoryResponseOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VariantsHistoryResponse) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The flow versions as the variants.
func (o GoogleCloudDialogflowCxV3VariantsHistoryResponseOutput) VersionVariants() GoogleCloudDialogflowCxV3VersionVariantsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VariantsHistoryResponse) GoogleCloudDialogflowCxV3VersionVariantsResponse {
		return v.VersionVariants
	}).(GoogleCloudDialogflowCxV3VersionVariantsResponseOutput)
}

type GoogleCloudDialogflowCxV3VariantsHistoryResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VariantsHistoryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3VariantsHistoryResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryResponseArrayOutput) ToGoogleCloudDialogflowCxV3VariantsHistoryResponseArrayOutput() GoogleCloudDialogflowCxV3VariantsHistoryResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryResponseArrayOutput) ToGoogleCloudDialogflowCxV3VariantsHistoryResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VariantsHistoryResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3VariantsHistoryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3VariantsHistoryResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3VariantsHistoryResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3VariantsHistoryResponseOutput)
}

// A list of flow version variants.
type GoogleCloudDialogflowCxV3VersionVariants struct {
	// A list of flow version variants.
	Variants []GoogleCloudDialogflowCxV3VersionVariantsVariant `pulumi:"variants"`
}

// GoogleCloudDialogflowCxV3VersionVariantsInput is an input type that accepts GoogleCloudDialogflowCxV3VersionVariantsArgs and GoogleCloudDialogflowCxV3VersionVariantsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3VersionVariantsInput` via:
//
//	GoogleCloudDialogflowCxV3VersionVariantsArgs{...}
type GoogleCloudDialogflowCxV3VersionVariantsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3VersionVariantsOutput() GoogleCloudDialogflowCxV3VersionVariantsOutput
	ToGoogleCloudDialogflowCxV3VersionVariantsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3VersionVariantsOutput
}

// A list of flow version variants.
type GoogleCloudDialogflowCxV3VersionVariantsArgs struct {
	// A list of flow version variants.
	Variants GoogleCloudDialogflowCxV3VersionVariantsVariantArrayInput `pulumi:"variants"`
}

func (GoogleCloudDialogflowCxV3VersionVariantsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VersionVariants)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3VersionVariantsArgs) ToGoogleCloudDialogflowCxV3VersionVariantsOutput() GoogleCloudDialogflowCxV3VersionVariantsOutput {
	return i.ToGoogleCloudDialogflowCxV3VersionVariantsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3VersionVariantsArgs) ToGoogleCloudDialogflowCxV3VersionVariantsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VersionVariantsOutput)
}

func (i GoogleCloudDialogflowCxV3VersionVariantsArgs) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutput() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3VersionVariantsArgs) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VersionVariantsOutput).ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3VersionVariantsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3VersionVariantsArgs, GoogleCloudDialogflowCxV3VersionVariantsPtr and GoogleCloudDialogflowCxV3VersionVariantsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3VersionVariantsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3VersionVariantsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3VersionVariantsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutput() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput
	ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3VersionVariantsPtrOutput
}

type googleCloudDialogflowCxV3VersionVariantsPtrType GoogleCloudDialogflowCxV3VersionVariantsArgs

func GoogleCloudDialogflowCxV3VersionVariantsPtr(v *GoogleCloudDialogflowCxV3VersionVariantsArgs) GoogleCloudDialogflowCxV3VersionVariantsPtrInput {
	return (*googleCloudDialogflowCxV3VersionVariantsPtrType)(v)
}

func (*googleCloudDialogflowCxV3VersionVariantsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3VersionVariants)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3VersionVariantsPtrType) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutput() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3VersionVariantsPtrType) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VersionVariantsPtrOutput)
}

// A list of flow version variants.
type GoogleCloudDialogflowCxV3VersionVariantsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VersionVariantsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VersionVariants)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VersionVariantsOutput) ToGoogleCloudDialogflowCxV3VersionVariantsOutput() GoogleCloudDialogflowCxV3VersionVariantsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsOutput) ToGoogleCloudDialogflowCxV3VersionVariantsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsOutput) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutput() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3VersionVariantsOutput) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3VersionVariants) *GoogleCloudDialogflowCxV3VersionVariants {
		return &v
	}).(GoogleCloudDialogflowCxV3VersionVariantsPtrOutput)
}

// A list of flow version variants.
func (o GoogleCloudDialogflowCxV3VersionVariantsOutput) Variants() GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VersionVariants) []GoogleCloudDialogflowCxV3VersionVariantsVariant {
		return v.Variants
	}).(GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput)
}

type GoogleCloudDialogflowCxV3VersionVariantsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VersionVariantsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3VersionVariants)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VersionVariantsPtrOutput) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutput() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsPtrOutput) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsPtrOutput) Elem() GoogleCloudDialogflowCxV3VersionVariantsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3VersionVariants) GoogleCloudDialogflowCxV3VersionVariants {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3VersionVariants
		return ret
	}).(GoogleCloudDialogflowCxV3VersionVariantsOutput)
}

// A list of flow version variants.
func (o GoogleCloudDialogflowCxV3VersionVariantsPtrOutput) Variants() GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3VersionVariants) []GoogleCloudDialogflowCxV3VersionVariantsVariant {
		if v == nil {
			return nil
		}
		return v.Variants
	}).(GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput)
}

// A list of flow version variants.
type GoogleCloudDialogflowCxV3VersionVariantsResponse struct {
	// A list of flow version variants.
	Variants []GoogleCloudDialogflowCxV3VersionVariantsVariantResponse `pulumi:"variants"`
}

// A list of flow version variants.
type GoogleCloudDialogflowCxV3VersionVariantsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VersionVariantsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VersionVariantsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VersionVariantsResponseOutput) ToGoogleCloudDialogflowCxV3VersionVariantsResponseOutput() GoogleCloudDialogflowCxV3VersionVariantsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsResponseOutput) ToGoogleCloudDialogflowCxV3VersionVariantsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsResponseOutput {
	return o
}

// A list of flow version variants.
func (o GoogleCloudDialogflowCxV3VersionVariantsResponseOutput) Variants() GoogleCloudDialogflowCxV3VersionVariantsVariantResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VersionVariantsResponse) []GoogleCloudDialogflowCxV3VersionVariantsVariantResponse {
		return v.Variants
	}).(GoogleCloudDialogflowCxV3VersionVariantsVariantResponseArrayOutput)
}

// A single flow version with specified traffic allocation.
type GoogleCloudDialogflowCxV3VersionVariantsVariant struct {
	// Whether the variant is for the control group.
	IsControlGroup *bool `pulumi:"isControlGroup"`
	// Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.
	TrafficAllocation *float64 `pulumi:"trafficAllocation"`
	// The name of the flow version. Format: `projects//locations//agents//flows//versions/`.
	Version *string `pulumi:"version"`
}

// GoogleCloudDialogflowCxV3VersionVariantsVariantInput is an input type that accepts GoogleCloudDialogflowCxV3VersionVariantsVariantArgs and GoogleCloudDialogflowCxV3VersionVariantsVariantOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3VersionVariantsVariantInput` via:
//
//	GoogleCloudDialogflowCxV3VersionVariantsVariantArgs{...}
type GoogleCloudDialogflowCxV3VersionVariantsVariantInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3VersionVariantsVariantOutput() GoogleCloudDialogflowCxV3VersionVariantsVariantOutput
	ToGoogleCloudDialogflowCxV3VersionVariantsVariantOutputWithContext(context.Context) GoogleCloudDialogflowCxV3VersionVariantsVariantOutput
}

// A single flow version with specified traffic allocation.
type GoogleCloudDialogflowCxV3VersionVariantsVariantArgs struct {
	// Whether the variant is for the control group.
	IsControlGroup pulumi.BoolPtrInput `pulumi:"isControlGroup"`
	// Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.
	TrafficAllocation pulumi.Float64PtrInput `pulumi:"trafficAllocation"`
	// The name of the flow version. Format: `projects//locations//agents//flows//versions/`.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GoogleCloudDialogflowCxV3VersionVariantsVariantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VersionVariantsVariant)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3VersionVariantsVariantArgs) ToGoogleCloudDialogflowCxV3VersionVariantsVariantOutput() GoogleCloudDialogflowCxV3VersionVariantsVariantOutput {
	return i.ToGoogleCloudDialogflowCxV3VersionVariantsVariantOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3VersionVariantsVariantArgs) ToGoogleCloudDialogflowCxV3VersionVariantsVariantOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsVariantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VersionVariantsVariantOutput)
}

// GoogleCloudDialogflowCxV3VersionVariantsVariantArrayInput is an input type that accepts GoogleCloudDialogflowCxV3VersionVariantsVariantArray and GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3VersionVariantsVariantArrayInput` via:
//
//	GoogleCloudDialogflowCxV3VersionVariantsVariantArray{ GoogleCloudDialogflowCxV3VersionVariantsVariantArgs{...} }
type GoogleCloudDialogflowCxV3VersionVariantsVariantArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput() GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput
	ToGoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput
}

type GoogleCloudDialogflowCxV3VersionVariantsVariantArray []GoogleCloudDialogflowCxV3VersionVariantsVariantInput

func (GoogleCloudDialogflowCxV3VersionVariantsVariantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3VersionVariantsVariant)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3VersionVariantsVariantArray) ToGoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput() GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3VersionVariantsVariantArray) ToGoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput)
}

// A single flow version with specified traffic allocation.
type GoogleCloudDialogflowCxV3VersionVariantsVariantOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VersionVariantsVariantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VersionVariantsVariant)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantOutput) ToGoogleCloudDialogflowCxV3VersionVariantsVariantOutput() GoogleCloudDialogflowCxV3VersionVariantsVariantOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantOutput) ToGoogleCloudDialogflowCxV3VersionVariantsVariantOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsVariantOutput {
	return o
}

// Whether the variant is for the control group.
func (o GoogleCloudDialogflowCxV3VersionVariantsVariantOutput) IsControlGroup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VersionVariantsVariant) *bool { return v.IsControlGroup }).(pulumi.BoolPtrOutput)
}

// Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.
func (o GoogleCloudDialogflowCxV3VersionVariantsVariantOutput) TrafficAllocation() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VersionVariantsVariant) *float64 { return v.TrafficAllocation }).(pulumi.Float64PtrOutput)
}

// The name of the flow version. Format: `projects//locations//agents//flows//versions/`.
func (o GoogleCloudDialogflowCxV3VersionVariantsVariantOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VersionVariantsVariant) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3VersionVariantsVariant)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput) ToGoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput() GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput) ToGoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3VersionVariantsVariantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3VersionVariantsVariant {
		return vs[0].([]GoogleCloudDialogflowCxV3VersionVariantsVariant)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3VersionVariantsVariantOutput)
}

// A single flow version with specified traffic allocation.
type GoogleCloudDialogflowCxV3VersionVariantsVariantResponse struct {
	// Whether the variant is for the control group.
	IsControlGroup bool `pulumi:"isControlGroup"`
	// Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.
	TrafficAllocation float64 `pulumi:"trafficAllocation"`
	// The name of the flow version. Format: `projects//locations//agents//flows//versions/`.
	Version string `pulumi:"version"`
}

// A single flow version with specified traffic allocation.
type GoogleCloudDialogflowCxV3VersionVariantsVariantResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VersionVariantsVariantResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VersionVariantsVariantResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantResponseOutput) ToGoogleCloudDialogflowCxV3VersionVariantsVariantResponseOutput() GoogleCloudDialogflowCxV3VersionVariantsVariantResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantResponseOutput) ToGoogleCloudDialogflowCxV3VersionVariantsVariantResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsVariantResponseOutput {
	return o
}

// Whether the variant is for the control group.
func (o GoogleCloudDialogflowCxV3VersionVariantsVariantResponseOutput) IsControlGroup() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VersionVariantsVariantResponse) bool { return v.IsControlGroup }).(pulumi.BoolOutput)
}

// Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.
func (o GoogleCloudDialogflowCxV3VersionVariantsVariantResponseOutput) TrafficAllocation() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VersionVariantsVariantResponse) float64 { return v.TrafficAllocation }).(pulumi.Float64Output)
}

// The name of the flow version. Format: `projects//locations//agents//flows//versions/`.
func (o GoogleCloudDialogflowCxV3VersionVariantsVariantResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VersionVariantsVariantResponse) string { return v.Version }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3VersionVariantsVariantResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VersionVariantsVariantResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3VersionVariantsVariantResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantResponseArrayOutput) ToGoogleCloudDialogflowCxV3VersionVariantsVariantResponseArrayOutput() GoogleCloudDialogflowCxV3VersionVariantsVariantResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantResponseArrayOutput) ToGoogleCloudDialogflowCxV3VersionVariantsVariantResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsVariantResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3VersionVariantsVariantResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3VersionVariantsVariantResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3VersionVariantsVariantResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3VersionVariantsVariantResponseOutput)
}

// Description of which voice to use for speech synthesis.
type GoogleCloudDialogflowCxV3VoiceSelectionParams struct {
	// Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender. For the list of available voices, please refer to [Supported voices and languages](https://cloud.google.com/text-to-speech/docs/voices).
	Name *string `pulumi:"name"`
	// Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer substitutes a voice with a different gender rather than failing the request.
	SsmlGender *GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender `pulumi:"ssmlGender"`
}

// GoogleCloudDialogflowCxV3VoiceSelectionParamsInput is an input type that accepts GoogleCloudDialogflowCxV3VoiceSelectionParamsArgs and GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3VoiceSelectionParamsInput` via:
//
//	GoogleCloudDialogflowCxV3VoiceSelectionParamsArgs{...}
type GoogleCloudDialogflowCxV3VoiceSelectionParamsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3VoiceSelectionParamsOutput() GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput
	ToGoogleCloudDialogflowCxV3VoiceSelectionParamsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput
}

// Description of which voice to use for speech synthesis.
type GoogleCloudDialogflowCxV3VoiceSelectionParamsArgs struct {
	// Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender. For the list of available voices, please refer to [Supported voices and languages](https://cloud.google.com/text-to-speech/docs/voices).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer substitutes a voice with a different gender rather than failing the request.
	SsmlGender GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGenderPtrInput `pulumi:"ssmlGender"`
}

func (GoogleCloudDialogflowCxV3VoiceSelectionParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VoiceSelectionParams)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3VoiceSelectionParamsArgs) ToGoogleCloudDialogflowCxV3VoiceSelectionParamsOutput() GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput {
	return i.ToGoogleCloudDialogflowCxV3VoiceSelectionParamsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3VoiceSelectionParamsArgs) ToGoogleCloudDialogflowCxV3VoiceSelectionParamsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput)
}

func (i GoogleCloudDialogflowCxV3VoiceSelectionParamsArgs) ToGoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput() GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3VoiceSelectionParamsArgs) ToGoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput).ToGoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3VoiceSelectionParamsArgs, GoogleCloudDialogflowCxV3VoiceSelectionParamsPtr and GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3VoiceSelectionParamsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput() GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput
	ToGoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput
}

type googleCloudDialogflowCxV3VoiceSelectionParamsPtrType GoogleCloudDialogflowCxV3VoiceSelectionParamsArgs

func GoogleCloudDialogflowCxV3VoiceSelectionParamsPtr(v *GoogleCloudDialogflowCxV3VoiceSelectionParamsArgs) GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrInput {
	return (*googleCloudDialogflowCxV3VoiceSelectionParamsPtrType)(v)
}

func (*googleCloudDialogflowCxV3VoiceSelectionParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3VoiceSelectionParams)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3VoiceSelectionParamsPtrType) ToGoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput() GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3VoiceSelectionParamsPtrType) ToGoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput)
}

// Description of which voice to use for speech synthesis.
type GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VoiceSelectionParams)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput) ToGoogleCloudDialogflowCxV3VoiceSelectionParamsOutput() GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput) ToGoogleCloudDialogflowCxV3VoiceSelectionParamsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput) ToGoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput() GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput) ToGoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3VoiceSelectionParams) *GoogleCloudDialogflowCxV3VoiceSelectionParams {
		return &v
	}).(GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput)
}

// Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender. For the list of available voices, please refer to [Supported voices and languages](https://cloud.google.com/text-to-speech/docs/voices).
func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VoiceSelectionParams) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer substitutes a voice with a different gender rather than failing the request.
func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput) SsmlGender() GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGenderPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VoiceSelectionParams) *GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender {
		return v.SsmlGender
	}).(GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGenderPtrOutput)
}

type GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3VoiceSelectionParams)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput) ToGoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput() GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput) ToGoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput) Elem() GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3VoiceSelectionParams) GoogleCloudDialogflowCxV3VoiceSelectionParams {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3VoiceSelectionParams
		return ret
	}).(GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput)
}

// Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender. For the list of available voices, please refer to [Supported voices and languages](https://cloud.google.com/text-to-speech/docs/voices).
func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3VoiceSelectionParams) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer substitutes a voice with a different gender rather than failing the request.
func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput) SsmlGender() GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGenderPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3VoiceSelectionParams) *GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender {
		if v == nil {
			return nil
		}
		return v.SsmlGender
	}).(GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGenderPtrOutput)
}

// Description of which voice to use for speech synthesis.
type GoogleCloudDialogflowCxV3VoiceSelectionParamsResponse struct {
	// Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender. For the list of available voices, please refer to [Supported voices and languages](https://cloud.google.com/text-to-speech/docs/voices).
	Name string `pulumi:"name"`
	// Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer substitutes a voice with a different gender rather than failing the request.
	SsmlGender string `pulumi:"ssmlGender"`
}

// Description of which voice to use for speech synthesis.
type GoogleCloudDialogflowCxV3VoiceSelectionParamsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VoiceSelectionParamsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VoiceSelectionParamsResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsResponseOutput) ToGoogleCloudDialogflowCxV3VoiceSelectionParamsResponseOutput() GoogleCloudDialogflowCxV3VoiceSelectionParamsResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsResponseOutput) ToGoogleCloudDialogflowCxV3VoiceSelectionParamsResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VoiceSelectionParamsResponseOutput {
	return o
}

// Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender. For the list of available voices, please refer to [Supported voices and languages](https://cloud.google.com/text-to-speech/docs/voices).
func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VoiceSelectionParamsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer substitutes a voice with a different gender rather than failing the request.
func (o GoogleCloudDialogflowCxV3VoiceSelectionParamsResponseOutput) SsmlGender() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VoiceSelectionParamsResponse) string { return v.SsmlGender }).(pulumi.StringOutput)
}

// Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend.
type GoogleCloudDialogflowCxV3Webhook struct {
	// Indicates whether the webhook is disabled.
	Disabled *bool `pulumi:"disabled"`
	// The human-readable name of the webhook, unique within the agent.
	DisplayName string `pulumi:"displayName"`
	// Configuration for a generic web service.
	GenericWebService *GoogleCloudDialogflowCxV3WebhookGenericWebService `pulumi:"genericWebService"`
	// The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.
	Name *string `pulumi:"name"`
	// Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
	ServiceDirectory *GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig `pulumi:"serviceDirectory"`
	// Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
	Timeout *string `pulumi:"timeout"`
}

// GoogleCloudDialogflowCxV3WebhookInput is an input type that accepts GoogleCloudDialogflowCxV3WebhookArgs and GoogleCloudDialogflowCxV3WebhookOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3WebhookInput` via:
//
//	GoogleCloudDialogflowCxV3WebhookArgs{...}
type GoogleCloudDialogflowCxV3WebhookInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3WebhookOutput() GoogleCloudDialogflowCxV3WebhookOutput
	ToGoogleCloudDialogflowCxV3WebhookOutputWithContext(context.Context) GoogleCloudDialogflowCxV3WebhookOutput
}

// Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend.
type GoogleCloudDialogflowCxV3WebhookArgs struct {
	// Indicates whether the webhook is disabled.
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// The human-readable name of the webhook, unique within the agent.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Configuration for a generic web service.
	GenericWebService GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrInput `pulumi:"genericWebService"`
	// The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
	ServiceDirectory GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrInput `pulumi:"serviceDirectory"`
	// Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (GoogleCloudDialogflowCxV3WebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Webhook)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3WebhookArgs) ToGoogleCloudDialogflowCxV3WebhookOutput() GoogleCloudDialogflowCxV3WebhookOutput {
	return i.ToGoogleCloudDialogflowCxV3WebhookOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3WebhookArgs) ToGoogleCloudDialogflowCxV3WebhookOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3WebhookOutput)
}

// GoogleCloudDialogflowCxV3WebhookArrayInput is an input type that accepts GoogleCloudDialogflowCxV3WebhookArray and GoogleCloudDialogflowCxV3WebhookArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3WebhookArrayInput` via:
//
//	GoogleCloudDialogflowCxV3WebhookArray{ GoogleCloudDialogflowCxV3WebhookArgs{...} }
type GoogleCloudDialogflowCxV3WebhookArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3WebhookArrayOutput() GoogleCloudDialogflowCxV3WebhookArrayOutput
	ToGoogleCloudDialogflowCxV3WebhookArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3WebhookArrayOutput
}

type GoogleCloudDialogflowCxV3WebhookArray []GoogleCloudDialogflowCxV3WebhookInput

func (GoogleCloudDialogflowCxV3WebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3Webhook)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3WebhookArray) ToGoogleCloudDialogflowCxV3WebhookArrayOutput() GoogleCloudDialogflowCxV3WebhookArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3WebhookArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3WebhookArray) ToGoogleCloudDialogflowCxV3WebhookArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3WebhookArrayOutput)
}

// Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend.
type GoogleCloudDialogflowCxV3WebhookOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3WebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Webhook)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3WebhookOutput) ToGoogleCloudDialogflowCxV3WebhookOutput() GoogleCloudDialogflowCxV3WebhookOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookOutput) ToGoogleCloudDialogflowCxV3WebhookOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookOutput {
	return o
}

// Indicates whether the webhook is disabled.
func (o GoogleCloudDialogflowCxV3WebhookOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Webhook) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The human-readable name of the webhook, unique within the agent.
func (o GoogleCloudDialogflowCxV3WebhookOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Webhook) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Configuration for a generic web service.
func (o GoogleCloudDialogflowCxV3WebhookOutput) GenericWebService() GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Webhook) *GoogleCloudDialogflowCxV3WebhookGenericWebService {
		return v.GenericWebService
	}).(GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput)
}

// The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.
func (o GoogleCloudDialogflowCxV3WebhookOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Webhook) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
func (o GoogleCloudDialogflowCxV3WebhookOutput) ServiceDirectory() GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Webhook) *GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig {
		return v.ServiceDirectory
	}).(GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput)
}

// Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
func (o GoogleCloudDialogflowCxV3WebhookOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Webhook) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3WebhookArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3WebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3Webhook)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3WebhookArrayOutput) ToGoogleCloudDialogflowCxV3WebhookArrayOutput() GoogleCloudDialogflowCxV3WebhookArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookArrayOutput) ToGoogleCloudDialogflowCxV3WebhookArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3WebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3Webhook {
		return vs[0].([]GoogleCloudDialogflowCxV3Webhook)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3WebhookOutput)
}

// Represents configuration for a generic web service.
type GoogleCloudDialogflowCxV3WebhookGenericWebService struct {
	// Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with "subject alt name". For instance a certificate can be self-signed using the following command, ```openssl x509 -req -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile <(printf "\nsubjectAltName='DNS:www.example.com'")```
	AllowedCaCerts []string `pulumi:"allowedCaCerts"`
	// Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.
	HttpMethod *GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod `pulumi:"httpMethod"`
	// Optional. Maps the values extracted from specific fields of the flexible webhook response into session parameters. - Key: session parameter name - Value: field path in the webhook response
	ParameterMapping map[string]string `pulumi:"parameterMapping"`
	// The password for HTTP Basic authentication.
	Password *string `pulumi:"password"`
	// Optional. Defines a custom JSON object as request body to send to flexible webhook.
	RequestBody *string `pulumi:"requestBody"`
	// The HTTP request headers to send together with webhook requests.
	RequestHeaders map[string]string `pulumi:"requestHeaders"`
	// The webhook URI for receiving POST requests. It must use https protocol.
	Uri string `pulumi:"uri"`
	// The user name for HTTP Basic authentication.
	Username *string `pulumi:"username"`
	// Optional. Type of the webhook.
	WebhookType *GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType `pulumi:"webhookType"`
}

// GoogleCloudDialogflowCxV3WebhookGenericWebServiceInput is an input type that accepts GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs and GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3WebhookGenericWebServiceInput` via:
//
//	GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs{...}
type GoogleCloudDialogflowCxV3WebhookGenericWebServiceInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput
	ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceOutputWithContext(context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput
}

// Represents configuration for a generic web service.
type GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs struct {
	// Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with "subject alt name". For instance a certificate can be self-signed using the following command, ```openssl x509 -req -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile <(printf "\nsubjectAltName='DNS:www.example.com'")```
	AllowedCaCerts pulumi.StringArrayInput `pulumi:"allowedCaCerts"`
	// Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.
	HttpMethod GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethodPtrInput `pulumi:"httpMethod"`
	// Optional. Maps the values extracted from specific fields of the flexible webhook response into session parameters. - Key: session parameter name - Value: field path in the webhook response
	ParameterMapping pulumi.StringMapInput `pulumi:"parameterMapping"`
	// The password for HTTP Basic authentication.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Optional. Defines a custom JSON object as request body to send to flexible webhook.
	RequestBody pulumi.StringPtrInput `pulumi:"requestBody"`
	// The HTTP request headers to send together with webhook requests.
	RequestHeaders pulumi.StringMapInput `pulumi:"requestHeaders"`
	// The webhook URI for receiving POST requests. It must use https protocol.
	Uri pulumi.StringInput `pulumi:"uri"`
	// The user name for HTTP Basic authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Optional. Type of the webhook.
	WebhookType GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookTypePtrInput `pulumi:"webhookType"`
}

func (GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookGenericWebService)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs) ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput {
	return i.ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs) ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput)
}

func (i GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput).ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrInput is an input type that accepts GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs, GoogleCloudDialogflowCxV3WebhookGenericWebServicePtr and GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrInput` via:
//
//	        GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput
	ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput
}

type googleCloudDialogflowCxV3WebhookGenericWebServicePtrType GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs

func GoogleCloudDialogflowCxV3WebhookGenericWebServicePtr(v *GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs) GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrInput {
	return (*googleCloudDialogflowCxV3WebhookGenericWebServicePtrType)(v)
}

func (*googleCloudDialogflowCxV3WebhookGenericWebServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3WebhookGenericWebService)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3WebhookGenericWebServicePtrType) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3WebhookGenericWebServicePtrType) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput)
}

// Represents configuration for a generic web service.
type GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookGenericWebService)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return o.ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3WebhookGenericWebService) *GoogleCloudDialogflowCxV3WebhookGenericWebService {
		return &v
	}).(GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput)
}

// Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with "subject alt name". For instance a certificate can be self-signed using the following command, ```openssl x509 -req -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile <(printf "\nsubjectAltName='DNS:www.example.com'")```
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) AllowedCaCerts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebService) []string { return v.AllowedCaCerts }).(pulumi.StringArrayOutput)
}

// Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) HttpMethod() GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethodPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebService) *GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod {
		return v.HttpMethod
	}).(GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethodPtrOutput)
}

// Optional. Maps the values extracted from specific fields of the flexible webhook response into session parameters. - Key: session parameter name - Value: field path in the webhook response
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) ParameterMapping() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebService) map[string]string { return v.ParameterMapping }).(pulumi.StringMapOutput)
}

// The password for HTTP Basic authentication.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebService) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Optional. Defines a custom JSON object as request body to send to flexible webhook.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) RequestBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebService) *string { return v.RequestBody }).(pulumi.StringPtrOutput)
}

// The HTTP request headers to send together with webhook requests.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) RequestHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebService) map[string]string { return v.RequestHeaders }).(pulumi.StringMapOutput)
}

// The webhook URI for receiving POST requests. It must use https protocol.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebService) string { return v.Uri }).(pulumi.StringOutput)
}

// The user name for HTTP Basic authentication.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebService) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Optional. Type of the webhook.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) WebhookType() GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookTypePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebService) *GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType {
		return v.WebhookType
	}).(GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookTypePtrOutput)
}

type GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3WebhookGenericWebService)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) Elem() GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) GoogleCloudDialogflowCxV3WebhookGenericWebService {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3WebhookGenericWebService
		return ret
	}).(GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput)
}

// Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with "subject alt name". For instance a certificate can be self-signed using the following command, ```openssl x509 -req -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile <(printf "\nsubjectAltName='DNS:www.example.com'")```
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) AllowedCaCerts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) []string {
		if v == nil {
			return nil
		}
		return v.AllowedCaCerts
	}).(pulumi.StringArrayOutput)
}

// Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) HttpMethod() GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethodPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) *GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod {
		if v == nil {
			return nil
		}
		return v.HttpMethod
	}).(GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethodPtrOutput)
}

// Optional. Maps the values extracted from specific fields of the flexible webhook response into session parameters. - Key: session parameter name - Value: field path in the webhook response
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) ParameterMapping() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) map[string]string {
		if v == nil {
			return nil
		}
		return v.ParameterMapping
	}).(pulumi.StringMapOutput)
}

// The password for HTTP Basic authentication.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Optional. Defines a custom JSON object as request body to send to flexible webhook.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) RequestBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) *string {
		if v == nil {
			return nil
		}
		return v.RequestBody
	}).(pulumi.StringPtrOutput)
}

// The HTTP request headers to send together with webhook requests.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) RequestHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) map[string]string {
		if v == nil {
			return nil
		}
		return v.RequestHeaders
	}).(pulumi.StringMapOutput)
}

// The webhook URI for receiving POST requests. It must use https protocol.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

// The user name for HTTP Basic authentication.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Optional. Type of the webhook.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) WebhookType() GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookTypePtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) *GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType {
		if v == nil {
			return nil
		}
		return v.WebhookType
	}).(GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookTypePtrOutput)
}

// Represents configuration for a generic web service.
type GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse struct {
	// Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with "subject alt name". For instance a certificate can be self-signed using the following command, ```openssl x509 -req -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile <(printf "\nsubjectAltName='DNS:www.example.com'")```
	AllowedCaCerts []string `pulumi:"allowedCaCerts"`
	// Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.
	HttpMethod string `pulumi:"httpMethod"`
	// Optional. Maps the values extracted from specific fields of the flexible webhook response into session parameters. - Key: session parameter name - Value: field path in the webhook response
	ParameterMapping map[string]string `pulumi:"parameterMapping"`
	// The password for HTTP Basic authentication.
	Password string `pulumi:"password"`
	// Optional. Defines a custom JSON object as request body to send to flexible webhook.
	RequestBody string `pulumi:"requestBody"`
	// The HTTP request headers to send together with webhook requests.
	RequestHeaders map[string]string `pulumi:"requestHeaders"`
	// The webhook URI for receiving POST requests. It must use https protocol.
	Uri string `pulumi:"uri"`
	// The user name for HTTP Basic authentication.
	Username string `pulumi:"username"`
	// Optional. Type of the webhook.
	WebhookType string `pulumi:"webhookType"`
}

// Represents configuration for a generic web service.
type GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput) ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput) ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput {
	return o
}

// Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with "subject alt name". For instance a certificate can be self-signed using the following command, ```openssl x509 -req -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile <(printf "\nsubjectAltName='DNS:www.example.com'")```
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput) AllowedCaCerts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse) []string { return v.AllowedCaCerts }).(pulumi.StringArrayOutput)
}

// Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput) HttpMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse) string { return v.HttpMethod }).(pulumi.StringOutput)
}

// Optional. Maps the values extracted from specific fields of the flexible webhook response into session parameters. - Key: session parameter name - Value: field path in the webhook response
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput) ParameterMapping() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse) map[string]string {
		return v.ParameterMapping
	}).(pulumi.StringMapOutput)
}

// The password for HTTP Basic authentication.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse) string { return v.Password }).(pulumi.StringOutput)
}

// Optional. Defines a custom JSON object as request body to send to flexible webhook.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput) RequestBody() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse) string { return v.RequestBody }).(pulumi.StringOutput)
}

// The HTTP request headers to send together with webhook requests.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput) RequestHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse) map[string]string {
		return v.RequestHeaders
	}).(pulumi.StringMapOutput)
}

// The webhook URI for receiving POST requests. It must use https protocol.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// The user name for HTTP Basic authentication.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse) string { return v.Username }).(pulumi.StringOutput)
}

// Optional. Type of the webhook.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput) WebhookType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse) string { return v.WebhookType }).(pulumi.StringOutput)
}

// Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend.
type GoogleCloudDialogflowCxV3WebhookResponse struct {
	// Indicates whether the webhook is disabled.
	Disabled bool `pulumi:"disabled"`
	// The human-readable name of the webhook, unique within the agent.
	DisplayName string `pulumi:"displayName"`
	// Configuration for a generic web service.
	GenericWebService GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse `pulumi:"genericWebService"`
	// The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.
	Name string `pulumi:"name"`
	// Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
	ServiceDirectory GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponse `pulumi:"serviceDirectory"`
	// Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
	Timeout string `pulumi:"timeout"`
}

// Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend.
type GoogleCloudDialogflowCxV3WebhookResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3WebhookResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3WebhookResponseOutput) ToGoogleCloudDialogflowCxV3WebhookResponseOutput() GoogleCloudDialogflowCxV3WebhookResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookResponseOutput) ToGoogleCloudDialogflowCxV3WebhookResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookResponseOutput {
	return o
}

// Indicates whether the webhook is disabled.
func (o GoogleCloudDialogflowCxV3WebhookResponseOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookResponse) bool { return v.Disabled }).(pulumi.BoolOutput)
}

// The human-readable name of the webhook, unique within the agent.
func (o GoogleCloudDialogflowCxV3WebhookResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Configuration for a generic web service.
func (o GoogleCloudDialogflowCxV3WebhookResponseOutput) GenericWebService() GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookResponse) GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse {
		return v.GenericWebService
	}).(GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput)
}

// The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.
func (o GoogleCloudDialogflowCxV3WebhookResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
func (o GoogleCloudDialogflowCxV3WebhookResponseOutput) ServiceDirectory() GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookResponse) GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponse {
		return v.ServiceDirectory
	}).(GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutput)
}

// Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
func (o GoogleCloudDialogflowCxV3WebhookResponseOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookResponse) string { return v.Timeout }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3WebhookResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3WebhookResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3WebhookResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3WebhookResponseArrayOutput) ToGoogleCloudDialogflowCxV3WebhookResponseArrayOutput() GoogleCloudDialogflowCxV3WebhookResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookResponseArrayOutput) ToGoogleCloudDialogflowCxV3WebhookResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookResponseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3WebhookResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3WebhookResponse {
		return vs[0].([]GoogleCloudDialogflowCxV3WebhookResponse)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3WebhookResponseOutput)
}

// Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
type GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig struct {
	// Generic Service configuration of this webhook.
	GenericWebService *GoogleCloudDialogflowCxV3WebhookGenericWebService `pulumi:"genericWebService"`
	// The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the location of the agent.
	Service string `pulumi:"service"`
}

// GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigInput is an input type that accepts GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs and GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigInput` via:
//
//	GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs{...}
type GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput() GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput
	ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutputWithContext(context.Context) GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput
}

// Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
type GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs struct {
	// Generic Service configuration of this webhook.
	GenericWebService GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrInput `pulumi:"genericWebService"`
	// The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the location of the agent.
	Service pulumi.StringInput `pulumi:"service"`
}

func (GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs) ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput() GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput {
	return i.ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs) ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput)
}

func (i GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs) ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput() GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs) ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput).ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrInput is an input type that accepts GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs, GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtr and GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrInput` via:
//
//	        GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput() GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput
	ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput
}

type googleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrType GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs

func GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtr(v *GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs) GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrInput {
	return (*googleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrType)(v)
}

func (*googleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrType) ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput() GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrType) ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput)
}

// Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
type GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput) ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput() GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput) ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput) ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput() GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput) ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig) *GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig {
		return &v
	}).(GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput)
}

// Generic Service configuration of this webhook.
func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput) GenericWebService() GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig) *GoogleCloudDialogflowCxV3WebhookGenericWebService {
		return v.GenericWebService
	}).(GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput)
}

// The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the location of the agent.
func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig) string { return v.Service }).(pulumi.StringOutput)
}

type GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput) ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput() GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput) ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput) Elem() GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig) GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig
		return ret
	}).(GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput)
}

// Generic Service configuration of this webhook.
func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput) GenericWebService() GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig) *GoogleCloudDialogflowCxV3WebhookGenericWebService {
		if v == nil {
			return nil
		}
		return v.GenericWebService
	}).(GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput)
}

// The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the location of the agent.
func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

// Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
type GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponse struct {
	// Generic Service configuration of this webhook.
	GenericWebService GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse `pulumi:"genericWebService"`
	// The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the location of the agent.
	Service string `pulumi:"service"`
}

// Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
type GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponse)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutput) ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutput() GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutput) ToGoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutput {
	return o
}

// Generic Service configuration of this webhook.
func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutput) GenericWebService() GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponse) GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse {
		return v.GenericWebService
	}).(GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput)
}

// The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the location of the agent.
func (o GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponse) string { return v.Service }).(pulumi.StringOutput)
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type GoogleRpcStatus struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code *int `pulumi:"code"`
	// A list of messages that carry the error details. There is a common set of message types for APIs to use.
	Details []map[string]interface{} `pulumi:"details"`
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message *string `pulumi:"message"`
}

// GoogleRpcStatusInput is an input type that accepts GoogleRpcStatusArgs and GoogleRpcStatusOutput values.
// You can construct a concrete instance of `GoogleRpcStatusInput` via:
//
//	GoogleRpcStatusArgs{...}
type GoogleRpcStatusInput interface {
	pulumi.Input

	ToGoogleRpcStatusOutput() GoogleRpcStatusOutput
	ToGoogleRpcStatusOutputWithContext(context.Context) GoogleRpcStatusOutput
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type GoogleRpcStatusArgs struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// A list of messages that carry the error details. There is a common set of message types for APIs to use.
	Details pulumi.MapArrayInput `pulumi:"details"`
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (GoogleRpcStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleRpcStatus)(nil)).Elem()
}

func (i GoogleRpcStatusArgs) ToGoogleRpcStatusOutput() GoogleRpcStatusOutput {
	return i.ToGoogleRpcStatusOutputWithContext(context.Background())
}

func (i GoogleRpcStatusArgs) ToGoogleRpcStatusOutputWithContext(ctx context.Context) GoogleRpcStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleRpcStatusOutput)
}

func (i GoogleRpcStatusArgs) ToGoogleRpcStatusPtrOutput() GoogleRpcStatusPtrOutput {
	return i.ToGoogleRpcStatusPtrOutputWithContext(context.Background())
}

func (i GoogleRpcStatusArgs) ToGoogleRpcStatusPtrOutputWithContext(ctx context.Context) GoogleRpcStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleRpcStatusOutput).ToGoogleRpcStatusPtrOutputWithContext(ctx)
}

// GoogleRpcStatusPtrInput is an input type that accepts GoogleRpcStatusArgs, GoogleRpcStatusPtr and GoogleRpcStatusPtrOutput values.
// You can construct a concrete instance of `GoogleRpcStatusPtrInput` via:
//
//	        GoogleRpcStatusArgs{...}
//
//	or:
//
//	        nil
type GoogleRpcStatusPtrInput interface {
	pulumi.Input

	ToGoogleRpcStatusPtrOutput() GoogleRpcStatusPtrOutput
	ToGoogleRpcStatusPtrOutputWithContext(context.Context) GoogleRpcStatusPtrOutput
}

type googleRpcStatusPtrType GoogleRpcStatusArgs

func GoogleRpcStatusPtr(v *GoogleRpcStatusArgs) GoogleRpcStatusPtrInput {
	return (*googleRpcStatusPtrType)(v)
}

func (*googleRpcStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleRpcStatus)(nil)).Elem()
}

func (i *googleRpcStatusPtrType) ToGoogleRpcStatusPtrOutput() GoogleRpcStatusPtrOutput {
	return i.ToGoogleRpcStatusPtrOutputWithContext(context.Background())
}

func (i *googleRpcStatusPtrType) ToGoogleRpcStatusPtrOutputWithContext(ctx context.Context) GoogleRpcStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleRpcStatusPtrOutput)
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type GoogleRpcStatusOutput struct{ *pulumi.OutputState }

func (GoogleRpcStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleRpcStatus)(nil)).Elem()
}

func (o GoogleRpcStatusOutput) ToGoogleRpcStatusOutput() GoogleRpcStatusOutput {
	return o
}

func (o GoogleRpcStatusOutput) ToGoogleRpcStatusOutputWithContext(ctx context.Context) GoogleRpcStatusOutput {
	return o
}

func (o GoogleRpcStatusOutput) ToGoogleRpcStatusPtrOutput() GoogleRpcStatusPtrOutput {
	return o.ToGoogleRpcStatusPtrOutputWithContext(context.Background())
}

func (o GoogleRpcStatusOutput) ToGoogleRpcStatusPtrOutputWithContext(ctx context.Context) GoogleRpcStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleRpcStatus) *GoogleRpcStatus {
		return &v
	}).(GoogleRpcStatusPtrOutput)
}

// The status code, which should be an enum value of google.rpc.Code.
func (o GoogleRpcStatusOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleRpcStatus) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// A list of messages that carry the error details. There is a common set of message types for APIs to use.
func (o GoogleRpcStatusOutput) Details() pulumi.MapArrayOutput {
	return o.ApplyT(func(v GoogleRpcStatus) []map[string]interface{} { return v.Details }).(pulumi.MapArrayOutput)
}

// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
func (o GoogleRpcStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleRpcStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type GoogleRpcStatusPtrOutput struct{ *pulumi.OutputState }

func (GoogleRpcStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleRpcStatus)(nil)).Elem()
}

func (o GoogleRpcStatusPtrOutput) ToGoogleRpcStatusPtrOutput() GoogleRpcStatusPtrOutput {
	return o
}

func (o GoogleRpcStatusPtrOutput) ToGoogleRpcStatusPtrOutputWithContext(ctx context.Context) GoogleRpcStatusPtrOutput {
	return o
}

func (o GoogleRpcStatusPtrOutput) Elem() GoogleRpcStatusOutput {
	return o.ApplyT(func(v *GoogleRpcStatus) GoogleRpcStatus {
		if v != nil {
			return *v
		}
		var ret GoogleRpcStatus
		return ret
	}).(GoogleRpcStatusOutput)
}

// The status code, which should be an enum value of google.rpc.Code.
func (o GoogleRpcStatusPtrOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleRpcStatus) *int {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.IntPtrOutput)
}

// A list of messages that carry the error details. There is a common set of message types for APIs to use.
func (o GoogleRpcStatusPtrOutput) Details() pulumi.MapArrayOutput {
	return o.ApplyT(func(v *GoogleRpcStatus) []map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Details
	}).(pulumi.MapArrayOutput)
}

// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
func (o GoogleRpcStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleRpcStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type GoogleRpcStatusResponse struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code int `pulumi:"code"`
	// A list of messages that carry the error details. There is a common set of message types for APIs to use.
	Details []map[string]interface{} `pulumi:"details"`
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message string `pulumi:"message"`
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type GoogleRpcStatusResponseOutput struct{ *pulumi.OutputState }

func (GoogleRpcStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleRpcStatusResponse)(nil)).Elem()
}

func (o GoogleRpcStatusResponseOutput) ToGoogleRpcStatusResponseOutput() GoogleRpcStatusResponseOutput {
	return o
}

func (o GoogleRpcStatusResponseOutput) ToGoogleRpcStatusResponseOutputWithContext(ctx context.Context) GoogleRpcStatusResponseOutput {
	return o
}

// The status code, which should be an enum value of google.rpc.Code.
func (o GoogleRpcStatusResponseOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleRpcStatusResponse) int { return v.Code }).(pulumi.IntOutput)
}

// A list of messages that carry the error details. There is a common set of message types for APIs to use.
func (o GoogleRpcStatusResponseOutput) Details() pulumi.MapArrayOutput {
	return o.ApplyT(func(v GoogleRpcStatusResponse) []map[string]interface{} { return v.Details }).(pulumi.MapArrayOutput)
}

// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
func (o GoogleRpcStatusResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleRpcStatusResponse) string { return v.Message }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettingsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AdvancedSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettingsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AdvancedSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AudioInputInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AudioInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3AudioInputPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3AudioInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3BargeInConfigInput)(nil)).Elem(), GoogleCloudDialogflowCxV3BargeInConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3BargeInConfigPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3BargeInConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ConversationTurnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ConversationTurnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnUserInputInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3DataStoreConnectionInput)(nil)).Elem(), GoogleCloudDialogflowCxV3DataStoreConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3DataStoreConnectionArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3DataStoreConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3DtmfInputInput)(nil)).Elem(), GoogleCloudDialogflowCxV3DtmfInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3DtmfInputPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3DtmfInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityTypeEntityInput)(nil)).Elem(), GoogleCloudDialogflowCxV3EntityTypeEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityTypeEntityArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3EntityTypeEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseInput)(nil)).Elem(), GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigInput)(nil)).Elem(), GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentVersionConfigInput)(nil)).Elem(), GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3EnvironmentVersionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentWebhookConfigInput)(nil)).Elem(), GoogleCloudDialogflowCxV3EnvironmentWebhookConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3EnvironmentWebhookConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3EventHandlerInput)(nil)).Elem(), GoogleCloudDialogflowCxV3EventHandlerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3EventHandlerArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3EventHandlerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3EventInputInput)(nil)).Elem(), GoogleCloudDialogflowCxV3EventInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3EventInputPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3EventInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentDefinitionInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ExperimentDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentDefinitionPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ExperimentDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ExperimentResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ExperimentResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultMetricInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ExperimentResultMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultMetricArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ExperimentResultMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FormInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FormArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FormPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FormArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FormParameterInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FormParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FormParameterArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FormParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FormParameterFillBehaviorInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FulfillmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FulfillmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentSetParameterActionInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3GcsDestinationInput)(nil)).Elem(), GoogleCloudDialogflowCxV3GcsDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3GcsDestinationPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3GcsDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3InputAudioConfigInput)(nil)).Elem(), GoogleCloudDialogflowCxV3InputAudioConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3InputAudioConfigPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3InputAudioConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentInput)(nil)).Elem(), GoogleCloudDialogflowCxV3IntentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3IntentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentInputTypeInput)(nil)).Elem(), GoogleCloudDialogflowCxV3IntentInputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentInputTypePtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3IntentInputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentParameterInput)(nil)).Elem(), GoogleCloudDialogflowCxV3IntentParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentParameterArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3IntentParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentTrainingPhraseInput)(nil)).Elem(), GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3IntentTrainingPhraseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentTrainingPhrasePartInput)(nil)).Elem(), GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3NluSettingsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3NluSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3NluSettingsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3NluSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3PageInput)(nil)).Elem(), GoogleCloudDialogflowCxV3PageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3PagePtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3PageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3QueryInputInput)(nil)).Elem(), GoogleCloudDialogflowCxV3QueryInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3QueryInputPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3QueryInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessagePtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessagePlayAudioInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageTextInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageTextPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageTextArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3ResponseMessageTextArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutConfigInput)(nil)).Elem(), GoogleCloudDialogflowCxV3RolloutConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutConfigPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3RolloutConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutConfigRolloutStepInput)(nil)).Elem(), GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutStateInput)(nil)).Elem(), GoogleCloudDialogflowCxV3RolloutStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3RolloutStatePtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3RolloutStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3SpeechToTextSettingsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3SynthesizeSpeechConfigInput)(nil)).Elem(), GoogleCloudDialogflowCxV3SynthesizeSpeechConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3SynthesizeSpeechConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3TestCaseResultInput)(nil)).Elem(), GoogleCloudDialogflowCxV3TestCaseResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3TestCaseResultPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3TestCaseResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3TestConfigInput)(nil)).Elem(), GoogleCloudDialogflowCxV3TestConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3TestConfigPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3TestConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3TextInputInput)(nil)).Elem(), GoogleCloudDialogflowCxV3TextInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3TextInputPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3TextInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3TextToSpeechSettingsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3TextToSpeechSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3TextToSpeechSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3TransitionRouteInput)(nil)).Elem(), GoogleCloudDialogflowCxV3TransitionRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3TransitionRouteArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3TransitionRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3VariantsHistoryInput)(nil)).Elem(), GoogleCloudDialogflowCxV3VariantsHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3VariantsHistoryArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3VariantsHistoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3VersionVariantsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3VersionVariantsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3VersionVariantsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3VersionVariantsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3VersionVariantsVariantInput)(nil)).Elem(), GoogleCloudDialogflowCxV3VersionVariantsVariantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3VersionVariantsVariantArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3VersionVariantsVariantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3VoiceSelectionParamsInput)(nil)).Elem(), GoogleCloudDialogflowCxV3VoiceSelectionParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3VoiceSelectionParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookInput)(nil)).Elem(), GoogleCloudDialogflowCxV3WebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookArrayInput)(nil)).Elem(), GoogleCloudDialogflowCxV3WebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookGenericWebServiceInput)(nil)).Elem(), GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigInput)(nil)).Elem(), GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrInput)(nil)).Elem(), GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleRpcStatusInput)(nil)).Elem(), GoogleRpcStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleRpcStatusPtrInput)(nil)).Elem(), GoogleRpcStatusArgs{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AdvancedSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AdvancedSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AdvancedSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AgentGenAppBuilderSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AudioInputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AudioInputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AudioInputResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3BargeInConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3BargeInConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3BargeInConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnUserInputResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3DataStoreConnectionOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3DataStoreConnectionArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3DataStoreConnectionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3DataStoreConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3DtmfInputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3DtmfInputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3DtmfInputResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EntityTypeEntityOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EntityTypeEntityResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EntityTypeEntityResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EnvironmentTestCasesConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EnvironmentVersionConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EnvironmentWebhookConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EnvironmentWebhookConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EnvironmentWebhookConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EventHandlerOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EventHandlerArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EventHandlerResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EventHandlerResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EventInputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EventInputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EventInputResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentDefinitionOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentDefinitionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultMetricOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultMetricResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultMetricResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormParameterOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormParameterArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormParameterFillBehaviorResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormParameterResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3GcsDestinationOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3GcsDestinationPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3GcsDestinationResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3InputAudioConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3InputAudioConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentInputTypeOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentInputTypePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentInputResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentParameterOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentParameterArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentParameterResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentTrainingPhraseResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3KnowledgeConnectorSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3NluSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3NluSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3NluSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3PageOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3PagePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3PageResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3QueryInputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3QueryInputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3QueryInputResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessagePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageTextOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageTextResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageTextResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3RolloutConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3RolloutConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3RolloutConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3RolloutConfigRolloutStepOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3RolloutConfigRolloutStepArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3RolloutConfigRolloutStepResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3RolloutStateOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3RolloutStatePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3RolloutStateResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SpeechToTextSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SynthesizeSpeechConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SynthesizeSpeechConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SynthesizeSpeechConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TestCaseResultOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TestCaseResultPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TestCaseResultResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TestConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TestConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TestConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TestRunDifferenceResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TestRunDifferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TextInputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TextInputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TextInputResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TextToSpeechSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TextToSpeechSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TextToSpeechSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TransitionRouteOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TransitionRouteArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TransitionRouteResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TransitionRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VariantsHistoryOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VariantsHistoryResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VariantsHistoryResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VersionVariantsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VersionVariantsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VersionVariantsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VersionVariantsVariantOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VersionVariantsVariantResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VersionVariantsVariantResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VoiceSelectionParamsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VoiceSelectionParamsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VoiceSelectionParamsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3WebhookOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3WebhookArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3WebhookResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3WebhookResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleRpcStatusOutput{})
	pulumi.RegisterOutputType(GoogleRpcStatusPtrOutput{})
	pulumi.RegisterOutputType(GoogleRpcStatusResponseOutput{})
}
