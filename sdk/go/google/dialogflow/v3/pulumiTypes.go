// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Represents the natural speech audio to be processed.
type GoogleCloudDialogflowCxV3AudioInput struct {
	// The natural language speech audio to be processed. A single request can contain up to 1 minute of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.
	Audio *string `pulumi:"audio"`
	// Required. Instructs the speech recognizer how to process the speech audio.
	Config *GoogleCloudDialogflowCxV3InputAudioConfig `pulumi:"config"`
}

// GoogleCloudDialogflowCxV3AudioInputInput is an input type that accepts GoogleCloudDialogflowCxV3AudioInputArgs and GoogleCloudDialogflowCxV3AudioInputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AudioInputInput` via:
//
//          GoogleCloudDialogflowCxV3AudioInputArgs{...}
type GoogleCloudDialogflowCxV3AudioInputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AudioInputOutput() GoogleCloudDialogflowCxV3AudioInputOutput
	ToGoogleCloudDialogflowCxV3AudioInputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AudioInputOutput
}

// Represents the natural speech audio to be processed.
type GoogleCloudDialogflowCxV3AudioInputArgs struct {
	// The natural language speech audio to be processed. A single request can contain up to 1 minute of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.
	Audio pulumi.StringPtrInput `pulumi:"audio"`
	// Required. Instructs the speech recognizer how to process the speech audio.
	Config GoogleCloudDialogflowCxV3InputAudioConfigPtrInput `pulumi:"config"`
}

func (GoogleCloudDialogflowCxV3AudioInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AudioInput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3AudioInputArgs) ToGoogleCloudDialogflowCxV3AudioInputOutput() GoogleCloudDialogflowCxV3AudioInputOutput {
	return i.ToGoogleCloudDialogflowCxV3AudioInputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AudioInputArgs) ToGoogleCloudDialogflowCxV3AudioInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AudioInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AudioInputOutput)
}

func (i GoogleCloudDialogflowCxV3AudioInputArgs) ToGoogleCloudDialogflowCxV3AudioInputPtrOutput() GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3AudioInputArgs) ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AudioInputOutput).ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3AudioInputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3AudioInputArgs, GoogleCloudDialogflowCxV3AudioInputPtr and GoogleCloudDialogflowCxV3AudioInputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3AudioInputPtrInput` via:
//
//          GoogleCloudDialogflowCxV3AudioInputArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3AudioInputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3AudioInputPtrOutput() GoogleCloudDialogflowCxV3AudioInputPtrOutput
	ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3AudioInputPtrOutput
}

type googleCloudDialogflowCxV3AudioInputPtrType GoogleCloudDialogflowCxV3AudioInputArgs

func GoogleCloudDialogflowCxV3AudioInputPtr(v *GoogleCloudDialogflowCxV3AudioInputArgs) GoogleCloudDialogflowCxV3AudioInputPtrInput {
	return (*googleCloudDialogflowCxV3AudioInputPtrType)(v)
}

func (*googleCloudDialogflowCxV3AudioInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AudioInput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3AudioInputPtrType) ToGoogleCloudDialogflowCxV3AudioInputPtrOutput() GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3AudioInputPtrType) ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3AudioInputPtrOutput)
}

// Represents the natural speech audio to be processed.
type GoogleCloudDialogflowCxV3AudioInputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AudioInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3AudioInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AudioInputOutput) ToGoogleCloudDialogflowCxV3AudioInputOutput() GoogleCloudDialogflowCxV3AudioInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AudioInputOutput) ToGoogleCloudDialogflowCxV3AudioInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AudioInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AudioInputOutput) ToGoogleCloudDialogflowCxV3AudioInputPtrOutput() GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3AudioInputOutput) ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AudioInput) *GoogleCloudDialogflowCxV3AudioInput {
		return &v
	}).(GoogleCloudDialogflowCxV3AudioInputPtrOutput)
}

// The natural language speech audio to be processed. A single request can contain up to 1 minute of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.
func (o GoogleCloudDialogflowCxV3AudioInputOutput) Audio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AudioInput) *string { return v.Audio }).(pulumi.StringPtrOutput)
}

// Required. Instructs the speech recognizer how to process the speech audio.
func (o GoogleCloudDialogflowCxV3AudioInputOutput) Config() GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3AudioInput) *GoogleCloudDialogflowCxV3InputAudioConfig {
		return v.Config
	}).(GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput)
}

type GoogleCloudDialogflowCxV3AudioInputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3AudioInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3AudioInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3AudioInputPtrOutput) ToGoogleCloudDialogflowCxV3AudioInputPtrOutput() GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AudioInputPtrOutput) ToGoogleCloudDialogflowCxV3AudioInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3AudioInputPtrOutput) Elem() GoogleCloudDialogflowCxV3AudioInputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AudioInput) GoogleCloudDialogflowCxV3AudioInput { return *v }).(GoogleCloudDialogflowCxV3AudioInputOutput)
}

// The natural language speech audio to be processed. A single request can contain up to 1 minute of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.
func (o GoogleCloudDialogflowCxV3AudioInputPtrOutput) Audio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AudioInput) *string {
		if v == nil {
			return nil
		}
		return v.Audio
	}).(pulumi.StringPtrOutput)
}

// Required. Instructs the speech recognizer how to process the speech audio.
func (o GoogleCloudDialogflowCxV3AudioInputPtrOutput) Config() GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3AudioInput) *GoogleCloudDialogflowCxV3InputAudioConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput)
}

// One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.
type GoogleCloudDialogflowCxV3ConversationTurn struct {
	// The user input.
	UserInput *GoogleCloudDialogflowCxV3ConversationTurnUserInput `pulumi:"userInput"`
	// The virtual agent output.
	VirtualAgentOutput *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput `pulumi:"virtualAgentOutput"`
}

// GoogleCloudDialogflowCxV3ConversationTurnInput is an input type that accepts GoogleCloudDialogflowCxV3ConversationTurnArgs and GoogleCloudDialogflowCxV3ConversationTurnOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ConversationTurnInput` via:
//
//          GoogleCloudDialogflowCxV3ConversationTurnArgs{...}
type GoogleCloudDialogflowCxV3ConversationTurnInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ConversationTurnOutput() GoogleCloudDialogflowCxV3ConversationTurnOutput
	ToGoogleCloudDialogflowCxV3ConversationTurnOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ConversationTurnOutput
}

// One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.
type GoogleCloudDialogflowCxV3ConversationTurnArgs struct {
	// The user input.
	UserInput GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrInput `pulumi:"userInput"`
	// The virtual agent output.
	VirtualAgentOutput GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrInput `pulumi:"virtualAgentOutput"`
}

func (GoogleCloudDialogflowCxV3ConversationTurnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurn)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ConversationTurnArgs) ToGoogleCloudDialogflowCxV3ConversationTurnOutput() GoogleCloudDialogflowCxV3ConversationTurnOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ConversationTurnArgs) ToGoogleCloudDialogflowCxV3ConversationTurnOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnOutput)
}

// GoogleCloudDialogflowCxV3ConversationTurnArrayInput is an input type that accepts GoogleCloudDialogflowCxV3ConversationTurnArray and GoogleCloudDialogflowCxV3ConversationTurnArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ConversationTurnArrayInput` via:
//
//          GoogleCloudDialogflowCxV3ConversationTurnArray{ GoogleCloudDialogflowCxV3ConversationTurnArgs{...} }
type GoogleCloudDialogflowCxV3ConversationTurnArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ConversationTurnArrayOutput() GoogleCloudDialogflowCxV3ConversationTurnArrayOutput
	ToGoogleCloudDialogflowCxV3ConversationTurnArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ConversationTurnArrayOutput
}

type GoogleCloudDialogflowCxV3ConversationTurnArray []GoogleCloudDialogflowCxV3ConversationTurnInput

func (GoogleCloudDialogflowCxV3ConversationTurnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ConversationTurn)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ConversationTurnArray) ToGoogleCloudDialogflowCxV3ConversationTurnArrayOutput() GoogleCloudDialogflowCxV3ConversationTurnArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ConversationTurnArray) ToGoogleCloudDialogflowCxV3ConversationTurnArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnArrayOutput)
}

// One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.
type GoogleCloudDialogflowCxV3ConversationTurnOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurn)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnOutput) ToGoogleCloudDialogflowCxV3ConversationTurnOutput() GoogleCloudDialogflowCxV3ConversationTurnOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnOutput) ToGoogleCloudDialogflowCxV3ConversationTurnOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnOutput {
	return o
}

// The user input.
func (o GoogleCloudDialogflowCxV3ConversationTurnOutput) UserInput() GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurn) *GoogleCloudDialogflowCxV3ConversationTurnUserInput {
		return v.UserInput
	}).(GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput)
}

// The virtual agent output.
func (o GoogleCloudDialogflowCxV3ConversationTurnOutput) VirtualAgentOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurn) *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput {
		return v.VirtualAgentOutput
	}).(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput)
}

type GoogleCloudDialogflowCxV3ConversationTurnArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ConversationTurn)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnArrayOutput) ToGoogleCloudDialogflowCxV3ConversationTurnArrayOutput() GoogleCloudDialogflowCxV3ConversationTurnArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnArrayOutput) ToGoogleCloudDialogflowCxV3ConversationTurnArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ConversationTurnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ConversationTurn {
		return vs[0].([]GoogleCloudDialogflowCxV3ConversationTurn)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ConversationTurnOutput)
}

// The input from the human user.
type GoogleCloudDialogflowCxV3ConversationTurnUserInput struct {
	// Parameters that need to be injected into the conversation during intent detection.
	InjectedParameters map[string]string `pulumi:"injectedParameters"`
	// Supports text input, event input, dtmf input in the test case.
	Input *GoogleCloudDialogflowCxV3QueryInput `pulumi:"input"`
	// If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
	IsWebhookEnabled *bool `pulumi:"isWebhookEnabled"`
}

// GoogleCloudDialogflowCxV3ConversationTurnUserInputInput is an input type that accepts GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs and GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ConversationTurnUserInputInput` via:
//
//          GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs{...}
type GoogleCloudDialogflowCxV3ConversationTurnUserInputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ConversationTurnUserInputOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput
	ToGoogleCloudDialogflowCxV3ConversationTurnUserInputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput
}

// The input from the human user.
type GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs struct {
	// Parameters that need to be injected into the conversation during intent detection.
	InjectedParameters pulumi.StringMapInput `pulumi:"injectedParameters"`
	// Supports text input, event input, dtmf input in the test case.
	Input GoogleCloudDialogflowCxV3QueryInputPtrInput `pulumi:"input"`
	// If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
	IsWebhookEnabled pulumi.BoolPtrInput `pulumi:"isWebhookEnabled"`
}

func (GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnUserInput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnUserInputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput)
}

func (i GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput).ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs, GoogleCloudDialogflowCxV3ConversationTurnUserInputPtr and GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrInput` via:
//
//          GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput
	ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput
}

type googleCloudDialogflowCxV3ConversationTurnUserInputPtrType GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs

func GoogleCloudDialogflowCxV3ConversationTurnUserInputPtr(v *GoogleCloudDialogflowCxV3ConversationTurnUserInputArgs) GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrInput {
	return (*googleCloudDialogflowCxV3ConversationTurnUserInputPtrType)(v)
}

func (*googleCloudDialogflowCxV3ConversationTurnUserInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ConversationTurnUserInput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ConversationTurnUserInputPtrType) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ConversationTurnUserInputPtrType) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput)
}

// The input from the human user.
type GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnUserInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnUserInput) *GoogleCloudDialogflowCxV3ConversationTurnUserInput {
		return &v
	}).(GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput)
}

// Parameters that need to be injected into the conversation during intent detection.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) InjectedParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnUserInput) map[string]string {
		return v.InjectedParameters
	}).(pulumi.StringMapOutput)
}

// Supports text input, event input, dtmf input in the test case.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) Input() GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnUserInput) *GoogleCloudDialogflowCxV3QueryInput {
		return v.Input
	}).(GoogleCloudDialogflowCxV3QueryInputPtrOutput)
}

// If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput) IsWebhookEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnUserInput) *bool { return v.IsWebhookEnabled }).(pulumi.BoolPtrOutput)
}

type GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ConversationTurnUserInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) ToGoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) Elem() GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnUserInput) GoogleCloudDialogflowCxV3ConversationTurnUserInput {
		return *v
	}).(GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput)
}

// Parameters that need to be injected into the conversation during intent detection.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) InjectedParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnUserInput) map[string]string {
		if v == nil {
			return nil
		}
		return v.InjectedParameters
	}).(pulumi.StringMapOutput)
}

// Supports text input, event input, dtmf input in the test case.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) Input() GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnUserInput) *GoogleCloudDialogflowCxV3QueryInput {
		if v == nil {
			return nil
		}
		return v.Input
	}).(GoogleCloudDialogflowCxV3QueryInputPtrOutput)
}

// If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
func (o GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput) IsWebhookEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnUserInput) *bool {
		if v == nil {
			return nil
		}
		return v.IsWebhookEnabled
	}).(pulumi.BoolPtrOutput)
}

// The output from the virtual agent.
type GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput struct {
	// The Page on which the utterance was spoken. Only name and displayName will be set.
	CurrentPage *GoogleCloudDialogflowCxV3Page `pulumi:"currentPage"`
	// Required. Input only. The diagnostic info output for the turn.
	DiagnosticInfo map[string]string `pulumi:"diagnosticInfo"`
	// Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.
	Differences []GoogleCloudDialogflowCxV3TestRunDifference `pulumi:"differences"`
	// The session parameters available to the bot at this point.
	SessionParameters map[string]string `pulumi:"sessionParameters"`
	// Response error from the agent in the test result. If set, other output is empty.
	Status *GoogleRpcStatus `pulumi:"status"`
	// The text responses from the agent for the turn.
	TextResponses []GoogleCloudDialogflowCxV3ResponseMessageText `pulumi:"textResponses"`
	// The Intent that triggered the response. Only name and displayName will be set.
	TriggeredIntent *GoogleCloudDialogflowCxV3Intent `pulumi:"triggeredIntent"`
}

// GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputInput is an input type that accepts GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs and GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputInput` via:
//
//          GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs{...}
type GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput
	ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput
}

// The output from the virtual agent.
type GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs struct {
	// The Page on which the utterance was spoken. Only name and displayName will be set.
	CurrentPage GoogleCloudDialogflowCxV3PagePtrInput `pulumi:"currentPage"`
	// Required. Input only. The diagnostic info output for the turn.
	DiagnosticInfo pulumi.StringMapInput `pulumi:"diagnosticInfo"`
	// Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.
	Differences GoogleCloudDialogflowCxV3TestRunDifferenceArrayInput `pulumi:"differences"`
	// The session parameters available to the bot at this point.
	SessionParameters pulumi.StringMapInput `pulumi:"sessionParameters"`
	// Response error from the agent in the test result. If set, other output is empty.
	Status GoogleRpcStatusPtrInput `pulumi:"status"`
	// The text responses from the agent for the turn.
	TextResponses GoogleCloudDialogflowCxV3ResponseMessageTextArrayInput `pulumi:"textResponses"`
	// The Intent that triggered the response. Only name and displayName will be set.
	TriggeredIntent GoogleCloudDialogflowCxV3IntentPtrInput `pulumi:"triggeredIntent"`
}

func (GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput)
}

func (i GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput).ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs, GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtr and GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrInput` via:
//
//          GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput
	ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput
}

type googleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrType GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs

func GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtr(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrInput {
	return (*googleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrType)(v)
}

func (*googleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrType) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrType) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput)
}

// The output from the virtual agent.
type GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput {
		return &v
	}).(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput)
}

// The Page on which the utterance was spoken. Only name and displayName will be set.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) CurrentPage() GoogleCloudDialogflowCxV3PagePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) *GoogleCloudDialogflowCxV3Page {
		return v.CurrentPage
	}).(GoogleCloudDialogflowCxV3PagePtrOutput)
}

// Required. Input only. The diagnostic info output for the turn.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) DiagnosticInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) map[string]string {
		return v.DiagnosticInfo
	}).(pulumi.StringMapOutput)
}

// Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) Differences() GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) []GoogleCloudDialogflowCxV3TestRunDifference {
		return v.Differences
	}).(GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput)
}

// The session parameters available to the bot at this point.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) SessionParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) map[string]string {
		return v.SessionParameters
	}).(pulumi.StringMapOutput)
}

// Response error from the agent in the test result. If set, other output is empty.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) Status() GoogleRpcStatusPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) *GoogleRpcStatus { return v.Status }).(GoogleRpcStatusPtrOutput)
}

// The text responses from the agent for the turn.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) TextResponses() GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) []GoogleCloudDialogflowCxV3ResponseMessageText {
		return v.TextResponses
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput)
}

// The Intent that triggered the response. Only name and displayName will be set.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput) TriggeredIntent() GoogleCloudDialogflowCxV3IntentPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) *GoogleCloudDialogflowCxV3Intent {
		return v.TriggeredIntent
	}).(GoogleCloudDialogflowCxV3IntentPtrOutput)
}

type GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) ToGoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) Elem() GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput {
		return *v
	}).(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput)
}

// The Page on which the utterance was spoken. Only name and displayName will be set.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) CurrentPage() GoogleCloudDialogflowCxV3PagePtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) *GoogleCloudDialogflowCxV3Page {
		if v == nil {
			return nil
		}
		return v.CurrentPage
	}).(GoogleCloudDialogflowCxV3PagePtrOutput)
}

// Required. Input only. The diagnostic info output for the turn.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) DiagnosticInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) map[string]string {
		if v == nil {
			return nil
		}
		return v.DiagnosticInfo
	}).(pulumi.StringMapOutput)
}

// Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) Differences() GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) []GoogleCloudDialogflowCxV3TestRunDifference {
		if v == nil {
			return nil
		}
		return v.Differences
	}).(GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput)
}

// The session parameters available to the bot at this point.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) SessionParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) map[string]string {
		if v == nil {
			return nil
		}
		return v.SessionParameters
	}).(pulumi.StringMapOutput)
}

// Response error from the agent in the test result. If set, other output is empty.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) Status() GoogleRpcStatusPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) *GoogleRpcStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(GoogleRpcStatusPtrOutput)
}

// The text responses from the agent for the turn.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) TextResponses() GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) []GoogleCloudDialogflowCxV3ResponseMessageText {
		if v == nil {
			return nil
		}
		return v.TextResponses
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput)
}

// The Intent that triggered the response. Only name and displayName will be set.
func (o GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput) TriggeredIntent() GoogleCloudDialogflowCxV3IntentPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput) *GoogleCloudDialogflowCxV3Intent {
		if v == nil {
			return nil
		}
		return v.TriggeredIntent
	}).(GoogleCloudDialogflowCxV3IntentPtrOutput)
}

// Represents the input for dtmf event.
type GoogleCloudDialogflowCxV3DtmfInput struct {
	// The dtmf digits.
	Digits *string `pulumi:"digits"`
	// The finish digit (if any).
	FinishDigit *string `pulumi:"finishDigit"`
}

// GoogleCloudDialogflowCxV3DtmfInputInput is an input type that accepts GoogleCloudDialogflowCxV3DtmfInputArgs and GoogleCloudDialogflowCxV3DtmfInputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3DtmfInputInput` via:
//
//          GoogleCloudDialogflowCxV3DtmfInputArgs{...}
type GoogleCloudDialogflowCxV3DtmfInputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3DtmfInputOutput() GoogleCloudDialogflowCxV3DtmfInputOutput
	ToGoogleCloudDialogflowCxV3DtmfInputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3DtmfInputOutput
}

// Represents the input for dtmf event.
type GoogleCloudDialogflowCxV3DtmfInputArgs struct {
	// The dtmf digits.
	Digits pulumi.StringPtrInput `pulumi:"digits"`
	// The finish digit (if any).
	FinishDigit pulumi.StringPtrInput `pulumi:"finishDigit"`
}

func (GoogleCloudDialogflowCxV3DtmfInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3DtmfInput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3DtmfInputArgs) ToGoogleCloudDialogflowCxV3DtmfInputOutput() GoogleCloudDialogflowCxV3DtmfInputOutput {
	return i.ToGoogleCloudDialogflowCxV3DtmfInputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3DtmfInputArgs) ToGoogleCloudDialogflowCxV3DtmfInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DtmfInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3DtmfInputOutput)
}

func (i GoogleCloudDialogflowCxV3DtmfInputArgs) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutput() GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3DtmfInputArgs) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3DtmfInputOutput).ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3DtmfInputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3DtmfInputArgs, GoogleCloudDialogflowCxV3DtmfInputPtr and GoogleCloudDialogflowCxV3DtmfInputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3DtmfInputPtrInput` via:
//
//          GoogleCloudDialogflowCxV3DtmfInputArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3DtmfInputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3DtmfInputPtrOutput() GoogleCloudDialogflowCxV3DtmfInputPtrOutput
	ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3DtmfInputPtrOutput
}

type googleCloudDialogflowCxV3DtmfInputPtrType GoogleCloudDialogflowCxV3DtmfInputArgs

func GoogleCloudDialogflowCxV3DtmfInputPtr(v *GoogleCloudDialogflowCxV3DtmfInputArgs) GoogleCloudDialogflowCxV3DtmfInputPtrInput {
	return (*googleCloudDialogflowCxV3DtmfInputPtrType)(v)
}

func (*googleCloudDialogflowCxV3DtmfInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3DtmfInput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3DtmfInputPtrType) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutput() GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3DtmfInputPtrType) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3DtmfInputPtrOutput)
}

// Represents the input for dtmf event.
type GoogleCloudDialogflowCxV3DtmfInputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3DtmfInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3DtmfInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3DtmfInputOutput) ToGoogleCloudDialogflowCxV3DtmfInputOutput() GoogleCloudDialogflowCxV3DtmfInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DtmfInputOutput) ToGoogleCloudDialogflowCxV3DtmfInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DtmfInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DtmfInputOutput) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutput() GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3DtmfInputOutput) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3DtmfInput) *GoogleCloudDialogflowCxV3DtmfInput {
		return &v
	}).(GoogleCloudDialogflowCxV3DtmfInputPtrOutput)
}

// The dtmf digits.
func (o GoogleCloudDialogflowCxV3DtmfInputOutput) Digits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3DtmfInput) *string { return v.Digits }).(pulumi.StringPtrOutput)
}

// The finish digit (if any).
func (o GoogleCloudDialogflowCxV3DtmfInputOutput) FinishDigit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3DtmfInput) *string { return v.FinishDigit }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3DtmfInputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3DtmfInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3DtmfInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3DtmfInputPtrOutput) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutput() GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DtmfInputPtrOutput) ToGoogleCloudDialogflowCxV3DtmfInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3DtmfInputPtrOutput) Elem() GoogleCloudDialogflowCxV3DtmfInputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3DtmfInput) GoogleCloudDialogflowCxV3DtmfInput { return *v }).(GoogleCloudDialogflowCxV3DtmfInputOutput)
}

// The dtmf digits.
func (o GoogleCloudDialogflowCxV3DtmfInputPtrOutput) Digits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3DtmfInput) *string {
		if v == nil {
			return nil
		}
		return v.Digits
	}).(pulumi.StringPtrOutput)
}

// The finish digit (if any).
func (o GoogleCloudDialogflowCxV3DtmfInputPtrOutput) FinishDigit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3DtmfInput) *string {
		if v == nil {
			return nil
		}
		return v.FinishDigit
	}).(pulumi.StringPtrOutput)
}

// An **entity entry** for an associated entity type.
type GoogleCloudDialogflowCxV3EntityTypeEntity struct {
	// Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.
	Synonyms []string `pulumi:"synonyms"`
	// Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A canonical value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).
	Value *string `pulumi:"value"`
}

// GoogleCloudDialogflowCxV3EntityTypeEntityInput is an input type that accepts GoogleCloudDialogflowCxV3EntityTypeEntityArgs and GoogleCloudDialogflowCxV3EntityTypeEntityOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EntityTypeEntityInput` via:
//
//          GoogleCloudDialogflowCxV3EntityTypeEntityArgs{...}
type GoogleCloudDialogflowCxV3EntityTypeEntityInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EntityTypeEntityOutput() GoogleCloudDialogflowCxV3EntityTypeEntityOutput
	ToGoogleCloudDialogflowCxV3EntityTypeEntityOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EntityTypeEntityOutput
}

// An **entity entry** for an associated entity type.
type GoogleCloudDialogflowCxV3EntityTypeEntityArgs struct {
	// Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.
	Synonyms pulumi.StringArrayInput `pulumi:"synonyms"`
	// Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A canonical value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GoogleCloudDialogflowCxV3EntityTypeEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityTypeEntity)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EntityTypeEntityArgs) ToGoogleCloudDialogflowCxV3EntityTypeEntityOutput() GoogleCloudDialogflowCxV3EntityTypeEntityOutput {
	return i.ToGoogleCloudDialogflowCxV3EntityTypeEntityOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EntityTypeEntityArgs) ToGoogleCloudDialogflowCxV3EntityTypeEntityOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EntityTypeEntityOutput)
}

// GoogleCloudDialogflowCxV3EntityTypeEntityArrayInput is an input type that accepts GoogleCloudDialogflowCxV3EntityTypeEntityArray and GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EntityTypeEntityArrayInput` via:
//
//          GoogleCloudDialogflowCxV3EntityTypeEntityArray{ GoogleCloudDialogflowCxV3EntityTypeEntityArgs{...} }
type GoogleCloudDialogflowCxV3EntityTypeEntityArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput() GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput
	ToGoogleCloudDialogflowCxV3EntityTypeEntityArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput
}

type GoogleCloudDialogflowCxV3EntityTypeEntityArray []GoogleCloudDialogflowCxV3EntityTypeEntityInput

func (GoogleCloudDialogflowCxV3EntityTypeEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EntityTypeEntity)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EntityTypeEntityArray) ToGoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput() GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3EntityTypeEntityArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EntityTypeEntityArray) ToGoogleCloudDialogflowCxV3EntityTypeEntityArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput)
}

// An **entity entry** for an associated entity type.
type GoogleCloudDialogflowCxV3EntityTypeEntityOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EntityTypeEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityTypeEntity)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityOutput) ToGoogleCloudDialogflowCxV3EntityTypeEntityOutput() GoogleCloudDialogflowCxV3EntityTypeEntityOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityOutput) ToGoogleCloudDialogflowCxV3EntityTypeEntityOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeEntityOutput {
	return o
}

// Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.
func (o GoogleCloudDialogflowCxV3EntityTypeEntityOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EntityTypeEntity) []string { return v.Synonyms }).(pulumi.StringArrayOutput)
}

// Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A canonical value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).
func (o GoogleCloudDialogflowCxV3EntityTypeEntityOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EntityTypeEntity) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EntityTypeEntity)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput) ToGoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput() GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput) ToGoogleCloudDialogflowCxV3EntityTypeEntityArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3EntityTypeEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3EntityTypeEntity {
		return vs[0].([]GoogleCloudDialogflowCxV3EntityTypeEntity)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3EntityTypeEntityOutput)
}

// An excluded entity phrase that should not be matched.
type GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase struct {
	// Required. The word or phrase to be excluded.
	Value *string `pulumi:"value"`
}

// GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseInput is an input type that accepts GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs and GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseInput` via:
//
//          GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs{...}
type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput() GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput
	ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput
}

// An excluded entity phrase that should not be matched.
type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs struct {
	// Required. The word or phrase to be excluded.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput() GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput {
	return i.ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput)
}

// GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayInput is an input type that accepts GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArray and GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayInput` via:
//
//          GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArray{ GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs{...} }
type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput() GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput
	ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput
}

type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArray []GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseInput

func (GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArray) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput() GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArray) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput)
}

// An excluded entity phrase that should not be matched.
type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput() GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput {
	return o
}

// Required. The word or phrase to be excluded.
func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput() GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput) ToGoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase {
		return vs[0].([]GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput)
}

// Configuration for the version.
type GoogleCloudDialogflowCxV3EnvironmentVersionConfig struct {
	// Required. Format: projects//locations//agents//flows//versions/.
	Version *string `pulumi:"version"`
}

// GoogleCloudDialogflowCxV3EnvironmentVersionConfigInput is an input type that accepts GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs and GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EnvironmentVersionConfigInput` via:
//
//          GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs{...}
type GoogleCloudDialogflowCxV3EnvironmentVersionConfigInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput() GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput
	ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput
}

// Configuration for the version.
type GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs struct {
	// Required. Format: projects//locations//agents//flows//versions/.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentVersionConfig)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput() GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput {
	return i.ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput)
}

// GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayInput is an input type that accepts GoogleCloudDialogflowCxV3EnvironmentVersionConfigArray and GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayInput` via:
//
//          GoogleCloudDialogflowCxV3EnvironmentVersionConfigArray{ GoogleCloudDialogflowCxV3EnvironmentVersionConfigArgs{...} }
type GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput() GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput
	ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput
}

type GoogleCloudDialogflowCxV3EnvironmentVersionConfigArray []GoogleCloudDialogflowCxV3EnvironmentVersionConfigInput

func (GoogleCloudDialogflowCxV3EnvironmentVersionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EnvironmentVersionConfig)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EnvironmentVersionConfigArray) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput() GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EnvironmentVersionConfigArray) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput)
}

// Configuration for the version.
type GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EnvironmentVersionConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput() GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput {
	return o
}

// Required. Format: projects//locations//agents//flows//versions/.
func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EnvironmentVersionConfig) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EnvironmentVersionConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput() GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput) ToGoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3EnvironmentVersionConfig {
		return vs[0].([]GoogleCloudDialogflowCxV3EnvironmentVersionConfig)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput)
}

// An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3EventHandler struct {
	// Required. The name of the event to handle.
	Event *string `pulumi:"event"`
	// Output only. The unique identifier of this event handler.
	Name *string `pulumi:"name"`
	// The target flow to transition to. Format: `projects//locations//agents//flows/`.
	TargetFlow *string `pulumi:"targetFlow"`
	// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
	TargetPage *string `pulumi:"targetPage"`
	// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
	TriggerFulfillment *GoogleCloudDialogflowCxV3Fulfillment `pulumi:"triggerFulfillment"`
}

// GoogleCloudDialogflowCxV3EventHandlerInput is an input type that accepts GoogleCloudDialogflowCxV3EventHandlerArgs and GoogleCloudDialogflowCxV3EventHandlerOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EventHandlerInput` via:
//
//          GoogleCloudDialogflowCxV3EventHandlerArgs{...}
type GoogleCloudDialogflowCxV3EventHandlerInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EventHandlerOutput() GoogleCloudDialogflowCxV3EventHandlerOutput
	ToGoogleCloudDialogflowCxV3EventHandlerOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EventHandlerOutput
}

// An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3EventHandlerArgs struct {
	// Required. The name of the event to handle.
	Event pulumi.StringPtrInput `pulumi:"event"`
	// Output only. The unique identifier of this event handler.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The target flow to transition to. Format: `projects//locations//agents//flows/`.
	TargetFlow pulumi.StringPtrInput `pulumi:"targetFlow"`
	// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
	TargetPage pulumi.StringPtrInput `pulumi:"targetPage"`
	// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
	TriggerFulfillment GoogleCloudDialogflowCxV3FulfillmentPtrInput `pulumi:"triggerFulfillment"`
}

func (GoogleCloudDialogflowCxV3EventHandlerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EventHandler)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EventHandlerArgs) ToGoogleCloudDialogflowCxV3EventHandlerOutput() GoogleCloudDialogflowCxV3EventHandlerOutput {
	return i.ToGoogleCloudDialogflowCxV3EventHandlerOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EventHandlerArgs) ToGoogleCloudDialogflowCxV3EventHandlerOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventHandlerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EventHandlerOutput)
}

// GoogleCloudDialogflowCxV3EventHandlerArrayInput is an input type that accepts GoogleCloudDialogflowCxV3EventHandlerArray and GoogleCloudDialogflowCxV3EventHandlerArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EventHandlerArrayInput` via:
//
//          GoogleCloudDialogflowCxV3EventHandlerArray{ GoogleCloudDialogflowCxV3EventHandlerArgs{...} }
type GoogleCloudDialogflowCxV3EventHandlerArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EventHandlerArrayOutput() GoogleCloudDialogflowCxV3EventHandlerArrayOutput
	ToGoogleCloudDialogflowCxV3EventHandlerArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EventHandlerArrayOutput
}

type GoogleCloudDialogflowCxV3EventHandlerArray []GoogleCloudDialogflowCxV3EventHandlerInput

func (GoogleCloudDialogflowCxV3EventHandlerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EventHandler)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EventHandlerArray) ToGoogleCloudDialogflowCxV3EventHandlerArrayOutput() GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3EventHandlerArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EventHandlerArray) ToGoogleCloudDialogflowCxV3EventHandlerArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EventHandlerArrayOutput)
}

// An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3EventHandlerOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EventHandlerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EventHandler)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EventHandlerOutput) ToGoogleCloudDialogflowCxV3EventHandlerOutput() GoogleCloudDialogflowCxV3EventHandlerOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventHandlerOutput) ToGoogleCloudDialogflowCxV3EventHandlerOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventHandlerOutput {
	return o
}

// Required. The name of the event to handle.
func (o GoogleCloudDialogflowCxV3EventHandlerOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventHandler) *string { return v.Event }).(pulumi.StringPtrOutput)
}

// Output only. The unique identifier of this event handler.
func (o GoogleCloudDialogflowCxV3EventHandlerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventHandler) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The target flow to transition to. Format: `projects//locations//agents//flows/`.
func (o GoogleCloudDialogflowCxV3EventHandlerOutput) TargetFlow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventHandler) *string { return v.TargetFlow }).(pulumi.StringPtrOutput)
}

// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
func (o GoogleCloudDialogflowCxV3EventHandlerOutput) TargetPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventHandler) *string { return v.TargetPage }).(pulumi.StringPtrOutput)
}

// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
func (o GoogleCloudDialogflowCxV3EventHandlerOutput) TriggerFulfillment() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventHandler) *GoogleCloudDialogflowCxV3Fulfillment {
		return v.TriggerFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

type GoogleCloudDialogflowCxV3EventHandlerArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EventHandlerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3EventHandler)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EventHandlerArrayOutput) ToGoogleCloudDialogflowCxV3EventHandlerArrayOutput() GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventHandlerArrayOutput) ToGoogleCloudDialogflowCxV3EventHandlerArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventHandlerArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3EventHandlerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3EventHandler {
		return vs[0].([]GoogleCloudDialogflowCxV3EventHandler)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3EventHandlerOutput)
}

// Represents the event to trigger.
type GoogleCloudDialogflowCxV3EventInput struct {
	// Name of the event.
	Event *string `pulumi:"event"`
}

// GoogleCloudDialogflowCxV3EventInputInput is an input type that accepts GoogleCloudDialogflowCxV3EventInputArgs and GoogleCloudDialogflowCxV3EventInputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EventInputInput` via:
//
//          GoogleCloudDialogflowCxV3EventInputArgs{...}
type GoogleCloudDialogflowCxV3EventInputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EventInputOutput() GoogleCloudDialogflowCxV3EventInputOutput
	ToGoogleCloudDialogflowCxV3EventInputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EventInputOutput
}

// Represents the event to trigger.
type GoogleCloudDialogflowCxV3EventInputArgs struct {
	// Name of the event.
	Event pulumi.StringPtrInput `pulumi:"event"`
}

func (GoogleCloudDialogflowCxV3EventInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EventInput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3EventInputArgs) ToGoogleCloudDialogflowCxV3EventInputOutput() GoogleCloudDialogflowCxV3EventInputOutput {
	return i.ToGoogleCloudDialogflowCxV3EventInputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EventInputArgs) ToGoogleCloudDialogflowCxV3EventInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EventInputOutput)
}

func (i GoogleCloudDialogflowCxV3EventInputArgs) ToGoogleCloudDialogflowCxV3EventInputPtrOutput() GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3EventInputArgs) ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EventInputOutput).ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3EventInputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3EventInputArgs, GoogleCloudDialogflowCxV3EventInputPtr and GoogleCloudDialogflowCxV3EventInputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3EventInputPtrInput` via:
//
//          GoogleCloudDialogflowCxV3EventInputArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3EventInputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3EventInputPtrOutput() GoogleCloudDialogflowCxV3EventInputPtrOutput
	ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3EventInputPtrOutput
}

type googleCloudDialogflowCxV3EventInputPtrType GoogleCloudDialogflowCxV3EventInputArgs

func GoogleCloudDialogflowCxV3EventInputPtr(v *GoogleCloudDialogflowCxV3EventInputArgs) GoogleCloudDialogflowCxV3EventInputPtrInput {
	return (*googleCloudDialogflowCxV3EventInputPtrType)(v)
}

func (*googleCloudDialogflowCxV3EventInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3EventInput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3EventInputPtrType) ToGoogleCloudDialogflowCxV3EventInputPtrOutput() GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3EventInputPtrType) ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3EventInputPtrOutput)
}

// Represents the event to trigger.
type GoogleCloudDialogflowCxV3EventInputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EventInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3EventInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EventInputOutput) ToGoogleCloudDialogflowCxV3EventInputOutput() GoogleCloudDialogflowCxV3EventInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventInputOutput) ToGoogleCloudDialogflowCxV3EventInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventInputOutput) ToGoogleCloudDialogflowCxV3EventInputPtrOutput() GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3EventInputOutput) ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventInput) *GoogleCloudDialogflowCxV3EventInput {
		return &v
	}).(GoogleCloudDialogflowCxV3EventInputPtrOutput)
}

// Name of the event.
func (o GoogleCloudDialogflowCxV3EventInputOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3EventInput) *string { return v.Event }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3EventInputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3EventInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3EventInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3EventInputPtrOutput) ToGoogleCloudDialogflowCxV3EventInputPtrOutput() GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventInputPtrOutput) ToGoogleCloudDialogflowCxV3EventInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3EventInputPtrOutput) Elem() GoogleCloudDialogflowCxV3EventInputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3EventInput) GoogleCloudDialogflowCxV3EventInput { return *v }).(GoogleCloudDialogflowCxV3EventInputOutput)
}

// Name of the event.
func (o GoogleCloudDialogflowCxV3EventInputPtrOutput) Event() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3EventInput) *string {
		if v == nil {
			return nil
		}
		return v.Event
	}).(pulumi.StringPtrOutput)
}

// Definition of the experiment.
type GoogleCloudDialogflowCxV3ExperimentDefinition struct {
	// The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. "query_input.language_code=en" See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	Condition *string `pulumi:"condition"`
	// The flow versions as the variants of this experiment.
	VersionVariants *GoogleCloudDialogflowCxV3VersionVariants `pulumi:"versionVariants"`
}

// GoogleCloudDialogflowCxV3ExperimentDefinitionInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentDefinitionArgs and GoogleCloudDialogflowCxV3ExperimentDefinitionOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentDefinitionInput` via:
//
//          GoogleCloudDialogflowCxV3ExperimentDefinitionArgs{...}
type GoogleCloudDialogflowCxV3ExperimentDefinitionInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentDefinitionOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionOutput
	ToGoogleCloudDialogflowCxV3ExperimentDefinitionOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionOutput
}

// Definition of the experiment.
type GoogleCloudDialogflowCxV3ExperimentDefinitionArgs struct {
	// The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. "query_input.language_code=en" See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The flow versions as the variants of this experiment.
	VersionVariants GoogleCloudDialogflowCxV3VersionVariantsPtrInput `pulumi:"versionVariants"`
}

func (GoogleCloudDialogflowCxV3ExperimentDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentDefinition)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ExperimentDefinitionArgs) ToGoogleCloudDialogflowCxV3ExperimentDefinitionOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentDefinitionOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentDefinitionArgs) ToGoogleCloudDialogflowCxV3ExperimentDefinitionOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentDefinitionOutput)
}

func (i GoogleCloudDialogflowCxV3ExperimentDefinitionArgs) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentDefinitionArgs) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentDefinitionOutput).ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ExperimentDefinitionPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentDefinitionArgs, GoogleCloudDialogflowCxV3ExperimentDefinitionPtr and GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentDefinitionPtrInput` via:
//
//          GoogleCloudDialogflowCxV3ExperimentDefinitionArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3ExperimentDefinitionPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput
	ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput
}

type googleCloudDialogflowCxV3ExperimentDefinitionPtrType GoogleCloudDialogflowCxV3ExperimentDefinitionArgs

func GoogleCloudDialogflowCxV3ExperimentDefinitionPtr(v *GoogleCloudDialogflowCxV3ExperimentDefinitionArgs) GoogleCloudDialogflowCxV3ExperimentDefinitionPtrInput {
	return (*googleCloudDialogflowCxV3ExperimentDefinitionPtrType)(v)
}

func (*googleCloudDialogflowCxV3ExperimentDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ExperimentDefinition)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ExperimentDefinitionPtrType) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ExperimentDefinitionPtrType) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput)
}

// Definition of the experiment.
type GoogleCloudDialogflowCxV3ExperimentDefinitionOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentDefinition)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionOutput) ToGoogleCloudDialogflowCxV3ExperimentDefinitionOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionOutput) ToGoogleCloudDialogflowCxV3ExperimentDefinitionOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionOutput) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionOutput) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentDefinition) *GoogleCloudDialogflowCxV3ExperimentDefinition {
		return &v
	}).(GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput)
}

// The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. "query_input.language_code=en" See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
func (o GoogleCloudDialogflowCxV3ExperimentDefinitionOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentDefinition) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The flow versions as the variants of this experiment.
func (o GoogleCloudDialogflowCxV3ExperimentDefinitionOutput) VersionVariants() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentDefinition) *GoogleCloudDialogflowCxV3VersionVariants {
		return v.VersionVariants
	}).(GoogleCloudDialogflowCxV3VersionVariantsPtrOutput)
}

type GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ExperimentDefinition)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput() GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput) ToGoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput) Elem() GoogleCloudDialogflowCxV3ExperimentDefinitionOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentDefinition) GoogleCloudDialogflowCxV3ExperimentDefinition {
		return *v
	}).(GoogleCloudDialogflowCxV3ExperimentDefinitionOutput)
}

// The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. "query_input.language_code=en" See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
func (o GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

// The flow versions as the variants of this experiment.
func (o GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput) VersionVariants() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentDefinition) *GoogleCloudDialogflowCxV3VersionVariants {
		if v == nil {
			return nil
		}
		return v.VersionVariants
	}).(GoogleCloudDialogflowCxV3VersionVariantsPtrOutput)
}

// The inference result which includes an objective metric to optimize and the confidence interval.
type GoogleCloudDialogflowCxV3ExperimentResult struct {
	// The last time the experiment's stats data was updated. Will have default value if stats have never been computed for this experiment.
	LastUpdateTime *string `pulumi:"lastUpdateTime"`
	// Version variants and metrics.
	VersionMetrics []GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics `pulumi:"versionMetrics"`
}

// GoogleCloudDialogflowCxV3ExperimentResultInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultArgs and GoogleCloudDialogflowCxV3ExperimentResultOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultInput` via:
//
//          GoogleCloudDialogflowCxV3ExperimentResultArgs{...}
type GoogleCloudDialogflowCxV3ExperimentResultInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultOutput() GoogleCloudDialogflowCxV3ExperimentResultOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultOutput
}

// The inference result which includes an objective metric to optimize and the confidence interval.
type GoogleCloudDialogflowCxV3ExperimentResultArgs struct {
	// The last time the experiment's stats data was updated. Will have default value if stats have never been computed for this experiment.
	LastUpdateTime pulumi.StringPtrInput `pulumi:"lastUpdateTime"`
	// Version variants and metrics.
	VersionMetrics GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayInput `pulumi:"versionMetrics"`
}

func (GoogleCloudDialogflowCxV3ExperimentResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResult)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ExperimentResultArgs) ToGoogleCloudDialogflowCxV3ExperimentResultOutput() GoogleCloudDialogflowCxV3ExperimentResultOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultArgs) ToGoogleCloudDialogflowCxV3ExperimentResultOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultOutput)
}

func (i GoogleCloudDialogflowCxV3ExperimentResultArgs) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultArgs) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultOutput).ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ExperimentResultPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultArgs, GoogleCloudDialogflowCxV3ExperimentResultPtr and GoogleCloudDialogflowCxV3ExperimentResultPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultPtrInput` via:
//
//          GoogleCloudDialogflowCxV3ExperimentResultArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3ExperimentResultPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultPtrOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultPtrOutput
}

type googleCloudDialogflowCxV3ExperimentResultPtrType GoogleCloudDialogflowCxV3ExperimentResultArgs

func GoogleCloudDialogflowCxV3ExperimentResultPtr(v *GoogleCloudDialogflowCxV3ExperimentResultArgs) GoogleCloudDialogflowCxV3ExperimentResultPtrInput {
	return (*googleCloudDialogflowCxV3ExperimentResultPtrType)(v)
}

func (*googleCloudDialogflowCxV3ExperimentResultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ExperimentResult)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ExperimentResultPtrType) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ExperimentResultPtrType) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultPtrOutput)
}

// The inference result which includes an objective metric to optimize and the confidence interval.
type GoogleCloudDialogflowCxV3ExperimentResultOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResult)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultOutput) ToGoogleCloudDialogflowCxV3ExperimentResultOutput() GoogleCloudDialogflowCxV3ExperimentResultOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultOutput) ToGoogleCloudDialogflowCxV3ExperimentResultOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultOutput) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ExperimentResultOutput) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResult) *GoogleCloudDialogflowCxV3ExperimentResult {
		return &v
	}).(GoogleCloudDialogflowCxV3ExperimentResultPtrOutput)
}

// The last time the experiment's stats data was updated. Will have default value if stats have never been computed for this experiment.
func (o GoogleCloudDialogflowCxV3ExperimentResultOutput) LastUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResult) *string { return v.LastUpdateTime }).(pulumi.StringPtrOutput)
}

// Version variants and metrics.
func (o GoogleCloudDialogflowCxV3ExperimentResultOutput) VersionMetrics() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResult) []GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics {
		return v.VersionMetrics
	}).(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput)
}

type GoogleCloudDialogflowCxV3ExperimentResultPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ExperimentResult)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultPtrOutput) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultPtrOutput) ToGoogleCloudDialogflowCxV3ExperimentResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultPtrOutput) Elem() GoogleCloudDialogflowCxV3ExperimentResultOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResult) GoogleCloudDialogflowCxV3ExperimentResult {
		return *v
	}).(GoogleCloudDialogflowCxV3ExperimentResultOutput)
}

// The last time the experiment's stats data was updated. Will have default value if stats have never been computed for this experiment.
func (o GoogleCloudDialogflowCxV3ExperimentResultPtrOutput) LastUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResult) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdateTime
	}).(pulumi.StringPtrOutput)
}

// Version variants and metrics.
func (o GoogleCloudDialogflowCxV3ExperimentResultPtrOutput) VersionMetrics() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResult) []GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics {
		if v == nil {
			return nil
		}
		return v.VersionMetrics
	}).(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput)
}

// A confidence interval is a range of possible values for the experiment objective you are trying to measure.
type GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval struct {
	// The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval.
	ConfidenceLevel *float64 `pulumi:"confidenceLevel"`
	// Lower bound of the interval.
	LowerBound *float64 `pulumi:"lowerBound"`
	// The percent change between an experiment metric's value and the value for its control.
	Ratio *float64 `pulumi:"ratio"`
	// Upper bound of the interval.
	UpperBound *float64 `pulumi:"upperBound"`
}

// GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs and GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalInput` via:
//
//          GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs{...}
type GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput
}

// A confidence interval is a range of possible values for the experiment objective you are trying to measure.
type GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs struct {
	// The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval.
	ConfidenceLevel pulumi.Float64PtrInput `pulumi:"confidenceLevel"`
	// Lower bound of the interval.
	LowerBound pulumi.Float64PtrInput `pulumi:"lowerBound"`
	// The percent change between an experiment metric's value and the value for its control.
	Ratio pulumi.Float64PtrInput `pulumi:"ratio"`
	// Upper bound of the interval.
	UpperBound pulumi.Float64PtrInput `pulumi:"upperBound"`
}

func (GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput)
}

func (i GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput).ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs, GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtr and GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrInput` via:
//
//          GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput
}

type googleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrType GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs

func GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtr(v *GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrInput {
	return (*googleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrType)(v)
}

func (*googleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrType) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrType) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput)
}

// A confidence interval is a range of possible values for the experiment objective you are trying to measure.
type GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval {
		return &v
	}).(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput)
}

// The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) ConfidenceLevel() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 { return v.ConfidenceLevel }).(pulumi.Float64PtrOutput)
}

// Lower bound of the interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) LowerBound() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 { return v.LowerBound }).(pulumi.Float64PtrOutput)
}

// The percent change between an experiment metric's value and the value for its control.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) Ratio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 { return v.Ratio }).(pulumi.Float64PtrOutput)
}

// Upper bound of the interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput) UpperBound() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 { return v.UpperBound }).(pulumi.Float64PtrOutput)
}

type GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) ToGoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) Elem() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval {
		return *v
	}).(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput)
}

// The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) ConfidenceLevel() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 {
		if v == nil {
			return nil
		}
		return v.ConfidenceLevel
	}).(pulumi.Float64PtrOutput)
}

// Lower bound of the interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) LowerBound() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 {
		if v == nil {
			return nil
		}
		return v.LowerBound
	}).(pulumi.Float64PtrOutput)
}

// The percent change between an experiment metric's value and the value for its control.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) Ratio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 {
		if v == nil {
			return nil
		}
		return v.Ratio
	}).(pulumi.Float64PtrOutput)
}

// Upper bound of the interval.
func (o GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput) UpperBound() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval) *float64 {
		if v == nil {
			return nil
		}
		return v.UpperBound
	}).(pulumi.Float64PtrOutput)
}

// Metric and corresponding confidence intervals.
type GoogleCloudDialogflowCxV3ExperimentResultMetric struct {
	// The probability that the treatment is better than all other treatments in the experiment
	ConfidenceInterval *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval `pulumi:"confidenceInterval"`
	// Count value of a metric.
	Count *float64 `pulumi:"count"`
	// Count-based metric type. Only one of type or count_type is specified in each Metric.
	CountType *string `pulumi:"countType"`
	// Ratio value of a metric.
	Ratio *float64 `pulumi:"ratio"`
	// Ratio-based metric type. Only one of type or count_type is specified in each Metric.
	Type *string `pulumi:"type"`
}

// GoogleCloudDialogflowCxV3ExperimentResultMetricInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultMetricArgs and GoogleCloudDialogflowCxV3ExperimentResultMetricOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultMetricInput` via:
//
//          GoogleCloudDialogflowCxV3ExperimentResultMetricArgs{...}
type GoogleCloudDialogflowCxV3ExperimentResultMetricInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultMetricOutput() GoogleCloudDialogflowCxV3ExperimentResultMetricOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultMetricOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultMetricOutput
}

// Metric and corresponding confidence intervals.
type GoogleCloudDialogflowCxV3ExperimentResultMetricArgs struct {
	// The probability that the treatment is better than all other treatments in the experiment
	ConfidenceInterval GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrInput `pulumi:"confidenceInterval"`
	// Count value of a metric.
	Count pulumi.Float64PtrInput `pulumi:"count"`
	// Count-based metric type. Only one of type or count_type is specified in each Metric.
	CountType pulumi.StringPtrInput `pulumi:"countType"`
	// Ratio value of a metric.
	Ratio pulumi.Float64PtrInput `pulumi:"ratio"`
	// Ratio-based metric type. Only one of type or count_type is specified in each Metric.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GoogleCloudDialogflowCxV3ExperimentResultMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultMetric)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ExperimentResultMetricArgs) ToGoogleCloudDialogflowCxV3ExperimentResultMetricOutput() GoogleCloudDialogflowCxV3ExperimentResultMetricOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultMetricOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultMetricArgs) ToGoogleCloudDialogflowCxV3ExperimentResultMetricOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultMetricOutput)
}

// GoogleCloudDialogflowCxV3ExperimentResultMetricArrayInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultMetricArray and GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultMetricArrayInput` via:
//
//          GoogleCloudDialogflowCxV3ExperimentResultMetricArray{ GoogleCloudDialogflowCxV3ExperimentResultMetricArgs{...} }
type GoogleCloudDialogflowCxV3ExperimentResultMetricArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput() GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput
}

type GoogleCloudDialogflowCxV3ExperimentResultMetricArray []GoogleCloudDialogflowCxV3ExperimentResultMetricInput

func (GoogleCloudDialogflowCxV3ExperimentResultMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ExperimentResultMetric)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ExperimentResultMetricArray) ToGoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput() GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultMetricArray) ToGoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput)
}

// Metric and corresponding confidence intervals.
type GoogleCloudDialogflowCxV3ExperimentResultMetricOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultMetric)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) ToGoogleCloudDialogflowCxV3ExperimentResultMetricOutput() GoogleCloudDialogflowCxV3ExperimentResultMetricOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) ToGoogleCloudDialogflowCxV3ExperimentResultMetricOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultMetricOutput {
	return o
}

// The probability that the treatment is better than all other treatments in the experiment
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) ConfidenceInterval() GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetric) *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval {
		return v.ConfidenceInterval
	}).(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput)
}

// Count value of a metric.
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetric) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

// Count-based metric type. Only one of type or count_type is specified in each Metric.
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) CountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetric) *string { return v.CountType }).(pulumi.StringPtrOutput)
}

// Ratio value of a metric.
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) Ratio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetric) *float64 { return v.Ratio }).(pulumi.Float64PtrOutput)
}

// Ratio-based metric type. Only one of type or count_type is specified in each Metric.
func (o GoogleCloudDialogflowCxV3ExperimentResultMetricOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultMetric) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ExperimentResultMetric)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput) ToGoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput() GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput) ToGoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ExperimentResultMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ExperimentResultMetric {
		return vs[0].([]GoogleCloudDialogflowCxV3ExperimentResultMetric)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ExperimentResultMetricOutput)
}

// Version variant and associated metrics.
type GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics struct {
	// The metrics and corresponding confidence intervals in the inference result.
	Metrics []GoogleCloudDialogflowCxV3ExperimentResultMetric `pulumi:"metrics"`
	// Number of sessions that were allocated to this version.
	SessionCount *int `pulumi:"sessionCount"`
	// The name of the flow Version. Format: `projects//locations//agents//flows//versions/`.
	Version *string `pulumi:"version"`
}

// GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs and GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsInput` via:
//
//          GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs{...}
type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput
}

// Version variant and associated metrics.
type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs struct {
	// The metrics and corresponding confidence intervals in the inference result.
	Metrics GoogleCloudDialogflowCxV3ExperimentResultMetricArrayInput `pulumi:"metrics"`
	// Number of sessions that were allocated to this version.
	SessionCount pulumi.IntPtrInput `pulumi:"sessionCount"`
	// The name of the flow Version. Format: `projects//locations//agents//flows//versions/`.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput)
}

// GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayInput is an input type that accepts GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArray and GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayInput` via:
//
//          GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArray{ GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArgs{...} }
type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput
	ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput
}

type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArray []GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsInput

func (GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArray) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArray) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput)
}

// Version variant and associated metrics.
type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput {
	return o
}

// The metrics and corresponding confidence intervals in the inference result.
func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput) Metrics() GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics) []GoogleCloudDialogflowCxV3ExperimentResultMetric {
		return v.Metrics
	}).(GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput)
}

// Number of sessions that were allocated to this version.
func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput) SessionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics) *int { return v.SessionCount }).(pulumi.IntPtrOutput)
}

// The name of the flow Version. Format: `projects//locations//agents//flows//versions/`.
func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput() GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput) ToGoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics {
		return vs[0].([]GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput)
}

// A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.
type GoogleCloudDialogflowCxV3Form struct {
	// Parameters to collect from the user.
	Parameters []GoogleCloudDialogflowCxV3FormParameter `pulumi:"parameters"`
}

// GoogleCloudDialogflowCxV3FormInput is an input type that accepts GoogleCloudDialogflowCxV3FormArgs and GoogleCloudDialogflowCxV3FormOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FormInput` via:
//
//          GoogleCloudDialogflowCxV3FormArgs{...}
type GoogleCloudDialogflowCxV3FormInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FormOutput() GoogleCloudDialogflowCxV3FormOutput
	ToGoogleCloudDialogflowCxV3FormOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FormOutput
}

// A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.
type GoogleCloudDialogflowCxV3FormArgs struct {
	// Parameters to collect from the user.
	Parameters GoogleCloudDialogflowCxV3FormParameterArrayInput `pulumi:"parameters"`
}

func (GoogleCloudDialogflowCxV3FormArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Form)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FormArgs) ToGoogleCloudDialogflowCxV3FormOutput() GoogleCloudDialogflowCxV3FormOutput {
	return i.ToGoogleCloudDialogflowCxV3FormOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FormArgs) ToGoogleCloudDialogflowCxV3FormOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FormOutput)
}

func (i GoogleCloudDialogflowCxV3FormArgs) ToGoogleCloudDialogflowCxV3FormPtrOutput() GoogleCloudDialogflowCxV3FormPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FormArgs) ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FormOutput).ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3FormPtrInput is an input type that accepts GoogleCloudDialogflowCxV3FormArgs, GoogleCloudDialogflowCxV3FormPtr and GoogleCloudDialogflowCxV3FormPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FormPtrInput` via:
//
//          GoogleCloudDialogflowCxV3FormArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3FormPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FormPtrOutput() GoogleCloudDialogflowCxV3FormPtrOutput
	ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FormPtrOutput
}

type googleCloudDialogflowCxV3FormPtrType GoogleCloudDialogflowCxV3FormArgs

func GoogleCloudDialogflowCxV3FormPtr(v *GoogleCloudDialogflowCxV3FormArgs) GoogleCloudDialogflowCxV3FormPtrInput {
	return (*googleCloudDialogflowCxV3FormPtrType)(v)
}

func (*googleCloudDialogflowCxV3FormPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Form)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3FormPtrType) ToGoogleCloudDialogflowCxV3FormPtrOutput() GoogleCloudDialogflowCxV3FormPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3FormPtrType) ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FormPtrOutput)
}

// A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.
type GoogleCloudDialogflowCxV3FormOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Form)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormOutput) ToGoogleCloudDialogflowCxV3FormOutput() GoogleCloudDialogflowCxV3FormOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormOutput) ToGoogleCloudDialogflowCxV3FormOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormOutput) ToGoogleCloudDialogflowCxV3FormPtrOutput() GoogleCloudDialogflowCxV3FormPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3FormOutput) ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Form) *GoogleCloudDialogflowCxV3Form {
		return &v
	}).(GoogleCloudDialogflowCxV3FormPtrOutput)
}

// Parameters to collect from the user.
func (o GoogleCloudDialogflowCxV3FormOutput) Parameters() GoogleCloudDialogflowCxV3FormParameterArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Form) []GoogleCloudDialogflowCxV3FormParameter { return v.Parameters }).(GoogleCloudDialogflowCxV3FormParameterArrayOutput)
}

type GoogleCloudDialogflowCxV3FormPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Form)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormPtrOutput) ToGoogleCloudDialogflowCxV3FormPtrOutput() GoogleCloudDialogflowCxV3FormPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormPtrOutput) ToGoogleCloudDialogflowCxV3FormPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormPtrOutput) Elem() GoogleCloudDialogflowCxV3FormOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Form) GoogleCloudDialogflowCxV3Form { return *v }).(GoogleCloudDialogflowCxV3FormOutput)
}

// Parameters to collect from the user.
func (o GoogleCloudDialogflowCxV3FormPtrOutput) Parameters() GoogleCloudDialogflowCxV3FormParameterArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Form) []GoogleCloudDialogflowCxV3FormParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(GoogleCloudDialogflowCxV3FormParameterArrayOutput)
}

// Represents a form parameter.
type GoogleCloudDialogflowCxV3FormParameter struct {
	// The default value of an optional parameter. If the parameter is required, the default value will be ignored.
	DefaultValue interface{} `pulumi:"defaultValue"`
	// Required. The human-readable name of the parameter, unique within the form.
	DisplayName *string `pulumi:"displayName"`
	// Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
	EntityType *string `pulumi:"entityType"`
	// Required. Defines fill behavior for the parameter.
	FillBehavior *GoogleCloudDialogflowCxV3FormParameterFillBehavior `pulumi:"fillBehavior"`
	// Indicates whether the parameter represents a list of values.
	IsList *bool `pulumi:"isList"`
	// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
	Redact *bool `pulumi:"redact"`
	// Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
	Required *bool `pulumi:"required"`
}

// GoogleCloudDialogflowCxV3FormParameterInput is an input type that accepts GoogleCloudDialogflowCxV3FormParameterArgs and GoogleCloudDialogflowCxV3FormParameterOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FormParameterInput` via:
//
//          GoogleCloudDialogflowCxV3FormParameterArgs{...}
type GoogleCloudDialogflowCxV3FormParameterInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FormParameterOutput() GoogleCloudDialogflowCxV3FormParameterOutput
	ToGoogleCloudDialogflowCxV3FormParameterOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FormParameterOutput
}

// Represents a form parameter.
type GoogleCloudDialogflowCxV3FormParameterArgs struct {
	// The default value of an optional parameter. If the parameter is required, the default value will be ignored.
	DefaultValue pulumi.Input `pulumi:"defaultValue"`
	// Required. The human-readable name of the parameter, unique within the form.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	// Required. Defines fill behavior for the parameter.
	FillBehavior GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrInput `pulumi:"fillBehavior"`
	// Indicates whether the parameter represents a list of values.
	IsList pulumi.BoolPtrInput `pulumi:"isList"`
	// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
	Redact pulumi.BoolPtrInput `pulumi:"redact"`
	// Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
	Required pulumi.BoolPtrInput `pulumi:"required"`
}

func (GoogleCloudDialogflowCxV3FormParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FormParameter)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FormParameterArgs) ToGoogleCloudDialogflowCxV3FormParameterOutput() GoogleCloudDialogflowCxV3FormParameterOutput {
	return i.ToGoogleCloudDialogflowCxV3FormParameterOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FormParameterArgs) ToGoogleCloudDialogflowCxV3FormParameterOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FormParameterOutput)
}

// GoogleCloudDialogflowCxV3FormParameterArrayInput is an input type that accepts GoogleCloudDialogflowCxV3FormParameterArray and GoogleCloudDialogflowCxV3FormParameterArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FormParameterArrayInput` via:
//
//          GoogleCloudDialogflowCxV3FormParameterArray{ GoogleCloudDialogflowCxV3FormParameterArgs{...} }
type GoogleCloudDialogflowCxV3FormParameterArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FormParameterArrayOutput() GoogleCloudDialogflowCxV3FormParameterArrayOutput
	ToGoogleCloudDialogflowCxV3FormParameterArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FormParameterArrayOutput
}

type GoogleCloudDialogflowCxV3FormParameterArray []GoogleCloudDialogflowCxV3FormParameterInput

func (GoogleCloudDialogflowCxV3FormParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FormParameter)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FormParameterArray) ToGoogleCloudDialogflowCxV3FormParameterArrayOutput() GoogleCloudDialogflowCxV3FormParameterArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3FormParameterArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FormParameterArray) ToGoogleCloudDialogflowCxV3FormParameterArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FormParameterArrayOutput)
}

// Represents a form parameter.
type GoogleCloudDialogflowCxV3FormParameterOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FormParameter)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormParameterOutput) ToGoogleCloudDialogflowCxV3FormParameterOutput() GoogleCloudDialogflowCxV3FormParameterOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterOutput) ToGoogleCloudDialogflowCxV3FormParameterOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterOutput {
	return o
}

// The default value of an optional parameter. If the parameter is required, the default value will be ignored.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) DefaultValue() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) interface{} { return v.DefaultValue }).(pulumi.AnyOutput)
}

// Required. The human-readable name of the parameter, unique within the form.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// Required. Defines fill behavior for the parameter.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) FillBehavior() GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) *GoogleCloudDialogflowCxV3FormParameterFillBehavior {
		return v.FillBehavior
	}).(GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput)
}

// Indicates whether the parameter represents a list of values.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) IsList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) *bool { return v.IsList }).(pulumi.BoolPtrOutput)
}

// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) Redact() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) *bool { return v.Redact }).(pulumi.BoolPtrOutput)
}

// Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
func (o GoogleCloudDialogflowCxV3FormParameterOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameter) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

type GoogleCloudDialogflowCxV3FormParameterArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FormParameter)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormParameterArrayOutput) ToGoogleCloudDialogflowCxV3FormParameterArrayOutput() GoogleCloudDialogflowCxV3FormParameterArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterArrayOutput) ToGoogleCloudDialogflowCxV3FormParameterArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FormParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FormParameter {
		return vs[0].([]GoogleCloudDialogflowCxV3FormParameter)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FormParameterOutput)
}

// Configuration for how the filling of a parameter should be handled.
type GoogleCloudDialogflowCxV3FormParameterFillBehavior struct {
	// Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
	InitialPromptFulfillment *GoogleCloudDialogflowCxV3Fulfillment `pulumi:"initialPromptFulfillment"`
	// The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.
	RepromptEventHandlers []GoogleCloudDialogflowCxV3EventHandler `pulumi:"repromptEventHandlers"`
}

// GoogleCloudDialogflowCxV3FormParameterFillBehaviorInput is an input type that accepts GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs and GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FormParameterFillBehaviorInput` via:
//
//          GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs{...}
type GoogleCloudDialogflowCxV3FormParameterFillBehaviorInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput() GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput
	ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput
}

// Configuration for how the filling of a parameter should be handled.
type GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs struct {
	// Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
	InitialPromptFulfillment GoogleCloudDialogflowCxV3FulfillmentPtrInput `pulumi:"initialPromptFulfillment"`
	// The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.
	RepromptEventHandlers GoogleCloudDialogflowCxV3EventHandlerArrayInput `pulumi:"repromptEventHandlers"`
}

func (GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FormParameterFillBehavior)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput() GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput {
	return i.ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput)
}

func (i GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput() GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput).ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrInput is an input type that accepts GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs, GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtr and GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrInput` via:
//
//          GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput() GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput
	ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput
}

type googleCloudDialogflowCxV3FormParameterFillBehaviorPtrType GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs

func GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtr(v *GoogleCloudDialogflowCxV3FormParameterFillBehaviorArgs) GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrInput {
	return (*googleCloudDialogflowCxV3FormParameterFillBehaviorPtrType)(v)
}

func (*googleCloudDialogflowCxV3FormParameterFillBehaviorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3FormParameterFillBehavior)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3FormParameterFillBehaviorPtrType) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput() GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3FormParameterFillBehaviorPtrType) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput)
}

// Configuration for how the filling of a parameter should be handled.
type GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FormParameterFillBehavior)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput() GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput() GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterFillBehavior) *GoogleCloudDialogflowCxV3FormParameterFillBehavior {
		return &v
	}).(GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput)
}

// Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput) InitialPromptFulfillment() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterFillBehavior) *GoogleCloudDialogflowCxV3Fulfillment {
		return v.InitialPromptFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

// The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.
func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput) RepromptEventHandlers() GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FormParameterFillBehavior) []GoogleCloudDialogflowCxV3EventHandler {
		return v.RepromptEventHandlers
	}).(GoogleCloudDialogflowCxV3EventHandlerArrayOutput)
}

type GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3FormParameterFillBehavior)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput() GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput) ToGoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput) Elem() GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3FormParameterFillBehavior) GoogleCloudDialogflowCxV3FormParameterFillBehavior {
		return *v
	}).(GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput)
}

// Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput) InitialPromptFulfillment() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3FormParameterFillBehavior) *GoogleCloudDialogflowCxV3Fulfillment {
		if v == nil {
			return nil
		}
		return v.InitialPromptFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

// The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.
func (o GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput) RepromptEventHandlers() GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3FormParameterFillBehavior) []GoogleCloudDialogflowCxV3EventHandler {
		if v == nil {
			return nil
		}
		return v.RepromptEventHandlers
	}).(GoogleCloudDialogflowCxV3EventHandlerArrayOutput)
}

// A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.
type GoogleCloudDialogflowCxV3Fulfillment struct {
	// Conditional cases for this fulfillment.
	ConditionalCases []GoogleCloudDialogflowCxV3FulfillmentConditionalCases `pulumi:"conditionalCases"`
	// The list of rich message responses to present to the user.
	Messages []GoogleCloudDialogflowCxV3ResponseMessage `pulumi:"messages"`
	// Set parameter values before executing the webhook.
	SetParameterActions []GoogleCloudDialogflowCxV3FulfillmentSetParameterAction `pulumi:"setParameterActions"`
	// The tag used by the webhook to identify which fulfillment is being called. This field is required if `webhook` is specified.
	Tag *string `pulumi:"tag"`
	// The webhook to call. Format: `projects//locations//agents//webhooks/`.
	Webhook *string `pulumi:"webhook"`
}

// GoogleCloudDialogflowCxV3FulfillmentInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentArgs and GoogleCloudDialogflowCxV3FulfillmentOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentInput` via:
//
//          GoogleCloudDialogflowCxV3FulfillmentArgs{...}
type GoogleCloudDialogflowCxV3FulfillmentInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentOutput() GoogleCloudDialogflowCxV3FulfillmentOutput
	ToGoogleCloudDialogflowCxV3FulfillmentOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentOutput
}

// A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.
type GoogleCloudDialogflowCxV3FulfillmentArgs struct {
	// Conditional cases for this fulfillment.
	ConditionalCases GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayInput `pulumi:"conditionalCases"`
	// The list of rich message responses to present to the user.
	Messages GoogleCloudDialogflowCxV3ResponseMessageArrayInput `pulumi:"messages"`
	// Set parameter values before executing the webhook.
	SetParameterActions GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayInput `pulumi:"setParameterActions"`
	// The tag used by the webhook to identify which fulfillment is being called. This field is required if `webhook` is specified.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The webhook to call. Format: `projects//locations//agents//webhooks/`.
	Webhook pulumi.StringPtrInput `pulumi:"webhook"`
}

func (GoogleCloudDialogflowCxV3FulfillmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Fulfillment)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentArgs) ToGoogleCloudDialogflowCxV3FulfillmentOutput() GoogleCloudDialogflowCxV3FulfillmentOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentArgs) ToGoogleCloudDialogflowCxV3FulfillmentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentOutput)
}

func (i GoogleCloudDialogflowCxV3FulfillmentArgs) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutput() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentArgs) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentOutput).ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3FulfillmentPtrInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentArgs, GoogleCloudDialogflowCxV3FulfillmentPtr and GoogleCloudDialogflowCxV3FulfillmentPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentPtrInput` via:
//
//          GoogleCloudDialogflowCxV3FulfillmentArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3FulfillmentPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentPtrOutput() GoogleCloudDialogflowCxV3FulfillmentPtrOutput
	ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentPtrOutput
}

type googleCloudDialogflowCxV3FulfillmentPtrType GoogleCloudDialogflowCxV3FulfillmentArgs

func GoogleCloudDialogflowCxV3FulfillmentPtr(v *GoogleCloudDialogflowCxV3FulfillmentArgs) GoogleCloudDialogflowCxV3FulfillmentPtrInput {
	return (*googleCloudDialogflowCxV3FulfillmentPtrType)(v)
}

func (*googleCloudDialogflowCxV3FulfillmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Fulfillment)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3FulfillmentPtrType) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutput() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3FulfillmentPtrType) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

// A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.
type GoogleCloudDialogflowCxV3FulfillmentOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Fulfillment)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentOutput) ToGoogleCloudDialogflowCxV3FulfillmentOutput() GoogleCloudDialogflowCxV3FulfillmentOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentOutput) ToGoogleCloudDialogflowCxV3FulfillmentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentOutput) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutput() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3FulfillmentOutput) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Fulfillment) *GoogleCloudDialogflowCxV3Fulfillment {
		return &v
	}).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

// Conditional cases for this fulfillment.
func (o GoogleCloudDialogflowCxV3FulfillmentOutput) ConditionalCases() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Fulfillment) []GoogleCloudDialogflowCxV3FulfillmentConditionalCases {
		return v.ConditionalCases
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput)
}

// The list of rich message responses to present to the user.
func (o GoogleCloudDialogflowCxV3FulfillmentOutput) Messages() GoogleCloudDialogflowCxV3ResponseMessageArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Fulfillment) []GoogleCloudDialogflowCxV3ResponseMessage {
		return v.Messages
	}).(GoogleCloudDialogflowCxV3ResponseMessageArrayOutput)
}

// Set parameter values before executing the webhook.
func (o GoogleCloudDialogflowCxV3FulfillmentOutput) SetParameterActions() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Fulfillment) []GoogleCloudDialogflowCxV3FulfillmentSetParameterAction {
		return v.SetParameterActions
	}).(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput)
}

// The tag used by the webhook to identify which fulfillment is being called. This field is required if `webhook` is specified.
func (o GoogleCloudDialogflowCxV3FulfillmentOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Fulfillment) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The webhook to call. Format: `projects//locations//agents//webhooks/`.
func (o GoogleCloudDialogflowCxV3FulfillmentOutput) Webhook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Fulfillment) *string { return v.Webhook }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Fulfillment)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutput() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) ToGoogleCloudDialogflowCxV3FulfillmentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) Elem() GoogleCloudDialogflowCxV3FulfillmentOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) GoogleCloudDialogflowCxV3Fulfillment { return *v }).(GoogleCloudDialogflowCxV3FulfillmentOutput)
}

// Conditional cases for this fulfillment.
func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) ConditionalCases() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) []GoogleCloudDialogflowCxV3FulfillmentConditionalCases {
		if v == nil {
			return nil
		}
		return v.ConditionalCases
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput)
}

// The list of rich message responses to present to the user.
func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) Messages() GoogleCloudDialogflowCxV3ResponseMessageArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) []GoogleCloudDialogflowCxV3ResponseMessage {
		if v == nil {
			return nil
		}
		return v.Messages
	}).(GoogleCloudDialogflowCxV3ResponseMessageArrayOutput)
}

// Set parameter values before executing the webhook.
func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) SetParameterActions() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) []GoogleCloudDialogflowCxV3FulfillmentSetParameterAction {
		if v == nil {
			return nil
		}
		return v.SetParameterActions
	}).(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput)
}

// The tag used by the webhook to identify which fulfillment is being called. This field is required if `webhook` is specified.
func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// The webhook to call. Format: `projects//locations//agents//webhooks/`.
func (o GoogleCloudDialogflowCxV3FulfillmentPtrOutput) Webhook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Fulfillment) *string {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(pulumi.StringPtrOutput)
}

// A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCases struct {
	// A list of cascading if-else conditions.
	Cases []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase `pulumi:"cases"`
}

// GoogleCloudDialogflowCxV3FulfillmentConditionalCasesInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs and GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesInput` via:
//
//          GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs{...}
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput
	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput
}

// A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs struct {
	// A list of cascading if-else conditions.
	Cases GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayInput `pulumi:"cases"`
}

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCases)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput)
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput).ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs, GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtr and GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrInput` via:
//
//          GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput
	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput
}

type googleCloudDialogflowCxV3FulfillmentConditionalCasesPtrType GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs

func GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtr(v *GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrInput {
	return (*googleCloudDialogflowCxV3FulfillmentConditionalCasesPtrType)(v)
}

func (*googleCloudDialogflowCxV3FulfillmentConditionalCasesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3FulfillmentConditionalCases)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3FulfillmentConditionalCasesPtrType) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3FulfillmentConditionalCasesPtrType) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput)
}

// GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArray and GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayInput` via:
//
//          GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArray{ GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs{...} }
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput
	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArray []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesInput

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCases)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArray) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArray) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput)
}

// A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCases)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCases) *GoogleCloudDialogflowCxV3FulfillmentConditionalCases {
		return &v
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput)
}

// A list of cascading if-else conditions.
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput) Cases() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCases) []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase {
		return v.Cases
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3FulfillmentConditionalCases)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput) Elem() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3FulfillmentConditionalCases) GoogleCloudDialogflowCxV3FulfillmentConditionalCases {
		return *v
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput)
}

// A list of cascading if-else conditions.
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput) Cases() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3FulfillmentConditionalCases) []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase {
		if v == nil {
			return nil
		}
		return v.Cases
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCases)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FulfillmentConditionalCases {
		return vs[0].([]GoogleCloudDialogflowCxV3FulfillmentConditionalCases)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput)
}

// Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase struct {
	// A list of case content.
	CaseContent []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent `pulumi:"caseContent"`
	// The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	Condition *string `pulumi:"condition"`
}

// GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs and GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseInput` via:
//
//          GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs{...}
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput
	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput
}

// Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs struct {
	// A list of case content.
	CaseContent GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayInput `pulumi:"caseContent"`
	// The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
	Condition pulumi.StringPtrInput `pulumi:"condition"`
}

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput)
}

// GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArray and GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayInput` via:
//
//          GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArray{ GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArgs{...} }
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput
	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArray []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseInput

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArray) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArray) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput)
}

// Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput {
	return o
}

// A list of case content.
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput) CaseContent() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase) []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent {
		return v.CaseContent
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput)
}

// The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase {
		return vs[0].([]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput)
}

// The list of messages or conditional cases to activate for this case.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent struct {
	// Additional cases to be evaluated.
	AdditionalCases *GoogleCloudDialogflowCxV3FulfillmentConditionalCases `pulumi:"additionalCases"`
	// Returned message.
	Message *GoogleCloudDialogflowCxV3ResponseMessage `pulumi:"message"`
}

// GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs and GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentInput` via:
//
//          GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs{...}
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput
	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput
}

// The list of messages or conditional cases to activate for this case.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs struct {
	// Additional cases to be evaluated.
	AdditionalCases GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrInput `pulumi:"additionalCases"`
	// Returned message.
	Message GoogleCloudDialogflowCxV3ResponseMessagePtrInput `pulumi:"message"`
}

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput)
}

// GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArray and GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayInput` via:
//
//          GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArray{ GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArgs{...} }
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput
	ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArray []GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentInput

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArray) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArray) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput)
}

// The list of messages or conditional cases to activate for this case.
type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput {
	return o
}

// Additional cases to be evaluated.
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput) AdditionalCases() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent) *GoogleCloudDialogflowCxV3FulfillmentConditionalCases {
		return v.AdditionalCases
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput)
}

// Returned message.
func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput) Message() GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent) *GoogleCloudDialogflowCxV3ResponseMessage {
		return v.Message
	}).(GoogleCloudDialogflowCxV3ResponseMessagePtrOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput() GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent {
		return vs[0].([]GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput)
}

// Setting a parameter value.
type GoogleCloudDialogflowCxV3FulfillmentSetParameterAction struct {
	// Display name of the parameter.
	Parameter *string `pulumi:"parameter"`
	// The new value of the parameter. A null value clears the parameter.
	Value interface{} `pulumi:"value"`
}

// GoogleCloudDialogflowCxV3FulfillmentSetParameterActionInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs and GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentSetParameterActionInput` via:
//
//          GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs{...}
type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput
	ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput
}

// Setting a parameter value.
type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs struct {
	// Display name of the parameter.
	Parameter pulumi.StringPtrInput `pulumi:"parameter"`
	// The new value of the parameter. A null value clears the parameter.
	Value pulumi.Input `pulumi:"value"`
}

func (GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentSetParameterAction)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput)
}

// GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayInput is an input type that accepts GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArray and GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayInput` via:
//
//          GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArray{ GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs{...} }
type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput
	ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput
}

type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArray []GoogleCloudDialogflowCxV3FulfillmentSetParameterActionInput

func (GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentSetParameterAction)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArray) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArray) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput)
}

// Setting a parameter value.
type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3FulfillmentSetParameterAction)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput {
	return o
}

// Display name of the parameter.
func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentSetParameterAction) *string { return v.Parameter }).(pulumi.StringPtrOutput)
}

// The new value of the parameter. A null value clears the parameter.
func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3FulfillmentSetParameterAction) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3FulfillmentSetParameterAction)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput() GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput) ToGoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3FulfillmentSetParameterAction {
		return vs[0].([]GoogleCloudDialogflowCxV3FulfillmentSetParameterAction)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput)
}

// Instructs the speech recognizer on how to process the audio content.
type GoogleCloudDialogflowCxV3InputAudioConfig struct {
	// Required. Audio encoding of the audio content to process.
	AudioEncoding *string `pulumi:"audioEncoding"`
	// Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
	EnableWordInfo *bool `pulumi:"enableWordInfo"`
	// Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details.
	Model *string `pulumi:"model"`
	// Optional. Which variant of the Speech model to use.
	ModelVariant *string `pulumi:"modelVariant"`
	// Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
	PhraseHints []string `pulumi:"phraseHints"`
	// Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
	SampleRateHertz *int `pulumi:"sampleRateHertz"`
	// Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.
	SingleUtterance *bool `pulumi:"singleUtterance"`
}

// GoogleCloudDialogflowCxV3InputAudioConfigInput is an input type that accepts GoogleCloudDialogflowCxV3InputAudioConfigArgs and GoogleCloudDialogflowCxV3InputAudioConfigOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3InputAudioConfigInput` via:
//
//          GoogleCloudDialogflowCxV3InputAudioConfigArgs{...}
type GoogleCloudDialogflowCxV3InputAudioConfigInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3InputAudioConfigOutput() GoogleCloudDialogflowCxV3InputAudioConfigOutput
	ToGoogleCloudDialogflowCxV3InputAudioConfigOutputWithContext(context.Context) GoogleCloudDialogflowCxV3InputAudioConfigOutput
}

// Instructs the speech recognizer on how to process the audio content.
type GoogleCloudDialogflowCxV3InputAudioConfigArgs struct {
	// Required. Audio encoding of the audio content to process.
	AudioEncoding pulumi.StringPtrInput `pulumi:"audioEncoding"`
	// Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
	EnableWordInfo pulumi.BoolPtrInput `pulumi:"enableWordInfo"`
	// Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details.
	Model pulumi.StringPtrInput `pulumi:"model"`
	// Optional. Which variant of the Speech model to use.
	ModelVariant pulumi.StringPtrInput `pulumi:"modelVariant"`
	// Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
	PhraseHints pulumi.StringArrayInput `pulumi:"phraseHints"`
	// Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
	SampleRateHertz pulumi.IntPtrInput `pulumi:"sampleRateHertz"`
	// Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.
	SingleUtterance pulumi.BoolPtrInput `pulumi:"singleUtterance"`
}

func (GoogleCloudDialogflowCxV3InputAudioConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3InputAudioConfig)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3InputAudioConfigArgs) ToGoogleCloudDialogflowCxV3InputAudioConfigOutput() GoogleCloudDialogflowCxV3InputAudioConfigOutput {
	return i.ToGoogleCloudDialogflowCxV3InputAudioConfigOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3InputAudioConfigArgs) ToGoogleCloudDialogflowCxV3InputAudioConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3InputAudioConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3InputAudioConfigOutput)
}

func (i GoogleCloudDialogflowCxV3InputAudioConfigArgs) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutput() GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3InputAudioConfigArgs) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3InputAudioConfigOutput).ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3InputAudioConfigPtrInput is an input type that accepts GoogleCloudDialogflowCxV3InputAudioConfigArgs, GoogleCloudDialogflowCxV3InputAudioConfigPtr and GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3InputAudioConfigPtrInput` via:
//
//          GoogleCloudDialogflowCxV3InputAudioConfigArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3InputAudioConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutput() GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput
	ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput
}

type googleCloudDialogflowCxV3InputAudioConfigPtrType GoogleCloudDialogflowCxV3InputAudioConfigArgs

func GoogleCloudDialogflowCxV3InputAudioConfigPtr(v *GoogleCloudDialogflowCxV3InputAudioConfigArgs) GoogleCloudDialogflowCxV3InputAudioConfigPtrInput {
	return (*googleCloudDialogflowCxV3InputAudioConfigPtrType)(v)
}

func (*googleCloudDialogflowCxV3InputAudioConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3InputAudioConfig)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3InputAudioConfigPtrType) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutput() GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3InputAudioConfigPtrType) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput)
}

// Instructs the speech recognizer on how to process the audio content.
type GoogleCloudDialogflowCxV3InputAudioConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3InputAudioConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3InputAudioConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) ToGoogleCloudDialogflowCxV3InputAudioConfigOutput() GoogleCloudDialogflowCxV3InputAudioConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) ToGoogleCloudDialogflowCxV3InputAudioConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3InputAudioConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutput() GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) *GoogleCloudDialogflowCxV3InputAudioConfig {
		return &v
	}).(GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput)
}

// Required. Audio encoding of the audio content to process.
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) AudioEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) *string { return v.AudioEncoding }).(pulumi.StringPtrOutput)
}

// Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) EnableWordInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) *bool { return v.EnableWordInfo }).(pulumi.BoolPtrOutput)
}

// Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details.
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) *string { return v.Model }).(pulumi.StringPtrOutput)
}

// Optional. Which variant of the Speech model to use.
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) ModelVariant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) *string { return v.ModelVariant }).(pulumi.StringPtrOutput)
}

// Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) PhraseHints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) []string { return v.PhraseHints }).(pulumi.StringArrayOutput)
}

// Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) SampleRateHertz() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) *int { return v.SampleRateHertz }).(pulumi.IntPtrOutput)
}

// Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.
func (o GoogleCloudDialogflowCxV3InputAudioConfigOutput) SingleUtterance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3InputAudioConfig) *bool { return v.SingleUtterance }).(pulumi.BoolPtrOutput)
}

type GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3InputAudioConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutput() GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) ToGoogleCloudDialogflowCxV3InputAudioConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) Elem() GoogleCloudDialogflowCxV3InputAudioConfigOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) GoogleCloudDialogflowCxV3InputAudioConfig {
		return *v
	}).(GoogleCloudDialogflowCxV3InputAudioConfigOutput)
}

// Required. Audio encoding of the audio content to process.
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) AudioEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) *string {
		if v == nil {
			return nil
		}
		return v.AudioEncoding
	}).(pulumi.StringPtrOutput)
}

// Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) EnableWordInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableWordInfo
	}).(pulumi.BoolPtrOutput)
}

// Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details.
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) *string {
		if v == nil {
			return nil
		}
		return v.Model
	}).(pulumi.StringPtrOutput)
}

// Optional. Which variant of the Speech model to use.
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) ModelVariant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) *string {
		if v == nil {
			return nil
		}
		return v.ModelVariant
	}).(pulumi.StringPtrOutput)
}

// Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) PhraseHints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) []string {
		if v == nil {
			return nil
		}
		return v.PhraseHints
	}).(pulumi.StringArrayOutput)
}

// Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) SampleRateHertz() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) *int {
		if v == nil {
			return nil
		}
		return v.SampleRateHertz
	}).(pulumi.IntPtrOutput)
}

// Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.
func (o GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput) SingleUtterance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3InputAudioConfig) *bool {
		if v == nil {
			return nil
		}
		return v.SingleUtterance
	}).(pulumi.BoolPtrOutput)
}

// An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.
type GoogleCloudDialogflowCxV3Intent struct {
	// Optional. Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
	Description *string `pulumi:"description"`
	// Required. The human-readable name of the intent, unique within the agent.
	DisplayName *string `pulumi:"displayName"`
	// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
	IsFallback *bool `pulumi:"isFallback"`
	// Optional. The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys." is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys.head * sys.contextual The above labels do not require value. "sys.head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
	Labels map[string]string `pulumi:"labels"`
	// The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.
	Name *string `pulumi:"name"`
	// The collection of parameters associated with the intent.
	Parameters []GoogleCloudDialogflowCxV3IntentParameter `pulumi:"parameters"`
	// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
	Priority *int `pulumi:"priority"`
	// The collection of training phrases the agent is trained on to identify the intent.
	TrainingPhrases []GoogleCloudDialogflowCxV3IntentTrainingPhrase `pulumi:"trainingPhrases"`
}

// GoogleCloudDialogflowCxV3IntentInput is an input type that accepts GoogleCloudDialogflowCxV3IntentArgs and GoogleCloudDialogflowCxV3IntentOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentInput` via:
//
//          GoogleCloudDialogflowCxV3IntentArgs{...}
type GoogleCloudDialogflowCxV3IntentInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentOutput() GoogleCloudDialogflowCxV3IntentOutput
	ToGoogleCloudDialogflowCxV3IntentOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentOutput
}

// An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.
type GoogleCloudDialogflowCxV3IntentArgs struct {
	// Optional. Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Required. The human-readable name of the intent, unique within the agent.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
	IsFallback pulumi.BoolPtrInput `pulumi:"isFallback"`
	// Optional. The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys." is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys.head * sys.contextual The above labels do not require value. "sys.head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The collection of parameters associated with the intent.
	Parameters GoogleCloudDialogflowCxV3IntentParameterArrayInput `pulumi:"parameters"`
	// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The collection of training phrases the agent is trained on to identify the intent.
	TrainingPhrases GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayInput `pulumi:"trainingPhrases"`
}

func (GoogleCloudDialogflowCxV3IntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Intent)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentArgs) ToGoogleCloudDialogflowCxV3IntentOutput() GoogleCloudDialogflowCxV3IntentOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentArgs) ToGoogleCloudDialogflowCxV3IntentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentOutput)
}

func (i GoogleCloudDialogflowCxV3IntentArgs) ToGoogleCloudDialogflowCxV3IntentPtrOutput() GoogleCloudDialogflowCxV3IntentPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentArgs) ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentOutput).ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3IntentPtrInput is an input type that accepts GoogleCloudDialogflowCxV3IntentArgs, GoogleCloudDialogflowCxV3IntentPtr and GoogleCloudDialogflowCxV3IntentPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentPtrInput` via:
//
//          GoogleCloudDialogflowCxV3IntentArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3IntentPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentPtrOutput() GoogleCloudDialogflowCxV3IntentPtrOutput
	ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentPtrOutput
}

type googleCloudDialogflowCxV3IntentPtrType GoogleCloudDialogflowCxV3IntentArgs

func GoogleCloudDialogflowCxV3IntentPtr(v *GoogleCloudDialogflowCxV3IntentArgs) GoogleCloudDialogflowCxV3IntentPtrInput {
	return (*googleCloudDialogflowCxV3IntentPtrType)(v)
}

func (*googleCloudDialogflowCxV3IntentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Intent)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3IntentPtrType) ToGoogleCloudDialogflowCxV3IntentPtrOutput() GoogleCloudDialogflowCxV3IntentPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3IntentPtrType) ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentPtrOutput)
}

// An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.
type GoogleCloudDialogflowCxV3IntentOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Intent)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentOutput) ToGoogleCloudDialogflowCxV3IntentOutput() GoogleCloudDialogflowCxV3IntentOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentOutput) ToGoogleCloudDialogflowCxV3IntentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentOutput) ToGoogleCloudDialogflowCxV3IntentPtrOutput() GoogleCloudDialogflowCxV3IntentPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3IntentOutput) ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) *GoogleCloudDialogflowCxV3Intent {
		return &v
	}).(GoogleCloudDialogflowCxV3IntentPtrOutput)
}

// Optional. Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
func (o GoogleCloudDialogflowCxV3IntentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Required. The human-readable name of the intent, unique within the agent.
func (o GoogleCloudDialogflowCxV3IntentOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
func (o GoogleCloudDialogflowCxV3IntentOutput) IsFallback() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) *bool { return v.IsFallback }).(pulumi.BoolPtrOutput)
}

// Optional. The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys." is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys.head * sys.contextual The above labels do not require value. "sys.head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
func (o GoogleCloudDialogflowCxV3IntentOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.
func (o GoogleCloudDialogflowCxV3IntentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The collection of parameters associated with the intent.
func (o GoogleCloudDialogflowCxV3IntentOutput) Parameters() GoogleCloudDialogflowCxV3IntentParameterArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) []GoogleCloudDialogflowCxV3IntentParameter {
		return v.Parameters
	}).(GoogleCloudDialogflowCxV3IntentParameterArrayOutput)
}

// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
func (o GoogleCloudDialogflowCxV3IntentOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The collection of training phrases the agent is trained on to identify the intent.
func (o GoogleCloudDialogflowCxV3IntentOutput) TrainingPhrases() GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Intent) []GoogleCloudDialogflowCxV3IntentTrainingPhrase {
		return v.TrainingPhrases
	}).(GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput)
}

type GoogleCloudDialogflowCxV3IntentPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Intent)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentPtrOutput) ToGoogleCloudDialogflowCxV3IntentPtrOutput() GoogleCloudDialogflowCxV3IntentPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentPtrOutput) ToGoogleCloudDialogflowCxV3IntentPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentPtrOutput) Elem() GoogleCloudDialogflowCxV3IntentOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) GoogleCloudDialogflowCxV3Intent { return *v }).(GoogleCloudDialogflowCxV3IntentOutput)
}

// Optional. Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Required. The human-readable name of the intent, unique within the agent.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) IsFallback() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) *bool {
		if v == nil {
			return nil
		}
		return v.IsFallback
	}).(pulumi.BoolPtrOutput)
}

// Optional. The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys." is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys.head * sys.contextual The above labels do not require value. "sys.head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The collection of parameters associated with the intent.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) Parameters() GoogleCloudDialogflowCxV3IntentParameterArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) []GoogleCloudDialogflowCxV3IntentParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(GoogleCloudDialogflowCxV3IntentParameterArrayOutput)
}

// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// The collection of training phrases the agent is trained on to identify the intent.
func (o GoogleCloudDialogflowCxV3IntentPtrOutput) TrainingPhrases() GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Intent) []GoogleCloudDialogflowCxV3IntentTrainingPhrase {
		if v == nil {
			return nil
		}
		return v.TrainingPhrases
	}).(GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput)
}

// Represents the intent to trigger programmatically rather than as a result of natural language processing.
type GoogleCloudDialogflowCxV3IntentInput struct {
	// Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`.
	Intent *string `pulumi:"intent"`
}

// GoogleCloudDialogflowCxV3IntentInputInput is an input type that accepts GoogleCloudDialogflowCxV3IntentInputArgs and GoogleCloudDialogflowCxV3IntentInputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentInputInput` via:
//
//          GoogleCloudDialogflowCxV3IntentInputArgs{...}
type GoogleCloudDialogflowCxV3IntentInputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentInputOutput() GoogleCloudDialogflowCxV3IntentInputOutput
	ToGoogleCloudDialogflowCxV3IntentInputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentInputOutput
}

// Represents the intent to trigger programmatically rather than as a result of natural language processing.
type GoogleCloudDialogflowCxV3IntentInputArgs struct {
	// Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`.
	Intent pulumi.StringPtrInput `pulumi:"intent"`
}

func (GoogleCloudDialogflowCxV3IntentInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentInput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentInputArgs) ToGoogleCloudDialogflowCxV3IntentInputOutput() GoogleCloudDialogflowCxV3IntentInputOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentInputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentInputArgs) ToGoogleCloudDialogflowCxV3IntentInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentInputOutput)
}

func (i GoogleCloudDialogflowCxV3IntentInputArgs) ToGoogleCloudDialogflowCxV3IntentInputPtrOutput() GoogleCloudDialogflowCxV3IntentInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentInputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentInputArgs) ToGoogleCloudDialogflowCxV3IntentInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentInputOutput).ToGoogleCloudDialogflowCxV3IntentInputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3IntentInputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3IntentInputArgs, GoogleCloudDialogflowCxV3IntentInputPtr and GoogleCloudDialogflowCxV3IntentInputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentInputPtrInput` via:
//
//          GoogleCloudDialogflowCxV3IntentInputArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3IntentInputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentInputPtrOutput() GoogleCloudDialogflowCxV3IntentInputPtrOutput
	ToGoogleCloudDialogflowCxV3IntentInputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentInputPtrOutput
}

type googleCloudDialogflowCxV3IntentInputPtrType GoogleCloudDialogflowCxV3IntentInputArgs

func GoogleCloudDialogflowCxV3IntentInputPtr(v *GoogleCloudDialogflowCxV3IntentInputArgs) GoogleCloudDialogflowCxV3IntentInputPtrInput {
	return (*googleCloudDialogflowCxV3IntentInputPtrType)(v)
}

func (*googleCloudDialogflowCxV3IntentInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3IntentInput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3IntentInputPtrType) ToGoogleCloudDialogflowCxV3IntentInputPtrOutput() GoogleCloudDialogflowCxV3IntentInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentInputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3IntentInputPtrType) ToGoogleCloudDialogflowCxV3IntentInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentInputPtrOutput)
}

// Represents the intent to trigger programmatically rather than as a result of natural language processing.
type GoogleCloudDialogflowCxV3IntentInputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentInputOutput) ToGoogleCloudDialogflowCxV3IntentInputOutput() GoogleCloudDialogflowCxV3IntentInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentInputOutput) ToGoogleCloudDialogflowCxV3IntentInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentInputOutput) ToGoogleCloudDialogflowCxV3IntentInputPtrOutput() GoogleCloudDialogflowCxV3IntentInputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3IntentInputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3IntentInputOutput) ToGoogleCloudDialogflowCxV3IntentInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentInput) *GoogleCloudDialogflowCxV3IntentInput {
		return &v
	}).(GoogleCloudDialogflowCxV3IntentInputPtrOutput)
}

// Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`.
func (o GoogleCloudDialogflowCxV3IntentInputOutput) Intent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentInput) *string { return v.Intent }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3IntentInputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3IntentInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentInputPtrOutput) ToGoogleCloudDialogflowCxV3IntentInputPtrOutput() GoogleCloudDialogflowCxV3IntentInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentInputPtrOutput) ToGoogleCloudDialogflowCxV3IntentInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentInputPtrOutput) Elem() GoogleCloudDialogflowCxV3IntentInputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3IntentInput) GoogleCloudDialogflowCxV3IntentInput { return *v }).(GoogleCloudDialogflowCxV3IntentInputOutput)
}

// Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`.
func (o GoogleCloudDialogflowCxV3IntentInputPtrOutput) Intent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3IntentInput) *string {
		if v == nil {
			return nil
		}
		return v.Intent
	}).(pulumi.StringPtrOutput)
}

// Represents an intent parameter.
type GoogleCloudDialogflowCxV3IntentParameter struct {
	// Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
	EntityType *string `pulumi:"entityType"`
	// Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
	Id *string `pulumi:"id"`
	// Indicates whether the parameter represents a list of values.
	IsList *bool `pulumi:"isList"`
	// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
	Redact *bool `pulumi:"redact"`
}

// GoogleCloudDialogflowCxV3IntentParameterInput is an input type that accepts GoogleCloudDialogflowCxV3IntentParameterArgs and GoogleCloudDialogflowCxV3IntentParameterOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentParameterInput` via:
//
//          GoogleCloudDialogflowCxV3IntentParameterArgs{...}
type GoogleCloudDialogflowCxV3IntentParameterInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentParameterOutput() GoogleCloudDialogflowCxV3IntentParameterOutput
	ToGoogleCloudDialogflowCxV3IntentParameterOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentParameterOutput
}

// Represents an intent parameter.
type GoogleCloudDialogflowCxV3IntentParameterArgs struct {
	// Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	// Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Indicates whether the parameter represents a list of values.
	IsList pulumi.BoolPtrInput `pulumi:"isList"`
	// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
	Redact pulumi.BoolPtrInput `pulumi:"redact"`
}

func (GoogleCloudDialogflowCxV3IntentParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentParameter)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentParameterArgs) ToGoogleCloudDialogflowCxV3IntentParameterOutput() GoogleCloudDialogflowCxV3IntentParameterOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentParameterOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentParameterArgs) ToGoogleCloudDialogflowCxV3IntentParameterOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentParameterOutput)
}

// GoogleCloudDialogflowCxV3IntentParameterArrayInput is an input type that accepts GoogleCloudDialogflowCxV3IntentParameterArray and GoogleCloudDialogflowCxV3IntentParameterArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentParameterArrayInput` via:
//
//          GoogleCloudDialogflowCxV3IntentParameterArray{ GoogleCloudDialogflowCxV3IntentParameterArgs{...} }
type GoogleCloudDialogflowCxV3IntentParameterArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentParameterArrayOutput() GoogleCloudDialogflowCxV3IntentParameterArrayOutput
	ToGoogleCloudDialogflowCxV3IntentParameterArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentParameterArrayOutput
}

type GoogleCloudDialogflowCxV3IntentParameterArray []GoogleCloudDialogflowCxV3IntentParameterInput

func (GoogleCloudDialogflowCxV3IntentParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentParameter)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentParameterArray) ToGoogleCloudDialogflowCxV3IntentParameterArrayOutput() GoogleCloudDialogflowCxV3IntentParameterArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentParameterArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentParameterArray) ToGoogleCloudDialogflowCxV3IntentParameterArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentParameterArrayOutput)
}

// Represents an intent parameter.
type GoogleCloudDialogflowCxV3IntentParameterOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentParameter)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentParameterOutput) ToGoogleCloudDialogflowCxV3IntentParameterOutput() GoogleCloudDialogflowCxV3IntentParameterOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentParameterOutput) ToGoogleCloudDialogflowCxV3IntentParameterOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentParameterOutput {
	return o
}

// Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.
func (o GoogleCloudDialogflowCxV3IntentParameterOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentParameter) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
func (o GoogleCloudDialogflowCxV3IntentParameterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentParameter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Indicates whether the parameter represents a list of values.
func (o GoogleCloudDialogflowCxV3IntentParameterOutput) IsList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentParameter) *bool { return v.IsList }).(pulumi.BoolPtrOutput)
}

// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
func (o GoogleCloudDialogflowCxV3IntentParameterOutput) Redact() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentParameter) *bool { return v.Redact }).(pulumi.BoolPtrOutput)
}

type GoogleCloudDialogflowCxV3IntentParameterArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentParameter)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentParameterArrayOutput) ToGoogleCloudDialogflowCxV3IntentParameterArrayOutput() GoogleCloudDialogflowCxV3IntentParameterArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentParameterArrayOutput) ToGoogleCloudDialogflowCxV3IntentParameterArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentParameterArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentParameterArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3IntentParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3IntentParameter {
		return vs[0].([]GoogleCloudDialogflowCxV3IntentParameter)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3IntentParameterOutput)
}

// Represents an example that the agent is trained on to identify the intent.
type GoogleCloudDialogflowCxV3IntentTrainingPhrase struct {
	// Output only. The unique identifier of the training phrase.
	Id *string `pulumi:"id"`
	// Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.
	Parts []GoogleCloudDialogflowCxV3IntentTrainingPhrasePart `pulumi:"parts"`
	// Indicates how many times this example was added to the intent.
	RepeatCount *int `pulumi:"repeatCount"`
}

// GoogleCloudDialogflowCxV3IntentTrainingPhraseInput is an input type that accepts GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs and GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentTrainingPhraseInput` via:
//
//          GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs{...}
type GoogleCloudDialogflowCxV3IntentTrainingPhraseInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentTrainingPhraseOutput() GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput
	ToGoogleCloudDialogflowCxV3IntentTrainingPhraseOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput
}

// Represents an example that the agent is trained on to identify the intent.
type GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs struct {
	// Output only. The unique identifier of the training phrase.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.
	Parts GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayInput `pulumi:"parts"`
	// Indicates how many times this example was added to the intent.
	RepeatCount pulumi.IntPtrInput `pulumi:"repeatCount"`
}

func (GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentTrainingPhrase)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseOutput() GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentTrainingPhraseOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput)
}

// GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayInput is an input type that accepts GoogleCloudDialogflowCxV3IntentTrainingPhraseArray and GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayInput` via:
//
//          GoogleCloudDialogflowCxV3IntentTrainingPhraseArray{ GoogleCloudDialogflowCxV3IntentTrainingPhraseArgs{...} }
type GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput() GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput
	ToGoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput
}

type GoogleCloudDialogflowCxV3IntentTrainingPhraseArray []GoogleCloudDialogflowCxV3IntentTrainingPhraseInput

func (GoogleCloudDialogflowCxV3IntentTrainingPhraseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentTrainingPhrase)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhraseArray) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput() GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhraseArray) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput)
}

// Represents an example that the agent is trained on to identify the intent.
type GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentTrainingPhrase)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseOutput() GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput {
	return o
}

// Output only. The unique identifier of the training phrase.
func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentTrainingPhrase) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.
func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput) Parts() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentTrainingPhrase) []GoogleCloudDialogflowCxV3IntentTrainingPhrasePart {
		return v.Parts
	}).(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput)
}

// Indicates how many times this example was added to the intent.
func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput) RepeatCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentTrainingPhrase) *int { return v.RepeatCount }).(pulumi.IntPtrOutput)
}

type GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentTrainingPhrase)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput() GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3IntentTrainingPhrase {
		return vs[0].([]GoogleCloudDialogflowCxV3IntentTrainingPhrase)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput)
}

// Represents a part of a training phrase.
type GoogleCloudDialogflowCxV3IntentTrainingPhrasePart struct {
	// The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
	ParameterId *string `pulumi:"parameterId"`
	// Required. The text for this part.
	Text *string `pulumi:"text"`
}

// GoogleCloudDialogflowCxV3IntentTrainingPhrasePartInput is an input type that accepts GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs and GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentTrainingPhrasePartInput` via:
//
//          GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs{...}
type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput
	ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput
}

// Represents a part of a training phrase.
type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs struct {
	// The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
	ParameterId pulumi.StringPtrInput `pulumi:"parameterId"`
	// Required. The text for this part.
	Text pulumi.StringPtrInput `pulumi:"text"`
}

func (GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentTrainingPhrasePart)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput)
}

// GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayInput is an input type that accepts GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArray and GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayInput` via:
//
//          GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArray{ GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArgs{...} }
type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput
	ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput
}

type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArray []GoogleCloudDialogflowCxV3IntentTrainingPhrasePartInput

func (GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentTrainingPhrasePart)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArray) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArray) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput)
}

// Represents a part of a training phrase.
type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3IntentTrainingPhrasePart)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput {
	return o
}

// The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput) ParameterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentTrainingPhrasePart) *string { return v.ParameterId }).(pulumi.StringPtrOutput)
}

// Required. The text for this part.
func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3IntentTrainingPhrasePart) *string { return v.Text }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3IntentTrainingPhrasePart)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput() GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput) ToGoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3IntentTrainingPhrasePart {
		return vs[0].([]GoogleCloudDialogflowCxV3IntentTrainingPhrasePart)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput)
}

// Settings related to NLU.
type GoogleCloudDialogflowCxV3NluSettings struct {
	// To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
	ClassificationThreshold *float64 `pulumi:"classificationThreshold"`
	// Indicates NLU model training mode.
	ModelTrainingMode *string `pulumi:"modelTrainingMode"`
	// Indicates the type of NLU model.
	ModelType *string `pulumi:"modelType"`
}

// GoogleCloudDialogflowCxV3NluSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3NluSettingsArgs and GoogleCloudDialogflowCxV3NluSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3NluSettingsInput` via:
//
//          GoogleCloudDialogflowCxV3NluSettingsArgs{...}
type GoogleCloudDialogflowCxV3NluSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3NluSettingsOutput() GoogleCloudDialogflowCxV3NluSettingsOutput
	ToGoogleCloudDialogflowCxV3NluSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3NluSettingsOutput
}

// Settings related to NLU.
type GoogleCloudDialogflowCxV3NluSettingsArgs struct {
	// To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
	ClassificationThreshold pulumi.Float64PtrInput `pulumi:"classificationThreshold"`
	// Indicates NLU model training mode.
	ModelTrainingMode pulumi.StringPtrInput `pulumi:"modelTrainingMode"`
	// Indicates the type of NLU model.
	ModelType pulumi.StringPtrInput `pulumi:"modelType"`
}

func (GoogleCloudDialogflowCxV3NluSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3NluSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3NluSettingsArgs) ToGoogleCloudDialogflowCxV3NluSettingsOutput() GoogleCloudDialogflowCxV3NluSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3NluSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3NluSettingsArgs) ToGoogleCloudDialogflowCxV3NluSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3NluSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3NluSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3NluSettingsArgs) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutput() GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3NluSettingsArgs) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3NluSettingsOutput).ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3NluSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3NluSettingsArgs, GoogleCloudDialogflowCxV3NluSettingsPtr and GoogleCloudDialogflowCxV3NluSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3NluSettingsPtrInput` via:
//
//          GoogleCloudDialogflowCxV3NluSettingsArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3NluSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3NluSettingsPtrOutput() GoogleCloudDialogflowCxV3NluSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3NluSettingsPtrOutput
}

type googleCloudDialogflowCxV3NluSettingsPtrType GoogleCloudDialogflowCxV3NluSettingsArgs

func GoogleCloudDialogflowCxV3NluSettingsPtr(v *GoogleCloudDialogflowCxV3NluSettingsArgs) GoogleCloudDialogflowCxV3NluSettingsPtrInput {
	return (*googleCloudDialogflowCxV3NluSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3NluSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3NluSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3NluSettingsPtrType) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutput() GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3NluSettingsPtrType) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3NluSettingsPtrOutput)
}

// Settings related to NLU.
type GoogleCloudDialogflowCxV3NluSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3NluSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3NluSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3NluSettingsOutput) ToGoogleCloudDialogflowCxV3NluSettingsOutput() GoogleCloudDialogflowCxV3NluSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3NluSettingsOutput) ToGoogleCloudDialogflowCxV3NluSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3NluSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3NluSettingsOutput) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutput() GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3NluSettingsOutput) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3NluSettings) *GoogleCloudDialogflowCxV3NluSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3NluSettingsPtrOutput)
}

// To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
func (o GoogleCloudDialogflowCxV3NluSettingsOutput) ClassificationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3NluSettings) *float64 { return v.ClassificationThreshold }).(pulumi.Float64PtrOutput)
}

// Indicates NLU model training mode.
func (o GoogleCloudDialogflowCxV3NluSettingsOutput) ModelTrainingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3NluSettings) *string { return v.ModelTrainingMode }).(pulumi.StringPtrOutput)
}

// Indicates the type of NLU model.
func (o GoogleCloudDialogflowCxV3NluSettingsOutput) ModelType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3NluSettings) *string { return v.ModelType }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3NluSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3NluSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3NluSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3NluSettingsPtrOutput) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutput() GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3NluSettingsPtrOutput) ToGoogleCloudDialogflowCxV3NluSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3NluSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3NluSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3NluSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3NluSettings) GoogleCloudDialogflowCxV3NluSettings { return *v }).(GoogleCloudDialogflowCxV3NluSettingsOutput)
}

// To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
func (o GoogleCloudDialogflowCxV3NluSettingsPtrOutput) ClassificationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3NluSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.ClassificationThreshold
	}).(pulumi.Float64PtrOutput)
}

// Indicates NLU model training mode.
func (o GoogleCloudDialogflowCxV3NluSettingsPtrOutput) ModelTrainingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3NluSettings) *string {
		if v == nil {
			return nil
		}
		return v.ModelTrainingMode
	}).(pulumi.StringPtrOutput)
}

// Indicates the type of NLU model.
func (o GoogleCloudDialogflowCxV3NluSettingsPtrOutput) ModelType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3NluSettings) *string {
		if v == nil {
			return nil
		}
		return v.ModelType
	}).(pulumi.StringPtrOutput)
}

// A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
type GoogleCloudDialogflowCxV3Page struct {
	// Required. The human-readable name of the page, unique within the agent.
	DisplayName *string `pulumi:"displayName"`
	// The fulfillment to call when the session is entering the page.
	EntryFulfillment *GoogleCloudDialogflowCxV3Fulfillment `pulumi:"entryFulfillment"`
	// Handlers associated with the page to handle events such as webhook errors, no match or no input.
	EventHandlers []GoogleCloudDialogflowCxV3EventHandler `pulumi:"eventHandlers"`
	// The form associated with the page, used for collecting parameters relevant to the page.
	Form *GoogleCloudDialogflowCxV3Form `pulumi:"form"`
	// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.
	Name *string `pulumi:"name"`
	// Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`.
	TransitionRouteGroups []string `pulumi:"transitionRouteGroups"`
	// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
	TransitionRoutes []GoogleCloudDialogflowCxV3TransitionRoute `pulumi:"transitionRoutes"`
}

// GoogleCloudDialogflowCxV3PageInput is an input type that accepts GoogleCloudDialogflowCxV3PageArgs and GoogleCloudDialogflowCxV3PageOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3PageInput` via:
//
//          GoogleCloudDialogflowCxV3PageArgs{...}
type GoogleCloudDialogflowCxV3PageInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3PageOutput() GoogleCloudDialogflowCxV3PageOutput
	ToGoogleCloudDialogflowCxV3PageOutputWithContext(context.Context) GoogleCloudDialogflowCxV3PageOutput
}

// A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
type GoogleCloudDialogflowCxV3PageArgs struct {
	// Required. The human-readable name of the page, unique within the agent.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The fulfillment to call when the session is entering the page.
	EntryFulfillment GoogleCloudDialogflowCxV3FulfillmentPtrInput `pulumi:"entryFulfillment"`
	// Handlers associated with the page to handle events such as webhook errors, no match or no input.
	EventHandlers GoogleCloudDialogflowCxV3EventHandlerArrayInput `pulumi:"eventHandlers"`
	// The form associated with the page, used for collecting parameters relevant to the page.
	Form GoogleCloudDialogflowCxV3FormPtrInput `pulumi:"form"`
	// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`.
	TransitionRouteGroups pulumi.StringArrayInput `pulumi:"transitionRouteGroups"`
	// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
	TransitionRoutes GoogleCloudDialogflowCxV3TransitionRouteArrayInput `pulumi:"transitionRoutes"`
}

func (GoogleCloudDialogflowCxV3PageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Page)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3PageArgs) ToGoogleCloudDialogflowCxV3PageOutput() GoogleCloudDialogflowCxV3PageOutput {
	return i.ToGoogleCloudDialogflowCxV3PageOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3PageArgs) ToGoogleCloudDialogflowCxV3PageOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3PageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3PageOutput)
}

func (i GoogleCloudDialogflowCxV3PageArgs) ToGoogleCloudDialogflowCxV3PagePtrOutput() GoogleCloudDialogflowCxV3PagePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3PageArgs) ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3PagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3PageOutput).ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3PagePtrInput is an input type that accepts GoogleCloudDialogflowCxV3PageArgs, GoogleCloudDialogflowCxV3PagePtr and GoogleCloudDialogflowCxV3PagePtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3PagePtrInput` via:
//
//          GoogleCloudDialogflowCxV3PageArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3PagePtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3PagePtrOutput() GoogleCloudDialogflowCxV3PagePtrOutput
	ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3PagePtrOutput
}

type googleCloudDialogflowCxV3PagePtrType GoogleCloudDialogflowCxV3PageArgs

func GoogleCloudDialogflowCxV3PagePtr(v *GoogleCloudDialogflowCxV3PageArgs) GoogleCloudDialogflowCxV3PagePtrInput {
	return (*googleCloudDialogflowCxV3PagePtrType)(v)
}

func (*googleCloudDialogflowCxV3PagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Page)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3PagePtrType) ToGoogleCloudDialogflowCxV3PagePtrOutput() GoogleCloudDialogflowCxV3PagePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3PagePtrType) ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3PagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3PagePtrOutput)
}

// A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
type GoogleCloudDialogflowCxV3PageOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3PageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3Page)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3PageOutput) ToGoogleCloudDialogflowCxV3PageOutput() GoogleCloudDialogflowCxV3PageOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3PageOutput) ToGoogleCloudDialogflowCxV3PageOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3PageOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3PageOutput) ToGoogleCloudDialogflowCxV3PagePtrOutput() GoogleCloudDialogflowCxV3PagePtrOutput {
	return o.ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3PageOutput) ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3PagePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) *GoogleCloudDialogflowCxV3Page {
		return &v
	}).(GoogleCloudDialogflowCxV3PagePtrOutput)
}

// Required. The human-readable name of the page, unique within the agent.
func (o GoogleCloudDialogflowCxV3PageOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The fulfillment to call when the session is entering the page.
func (o GoogleCloudDialogflowCxV3PageOutput) EntryFulfillment() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) *GoogleCloudDialogflowCxV3Fulfillment { return v.EntryFulfillment }).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

// Handlers associated with the page to handle events such as webhook errors, no match or no input.
func (o GoogleCloudDialogflowCxV3PageOutput) EventHandlers() GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) []GoogleCloudDialogflowCxV3EventHandler { return v.EventHandlers }).(GoogleCloudDialogflowCxV3EventHandlerArrayOutput)
}

// The form associated with the page, used for collecting parameters relevant to the page.
func (o GoogleCloudDialogflowCxV3PageOutput) Form() GoogleCloudDialogflowCxV3FormPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) *GoogleCloudDialogflowCxV3Form { return v.Form }).(GoogleCloudDialogflowCxV3FormPtrOutput)
}

// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.
func (o GoogleCloudDialogflowCxV3PageOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`.
func (o GoogleCloudDialogflowCxV3PageOutput) TransitionRouteGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) []string { return v.TransitionRouteGroups }).(pulumi.StringArrayOutput)
}

// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
func (o GoogleCloudDialogflowCxV3PageOutput) TransitionRoutes() GoogleCloudDialogflowCxV3TransitionRouteArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3Page) []GoogleCloudDialogflowCxV3TransitionRoute {
		return v.TransitionRoutes
	}).(GoogleCloudDialogflowCxV3TransitionRouteArrayOutput)
}

type GoogleCloudDialogflowCxV3PagePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3PagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3Page)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3PagePtrOutput) ToGoogleCloudDialogflowCxV3PagePtrOutput() GoogleCloudDialogflowCxV3PagePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3PagePtrOutput) ToGoogleCloudDialogflowCxV3PagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3PagePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3PagePtrOutput) Elem() GoogleCloudDialogflowCxV3PageOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) GoogleCloudDialogflowCxV3Page { return *v }).(GoogleCloudDialogflowCxV3PageOutput)
}

// Required. The human-readable name of the page, unique within the agent.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The fulfillment to call when the session is entering the page.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) EntryFulfillment() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) *GoogleCloudDialogflowCxV3Fulfillment {
		if v == nil {
			return nil
		}
		return v.EntryFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

// Handlers associated with the page to handle events such as webhook errors, no match or no input.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) EventHandlers() GoogleCloudDialogflowCxV3EventHandlerArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) []GoogleCloudDialogflowCxV3EventHandler {
		if v == nil {
			return nil
		}
		return v.EventHandlers
	}).(GoogleCloudDialogflowCxV3EventHandlerArrayOutput)
}

// The form associated with the page, used for collecting parameters relevant to the page.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) Form() GoogleCloudDialogflowCxV3FormPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) *GoogleCloudDialogflowCxV3Form {
		if v == nil {
			return nil
		}
		return v.Form
	}).(GoogleCloudDialogflowCxV3FormPtrOutput)
}

// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) TransitionRouteGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) []string {
		if v == nil {
			return nil
		}
		return v.TransitionRouteGroups
	}).(pulumi.StringArrayOutput)
}

// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
func (o GoogleCloudDialogflowCxV3PagePtrOutput) TransitionRoutes() GoogleCloudDialogflowCxV3TransitionRouteArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3Page) []GoogleCloudDialogflowCxV3TransitionRoute {
		if v == nil {
			return nil
		}
		return v.TransitionRoutes
	}).(GoogleCloudDialogflowCxV3TransitionRouteArrayOutput)
}

// Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered.
type GoogleCloudDialogflowCxV3QueryInput struct {
	// The natural language speech audio to be processed.
	Audio *GoogleCloudDialogflowCxV3AudioInput `pulumi:"audio"`
	// The DTMF event to be handled.
	Dtmf *GoogleCloudDialogflowCxV3DtmfInput `pulumi:"dtmf"`
	// The event to be triggered.
	Event *GoogleCloudDialogflowCxV3EventInput `pulumi:"event"`
	// The intent to be triggered.
	Intent *GoogleCloudDialogflowCxV3IntentInput `pulumi:"intent"`
	// Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
	LanguageCode *string `pulumi:"languageCode"`
	// The natural language text to be processed.
	Text *GoogleCloudDialogflowCxV3TextInput `pulumi:"text"`
}

// GoogleCloudDialogflowCxV3QueryInputInput is an input type that accepts GoogleCloudDialogflowCxV3QueryInputArgs and GoogleCloudDialogflowCxV3QueryInputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3QueryInputInput` via:
//
//          GoogleCloudDialogflowCxV3QueryInputArgs{...}
type GoogleCloudDialogflowCxV3QueryInputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3QueryInputOutput() GoogleCloudDialogflowCxV3QueryInputOutput
	ToGoogleCloudDialogflowCxV3QueryInputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3QueryInputOutput
}

// Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered.
type GoogleCloudDialogflowCxV3QueryInputArgs struct {
	// The natural language speech audio to be processed.
	Audio GoogleCloudDialogflowCxV3AudioInputPtrInput `pulumi:"audio"`
	// The DTMF event to be handled.
	Dtmf GoogleCloudDialogflowCxV3DtmfInputPtrInput `pulumi:"dtmf"`
	// The event to be triggered.
	Event GoogleCloudDialogflowCxV3EventInputPtrInput `pulumi:"event"`
	// The intent to be triggered.
	Intent GoogleCloudDialogflowCxV3IntentInputPtrInput `pulumi:"intent"`
	// Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
	LanguageCode pulumi.StringPtrInput `pulumi:"languageCode"`
	// The natural language text to be processed.
	Text GoogleCloudDialogflowCxV3TextInputPtrInput `pulumi:"text"`
}

func (GoogleCloudDialogflowCxV3QueryInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3QueryInput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3QueryInputArgs) ToGoogleCloudDialogflowCxV3QueryInputOutput() GoogleCloudDialogflowCxV3QueryInputOutput {
	return i.ToGoogleCloudDialogflowCxV3QueryInputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3QueryInputArgs) ToGoogleCloudDialogflowCxV3QueryInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3QueryInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3QueryInputOutput)
}

func (i GoogleCloudDialogflowCxV3QueryInputArgs) ToGoogleCloudDialogflowCxV3QueryInputPtrOutput() GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3QueryInputArgs) ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3QueryInputOutput).ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3QueryInputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3QueryInputArgs, GoogleCloudDialogflowCxV3QueryInputPtr and GoogleCloudDialogflowCxV3QueryInputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3QueryInputPtrInput` via:
//
//          GoogleCloudDialogflowCxV3QueryInputArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3QueryInputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3QueryInputPtrOutput() GoogleCloudDialogflowCxV3QueryInputPtrOutput
	ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3QueryInputPtrOutput
}

type googleCloudDialogflowCxV3QueryInputPtrType GoogleCloudDialogflowCxV3QueryInputArgs

func GoogleCloudDialogflowCxV3QueryInputPtr(v *GoogleCloudDialogflowCxV3QueryInputArgs) GoogleCloudDialogflowCxV3QueryInputPtrInput {
	return (*googleCloudDialogflowCxV3QueryInputPtrType)(v)
}

func (*googleCloudDialogflowCxV3QueryInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3QueryInput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3QueryInputPtrType) ToGoogleCloudDialogflowCxV3QueryInputPtrOutput() GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3QueryInputPtrType) ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3QueryInputPtrOutput)
}

// Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered.
type GoogleCloudDialogflowCxV3QueryInputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3QueryInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3QueryInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3QueryInputOutput) ToGoogleCloudDialogflowCxV3QueryInputOutput() GoogleCloudDialogflowCxV3QueryInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3QueryInputOutput) ToGoogleCloudDialogflowCxV3QueryInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3QueryInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3QueryInputOutput) ToGoogleCloudDialogflowCxV3QueryInputPtrOutput() GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3QueryInputOutput) ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3QueryInput {
		return &v
	}).(GoogleCloudDialogflowCxV3QueryInputPtrOutput)
}

// The natural language speech audio to be processed.
func (o GoogleCloudDialogflowCxV3QueryInputOutput) Audio() GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3AudioInput { return v.Audio }).(GoogleCloudDialogflowCxV3AudioInputPtrOutput)
}

// The DTMF event to be handled.
func (o GoogleCloudDialogflowCxV3QueryInputOutput) Dtmf() GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3DtmfInput { return v.Dtmf }).(GoogleCloudDialogflowCxV3DtmfInputPtrOutput)
}

// The event to be triggered.
func (o GoogleCloudDialogflowCxV3QueryInputOutput) Event() GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3EventInput { return v.Event }).(GoogleCloudDialogflowCxV3EventInputPtrOutput)
}

// The intent to be triggered.
func (o GoogleCloudDialogflowCxV3QueryInputOutput) Intent() GoogleCloudDialogflowCxV3IntentInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3IntentInput { return v.Intent }).(GoogleCloudDialogflowCxV3IntentInputPtrOutput)
}

// Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
func (o GoogleCloudDialogflowCxV3QueryInputOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInput) *string { return v.LanguageCode }).(pulumi.StringPtrOutput)
}

// The natural language text to be processed.
func (o GoogleCloudDialogflowCxV3QueryInputOutput) Text() GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3TextInput { return v.Text }).(GoogleCloudDialogflowCxV3TextInputPtrOutput)
}

type GoogleCloudDialogflowCxV3QueryInputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3QueryInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3QueryInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) ToGoogleCloudDialogflowCxV3QueryInputPtrOutput() GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) ToGoogleCloudDialogflowCxV3QueryInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3QueryInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) Elem() GoogleCloudDialogflowCxV3QueryInputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3QueryInput) GoogleCloudDialogflowCxV3QueryInput { return *v }).(GoogleCloudDialogflowCxV3QueryInputOutput)
}

// The natural language speech audio to be processed.
func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) Audio() GoogleCloudDialogflowCxV3AudioInputPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3AudioInput {
		if v == nil {
			return nil
		}
		return v.Audio
	}).(GoogleCloudDialogflowCxV3AudioInputPtrOutput)
}

// The DTMF event to be handled.
func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) Dtmf() GoogleCloudDialogflowCxV3DtmfInputPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3DtmfInput {
		if v == nil {
			return nil
		}
		return v.Dtmf
	}).(GoogleCloudDialogflowCxV3DtmfInputPtrOutput)
}

// The event to be triggered.
func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) Event() GoogleCloudDialogflowCxV3EventInputPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3EventInput {
		if v == nil {
			return nil
		}
		return v.Event
	}).(GoogleCloudDialogflowCxV3EventInputPtrOutput)
}

// The intent to be triggered.
func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) Intent() GoogleCloudDialogflowCxV3IntentInputPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3IntentInput {
		if v == nil {
			return nil
		}
		return v.Intent
	}).(GoogleCloudDialogflowCxV3IntentInputPtrOutput)
}

// Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3QueryInput) *string {
		if v == nil {
			return nil
		}
		return v.LanguageCode
	}).(pulumi.StringPtrOutput)
}

// The natural language text to be processed.
func (o GoogleCloudDialogflowCxV3QueryInputPtrOutput) Text() GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3QueryInput) *GoogleCloudDialogflowCxV3TextInput {
		if v == nil {
			return nil
		}
		return v.Text
	}).(GoogleCloudDialogflowCxV3TextInputPtrOutput)
}

// Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.
type GoogleCloudDialogflowCxV3ResponseMessage struct {
	// Indicates that the conversation succeeded.
	ConversationSuccess *GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess `pulumi:"conversationSuccess"`
	// Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.
	EndInteraction *GoogleCloudDialogflowCxV3ResponseMessageEndInteraction `pulumi:"endInteraction"`
	// Hands off conversation to a human agent.
	LiveAgentHandoff *GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff `pulumi:"liveAgentHandoff"`
	// Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
	MixedAudio *GoogleCloudDialogflowCxV3ResponseMessageMixedAudio `pulumi:"mixedAudio"`
	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	OutputAudioText *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText `pulumi:"outputAudioText"`
	// Returns a response containing a custom, platform-specific payload.
	Payload map[string]string `pulumi:"payload"`
	// Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
	PlayAudio *GoogleCloudDialogflowCxV3ResponseMessagePlayAudio `pulumi:"playAudio"`
	// Returns a text response.
	Text *GoogleCloudDialogflowCxV3ResponseMessageText `pulumi:"text"`
}

// GoogleCloudDialogflowCxV3ResponseMessageInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageArgs and GoogleCloudDialogflowCxV3ResponseMessageOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageOutput() GoogleCloudDialogflowCxV3ResponseMessageOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutput
}

// Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.
type GoogleCloudDialogflowCxV3ResponseMessageArgs struct {
	// Indicates that the conversation succeeded.
	ConversationSuccess GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrInput `pulumi:"conversationSuccess"`
	// Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.
	EndInteraction GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrInput `pulumi:"endInteraction"`
	// Hands off conversation to a human agent.
	LiveAgentHandoff GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrInput `pulumi:"liveAgentHandoff"`
	// Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
	MixedAudio GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrInput `pulumi:"mixedAudio"`
	// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
	OutputAudioText GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrInput `pulumi:"outputAudioText"`
	// Returns a response containing a custom, platform-specific payload.
	Payload pulumi.StringMapInput `pulumi:"payload"`
	// Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
	PlayAudio GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrInput `pulumi:"playAudio"`
	// Returns a text response.
	Text GoogleCloudDialogflowCxV3ResponseMessageTextPtrInput `pulumi:"text"`
}

func (GoogleCloudDialogflowCxV3ResponseMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessage)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageArgs) ToGoogleCloudDialogflowCxV3ResponseMessageOutput() GoogleCloudDialogflowCxV3ResponseMessageOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageArgs) ToGoogleCloudDialogflowCxV3ResponseMessageOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessageArgs) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageArgs) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageOutput).ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessagePtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageArgs, GoogleCloudDialogflowCxV3ResponseMessagePtr and GoogleCloudDialogflowCxV3ResponseMessagePtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessagePtrInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3ResponseMessagePtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessagePtrOutput
}

type googleCloudDialogflowCxV3ResponseMessagePtrType GoogleCloudDialogflowCxV3ResponseMessageArgs

func GoogleCloudDialogflowCxV3ResponseMessagePtr(v *GoogleCloudDialogflowCxV3ResponseMessageArgs) GoogleCloudDialogflowCxV3ResponseMessagePtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessagePtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessage)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessagePtrType) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessagePtrType) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessagePtrOutput)
}

// GoogleCloudDialogflowCxV3ResponseMessageArrayInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageArray and GoogleCloudDialogflowCxV3ResponseMessageArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageArrayInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageArray{ GoogleCloudDialogflowCxV3ResponseMessageArgs{...} }
type GoogleCloudDialogflowCxV3ResponseMessageArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageArrayOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageArrayOutput
}

type GoogleCloudDialogflowCxV3ResponseMessageArray []GoogleCloudDialogflowCxV3ResponseMessageInput

func (GoogleCloudDialogflowCxV3ResponseMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ResponseMessage)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageArray) ToGoogleCloudDialogflowCxV3ResponseMessageArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageArray) ToGoogleCloudDialogflowCxV3ResponseMessageArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageArrayOutput)
}

// Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.
type GoogleCloudDialogflowCxV3ResponseMessageOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessage)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutput() GoogleCloudDialogflowCxV3ResponseMessageOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessage {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessagePtrOutput)
}

// Indicates that the conversation succeeded.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) ConversationSuccess() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess {
		return v.ConversationSuccess
	}).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput)
}

// Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) EndInteraction() GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageEndInteraction {
		return v.EndInteraction
	}).(GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput)
}

// Hands off conversation to a human agent.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) LiveAgentHandoff() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff {
		return v.LiveAgentHandoff
	}).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput)
}

// Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) MixedAudio() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageMixedAudio {
		return v.MixedAudio
	}).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput)
}

// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) OutputAudioText() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText {
		return v.OutputAudioText
	}).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput)
}

// Returns a response containing a custom, platform-specific payload.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) Payload() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) map[string]string { return v.Payload }).(pulumi.StringMapOutput)
}

// Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) PlayAudio() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessagePlayAudio {
		return v.PlayAudio
	}).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput)
}

// Returns a text response.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutput) Text() GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageText {
		return v.Text
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessagePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessage)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessageOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) GoogleCloudDialogflowCxV3ResponseMessage { return *v }).(GoogleCloudDialogflowCxV3ResponseMessageOutput)
}

// Indicates that the conversation succeeded.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) ConversationSuccess() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess {
		if v == nil {
			return nil
		}
		return v.ConversationSuccess
	}).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput)
}

// Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) EndInteraction() GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageEndInteraction {
		if v == nil {
			return nil
		}
		return v.EndInteraction
	}).(GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput)
}

// Hands off conversation to a human agent.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) LiveAgentHandoff() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff {
		if v == nil {
			return nil
		}
		return v.LiveAgentHandoff
	}).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput)
}

// Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) MixedAudio() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageMixedAudio {
		if v == nil {
			return nil
		}
		return v.MixedAudio
	}).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput)
}

// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) OutputAudioText() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText {
		if v == nil {
			return nil
		}
		return v.OutputAudioText
	}).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput)
}

// Returns a response containing a custom, platform-specific payload.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) Payload() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) map[string]string {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(pulumi.StringMapOutput)
}

// Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) PlayAudio() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessagePlayAudio {
		if v == nil {
			return nil
		}
		return v.PlayAudio
	}).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput)
}

// Returns a text response.
func (o GoogleCloudDialogflowCxV3ResponseMessagePtrOutput) Text() GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessage) *GoogleCloudDialogflowCxV3ResponseMessageText {
		if v == nil {
			return nil
		}
		return v.Text
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ResponseMessage)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ResponseMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ResponseMessage {
		return vs[0].([]GoogleCloudDialogflowCxV3ResponseMessage)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ResponseMessageOutput)
}

// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.
type GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess struct {
	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata map[string]string `pulumi:"metadata"`
}

// GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs and GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput
}

// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.
type GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs struct {
	// Custom metadata. Dialogflow doesn't impose any structure on this.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
}

func (GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput).ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs, GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtr and GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput
}

type googleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrType GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs

func GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtr(v *GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessArgs) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput)
}

// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.
type GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess) *GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput)
}

// Custom metadata. Dialogflow doesn't impose any structure on this.
func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess) map[string]string {
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess) GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess {
		return *v
	}).(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput)
}

// Custom metadata. Dialogflow doesn't impose any structure on this.
func (o GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
type GoogleCloudDialogflowCxV3ResponseMessageEndInteraction struct {
}

// GoogleCloudDialogflowCxV3ResponseMessageEndInteractionInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageEndInteractionArgs and GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageEndInteractionInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageEndInteractionArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageEndInteractionInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput() GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput
}

// Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
type GoogleCloudDialogflowCxV3ResponseMessageEndInteractionArgs struct {
}

func (GoogleCloudDialogflowCxV3ResponseMessageEndInteractionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageEndInteraction)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageEndInteractionArgs) ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput() GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageEndInteractionArgs) ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessageEndInteractionArgs) ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageEndInteractionArgs) ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput).ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageEndInteractionArgs, GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtr and GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageEndInteractionArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput
}

type googleCloudDialogflowCxV3ResponseMessageEndInteractionPtrType GoogleCloudDialogflowCxV3ResponseMessageEndInteractionArgs

func GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtr(v *GoogleCloudDialogflowCxV3ResponseMessageEndInteractionArgs) GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessageEndInteractionPtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessageEndInteractionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageEndInteraction)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessageEndInteractionPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessageEndInteractionPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput)
}

// Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
type GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageEndInteraction)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput) ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput() GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput) ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput) ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput) ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageEndInteraction) *GoogleCloudDialogflowCxV3ResponseMessageEndInteraction {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageEndInteraction)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageEndInteraction) GoogleCloudDialogflowCxV3ResponseMessageEndInteraction {
		return *v
	}).(GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput)
}

// Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.
type GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff struct {
	// Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
	Metadata map[string]string `pulumi:"metadata"`
}

// GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs and GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput
}

// Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.
type GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs struct {
	// Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
}

func (GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput).ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs, GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtr and GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput
}

type googleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrType GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs

func GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtr(v *GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffArgs) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput)
}

// Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.
type GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff) *GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput)
}

// Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff) GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff {
		return *v
	}).(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput)
}

// Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
func (o GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
type GoogleCloudDialogflowCxV3ResponseMessageMixedAudio struct {
	// Segments this audio response is composed of.
	Segments []GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment `pulumi:"segments"`
}

// GoogleCloudDialogflowCxV3ResponseMessageMixedAudioInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageMixedAudioArgs and GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageMixedAudioInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageMixedAudioArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput
}

// Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioArgs struct {
	// Segments this audio response is composed of.
	Segments GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayInput `pulumi:"segments"`
}

func (GoogleCloudDialogflowCxV3ResponseMessageMixedAudioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageMixedAudio)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageMixedAudioArgs) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageMixedAudioArgs) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessageMixedAudioArgs) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageMixedAudioArgs) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput).ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageMixedAudioArgs, GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtr and GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageMixedAudioArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput
}

type googleCloudDialogflowCxV3ResponseMessageMixedAudioPtrType GoogleCloudDialogflowCxV3ResponseMessageMixedAudioArgs

func GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtr(v *GoogleCloudDialogflowCxV3ResponseMessageMixedAudioArgs) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessageMixedAudioPtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessageMixedAudioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageMixedAudio)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessageMixedAudioPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessageMixedAudioPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput)
}

// Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageMixedAudio)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageMixedAudio) *GoogleCloudDialogflowCxV3ResponseMessageMixedAudio {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput)
}

// Segments this audio response is composed of.
func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput) Segments() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageMixedAudio) []GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment {
		return v.Segments
	}).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageMixedAudio)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageMixedAudio) GoogleCloudDialogflowCxV3ResponseMessageMixedAudio {
		return *v
	}).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput)
}

// Segments this audio response is composed of.
func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput) Segments() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageMixedAudio) []GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment {
		if v == nil {
			return nil
		}
		return v.Segments
	}).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput)
}

// Represents one segment of audio.
type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment struct {
	// Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request.
	AllowPlaybackInterruption *bool `pulumi:"allowPlaybackInterruption"`
	// Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.
	Audio *string `pulumi:"audio"`
	// Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.
	Uri *string `pulumi:"uri"`
}

// GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArgs and GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput
}

// Represents one segment of audio.
type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArgs struct {
	// Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request.
	AllowPlaybackInterruption pulumi.BoolPtrInput `pulumi:"allowPlaybackInterruption"`
	// Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.
	Audio pulumi.StringPtrInput `pulumi:"audio"`
	// Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArgs) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArgs) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput)
}

// GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArray and GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArray{ GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArgs{...} }
type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput
}

type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArray []GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentInput

func (GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArray) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArray) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput)
}

// Represents one segment of audio.
type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput {
	return o
}

// Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request.
func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput) AllowPlaybackInterruption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment) *bool {
		return v.AllowPlaybackInterruption
	}).(pulumi.BoolPtrOutput)
}

// Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.
func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput) Audio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment) *string { return v.Audio }).(pulumi.StringPtrOutput)
}

// Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.
func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment {
		return vs[0].([]GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput)
}

// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
type GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText struct {
	// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `pulumi:"allowPlaybackInterruption"`
	// The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
	Ssml *string `pulumi:"ssml"`
	// The raw text to be synthesized.
	Text *string `pulumi:"text"`
}

// GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs and GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput
}

// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
type GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs struct {
	// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption pulumi.BoolPtrInput `pulumi:"allowPlaybackInterruption"`
	// The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
	Ssml pulumi.StringPtrInput `pulumi:"ssml"`
	// The raw text to be synthesized.
	Text pulumi.StringPtrInput `pulumi:"text"`
}

func (GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput).ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs, GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtr and GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput
}

type googleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrType GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs

func GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtr(v *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextArgs) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput)
}

// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
type GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText) *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput)
}

// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) AllowPlaybackInterruption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText) *bool {
		return v.AllowPlaybackInterruption
	}).(pulumi.BoolPtrOutput)
}

// The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) Ssml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText) *string { return v.Ssml }).(pulumi.StringPtrOutput)
}

// The raw text to be synthesized.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText) *string { return v.Text }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText) GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText {
		return *v
	}).(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput)
}

// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput) AllowPlaybackInterruption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText) *bool {
		if v == nil {
			return nil
		}
		return v.AllowPlaybackInterruption
	}).(pulumi.BoolPtrOutput)
}

// The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput) Ssml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText) *string {
		if v == nil {
			return nil
		}
		return v.Ssml
	}).(pulumi.StringPtrOutput)
}

// The raw text to be synthesized.
func (o GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText) *string {
		if v == nil {
			return nil
		}
		return v.Text
	}).(pulumi.StringPtrOutput)
}

// Specifies an audio clip to be played by the client as part of the response.
type GoogleCloudDialogflowCxV3ResponseMessagePlayAudio struct {
	// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `pulumi:"allowPlaybackInterruption"`
	// Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioUri *string `pulumi:"audioUri"`
}

// GoogleCloudDialogflowCxV3ResponseMessagePlayAudioInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs and GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessagePlayAudioInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessagePlayAudioInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput
	ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput
}

// Specifies an audio clip to be played by the client as part of the response.
type GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs struct {
	// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption pulumi.BoolPtrInput `pulumi:"allowPlaybackInterruption"`
	// Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
	AudioUri pulumi.StringPtrInput `pulumi:"audioUri"`
}

func (GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessagePlayAudio)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput).ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs, GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtr and GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput
}

type googleCloudDialogflowCxV3ResponseMessagePlayAudioPtrType GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs

func GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtr(v *GoogleCloudDialogflowCxV3ResponseMessagePlayAudioArgs) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessagePlayAudioPtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessagePlayAudioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessagePlayAudio)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessagePlayAudioPtrType) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessagePlayAudioPtrType) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput)
}

// Specifies an audio clip to be played by the client as part of the response.
type GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessagePlayAudio)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessagePlayAudio) *GoogleCloudDialogflowCxV3ResponseMessagePlayAudio {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput)
}

// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput) AllowPlaybackInterruption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessagePlayAudio) *bool { return v.AllowPlaybackInterruption }).(pulumi.BoolPtrOutput)
}

// Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput) AudioUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessagePlayAudio) *string { return v.AudioUri }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessagePlayAudio)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessagePlayAudio) GoogleCloudDialogflowCxV3ResponseMessagePlayAudio {
		return *v
	}).(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput)
}

// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput) AllowPlaybackInterruption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessagePlayAudio) *bool {
		if v == nil {
			return nil
		}
		return v.AllowPlaybackInterruption
	}).(pulumi.BoolPtrOutput)
}

// Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
func (o GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput) AudioUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessagePlayAudio) *string {
		if v == nil {
			return nil
		}
		return v.AudioUri
	}).(pulumi.StringPtrOutput)
}

// The text response message.
type GoogleCloudDialogflowCxV3ResponseMessageText struct {
	// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption *bool `pulumi:"allowPlaybackInterruption"`
	// Required. A collection of text responses.
	Text []string `pulumi:"text"`
}

// GoogleCloudDialogflowCxV3ResponseMessageTextInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageTextArgs and GoogleCloudDialogflowCxV3ResponseMessageTextOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageTextInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageTextArgs{...}
type GoogleCloudDialogflowCxV3ResponseMessageTextInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageTextOutput() GoogleCloudDialogflowCxV3ResponseMessageTextOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageTextOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextOutput
}

// The text response message.
type GoogleCloudDialogflowCxV3ResponseMessageTextArgs struct {
	// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
	AllowPlaybackInterruption pulumi.BoolPtrInput `pulumi:"allowPlaybackInterruption"`
	// Required. A collection of text responses.
	Text pulumi.StringArrayInput `pulumi:"text"`
}

func (GoogleCloudDialogflowCxV3ResponseMessageTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageText)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageTextOutput() GoogleCloudDialogflowCxV3ResponseMessageTextOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageTextOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageTextOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageTextOutput)
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTextArgs) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageTextOutput).ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3ResponseMessageTextPtrInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageTextArgs, GoogleCloudDialogflowCxV3ResponseMessageTextPtr and GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageTextPtrInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageTextArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3ResponseMessageTextPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput
}

type googleCloudDialogflowCxV3ResponseMessageTextPtrType GoogleCloudDialogflowCxV3ResponseMessageTextArgs

func GoogleCloudDialogflowCxV3ResponseMessageTextPtr(v *GoogleCloudDialogflowCxV3ResponseMessageTextArgs) GoogleCloudDialogflowCxV3ResponseMessageTextPtrInput {
	return (*googleCloudDialogflowCxV3ResponseMessageTextPtrType)(v)
}

func (*googleCloudDialogflowCxV3ResponseMessageTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageText)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3ResponseMessageTextPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3ResponseMessageTextPtrType) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput)
}

// GoogleCloudDialogflowCxV3ResponseMessageTextArrayInput is an input type that accepts GoogleCloudDialogflowCxV3ResponseMessageTextArray and GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3ResponseMessageTextArrayInput` via:
//
//          GoogleCloudDialogflowCxV3ResponseMessageTextArray{ GoogleCloudDialogflowCxV3ResponseMessageTextArgs{...} }
type GoogleCloudDialogflowCxV3ResponseMessageTextArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput
	ToGoogleCloudDialogflowCxV3ResponseMessageTextArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput
}

type GoogleCloudDialogflowCxV3ResponseMessageTextArray []GoogleCloudDialogflowCxV3ResponseMessageTextInput

func (GoogleCloudDialogflowCxV3ResponseMessageTextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ResponseMessageText)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTextArray) ToGoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3ResponseMessageTextArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3ResponseMessageTextArray) ToGoogleCloudDialogflowCxV3ResponseMessageTextArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput)
}

// The text response message.
type GoogleCloudDialogflowCxV3ResponseMessageTextOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3ResponseMessageText)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextOutput() GoogleCloudDialogflowCxV3ResponseMessageTextOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageText) *GoogleCloudDialogflowCxV3ResponseMessageText {
		return &v
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput)
}

// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
func (o GoogleCloudDialogflowCxV3ResponseMessageTextOutput) AllowPlaybackInterruption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageText) *bool { return v.AllowPlaybackInterruption }).(pulumi.BoolPtrOutput)
}

// Required. A collection of text responses.
func (o GoogleCloudDialogflowCxV3ResponseMessageTextOutput) Text() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3ResponseMessageText) []string { return v.Text }).(pulumi.StringArrayOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3ResponseMessageText)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput() GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput) Elem() GoogleCloudDialogflowCxV3ResponseMessageTextOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageText) GoogleCloudDialogflowCxV3ResponseMessageText {
		return *v
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextOutput)
}

// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
func (o GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput) AllowPlaybackInterruption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageText) *bool {
		if v == nil {
			return nil
		}
		return v.AllowPlaybackInterruption
	}).(pulumi.BoolPtrOutput)
}

// Required. A collection of text responses.
func (o GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput) Text() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3ResponseMessageText) []string {
		if v == nil {
			return nil
		}
		return v.Text
	}).(pulumi.StringArrayOutput)
}

type GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3ResponseMessageText)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput() GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput) ToGoogleCloudDialogflowCxV3ResponseMessageTextArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3ResponseMessageTextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3ResponseMessageText {
		return vs[0].([]GoogleCloudDialogflowCxV3ResponseMessageText)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3ResponseMessageTextOutput)
}

// Settings related to speech recognition.
type GoogleCloudDialogflowCxV3SpeechToTextSettings struct {
	// Whether to use speech adaptation for speech recognition.
	EnableSpeechAdaptation *bool `pulumi:"enableSpeechAdaptation"`
}

// GoogleCloudDialogflowCxV3SpeechToTextSettingsInput is an input type that accepts GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs and GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3SpeechToTextSettingsInput` via:
//
//          GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs{...}
type GoogleCloudDialogflowCxV3SpeechToTextSettingsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3SpeechToTextSettingsOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput
	ToGoogleCloudDialogflowCxV3SpeechToTextSettingsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput
}

// Settings related to speech recognition.
type GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs struct {
	// Whether to use speech adaptation for speech recognition.
	EnableSpeechAdaptation pulumi.BoolPtrInput `pulumi:"enableSpeechAdaptation"`
}

func (GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SpeechToTextSettings)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput {
	return i.ToGoogleCloudDialogflowCxV3SpeechToTextSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput)
}

func (i GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput).ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs, GoogleCloudDialogflowCxV3SpeechToTextSettingsPtr and GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrInput` via:
//
//          GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput
	ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput
}

type googleCloudDialogflowCxV3SpeechToTextSettingsPtrType GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs

func GoogleCloudDialogflowCxV3SpeechToTextSettingsPtr(v *GoogleCloudDialogflowCxV3SpeechToTextSettingsArgs) GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrInput {
	return (*googleCloudDialogflowCxV3SpeechToTextSettingsPtrType)(v)
}

func (*googleCloudDialogflowCxV3SpeechToTextSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3SpeechToTextSettings)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3SpeechToTextSettingsPtrType) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3SpeechToTextSettingsPtrType) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput)
}

// Settings related to speech recognition.
type GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3SpeechToTextSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SpeechToTextSettings) *GoogleCloudDialogflowCxV3SpeechToTextSettings {
		return &v
	}).(GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput)
}

// Whether to use speech adaptation for speech recognition.
func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput) EnableSpeechAdaptation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3SpeechToTextSettings) *bool { return v.EnableSpeechAdaptation }).(pulumi.BoolPtrOutput)
}

type GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3SpeechToTextSettings)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput() GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput) ToGoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput) Elem() GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SpeechToTextSettings) GoogleCloudDialogflowCxV3SpeechToTextSettings {
		return *v
	}).(GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput)
}

// Whether to use speech adaptation for speech recognition.
func (o GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput) EnableSpeechAdaptation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3SpeechToTextSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSpeechAdaptation
	}).(pulumi.BoolPtrOutput)
}

// Represents a result from running a test case in an agent environment.
type GoogleCloudDialogflowCxV3TestCaseResult struct {
	// The conversation turns uttered during the test case replay in chronological order.
	ConversationTurns []GoogleCloudDialogflowCxV3ConversationTurn `pulumi:"conversationTurns"`
	// Environment where the test was run. If not set, it indicates the draft environment.
	Environment *string `pulumi:"environment"`
	// The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.
	Name *string `pulumi:"name"`
	// Whether the test case passed in the agent environment.
	TestResult *string `pulumi:"testResult"`
	// The time that the test was run.
	TestTime *string `pulumi:"testTime"`
}

// GoogleCloudDialogflowCxV3TestCaseResultInput is an input type that accepts GoogleCloudDialogflowCxV3TestCaseResultArgs and GoogleCloudDialogflowCxV3TestCaseResultOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TestCaseResultInput` via:
//
//          GoogleCloudDialogflowCxV3TestCaseResultArgs{...}
type GoogleCloudDialogflowCxV3TestCaseResultInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TestCaseResultOutput() GoogleCloudDialogflowCxV3TestCaseResultOutput
	ToGoogleCloudDialogflowCxV3TestCaseResultOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TestCaseResultOutput
}

// Represents a result from running a test case in an agent environment.
type GoogleCloudDialogflowCxV3TestCaseResultArgs struct {
	// The conversation turns uttered during the test case replay in chronological order.
	ConversationTurns GoogleCloudDialogflowCxV3ConversationTurnArrayInput `pulumi:"conversationTurns"`
	// Environment where the test was run. If not set, it indicates the draft environment.
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether the test case passed in the agent environment.
	TestResult pulumi.StringPtrInput `pulumi:"testResult"`
	// The time that the test was run.
	TestTime pulumi.StringPtrInput `pulumi:"testTime"`
}

func (GoogleCloudDialogflowCxV3TestCaseResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TestCaseResult)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3TestCaseResultArgs) ToGoogleCloudDialogflowCxV3TestCaseResultOutput() GoogleCloudDialogflowCxV3TestCaseResultOutput {
	return i.ToGoogleCloudDialogflowCxV3TestCaseResultOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TestCaseResultArgs) ToGoogleCloudDialogflowCxV3TestCaseResultOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestCaseResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TestCaseResultOutput)
}

func (i GoogleCloudDialogflowCxV3TestCaseResultArgs) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutput() GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TestCaseResultArgs) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TestCaseResultOutput).ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3TestCaseResultPtrInput is an input type that accepts GoogleCloudDialogflowCxV3TestCaseResultArgs, GoogleCloudDialogflowCxV3TestCaseResultPtr and GoogleCloudDialogflowCxV3TestCaseResultPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TestCaseResultPtrInput` via:
//
//          GoogleCloudDialogflowCxV3TestCaseResultArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3TestCaseResultPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutput() GoogleCloudDialogflowCxV3TestCaseResultPtrOutput
	ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TestCaseResultPtrOutput
}

type googleCloudDialogflowCxV3TestCaseResultPtrType GoogleCloudDialogflowCxV3TestCaseResultArgs

func GoogleCloudDialogflowCxV3TestCaseResultPtr(v *GoogleCloudDialogflowCxV3TestCaseResultArgs) GoogleCloudDialogflowCxV3TestCaseResultPtrInput {
	return (*googleCloudDialogflowCxV3TestCaseResultPtrType)(v)
}

func (*googleCloudDialogflowCxV3TestCaseResultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3TestCaseResult)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3TestCaseResultPtrType) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutput() GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3TestCaseResultPtrType) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TestCaseResultPtrOutput)
}

// Represents a result from running a test case in an agent environment.
type GoogleCloudDialogflowCxV3TestCaseResultOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TestCaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TestCaseResult)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) ToGoogleCloudDialogflowCxV3TestCaseResultOutput() GoogleCloudDialogflowCxV3TestCaseResultOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) ToGoogleCloudDialogflowCxV3TestCaseResultOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestCaseResultOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutput() GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResult) *GoogleCloudDialogflowCxV3TestCaseResult {
		return &v
	}).(GoogleCloudDialogflowCxV3TestCaseResultPtrOutput)
}

// The conversation turns uttered during the test case replay in chronological order.
func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) ConversationTurns() GoogleCloudDialogflowCxV3ConversationTurnArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResult) []GoogleCloudDialogflowCxV3ConversationTurn {
		return v.ConversationTurns
	}).(GoogleCloudDialogflowCxV3ConversationTurnArrayOutput)
}

// Environment where the test was run. If not set, it indicates the draft environment.
func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResult) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.
func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the test case passed in the agent environment.
func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) TestResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResult) *string { return v.TestResult }).(pulumi.StringPtrOutput)
}

// The time that the test was run.
func (o GoogleCloudDialogflowCxV3TestCaseResultOutput) TestTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestCaseResult) *string { return v.TestTime }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3TestCaseResultPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3TestCaseResult)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutput() GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) ToGoogleCloudDialogflowCxV3TestCaseResultPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestCaseResultPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) Elem() GoogleCloudDialogflowCxV3TestCaseResultOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestCaseResult) GoogleCloudDialogflowCxV3TestCaseResult { return *v }).(GoogleCloudDialogflowCxV3TestCaseResultOutput)
}

// The conversation turns uttered during the test case replay in chronological order.
func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) ConversationTurns() GoogleCloudDialogflowCxV3ConversationTurnArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestCaseResult) []GoogleCloudDialogflowCxV3ConversationTurn {
		if v == nil {
			return nil
		}
		return v.ConversationTurns
	}).(GoogleCloudDialogflowCxV3ConversationTurnArrayOutput)
}

// Environment where the test was run. If not set, it indicates the draft environment.
func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestCaseResult) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.
func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestCaseResult) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Whether the test case passed in the agent environment.
func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) TestResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestCaseResult) *string {
		if v == nil {
			return nil
		}
		return v.TestResult
	}).(pulumi.StringPtrOutput)
}

// The time that the test was run.
func (o GoogleCloudDialogflowCxV3TestCaseResultPtrOutput) TestTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestCaseResult) *string {
		if v == nil {
			return nil
		}
		return v.TestTime
	}).(pulumi.StringPtrOutput)
}

// Represents configurations for a test case.
type GoogleCloudDialogflowCxV3TestConfig struct {
	// Flow name. If not set, default start flow is assumed. Format: `projects//locations//agents//flows/`.
	Flow *string `pulumi:"flow"`
	// Session parameters to be compared when calculating differences.
	TrackingParameters []string `pulumi:"trackingParameters"`
}

// GoogleCloudDialogflowCxV3TestConfigInput is an input type that accepts GoogleCloudDialogflowCxV3TestConfigArgs and GoogleCloudDialogflowCxV3TestConfigOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TestConfigInput` via:
//
//          GoogleCloudDialogflowCxV3TestConfigArgs{...}
type GoogleCloudDialogflowCxV3TestConfigInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TestConfigOutput() GoogleCloudDialogflowCxV3TestConfigOutput
	ToGoogleCloudDialogflowCxV3TestConfigOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TestConfigOutput
}

// Represents configurations for a test case.
type GoogleCloudDialogflowCxV3TestConfigArgs struct {
	// Flow name. If not set, default start flow is assumed. Format: `projects//locations//agents//flows/`.
	Flow pulumi.StringPtrInput `pulumi:"flow"`
	// Session parameters to be compared when calculating differences.
	TrackingParameters pulumi.StringArrayInput `pulumi:"trackingParameters"`
}

func (GoogleCloudDialogflowCxV3TestConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TestConfig)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3TestConfigArgs) ToGoogleCloudDialogflowCxV3TestConfigOutput() GoogleCloudDialogflowCxV3TestConfigOutput {
	return i.ToGoogleCloudDialogflowCxV3TestConfigOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TestConfigArgs) ToGoogleCloudDialogflowCxV3TestConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TestConfigOutput)
}

func (i GoogleCloudDialogflowCxV3TestConfigArgs) ToGoogleCloudDialogflowCxV3TestConfigPtrOutput() GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TestConfigArgs) ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TestConfigOutput).ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3TestConfigPtrInput is an input type that accepts GoogleCloudDialogflowCxV3TestConfigArgs, GoogleCloudDialogflowCxV3TestConfigPtr and GoogleCloudDialogflowCxV3TestConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TestConfigPtrInput` via:
//
//          GoogleCloudDialogflowCxV3TestConfigArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3TestConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TestConfigPtrOutput() GoogleCloudDialogflowCxV3TestConfigPtrOutput
	ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TestConfigPtrOutput
}

type googleCloudDialogflowCxV3TestConfigPtrType GoogleCloudDialogflowCxV3TestConfigArgs

func GoogleCloudDialogflowCxV3TestConfigPtr(v *GoogleCloudDialogflowCxV3TestConfigArgs) GoogleCloudDialogflowCxV3TestConfigPtrInput {
	return (*googleCloudDialogflowCxV3TestConfigPtrType)(v)
}

func (*googleCloudDialogflowCxV3TestConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3TestConfig)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3TestConfigPtrType) ToGoogleCloudDialogflowCxV3TestConfigPtrOutput() GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3TestConfigPtrType) ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TestConfigPtrOutput)
}

// Represents configurations for a test case.
type GoogleCloudDialogflowCxV3TestConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TestConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TestConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TestConfigOutput) ToGoogleCloudDialogflowCxV3TestConfigOutput() GoogleCloudDialogflowCxV3TestConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestConfigOutput) ToGoogleCloudDialogflowCxV3TestConfigOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestConfigOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestConfigOutput) ToGoogleCloudDialogflowCxV3TestConfigPtrOutput() GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3TestConfigOutput) ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestConfig) *GoogleCloudDialogflowCxV3TestConfig {
		return &v
	}).(GoogleCloudDialogflowCxV3TestConfigPtrOutput)
}

// Flow name. If not set, default start flow is assumed. Format: `projects//locations//agents//flows/`.
func (o GoogleCloudDialogflowCxV3TestConfigOutput) Flow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestConfig) *string { return v.Flow }).(pulumi.StringPtrOutput)
}

// Session parameters to be compared when calculating differences.
func (o GoogleCloudDialogflowCxV3TestConfigOutput) TrackingParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestConfig) []string { return v.TrackingParameters }).(pulumi.StringArrayOutput)
}

type GoogleCloudDialogflowCxV3TestConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TestConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3TestConfig)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TestConfigPtrOutput) ToGoogleCloudDialogflowCxV3TestConfigPtrOutput() GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestConfigPtrOutput) ToGoogleCloudDialogflowCxV3TestConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestConfigPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestConfigPtrOutput) Elem() GoogleCloudDialogflowCxV3TestConfigOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestConfig) GoogleCloudDialogflowCxV3TestConfig { return *v }).(GoogleCloudDialogflowCxV3TestConfigOutput)
}

// Flow name. If not set, default start flow is assumed. Format: `projects//locations//agents//flows/`.
func (o GoogleCloudDialogflowCxV3TestConfigPtrOutput) Flow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestConfig) *string {
		if v == nil {
			return nil
		}
		return v.Flow
	}).(pulumi.StringPtrOutput)
}

// Session parameters to be compared when calculating differences.
func (o GoogleCloudDialogflowCxV3TestConfigPtrOutput) TrackingParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TestConfig) []string {
		if v == nil {
			return nil
		}
		return v.TrackingParameters
	}).(pulumi.StringArrayOutput)
}

// The description of differences between original and replayed agent output.
type GoogleCloudDialogflowCxV3TestRunDifference struct {
	// A description of the diff, showing the actual output vs expected output.
	Description *string `pulumi:"description"`
	// The type of diff.
	Type *string `pulumi:"type"`
}

// GoogleCloudDialogflowCxV3TestRunDifferenceInput is an input type that accepts GoogleCloudDialogflowCxV3TestRunDifferenceArgs and GoogleCloudDialogflowCxV3TestRunDifferenceOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TestRunDifferenceInput` via:
//
//          GoogleCloudDialogflowCxV3TestRunDifferenceArgs{...}
type GoogleCloudDialogflowCxV3TestRunDifferenceInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TestRunDifferenceOutput() GoogleCloudDialogflowCxV3TestRunDifferenceOutput
	ToGoogleCloudDialogflowCxV3TestRunDifferenceOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TestRunDifferenceOutput
}

// The description of differences between original and replayed agent output.
type GoogleCloudDialogflowCxV3TestRunDifferenceArgs struct {
	// A description of the diff, showing the actual output vs expected output.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The type of diff.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GoogleCloudDialogflowCxV3TestRunDifferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TestRunDifference)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3TestRunDifferenceArgs) ToGoogleCloudDialogflowCxV3TestRunDifferenceOutput() GoogleCloudDialogflowCxV3TestRunDifferenceOutput {
	return i.ToGoogleCloudDialogflowCxV3TestRunDifferenceOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TestRunDifferenceArgs) ToGoogleCloudDialogflowCxV3TestRunDifferenceOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestRunDifferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TestRunDifferenceOutput)
}

// GoogleCloudDialogflowCxV3TestRunDifferenceArrayInput is an input type that accepts GoogleCloudDialogflowCxV3TestRunDifferenceArray and GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TestRunDifferenceArrayInput` via:
//
//          GoogleCloudDialogflowCxV3TestRunDifferenceArray{ GoogleCloudDialogflowCxV3TestRunDifferenceArgs{...} }
type GoogleCloudDialogflowCxV3TestRunDifferenceArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput() GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput
	ToGoogleCloudDialogflowCxV3TestRunDifferenceArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput
}

type GoogleCloudDialogflowCxV3TestRunDifferenceArray []GoogleCloudDialogflowCxV3TestRunDifferenceInput

func (GoogleCloudDialogflowCxV3TestRunDifferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3TestRunDifference)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3TestRunDifferenceArray) ToGoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput() GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3TestRunDifferenceArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TestRunDifferenceArray) ToGoogleCloudDialogflowCxV3TestRunDifferenceArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput)
}

// The description of differences between original and replayed agent output.
type GoogleCloudDialogflowCxV3TestRunDifferenceOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TestRunDifferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TestRunDifference)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TestRunDifferenceOutput) ToGoogleCloudDialogflowCxV3TestRunDifferenceOutput() GoogleCloudDialogflowCxV3TestRunDifferenceOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestRunDifferenceOutput) ToGoogleCloudDialogflowCxV3TestRunDifferenceOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestRunDifferenceOutput {
	return o
}

// A description of the diff, showing the actual output vs expected output.
func (o GoogleCloudDialogflowCxV3TestRunDifferenceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestRunDifference) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The type of diff.
func (o GoogleCloudDialogflowCxV3TestRunDifferenceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TestRunDifference) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3TestRunDifference)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput) ToGoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput() GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput) ToGoogleCloudDialogflowCxV3TestRunDifferenceArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3TestRunDifferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3TestRunDifference {
		return vs[0].([]GoogleCloudDialogflowCxV3TestRunDifference)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3TestRunDifferenceOutput)
}

// Represents the natural language text to be processed.
type GoogleCloudDialogflowCxV3TextInput struct {
	// Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters.
	Text *string `pulumi:"text"`
}

// GoogleCloudDialogflowCxV3TextInputInput is an input type that accepts GoogleCloudDialogflowCxV3TextInputArgs and GoogleCloudDialogflowCxV3TextInputOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TextInputInput` via:
//
//          GoogleCloudDialogflowCxV3TextInputArgs{...}
type GoogleCloudDialogflowCxV3TextInputInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TextInputOutput() GoogleCloudDialogflowCxV3TextInputOutput
	ToGoogleCloudDialogflowCxV3TextInputOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TextInputOutput
}

// Represents the natural language text to be processed.
type GoogleCloudDialogflowCxV3TextInputArgs struct {
	// Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters.
	Text pulumi.StringPtrInput `pulumi:"text"`
}

func (GoogleCloudDialogflowCxV3TextInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TextInput)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3TextInputArgs) ToGoogleCloudDialogflowCxV3TextInputOutput() GoogleCloudDialogflowCxV3TextInputOutput {
	return i.ToGoogleCloudDialogflowCxV3TextInputOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TextInputArgs) ToGoogleCloudDialogflowCxV3TextInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TextInputOutput)
}

func (i GoogleCloudDialogflowCxV3TextInputArgs) ToGoogleCloudDialogflowCxV3TextInputPtrOutput() GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TextInputArgs) ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TextInputOutput).ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3TextInputPtrInput is an input type that accepts GoogleCloudDialogflowCxV3TextInputArgs, GoogleCloudDialogflowCxV3TextInputPtr and GoogleCloudDialogflowCxV3TextInputPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TextInputPtrInput` via:
//
//          GoogleCloudDialogflowCxV3TextInputArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3TextInputPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TextInputPtrOutput() GoogleCloudDialogflowCxV3TextInputPtrOutput
	ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TextInputPtrOutput
}

type googleCloudDialogflowCxV3TextInputPtrType GoogleCloudDialogflowCxV3TextInputArgs

func GoogleCloudDialogflowCxV3TextInputPtr(v *GoogleCloudDialogflowCxV3TextInputArgs) GoogleCloudDialogflowCxV3TextInputPtrInput {
	return (*googleCloudDialogflowCxV3TextInputPtrType)(v)
}

func (*googleCloudDialogflowCxV3TextInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3TextInput)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3TextInputPtrType) ToGoogleCloudDialogflowCxV3TextInputPtrOutput() GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3TextInputPtrType) ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TextInputPtrOutput)
}

// Represents the natural language text to be processed.
type GoogleCloudDialogflowCxV3TextInputOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TextInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TextInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TextInputOutput) ToGoogleCloudDialogflowCxV3TextInputOutput() GoogleCloudDialogflowCxV3TextInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TextInputOutput) ToGoogleCloudDialogflowCxV3TextInputOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextInputOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TextInputOutput) ToGoogleCloudDialogflowCxV3TextInputPtrOutput() GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3TextInputOutput) ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TextInput) *GoogleCloudDialogflowCxV3TextInput {
		return &v
	}).(GoogleCloudDialogflowCxV3TextInputPtrOutput)
}

// Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters.
func (o GoogleCloudDialogflowCxV3TextInputOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TextInput) *string { return v.Text }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3TextInputPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TextInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3TextInput)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TextInputPtrOutput) ToGoogleCloudDialogflowCxV3TextInputPtrOutput() GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TextInputPtrOutput) ToGoogleCloudDialogflowCxV3TextInputPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TextInputPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TextInputPtrOutput) Elem() GoogleCloudDialogflowCxV3TextInputOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TextInput) GoogleCloudDialogflowCxV3TextInput { return *v }).(GoogleCloudDialogflowCxV3TextInputOutput)
}

// Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters.
func (o GoogleCloudDialogflowCxV3TextInputPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3TextInput) *string {
		if v == nil {
			return nil
		}
		return v.Text
	}).(pulumi.StringPtrOutput)
}

// A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3TransitionRoute struct {
	// The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
	Condition *string `pulumi:"condition"`
	// The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
	Intent *string `pulumi:"intent"`
	// Output only. The unique identifier of this transition route.
	Name *string `pulumi:"name"`
	// The target flow to transition to. Format: `projects//locations//agents//flows/`.
	TargetFlow *string `pulumi:"targetFlow"`
	// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
	TargetPage *string `pulumi:"targetPage"`
	// The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.
	TriggerFulfillment *GoogleCloudDialogflowCxV3Fulfillment `pulumi:"triggerFulfillment"`
}

// GoogleCloudDialogflowCxV3TransitionRouteInput is an input type that accepts GoogleCloudDialogflowCxV3TransitionRouteArgs and GoogleCloudDialogflowCxV3TransitionRouteOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TransitionRouteInput` via:
//
//          GoogleCloudDialogflowCxV3TransitionRouteArgs{...}
type GoogleCloudDialogflowCxV3TransitionRouteInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TransitionRouteOutput() GoogleCloudDialogflowCxV3TransitionRouteOutput
	ToGoogleCloudDialogflowCxV3TransitionRouteOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TransitionRouteOutput
}

// A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3TransitionRouteArgs struct {
	// The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
	Intent pulumi.StringPtrInput `pulumi:"intent"`
	// Output only. The unique identifier of this transition route.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The target flow to transition to. Format: `projects//locations//agents//flows/`.
	TargetFlow pulumi.StringPtrInput `pulumi:"targetFlow"`
	// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
	TargetPage pulumi.StringPtrInput `pulumi:"targetPage"`
	// The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.
	TriggerFulfillment GoogleCloudDialogflowCxV3FulfillmentPtrInput `pulumi:"triggerFulfillment"`
}

func (GoogleCloudDialogflowCxV3TransitionRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TransitionRoute)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3TransitionRouteArgs) ToGoogleCloudDialogflowCxV3TransitionRouteOutput() GoogleCloudDialogflowCxV3TransitionRouteOutput {
	return i.ToGoogleCloudDialogflowCxV3TransitionRouteOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TransitionRouteArgs) ToGoogleCloudDialogflowCxV3TransitionRouteOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TransitionRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TransitionRouteOutput)
}

// GoogleCloudDialogflowCxV3TransitionRouteArrayInput is an input type that accepts GoogleCloudDialogflowCxV3TransitionRouteArray and GoogleCloudDialogflowCxV3TransitionRouteArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3TransitionRouteArrayInput` via:
//
//          GoogleCloudDialogflowCxV3TransitionRouteArray{ GoogleCloudDialogflowCxV3TransitionRouteArgs{...} }
type GoogleCloudDialogflowCxV3TransitionRouteArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3TransitionRouteArrayOutput() GoogleCloudDialogflowCxV3TransitionRouteArrayOutput
	ToGoogleCloudDialogflowCxV3TransitionRouteArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3TransitionRouteArrayOutput
}

type GoogleCloudDialogflowCxV3TransitionRouteArray []GoogleCloudDialogflowCxV3TransitionRouteInput

func (GoogleCloudDialogflowCxV3TransitionRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3TransitionRoute)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3TransitionRouteArray) ToGoogleCloudDialogflowCxV3TransitionRouteArrayOutput() GoogleCloudDialogflowCxV3TransitionRouteArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3TransitionRouteArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3TransitionRouteArray) ToGoogleCloudDialogflowCxV3TransitionRouteArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TransitionRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3TransitionRouteArrayOutput)
}

// A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.
type GoogleCloudDialogflowCxV3TransitionRouteOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TransitionRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3TransitionRoute)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) ToGoogleCloudDialogflowCxV3TransitionRouteOutput() GoogleCloudDialogflowCxV3TransitionRouteOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) ToGoogleCloudDialogflowCxV3TransitionRouteOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TransitionRouteOutput {
	return o
}

// The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRoute) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) Intent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRoute) *string { return v.Intent }).(pulumi.StringPtrOutput)
}

// Output only. The unique identifier of this transition route.
func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRoute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The target flow to transition to. Format: `projects//locations//agents//flows/`.
func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) TargetFlow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRoute) *string { return v.TargetFlow }).(pulumi.StringPtrOutput)
}

// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) TargetPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRoute) *string { return v.TargetPage }).(pulumi.StringPtrOutput)
}

// The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.
func (o GoogleCloudDialogflowCxV3TransitionRouteOutput) TriggerFulfillment() GoogleCloudDialogflowCxV3FulfillmentPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3TransitionRoute) *GoogleCloudDialogflowCxV3Fulfillment {
		return v.TriggerFulfillment
	}).(GoogleCloudDialogflowCxV3FulfillmentPtrOutput)
}

type GoogleCloudDialogflowCxV3TransitionRouteArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3TransitionRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3TransitionRoute)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3TransitionRouteArrayOutput) ToGoogleCloudDialogflowCxV3TransitionRouteArrayOutput() GoogleCloudDialogflowCxV3TransitionRouteArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TransitionRouteArrayOutput) ToGoogleCloudDialogflowCxV3TransitionRouteArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3TransitionRouteArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3TransitionRouteArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3TransitionRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3TransitionRoute {
		return vs[0].([]GoogleCloudDialogflowCxV3TransitionRoute)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3TransitionRouteOutput)
}

// The history of variants update.
type GoogleCloudDialogflowCxV3VariantsHistory struct {
	// Update time of the variants.
	UpdateTime *string `pulumi:"updateTime"`
	// The flow versions as the variants.
	VersionVariants *GoogleCloudDialogflowCxV3VersionVariants `pulumi:"versionVariants"`
}

// GoogleCloudDialogflowCxV3VariantsHistoryInput is an input type that accepts GoogleCloudDialogflowCxV3VariantsHistoryArgs and GoogleCloudDialogflowCxV3VariantsHistoryOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3VariantsHistoryInput` via:
//
//          GoogleCloudDialogflowCxV3VariantsHistoryArgs{...}
type GoogleCloudDialogflowCxV3VariantsHistoryInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3VariantsHistoryOutput() GoogleCloudDialogflowCxV3VariantsHistoryOutput
	ToGoogleCloudDialogflowCxV3VariantsHistoryOutputWithContext(context.Context) GoogleCloudDialogflowCxV3VariantsHistoryOutput
}

// The history of variants update.
type GoogleCloudDialogflowCxV3VariantsHistoryArgs struct {
	// Update time of the variants.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
	// The flow versions as the variants.
	VersionVariants GoogleCloudDialogflowCxV3VersionVariantsPtrInput `pulumi:"versionVariants"`
}

func (GoogleCloudDialogflowCxV3VariantsHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VariantsHistory)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3VariantsHistoryArgs) ToGoogleCloudDialogflowCxV3VariantsHistoryOutput() GoogleCloudDialogflowCxV3VariantsHistoryOutput {
	return i.ToGoogleCloudDialogflowCxV3VariantsHistoryOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3VariantsHistoryArgs) ToGoogleCloudDialogflowCxV3VariantsHistoryOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VariantsHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VariantsHistoryOutput)
}

// GoogleCloudDialogflowCxV3VariantsHistoryArrayInput is an input type that accepts GoogleCloudDialogflowCxV3VariantsHistoryArray and GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3VariantsHistoryArrayInput` via:
//
//          GoogleCloudDialogflowCxV3VariantsHistoryArray{ GoogleCloudDialogflowCxV3VariantsHistoryArgs{...} }
type GoogleCloudDialogflowCxV3VariantsHistoryArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3VariantsHistoryArrayOutput() GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput
	ToGoogleCloudDialogflowCxV3VariantsHistoryArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput
}

type GoogleCloudDialogflowCxV3VariantsHistoryArray []GoogleCloudDialogflowCxV3VariantsHistoryInput

func (GoogleCloudDialogflowCxV3VariantsHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3VariantsHistory)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3VariantsHistoryArray) ToGoogleCloudDialogflowCxV3VariantsHistoryArrayOutput() GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3VariantsHistoryArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3VariantsHistoryArray) ToGoogleCloudDialogflowCxV3VariantsHistoryArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput)
}

// The history of variants update.
type GoogleCloudDialogflowCxV3VariantsHistoryOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VariantsHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VariantsHistory)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryOutput) ToGoogleCloudDialogflowCxV3VariantsHistoryOutput() GoogleCloudDialogflowCxV3VariantsHistoryOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryOutput) ToGoogleCloudDialogflowCxV3VariantsHistoryOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VariantsHistoryOutput {
	return o
}

// Update time of the variants.
func (o GoogleCloudDialogflowCxV3VariantsHistoryOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VariantsHistory) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

// The flow versions as the variants.
func (o GoogleCloudDialogflowCxV3VariantsHistoryOutput) VersionVariants() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VariantsHistory) *GoogleCloudDialogflowCxV3VersionVariants {
		return v.VersionVariants
	}).(GoogleCloudDialogflowCxV3VersionVariantsPtrOutput)
}

type GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3VariantsHistory)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput) ToGoogleCloudDialogflowCxV3VariantsHistoryArrayOutput() GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput) ToGoogleCloudDialogflowCxV3VariantsHistoryArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3VariantsHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3VariantsHistory {
		return vs[0].([]GoogleCloudDialogflowCxV3VariantsHistory)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3VariantsHistoryOutput)
}

// A list of flow version variants.
type GoogleCloudDialogflowCxV3VersionVariants struct {
	// A list of flow version variants.
	Variants []GoogleCloudDialogflowCxV3VersionVariantsVariant `pulumi:"variants"`
}

// GoogleCloudDialogflowCxV3VersionVariantsInput is an input type that accepts GoogleCloudDialogflowCxV3VersionVariantsArgs and GoogleCloudDialogflowCxV3VersionVariantsOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3VersionVariantsInput` via:
//
//          GoogleCloudDialogflowCxV3VersionVariantsArgs{...}
type GoogleCloudDialogflowCxV3VersionVariantsInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3VersionVariantsOutput() GoogleCloudDialogflowCxV3VersionVariantsOutput
	ToGoogleCloudDialogflowCxV3VersionVariantsOutputWithContext(context.Context) GoogleCloudDialogflowCxV3VersionVariantsOutput
}

// A list of flow version variants.
type GoogleCloudDialogflowCxV3VersionVariantsArgs struct {
	// A list of flow version variants.
	Variants GoogleCloudDialogflowCxV3VersionVariantsVariantArrayInput `pulumi:"variants"`
}

func (GoogleCloudDialogflowCxV3VersionVariantsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VersionVariants)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3VersionVariantsArgs) ToGoogleCloudDialogflowCxV3VersionVariantsOutput() GoogleCloudDialogflowCxV3VersionVariantsOutput {
	return i.ToGoogleCloudDialogflowCxV3VersionVariantsOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3VersionVariantsArgs) ToGoogleCloudDialogflowCxV3VersionVariantsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VersionVariantsOutput)
}

func (i GoogleCloudDialogflowCxV3VersionVariantsArgs) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutput() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3VersionVariantsArgs) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VersionVariantsOutput).ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3VersionVariantsPtrInput is an input type that accepts GoogleCloudDialogflowCxV3VersionVariantsArgs, GoogleCloudDialogflowCxV3VersionVariantsPtr and GoogleCloudDialogflowCxV3VersionVariantsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3VersionVariantsPtrInput` via:
//
//          GoogleCloudDialogflowCxV3VersionVariantsArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3VersionVariantsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutput() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput
	ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3VersionVariantsPtrOutput
}

type googleCloudDialogflowCxV3VersionVariantsPtrType GoogleCloudDialogflowCxV3VersionVariantsArgs

func GoogleCloudDialogflowCxV3VersionVariantsPtr(v *GoogleCloudDialogflowCxV3VersionVariantsArgs) GoogleCloudDialogflowCxV3VersionVariantsPtrInput {
	return (*googleCloudDialogflowCxV3VersionVariantsPtrType)(v)
}

func (*googleCloudDialogflowCxV3VersionVariantsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3VersionVariants)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3VersionVariantsPtrType) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutput() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return i.ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3VersionVariantsPtrType) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VersionVariantsPtrOutput)
}

// A list of flow version variants.
type GoogleCloudDialogflowCxV3VersionVariantsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VersionVariantsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VersionVariants)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VersionVariantsOutput) ToGoogleCloudDialogflowCxV3VersionVariantsOutput() GoogleCloudDialogflowCxV3VersionVariantsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsOutput) ToGoogleCloudDialogflowCxV3VersionVariantsOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsOutput) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutput() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return o.ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3VersionVariantsOutput) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VersionVariants) *GoogleCloudDialogflowCxV3VersionVariants {
		return &v
	}).(GoogleCloudDialogflowCxV3VersionVariantsPtrOutput)
}

// A list of flow version variants.
func (o GoogleCloudDialogflowCxV3VersionVariantsOutput) Variants() GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VersionVariants) []GoogleCloudDialogflowCxV3VersionVariantsVariant {
		return v.Variants
	}).(GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput)
}

type GoogleCloudDialogflowCxV3VersionVariantsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VersionVariantsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3VersionVariants)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VersionVariantsPtrOutput) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutput() GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsPtrOutput) ToGoogleCloudDialogflowCxV3VersionVariantsPtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsPtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsPtrOutput) Elem() GoogleCloudDialogflowCxV3VersionVariantsOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3VersionVariants) GoogleCloudDialogflowCxV3VersionVariants { return *v }).(GoogleCloudDialogflowCxV3VersionVariantsOutput)
}

// A list of flow version variants.
func (o GoogleCloudDialogflowCxV3VersionVariantsPtrOutput) Variants() GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3VersionVariants) []GoogleCloudDialogflowCxV3VersionVariantsVariant {
		if v == nil {
			return nil
		}
		return v.Variants
	}).(GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput)
}

// A single flow version with specified traffic allocation.
type GoogleCloudDialogflowCxV3VersionVariantsVariant struct {
	// Whether the variant is for the control group.
	IsControlGroup *bool `pulumi:"isControlGroup"`
	// Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.
	TrafficAllocation *float64 `pulumi:"trafficAllocation"`
	// The name of the flow version. Format: `projects//locations//agents//flows//versions/`.
	Version *string `pulumi:"version"`
}

// GoogleCloudDialogflowCxV3VersionVariantsVariantInput is an input type that accepts GoogleCloudDialogflowCxV3VersionVariantsVariantArgs and GoogleCloudDialogflowCxV3VersionVariantsVariantOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3VersionVariantsVariantInput` via:
//
//          GoogleCloudDialogflowCxV3VersionVariantsVariantArgs{...}
type GoogleCloudDialogflowCxV3VersionVariantsVariantInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3VersionVariantsVariantOutput() GoogleCloudDialogflowCxV3VersionVariantsVariantOutput
	ToGoogleCloudDialogflowCxV3VersionVariantsVariantOutputWithContext(context.Context) GoogleCloudDialogflowCxV3VersionVariantsVariantOutput
}

// A single flow version with specified traffic allocation.
type GoogleCloudDialogflowCxV3VersionVariantsVariantArgs struct {
	// Whether the variant is for the control group.
	IsControlGroup pulumi.BoolPtrInput `pulumi:"isControlGroup"`
	// Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.
	TrafficAllocation pulumi.Float64PtrInput `pulumi:"trafficAllocation"`
	// The name of the flow version. Format: `projects//locations//agents//flows//versions/`.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GoogleCloudDialogflowCxV3VersionVariantsVariantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VersionVariantsVariant)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3VersionVariantsVariantArgs) ToGoogleCloudDialogflowCxV3VersionVariantsVariantOutput() GoogleCloudDialogflowCxV3VersionVariantsVariantOutput {
	return i.ToGoogleCloudDialogflowCxV3VersionVariantsVariantOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3VersionVariantsVariantArgs) ToGoogleCloudDialogflowCxV3VersionVariantsVariantOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsVariantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VersionVariantsVariantOutput)
}

// GoogleCloudDialogflowCxV3VersionVariantsVariantArrayInput is an input type that accepts GoogleCloudDialogflowCxV3VersionVariantsVariantArray and GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3VersionVariantsVariantArrayInput` via:
//
//          GoogleCloudDialogflowCxV3VersionVariantsVariantArray{ GoogleCloudDialogflowCxV3VersionVariantsVariantArgs{...} }
type GoogleCloudDialogflowCxV3VersionVariantsVariantArrayInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput() GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput
	ToGoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutputWithContext(context.Context) GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput
}

type GoogleCloudDialogflowCxV3VersionVariantsVariantArray []GoogleCloudDialogflowCxV3VersionVariantsVariantInput

func (GoogleCloudDialogflowCxV3VersionVariantsVariantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3VersionVariantsVariant)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3VersionVariantsVariantArray) ToGoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput() GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput {
	return i.ToGoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3VersionVariantsVariantArray) ToGoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput)
}

// A single flow version with specified traffic allocation.
type GoogleCloudDialogflowCxV3VersionVariantsVariantOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VersionVariantsVariantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3VersionVariantsVariant)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantOutput) ToGoogleCloudDialogflowCxV3VersionVariantsVariantOutput() GoogleCloudDialogflowCxV3VersionVariantsVariantOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantOutput) ToGoogleCloudDialogflowCxV3VersionVariantsVariantOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsVariantOutput {
	return o
}

// Whether the variant is for the control group.
func (o GoogleCloudDialogflowCxV3VersionVariantsVariantOutput) IsControlGroup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VersionVariantsVariant) *bool { return v.IsControlGroup }).(pulumi.BoolPtrOutput)
}

// Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.
func (o GoogleCloudDialogflowCxV3VersionVariantsVariantOutput) TrafficAllocation() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VersionVariantsVariant) *float64 { return v.TrafficAllocation }).(pulumi.Float64PtrOutput)
}

// The name of the flow version. Format: `projects//locations//agents//flows//versions/`.
func (o GoogleCloudDialogflowCxV3VersionVariantsVariantOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3VersionVariantsVariant) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDialogflowCxV3VersionVariantsVariant)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput) ToGoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput() GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput) ToGoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput) Index(i pulumi.IntInput) GoogleCloudDialogflowCxV3VersionVariantsVariantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDialogflowCxV3VersionVariantsVariant {
		return vs[0].([]GoogleCloudDialogflowCxV3VersionVariantsVariant)[vs[1].(int)]
	}).(GoogleCloudDialogflowCxV3VersionVariantsVariantOutput)
}

// Represents configuration for a generic web service.
type GoogleCloudDialogflowCxV3WebhookGenericWebService struct {
	// The password for HTTP Basic authentication.
	Password *string `pulumi:"password"`
	// The HTTP request headers to send together with webhook requests.
	RequestHeaders map[string]string `pulumi:"requestHeaders"`
	// Required. The webhook URI for receiving POST requests. It must use https protocol.
	Uri *string `pulumi:"uri"`
	// The user name for HTTP Basic authentication.
	Username *string `pulumi:"username"`
}

// GoogleCloudDialogflowCxV3WebhookGenericWebServiceInput is an input type that accepts GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs and GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3WebhookGenericWebServiceInput` via:
//
//          GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs{...}
type GoogleCloudDialogflowCxV3WebhookGenericWebServiceInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput
	ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceOutputWithContext(context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput
}

// Represents configuration for a generic web service.
type GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs struct {
	// The password for HTTP Basic authentication.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The HTTP request headers to send together with webhook requests.
	RequestHeaders pulumi.StringMapInput `pulumi:"requestHeaders"`
	// Required. The webhook URI for receiving POST requests. It must use https protocol.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
	// The user name for HTTP Basic authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookGenericWebService)(nil)).Elem()
}

func (i GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs) ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput {
	return i.ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs) ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput)
}

func (i GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(context.Background())
}

func (i GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput).ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(ctx)
}

// GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrInput is an input type that accepts GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs, GoogleCloudDialogflowCxV3WebhookGenericWebServicePtr and GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput values.
// You can construct a concrete instance of `GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrInput` via:
//
//          GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs{...}
//
//  or:
//
//          nil
type GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrInput interface {
	pulumi.Input

	ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput
	ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput
}

type googleCloudDialogflowCxV3WebhookGenericWebServicePtrType GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs

func GoogleCloudDialogflowCxV3WebhookGenericWebServicePtr(v *GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs) GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrInput {
	return (*googleCloudDialogflowCxV3WebhookGenericWebServicePtrType)(v)
}

func (*googleCloudDialogflowCxV3WebhookGenericWebServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3WebhookGenericWebService)(nil)).Elem()
}

func (i *googleCloudDialogflowCxV3WebhookGenericWebServicePtrType) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return i.ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(context.Background())
}

func (i *googleCloudDialogflowCxV3WebhookGenericWebServicePtrType) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput)
}

// Represents configuration for a generic web service.
type GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDialogflowCxV3WebhookGenericWebService)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) ToGoogleCloudDialogflowCxV3WebhookGenericWebServiceOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return o.ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(context.Background())
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebService) *GoogleCloudDialogflowCxV3WebhookGenericWebService {
		return &v
	}).(GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput)
}

// The password for HTTP Basic authentication.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebService) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The HTTP request headers to send together with webhook requests.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) RequestHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebService) map[string]string { return v.RequestHeaders }).(pulumi.StringMapOutput)
}

// Required. The webhook URI for receiving POST requests. It must use https protocol.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebService) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

// The user name for HTTP Basic authentication.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDialogflowCxV3WebhookGenericWebService) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDialogflowCxV3WebhookGenericWebService)(nil)).Elem()
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput() GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) ToGoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutputWithContext(ctx context.Context) GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput {
	return o
}

func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) Elem() GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) GoogleCloudDialogflowCxV3WebhookGenericWebService {
		return *v
	}).(GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput)
}

// The password for HTTP Basic authentication.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The HTTP request headers to send together with webhook requests.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) RequestHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) map[string]string {
		if v == nil {
			return nil
		}
		return v.RequestHeaders
	}).(pulumi.StringMapOutput)
}

// Required. The webhook URI for receiving POST requests. It must use https protocol.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// The user name for HTTP Basic authentication.
func (o GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDialogflowCxV3WebhookGenericWebService) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type GoogleRpcStatus struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code *int `pulumi:"code"`
	// A list of messages that carry the error details. There is a common set of message types for APIs to use.
	Details []map[string]string `pulumi:"details"`
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message *string `pulumi:"message"`
}

// GoogleRpcStatusInput is an input type that accepts GoogleRpcStatusArgs and GoogleRpcStatusOutput values.
// You can construct a concrete instance of `GoogleRpcStatusInput` via:
//
//          GoogleRpcStatusArgs{...}
type GoogleRpcStatusInput interface {
	pulumi.Input

	ToGoogleRpcStatusOutput() GoogleRpcStatusOutput
	ToGoogleRpcStatusOutputWithContext(context.Context) GoogleRpcStatusOutput
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type GoogleRpcStatusArgs struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// A list of messages that carry the error details. There is a common set of message types for APIs to use.
	Details pulumi.StringMapArrayInput `pulumi:"details"`
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (GoogleRpcStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleRpcStatus)(nil)).Elem()
}

func (i GoogleRpcStatusArgs) ToGoogleRpcStatusOutput() GoogleRpcStatusOutput {
	return i.ToGoogleRpcStatusOutputWithContext(context.Background())
}

func (i GoogleRpcStatusArgs) ToGoogleRpcStatusOutputWithContext(ctx context.Context) GoogleRpcStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleRpcStatusOutput)
}

func (i GoogleRpcStatusArgs) ToGoogleRpcStatusPtrOutput() GoogleRpcStatusPtrOutput {
	return i.ToGoogleRpcStatusPtrOutputWithContext(context.Background())
}

func (i GoogleRpcStatusArgs) ToGoogleRpcStatusPtrOutputWithContext(ctx context.Context) GoogleRpcStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleRpcStatusOutput).ToGoogleRpcStatusPtrOutputWithContext(ctx)
}

// GoogleRpcStatusPtrInput is an input type that accepts GoogleRpcStatusArgs, GoogleRpcStatusPtr and GoogleRpcStatusPtrOutput values.
// You can construct a concrete instance of `GoogleRpcStatusPtrInput` via:
//
//          GoogleRpcStatusArgs{...}
//
//  or:
//
//          nil
type GoogleRpcStatusPtrInput interface {
	pulumi.Input

	ToGoogleRpcStatusPtrOutput() GoogleRpcStatusPtrOutput
	ToGoogleRpcStatusPtrOutputWithContext(context.Context) GoogleRpcStatusPtrOutput
}

type googleRpcStatusPtrType GoogleRpcStatusArgs

func GoogleRpcStatusPtr(v *GoogleRpcStatusArgs) GoogleRpcStatusPtrInput {
	return (*googleRpcStatusPtrType)(v)
}

func (*googleRpcStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleRpcStatus)(nil)).Elem()
}

func (i *googleRpcStatusPtrType) ToGoogleRpcStatusPtrOutput() GoogleRpcStatusPtrOutput {
	return i.ToGoogleRpcStatusPtrOutputWithContext(context.Background())
}

func (i *googleRpcStatusPtrType) ToGoogleRpcStatusPtrOutputWithContext(ctx context.Context) GoogleRpcStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleRpcStatusPtrOutput)
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type GoogleRpcStatusOutput struct{ *pulumi.OutputState }

func (GoogleRpcStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleRpcStatus)(nil)).Elem()
}

func (o GoogleRpcStatusOutput) ToGoogleRpcStatusOutput() GoogleRpcStatusOutput {
	return o
}

func (o GoogleRpcStatusOutput) ToGoogleRpcStatusOutputWithContext(ctx context.Context) GoogleRpcStatusOutput {
	return o
}

func (o GoogleRpcStatusOutput) ToGoogleRpcStatusPtrOutput() GoogleRpcStatusPtrOutput {
	return o.ToGoogleRpcStatusPtrOutputWithContext(context.Background())
}

func (o GoogleRpcStatusOutput) ToGoogleRpcStatusPtrOutputWithContext(ctx context.Context) GoogleRpcStatusPtrOutput {
	return o.ApplyT(func(v GoogleRpcStatus) *GoogleRpcStatus {
		return &v
	}).(GoogleRpcStatusPtrOutput)
}

// The status code, which should be an enum value of google.rpc.Code.
func (o GoogleRpcStatusOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleRpcStatus) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// A list of messages that carry the error details. There is a common set of message types for APIs to use.
func (o GoogleRpcStatusOutput) Details() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v GoogleRpcStatus) []map[string]string { return v.Details }).(pulumi.StringMapArrayOutput)
}

// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
func (o GoogleRpcStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleRpcStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type GoogleRpcStatusPtrOutput struct{ *pulumi.OutputState }

func (GoogleRpcStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleRpcStatus)(nil)).Elem()
}

func (o GoogleRpcStatusPtrOutput) ToGoogleRpcStatusPtrOutput() GoogleRpcStatusPtrOutput {
	return o
}

func (o GoogleRpcStatusPtrOutput) ToGoogleRpcStatusPtrOutputWithContext(ctx context.Context) GoogleRpcStatusPtrOutput {
	return o
}

func (o GoogleRpcStatusPtrOutput) Elem() GoogleRpcStatusOutput {
	return o.ApplyT(func(v *GoogleRpcStatus) GoogleRpcStatus { return *v }).(GoogleRpcStatusOutput)
}

// The status code, which should be an enum value of google.rpc.Code.
func (o GoogleRpcStatusPtrOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleRpcStatus) *int {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.IntPtrOutput)
}

// A list of messages that carry the error details. There is a common set of message types for APIs to use.
func (o GoogleRpcStatusPtrOutput) Details() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v *GoogleRpcStatus) []map[string]string {
		if v == nil {
			return nil
		}
		return v.Details
	}).(pulumi.StringMapArrayOutput)
}

// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
func (o GoogleRpcStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleRpcStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AudioInputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3AudioInputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnUserInputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnUserInputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3DtmfInputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3DtmfInputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EntityTypeEntityOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EntityTypeEntityArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EnvironmentVersionConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EnvironmentVersionConfigArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EventHandlerOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EventHandlerArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EventInputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3EventInputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentDefinitionOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentDefinitionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultMetricOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultMetricArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ExperimentResultVersionMetricsArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormParameterOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormParameterArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormParameterFillBehaviorOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FormParameterFillBehaviorPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3InputAudioConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3InputAudioConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentInputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentInputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentParameterOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentParameterArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentTrainingPhraseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentTrainingPhraseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3IntentTrainingPhrasePartArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3NluSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3NluSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3PageOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3PagePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3QueryInputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3QueryInputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessagePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageEndInteractionOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageEndInteractionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegmentArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessagePlayAudioPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageTextOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageTextPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3ResponseMessageTextArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SpeechToTextSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3SpeechToTextSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TestCaseResultOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TestCaseResultPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TestConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TestConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TestRunDifferenceOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TestRunDifferenceArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TextInputOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TextInputPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TransitionRouteOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3TransitionRouteArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VariantsHistoryOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VariantsHistoryArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VersionVariantsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VersionVariantsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VersionVariantsVariantOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3VersionVariantsVariantArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3WebhookGenericWebServiceOutput{})
	pulumi.RegisterOutputType(GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrOutput{})
	pulumi.RegisterOutputType(GoogleRpcStatusOutput{})
	pulumi.RegisterOutputType(GoogleRpcStatusPtrOutput{})
}
