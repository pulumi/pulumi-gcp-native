// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a webhook in the specified agent.
type AgentWebhook struct {
	pulumi.CustomResourceState
}

// NewAgentWebhook registers a new resource with the given unique name, arguments, and options.
func NewAgentWebhook(ctx *pulumi.Context,
	name string, args *AgentWebhookArgs, opts ...pulumi.ResourceOption) (*AgentWebhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentsId == nil {
		return nil, errors.New("invalid value for required argument 'AgentsId'")
	}
	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	if args.WebhooksId == nil {
		return nil, errors.New("invalid value for required argument 'WebhooksId'")
	}
	var resource AgentWebhook
	err := ctx.RegisterResource("google-cloud:dialogflow/v3:AgentWebhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgentWebhook gets an existing AgentWebhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgentWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentWebhookState, opts ...pulumi.ResourceOption) (*AgentWebhook, error) {
	var resource AgentWebhook
	err := ctx.ReadResource("google-cloud:dialogflow/v3:AgentWebhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AgentWebhook resources.
type agentWebhookState struct {
}

type AgentWebhookState struct {
}

func (AgentWebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentWebhookState)(nil)).Elem()
}

type agentWebhookArgs struct {
	AgentsId string `pulumi:"agentsId"`
	// Indicates whether the webhook is disabled.
	Disabled *bool `pulumi:"disabled"`
	// Required. The human-readable name of the webhook, unique within the agent.
	DisplayName *string `pulumi:"displayName"`
	// Configuration for a generic web service.
	GenericWebService *GoogleCloudDialogflowCxV3WebhookGenericWebService `pulumi:"genericWebService"`
	LocationsId       string                                             `pulumi:"locationsId"`
	// The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.
	Name       *string `pulumi:"name"`
	ProjectsId string  `pulumi:"projectsId"`
	// Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
	Timeout    *string `pulumi:"timeout"`
	WebhooksId string  `pulumi:"webhooksId"`
}

// The set of arguments for constructing a AgentWebhook resource.
type AgentWebhookArgs struct {
	AgentsId pulumi.StringInput
	// Indicates whether the webhook is disabled.
	Disabled pulumi.BoolPtrInput
	// Required. The human-readable name of the webhook, unique within the agent.
	DisplayName pulumi.StringPtrInput
	// Configuration for a generic web service.
	GenericWebService GoogleCloudDialogflowCxV3WebhookGenericWebServicePtrInput
	LocationsId       pulumi.StringInput
	// The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.
	Name       pulumi.StringPtrInput
	ProjectsId pulumi.StringInput
	// Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
	Timeout    pulumi.StringPtrInput
	WebhooksId pulumi.StringInput
}

func (AgentWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentWebhookArgs)(nil)).Elem()
}

type AgentWebhookInput interface {
	pulumi.Input

	ToAgentWebhookOutput() AgentWebhookOutput
	ToAgentWebhookOutputWithContext(ctx context.Context) AgentWebhookOutput
}

func (*AgentWebhook) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentWebhook)(nil))
}

func (i *AgentWebhook) ToAgentWebhookOutput() AgentWebhookOutput {
	return i.ToAgentWebhookOutputWithContext(context.Background())
}

func (i *AgentWebhook) ToAgentWebhookOutputWithContext(ctx context.Context) AgentWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentWebhookOutput)
}

type AgentWebhookOutput struct {
	*pulumi.OutputState
}

func (AgentWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentWebhook)(nil))
}

func (o AgentWebhookOutput) ToAgentWebhookOutput() AgentWebhookOutput {
	return o
}

func (o AgentWebhookOutput) ToAgentWebhookOutputWithContext(ctx context.Context) AgentWebhookOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AgentWebhookOutput{})
}
