// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the specified session entity type.
func LookupSessionEntityType(ctx *pulumi.Context, args *LookupSessionEntityTypeArgs, opts ...pulumi.InvokeOption) (*LookupSessionEntityTypeResult, error) {
	var rv LookupSessionEntityTypeResult
	err := ctx.Invoke("google-native:dialogflow/v3:getSessionEntityType", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSessionEntityTypeArgs struct {
	AgentId       string  `pulumi:"agentId"`
	EntityTypeId  string  `pulumi:"entityTypeId"`
	EnvironmentId string  `pulumi:"environmentId"`
	Location      string  `pulumi:"location"`
	Project       *string `pulumi:"project"`
	SessionId     string  `pulumi:"sessionId"`
}

type LookupSessionEntityTypeResult struct {
	// The collection of entities to override or supplement the custom entity type.
	Entities []GoogleCloudDialogflowCxV3EntityTypeEntityResponse `pulumi:"entities"`
	// Indicates whether the additional data should override or supplement the custom entity type definition.
	EntityOverrideMode string `pulumi:"entityOverrideMode"`
	// The unique identifier of the session entity type. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment.
	Name string `pulumi:"name"`
}

func LookupSessionEntityTypeOutput(ctx *pulumi.Context, args LookupSessionEntityTypeOutputArgs, opts ...pulumi.InvokeOption) LookupSessionEntityTypeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSessionEntityTypeResult, error) {
			args := v.(LookupSessionEntityTypeArgs)
			r, err := LookupSessionEntityType(ctx, &args, opts...)
			var s LookupSessionEntityTypeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSessionEntityTypeResultOutput)
}

type LookupSessionEntityTypeOutputArgs struct {
	AgentId       pulumi.StringInput    `pulumi:"agentId"`
	EntityTypeId  pulumi.StringInput    `pulumi:"entityTypeId"`
	EnvironmentId pulumi.StringInput    `pulumi:"environmentId"`
	Location      pulumi.StringInput    `pulumi:"location"`
	Project       pulumi.StringPtrInput `pulumi:"project"`
	SessionId     pulumi.StringInput    `pulumi:"sessionId"`
}

func (LookupSessionEntityTypeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSessionEntityTypeArgs)(nil)).Elem()
}

type LookupSessionEntityTypeResultOutput struct{ *pulumi.OutputState }

func (LookupSessionEntityTypeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSessionEntityTypeResult)(nil)).Elem()
}

func (o LookupSessionEntityTypeResultOutput) ToLookupSessionEntityTypeResultOutput() LookupSessionEntityTypeResultOutput {
	return o
}

func (o LookupSessionEntityTypeResultOutput) ToLookupSessionEntityTypeResultOutputWithContext(ctx context.Context) LookupSessionEntityTypeResultOutput {
	return o
}

// The collection of entities to override or supplement the custom entity type.
func (o LookupSessionEntityTypeResultOutput) Entities() GoogleCloudDialogflowCxV3EntityTypeEntityResponseArrayOutput {
	return o.ApplyT(func(v LookupSessionEntityTypeResult) []GoogleCloudDialogflowCxV3EntityTypeEntityResponse {
		return v.Entities
	}).(GoogleCloudDialogflowCxV3EntityTypeEntityResponseArrayOutput)
}

// Indicates whether the additional data should override or supplement the custom entity type definition.
func (o LookupSessionEntityTypeResultOutput) EntityOverrideMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionEntityTypeResult) string { return v.EntityOverrideMode }).(pulumi.StringOutput)
}

// The unique identifier of the session entity type. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment.
func (o LookupSessionEntityTypeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionEntityTypeResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSessionEntityTypeResultOutput{})
}
