// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a test case for the given agent.
type AgentTestCase struct {
	pulumi.CustomResourceState

	// When the test was created.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The latest test result.
	LastTestResult GoogleCloudDialogflowCxV3TestCaseResultResponseOutput `pulumi:"lastTestResult"`
	// The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`.
	Name pulumi.StringOutput `pulumi:"name"`
	// Additional freeform notes about the test case. Limit of 400 characters.
	Notes pulumi.StringOutput `pulumi:"notes"`
	// Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with "#" and has a limit of 30 characters.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.
	TestCaseConversationTurns GoogleCloudDialogflowCxV3ConversationTurnResponseArrayOutput `pulumi:"testCaseConversationTurns"`
	// Config for the test case.
	TestConfig GoogleCloudDialogflowCxV3TestConfigResponseOutput `pulumi:"testConfig"`
}

// NewAgentTestCase registers a new resource with the given unique name, arguments, and options.
func NewAgentTestCase(ctx *pulumi.Context,
	name string, args *AgentTestCaseArgs, opts ...pulumi.ResourceOption) (*AgentTestCase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentId == nil {
		return nil, errors.New("invalid value for required argument 'AgentId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.TestCaseId == nil {
		return nil, errors.New("invalid value for required argument 'TestCaseId'")
	}
	var resource AgentTestCase
	err := ctx.RegisterResource("google-native:dialogflow/v3:AgentTestCase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgentTestCase gets an existing AgentTestCase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgentTestCase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentTestCaseState, opts ...pulumi.ResourceOption) (*AgentTestCase, error) {
	var resource AgentTestCase
	err := ctx.ReadResource("google-native:dialogflow/v3:AgentTestCase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AgentTestCase resources.
type agentTestCaseState struct {
	// When the test was created.
	CreationTime *string `pulumi:"creationTime"`
	// Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.
	DisplayName *string `pulumi:"displayName"`
	// The latest test result.
	LastTestResult *GoogleCloudDialogflowCxV3TestCaseResultResponse `pulumi:"lastTestResult"`
	// The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`.
	Name *string `pulumi:"name"`
	// Additional freeform notes about the test case. Limit of 400 characters.
	Notes *string `pulumi:"notes"`
	// Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with "#" and has a limit of 30 characters.
	Tags []string `pulumi:"tags"`
	// The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.
	TestCaseConversationTurns []GoogleCloudDialogflowCxV3ConversationTurnResponse `pulumi:"testCaseConversationTurns"`
	// Config for the test case.
	TestConfig *GoogleCloudDialogflowCxV3TestConfigResponse `pulumi:"testConfig"`
}

type AgentTestCaseState struct {
	// When the test was created.
	CreationTime pulumi.StringPtrInput
	// Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.
	DisplayName pulumi.StringPtrInput
	// The latest test result.
	LastTestResult GoogleCloudDialogflowCxV3TestCaseResultResponsePtrInput
	// The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`.
	Name pulumi.StringPtrInput
	// Additional freeform notes about the test case. Limit of 400 characters.
	Notes pulumi.StringPtrInput
	// Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with "#" and has a limit of 30 characters.
	Tags pulumi.StringArrayInput
	// The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.
	TestCaseConversationTurns GoogleCloudDialogflowCxV3ConversationTurnResponseArrayInput
	// Config for the test case.
	TestConfig GoogleCloudDialogflowCxV3TestConfigResponsePtrInput
}

func (AgentTestCaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentTestCaseState)(nil)).Elem()
}

type agentTestCaseArgs struct {
	AgentId string `pulumi:"agentId"`
	// Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.
	DisplayName *string `pulumi:"displayName"`
	// The latest test result.
	LastTestResult *GoogleCloudDialogflowCxV3TestCaseResult `pulumi:"lastTestResult"`
	Location       string                                   `pulumi:"location"`
	// The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`.
	Name *string `pulumi:"name"`
	// Additional freeform notes about the test case. Limit of 400 characters.
	Notes   *string `pulumi:"notes"`
	Project string  `pulumi:"project"`
	// Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with "#" and has a limit of 30 characters.
	Tags []string `pulumi:"tags"`
	// The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.
	TestCaseConversationTurns []GoogleCloudDialogflowCxV3ConversationTurn `pulumi:"testCaseConversationTurns"`
	TestCaseId                string                                      `pulumi:"testCaseId"`
	// Config for the test case.
	TestConfig *GoogleCloudDialogflowCxV3TestConfig `pulumi:"testConfig"`
}

// The set of arguments for constructing a AgentTestCase resource.
type AgentTestCaseArgs struct {
	AgentId pulumi.StringInput
	// Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.
	DisplayName pulumi.StringPtrInput
	// The latest test result.
	LastTestResult GoogleCloudDialogflowCxV3TestCaseResultPtrInput
	Location       pulumi.StringInput
	// The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`.
	Name pulumi.StringPtrInput
	// Additional freeform notes about the test case. Limit of 400 characters.
	Notes   pulumi.StringPtrInput
	Project pulumi.StringInput
	// Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with "#" and has a limit of 30 characters.
	Tags pulumi.StringArrayInput
	// The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.
	TestCaseConversationTurns GoogleCloudDialogflowCxV3ConversationTurnArrayInput
	TestCaseId                pulumi.StringInput
	// Config for the test case.
	TestConfig GoogleCloudDialogflowCxV3TestConfigPtrInput
}

func (AgentTestCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentTestCaseArgs)(nil)).Elem()
}

type AgentTestCaseInput interface {
	pulumi.Input

	ToAgentTestCaseOutput() AgentTestCaseOutput
	ToAgentTestCaseOutputWithContext(ctx context.Context) AgentTestCaseOutput
}

func (*AgentTestCase) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentTestCase)(nil))
}

func (i *AgentTestCase) ToAgentTestCaseOutput() AgentTestCaseOutput {
	return i.ToAgentTestCaseOutputWithContext(context.Background())
}

func (i *AgentTestCase) ToAgentTestCaseOutputWithContext(ctx context.Context) AgentTestCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentTestCaseOutput)
}

type AgentTestCaseOutput struct {
	*pulumi.OutputState
}

func (AgentTestCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentTestCase)(nil))
}

func (o AgentTestCaseOutput) ToAgentTestCaseOutput() AgentTestCaseOutput {
	return o
}

func (o AgentTestCaseOutput) ToAgentTestCaseOutputWithContext(ctx context.Context) AgentTestCaseOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AgentTestCaseOutput{})
}
