// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the specified webhook.
func LookupWebhook(ctx *pulumi.Context, args *LookupWebhookArgs, opts ...pulumi.InvokeOption) (*LookupWebhookResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWebhookResult
	err := ctx.Invoke("google-native:dialogflow/v3:getWebhook", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWebhookArgs struct {
	AgentId   string  `pulumi:"agentId"`
	Location  string  `pulumi:"location"`
	Project   *string `pulumi:"project"`
	WebhookId string  `pulumi:"webhookId"`
}

type LookupWebhookResult struct {
	// Indicates whether the webhook is disabled.
	Disabled bool `pulumi:"disabled"`
	// The human-readable name of the webhook, unique within the agent.
	DisplayName string `pulumi:"displayName"`
	// Configuration for a generic web service.
	GenericWebService GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse `pulumi:"genericWebService"`
	// The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.
	Name string `pulumi:"name"`
	// Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
	ServiceDirectory GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponse `pulumi:"serviceDirectory"`
	// Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
	Timeout string `pulumi:"timeout"`
}

func LookupWebhookOutput(ctx *pulumi.Context, args LookupWebhookOutputArgs, opts ...pulumi.InvokeOption) LookupWebhookResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWebhookResult, error) {
			args := v.(LookupWebhookArgs)
			r, err := LookupWebhook(ctx, &args, opts...)
			var s LookupWebhookResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWebhookResultOutput)
}

type LookupWebhookOutputArgs struct {
	AgentId   pulumi.StringInput    `pulumi:"agentId"`
	Location  pulumi.StringInput    `pulumi:"location"`
	Project   pulumi.StringPtrInput `pulumi:"project"`
	WebhookId pulumi.StringInput    `pulumi:"webhookId"`
}

func (LookupWebhookOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebhookArgs)(nil)).Elem()
}

type LookupWebhookResultOutput struct{ *pulumi.OutputState }

func (LookupWebhookResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebhookResult)(nil)).Elem()
}

func (o LookupWebhookResultOutput) ToLookupWebhookResultOutput() LookupWebhookResultOutput {
	return o
}

func (o LookupWebhookResultOutput) ToLookupWebhookResultOutputWithContext(ctx context.Context) LookupWebhookResultOutput {
	return o
}

func (o LookupWebhookResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupWebhookResult] {
	return pulumix.Output[LookupWebhookResult]{
		OutputState: o.OutputState,
	}
}

// Indicates whether the webhook is disabled.
func (o LookupWebhookResultOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWebhookResult) bool { return v.Disabled }).(pulumi.BoolOutput)
}

// The human-readable name of the webhook, unique within the agent.
func (o LookupWebhookResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebhookResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Configuration for a generic web service.
func (o LookupWebhookResultOutput) GenericWebService() GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput {
	return o.ApplyT(func(v LookupWebhookResult) GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponse {
		return v.GenericWebService
	}).(GoogleCloudDialogflowCxV3WebhookGenericWebServiceResponseOutput)
}

// The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.
func (o LookupWebhookResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebhookResult) string { return v.Name }).(pulumi.StringOutput)
}

// Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
func (o LookupWebhookResultOutput) ServiceDirectory() GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutput {
	return o.ApplyT(func(v LookupWebhookResult) GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponse {
		return v.ServiceDirectory
	}).(GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigResponseOutput)
}

// Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
func (o LookupWebhookResultOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebhookResult) string { return v.Timeout }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWebhookResultOutput{})
}
