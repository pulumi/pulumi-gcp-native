// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the specified Version.
func LookupVersion(ctx *pulumi.Context, args *LookupVersionArgs, opts ...pulumi.InvokeOption) (*LookupVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVersionResult
	err := ctx.Invoke("google-native:dialogflow/v3:getVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVersionArgs struct {
	AgentId   string  `pulumi:"agentId"`
	FlowId    string  `pulumi:"flowId"`
	Location  string  `pulumi:"location"`
	Project   *string `pulumi:"project"`
	VersionId string  `pulumi:"versionId"`
}

type LookupVersionResult struct {
	// Create time of the version.
	CreateTime string `pulumi:"createTime"`
	// The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description string `pulumi:"description"`
	// The human-readable name of the version. Limit of 64 characters.
	DisplayName string `pulumi:"displayName"`
	// Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.
	Name string `pulumi:"name"`
	// The NLU settings of the flow at version creation.
	NluSettings GoogleCloudDialogflowCxV3NluSettingsResponse `pulumi:"nluSettings"`
	// The state of this version. This field is read-only and cannot be set by create and update methods.
	State string `pulumi:"state"`
}

func LookupVersionOutput(ctx *pulumi.Context, args LookupVersionOutputArgs, opts ...pulumi.InvokeOption) LookupVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVersionResult, error) {
			args := v.(LookupVersionArgs)
			r, err := LookupVersion(ctx, &args, opts...)
			var s LookupVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVersionResultOutput)
}

type LookupVersionOutputArgs struct {
	AgentId   pulumi.StringInput    `pulumi:"agentId"`
	FlowId    pulumi.StringInput    `pulumi:"flowId"`
	Location  pulumi.StringInput    `pulumi:"location"`
	Project   pulumi.StringPtrInput `pulumi:"project"`
	VersionId pulumi.StringInput    `pulumi:"versionId"`
}

func (LookupVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVersionArgs)(nil)).Elem()
}

type LookupVersionResultOutput struct{ *pulumi.OutputState }

func (LookupVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVersionResult)(nil)).Elem()
}

func (o LookupVersionResultOutput) ToLookupVersionResultOutput() LookupVersionResultOutput {
	return o
}

func (o LookupVersionResultOutput) ToLookupVersionResultOutputWithContext(ctx context.Context) LookupVersionResultOutput {
	return o
}

func (o LookupVersionResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupVersionResult] {
	return pulumix.Output[LookupVersionResult]{
		OutputState: o.OutputState,
	}
}

// Create time of the version.
func (o LookupVersionResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVersionResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.
func (o LookupVersionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVersionResult) string { return v.Description }).(pulumi.StringOutput)
}

// The human-readable name of the version. Limit of 64 characters.
func (o LookupVersionResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVersionResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.
func (o LookupVersionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVersionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The NLU settings of the flow at version creation.
func (o LookupVersionResultOutput) NluSettings() GoogleCloudDialogflowCxV3NluSettingsResponseOutput {
	return o.ApplyT(func(v LookupVersionResult) GoogleCloudDialogflowCxV3NluSettingsResponse { return v.NluSettings }).(GoogleCloudDialogflowCxV3NluSettingsResponseOutput)
}

// The state of this version. This field is read-only and cannot be set by create and update methods.
func (o LookupVersionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVersionResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVersionResultOutput{})
}
