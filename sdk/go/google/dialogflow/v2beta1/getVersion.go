// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the specified agent version.
func LookupVersion(ctx *pulumi.Context, args *LookupVersionArgs, opts ...pulumi.InvokeOption) (*LookupVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVersionResult
	err := ctx.Invoke("google-native:dialogflow/v2beta1:getVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVersionArgs struct {
	Location  string  `pulumi:"location"`
	Project   *string `pulumi:"project"`
	VersionId string  `pulumi:"versionId"`
}

type LookupVersionResult struct {
	// The creation time of this version. This field is read-only, i.e., it cannot be set by create and update methods.
	CreateTime string `pulumi:"createTime"`
	// Optional. The developer-provided description of this version.
	Description string `pulumi:"description"`
	// The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`
	Name string `pulumi:"name"`
	// The status of this version. This field is read-only and cannot be set by create and update methods.
	Status string `pulumi:"status"`
	// The sequential number of this version. This field is read-only which means it cannot be set by create and update methods.
	VersionNumber int `pulumi:"versionNumber"`
}

func LookupVersionOutput(ctx *pulumi.Context, args LookupVersionOutputArgs, opts ...pulumi.InvokeOption) LookupVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVersionResult, error) {
			args := v.(LookupVersionArgs)
			r, err := LookupVersion(ctx, &args, opts...)
			var s LookupVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVersionResultOutput)
}

type LookupVersionOutputArgs struct {
	Location  pulumi.StringInput    `pulumi:"location"`
	Project   pulumi.StringPtrInput `pulumi:"project"`
	VersionId pulumi.StringInput    `pulumi:"versionId"`
}

func (LookupVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVersionArgs)(nil)).Elem()
}

type LookupVersionResultOutput struct{ *pulumi.OutputState }

func (LookupVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVersionResult)(nil)).Elem()
}

func (o LookupVersionResultOutput) ToLookupVersionResultOutput() LookupVersionResultOutput {
	return o
}

func (o LookupVersionResultOutput) ToLookupVersionResultOutputWithContext(ctx context.Context) LookupVersionResultOutput {
	return o
}

func (o LookupVersionResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupVersionResult] {
	return pulumix.Output[LookupVersionResult]{
		OutputState: o.OutputState,
	}
}

// The creation time of this version. This field is read-only, i.e., it cannot be set by create and update methods.
func (o LookupVersionResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVersionResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. The developer-provided description of this version.
func (o LookupVersionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVersionResult) string { return v.Description }).(pulumi.StringOutput)
}

// The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`
func (o LookupVersionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVersionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of this version. This field is read-only and cannot be set by create and update methods.
func (o LookupVersionResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVersionResult) string { return v.Status }).(pulumi.StringOutput)
}

// The sequential number of this version. This field is read-only which means it cannot be set by create and update methods.
func (o LookupVersionResultOutput) VersionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVersionResult) int { return v.VersionNumber }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVersionResultOutput{})
}
