// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a conversation profile in the specified project. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via GetConversationProfile API.
type ConversationProfile struct {
	pulumi.CustomResourceState
}

// NewConversationProfile registers a new resource with the given unique name, arguments, and options.
func NewConversationProfile(ctx *pulumi.Context,
	name string, args *ConversationProfileArgs, opts ...pulumi.ResourceOption) (*ConversationProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConversationProfilesId == nil {
		return nil, errors.New("invalid value for required argument 'ConversationProfilesId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	var resource ConversationProfile
	err := ctx.RegisterResource("google-cloud:dialogflow/v2:ConversationProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConversationProfile gets an existing ConversationProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConversationProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConversationProfileState, opts ...pulumi.ResourceOption) (*ConversationProfile, error) {
	var resource ConversationProfile
	err := ctx.ReadResource("google-cloud:dialogflow/v2:ConversationProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConversationProfile resources.
type conversationProfileState struct {
}

type ConversationProfileState struct {
}

func (ConversationProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*conversationProfileState)(nil)).Elem()
}

type conversationProfileArgs struct {
	// Configuration for an automated agent to use with this profile.
	AutomatedAgentConfig   *GoogleCloudDialogflowV2AutomatedAgentConfig `pulumi:"automatedAgentConfig"`
	ConversationProfilesId string                                       `pulumi:"conversationProfilesId"`
	// Output only. Create time of the conversation profile.
	CreateTime *string `pulumi:"createTime"`
	// Required. Human readable name for this profile. Max length 1024 bytes.
	DisplayName *string `pulumi:"displayName"`
	// Configuration for agent assistance to use with this profile.
	HumanAgentAssistantConfig *GoogleCloudDialogflowV2HumanAgentAssistantConfig `pulumi:"humanAgentAssistantConfig"`
	// Language which represents the conversationProfile. If unspecified, the default language code en-us applies. Users need to create a ConversationProfile for each language they want to support.
	LanguageCode *string `pulumi:"languageCode"`
	// Configuration for logging conversation lifecycle events.
	LoggingConfig *GoogleCloudDialogflowV2LoggingConfig `pulumi:"loggingConfig"`
	// The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`.
	Name *string `pulumi:"name"`
	// Configuration for publishing new message events. Event will be sent in format of ConversationEvent
	NewMessageEventNotificationConfig *GoogleCloudDialogflowV2NotificationConfig `pulumi:"newMessageEventNotificationConfig"`
	// Configuration for publishing conversation lifecycle events.
	NotificationConfig *GoogleCloudDialogflowV2NotificationConfig `pulumi:"notificationConfig"`
	ProjectsId         string                                     `pulumi:"projectsId"`
	// Settings for speech transcription.
	SttConfig *GoogleCloudDialogflowV2SpeechToTextConfig `pulumi:"sttConfig"`
	// Output only. Update time of the conversation profile.
	UpdateTime *string `pulumi:"updateTime"`
}

// The set of arguments for constructing a ConversationProfile resource.
type ConversationProfileArgs struct {
	// Configuration for an automated agent to use with this profile.
	AutomatedAgentConfig   GoogleCloudDialogflowV2AutomatedAgentConfigPtrInput
	ConversationProfilesId pulumi.StringInput
	// Output only. Create time of the conversation profile.
	CreateTime pulumi.StringPtrInput
	// Required. Human readable name for this profile. Max length 1024 bytes.
	DisplayName pulumi.StringPtrInput
	// Configuration for agent assistance to use with this profile.
	HumanAgentAssistantConfig GoogleCloudDialogflowV2HumanAgentAssistantConfigPtrInput
	// Language which represents the conversationProfile. If unspecified, the default language code en-us applies. Users need to create a ConversationProfile for each language they want to support.
	LanguageCode pulumi.StringPtrInput
	// Configuration for logging conversation lifecycle events.
	LoggingConfig GoogleCloudDialogflowV2LoggingConfigPtrInput
	// The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`.
	Name pulumi.StringPtrInput
	// Configuration for publishing new message events. Event will be sent in format of ConversationEvent
	NewMessageEventNotificationConfig GoogleCloudDialogflowV2NotificationConfigPtrInput
	// Configuration for publishing conversation lifecycle events.
	NotificationConfig GoogleCloudDialogflowV2NotificationConfigPtrInput
	ProjectsId         pulumi.StringInput
	// Settings for speech transcription.
	SttConfig GoogleCloudDialogflowV2SpeechToTextConfigPtrInput
	// Output only. Update time of the conversation profile.
	UpdateTime pulumi.StringPtrInput
}

func (ConversationProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*conversationProfileArgs)(nil)).Elem()
}

type ConversationProfileInput interface {
	pulumi.Input

	ToConversationProfileOutput() ConversationProfileOutput
	ToConversationProfileOutputWithContext(ctx context.Context) ConversationProfileOutput
}

func (*ConversationProfile) ElementType() reflect.Type {
	return reflect.TypeOf((*ConversationProfile)(nil))
}

func (i *ConversationProfile) ToConversationProfileOutput() ConversationProfileOutput {
	return i.ToConversationProfileOutputWithContext(context.Background())
}

func (i *ConversationProfile) ToConversationProfileOutputWithContext(ctx context.Context) ConversationProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConversationProfileOutput)
}

type ConversationProfileOutput struct {
	*pulumi.OutputState
}

func (ConversationProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConversationProfile)(nil))
}

func (o ConversationProfileOutput) ToConversationProfileOutput() ConversationProfileOutput {
	return o
}

func (o ConversationProfileOutput) ToConversationProfileOutputWithContext(ctx context.Context) ConversationProfileOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ConversationProfileOutput{})
}
