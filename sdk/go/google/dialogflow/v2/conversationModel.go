// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a model. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: CreateConversationModelOperationMetadata - `response`: ConversationModel
type ConversationModel struct {
	pulumi.CustomResourceState

	// Metadata for article suggestion models.
	ArticleSuggestionModelMetadata GoogleCloudDialogflowV2ArticleSuggestionModelMetadataResponseOutput `pulumi:"articleSuggestionModelMetadata"`
	// Creation time of this model.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Datasets used to create model.
	Datasets GoogleCloudDialogflowV2InputDatasetResponseArrayOutput `pulumi:"datasets"`
	// The display name of the model. At most 64 bytes long.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Language code for the conversation model. If not specified, the language is en-US. Language at ConversationModel should be set for all non en-us languages. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
	LanguageCode pulumi.StringOutput `pulumi:"languageCode"`
	Location     pulumi.StringOutput `pulumi:"location"`
	// ConversationModel resource name. Format: `projects//conversationModels/`
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Metadata for smart reply models.
	SmartReplyModelMetadata GoogleCloudDialogflowV2SmartReplyModelMetadataResponseOutput `pulumi:"smartReplyModelMetadata"`
	// State of the model. A model can only serve prediction requests after it gets deployed.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewConversationModel registers a new resource with the given unique name, arguments, and options.
func NewConversationModel(ctx *pulumi.Context,
	name string, args *ConversationModelArgs, opts ...pulumi.ResourceOption) (*ConversationModel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Datasets == nil {
		return nil, errors.New("invalid value for required argument 'Datasets'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	var resource ConversationModel
	err := ctx.RegisterResource("google-native:dialogflow/v2:ConversationModel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConversationModel gets an existing ConversationModel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConversationModel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConversationModelState, opts ...pulumi.ResourceOption) (*ConversationModel, error) {
	var resource ConversationModel
	err := ctx.ReadResource("google-native:dialogflow/v2:ConversationModel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConversationModel resources.
type conversationModelState struct {
}

type ConversationModelState struct {
}

func (ConversationModelState) ElementType() reflect.Type {
	return reflect.TypeOf((*conversationModelState)(nil)).Elem()
}

type conversationModelArgs struct {
	// Metadata for article suggestion models.
	ArticleSuggestionModelMetadata *GoogleCloudDialogflowV2ArticleSuggestionModelMetadata `pulumi:"articleSuggestionModelMetadata"`
	// Datasets used to create model.
	Datasets []GoogleCloudDialogflowV2InputDataset `pulumi:"datasets"`
	// The display name of the model. At most 64 bytes long.
	DisplayName string `pulumi:"displayName"`
	// Language code for the conversation model. If not specified, the language is en-US. Language at ConversationModel should be set for all non en-us languages. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
	LanguageCode *string `pulumi:"languageCode"`
	Location     *string `pulumi:"location"`
	// ConversationModel resource name. Format: `projects//conversationModels/`
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Metadata for smart reply models.
	SmartReplyModelMetadata *GoogleCloudDialogflowV2SmartReplyModelMetadata `pulumi:"smartReplyModelMetadata"`
}

// The set of arguments for constructing a ConversationModel resource.
type ConversationModelArgs struct {
	// Metadata for article suggestion models.
	ArticleSuggestionModelMetadata GoogleCloudDialogflowV2ArticleSuggestionModelMetadataPtrInput
	// Datasets used to create model.
	Datasets GoogleCloudDialogflowV2InputDatasetArrayInput
	// The display name of the model. At most 64 bytes long.
	DisplayName pulumi.StringInput
	// Language code for the conversation model. If not specified, the language is en-US. Language at ConversationModel should be set for all non en-us languages. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
	LanguageCode pulumi.StringPtrInput
	Location     pulumi.StringPtrInput
	// ConversationModel resource name. Format: `projects//conversationModels/`
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Metadata for smart reply models.
	SmartReplyModelMetadata GoogleCloudDialogflowV2SmartReplyModelMetadataPtrInput
}

func (ConversationModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*conversationModelArgs)(nil)).Elem()
}

type ConversationModelInput interface {
	pulumi.Input

	ToConversationModelOutput() ConversationModelOutput
	ToConversationModelOutputWithContext(ctx context.Context) ConversationModelOutput
}

func (*ConversationModel) ElementType() reflect.Type {
	return reflect.TypeOf((**ConversationModel)(nil)).Elem()
}

func (i *ConversationModel) ToConversationModelOutput() ConversationModelOutput {
	return i.ToConversationModelOutputWithContext(context.Background())
}

func (i *ConversationModel) ToConversationModelOutputWithContext(ctx context.Context) ConversationModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConversationModelOutput)
}

type ConversationModelOutput struct{ *pulumi.OutputState }

func (ConversationModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConversationModel)(nil)).Elem()
}

func (o ConversationModelOutput) ToConversationModelOutput() ConversationModelOutput {
	return o
}

func (o ConversationModelOutput) ToConversationModelOutputWithContext(ctx context.Context) ConversationModelOutput {
	return o
}

// Metadata for article suggestion models.
func (o ConversationModelOutput) ArticleSuggestionModelMetadata() GoogleCloudDialogflowV2ArticleSuggestionModelMetadataResponseOutput {
	return o.ApplyT(func(v *ConversationModel) GoogleCloudDialogflowV2ArticleSuggestionModelMetadataResponseOutput {
		return v.ArticleSuggestionModelMetadata
	}).(GoogleCloudDialogflowV2ArticleSuggestionModelMetadataResponseOutput)
}

// Creation time of this model.
func (o ConversationModelOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ConversationModel) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Datasets used to create model.
func (o ConversationModelOutput) Datasets() GoogleCloudDialogflowV2InputDatasetResponseArrayOutput {
	return o.ApplyT(func(v *ConversationModel) GoogleCloudDialogflowV2InputDatasetResponseArrayOutput { return v.Datasets }).(GoogleCloudDialogflowV2InputDatasetResponseArrayOutput)
}

// The display name of the model. At most 64 bytes long.
func (o ConversationModelOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ConversationModel) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Language code for the conversation model. If not specified, the language is en-US. Language at ConversationModel should be set for all non en-us languages. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
func (o ConversationModelOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v *ConversationModel) pulumi.StringOutput { return v.LanguageCode }).(pulumi.StringOutput)
}

func (o ConversationModelOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ConversationModel) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// ConversationModel resource name. Format: `projects//conversationModels/`
func (o ConversationModelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConversationModel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ConversationModelOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ConversationModel) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Metadata for smart reply models.
func (o ConversationModelOutput) SmartReplyModelMetadata() GoogleCloudDialogflowV2SmartReplyModelMetadataResponseOutput {
	return o.ApplyT(func(v *ConversationModel) GoogleCloudDialogflowV2SmartReplyModelMetadataResponseOutput {
		return v.SmartReplyModelMetadata
	}).(GoogleCloudDialogflowV2SmartReplyModelMetadataResponseOutput)
}

// State of the model. A model can only serve prediction requests after it gets deployed.
func (o ConversationModelOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ConversationModel) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConversationModelInput)(nil)).Elem(), &ConversationModel{})
	pulumi.RegisterOutputType(ConversationModelOutput{})
}
