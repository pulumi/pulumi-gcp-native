// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.
type AgentEnvironmentUserSessionEntityType struct {
	pulumi.CustomResourceState

	// Required. The collection of entities associated with this session entity type.
	Entities GoogleCloudDialogflowV2EntityTypeEntityResponseArrayOutput `pulumi:"entities"`
	// Required. Indicates whether the additional data should override or supplement the custom entity type definition.
	EntityOverrideMode pulumi.StringOutput `pulumi:"entityOverrideMode"`
	// Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewAgentEnvironmentUserSessionEntityType registers a new resource with the given unique name, arguments, and options.
func NewAgentEnvironmentUserSessionEntityType(ctx *pulumi.Context,
	name string, args *AgentEnvironmentUserSessionEntityTypeArgs, opts ...pulumi.ResourceOption) (*AgentEnvironmentUserSessionEntityType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.SessionId == nil {
		return nil, errors.New("invalid value for required argument 'SessionId'")
	}
	if args.UserId == nil {
		return nil, errors.New("invalid value for required argument 'UserId'")
	}
	var resource AgentEnvironmentUserSessionEntityType
	err := ctx.RegisterResource("google-native:dialogflow/v2:AgentEnvironmentUserSessionEntityType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgentEnvironmentUserSessionEntityType gets an existing AgentEnvironmentUserSessionEntityType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgentEnvironmentUserSessionEntityType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentEnvironmentUserSessionEntityTypeState, opts ...pulumi.ResourceOption) (*AgentEnvironmentUserSessionEntityType, error) {
	var resource AgentEnvironmentUserSessionEntityType
	err := ctx.ReadResource("google-native:dialogflow/v2:AgentEnvironmentUserSessionEntityType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AgentEnvironmentUserSessionEntityType resources.
type agentEnvironmentUserSessionEntityTypeState struct {
	// Required. The collection of entities associated with this session entity type.
	Entities []GoogleCloudDialogflowV2EntityTypeEntityResponse `pulumi:"entities"`
	// Required. Indicates whether the additional data should override or supplement the custom entity type definition.
	EntityOverrideMode *string `pulumi:"entityOverrideMode"`
	// Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.
	Name *string `pulumi:"name"`
}

type AgentEnvironmentUserSessionEntityTypeState struct {
	// Required. The collection of entities associated with this session entity type.
	Entities GoogleCloudDialogflowV2EntityTypeEntityResponseArrayInput
	// Required. Indicates whether the additional data should override or supplement the custom entity type definition.
	EntityOverrideMode pulumi.StringPtrInput
	// Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.
	Name pulumi.StringPtrInput
}

func (AgentEnvironmentUserSessionEntityTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentEnvironmentUserSessionEntityTypeState)(nil)).Elem()
}

type agentEnvironmentUserSessionEntityTypeArgs struct {
	// Required. The collection of entities associated with this session entity type.
	Entities []GoogleCloudDialogflowV2EntityTypeEntity `pulumi:"entities"`
	// Required. Indicates whether the additional data should override or supplement the custom entity type definition.
	EntityOverrideMode *string `pulumi:"entityOverrideMode"`
	EnvironmentId      string  `pulumi:"environmentId"`
	Location           string  `pulumi:"location"`
	// Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.
	Name      *string `pulumi:"name"`
	Project   string  `pulumi:"project"`
	SessionId string  `pulumi:"sessionId"`
	UserId    string  `pulumi:"userId"`
}

// The set of arguments for constructing a AgentEnvironmentUserSessionEntityType resource.
type AgentEnvironmentUserSessionEntityTypeArgs struct {
	// Required. The collection of entities associated with this session entity type.
	Entities GoogleCloudDialogflowV2EntityTypeEntityArrayInput
	// Required. Indicates whether the additional data should override or supplement the custom entity type definition.
	EntityOverrideMode pulumi.StringPtrInput
	EnvironmentId      pulumi.StringInput
	Location           pulumi.StringInput
	// Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.
	Name      pulumi.StringPtrInput
	Project   pulumi.StringInput
	SessionId pulumi.StringInput
	UserId    pulumi.StringInput
}

func (AgentEnvironmentUserSessionEntityTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentEnvironmentUserSessionEntityTypeArgs)(nil)).Elem()
}

type AgentEnvironmentUserSessionEntityTypeInput interface {
	pulumi.Input

	ToAgentEnvironmentUserSessionEntityTypeOutput() AgentEnvironmentUserSessionEntityTypeOutput
	ToAgentEnvironmentUserSessionEntityTypeOutputWithContext(ctx context.Context) AgentEnvironmentUserSessionEntityTypeOutput
}

func (*AgentEnvironmentUserSessionEntityType) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentEnvironmentUserSessionEntityType)(nil))
}

func (i *AgentEnvironmentUserSessionEntityType) ToAgentEnvironmentUserSessionEntityTypeOutput() AgentEnvironmentUserSessionEntityTypeOutput {
	return i.ToAgentEnvironmentUserSessionEntityTypeOutputWithContext(context.Background())
}

func (i *AgentEnvironmentUserSessionEntityType) ToAgentEnvironmentUserSessionEntityTypeOutputWithContext(ctx context.Context) AgentEnvironmentUserSessionEntityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentEnvironmentUserSessionEntityTypeOutput)
}

type AgentEnvironmentUserSessionEntityTypeOutput struct {
	*pulumi.OutputState
}

func (AgentEnvironmentUserSessionEntityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentEnvironmentUserSessionEntityType)(nil))
}

func (o AgentEnvironmentUserSessionEntityTypeOutput) ToAgentEnvironmentUserSessionEntityTypeOutput() AgentEnvironmentUserSessionEntityTypeOutput {
	return o
}

func (o AgentEnvironmentUserSessionEntityTypeOutput) ToAgentEnvironmentUserSessionEntityTypeOutputWithContext(ctx context.Context) AgentEnvironmentUserSessionEntityTypeOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AgentEnvironmentUserSessionEntityTypeOutput{})
}
