// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new conversation dataset. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: CreateConversationDatasetOperationMetadata - `response`: ConversationDataset
// Auto-naming is currently not supported for this resource.
type ConversationDataset struct {
	pulumi.CustomResourceState

	// The number of conversations this conversation dataset contains.
	ConversationCount pulumi.StringOutput `pulumi:"conversationCount"`
	// Metadata set during conversation data import.
	ConversationInfo GoogleCloudDialogflowV2ConversationInfoResponseOutput `pulumi:"conversationInfo"`
	// Creation time of this dataset.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. The description of the dataset. Maximum of 10000 bytes.
	Description pulumi.StringOutput `pulumi:"description"`
	// The display name of the dataset. Maximum of 64 bytes.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Input configurations set during conversation data import.
	InputConfig GoogleCloudDialogflowV2InputConfigResponseOutput `pulumi:"inputConfig"`
	Location    pulumi.StringOutput                              `pulumi:"location"`
	// ConversationDataset resource name. Format: `projects//locations//conversationDatasets/`
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewConversationDataset registers a new resource with the given unique name, arguments, and options.
func NewConversationDataset(ctx *pulumi.Context,
	name string, args *ConversationDatasetArgs, opts ...pulumi.ResourceOption) (*ConversationDataset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConversationDataset
	err := ctx.RegisterResource("google-native:dialogflow/v2:ConversationDataset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConversationDataset gets an existing ConversationDataset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConversationDataset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConversationDatasetState, opts ...pulumi.ResourceOption) (*ConversationDataset, error) {
	var resource ConversationDataset
	err := ctx.ReadResource("google-native:dialogflow/v2:ConversationDataset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConversationDataset resources.
type conversationDatasetState struct {
}

type ConversationDatasetState struct {
}

func (ConversationDatasetState) ElementType() reflect.Type {
	return reflect.TypeOf((*conversationDatasetState)(nil)).Elem()
}

type conversationDatasetArgs struct {
	// Optional. The description of the dataset. Maximum of 10000 bytes.
	Description *string `pulumi:"description"`
	// The display name of the dataset. Maximum of 64 bytes.
	DisplayName string  `pulumi:"displayName"`
	Location    *string `pulumi:"location"`
	Project     *string `pulumi:"project"`
}

// The set of arguments for constructing a ConversationDataset resource.
type ConversationDatasetArgs struct {
	// Optional. The description of the dataset. Maximum of 10000 bytes.
	Description pulumi.StringPtrInput
	// The display name of the dataset. Maximum of 64 bytes.
	DisplayName pulumi.StringInput
	Location    pulumi.StringPtrInput
	Project     pulumi.StringPtrInput
}

func (ConversationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*conversationDatasetArgs)(nil)).Elem()
}

type ConversationDatasetInput interface {
	pulumi.Input

	ToConversationDatasetOutput() ConversationDatasetOutput
	ToConversationDatasetOutputWithContext(ctx context.Context) ConversationDatasetOutput
}

func (*ConversationDataset) ElementType() reflect.Type {
	return reflect.TypeOf((**ConversationDataset)(nil)).Elem()
}

func (i *ConversationDataset) ToConversationDatasetOutput() ConversationDatasetOutput {
	return i.ToConversationDatasetOutputWithContext(context.Background())
}

func (i *ConversationDataset) ToConversationDatasetOutputWithContext(ctx context.Context) ConversationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConversationDatasetOutput)
}

func (i *ConversationDataset) ToOutput(ctx context.Context) pulumix.Output[*ConversationDataset] {
	return pulumix.Output[*ConversationDataset]{
		OutputState: i.ToConversationDatasetOutputWithContext(ctx).OutputState,
	}
}

type ConversationDatasetOutput struct{ *pulumi.OutputState }

func (ConversationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConversationDataset)(nil)).Elem()
}

func (o ConversationDatasetOutput) ToConversationDatasetOutput() ConversationDatasetOutput {
	return o
}

func (o ConversationDatasetOutput) ToConversationDatasetOutputWithContext(ctx context.Context) ConversationDatasetOutput {
	return o
}

func (o ConversationDatasetOutput) ToOutput(ctx context.Context) pulumix.Output[*ConversationDataset] {
	return pulumix.Output[*ConversationDataset]{
		OutputState: o.OutputState,
	}
}

// The number of conversations this conversation dataset contains.
func (o ConversationDatasetOutput) ConversationCount() pulumi.StringOutput {
	return o.ApplyT(func(v *ConversationDataset) pulumi.StringOutput { return v.ConversationCount }).(pulumi.StringOutput)
}

// Metadata set during conversation data import.
func (o ConversationDatasetOutput) ConversationInfo() GoogleCloudDialogflowV2ConversationInfoResponseOutput {
	return o.ApplyT(func(v *ConversationDataset) GoogleCloudDialogflowV2ConversationInfoResponseOutput {
		return v.ConversationInfo
	}).(GoogleCloudDialogflowV2ConversationInfoResponseOutput)
}

// Creation time of this dataset.
func (o ConversationDatasetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ConversationDataset) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. The description of the dataset. Maximum of 10000 bytes.
func (o ConversationDatasetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ConversationDataset) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The display name of the dataset. Maximum of 64 bytes.
func (o ConversationDatasetOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ConversationDataset) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Input configurations set during conversation data import.
func (o ConversationDatasetOutput) InputConfig() GoogleCloudDialogflowV2InputConfigResponseOutput {
	return o.ApplyT(func(v *ConversationDataset) GoogleCloudDialogflowV2InputConfigResponseOutput { return v.InputConfig }).(GoogleCloudDialogflowV2InputConfigResponseOutput)
}

func (o ConversationDatasetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ConversationDataset) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// ConversationDataset resource name. Format: `projects//locations//conversationDatasets/`
func (o ConversationDatasetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConversationDataset) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ConversationDatasetOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ConversationDataset) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConversationDatasetInput)(nil)).Elem(), &ConversationDataset{})
	pulumi.RegisterOutputType(ConversationDatasetOutput{})
}
