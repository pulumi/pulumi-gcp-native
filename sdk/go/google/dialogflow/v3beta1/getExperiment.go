// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the specified Experiment.
func LookupExperiment(ctx *pulumi.Context, args *LookupExperimentArgs, opts ...pulumi.InvokeOption) (*LookupExperimentResult, error) {
	var rv LookupExperimentResult
	err := ctx.Invoke("google-native:dialogflow/v3beta1:getExperiment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupExperimentArgs struct {
	AgentId       string  `pulumi:"agentId"`
	EnvironmentId string  `pulumi:"environmentId"`
	ExperimentId  string  `pulumi:"experimentId"`
	Location      string  `pulumi:"location"`
	Project       *string `pulumi:"project"`
}

type LookupExperimentResult struct {
	// Creation time of this experiment.
	CreateTime string `pulumi:"createTime"`
	// The definition of the experiment.
	Definition GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse `pulumi:"definition"`
	// The human-readable description of the experiment.
	Description string `pulumi:"description"`
	// The human-readable name of the experiment (unique in an environment). Limit of 64 characters.
	DisplayName string `pulumi:"displayName"`
	// End time of this experiment.
	EndTime string `pulumi:"endTime"`
	// Maximum number of days to run the experiment. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.
	ExperimentLength string `pulumi:"experimentLength"`
	// Last update time of this experiment.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// The name of the experiment. Format: projects//locations//agents//environments//experiments/..
	Name string `pulumi:"name"`
	// Inference result of the experiment.
	Result GoogleCloudDialogflowCxV3beta1ExperimentResultResponse `pulumi:"result"`
	// The configuration for auto rollout. If set, there should be exactly two variants in the experiment (control variant being the default version of the flow), the traffic allocation for the non-control variant will gradually increase to 100% when conditions are met, and eventually replace the control variant to become the default version of the flow.
	RolloutConfig GoogleCloudDialogflowCxV3beta1RolloutConfigResponse `pulumi:"rolloutConfig"`
	// The reason why rollout has failed. Should only be set when state is ROLLOUT_FAILED.
	RolloutFailureReason string `pulumi:"rolloutFailureReason"`
	// State of the auto rollout process.
	RolloutState GoogleCloudDialogflowCxV3beta1RolloutStateResponse `pulumi:"rolloutState"`
	// Start time of this experiment.
	StartTime string `pulumi:"startTime"`
	// The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT->RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT->DONE or RUNNING->DONE.
	State string `pulumi:"state"`
	// The history of updates to the experiment variants.
	VariantsHistory []GoogleCloudDialogflowCxV3beta1VariantsHistoryResponse `pulumi:"variantsHistory"`
}

func LookupExperimentOutput(ctx *pulumi.Context, args LookupExperimentOutputArgs, opts ...pulumi.InvokeOption) LookupExperimentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupExperimentResult, error) {
			args := v.(LookupExperimentArgs)
			r, err := LookupExperiment(ctx, &args, opts...)
			var s LookupExperimentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupExperimentResultOutput)
}

type LookupExperimentOutputArgs struct {
	AgentId       pulumi.StringInput    `pulumi:"agentId"`
	EnvironmentId pulumi.StringInput    `pulumi:"environmentId"`
	ExperimentId  pulumi.StringInput    `pulumi:"experimentId"`
	Location      pulumi.StringInput    `pulumi:"location"`
	Project       pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupExperimentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExperimentArgs)(nil)).Elem()
}

type LookupExperimentResultOutput struct{ *pulumi.OutputState }

func (LookupExperimentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExperimentResult)(nil)).Elem()
}

func (o LookupExperimentResultOutput) ToLookupExperimentResultOutput() LookupExperimentResultOutput {
	return o
}

func (o LookupExperimentResultOutput) ToLookupExperimentResultOutputWithContext(ctx context.Context) LookupExperimentResultOutput {
	return o
}

// Creation time of this experiment.
func (o LookupExperimentResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The definition of the experiment.
func (o LookupExperimentResultOutput) Definition() GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponseOutput {
	return o.ApplyT(func(v LookupExperimentResult) GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse {
		return v.Definition
	}).(GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponseOutput)
}

// The human-readable description of the experiment.
func (o LookupExperimentResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.Description }).(pulumi.StringOutput)
}

// The human-readable name of the experiment (unique in an environment). Limit of 64 characters.
func (o LookupExperimentResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// End time of this experiment.
func (o LookupExperimentResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.EndTime }).(pulumi.StringOutput)
}

// Maximum number of days to run the experiment. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.
func (o LookupExperimentResultOutput) ExperimentLength() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.ExperimentLength }).(pulumi.StringOutput)
}

// Last update time of this experiment.
func (o LookupExperimentResultOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// The name of the experiment. Format: projects//locations//agents//environments//experiments/..
func (o LookupExperimentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.Name }).(pulumi.StringOutput)
}

// Inference result of the experiment.
func (o LookupExperimentResultOutput) Result() GoogleCloudDialogflowCxV3beta1ExperimentResultResponseOutput {
	return o.ApplyT(func(v LookupExperimentResult) GoogleCloudDialogflowCxV3beta1ExperimentResultResponse { return v.Result }).(GoogleCloudDialogflowCxV3beta1ExperimentResultResponseOutput)
}

// The configuration for auto rollout. If set, there should be exactly two variants in the experiment (control variant being the default version of the flow), the traffic allocation for the non-control variant will gradually increase to 100% when conditions are met, and eventually replace the control variant to become the default version of the flow.
func (o LookupExperimentResultOutput) RolloutConfig() GoogleCloudDialogflowCxV3beta1RolloutConfigResponseOutput {
	return o.ApplyT(func(v LookupExperimentResult) GoogleCloudDialogflowCxV3beta1RolloutConfigResponse {
		return v.RolloutConfig
	}).(GoogleCloudDialogflowCxV3beta1RolloutConfigResponseOutput)
}

// The reason why rollout has failed. Should only be set when state is ROLLOUT_FAILED.
func (o LookupExperimentResultOutput) RolloutFailureReason() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.RolloutFailureReason }).(pulumi.StringOutput)
}

// State of the auto rollout process.
func (o LookupExperimentResultOutput) RolloutState() GoogleCloudDialogflowCxV3beta1RolloutStateResponseOutput {
	return o.ApplyT(func(v LookupExperimentResult) GoogleCloudDialogflowCxV3beta1RolloutStateResponse {
		return v.RolloutState
	}).(GoogleCloudDialogflowCxV3beta1RolloutStateResponseOutput)
}

// Start time of this experiment.
func (o LookupExperimentResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.StartTime }).(pulumi.StringOutput)
}

// The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT->RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT->DONE or RUNNING->DONE.
func (o LookupExperimentResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.State }).(pulumi.StringOutput)
}

// The history of updates to the experiment variants.
func (o LookupExperimentResultOutput) VariantsHistory() GoogleCloudDialogflowCxV3beta1VariantsHistoryResponseArrayOutput {
	return o.ApplyT(func(v LookupExperimentResult) []GoogleCloudDialogflowCxV3beta1VariantsHistoryResponse {
		return v.VariantsHistory
	}).(GoogleCloudDialogflowCxV3beta1VariantsHistoryResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExperimentResultOutput{})
}
