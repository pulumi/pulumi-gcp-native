// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v3beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Indicates whether the entity type can be automatically expanded.
type EntityTypeAutoExpansionMode pulumi.String

const (
	// Auto expansion disabled for the entity.
	EntityTypeAutoExpansionModeAutoExpansionModeUnspecified = EntityTypeAutoExpansionMode("AUTO_EXPANSION_MODE_UNSPECIFIED")
	// Allows an agent to recognize values that have not been explicitly listed in the entity.
	EntityTypeAutoExpansionModeAutoExpansionModeDefault = EntityTypeAutoExpansionMode("AUTO_EXPANSION_MODE_DEFAULT")
)

func (EntityTypeAutoExpansionMode) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e EntityTypeAutoExpansionMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EntityTypeAutoExpansionMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EntityTypeAutoExpansionMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EntityTypeAutoExpansionMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. Indicates the kind of entity type.
type EntityTypeKind pulumi.String

const (
	// Not specified. This value should be never used.
	EntityTypeKindKindUnspecified = EntityTypeKind("KIND_UNSPECIFIED")
	// Map entity types allow mapping of a group of synonyms to a canonical value.
	EntityTypeKindKindMap = EntityTypeKind("KIND_MAP")
	// List entity types contain a set of entries that do not map to canonical values. However, list entity types can contain references to other entity types (with or without aliases).
	EntityTypeKindKindList = EntityTypeKind("KIND_LIST")
	// Regexp entity types allow to specify regular expressions in entries values.
	EntityTypeKindKindRegexp = EntityTypeKind("KIND_REGEXP")
)

func (EntityTypeKind) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e EntityTypeKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EntityTypeKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EntityTypeKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EntityTypeKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT->RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT->DONE or RUNNING->DONE.
type ExperimentStateEnum pulumi.String

const (
	// State unspecified.
	ExperimentStateEnumStateUnspecified = ExperimentStateEnum("STATE_UNSPECIFIED")
	// The experiment is created but not started yet.
	ExperimentStateEnumDraft = ExperimentStateEnum("DRAFT")
	// The experiment is running.
	ExperimentStateEnumRunning = ExperimentStateEnum("RUNNING")
	// The experiment is done.
	ExperimentStateEnumDone = ExperimentStateEnum("DONE")
	// The experiment with auto-rollout enabled has failed.
	ExperimentStateEnumRolloutFailed = ExperimentStateEnum("ROLLOUT_FAILED")
)

func (ExperimentStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ExperimentStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExperimentStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExperimentStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExperimentStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Count-based metric type. Only one of type or count_type is specified in each Metric.
type GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType pulumi.String

const (
	// Count type unspecified.
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeCountTypeUnspecified = GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType("COUNT_TYPE_UNSPECIFIED")
	// Total number of occurrences of a 'NO_MATCH'.
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeTotalNoMatchCount = GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType("TOTAL_NO_MATCH_COUNT")
	// Total number of turn counts.
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeTotalTurnCount = GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType("TOTAL_TURN_COUNT")
	// Average turn count in a session.
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeAverageTurnCount = GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType("AVERAGE_TURN_COUNT")
)

func (GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Ratio-based metric type. Only one of type or count_type is specified in each Metric.
type GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType pulumi.String

const (
	// Metric unspecified.
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeMetricUnspecified = GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType("METRIC_UNSPECIFIED")
	// Percentage of contained sessions without user calling back in 24 hours.
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeContainedSessionNoCallbackRate = GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType("CONTAINED_SESSION_NO_CALLBACK_RATE")
	// Percentage of sessions that were handed to a human agent.
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeLiveAgentHandoffRate = GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType("LIVE_AGENT_HANDOFF_RATE")
	// Percentage of sessions with the same user calling back.
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeCallbackSessionRate = GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType("CALLBACK_SESSION_RATE")
	// Percentage of sessions where user hung up.
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeAbandonedSessionRate = GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType("ABANDONED_SESSION_RATE")
	// Percentage of sessions reached Dialogflow 'END_PAGE' or 'END_SESSION'.
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeSessionEndRate = GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType("SESSION_END_RATE")
)

func (GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. Audio encoding of the audio content to process.
type GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding pulumi.String

const (
	// Not specified.
	GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncodingAudioEncodingUnspecified = GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_UNSPECIFIED")
	// Uncompressed 16-bit signed little-endian samples (Linear PCM).
	GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncodingAudioEncodingLinear16 = GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_LINEAR_16")
	// [`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio Codec) is the recommended encoding because it is lossless (therefore recognition is not compromised) and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.
	GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncodingAudioEncodingFlac = GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_FLAC")
	// 8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.
	GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncodingAudioEncodingMulaw = GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_MULAW")
	// Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.
	GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncodingAudioEncodingAmr = GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_AMR")
	// Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.
	GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncodingAudioEncodingAmrWb = GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_AMR_WB")
	// Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be 16000.
	GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncodingAudioEncodingOggOpus = GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_OGG_OPUS")
	// Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000.
	GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncodingAudioEncodingSpeexWithHeaderByte = GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE")
)

func (GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Optional. Which variant of the Speech model to use.
type GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant pulumi.String

const (
	// No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.
	GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariantSpeechModelVariantUnspecified = GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant("SPEECH_MODEL_VARIANT_UNSPECIFIED")
	// Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.
	GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariantUseBestAvailable = GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant("USE_BEST_AVAILABLE")
	// Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.
	GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariantUseStandard = GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant("USE_STANDARD")
	// Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible.
	GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariantUseEnhanced = GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant("USE_ENHANCED")
)

func (GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Indicates NLU model training mode.
type GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode pulumi.String

const (
	// Not specified. `MODEL_TRAINING_MODE_AUTOMATIC` will be used.
	GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingModeModelTrainingModeUnspecified = GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode("MODEL_TRAINING_MODE_UNSPECIFIED")
	// NLU model training is automatically triggered when a flow gets modified. User can also manually trigger model training in this mode.
	GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingModeModelTrainingModeAutomatic = GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode("MODEL_TRAINING_MODE_AUTOMATIC")
	// User needs to manually trigger NLU model training. Best for large flows whose models take long time to train.
	GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingModeModelTrainingModeManual = GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode("MODEL_TRAINING_MODE_MANUAL")
)

func (GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Indicates the type of NLU model.
type GoogleCloudDialogflowCxV3beta1NluSettingsModelType pulumi.String

const (
	// Not specified. `MODEL_TYPE_STANDARD` will be used.
	GoogleCloudDialogflowCxV3beta1NluSettingsModelTypeModelTypeUnspecified = GoogleCloudDialogflowCxV3beta1NluSettingsModelType("MODEL_TYPE_UNSPECIFIED")
	// Use standard NLU model.
	GoogleCloudDialogflowCxV3beta1NluSettingsModelTypeModelTypeStandard = GoogleCloudDialogflowCxV3beta1NluSettingsModelType("MODEL_TYPE_STANDARD")
	// Use advanced NLU model.
	GoogleCloudDialogflowCxV3beta1NluSettingsModelTypeModelTypeAdvanced = GoogleCloudDialogflowCxV3beta1NluSettingsModelType("MODEL_TYPE_ADVANCED")
)

func (GoogleCloudDialogflowCxV3beta1NluSettingsModelType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDialogflowCxV3beta1NluSettingsModelType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDialogflowCxV3beta1NluSettingsModelType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDialogflowCxV3beta1NluSettingsModelType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDialogflowCxV3beta1NluSettingsModelType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Whether the test case passed in the agent environment.
type GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult pulumi.String

const (
	// Not specified. Should never be used.
	GoogleCloudDialogflowCxV3beta1TestCaseResultTestResultTestResultUnspecified = GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult("TEST_RESULT_UNSPECIFIED")
	// The test passed.
	GoogleCloudDialogflowCxV3beta1TestCaseResultTestResultPassed = GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult("PASSED")
	// The test did not pass.
	GoogleCloudDialogflowCxV3beta1TestCaseResultTestResultFailed = GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult("FAILED")
)

func (GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecuritySettingPurgeDataTypesItem pulumi.String

const (
	// Unspecified. Do not use.
	SecuritySettingPurgeDataTypesItemPurgeDataTypeUnspecified = SecuritySettingPurgeDataTypesItem("PURGE_DATA_TYPE_UNSPECIFIED")
	// Dialogflow history. This does not include Cloud logging, which is owned by the user - not Dialogflow.
	SecuritySettingPurgeDataTypesItemDialogflowHistory = SecuritySettingPurgeDataTypesItem("DIALOGFLOW_HISTORY")
)

func (SecuritySettingPurgeDataTypesItem) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SecuritySettingPurgeDataTypesItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecuritySettingPurgeDataTypesItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecuritySettingPurgeDataTypesItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecuritySettingPurgeDataTypesItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// SecuritySettingPurgeDataTypesItemArrayInput is an input type that accepts SecuritySettingPurgeDataTypesItemArray and SecuritySettingPurgeDataTypesItemArrayOutput values.
// You can construct a concrete instance of `SecuritySettingPurgeDataTypesItemArrayInput` via:
//
//          SecuritySettingPurgeDataTypesItemArray{ SecuritySettingPurgeDataTypesItemArgs{...} }
type SecuritySettingPurgeDataTypesItemArrayInput interface {
	pulumi.Input

	ToSecuritySettingPurgeDataTypesItemArrayOutput() SecuritySettingPurgeDataTypesItemArrayOutput
	ToSecuritySettingPurgeDataTypesItemArrayOutputWithContext(context.Context) SecuritySettingPurgeDataTypesItemArrayOutput
}

type SecuritySettingPurgeDataTypesItemArray []SecuritySettingPurgeDataTypesItem

func (SecuritySettingPurgeDataTypesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritySettingPurgeDataTypesItem)(nil)).Elem()
}

func (i SecuritySettingPurgeDataTypesItemArray) ToSecuritySettingPurgeDataTypesItemArrayOutput() SecuritySettingPurgeDataTypesItemArrayOutput {
	return i.ToSecuritySettingPurgeDataTypesItemArrayOutputWithContext(context.Background())
}

func (i SecuritySettingPurgeDataTypesItemArray) ToSecuritySettingPurgeDataTypesItemArrayOutputWithContext(ctx context.Context) SecuritySettingPurgeDataTypesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySettingPurgeDataTypesItemArrayOutput)
}

type SecuritySettingPurgeDataTypesItemArrayOutput struct{ *pulumi.OutputState }

func (SecuritySettingPurgeDataTypesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritySettingPurgeDataTypesItem)(nil)).Elem()
}

func (o SecuritySettingPurgeDataTypesItemArrayOutput) ToSecuritySettingPurgeDataTypesItemArrayOutput() SecuritySettingPurgeDataTypesItemArrayOutput {
	return o
}

func (o SecuritySettingPurgeDataTypesItemArrayOutput) ToSecuritySettingPurgeDataTypesItemArrayOutputWithContext(ctx context.Context) SecuritySettingPurgeDataTypesItemArrayOutput {
	return o
}

func (o SecuritySettingPurgeDataTypesItemArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]SecuritySettingPurgeDataTypesItem)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}

// Defines the data for which Dialogflow applies redaction. Dialogflow does not redact data that it does not have access to – for example, Cloud logging.
type SecuritySettingRedactionScope pulumi.String

const (
	// Don't redact any kind of data.
	SecuritySettingRedactionScopeRedactionScopeUnspecified = SecuritySettingRedactionScope("REDACTION_SCOPE_UNSPECIFIED")
	// On data to be written to disk or similar devices that are capable of holding data even if power is disconnected. This includes data that are temporarily saved on disk.
	SecuritySettingRedactionScopeRedactDiskStorage = SecuritySettingRedactionScope("REDACT_DISK_STORAGE")
)

func (SecuritySettingRedactionScope) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SecuritySettingRedactionScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecuritySettingRedactionScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecuritySettingRedactionScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecuritySettingRedactionScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Strategy that defines how we do redaction.
type SecuritySettingRedactionStrategy pulumi.String

const (
	// Do not redact.
	SecuritySettingRedactionStrategyRedactionStrategyUnspecified = SecuritySettingRedactionStrategy("REDACTION_STRATEGY_UNSPECIFIED")
	// Call redaction service to clean up the data to be persisted.
	SecuritySettingRedactionStrategyRedactWithService = SecuritySettingRedactionStrategy("REDACT_WITH_SERVICE")
)

func (SecuritySettingRedactionStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SecuritySettingRedactionStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecuritySettingRedactionStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecuritySettingRedactionStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecuritySettingRedactionStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. Indicates whether the additional data should override or supplement the custom entity type definition.
type SessionEntityTypeEntityOverrideMode pulumi.String

const (
	// Not specified. This value should be never used.
	SessionEntityTypeEntityOverrideModeEntityOverrideModeUnspecified = SessionEntityTypeEntityOverrideMode("ENTITY_OVERRIDE_MODE_UNSPECIFIED")
	// The collection of session entities overrides the collection of entities in the corresponding custom entity type.
	SessionEntityTypeEntityOverrideModeEntityOverrideModeOverride = SessionEntityTypeEntityOverrideMode("ENTITY_OVERRIDE_MODE_OVERRIDE")
	// The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge.
	SessionEntityTypeEntityOverrideModeEntityOverrideModeSupplement = SessionEntityTypeEntityOverrideMode("ENTITY_OVERRIDE_MODE_SUPPLEMENT")
)

func (SessionEntityTypeEntityOverrideMode) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SessionEntityTypeEntityOverrideMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SessionEntityTypeEntityOverrideMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SessionEntityTypeEntityOverrideMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SessionEntityTypeEntityOverrideMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
