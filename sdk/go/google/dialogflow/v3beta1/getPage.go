// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the specified page.
func LookupPage(ctx *pulumi.Context, args *LookupPageArgs, opts ...pulumi.InvokeOption) (*LookupPageResult, error) {
	var rv LookupPageResult
	err := ctx.Invoke("google-native:dialogflow/v3beta1:getPage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPageArgs struct {
	AgentId      string  `pulumi:"agentId"`
	FlowId       string  `pulumi:"flowId"`
	LanguageCode *string `pulumi:"languageCode"`
	Location     string  `pulumi:"location"`
	PageId       string  `pulumi:"pageId"`
	Project      *string `pulumi:"project"`
}

type LookupPageResult struct {
	// The human-readable name of the page, unique within the flow.
	DisplayName string `pulumi:"displayName"`
	// The fulfillment to call when the session is entering the page.
	EntryFulfillment GoogleCloudDialogflowCxV3beta1FulfillmentResponse `pulumi:"entryFulfillment"`
	// Handlers associated with the page to handle events such as webhook errors, no match or no input.
	EventHandlers []GoogleCloudDialogflowCxV3beta1EventHandlerResponse `pulumi:"eventHandlers"`
	// The form associated with the page, used for collecting parameters relevant to the page.
	Form GoogleCloudDialogflowCxV3beta1FormResponse `pulumi:"form"`
	// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.
	Name string `pulumi:"name"`
	// Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`.
	TransitionRouteGroups []string `pulumi:"transitionRouteGroups"`
	// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
	TransitionRoutes []GoogleCloudDialogflowCxV3beta1TransitionRouteResponse `pulumi:"transitionRoutes"`
}

func LookupPageOutput(ctx *pulumi.Context, args LookupPageOutputArgs, opts ...pulumi.InvokeOption) LookupPageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPageResult, error) {
			args := v.(LookupPageArgs)
			r, err := LookupPage(ctx, &args, opts...)
			var s LookupPageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPageResultOutput)
}

type LookupPageOutputArgs struct {
	AgentId      pulumi.StringInput    `pulumi:"agentId"`
	FlowId       pulumi.StringInput    `pulumi:"flowId"`
	LanguageCode pulumi.StringPtrInput `pulumi:"languageCode"`
	Location     pulumi.StringInput    `pulumi:"location"`
	PageId       pulumi.StringInput    `pulumi:"pageId"`
	Project      pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupPageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPageArgs)(nil)).Elem()
}

type LookupPageResultOutput struct{ *pulumi.OutputState }

func (LookupPageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPageResult)(nil)).Elem()
}

func (o LookupPageResultOutput) ToLookupPageResultOutput() LookupPageResultOutput {
	return o
}

func (o LookupPageResultOutput) ToLookupPageResultOutputWithContext(ctx context.Context) LookupPageResultOutput {
	return o
}

// The human-readable name of the page, unique within the flow.
func (o LookupPageResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The fulfillment to call when the session is entering the page.
func (o LookupPageResultOutput) EntryFulfillment() GoogleCloudDialogflowCxV3beta1FulfillmentResponseOutput {
	return o.ApplyT(func(v LookupPageResult) GoogleCloudDialogflowCxV3beta1FulfillmentResponse { return v.EntryFulfillment }).(GoogleCloudDialogflowCxV3beta1FulfillmentResponseOutput)
}

// Handlers associated with the page to handle events such as webhook errors, no match or no input.
func (o LookupPageResultOutput) EventHandlers() GoogleCloudDialogflowCxV3beta1EventHandlerResponseArrayOutput {
	return o.ApplyT(func(v LookupPageResult) []GoogleCloudDialogflowCxV3beta1EventHandlerResponse { return v.EventHandlers }).(GoogleCloudDialogflowCxV3beta1EventHandlerResponseArrayOutput)
}

// The form associated with the page, used for collecting parameters relevant to the page.
func (o LookupPageResultOutput) Form() GoogleCloudDialogflowCxV3beta1FormResponseOutput {
	return o.ApplyT(func(v LookupPageResult) GoogleCloudDialogflowCxV3beta1FormResponse { return v.Form }).(GoogleCloudDialogflowCxV3beta1FormResponseOutput)
}

// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.
func (o LookupPageResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPageResult) string { return v.Name }).(pulumi.StringOutput)
}

// Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`.
func (o LookupPageResultOutput) TransitionRouteGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPageResult) []string { return v.TransitionRouteGroups }).(pulumi.StringArrayOutput)
}

// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
func (o LookupPageResultOutput) TransitionRoutes() GoogleCloudDialogflowCxV3beta1TransitionRouteResponseArrayOutput {
	return o.ApplyT(func(v LookupPageResult) []GoogleCloudDialogflowCxV3beta1TransitionRouteResponse {
		return v.TransitionRoutes
	}).(GoogleCloudDialogflowCxV3beta1TransitionRouteResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPageResultOutput{})
}
