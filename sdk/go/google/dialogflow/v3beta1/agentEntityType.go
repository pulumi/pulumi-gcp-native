// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v3beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an entity type in the specified agent.
type AgentEntityType struct {
	pulumi.CustomResourceState

	// Indicates whether the entity type can be automatically expanded.
	AutoExpansionMode pulumi.StringOutput `pulumi:"autoExpansionMode"`
	// Required. The human-readable name of the entity type, unique within the agent.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction pulumi.BoolOutput `pulumi:"enableFuzzyExtraction"`
	// The collection of entity entries associated with the entity type.
	Entities GoogleCloudDialogflowCxV3beta1EntityTypeEntityResponseArrayOutput `pulumi:"entities"`
	// Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
	ExcludedPhrases GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseResponseArrayOutput `pulumi:"excludedPhrases"`
	// Required. Indicates the kind of entity type.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
	Name pulumi.StringOutput `pulumi:"name"`
	// Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name during logging.
	Redact pulumi.BoolOutput `pulumi:"redact"`
}

// NewAgentEntityType registers a new resource with the given unique name, arguments, and options.
func NewAgentEntityType(ctx *pulumi.Context,
	name string, args *AgentEntityTypeArgs, opts ...pulumi.ResourceOption) (*AgentEntityType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentsId == nil {
		return nil, errors.New("invalid value for required argument 'AgentsId'")
	}
	if args.EntityTypesId == nil {
		return nil, errors.New("invalid value for required argument 'EntityTypesId'")
	}
	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	var resource AgentEntityType
	err := ctx.RegisterResource("google-native:dialogflow/v3beta1:AgentEntityType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgentEntityType gets an existing AgentEntityType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgentEntityType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentEntityTypeState, opts ...pulumi.ResourceOption) (*AgentEntityType, error) {
	var resource AgentEntityType
	err := ctx.ReadResource("google-native:dialogflow/v3beta1:AgentEntityType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AgentEntityType resources.
type agentEntityTypeState struct {
	// Indicates whether the entity type can be automatically expanded.
	AutoExpansionMode *string `pulumi:"autoExpansionMode"`
	// Required. The human-readable name of the entity type, unique within the agent.
	DisplayName *string `pulumi:"displayName"`
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction *bool `pulumi:"enableFuzzyExtraction"`
	// The collection of entity entries associated with the entity type.
	Entities []GoogleCloudDialogflowCxV3beta1EntityTypeEntityResponse `pulumi:"entities"`
	// Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
	ExcludedPhrases []GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseResponse `pulumi:"excludedPhrases"`
	// Required. Indicates the kind of entity type.
	Kind *string `pulumi:"kind"`
	// The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
	Name *string `pulumi:"name"`
	// Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name during logging.
	Redact *bool `pulumi:"redact"`
}

type AgentEntityTypeState struct {
	// Indicates whether the entity type can be automatically expanded.
	AutoExpansionMode pulumi.StringPtrInput
	// Required. The human-readable name of the entity type, unique within the agent.
	DisplayName pulumi.StringPtrInput
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction pulumi.BoolPtrInput
	// The collection of entity entries associated with the entity type.
	Entities GoogleCloudDialogflowCxV3beta1EntityTypeEntityResponseArrayInput
	// Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
	ExcludedPhrases GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseResponseArrayInput
	// Required. Indicates the kind of entity type.
	Kind pulumi.StringPtrInput
	// The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
	Name pulumi.StringPtrInput
	// Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name during logging.
	Redact pulumi.BoolPtrInput
}

func (AgentEntityTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentEntityTypeState)(nil)).Elem()
}

type agentEntityTypeArgs struct {
	AgentsId string `pulumi:"agentsId"`
	// Indicates whether the entity type can be automatically expanded.
	AutoExpansionMode *string `pulumi:"autoExpansionMode"`
	// Required. The human-readable name of the entity type, unique within the agent.
	DisplayName *string `pulumi:"displayName"`
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction *bool `pulumi:"enableFuzzyExtraction"`
	// The collection of entity entries associated with the entity type.
	Entities      []GoogleCloudDialogflowCxV3beta1EntityTypeEntity `pulumi:"entities"`
	EntityTypesId string                                           `pulumi:"entityTypesId"`
	// Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
	ExcludedPhrases []GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhrase `pulumi:"excludedPhrases"`
	// Required. Indicates the kind of entity type.
	Kind         *string `pulumi:"kind"`
	LanguageCode *string `pulumi:"languageCode"`
	LocationsId  string  `pulumi:"locationsId"`
	// The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
	Name       *string `pulumi:"name"`
	ProjectsId string  `pulumi:"projectsId"`
	// Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name during logging.
	Redact *bool `pulumi:"redact"`
}

// The set of arguments for constructing a AgentEntityType resource.
type AgentEntityTypeArgs struct {
	AgentsId pulumi.StringInput
	// Indicates whether the entity type can be automatically expanded.
	AutoExpansionMode pulumi.StringPtrInput
	// Required. The human-readable name of the entity type, unique within the agent.
	DisplayName pulumi.StringPtrInput
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction pulumi.BoolPtrInput
	// The collection of entity entries associated with the entity type.
	Entities      GoogleCloudDialogflowCxV3beta1EntityTypeEntityArrayInput
	EntityTypesId pulumi.StringInput
	// Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
	ExcludedPhrases GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArrayInput
	// Required. Indicates the kind of entity type.
	Kind         pulumi.StringPtrInput
	LanguageCode pulumi.StringPtrInput
	LocationsId  pulumi.StringInput
	// The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
	Name       pulumi.StringPtrInput
	ProjectsId pulumi.StringInput
	// Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name during logging.
	Redact pulumi.BoolPtrInput
}

func (AgentEntityTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentEntityTypeArgs)(nil)).Elem()
}

type AgentEntityTypeInput interface {
	pulumi.Input

	ToAgentEntityTypeOutput() AgentEntityTypeOutput
	ToAgentEntityTypeOutputWithContext(ctx context.Context) AgentEntityTypeOutput
}

func (*AgentEntityType) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentEntityType)(nil))
}

func (i *AgentEntityType) ToAgentEntityTypeOutput() AgentEntityTypeOutput {
	return i.ToAgentEntityTypeOutputWithContext(context.Background())
}

func (i *AgentEntityType) ToAgentEntityTypeOutputWithContext(ctx context.Context) AgentEntityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentEntityTypeOutput)
}

type AgentEntityTypeOutput struct {
	*pulumi.OutputState
}

func (AgentEntityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentEntityType)(nil))
}

func (o AgentEntityTypeOutput) ToAgentEntityTypeOutput() AgentEntityTypeOutput {
	return o
}

func (o AgentEntityTypeOutput) ToAgentEntityTypeOutputWithContext(ctx context.Context) AgentEntityTypeOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AgentEntityTypeOutput{})
}
