// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3beta1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an Environment in the specified Agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: Environment
type Environment struct {
	pulumi.CustomResourceState

	AgentId pulumi.StringOutput `pulumi:"agentId"`
	// The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description pulumi.StringOutput `pulumi:"description"`
	// The human-readable name of the environment (unique in an agent). Limit of 64 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	Location    pulumi.StringOutput `pulumi:"location"`
	// The name of the environment. Format: `projects//locations//agents//environments/`.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The test cases config for continuous tests of this environment.
	TestCasesConfig GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfigResponseOutput `pulumi:"testCasesConfig"`
	// Update time of this environment.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned.
	VersionConfigs GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponseArrayOutput `pulumi:"versionConfigs"`
	// The webhook configuration for this environment.
	WebhookConfig GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfigResponseOutput `pulumi:"webhookConfig"`
}

// NewEnvironment registers a new resource with the given unique name, arguments, and options.
func NewEnvironment(ctx *pulumi.Context,
	name string, args *EnvironmentArgs, opts ...pulumi.ResourceOption) (*Environment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentId == nil {
		return nil, errors.New("invalid value for required argument 'AgentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.VersionConfigs == nil {
		return nil, errors.New("invalid value for required argument 'VersionConfigs'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"agentId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	var resource Environment
	err := ctx.RegisterResource("google-native:dialogflow/v3beta1:Environment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironment gets an existing Environment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentState, opts ...pulumi.ResourceOption) (*Environment, error) {
	var resource Environment
	err := ctx.ReadResource("google-native:dialogflow/v3beta1:Environment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Environment resources.
type environmentState struct {
}

type EnvironmentState struct {
}

func (EnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentState)(nil)).Elem()
}

type environmentArgs struct {
	AgentId string `pulumi:"agentId"`
	// The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description *string `pulumi:"description"`
	// The human-readable name of the environment (unique in an agent). Limit of 64 characters.
	DisplayName string  `pulumi:"displayName"`
	Location    *string `pulumi:"location"`
	// The name of the environment. Format: `projects//locations//agents//environments/`.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The test cases config for continuous tests of this environment.
	TestCasesConfig *GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig `pulumi:"testCasesConfig"`
	// A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned.
	VersionConfigs []GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig `pulumi:"versionConfigs"`
	// The webhook configuration for this environment.
	WebhookConfig *GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig `pulumi:"webhookConfig"`
}

// The set of arguments for constructing a Environment resource.
type EnvironmentArgs struct {
	AgentId pulumi.StringInput
	// The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description pulumi.StringPtrInput
	// The human-readable name of the environment (unique in an agent). Limit of 64 characters.
	DisplayName pulumi.StringInput
	Location    pulumi.StringPtrInput
	// The name of the environment. Format: `projects//locations//agents//environments/`.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The test cases config for continuous tests of this environment.
	TestCasesConfig GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfigPtrInput
	// A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned.
	VersionConfigs GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigArrayInput
	// The webhook configuration for this environment.
	WebhookConfig GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfigPtrInput
}

func (EnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentArgs)(nil)).Elem()
}

type EnvironmentInput interface {
	pulumi.Input

	ToEnvironmentOutput() EnvironmentOutput
	ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput
}

func (*Environment) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (i *Environment) ToEnvironmentOutput() EnvironmentOutput {
	return i.ToEnvironmentOutputWithContext(context.Background())
}

func (i *Environment) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentOutput)
}

type EnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (o EnvironmentOutput) ToEnvironmentOutput() EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.AgentId }).(pulumi.StringOutput)
}

// The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.
func (o EnvironmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The human-readable name of the environment (unique in an agent). Limit of 64 characters.
func (o EnvironmentOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the environment. Format: `projects//locations//agents//environments/`.
func (o EnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The test cases config for continuous tests of this environment.
func (o EnvironmentOutput) TestCasesConfig() GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfigResponseOutput {
	return o.ApplyT(func(v *Environment) GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfigResponseOutput {
		return v.TestCasesConfig
	}).(GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfigResponseOutput)
}

// Update time of this environment.
func (o EnvironmentOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned.
func (o EnvironmentOutput) VersionConfigs() GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponseArrayOutput {
	return o.ApplyT(func(v *Environment) GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponseArrayOutput {
		return v.VersionConfigs
	}).(GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfigResponseArrayOutput)
}

// The webhook configuration for this environment.
func (o EnvironmentOutput) WebhookConfig() GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfigResponseOutput {
	return o.ApplyT(func(v *Environment) GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfigResponseOutput {
		return v.WebhookConfig
	}).(GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfigResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentInput)(nil)).Elem(), &Environment{})
	pulumi.RegisterOutputType(EnvironmentOutput{})
}
