// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v3beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a Version in the specified Flow.
type AgentFlowVersion struct {
	pulumi.CustomResourceState

	// Create time of the version.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description pulumi.StringOutput `pulumi:"description"`
	// Required. The human-readable name of the version. Limit of 64 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.
	Name pulumi.StringOutput `pulumi:"name"`
	// The NLU settings of the flow at version creation.
	NluSettings GoogleCloudDialogflowCxV3beta1NluSettingsResponseOutput `pulumi:"nluSettings"`
	// The state of this version. This field is read-only and cannot be set by create and update methods.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewAgentFlowVersion registers a new resource with the given unique name, arguments, and options.
func NewAgentFlowVersion(ctx *pulumi.Context,
	name string, args *AgentFlowVersionArgs, opts ...pulumi.ResourceOption) (*AgentFlowVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentId == nil {
		return nil, errors.New("invalid value for required argument 'AgentId'")
	}
	if args.FlowId == nil {
		return nil, errors.New("invalid value for required argument 'FlowId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.VersionId == nil {
		return nil, errors.New("invalid value for required argument 'VersionId'")
	}
	var resource AgentFlowVersion
	err := ctx.RegisterResource("google-native:dialogflow/v3beta1:AgentFlowVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgentFlowVersion gets an existing AgentFlowVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgentFlowVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentFlowVersionState, opts ...pulumi.ResourceOption) (*AgentFlowVersion, error) {
	var resource AgentFlowVersion
	err := ctx.ReadResource("google-native:dialogflow/v3beta1:AgentFlowVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AgentFlowVersion resources.
type agentFlowVersionState struct {
	// Create time of the version.
	CreateTime *string `pulumi:"createTime"`
	// The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description *string `pulumi:"description"`
	// Required. The human-readable name of the version. Limit of 64 characters.
	DisplayName *string `pulumi:"displayName"`
	// Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.
	Name *string `pulumi:"name"`
	// The NLU settings of the flow at version creation.
	NluSettings *GoogleCloudDialogflowCxV3beta1NluSettingsResponse `pulumi:"nluSettings"`
	// The state of this version. This field is read-only and cannot be set by create and update methods.
	State *string `pulumi:"state"`
}

type AgentFlowVersionState struct {
	// Create time of the version.
	CreateTime pulumi.StringPtrInput
	// The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description pulumi.StringPtrInput
	// Required. The human-readable name of the version. Limit of 64 characters.
	DisplayName pulumi.StringPtrInput
	// Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.
	Name pulumi.StringPtrInput
	// The NLU settings of the flow at version creation.
	NluSettings GoogleCloudDialogflowCxV3beta1NluSettingsResponsePtrInput
	// The state of this version. This field is read-only and cannot be set by create and update methods.
	State pulumi.StringPtrInput
}

func (AgentFlowVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentFlowVersionState)(nil)).Elem()
}

type agentFlowVersionArgs struct {
	AgentId string `pulumi:"agentId"`
	// The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description *string `pulumi:"description"`
	// Required. The human-readable name of the version. Limit of 64 characters.
	DisplayName *string `pulumi:"displayName"`
	FlowId      string  `pulumi:"flowId"`
	Location    string  `pulumi:"location"`
	// Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.
	Name      *string `pulumi:"name"`
	Project   string  `pulumi:"project"`
	VersionId string  `pulumi:"versionId"`
}

// The set of arguments for constructing a AgentFlowVersion resource.
type AgentFlowVersionArgs struct {
	AgentId pulumi.StringInput
	// The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.
	Description pulumi.StringPtrInput
	// Required. The human-readable name of the version. Limit of 64 characters.
	DisplayName pulumi.StringPtrInput
	FlowId      pulumi.StringInput
	Location    pulumi.StringInput
	// Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.
	Name      pulumi.StringPtrInput
	Project   pulumi.StringInput
	VersionId pulumi.StringInput
}

func (AgentFlowVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentFlowVersionArgs)(nil)).Elem()
}

type AgentFlowVersionInput interface {
	pulumi.Input

	ToAgentFlowVersionOutput() AgentFlowVersionOutput
	ToAgentFlowVersionOutputWithContext(ctx context.Context) AgentFlowVersionOutput
}

func (*AgentFlowVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentFlowVersion)(nil))
}

func (i *AgentFlowVersion) ToAgentFlowVersionOutput() AgentFlowVersionOutput {
	return i.ToAgentFlowVersionOutputWithContext(context.Background())
}

func (i *AgentFlowVersion) ToAgentFlowVersionOutputWithContext(ctx context.Context) AgentFlowVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentFlowVersionOutput)
}

type AgentFlowVersionOutput struct {
	*pulumi.OutputState
}

func (AgentFlowVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentFlowVersion)(nil))
}

func (o AgentFlowVersionOutput) ToAgentFlowVersionOutput() AgentFlowVersionOutput {
	return o
}

func (o AgentFlowVersionOutput) ToAgentFlowVersionOutputWithContext(ctx context.Context) AgentFlowVersionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AgentFlowVersionOutput{})
}
