// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a private connection that establishes a VPC Network Peering connection to a VPC network in the service producer's organization. The administrator of the service consumer's VPC network invokes this method. The administrator must assign one or more allocated IP ranges for provisioning subnetworks in the service producer's VPC network. This connection is used for all supported services in the service producer's organization, so it only needs to be invoked once. The response from the `get` operation will be of type `Connection` if the operation successfully completes.
type ServiceConnection struct {
	pulumi.CustomResourceState
}

// NewServiceConnection registers a new resource with the given unique name, arguments, and options.
func NewServiceConnection(ctx *pulumi.Context,
	name string, args *ServiceConnectionArgs, opts ...pulumi.ResourceOption) (*ServiceConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServicesId == nil {
		return nil, errors.New("invalid value for required argument 'ServicesId'")
	}
	var resource ServiceConnection
	err := ctx.RegisterResource("google-cloud:servicenetworking/v1beta:ServiceConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceConnection gets an existing ServiceConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceConnectionState, opts ...pulumi.ResourceOption) (*ServiceConnection, error) {
	var resource ServiceConnection
	err := ctx.ReadResource("google-cloud:servicenetworking/v1beta:ServiceConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceConnection resources.
type serviceConnectionState struct {
}

type ServiceConnectionState struct {
}

func (ServiceConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConnectionState)(nil)).Elem()
}

type serviceConnectionArgs struct {
	// The name of service consumer's VPC network that's connected with service producer network, in the following format: `projects/{project}/global/networks/{network}`. `{project}` is a project number, such as in `12345` that includes the VPC service consumer's VPC network. `{network}` is the name of the service consumer's VPC network.
	Network *string `pulumi:"network"`
	// Output only. The name of the VPC Network Peering connection that was created by the service producer.
	Peering *string `pulumi:"peering"`
	// The name of one or more allocated IP address ranges for this service producer of type `PEERING`. Note that invoking this method with a different range when connection is already established will not modify already provisioned service producer subnetworks.
	ReservedPeeringRanges []string `pulumi:"reservedPeeringRanges"`
	// Output only. The name of the peering service that's associated with this connection, in the following format: `services/{service name}`.
	Service    *string `pulumi:"service"`
	ServicesId string  `pulumi:"servicesId"`
}

// The set of arguments for constructing a ServiceConnection resource.
type ServiceConnectionArgs struct {
	// The name of service consumer's VPC network that's connected with service producer network, in the following format: `projects/{project}/global/networks/{network}`. `{project}` is a project number, such as in `12345` that includes the VPC service consumer's VPC network. `{network}` is the name of the service consumer's VPC network.
	Network pulumi.StringPtrInput
	// Output only. The name of the VPC Network Peering connection that was created by the service producer.
	Peering pulumi.StringPtrInput
	// The name of one or more allocated IP address ranges for this service producer of type `PEERING`. Note that invoking this method with a different range when connection is already established will not modify already provisioned service producer subnetworks.
	ReservedPeeringRanges pulumi.StringArrayInput
	// Output only. The name of the peering service that's associated with this connection, in the following format: `services/{service name}`.
	Service    pulumi.StringPtrInput
	ServicesId pulumi.StringInput
}

func (ServiceConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConnectionArgs)(nil)).Elem()
}

type ServiceConnectionInput interface {
	pulumi.Input

	ToServiceConnectionOutput() ServiceConnectionOutput
	ToServiceConnectionOutputWithContext(ctx context.Context) ServiceConnectionOutput
}

func (*ServiceConnection) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnection)(nil))
}

func (i *ServiceConnection) ToServiceConnectionOutput() ServiceConnectionOutput {
	return i.ToServiceConnectionOutputWithContext(context.Background())
}

func (i *ServiceConnection) ToServiceConnectionOutputWithContext(ctx context.Context) ServiceConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionOutput)
}

type ServiceConnectionOutput struct {
	*pulumi.OutputState
}

func (ServiceConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnection)(nil))
}

func (o ServiceConnectionOutput) ToServiceConnectionOutput() ServiceConnectionOutput {
	return o
}

func (o ServiceConnectionOutput) ToServiceConnectionOutputWithContext(ctx context.Context) ServiceConnectionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ServiceConnectionOutput{})
}
