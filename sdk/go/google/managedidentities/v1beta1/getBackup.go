// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single Backup.
func LookupBackup(ctx *pulumi.Context, args *LookupBackupArgs, opts ...pulumi.InvokeOption) (*LookupBackupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBackupResult
	err := ctx.Invoke("google-native:managedidentities/v1beta1:getBackup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupBackupArgs struct {
	BackupId string  `pulumi:"backupId"`
	DomainId string  `pulumi:"domainId"`
	Project  *string `pulumi:"project"`
}

type LookupBackupResult struct {
	// The time the backups was created.
	CreateTime string `pulumi:"createTime"`
	// Optional. A short description of the backup.
	Description string `pulumi:"description"`
	// Optional. Resource labels to represent user provided metadata.
	Labels map[string]string `pulumi:"labels"`
	// The unique name of the Backup in the form of projects/{project_id}/locations/global/domains/{domain_name}/backups/{name}
	Name string `pulumi:"name"`
	// The current state of the backup.
	State string `pulumi:"state"`
	// Additional information about the current status of this backup, if available.
	StatusMessage string `pulumi:"statusMessage"`
	// Indicates whether it’s an on-demand backup or scheduled.
	Type string `pulumi:"type"`
	// Last update time.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupBackupOutput(ctx *pulumi.Context, args LookupBackupOutputArgs, opts ...pulumi.InvokeOption) LookupBackupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBackupResult, error) {
			args := v.(LookupBackupArgs)
			r, err := LookupBackup(ctx, &args, opts...)
			var s LookupBackupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBackupResultOutput)
}

type LookupBackupOutputArgs struct {
	BackupId pulumi.StringInput    `pulumi:"backupId"`
	DomainId pulumi.StringInput    `pulumi:"domainId"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupBackupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupArgs)(nil)).Elem()
}

type LookupBackupResultOutput struct{ *pulumi.OutputState }

func (LookupBackupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupResult)(nil)).Elem()
}

func (o LookupBackupResultOutput) ToLookupBackupResultOutput() LookupBackupResultOutput {
	return o
}

func (o LookupBackupResultOutput) ToLookupBackupResultOutputWithContext(ctx context.Context) LookupBackupResultOutput {
	return o
}

// The time the backups was created.
func (o LookupBackupResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. A short description of the backup.
func (o LookupBackupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. Resource labels to represent user provided metadata.
func (o LookupBackupResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBackupResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The unique name of the Backup in the form of projects/{project_id}/locations/global/domains/{domain_name}/backups/{name}
func (o LookupBackupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.Name }).(pulumi.StringOutput)
}

// The current state of the backup.
func (o LookupBackupResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.State }).(pulumi.StringOutput)
}

// Additional information about the current status of this backup, if available.
func (o LookupBackupResultOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.StatusMessage }).(pulumi.StringOutput)
}

// Indicates whether it’s an on-demand backup or scheduled.
func (o LookupBackupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.Type }).(pulumi.StringOutput)
}

// Last update time.
func (o LookupBackupResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBackupResultOutput{})
}
