// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Version policy defines the versions that the registry will accept.
type MavenRepositoryConfigVersionPolicy string

const (
	// VERSION_POLICY_UNSPECIFIED - the version policy is not defined. When the version policy is not defined, no validation is performed for the versions.
	MavenRepositoryConfigVersionPolicyVersionPolicyUnspecified = MavenRepositoryConfigVersionPolicy("VERSION_POLICY_UNSPECIFIED")
	// RELEASE - repository will accept only Release versions.
	MavenRepositoryConfigVersionPolicyRelease = MavenRepositoryConfigVersionPolicy("RELEASE")
	// SNAPSHOT - repository will accept only Snapshot versions.
	MavenRepositoryConfigVersionPolicySnapshot = MavenRepositoryConfigVersionPolicy("SNAPSHOT")
)

func (MavenRepositoryConfigVersionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*MavenRepositoryConfigVersionPolicy)(nil)).Elem()
}

func (e MavenRepositoryConfigVersionPolicy) ToMavenRepositoryConfigVersionPolicyOutput() MavenRepositoryConfigVersionPolicyOutput {
	return pulumi.ToOutput(e).(MavenRepositoryConfigVersionPolicyOutput)
}

func (e MavenRepositoryConfigVersionPolicy) ToMavenRepositoryConfigVersionPolicyOutputWithContext(ctx context.Context) MavenRepositoryConfigVersionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MavenRepositoryConfigVersionPolicyOutput)
}

func (e MavenRepositoryConfigVersionPolicy) ToMavenRepositoryConfigVersionPolicyPtrOutput() MavenRepositoryConfigVersionPolicyPtrOutput {
	return e.ToMavenRepositoryConfigVersionPolicyPtrOutputWithContext(context.Background())
}

func (e MavenRepositoryConfigVersionPolicy) ToMavenRepositoryConfigVersionPolicyPtrOutputWithContext(ctx context.Context) MavenRepositoryConfigVersionPolicyPtrOutput {
	return MavenRepositoryConfigVersionPolicy(e).ToMavenRepositoryConfigVersionPolicyOutputWithContext(ctx).ToMavenRepositoryConfigVersionPolicyPtrOutputWithContext(ctx)
}

func (e MavenRepositoryConfigVersionPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MavenRepositoryConfigVersionPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MavenRepositoryConfigVersionPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MavenRepositoryConfigVersionPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MavenRepositoryConfigVersionPolicyOutput struct{ *pulumi.OutputState }

func (MavenRepositoryConfigVersionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MavenRepositoryConfigVersionPolicy)(nil)).Elem()
}

func (o MavenRepositoryConfigVersionPolicyOutput) ToMavenRepositoryConfigVersionPolicyOutput() MavenRepositoryConfigVersionPolicyOutput {
	return o
}

func (o MavenRepositoryConfigVersionPolicyOutput) ToMavenRepositoryConfigVersionPolicyOutputWithContext(ctx context.Context) MavenRepositoryConfigVersionPolicyOutput {
	return o
}

func (o MavenRepositoryConfigVersionPolicyOutput) ToMavenRepositoryConfigVersionPolicyPtrOutput() MavenRepositoryConfigVersionPolicyPtrOutput {
	return o.ToMavenRepositoryConfigVersionPolicyPtrOutputWithContext(context.Background())
}

func (o MavenRepositoryConfigVersionPolicyOutput) ToMavenRepositoryConfigVersionPolicyPtrOutputWithContext(ctx context.Context) MavenRepositoryConfigVersionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MavenRepositoryConfigVersionPolicy) *MavenRepositoryConfigVersionPolicy {
		return &v
	}).(MavenRepositoryConfigVersionPolicyPtrOutput)
}

func (o MavenRepositoryConfigVersionPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MavenRepositoryConfigVersionPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MavenRepositoryConfigVersionPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MavenRepositoryConfigVersionPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MavenRepositoryConfigVersionPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MavenRepositoryConfigVersionPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MavenRepositoryConfigVersionPolicyPtrOutput struct{ *pulumi.OutputState }

func (MavenRepositoryConfigVersionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MavenRepositoryConfigVersionPolicy)(nil)).Elem()
}

func (o MavenRepositoryConfigVersionPolicyPtrOutput) ToMavenRepositoryConfigVersionPolicyPtrOutput() MavenRepositoryConfigVersionPolicyPtrOutput {
	return o
}

func (o MavenRepositoryConfigVersionPolicyPtrOutput) ToMavenRepositoryConfigVersionPolicyPtrOutputWithContext(ctx context.Context) MavenRepositoryConfigVersionPolicyPtrOutput {
	return o
}

func (o MavenRepositoryConfigVersionPolicyPtrOutput) Elem() MavenRepositoryConfigVersionPolicyOutput {
	return o.ApplyT(func(v *MavenRepositoryConfigVersionPolicy) MavenRepositoryConfigVersionPolicy {
		if v != nil {
			return *v
		}
		var ret MavenRepositoryConfigVersionPolicy
		return ret
	}).(MavenRepositoryConfigVersionPolicyOutput)
}

func (o MavenRepositoryConfigVersionPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MavenRepositoryConfigVersionPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MavenRepositoryConfigVersionPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MavenRepositoryConfigVersionPolicyInput is an input type that accepts MavenRepositoryConfigVersionPolicyArgs and MavenRepositoryConfigVersionPolicyOutput values.
// You can construct a concrete instance of `MavenRepositoryConfigVersionPolicyInput` via:
//
//          MavenRepositoryConfigVersionPolicyArgs{...}
type MavenRepositoryConfigVersionPolicyInput interface {
	pulumi.Input

	ToMavenRepositoryConfigVersionPolicyOutput() MavenRepositoryConfigVersionPolicyOutput
	ToMavenRepositoryConfigVersionPolicyOutputWithContext(context.Context) MavenRepositoryConfigVersionPolicyOutput
}

var mavenRepositoryConfigVersionPolicyPtrType = reflect.TypeOf((**MavenRepositoryConfigVersionPolicy)(nil)).Elem()

type MavenRepositoryConfigVersionPolicyPtrInput interface {
	pulumi.Input

	ToMavenRepositoryConfigVersionPolicyPtrOutput() MavenRepositoryConfigVersionPolicyPtrOutput
	ToMavenRepositoryConfigVersionPolicyPtrOutputWithContext(context.Context) MavenRepositoryConfigVersionPolicyPtrOutput
}

type mavenRepositoryConfigVersionPolicyPtr string

func MavenRepositoryConfigVersionPolicyPtr(v string) MavenRepositoryConfigVersionPolicyPtrInput {
	return (*mavenRepositoryConfigVersionPolicyPtr)(&v)
}

func (*mavenRepositoryConfigVersionPolicyPtr) ElementType() reflect.Type {
	return mavenRepositoryConfigVersionPolicyPtrType
}

func (in *mavenRepositoryConfigVersionPolicyPtr) ToMavenRepositoryConfigVersionPolicyPtrOutput() MavenRepositoryConfigVersionPolicyPtrOutput {
	return pulumi.ToOutput(in).(MavenRepositoryConfigVersionPolicyPtrOutput)
}

func (in *mavenRepositoryConfigVersionPolicyPtr) ToMavenRepositoryConfigVersionPolicyPtrOutputWithContext(ctx context.Context) MavenRepositoryConfigVersionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MavenRepositoryConfigVersionPolicyPtrOutput)
}

// The format of packages that are stored in the repository.
type RepositoryFormat string

const (
	// Unspecified package format.
	RepositoryFormatFormatUnspecified = RepositoryFormat("FORMAT_UNSPECIFIED")
	// Docker package format.
	RepositoryFormatDocker = RepositoryFormat("DOCKER")
	// Maven package format.
	RepositoryFormatMaven = RepositoryFormat("MAVEN")
	// NPM package format.
	RepositoryFormatNpm = RepositoryFormat("NPM")
	// APT package format.
	RepositoryFormatApt = RepositoryFormat("APT")
	// YUM package format.
	RepositoryFormatYum = RepositoryFormat("YUM")
	// Python package format.
	RepositoryFormatPython = RepositoryFormat("PYTHON")
)

func (RepositoryFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryFormat)(nil)).Elem()
}

func (e RepositoryFormat) ToRepositoryFormatOutput() RepositoryFormatOutput {
	return pulumi.ToOutput(e).(RepositoryFormatOutput)
}

func (e RepositoryFormat) ToRepositoryFormatOutputWithContext(ctx context.Context) RepositoryFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RepositoryFormatOutput)
}

func (e RepositoryFormat) ToRepositoryFormatPtrOutput() RepositoryFormatPtrOutput {
	return e.ToRepositoryFormatPtrOutputWithContext(context.Background())
}

func (e RepositoryFormat) ToRepositoryFormatPtrOutputWithContext(ctx context.Context) RepositoryFormatPtrOutput {
	return RepositoryFormat(e).ToRepositoryFormatOutputWithContext(ctx).ToRepositoryFormatPtrOutputWithContext(ctx)
}

func (e RepositoryFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RepositoryFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RepositoryFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RepositoryFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RepositoryFormatOutput struct{ *pulumi.OutputState }

func (RepositoryFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryFormat)(nil)).Elem()
}

func (o RepositoryFormatOutput) ToRepositoryFormatOutput() RepositoryFormatOutput {
	return o
}

func (o RepositoryFormatOutput) ToRepositoryFormatOutputWithContext(ctx context.Context) RepositoryFormatOutput {
	return o
}

func (o RepositoryFormatOutput) ToRepositoryFormatPtrOutput() RepositoryFormatPtrOutput {
	return o.ToRepositoryFormatPtrOutputWithContext(context.Background())
}

func (o RepositoryFormatOutput) ToRepositoryFormatPtrOutputWithContext(ctx context.Context) RepositoryFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryFormat) *RepositoryFormat {
		return &v
	}).(RepositoryFormatPtrOutput)
}

func (o RepositoryFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RepositoryFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RepositoryFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RepositoryFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RepositoryFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RepositoryFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RepositoryFormatPtrOutput struct{ *pulumi.OutputState }

func (RepositoryFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryFormat)(nil)).Elem()
}

func (o RepositoryFormatPtrOutput) ToRepositoryFormatPtrOutput() RepositoryFormatPtrOutput {
	return o
}

func (o RepositoryFormatPtrOutput) ToRepositoryFormatPtrOutputWithContext(ctx context.Context) RepositoryFormatPtrOutput {
	return o
}

func (o RepositoryFormatPtrOutput) Elem() RepositoryFormatOutput {
	return o.ApplyT(func(v *RepositoryFormat) RepositoryFormat {
		if v != nil {
			return *v
		}
		var ret RepositoryFormat
		return ret
	}).(RepositoryFormatOutput)
}

func (o RepositoryFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RepositoryFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RepositoryFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RepositoryFormatInput is an input type that accepts RepositoryFormatArgs and RepositoryFormatOutput values.
// You can construct a concrete instance of `RepositoryFormatInput` via:
//
//          RepositoryFormatArgs{...}
type RepositoryFormatInput interface {
	pulumi.Input

	ToRepositoryFormatOutput() RepositoryFormatOutput
	ToRepositoryFormatOutputWithContext(context.Context) RepositoryFormatOutput
}

var repositoryFormatPtrType = reflect.TypeOf((**RepositoryFormat)(nil)).Elem()

type RepositoryFormatPtrInput interface {
	pulumi.Input

	ToRepositoryFormatPtrOutput() RepositoryFormatPtrOutput
	ToRepositoryFormatPtrOutputWithContext(context.Context) RepositoryFormatPtrOutput
}

type repositoryFormatPtr string

func RepositoryFormatPtr(v string) RepositoryFormatPtrInput {
	return (*repositoryFormatPtr)(&v)
}

func (*repositoryFormatPtr) ElementType() reflect.Type {
	return repositoryFormatPtrType
}

func (in *repositoryFormatPtr) ToRepositoryFormatPtrOutput() RepositoryFormatPtrOutput {
	return pulumi.ToOutput(in).(RepositoryFormatPtrOutput)
}

func (in *repositoryFormatPtr) ToRepositoryFormatPtrOutputWithContext(ctx context.Context) RepositoryFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RepositoryFormatPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MavenRepositoryConfigVersionPolicyInput)(nil)).Elem(), MavenRepositoryConfigVersionPolicy("VERSION_POLICY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MavenRepositoryConfigVersionPolicyPtrInput)(nil)).Elem(), MavenRepositoryConfigVersionPolicy("VERSION_POLICY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryFormatInput)(nil)).Elem(), RepositoryFormat("FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryFormatPtrInput)(nil)).Elem(), RepositoryFormat("FORMAT_UNSPECIFIED"))
	pulumi.RegisterOutputType(MavenRepositoryConfigVersionPolicyOutput{})
	pulumi.RegisterOutputType(MavenRepositoryConfigVersionPolicyPtrOutput{})
	pulumi.RegisterOutputType(RepositoryFormatOutput{})
	pulumi.RegisterOutputType(RepositoryFormatPtrOutput{})
}
