// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Message describing a MC Source of type Guest OS Scan.
type GuestOsScanResponse struct {
	// reference to the corresponding Guest OS Scan in MC Source.
	CoreSource string `pulumi:"coreSource"`
}

// Message describing a MC Source of type Guest OS Scan.
type GuestOsScanResponseOutput struct{ *pulumi.OutputState }

func (GuestOsScanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestOsScanResponse)(nil)).Elem()
}

func (o GuestOsScanResponseOutput) ToGuestOsScanResponseOutput() GuestOsScanResponseOutput {
	return o
}

func (o GuestOsScanResponseOutput) ToGuestOsScanResponseOutputWithContext(ctx context.Context) GuestOsScanResponseOutput {
	return o
}

// reference to the corresponding Guest OS Scan in MC Source.
func (o GuestOsScanResponseOutput) CoreSource() pulumi.StringOutput {
	return o.ApplyT(func(v GuestOsScanResponse) string { return v.CoreSource }).(pulumi.StringOutput)
}

// Message describing a MC Source of type VSphere Scan.
type VSphereScanResponse struct {
	// reference to the corresponding VSphere Scan in MC Source.
	CoreSource string `pulumi:"coreSource"`
}

// Message describing a MC Source of type VSphere Scan.
type VSphereScanResponseOutput struct{ *pulumi.OutputState }

func (VSphereScanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VSphereScanResponse)(nil)).Elem()
}

func (o VSphereScanResponseOutput) ToVSphereScanResponseOutput() VSphereScanResponseOutput {
	return o
}

func (o VSphereScanResponseOutput) ToVSphereScanResponseOutputWithContext(ctx context.Context) VSphereScanResponseOutput {
	return o
}

// reference to the corresponding VSphere Scan in MC Source.
func (o VSphereScanResponseOutput) CoreSource() pulumi.StringOutput {
	return o.ApplyT(func(v VSphereScanResponse) string { return v.CoreSource }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GuestOsScanResponseOutput{})
	pulumi.RegisterOutputType(VSphereScanResponseOutput{})
}
