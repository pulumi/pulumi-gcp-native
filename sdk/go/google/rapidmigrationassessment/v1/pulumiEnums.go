// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Type of an annotation.
type AnnotationType string

const (
	// Unknown type
	AnnotationTypeTypeUnspecified = AnnotationType("TYPE_UNSPECIFIED")
	// Indicates that this project has opted into StratoZone export.
	AnnotationTypeTypeLegacyExportConsent = AnnotationType("TYPE_LEGACY_EXPORT_CONSENT")
	// Indicates that this project is created by Qwiklab.
	AnnotationTypeTypeQwiklab = AnnotationType("TYPE_QWIKLAB")
)

func (AnnotationType) ElementType() reflect.Type {
	return reflect.TypeOf((*AnnotationType)(nil)).Elem()
}

func (e AnnotationType) ToAnnotationTypeOutput() AnnotationTypeOutput {
	return pulumi.ToOutput(e).(AnnotationTypeOutput)
}

func (e AnnotationType) ToAnnotationTypeOutputWithContext(ctx context.Context) AnnotationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AnnotationTypeOutput)
}

func (e AnnotationType) ToAnnotationTypePtrOutput() AnnotationTypePtrOutput {
	return e.ToAnnotationTypePtrOutputWithContext(context.Background())
}

func (e AnnotationType) ToAnnotationTypePtrOutputWithContext(ctx context.Context) AnnotationTypePtrOutput {
	return AnnotationType(e).ToAnnotationTypeOutputWithContext(ctx).ToAnnotationTypePtrOutputWithContext(ctx)
}

func (e AnnotationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnnotationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AnnotationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AnnotationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AnnotationTypeOutput struct{ *pulumi.OutputState }

func (AnnotationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnnotationType)(nil)).Elem()
}

func (o AnnotationTypeOutput) ToAnnotationTypeOutput() AnnotationTypeOutput {
	return o
}

func (o AnnotationTypeOutput) ToAnnotationTypeOutputWithContext(ctx context.Context) AnnotationTypeOutput {
	return o
}

func (o AnnotationTypeOutput) ToAnnotationTypePtrOutput() AnnotationTypePtrOutput {
	return o.ToAnnotationTypePtrOutputWithContext(context.Background())
}

func (o AnnotationTypeOutput) ToAnnotationTypePtrOutputWithContext(ctx context.Context) AnnotationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnnotationType) *AnnotationType {
		return &v
	}).(AnnotationTypePtrOutput)
}

func (o AnnotationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AnnotationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnnotationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AnnotationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnnotationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AnnotationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AnnotationTypePtrOutput struct{ *pulumi.OutputState }

func (AnnotationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnnotationType)(nil)).Elem()
}

func (o AnnotationTypePtrOutput) ToAnnotationTypePtrOutput() AnnotationTypePtrOutput {
	return o
}

func (o AnnotationTypePtrOutput) ToAnnotationTypePtrOutputWithContext(ctx context.Context) AnnotationTypePtrOutput {
	return o
}

func (o AnnotationTypePtrOutput) Elem() AnnotationTypeOutput {
	return o.ApplyT(func(v *AnnotationType) AnnotationType {
		if v != nil {
			return *v
		}
		var ret AnnotationType
		return ret
	}).(AnnotationTypeOutput)
}

func (o AnnotationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AnnotationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AnnotationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AnnotationTypeInput is an input type that accepts values of the AnnotationType enum
// A concrete instance of `AnnotationTypeInput` can be one of the following:
//
//	AnnotationTypeTypeUnspecified
//	AnnotationTypeTypeLegacyExportConsent
//	AnnotationTypeTypeQwiklab
type AnnotationTypeInput interface {
	pulumi.Input

	ToAnnotationTypeOutput() AnnotationTypeOutput
	ToAnnotationTypeOutputWithContext(context.Context) AnnotationTypeOutput
}

var annotationTypePtrType = reflect.TypeOf((**AnnotationType)(nil)).Elem()

type AnnotationTypePtrInput interface {
	pulumi.Input

	ToAnnotationTypePtrOutput() AnnotationTypePtrOutput
	ToAnnotationTypePtrOutputWithContext(context.Context) AnnotationTypePtrOutput
}

type annotationTypePtr string

func AnnotationTypePtr(v string) AnnotationTypePtrInput {
	return (*annotationTypePtr)(&v)
}

func (*annotationTypePtr) ElementType() reflect.Type {
	return annotationTypePtrType
}

func (in *annotationTypePtr) ToAnnotationTypePtrOutput() AnnotationTypePtrOutput {
	return pulumi.ToOutput(in).(AnnotationTypePtrOutput)
}

func (in *annotationTypePtr) ToAnnotationTypePtrOutputWithContext(ctx context.Context) AnnotationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AnnotationTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnnotationTypeInput)(nil)).Elem(), AnnotationType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AnnotationTypePtrInput)(nil)).Elem(), AnnotationType("TYPE_UNSPECIFIED"))
	pulumi.RegisterOutputType(AnnotationTypeOutput{})
	pulumi.RegisterOutputType(AnnotationTypePtrOutput{})
}
