// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get details of a single snapshot schedule policy.
func LookupSnapshotSchedulePolicy(ctx *pulumi.Context, args *LookupSnapshotSchedulePolicyArgs, opts ...pulumi.InvokeOption) (*LookupSnapshotSchedulePolicyResult, error) {
	var rv LookupSnapshotSchedulePolicyResult
	err := ctx.Invoke("google-native:baremetalsolution/v2:getSnapshotSchedulePolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSnapshotSchedulePolicyArgs struct {
	Location                 string  `pulumi:"location"`
	Project                  *string `pulumi:"project"`
	SnapshotSchedulePolicyId string  `pulumi:"snapshotSchedulePolicyId"`
}

type LookupSnapshotSchedulePolicyResult struct {
	// The description of the snapshot schedule policy.
	Description string `pulumi:"description"`
	// Labels as key value pairs.
	Labels map[string]string `pulumi:"labels"`
	// The name of the snapshot schedule policy.
	Name string `pulumi:"name"`
	// The snapshot schedules contained in this policy. You can specify a maximum of 5 schedules.
	Schedules []ScheduleResponse `pulumi:"schedules"`
	// The state of the snapshot schedule policy.
	State string `pulumi:"state"`
}

func LookupSnapshotSchedulePolicyOutput(ctx *pulumi.Context, args LookupSnapshotSchedulePolicyOutputArgs, opts ...pulumi.InvokeOption) LookupSnapshotSchedulePolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSnapshotSchedulePolicyResult, error) {
			args := v.(LookupSnapshotSchedulePolicyArgs)
			r, err := LookupSnapshotSchedulePolicy(ctx, &args, opts...)
			return *r, err
		}).(LookupSnapshotSchedulePolicyResultOutput)
}

type LookupSnapshotSchedulePolicyOutputArgs struct {
	Location                 pulumi.StringInput    `pulumi:"location"`
	Project                  pulumi.StringPtrInput `pulumi:"project"`
	SnapshotSchedulePolicyId pulumi.StringInput    `pulumi:"snapshotSchedulePolicyId"`
}

func (LookupSnapshotSchedulePolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnapshotSchedulePolicyArgs)(nil)).Elem()
}

type LookupSnapshotSchedulePolicyResultOutput struct{ *pulumi.OutputState }

func (LookupSnapshotSchedulePolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnapshotSchedulePolicyResult)(nil)).Elem()
}

func (o LookupSnapshotSchedulePolicyResultOutput) ToLookupSnapshotSchedulePolicyResultOutput() LookupSnapshotSchedulePolicyResultOutput {
	return o
}

func (o LookupSnapshotSchedulePolicyResultOutput) ToLookupSnapshotSchedulePolicyResultOutputWithContext(ctx context.Context) LookupSnapshotSchedulePolicyResultOutput {
	return o
}

// The description of the snapshot schedule policy.
func (o LookupSnapshotSchedulePolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotSchedulePolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// Labels as key value pairs.
func (o LookupSnapshotSchedulePolicyResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSnapshotSchedulePolicyResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of the snapshot schedule policy.
func (o LookupSnapshotSchedulePolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotSchedulePolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// The snapshot schedules contained in this policy. You can specify a maximum of 5 schedules.
func (o LookupSnapshotSchedulePolicyResultOutput) Schedules() ScheduleResponseArrayOutput {
	return o.ApplyT(func(v LookupSnapshotSchedulePolicyResult) []ScheduleResponse { return v.Schedules }).(ScheduleResponseArrayOutput)
}

// The state of the snapshot schedule policy.
func (o LookupSnapshotSchedulePolicyResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotSchedulePolicyResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSnapshotSchedulePolicyResultOutput{})
}
