// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Create an Instance.
// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
// on Google Cloud even though it will be deleted from Pulumi state.
type Instance struct {
	pulumi.CustomResourceState

	// Create a time stamp.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The firmware version for the instance.
	FirmwareVersion pulumi.StringOutput `pulumi:"firmwareVersion"`
	// True if you enable hyperthreading for the server, otherwise false. The default value is false.
	HyperthreadingEnabled pulumi.BoolOutput `pulumi:"hyperthreadingEnabled"`
	// True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.
	InteractiveSerialConsoleEnabled pulumi.BoolOutput `pulumi:"interactiveSerialConsoleEnabled"`
	// Labels as key value pairs.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.
	LogicalInterfaces GoogleCloudBaremetalsolutionV2LogicalInterfaceResponseArrayOutput `pulumi:"logicalInterfaces"`
	// Text field about info for logging in.
	LoginInfo pulumi.StringOutput `pulumi:"loginInfo"`
	// Immutable. List of LUNs associated with this server.
	Luns LunResponseArrayOutput `pulumi:"luns"`
	// Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
	MachineType pulumi.StringOutput `pulumi:"machineType"`
	// Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`
	Name pulumi.StringOutput `pulumi:"name"`
	// Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of "bond" or "nic".
	NetworkTemplate pulumi.StringOutput `pulumi:"networkTemplate"`
	// List of networks associated with this server.
	Networks NetworkResponseArrayOutput `pulumi:"networks"`
	// The OS image currently installed on the server.
	OsImage pulumi.StringOutput `pulumi:"osImage"`
	// Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.
	Pod     pulumi.StringOutput `pulumi:"pod"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The state of the server.
	State pulumi.StringOutput `pulumi:"state"`
	// Update a time stamp.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.
	Volumes VolumeResponseArrayOutput `pulumi:"volumes"`
	// The workload profile for the instance.
	WorkloadProfile pulumi.StringOutput `pulumi:"workloadProfile"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		args = &InstanceArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("google-native:baremetalsolution/v2:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("google-native:baremetalsolution/v2:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
}

type InstanceState struct {
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// True if you enable hyperthreading for the server, otherwise false. The default value is false.
	HyperthreadingEnabled *bool `pulumi:"hyperthreadingEnabled"`
	// Labels as key value pairs.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.
	LogicalInterfaces []GoogleCloudBaremetalsolutionV2LogicalInterface `pulumi:"logicalInterfaces"`
	// Immutable. List of LUNs associated with this server.
	Luns []Lun `pulumi:"luns"`
	// Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
	MachineType *string `pulumi:"machineType"`
	// Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`
	Name *string `pulumi:"name"`
	// Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of "bond" or "nic".
	NetworkTemplate *string `pulumi:"networkTemplate"`
	// The OS image currently installed on the server.
	OsImage *string `pulumi:"osImage"`
	// Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.
	Pod     *string `pulumi:"pod"`
	Project *string `pulumi:"project"`
	// Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.
	Volumes []Volume `pulumi:"volumes"`
	// The workload profile for the instance.
	WorkloadProfile *InstanceWorkloadProfile `pulumi:"workloadProfile"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// True if you enable hyperthreading for the server, otherwise false. The default value is false.
	HyperthreadingEnabled pulumi.BoolPtrInput
	// Labels as key value pairs.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.
	LogicalInterfaces GoogleCloudBaremetalsolutionV2LogicalInterfaceArrayInput
	// Immutable. List of LUNs associated with this server.
	Luns LunArrayInput
	// Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
	MachineType pulumi.StringPtrInput
	// Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`
	Name pulumi.StringPtrInput
	// Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of "bond" or "nic".
	NetworkTemplate pulumi.StringPtrInput
	// The OS image currently installed on the server.
	OsImage pulumi.StringPtrInput
	// Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.
	Pod     pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.
	Volumes VolumeArrayInput
	// The workload profile for the instance.
	WorkloadProfile InstanceWorkloadProfilePtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

func (i *Instance) ToOutput(ctx context.Context) pulumix.Output[*Instance] {
	return pulumix.Output[*Instance]{
		OutputState: i.ToInstanceOutputWithContext(ctx).OutputState,
	}
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

func (o InstanceOutput) ToOutput(ctx context.Context) pulumix.Output[*Instance] {
	return pulumix.Output[*Instance]{
		OutputState: o.OutputState,
	}
}

// Create a time stamp.
func (o InstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The firmware version for the instance.
func (o InstanceOutput) FirmwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.FirmwareVersion }).(pulumi.StringOutput)
}

// True if you enable hyperthreading for the server, otherwise false. The default value is false.
func (o InstanceOutput) HyperthreadingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.HyperthreadingEnabled }).(pulumi.BoolOutput)
}

// True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.
func (o InstanceOutput) InteractiveSerialConsoleEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.InteractiveSerialConsoleEnabled }).(pulumi.BoolOutput)
}

// Labels as key value pairs.
func (o InstanceOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o InstanceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.
func (o InstanceOutput) LogicalInterfaces() GoogleCloudBaremetalsolutionV2LogicalInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *Instance) GoogleCloudBaremetalsolutionV2LogicalInterfaceResponseArrayOutput {
		return v.LogicalInterfaces
	}).(GoogleCloudBaremetalsolutionV2LogicalInterfaceResponseArrayOutput)
}

// Text field about info for logging in.
func (o InstanceOutput) LoginInfo() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.LoginInfo }).(pulumi.StringOutput)
}

// Immutable. List of LUNs associated with this server.
func (o InstanceOutput) Luns() LunResponseArrayOutput {
	return o.ApplyT(func(v *Instance) LunResponseArrayOutput { return v.Luns }).(LunResponseArrayOutput)
}

// Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
func (o InstanceOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MachineType }).(pulumi.StringOutput)
}

// Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`
func (o InstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of "bond" or "nic".
func (o InstanceOutput) NetworkTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.NetworkTemplate }).(pulumi.StringOutput)
}

// List of networks associated with this server.
func (o InstanceOutput) Networks() NetworkResponseArrayOutput {
	return o.ApplyT(func(v *Instance) NetworkResponseArrayOutput { return v.Networks }).(NetworkResponseArrayOutput)
}

// The OS image currently installed on the server.
func (o InstanceOutput) OsImage() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.OsImage }).(pulumi.StringOutput)
}

// Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.
func (o InstanceOutput) Pod() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Pod }).(pulumi.StringOutput)
}

func (o InstanceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The state of the server.
func (o InstanceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Update a time stamp.
func (o InstanceOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.
func (o InstanceOutput) Volumes() VolumeResponseArrayOutput {
	return o.ApplyT(func(v *Instance) VolumeResponseArrayOutput { return v.Volumes }).(VolumeResponseArrayOutput)
}

// The workload profile for the instance.
func (o InstanceOutput) WorkloadProfile() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.WorkloadProfile }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterOutputType(InstanceOutput{})
}
