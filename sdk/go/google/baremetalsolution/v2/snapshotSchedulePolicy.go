// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create a snapshot schedule policy in the specified project.
// Auto-naming is currently not supported for this resource.
type SnapshotSchedulePolicy struct {
	pulumi.CustomResourceState

	// The description of the snapshot schedule policy.
	Description pulumi.StringOutput `pulumi:"description"`
	// Labels as key value pairs.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The name of the snapshot schedule policy.
	Name pulumi.StringOutput `pulumi:"name"`
	// The snapshot schedules contained in this policy. You can specify a maximum of 5 schedules.
	Schedules ScheduleResponseArrayOutput `pulumi:"schedules"`
	// The state of the snapshot schedule policy.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewSnapshotSchedulePolicy registers a new resource with the given unique name, arguments, and options.
func NewSnapshotSchedulePolicy(ctx *pulumi.Context,
	name string, args *SnapshotSchedulePolicyArgs, opts ...pulumi.ResourceOption) (*SnapshotSchedulePolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SnapshotSchedulePolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SnapshotSchedulePolicyId'")
	}
	var resource SnapshotSchedulePolicy
	err := ctx.RegisterResource("google-native:baremetalsolution/v2:SnapshotSchedulePolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSnapshotSchedulePolicy gets an existing SnapshotSchedulePolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnapshotSchedulePolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SnapshotSchedulePolicyState, opts ...pulumi.ResourceOption) (*SnapshotSchedulePolicy, error) {
	var resource SnapshotSchedulePolicy
	err := ctx.ReadResource("google-native:baremetalsolution/v2:SnapshotSchedulePolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SnapshotSchedulePolicy resources.
type snapshotSchedulePolicyState struct {
}

type SnapshotSchedulePolicyState struct {
}

func (SnapshotSchedulePolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotSchedulePolicyState)(nil)).Elem()
}

type snapshotSchedulePolicyArgs struct {
	// The description of the snapshot schedule policy.
	Description *string `pulumi:"description"`
	// An identifier for the snapshot schedule policy, generated by the backend.
	Id *string `pulumi:"id"`
	// Labels as key value pairs.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	Project  *string           `pulumi:"project"`
	// The snapshot schedules contained in this policy. You can specify a maximum of 5 schedules.
	Schedules                []Schedule `pulumi:"schedules"`
	SnapshotSchedulePolicyId string     `pulumi:"snapshotSchedulePolicyId"`
	// The state of the snapshot schedule policy.
	State *SnapshotSchedulePolicyStateEnum `pulumi:"state"`
}

// The set of arguments for constructing a SnapshotSchedulePolicy resource.
type SnapshotSchedulePolicyArgs struct {
	// The description of the snapshot schedule policy.
	Description pulumi.StringPtrInput
	// An identifier for the snapshot schedule policy, generated by the backend.
	Id pulumi.StringPtrInput
	// Labels as key value pairs.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// The snapshot schedules contained in this policy. You can specify a maximum of 5 schedules.
	Schedules                ScheduleArrayInput
	SnapshotSchedulePolicyId pulumi.StringInput
	// The state of the snapshot schedule policy.
	State SnapshotSchedulePolicyStateEnumPtrInput
}

func (SnapshotSchedulePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotSchedulePolicyArgs)(nil)).Elem()
}

type SnapshotSchedulePolicyInput interface {
	pulumi.Input

	ToSnapshotSchedulePolicyOutput() SnapshotSchedulePolicyOutput
	ToSnapshotSchedulePolicyOutputWithContext(ctx context.Context) SnapshotSchedulePolicyOutput
}

func (*SnapshotSchedulePolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotSchedulePolicy)(nil)).Elem()
}

func (i *SnapshotSchedulePolicy) ToSnapshotSchedulePolicyOutput() SnapshotSchedulePolicyOutput {
	return i.ToSnapshotSchedulePolicyOutputWithContext(context.Background())
}

func (i *SnapshotSchedulePolicy) ToSnapshotSchedulePolicyOutputWithContext(ctx context.Context) SnapshotSchedulePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotSchedulePolicyOutput)
}

type SnapshotSchedulePolicyOutput struct{ *pulumi.OutputState }

func (SnapshotSchedulePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotSchedulePolicy)(nil)).Elem()
}

func (o SnapshotSchedulePolicyOutput) ToSnapshotSchedulePolicyOutput() SnapshotSchedulePolicyOutput {
	return o
}

func (o SnapshotSchedulePolicyOutput) ToSnapshotSchedulePolicyOutputWithContext(ctx context.Context) SnapshotSchedulePolicyOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotSchedulePolicyInput)(nil)).Elem(), &SnapshotSchedulePolicy{})
	pulumi.RegisterOutputType(SnapshotSchedulePolicyOutput{})
}
