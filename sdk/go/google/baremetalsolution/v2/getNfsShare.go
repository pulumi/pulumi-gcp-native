// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get details of a single NFS share.
func LookupNfsShare(ctx *pulumi.Context, args *LookupNfsShareArgs, opts ...pulumi.InvokeOption) (*LookupNfsShareResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNfsShareResult
	err := ctx.Invoke("google-native:baremetalsolution/v2:getNfsShare", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupNfsShareArgs struct {
	Location   string  `pulumi:"location"`
	NfsShareId string  `pulumi:"nfsShareId"`
	Project    *string `pulumi:"project"`
}

type LookupNfsShareResult struct {
	// List of allowed access points.
	AllowedClients []AllowedClientResponse `pulumi:"allowedClients"`
	// Labels as key value pairs.
	Labels map[string]string `pulumi:"labels"`
	// Immutable. The name of the NFS share.
	Name string `pulumi:"name"`
	// An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.
	NfsShareId string `pulumi:"nfsShareId"`
	// The requested size, in GiB.
	RequestedSizeGib string `pulumi:"requestedSizeGib"`
	// The state of the NFS share.
	State string `pulumi:"state"`
	// Immutable. The storage type of the underlying volume.
	StorageType string `pulumi:"storageType"`
	// The underlying volume of the share. Created automatically during provisioning.
	Volume string `pulumi:"volume"`
}

func LookupNfsShareOutput(ctx *pulumi.Context, args LookupNfsShareOutputArgs, opts ...pulumi.InvokeOption) LookupNfsShareResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNfsShareResult, error) {
			args := v.(LookupNfsShareArgs)
			r, err := LookupNfsShare(ctx, &args, opts...)
			var s LookupNfsShareResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNfsShareResultOutput)
}

type LookupNfsShareOutputArgs struct {
	Location   pulumi.StringInput    `pulumi:"location"`
	NfsShareId pulumi.StringInput    `pulumi:"nfsShareId"`
	Project    pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupNfsShareOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNfsShareArgs)(nil)).Elem()
}

type LookupNfsShareResultOutput struct{ *pulumi.OutputState }

func (LookupNfsShareResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNfsShareResult)(nil)).Elem()
}

func (o LookupNfsShareResultOutput) ToLookupNfsShareResultOutput() LookupNfsShareResultOutput {
	return o
}

func (o LookupNfsShareResultOutput) ToLookupNfsShareResultOutputWithContext(ctx context.Context) LookupNfsShareResultOutput {
	return o
}

// List of allowed access points.
func (o LookupNfsShareResultOutput) AllowedClients() AllowedClientResponseArrayOutput {
	return o.ApplyT(func(v LookupNfsShareResult) []AllowedClientResponse { return v.AllowedClients }).(AllowedClientResponseArrayOutput)
}

// Labels as key value pairs.
func (o LookupNfsShareResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNfsShareResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Immutable. The name of the NFS share.
func (o LookupNfsShareResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNfsShareResult) string { return v.Name }).(pulumi.StringOutput)
}

// An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.
func (o LookupNfsShareResultOutput) NfsShareId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNfsShareResult) string { return v.NfsShareId }).(pulumi.StringOutput)
}

// The requested size, in GiB.
func (o LookupNfsShareResultOutput) RequestedSizeGib() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNfsShareResult) string { return v.RequestedSizeGib }).(pulumi.StringOutput)
}

// The state of the NFS share.
func (o LookupNfsShareResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNfsShareResult) string { return v.State }).(pulumi.StringOutput)
}

// Immutable. The storage type of the underlying volume.
func (o LookupNfsShareResultOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNfsShareResult) string { return v.StorageType }).(pulumi.StringOutput)
}

// The underlying volume of the share. Created automatically during provisioning.
func (o LookupNfsShareResultOutput) Volume() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNfsShareResult) string { return v.Volume }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNfsShareResultOutput{})
}
