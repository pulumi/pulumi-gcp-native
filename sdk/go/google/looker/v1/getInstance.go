// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets details of a single Instance.
func LookupInstance(ctx *pulumi.Context, args *LookupInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceResult
	err := ctx.Invoke("google-native:looker/v1:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupInstanceArgs struct {
	InstanceId string  `pulumi:"instanceId"`
	Location   string  `pulumi:"location"`
	Project    *string `pulumi:"project"`
}

type LookupInstanceResult struct {
	// Looker Instance Admin settings.
	AdminSettings AdminSettingsResponse `pulumi:"adminSettings"`
	// Network name in the consumer project. Format: `projects/{project}/global/networks/{network}`. Note that the consumer network may be in a different GCP project than the consumer project that is hosting the Looker Instance.
	ConsumerNetwork string `pulumi:"consumerNetwork"`
	// The time when the Looker instance provisioning was first requested.
	CreateTime   string               `pulumi:"createTime"`
	CustomDomain CustomDomainResponse `pulumi:"customDomain"`
	// Maintenance denial period for this instance.
	DenyMaintenancePeriod DenyMaintenancePeriodResponse `pulumi:"denyMaintenancePeriod"`
	// Public Egress IP (IPv4).
	EgressPublicIp string `pulumi:"egressPublicIp"`
	// Encryption configuration (CMEK). Only set if CMEK has been enabled on the instance.
	EncryptionConfig EncryptionConfigResponse `pulumi:"encryptionConfig"`
	// Private Ingress IP (IPv4).
	IngressPrivateIp string `pulumi:"ingressPrivateIp"`
	// Public Ingress IP (IPv4).
	IngressPublicIp string `pulumi:"ingressPublicIp"`
	// Last computed maintenance denial period for this instance.
	LastDenyMaintenancePeriod DenyMaintenancePeriodResponse `pulumi:"lastDenyMaintenancePeriod"`
	// Looker instance URI which can be used to access the Looker Instance UI.
	LookerUri string `pulumi:"lookerUri"`
	// The Looker version that the instance is using.
	LookerVersion string `pulumi:"lookerVersion"`
	// Maintenance schedule for this instance.
	MaintenanceSchedule MaintenanceScheduleResponse `pulumi:"maintenanceSchedule"`
	// Maintenance window for this instance.
	MaintenanceWindow MaintenanceWindowResponse `pulumi:"maintenanceWindow"`
	// Format: `projects/{project}/locations/{location}/instances/{instance}`.
	Name string `pulumi:"name"`
	// Looker instance OAuth login settings.
	OauthConfig OAuthConfigResponse `pulumi:"oauthConfig"`
	// Platform edition.
	PlatformEdition string `pulumi:"platformEdition"`
	// Whether private IP is enabled on the Looker instance.
	PrivateIpEnabled bool `pulumi:"privateIpEnabled"`
	// Whether public IP is enabled on the Looker instance.
	PublicIpEnabled bool `pulumi:"publicIpEnabled"`
	// Name of a reserved IP address range within the Instance.consumer_network, to be used for private services access connection. May or may not be specified in a create request.
	ReservedRange string `pulumi:"reservedRange"`
	// The state of the instance.
	State string `pulumi:"state"`
	// The time when the Looker instance was last updated.
	UpdateTime string `pulumi:"updateTime"`
	// User metadata.
	UserMetadata UserMetadataResponse `pulumi:"userMetadata"`
}

func LookupInstanceOutput(ctx *pulumi.Context, args LookupInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInstanceResult, error) {
			args := v.(LookupInstanceArgs)
			r, err := LookupInstance(ctx, &args, opts...)
			var s LookupInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInstanceResultOutput)
}

type LookupInstanceOutputArgs struct {
	InstanceId pulumi.StringInput    `pulumi:"instanceId"`
	Location   pulumi.StringInput    `pulumi:"location"`
	Project    pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceArgs)(nil)).Elem()
}

type LookupInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceResult)(nil)).Elem()
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutput() LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutputWithContext(ctx context.Context) LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupInstanceResult] {
	return pulumix.Output[LookupInstanceResult]{
		OutputState: o.OutputState,
	}
}

// Looker Instance Admin settings.
func (o LookupInstanceResultOutput) AdminSettings() AdminSettingsResponseOutput {
	return o.ApplyT(func(v LookupInstanceResult) AdminSettingsResponse { return v.AdminSettings }).(AdminSettingsResponseOutput)
}

// Network name in the consumer project. Format: `projects/{project}/global/networks/{network}`. Note that the consumer network may be in a different GCP project than the consumer project that is hosting the Looker Instance.
func (o LookupInstanceResultOutput) ConsumerNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ConsumerNetwork }).(pulumi.StringOutput)
}

// The time when the Looker instance provisioning was first requested.
func (o LookupInstanceResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) CustomDomain() CustomDomainResponseOutput {
	return o.ApplyT(func(v LookupInstanceResult) CustomDomainResponse { return v.CustomDomain }).(CustomDomainResponseOutput)
}

// Maintenance denial period for this instance.
func (o LookupInstanceResultOutput) DenyMaintenancePeriod() DenyMaintenancePeriodResponseOutput {
	return o.ApplyT(func(v LookupInstanceResult) DenyMaintenancePeriodResponse { return v.DenyMaintenancePeriod }).(DenyMaintenancePeriodResponseOutput)
}

// Public Egress IP (IPv4).
func (o LookupInstanceResultOutput) EgressPublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.EgressPublicIp }).(pulumi.StringOutput)
}

// Encryption configuration (CMEK). Only set if CMEK has been enabled on the instance.
func (o LookupInstanceResultOutput) EncryptionConfig() EncryptionConfigResponseOutput {
	return o.ApplyT(func(v LookupInstanceResult) EncryptionConfigResponse { return v.EncryptionConfig }).(EncryptionConfigResponseOutput)
}

// Private Ingress IP (IPv4).
func (o LookupInstanceResultOutput) IngressPrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.IngressPrivateIp }).(pulumi.StringOutput)
}

// Public Ingress IP (IPv4).
func (o LookupInstanceResultOutput) IngressPublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.IngressPublicIp }).(pulumi.StringOutput)
}

// Last computed maintenance denial period for this instance.
func (o LookupInstanceResultOutput) LastDenyMaintenancePeriod() DenyMaintenancePeriodResponseOutput {
	return o.ApplyT(func(v LookupInstanceResult) DenyMaintenancePeriodResponse { return v.LastDenyMaintenancePeriod }).(DenyMaintenancePeriodResponseOutput)
}

// Looker instance URI which can be used to access the Looker Instance UI.
func (o LookupInstanceResultOutput) LookerUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.LookerUri }).(pulumi.StringOutput)
}

// The Looker version that the instance is using.
func (o LookupInstanceResultOutput) LookerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.LookerVersion }).(pulumi.StringOutput)
}

// Maintenance schedule for this instance.
func (o LookupInstanceResultOutput) MaintenanceSchedule() MaintenanceScheduleResponseOutput {
	return o.ApplyT(func(v LookupInstanceResult) MaintenanceScheduleResponse { return v.MaintenanceSchedule }).(MaintenanceScheduleResponseOutput)
}

// Maintenance window for this instance.
func (o LookupInstanceResultOutput) MaintenanceWindow() MaintenanceWindowResponseOutput {
	return o.ApplyT(func(v LookupInstanceResult) MaintenanceWindowResponse { return v.MaintenanceWindow }).(MaintenanceWindowResponseOutput)
}

// Format: `projects/{project}/locations/{location}/instances/{instance}`.
func (o LookupInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Looker instance OAuth login settings.
func (o LookupInstanceResultOutput) OauthConfig() OAuthConfigResponseOutput {
	return o.ApplyT(func(v LookupInstanceResult) OAuthConfigResponse { return v.OauthConfig }).(OAuthConfigResponseOutput)
}

// Platform edition.
func (o LookupInstanceResultOutput) PlatformEdition() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.PlatformEdition }).(pulumi.StringOutput)
}

// Whether private IP is enabled on the Looker instance.
func (o LookupInstanceResultOutput) PrivateIpEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.PrivateIpEnabled }).(pulumi.BoolOutput)
}

// Whether public IP is enabled on the Looker instance.
func (o LookupInstanceResultOutput) PublicIpEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.PublicIpEnabled }).(pulumi.BoolOutput)
}

// Name of a reserved IP address range within the Instance.consumer_network, to be used for private services access connection. May or may not be specified in a create request.
func (o LookupInstanceResultOutput) ReservedRange() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ReservedRange }).(pulumi.StringOutput)
}

// The state of the instance.
func (o LookupInstanceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.State }).(pulumi.StringOutput)
}

// The time when the Looker instance was last updated.
func (o LookupInstanceResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// User metadata.
func (o LookupInstanceResultOutput) UserMetadata() UserMetadataResponseOutput {
	return o.ApplyT(func(v LookupInstanceResult) UserMetadataResponse { return v.UserMetadata }).(UserMetadataResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceResultOutput{})
}
