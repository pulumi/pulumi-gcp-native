// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a tenancy unit with no tenant resources. If tenancy unit already exists, it will be returned, however, in this case, returned TenancyUnit does not have tenant_resources field set and ListTenancyUnits has to be used to get a complete TenancyUnit with all fields populated.
type ServiceTenancyUnit struct {
	pulumi.CustomResourceState
}

// NewServiceTenancyUnit registers a new resource with the given unique name, arguments, and options.
func NewServiceTenancyUnit(ctx *pulumi.Context,
	name string, args *ServiceTenancyUnitArgs, opts ...pulumi.ResourceOption) (*ServiceTenancyUnit, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServicesId == nil {
		return nil, errors.New("invalid value for required argument 'ServicesId'")
	}
	if args.ServicesId1 == nil {
		return nil, errors.New("invalid value for required argument 'ServicesId1'")
	}
	if args.ServicesId2 == nil {
		return nil, errors.New("invalid value for required argument 'ServicesId2'")
	}
	if args.TenancyUnitsId == nil {
		return nil, errors.New("invalid value for required argument 'TenancyUnitsId'")
	}
	var resource ServiceTenancyUnit
	err := ctx.RegisterResource("google-cloud:serviceconsumermanagement/v1:ServiceTenancyUnit", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceTenancyUnit gets an existing ServiceTenancyUnit resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceTenancyUnit(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceTenancyUnitState, opts ...pulumi.ResourceOption) (*ServiceTenancyUnit, error) {
	var resource ServiceTenancyUnit
	err := ctx.ReadResource("google-cloud:serviceconsumermanagement/v1:ServiceTenancyUnit", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceTenancyUnit resources.
type serviceTenancyUnitState struct {
}

type ServiceTenancyUnitState struct {
}

func (ServiceTenancyUnitState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceTenancyUnitState)(nil)).Elem()
}

type serviceTenancyUnitArgs struct {
	ServicesId  string `pulumi:"servicesId"`
	ServicesId1 string `pulumi:"servicesId1"`
	ServicesId2 string `pulumi:"servicesId2"`
	// Optional. Optional service producer-provided identifier of the tenancy unit. Must be no longer than 40 characters and preferably URI friendly. If it isn't provided, a UID for the tenancy unit is automatically generated. The identifier must be unique across a managed service. If the tenancy unit already exists for the managed service and service consumer pair, calling `CreateTenancyUnit` returns the existing tenancy unit if the provided identifier is identical or empty, otherwise the call fails.
	TenancyUnitId  *string `pulumi:"tenancyUnitId"`
	TenancyUnitsId string  `pulumi:"tenancyUnitsId"`
}

// The set of arguments for constructing a ServiceTenancyUnit resource.
type ServiceTenancyUnitArgs struct {
	ServicesId  pulumi.StringInput
	ServicesId1 pulumi.StringInput
	ServicesId2 pulumi.StringInput
	// Optional. Optional service producer-provided identifier of the tenancy unit. Must be no longer than 40 characters and preferably URI friendly. If it isn't provided, a UID for the tenancy unit is automatically generated. The identifier must be unique across a managed service. If the tenancy unit already exists for the managed service and service consumer pair, calling `CreateTenancyUnit` returns the existing tenancy unit if the provided identifier is identical or empty, otherwise the call fails.
	TenancyUnitId  pulumi.StringPtrInput
	TenancyUnitsId pulumi.StringInput
}

func (ServiceTenancyUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceTenancyUnitArgs)(nil)).Elem()
}

type ServiceTenancyUnitInput interface {
	pulumi.Input

	ToServiceTenancyUnitOutput() ServiceTenancyUnitOutput
	ToServiceTenancyUnitOutputWithContext(ctx context.Context) ServiceTenancyUnitOutput
}

func (*ServiceTenancyUnit) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTenancyUnit)(nil))
}

func (i *ServiceTenancyUnit) ToServiceTenancyUnitOutput() ServiceTenancyUnitOutput {
	return i.ToServiceTenancyUnitOutputWithContext(context.Background())
}

func (i *ServiceTenancyUnit) ToServiceTenancyUnitOutputWithContext(ctx context.Context) ServiceTenancyUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTenancyUnitOutput)
}

type ServiceTenancyUnitOutput struct {
	*pulumi.OutputState
}

func (ServiceTenancyUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTenancyUnit)(nil))
}

func (o ServiceTenancyUnitOutput) ToServiceTenancyUnitOutput() ServiceTenancyUnitOutput {
	return o
}

func (o ServiceTenancyUnitOutput) ToServiceTenancyUnitOutputWithContext(ctx context.Context) ServiceTenancyUnitOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ServiceTenancyUnitOutput{})
}
