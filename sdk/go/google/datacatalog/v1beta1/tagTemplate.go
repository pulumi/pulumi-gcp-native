// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a tag template. The user should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
type TagTemplate struct {
	pulumi.CustomResourceState

	// The display name for this template. Defaults to an empty string.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. This map must contain at least one field and at most 500 fields. The keys to this map are tag template field IDs. Field IDs can contain letters (both uppercase and lowercase), numbers (0-9) and underscores (_). Field IDs must be at least 1 character long and at most 64 characters long. Field IDs must start with a letter or underscore.
	Fields   GoogleCloudDatacatalogV1beta1TagTemplateFieldResponseOutput `pulumi:"fields"`
	Location pulumi.StringOutput                                         `pulumi:"location"`
	// The resource name of the tag template in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} Note that this TagTemplate and its child resources may not actually be stored in the location in this name.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Required. The id of the tag template to create.
	TagTemplateId pulumi.StringOutput `pulumi:"tagTemplateId"`
}

// NewTagTemplate registers a new resource with the given unique name, arguments, and options.
func NewTagTemplate(ctx *pulumi.Context,
	name string, args *TagTemplateArgs, opts ...pulumi.ResourceOption) (*TagTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Fields == nil {
		return nil, errors.New("invalid value for required argument 'Fields'")
	}
	if args.TagTemplateId == nil {
		return nil, errors.New("invalid value for required argument 'TagTemplateId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
		"tagTemplateId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TagTemplate
	err := ctx.RegisterResource("google-native:datacatalog/v1beta1:TagTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagTemplate gets an existing TagTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagTemplateState, opts ...pulumi.ResourceOption) (*TagTemplate, error) {
	var resource TagTemplate
	err := ctx.ReadResource("google-native:datacatalog/v1beta1:TagTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagTemplate resources.
type tagTemplateState struct {
}

type TagTemplateState struct {
}

func (TagTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagTemplateState)(nil)).Elem()
}

type tagTemplateArgs struct {
	// The display name for this template. Defaults to an empty string.
	DisplayName *string `pulumi:"displayName"`
	// Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. This map must contain at least one field and at most 500 fields. The keys to this map are tag template field IDs. Field IDs can contain letters (both uppercase and lowercase), numbers (0-9) and underscores (_). Field IDs must be at least 1 character long and at most 64 characters long. Field IDs must start with a letter or underscore.
	Fields   GoogleCloudDatacatalogV1beta1TagTemplateField `pulumi:"fields"`
	Location *string                                       `pulumi:"location"`
	// The resource name of the tag template in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} Note that this TagTemplate and its child resources may not actually be stored in the location in this name.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Required. The id of the tag template to create.
	TagTemplateId string `pulumi:"tagTemplateId"`
}

// The set of arguments for constructing a TagTemplate resource.
type TagTemplateArgs struct {
	// The display name for this template. Defaults to an empty string.
	DisplayName pulumi.StringPtrInput
	// Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. This map must contain at least one field and at most 500 fields. The keys to this map are tag template field IDs. Field IDs can contain letters (both uppercase and lowercase), numbers (0-9) and underscores (_). Field IDs must be at least 1 character long and at most 64 characters long. Field IDs must start with a letter or underscore.
	Fields   GoogleCloudDatacatalogV1beta1TagTemplateFieldInput
	Location pulumi.StringPtrInput
	// The resource name of the tag template in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} Note that this TagTemplate and its child resources may not actually be stored in the location in this name.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Required. The id of the tag template to create.
	TagTemplateId pulumi.StringInput
}

func (TagTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagTemplateArgs)(nil)).Elem()
}

type TagTemplateInput interface {
	pulumi.Input

	ToTagTemplateOutput() TagTemplateOutput
	ToTagTemplateOutputWithContext(ctx context.Context) TagTemplateOutput
}

func (*TagTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**TagTemplate)(nil)).Elem()
}

func (i *TagTemplate) ToTagTemplateOutput() TagTemplateOutput {
	return i.ToTagTemplateOutputWithContext(context.Background())
}

func (i *TagTemplate) ToTagTemplateOutputWithContext(ctx context.Context) TagTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagTemplateOutput)
}

type TagTemplateOutput struct{ *pulumi.OutputState }

func (TagTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagTemplate)(nil)).Elem()
}

func (o TagTemplateOutput) ToTagTemplateOutput() TagTemplateOutput {
	return o
}

func (o TagTemplateOutput) ToTagTemplateOutputWithContext(ctx context.Context) TagTemplateOutput {
	return o
}

// The display name for this template. Defaults to an empty string.
func (o TagTemplateOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *TagTemplate) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. This map must contain at least one field and at most 500 fields. The keys to this map are tag template field IDs. Field IDs can contain letters (both uppercase and lowercase), numbers (0-9) and underscores (_). Field IDs must be at least 1 character long and at most 64 characters long. Field IDs must start with a letter or underscore.
func (o TagTemplateOutput) Fields() GoogleCloudDatacatalogV1beta1TagTemplateFieldResponseOutput {
	return o.ApplyT(func(v *TagTemplate) GoogleCloudDatacatalogV1beta1TagTemplateFieldResponseOutput { return v.Fields }).(GoogleCloudDatacatalogV1beta1TagTemplateFieldResponseOutput)
}

func (o TagTemplateOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *TagTemplate) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the tag template in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} Note that this TagTemplate and its child resources may not actually be stored in the location in this name.
func (o TagTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TagTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o TagTemplateOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *TagTemplate) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Required. The id of the tag template to create.
func (o TagTemplateOutput) TagTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v *TagTemplate) pulumi.StringOutput { return v.TagTemplateId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TagTemplateInput)(nil)).Elem(), &TagTemplate{})
	pulumi.RegisterOutputType(TagTemplateOutput{})
}
