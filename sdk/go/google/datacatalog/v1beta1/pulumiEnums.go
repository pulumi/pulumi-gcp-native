// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The type of the entry. Only used for Entries with types in the EntryType enum.
type EntryType pulumi.String

const (
	// Default unknown type.
	EntryTypeEntryTypeUnspecified = EntryType("ENTRY_TYPE_UNSPECIFIED")
	// Output only. The type of entry that has a GoogleSQL schema, including logical views.
	EntryTypeTable = EntryType("TABLE")
	// Output only. The type of models. https://cloud.google.com/bigquery-ml/docs/bigqueryml-intro
	EntryTypeModel = EntryType("MODEL")
	// Output only. An entry type which is used for streaming entries. Example: Pub/Sub topic.
	EntryTypeDataStream = EntryType("DATA_STREAM")
	// An entry type which is a set of files or objects. Example: Cloud Storage fileset.
	EntryTypeFileset = EntryType("FILESET")
)

func (EntryType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e EntryType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EntryType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EntryType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EntryType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaxonomyActivatedPolicyTypesItem pulumi.String

const (
	// Unspecified policy type.
	TaxonomyActivatedPolicyTypesItemPolicyTypeUnspecified = TaxonomyActivatedPolicyTypesItem("POLICY_TYPE_UNSPECIFIED")
	// Fine grained access control policy, which enables access control on tagged resources.
	TaxonomyActivatedPolicyTypesItemFineGrainedAccessControl = TaxonomyActivatedPolicyTypesItem("FINE_GRAINED_ACCESS_CONTROL")
)

func (TaxonomyActivatedPolicyTypesItem) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e TaxonomyActivatedPolicyTypesItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaxonomyActivatedPolicyTypesItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaxonomyActivatedPolicyTypesItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaxonomyActivatedPolicyTypesItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// TaxonomyActivatedPolicyTypesItemArrayInput is an input type that accepts TaxonomyActivatedPolicyTypesItemArray and TaxonomyActivatedPolicyTypesItemArrayOutput values.
// You can construct a concrete instance of `TaxonomyActivatedPolicyTypesItemArrayInput` via:
//
//          TaxonomyActivatedPolicyTypesItemArray{ TaxonomyActivatedPolicyTypesItemArgs{...} }
type TaxonomyActivatedPolicyTypesItemArrayInput interface {
	pulumi.Input

	ToTaxonomyActivatedPolicyTypesItemArrayOutput() TaxonomyActivatedPolicyTypesItemArrayOutput
	ToTaxonomyActivatedPolicyTypesItemArrayOutputWithContext(context.Context) TaxonomyActivatedPolicyTypesItemArrayOutput
}

type TaxonomyActivatedPolicyTypesItemArray []TaxonomyActivatedPolicyTypesItem

func (TaxonomyActivatedPolicyTypesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaxonomyActivatedPolicyTypesItem)(nil)).Elem()
}

func (i TaxonomyActivatedPolicyTypesItemArray) ToTaxonomyActivatedPolicyTypesItemArrayOutput() TaxonomyActivatedPolicyTypesItemArrayOutput {
	return i.ToTaxonomyActivatedPolicyTypesItemArrayOutputWithContext(context.Background())
}

func (i TaxonomyActivatedPolicyTypesItemArray) ToTaxonomyActivatedPolicyTypesItemArrayOutputWithContext(ctx context.Context) TaxonomyActivatedPolicyTypesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaxonomyActivatedPolicyTypesItemArrayOutput)
}

type TaxonomyActivatedPolicyTypesItemArrayOutput struct{ *pulumi.OutputState }

func (TaxonomyActivatedPolicyTypesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaxonomyActivatedPolicyTypesItem)(nil)).Elem()
}

func (o TaxonomyActivatedPolicyTypesItemArrayOutput) ToTaxonomyActivatedPolicyTypesItemArrayOutput() TaxonomyActivatedPolicyTypesItemArrayOutput {
	return o
}

func (o TaxonomyActivatedPolicyTypesItemArrayOutput) ToTaxonomyActivatedPolicyTypesItemArrayOutputWithContext(ctx context.Context) TaxonomyActivatedPolicyTypesItemArrayOutput {
	return o
}

func (o TaxonomyActivatedPolicyTypesItemArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]TaxonomyActivatedPolicyTypesItem)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}
