// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a taxonomy in the specified project.
type Taxonomy struct {
	pulumi.CustomResourceState
}

// NewTaxonomy registers a new resource with the given unique name, arguments, and options.
func NewTaxonomy(ctx *pulumi.Context,
	name string, args *TaxonomyArgs, opts ...pulumi.ResourceOption) (*Taxonomy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	if args.TaxonomiesId == nil {
		return nil, errors.New("invalid value for required argument 'TaxonomiesId'")
	}
	var resource Taxonomy
	err := ctx.RegisterResource("google-cloud:datacatalog/v1beta1:Taxonomy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTaxonomy gets an existing Taxonomy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTaxonomy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TaxonomyState, opts ...pulumi.ResourceOption) (*Taxonomy, error) {
	var resource Taxonomy
	err := ctx.ReadResource("google-cloud:datacatalog/v1beta1:Taxonomy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Taxonomy resources.
type taxonomyState struct {
}

type TaxonomyState struct {
}

func (TaxonomyState) ElementType() reflect.Type {
	return reflect.TypeOf((*taxonomyState)(nil)).Elem()
}

type taxonomyArgs struct {
	// Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list.
	ActivatedPolicyTypes []string `pulumi:"activatedPolicyTypes"`
	// Optional. Description of this taxonomy. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description.
	Description *string `pulumi:"description"`
	// Required. User defined name of this taxonomy. It must: contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.
	DisplayName *string `pulumi:"displayName"`
	LocationsId string  `pulumi:"locationsId"`
	// Output only. Resource name of this taxonomy, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
	Name *string `pulumi:"name"`
	// Output only. Number of policy tags contained in this taxonomy.
	PolicyTagCount *int   `pulumi:"policyTagCount"`
	ProjectsId     string `pulumi:"projectsId"`
	TaxonomiesId   string `pulumi:"taxonomiesId"`
	// Output only. Timestamps about this taxonomy. Only create_time and update_time are used.
	TaxonomyTimestamps *GoogleCloudDatacatalogV1beta1SystemTimestamps `pulumi:"taxonomyTimestamps"`
}

// The set of arguments for constructing a Taxonomy resource.
type TaxonomyArgs struct {
	// Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list.
	ActivatedPolicyTypes pulumi.StringArrayInput
	// Optional. Description of this taxonomy. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description.
	Description pulumi.StringPtrInput
	// Required. User defined name of this taxonomy. It must: contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.
	DisplayName pulumi.StringPtrInput
	LocationsId pulumi.StringInput
	// Output only. Resource name of this taxonomy, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
	Name pulumi.StringPtrInput
	// Output only. Number of policy tags contained in this taxonomy.
	PolicyTagCount pulumi.IntPtrInput
	ProjectsId     pulumi.StringInput
	TaxonomiesId   pulumi.StringInput
	// Output only. Timestamps about this taxonomy. Only create_time and update_time are used.
	TaxonomyTimestamps GoogleCloudDatacatalogV1beta1SystemTimestampsPtrInput
}

func (TaxonomyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*taxonomyArgs)(nil)).Elem()
}

type TaxonomyInput interface {
	pulumi.Input

	ToTaxonomyOutput() TaxonomyOutput
	ToTaxonomyOutputWithContext(ctx context.Context) TaxonomyOutput
}

func (*Taxonomy) ElementType() reflect.Type {
	return reflect.TypeOf((*Taxonomy)(nil))
}

func (i *Taxonomy) ToTaxonomyOutput() TaxonomyOutput {
	return i.ToTaxonomyOutputWithContext(context.Background())
}

func (i *Taxonomy) ToTaxonomyOutputWithContext(ctx context.Context) TaxonomyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaxonomyOutput)
}

type TaxonomyOutput struct {
	*pulumi.OutputState
}

func (TaxonomyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Taxonomy)(nil))
}

func (o TaxonomyOutput) ToTaxonomyOutput() TaxonomyOutput {
	return o
}

func (o TaxonomyOutput) ToTaxonomyOutputWithContext(ctx context.Context) TaxonomyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(TaxonomyOutput{})
}
