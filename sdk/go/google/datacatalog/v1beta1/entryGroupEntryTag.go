// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a tag on an Entry. Note: The project identified by the `parent` parameter for the [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters) and the [tag template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters) used to create the tag must be from the same organization.
type EntryGroupEntryTag struct {
	pulumi.CustomResourceState
}

// NewEntryGroupEntryTag registers a new resource with the given unique name, arguments, and options.
func NewEntryGroupEntryTag(ctx *pulumi.Context,
	name string, args *EntryGroupEntryTagArgs, opts ...pulumi.ResourceOption) (*EntryGroupEntryTag, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EntriesId == nil {
		return nil, errors.New("invalid value for required argument 'EntriesId'")
	}
	if args.EntryGroupsId == nil {
		return nil, errors.New("invalid value for required argument 'EntryGroupsId'")
	}
	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	if args.TagsId == nil {
		return nil, errors.New("invalid value for required argument 'TagsId'")
	}
	var resource EntryGroupEntryTag
	err := ctx.RegisterResource("google-cloud:datacatalog/v1beta1:EntryGroupEntryTag", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEntryGroupEntryTag gets an existing EntryGroupEntryTag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEntryGroupEntryTag(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EntryGroupEntryTagState, opts ...pulumi.ResourceOption) (*EntryGroupEntryTag, error) {
	var resource EntryGroupEntryTag
	err := ctx.ReadResource("google-cloud:datacatalog/v1beta1:EntryGroupEntryTag", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EntryGroupEntryTag resources.
type entryGroupEntryTagState struct {
}

type EntryGroupEntryTagState struct {
}

func (EntryGroupEntryTagState) ElementType() reflect.Type {
	return reflect.TypeOf((*entryGroupEntryTagState)(nil)).Elem()
}

type entryGroupEntryTagArgs struct {
	// Resources like Entry can have schemas associated with them. This scope allows users to attach tags to an individual column based on that schema. For attaching a tag to a nested column, use `.` to separate the column names. Example: * `outer_column.inner_column`
	Column        *string `pulumi:"column"`
	EntriesId     string  `pulumi:"entriesId"`
	EntryGroupsId string  `pulumi:"entryGroupsId"`
	// Required. This maps the ID of a tag field to the value of and additional information about that field. Valid field IDs are defined by the tag's template. A tag must have at least 1 field and at most 500 fields.
	Fields      map[string]string `pulumi:"fields"`
	LocationsId string            `pulumi:"locationsId"`
	// The resource name of the tag in URL format. Example: * projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where `tag_id` is a system-generated identifier. Note that this Tag may not actually be stored in the location in this name.
	Name       *string `pulumi:"name"`
	ProjectsId string  `pulumi:"projectsId"`
	TagsId     string  `pulumi:"tagsId"`
	// Required. The resource name of the tag template that this tag uses. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} This field cannot be modified after creation.
	Template *string `pulumi:"template"`
}

// The set of arguments for constructing a EntryGroupEntryTag resource.
type EntryGroupEntryTagArgs struct {
	// Resources like Entry can have schemas associated with them. This scope allows users to attach tags to an individual column based on that schema. For attaching a tag to a nested column, use `.` to separate the column names. Example: * `outer_column.inner_column`
	Column        pulumi.StringPtrInput
	EntriesId     pulumi.StringInput
	EntryGroupsId pulumi.StringInput
	// Required. This maps the ID of a tag field to the value of and additional information about that field. Valid field IDs are defined by the tag's template. A tag must have at least 1 field and at most 500 fields.
	Fields      pulumi.StringMapInput
	LocationsId pulumi.StringInput
	// The resource name of the tag in URL format. Example: * projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where `tag_id` is a system-generated identifier. Note that this Tag may not actually be stored in the location in this name.
	Name       pulumi.StringPtrInput
	ProjectsId pulumi.StringInput
	TagsId     pulumi.StringInput
	// Required. The resource name of the tag template that this tag uses. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} This field cannot be modified after creation.
	Template pulumi.StringPtrInput
}

func (EntryGroupEntryTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*entryGroupEntryTagArgs)(nil)).Elem()
}

type EntryGroupEntryTagInput interface {
	pulumi.Input

	ToEntryGroupEntryTagOutput() EntryGroupEntryTagOutput
	ToEntryGroupEntryTagOutputWithContext(ctx context.Context) EntryGroupEntryTagOutput
}

func (*EntryGroupEntryTag) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryGroupEntryTag)(nil))
}

func (i *EntryGroupEntryTag) ToEntryGroupEntryTagOutput() EntryGroupEntryTagOutput {
	return i.ToEntryGroupEntryTagOutputWithContext(context.Background())
}

func (i *EntryGroupEntryTag) ToEntryGroupEntryTagOutputWithContext(ctx context.Context) EntryGroupEntryTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryGroupEntryTagOutput)
}

type EntryGroupEntryTagOutput struct {
	*pulumi.OutputState
}

func (EntryGroupEntryTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntryGroupEntryTag)(nil))
}

func (o EntryGroupEntryTagOutput) ToEntryGroupEntryTagOutput() EntryGroupEntryTagOutput {
	return o
}

func (o EntryGroupEntryTagOutput) ToEntryGroupEntryTagOutputWithContext(ctx context.Context) EntryGroupEntryTagOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(EntryGroupEntryTagOutput{})
}
