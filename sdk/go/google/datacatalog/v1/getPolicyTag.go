// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a policy tag.
func LookupPolicyTag(ctx *pulumi.Context, args *LookupPolicyTagArgs, opts ...pulumi.InvokeOption) (*LookupPolicyTagResult, error) {
	var rv LookupPolicyTagResult
	err := ctx.Invoke("google-native:datacatalog/v1:getPolicyTag", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPolicyTagArgs struct {
	Location    string  `pulumi:"location"`
	PolicyTagId string  `pulumi:"policyTagId"`
	Project     *string `pulumi:"project"`
	TaxonomyId  string  `pulumi:"taxonomyId"`
}

type LookupPolicyTagResult struct {
	// Resource names of child policy tags of this policy tag.
	ChildPolicyTags []string `pulumi:"childPolicyTags"`
	// Description of this policy tag. If not set, defaults to empty. The description must contain only Unicode characters, tabs, newlines, carriage returns and page breaks, and be at most 2000 bytes long when encoded in UTF-8.
	Description string `pulumi:"description"`
	// User-defined name of this policy tag. The name can't start or end with spaces and must be unique within the parent taxonomy, contain only Unicode letters, numbers, underscores, dashes and spaces, and be at most 200 bytes long when encoded in UTF-8.
	DisplayName string `pulumi:"displayName"`
	// Resource name of this policy tag in the URL format. The policy tag manager generates unique taxonomy IDs and policy tag IDs.
	Name string `pulumi:"name"`
	// Resource name of this policy tag's parent policy tag. If empty, this is a top level tag. If not set, defaults to an empty string. For example, for the "LatLong" policy tag in the example above, this field contains the resource name of the "Geolocation" policy tag, and, for "Geolocation", this field is empty.
	ParentPolicyTag string `pulumi:"parentPolicyTag"`
}

func LookupPolicyTagOutput(ctx *pulumi.Context, args LookupPolicyTagOutputArgs, opts ...pulumi.InvokeOption) LookupPolicyTagResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPolicyTagResult, error) {
			args := v.(LookupPolicyTagArgs)
			r, err := LookupPolicyTag(ctx, &args, opts...)
			var s LookupPolicyTagResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPolicyTagResultOutput)
}

type LookupPolicyTagOutputArgs struct {
	Location    pulumi.StringInput    `pulumi:"location"`
	PolicyTagId pulumi.StringInput    `pulumi:"policyTagId"`
	Project     pulumi.StringPtrInput `pulumi:"project"`
	TaxonomyId  pulumi.StringInput    `pulumi:"taxonomyId"`
}

func (LookupPolicyTagOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyTagArgs)(nil)).Elem()
}

type LookupPolicyTagResultOutput struct{ *pulumi.OutputState }

func (LookupPolicyTagResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyTagResult)(nil)).Elem()
}

func (o LookupPolicyTagResultOutput) ToLookupPolicyTagResultOutput() LookupPolicyTagResultOutput {
	return o
}

func (o LookupPolicyTagResultOutput) ToLookupPolicyTagResultOutputWithContext(ctx context.Context) LookupPolicyTagResultOutput {
	return o
}

// Resource names of child policy tags of this policy tag.
func (o LookupPolicyTagResultOutput) ChildPolicyTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPolicyTagResult) []string { return v.ChildPolicyTags }).(pulumi.StringArrayOutput)
}

// Description of this policy tag. If not set, defaults to empty. The description must contain only Unicode characters, tabs, newlines, carriage returns and page breaks, and be at most 2000 bytes long when encoded in UTF-8.
func (o LookupPolicyTagResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyTagResult) string { return v.Description }).(pulumi.StringOutput)
}

// User-defined name of this policy tag. The name can't start or end with spaces and must be unique within the parent taxonomy, contain only Unicode letters, numbers, underscores, dashes and spaces, and be at most 200 bytes long when encoded in UTF-8.
func (o LookupPolicyTagResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyTagResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Resource name of this policy tag in the URL format. The policy tag manager generates unique taxonomy IDs and policy tag IDs.
func (o LookupPolicyTagResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyTagResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource name of this policy tag's parent policy tag. If empty, this is a top level tag. If not set, defaults to an empty string. For example, for the "LatLong" policy tag in the example above, this field contains the resource name of the "Geolocation" policy tag, and, for "Geolocation", this field is empty.
func (o LookupPolicyTagResultOutput) ParentPolicyTag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyTagResult) string { return v.ParentPolicyTag }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPolicyTagResultOutput{})
}
