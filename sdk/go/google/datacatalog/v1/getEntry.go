// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets an entry.
func LookupEntry(ctx *pulumi.Context, args *LookupEntryArgs, opts ...pulumi.InvokeOption) (*LookupEntryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEntryResult
	err := ctx.Invoke("google-native:datacatalog/v1:getEntry", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEntryArgs struct {
	EntryGroupId string  `pulumi:"entryGroupId"`
	EntryId      string  `pulumi:"entryId"`
	Location     string  `pulumi:"location"`
	Project      *string `pulumi:"project"`
}

type LookupEntryResult struct {
	// Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
	BigqueryDateShardedSpec GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse `pulumi:"bigqueryDateShardedSpec"`
	// Specification that applies to a BigQuery table. Valid only for entries with the `TABLE` type.
	BigqueryTableSpec GoogleCloudDatacatalogV1BigQueryTableSpecResponse `pulumi:"bigqueryTableSpec"`
	// Business Context of the entry. Not supported for BigQuery datasets
	BusinessContext GoogleCloudDatacatalogV1BusinessContextResponse `pulumi:"businessContext"`
	// Specification that applies to Cloud Bigtable system. Only settable when `integrated_system` is equal to `CLOUD_BIGTABLE`
	CloudBigtableSystemSpec GoogleCloudDatacatalogV1CloudBigtableSystemSpecResponse `pulumi:"cloudBigtableSystemSpec"`
	// Physical location of the entry.
	DataSource GoogleCloudDatacatalogV1DataSourceResponse `pulumi:"dataSource"`
	// Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type.
	DataSourceConnectionSpec GoogleCloudDatacatalogV1DataSourceConnectionSpecResponse `pulumi:"dataSourceConnectionSpec"`
	// Specification that applies to a table resource. Valid only for entries with the `TABLE` or `EXPLORE` type.
	DatabaseTableSpec GoogleCloudDatacatalogV1DatabaseTableSpecResponse `pulumi:"databaseTableSpec"`
	// Specification that applies to a dataset.
	DatasetSpec GoogleCloudDatacatalogV1DatasetSpecResponse `pulumi:"datasetSpec"`
	// Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string.
	Description string `pulumi:"description"`
	// Display name of an entry. The maximum size is 500 bytes when encoded in UTF-8. Default value is an empty string.
	DisplayName string `pulumi:"displayName"`
	// Specification that applies to a fileset resource. Valid only for entries with the `FILESET` type.
	FilesetSpec GoogleCloudDatacatalogV1FilesetSpecResponse `pulumi:"filesetSpec"`
	// [Fully Qualified Name (FQN)](https://cloud.google.com//data-catalog/docs/fully-qualified-names) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation, and read-only later. Can be used for search and lookup of the entries.
	FullyQualifiedName string `pulumi:"fullyQualifiedName"`
	// Specification that applies to a Cloud Storage fileset. Valid only for entries with the `FILESET` type.
	GcsFilesetSpec GoogleCloudDatacatalogV1GcsFilesetSpecResponse `pulumi:"gcsFilesetSpec"`
	// Indicates the entry's source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.
	IntegratedSystem string `pulumi:"integratedSystem"`
	// Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system.
	Labels map[string]string `pulumi:"labels"`
	// The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.
	LinkedResource string `pulumi:"linkedResource"`
	// Specification that applies to Looker sysstem. Only settable when `user_specified_system` is equal to `LOOKER`
	LookerSystemSpec GoogleCloudDatacatalogV1LookerSystemSpecResponse `pulumi:"lookerSystemSpec"`
	// Model specification.
	ModelSpec GoogleCloudDatacatalogV1ModelSpecResponse `pulumi:"modelSpec"`
	// The resource name of an entry in URL format. Note: The entry itself and its child resources might not be stored in the location specified in its name.
	Name string `pulumi:"name"`
	// Additional information related to the entry. Private to the current user.
	PersonalDetails GoogleCloudDatacatalogV1PersonalDetailsResponse `pulumi:"personalDetails"`
	// Specification that applies to a user-defined function or procedure. Valid only for entries with the `ROUTINE` type.
	RoutineSpec GoogleCloudDatacatalogV1RoutineSpecResponse `pulumi:"routineSpec"`
	// Schema of the entry. An entry might not have any schema attached to it.
	Schema GoogleCloudDatacatalogV1SchemaResponse `pulumi:"schema"`
	// Specification that applies to a Service resource.
	ServiceSpec GoogleCloudDatacatalogV1ServiceSpecResponse `pulumi:"serviceSpec"`
	// Timestamps from the underlying resource, not from the Data Catalog entry. Output only when the entry has a system listed in the `IntegratedSystem` enum. For entries with `user_specified_system`, this field is optional and defaults to an empty timestamp.
	SourceSystemTimestamps GoogleCloudDatacatalogV1SystemTimestampsResponse `pulumi:"sourceSystemTimestamps"`
	// Specification that applies to a relational database system. Only settable when `user_specified_system` is equal to `SQL_DATABASE`
	SqlDatabaseSystemSpec GoogleCloudDatacatalogV1SqlDatabaseSystemSpecResponse `pulumi:"sqlDatabaseSystemSpec"`
	// The type of the entry. For details, see [`EntryType`](#entrytype).
	Type string `pulumi:"type"`
	// Resource usage statistics.
	UsageSignal GoogleCloudDatacatalogV1UsageSignalResponse `pulumi:"usageSignal"`
	// Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
	UserSpecifiedSystem string `pulumi:"userSpecifiedSystem"`
	// Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
	UserSpecifiedType string `pulumi:"userSpecifiedType"`
}

func LookupEntryOutput(ctx *pulumi.Context, args LookupEntryOutputArgs, opts ...pulumi.InvokeOption) LookupEntryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEntryResult, error) {
			args := v.(LookupEntryArgs)
			r, err := LookupEntry(ctx, &args, opts...)
			var s LookupEntryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEntryResultOutput)
}

type LookupEntryOutputArgs struct {
	EntryGroupId pulumi.StringInput    `pulumi:"entryGroupId"`
	EntryId      pulumi.StringInput    `pulumi:"entryId"`
	Location     pulumi.StringInput    `pulumi:"location"`
	Project      pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupEntryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntryArgs)(nil)).Elem()
}

type LookupEntryResultOutput struct{ *pulumi.OutputState }

func (LookupEntryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntryResult)(nil)).Elem()
}

func (o LookupEntryResultOutput) ToLookupEntryResultOutput() LookupEntryResultOutput {
	return o
}

func (o LookupEntryResultOutput) ToLookupEntryResultOutputWithContext(ctx context.Context) LookupEntryResultOutput {
	return o
}

func (o LookupEntryResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupEntryResult] {
	return pulumix.Output[LookupEntryResult]{
		OutputState: o.OutputState,
	}
}

// Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
func (o LookupEntryResultOutput) BigqueryDateShardedSpec() GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse {
		return v.BigqueryDateShardedSpec
	}).(GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponseOutput)
}

// Specification that applies to a BigQuery table. Valid only for entries with the `TABLE` type.
func (o LookupEntryResultOutput) BigqueryTableSpec() GoogleCloudDatacatalogV1BigQueryTableSpecResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1BigQueryTableSpecResponse {
		return v.BigqueryTableSpec
	}).(GoogleCloudDatacatalogV1BigQueryTableSpecResponseOutput)
}

// Business Context of the entry. Not supported for BigQuery datasets
func (o LookupEntryResultOutput) BusinessContext() GoogleCloudDatacatalogV1BusinessContextResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1BusinessContextResponse { return v.BusinessContext }).(GoogleCloudDatacatalogV1BusinessContextResponseOutput)
}

// Specification that applies to Cloud Bigtable system. Only settable when `integrated_system` is equal to `CLOUD_BIGTABLE`
func (o LookupEntryResultOutput) CloudBigtableSystemSpec() GoogleCloudDatacatalogV1CloudBigtableSystemSpecResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1CloudBigtableSystemSpecResponse {
		return v.CloudBigtableSystemSpec
	}).(GoogleCloudDatacatalogV1CloudBigtableSystemSpecResponseOutput)
}

// Physical location of the entry.
func (o LookupEntryResultOutput) DataSource() GoogleCloudDatacatalogV1DataSourceResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1DataSourceResponse { return v.DataSource }).(GoogleCloudDatacatalogV1DataSourceResponseOutput)
}

// Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type.
func (o LookupEntryResultOutput) DataSourceConnectionSpec() GoogleCloudDatacatalogV1DataSourceConnectionSpecResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1DataSourceConnectionSpecResponse {
		return v.DataSourceConnectionSpec
	}).(GoogleCloudDatacatalogV1DataSourceConnectionSpecResponseOutput)
}

// Specification that applies to a table resource. Valid only for entries with the `TABLE` or `EXPLORE` type.
func (o LookupEntryResultOutput) DatabaseTableSpec() GoogleCloudDatacatalogV1DatabaseTableSpecResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1DatabaseTableSpecResponse {
		return v.DatabaseTableSpec
	}).(GoogleCloudDatacatalogV1DatabaseTableSpecResponseOutput)
}

// Specification that applies to a dataset.
func (o LookupEntryResultOutput) DatasetSpec() GoogleCloudDatacatalogV1DatasetSpecResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1DatasetSpecResponse { return v.DatasetSpec }).(GoogleCloudDatacatalogV1DatasetSpecResponseOutput)
}

// Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string.
func (o LookupEntryResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryResult) string { return v.Description }).(pulumi.StringOutput)
}

// Display name of an entry. The maximum size is 500 bytes when encoded in UTF-8. Default value is an empty string.
func (o LookupEntryResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Specification that applies to a fileset resource. Valid only for entries with the `FILESET` type.
func (o LookupEntryResultOutput) FilesetSpec() GoogleCloudDatacatalogV1FilesetSpecResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1FilesetSpecResponse { return v.FilesetSpec }).(GoogleCloudDatacatalogV1FilesetSpecResponseOutput)
}

// [Fully Qualified Name (FQN)](https://cloud.google.com//data-catalog/docs/fully-qualified-names) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation, and read-only later. Can be used for search and lookup of the entries.
func (o LookupEntryResultOutput) FullyQualifiedName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryResult) string { return v.FullyQualifiedName }).(pulumi.StringOutput)
}

// Specification that applies to a Cloud Storage fileset. Valid only for entries with the `FILESET` type.
func (o LookupEntryResultOutput) GcsFilesetSpec() GoogleCloudDatacatalogV1GcsFilesetSpecResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1GcsFilesetSpecResponse { return v.GcsFilesetSpec }).(GoogleCloudDatacatalogV1GcsFilesetSpecResponseOutput)
}

// Indicates the entry's source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.
func (o LookupEntryResultOutput) IntegratedSystem() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryResult) string { return v.IntegratedSystem }).(pulumi.StringOutput)
}

// Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system.
func (o LookupEntryResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupEntryResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.
func (o LookupEntryResultOutput) LinkedResource() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryResult) string { return v.LinkedResource }).(pulumi.StringOutput)
}

// Specification that applies to Looker sysstem. Only settable when `user_specified_system` is equal to `LOOKER`
func (o LookupEntryResultOutput) LookerSystemSpec() GoogleCloudDatacatalogV1LookerSystemSpecResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1LookerSystemSpecResponse { return v.LookerSystemSpec }).(GoogleCloudDatacatalogV1LookerSystemSpecResponseOutput)
}

// Model specification.
func (o LookupEntryResultOutput) ModelSpec() GoogleCloudDatacatalogV1ModelSpecResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1ModelSpecResponse { return v.ModelSpec }).(GoogleCloudDatacatalogV1ModelSpecResponseOutput)
}

// The resource name of an entry in URL format. Note: The entry itself and its child resources might not be stored in the location specified in its name.
func (o LookupEntryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryResult) string { return v.Name }).(pulumi.StringOutput)
}

// Additional information related to the entry. Private to the current user.
func (o LookupEntryResultOutput) PersonalDetails() GoogleCloudDatacatalogV1PersonalDetailsResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1PersonalDetailsResponse { return v.PersonalDetails }).(GoogleCloudDatacatalogV1PersonalDetailsResponseOutput)
}

// Specification that applies to a user-defined function or procedure. Valid only for entries with the `ROUTINE` type.
func (o LookupEntryResultOutput) RoutineSpec() GoogleCloudDatacatalogV1RoutineSpecResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1RoutineSpecResponse { return v.RoutineSpec }).(GoogleCloudDatacatalogV1RoutineSpecResponseOutput)
}

// Schema of the entry. An entry might not have any schema attached to it.
func (o LookupEntryResultOutput) Schema() GoogleCloudDatacatalogV1SchemaResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1SchemaResponse { return v.Schema }).(GoogleCloudDatacatalogV1SchemaResponseOutput)
}

// Specification that applies to a Service resource.
func (o LookupEntryResultOutput) ServiceSpec() GoogleCloudDatacatalogV1ServiceSpecResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1ServiceSpecResponse { return v.ServiceSpec }).(GoogleCloudDatacatalogV1ServiceSpecResponseOutput)
}

// Timestamps from the underlying resource, not from the Data Catalog entry. Output only when the entry has a system listed in the `IntegratedSystem` enum. For entries with `user_specified_system`, this field is optional and defaults to an empty timestamp.
func (o LookupEntryResultOutput) SourceSystemTimestamps() GoogleCloudDatacatalogV1SystemTimestampsResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1SystemTimestampsResponse {
		return v.SourceSystemTimestamps
	}).(GoogleCloudDatacatalogV1SystemTimestampsResponseOutput)
}

// Specification that applies to a relational database system. Only settable when `user_specified_system` is equal to `SQL_DATABASE`
func (o LookupEntryResultOutput) SqlDatabaseSystemSpec() GoogleCloudDatacatalogV1SqlDatabaseSystemSpecResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1SqlDatabaseSystemSpecResponse {
		return v.SqlDatabaseSystemSpec
	}).(GoogleCloudDatacatalogV1SqlDatabaseSystemSpecResponseOutput)
}

// The type of the entry. For details, see [`EntryType`](#entrytype).
func (o LookupEntryResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryResult) string { return v.Type }).(pulumi.StringOutput)
}

// Resource usage statistics.
func (o LookupEntryResultOutput) UsageSignal() GoogleCloudDatacatalogV1UsageSignalResponseOutput {
	return o.ApplyT(func(v LookupEntryResult) GoogleCloudDatacatalogV1UsageSignalResponse { return v.UsageSignal }).(GoogleCloudDatacatalogV1UsageSignalResponseOutput)
}

// Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
func (o LookupEntryResultOutput) UserSpecifiedSystem() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryResult) string { return v.UserSpecifiedSystem }).(pulumi.StringOutput)
}

// Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
func (o LookupEntryResultOutput) UserSpecifiedType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryResult) string { return v.UserSpecifiedType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEntryResultOutput{})
}
