// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The type of the entry. Only used for entries with types listed in the `EntryType` enum. Currently, only `FILESET` enum value is allowed. All other entries created in Data Catalog must use the `user_specified_type`.
type EntryType pulumi.String

const (
	// Default unknown type.
	EntryTypeEntryTypeUnspecified = EntryType("ENTRY_TYPE_UNSPECIFIED")
	// Output only. The entry type that has a GoogleSQL schema, including logical views.
	EntryTypeTable = EntryType("TABLE")
	// Output only. The type of models. For more information, see [Supported models in BigQuery ML] (https://cloud.google.com/bigquery-ml/docs/introduction#supported_models_in).
	EntryTypeModel = EntryType("MODEL")
	// An entry type for streaming entries. For example, a Pub/Sub topic.
	EntryTypeDataStream = EntryType("DATA_STREAM")
	// An entry type for a set of files or objects. For example, a Cloud Storage fileset.
	EntryTypeFileset = EntryType("FILESET")
	// A group of servers that work together. For example, a Kafka cluster.
	EntryTypeCluster = EntryType("CLUSTER")
	// A database.
	EntryTypeDatabase = EntryType("DATABASE")
	// Output only. Connection to a data source. For example, a BigQuery connection.
	EntryTypeDataSourceConnection = EntryType("DATA_SOURCE_CONNECTION")
	// Output only. Routine, for example, a BigQuery routine.
	EntryTypeRoutine = EntryType("ROUTINE")
	// A service, for example, a Dataproc Metastore service.
	EntryTypeService = EntryType("SERVICE")
)

func (EntryType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e EntryType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EntryType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EntryType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EntryType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The type of the BigQuery connection.
type GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType pulumi.String

const (
	// Unspecified type.
	GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionTypeConnectionTypeUnspecified = GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType("CONNECTION_TYPE_UNSPECIFIED")
	// Cloud SQL connection.
	GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionTypeCloudSql = GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType("CLOUD_SQL")
)

func (GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Type of the Cloud SQL database.
type GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecType pulumi.String

const (
	// Unspecified database type.
	GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecTypeDatabaseTypeUnspecified = GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecType("DATABASE_TYPE_UNSPECIFIED")
	// Cloud SQL for PostgreSQL.
	GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecTypePostgres = GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecType("POSTGRES")
	// Cloud SQL for MySQL.
	GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecTypeMysql = GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecType("MYSQL")
)

func (GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpecType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Type of this table.
type GoogleCloudDatacatalogV1DatabaseTableSpecType pulumi.String

const (
	// Default unknown table type.
	GoogleCloudDatacatalogV1DatabaseTableSpecTypeTableTypeUnspecified = GoogleCloudDatacatalogV1DatabaseTableSpecType("TABLE_TYPE_UNSPECIFIED")
	// Native table.
	GoogleCloudDatacatalogV1DatabaseTableSpecTypeNative = GoogleCloudDatacatalogV1DatabaseTableSpecType("NATIVE")
	// External table.
	GoogleCloudDatacatalogV1DatabaseTableSpecTypeExternal = GoogleCloudDatacatalogV1DatabaseTableSpecType("EXTERNAL")
)

func (GoogleCloudDatacatalogV1DatabaseTableSpecType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDatacatalogV1DatabaseTableSpecType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatacatalogV1DatabaseTableSpecType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatacatalogV1DatabaseTableSpecType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDatacatalogV1DatabaseTableSpecType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Specifies whether the argument is input or output.
type GoogleCloudDatacatalogV1RoutineSpecArgumentMode pulumi.String

const (
	// Unspecified mode.
	GoogleCloudDatacatalogV1RoutineSpecArgumentModeModeUnspecified = GoogleCloudDatacatalogV1RoutineSpecArgumentMode("MODE_UNSPECIFIED")
	// The argument is input-only.
	GoogleCloudDatacatalogV1RoutineSpecArgumentModeIn = GoogleCloudDatacatalogV1RoutineSpecArgumentMode("IN")
	// The argument is output-only.
	GoogleCloudDatacatalogV1RoutineSpecArgumentModeOut = GoogleCloudDatacatalogV1RoutineSpecArgumentMode("OUT")
	// The argument is both an input and an output.
	GoogleCloudDatacatalogV1RoutineSpecArgumentModeInout = GoogleCloudDatacatalogV1RoutineSpecArgumentMode("INOUT")
)

func (GoogleCloudDatacatalogV1RoutineSpecArgumentMode) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDatacatalogV1RoutineSpecArgumentMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatacatalogV1RoutineSpecArgumentMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatacatalogV1RoutineSpecArgumentMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDatacatalogV1RoutineSpecArgumentMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The type of the routine.
type GoogleCloudDatacatalogV1RoutineSpecRoutineType pulumi.String

const (
	// Unspecified type.
	GoogleCloudDatacatalogV1RoutineSpecRoutineTypeRoutineTypeUnspecified = GoogleCloudDatacatalogV1RoutineSpecRoutineType("ROUTINE_TYPE_UNSPECIFIED")
	// Non-builtin permanent scalar function.
	GoogleCloudDatacatalogV1RoutineSpecRoutineTypeScalarFunction = GoogleCloudDatacatalogV1RoutineSpecRoutineType("SCALAR_FUNCTION")
	// Stored procedure.
	GoogleCloudDatacatalogV1RoutineSpecRoutineTypeProcedure = GoogleCloudDatacatalogV1RoutineSpecRoutineType("PROCEDURE")
)

func (GoogleCloudDatacatalogV1RoutineSpecRoutineType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDatacatalogV1RoutineSpecRoutineType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatacatalogV1RoutineSpecRoutineType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatacatalogV1RoutineSpecRoutineType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDatacatalogV1RoutineSpecRoutineType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaxonomyActivatedPolicyTypesItem pulumi.String

const (
	// Unspecified policy type.
	TaxonomyActivatedPolicyTypesItemPolicyTypeUnspecified = TaxonomyActivatedPolicyTypesItem("POLICY_TYPE_UNSPECIFIED")
	// Fine-grained access control policy that enables access control on tagged sub-resources.
	TaxonomyActivatedPolicyTypesItemFineGrainedAccessControl = TaxonomyActivatedPolicyTypesItem("FINE_GRAINED_ACCESS_CONTROL")
)

func (TaxonomyActivatedPolicyTypesItem) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e TaxonomyActivatedPolicyTypesItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaxonomyActivatedPolicyTypesItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaxonomyActivatedPolicyTypesItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaxonomyActivatedPolicyTypesItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// TaxonomyActivatedPolicyTypesItemArrayInput is an input type that accepts TaxonomyActivatedPolicyTypesItemArray and TaxonomyActivatedPolicyTypesItemArrayOutput values.
// You can construct a concrete instance of `TaxonomyActivatedPolicyTypesItemArrayInput` via:
//
//          TaxonomyActivatedPolicyTypesItemArray{ TaxonomyActivatedPolicyTypesItemArgs{...} }
type TaxonomyActivatedPolicyTypesItemArrayInput interface {
	pulumi.Input

	ToTaxonomyActivatedPolicyTypesItemArrayOutput() TaxonomyActivatedPolicyTypesItemArrayOutput
	ToTaxonomyActivatedPolicyTypesItemArrayOutputWithContext(context.Context) TaxonomyActivatedPolicyTypesItemArrayOutput
}

type TaxonomyActivatedPolicyTypesItemArray []TaxonomyActivatedPolicyTypesItem

func (TaxonomyActivatedPolicyTypesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaxonomyActivatedPolicyTypesItem)(nil)).Elem()
}

func (i TaxonomyActivatedPolicyTypesItemArray) ToTaxonomyActivatedPolicyTypesItemArrayOutput() TaxonomyActivatedPolicyTypesItemArrayOutput {
	return i.ToTaxonomyActivatedPolicyTypesItemArrayOutputWithContext(context.Background())
}

func (i TaxonomyActivatedPolicyTypesItemArray) ToTaxonomyActivatedPolicyTypesItemArrayOutputWithContext(ctx context.Context) TaxonomyActivatedPolicyTypesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaxonomyActivatedPolicyTypesItemArrayOutput)
}

type TaxonomyActivatedPolicyTypesItemArrayOutput struct{ *pulumi.OutputState }

func (TaxonomyActivatedPolicyTypesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaxonomyActivatedPolicyTypesItem)(nil)).Elem()
}

func (o TaxonomyActivatedPolicyTypesItemArrayOutput) ToTaxonomyActivatedPolicyTypesItemArrayOutput() TaxonomyActivatedPolicyTypesItemArrayOutput {
	return o
}

func (o TaxonomyActivatedPolicyTypesItemArrayOutput) ToTaxonomyActivatedPolicyTypesItemArrayOutputWithContext(ctx context.Context) TaxonomyActivatedPolicyTypesItemArrayOutput {
	return o
}

func (o TaxonomyActivatedPolicyTypesItemArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]TaxonomyActivatedPolicyTypesItem)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}
