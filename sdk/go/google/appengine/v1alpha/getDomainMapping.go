// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the specified domain mapping.
func LookupDomainMapping(ctx *pulumi.Context, args *LookupDomainMappingArgs, opts ...pulumi.InvokeOption) (*LookupDomainMappingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDomainMappingResult
	err := ctx.Invoke("google-native:appengine/v1alpha:getDomainMapping", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDomainMappingArgs struct {
	AppId           string `pulumi:"appId"`
	DomainMappingId string `pulumi:"domainMappingId"`
}

type LookupDomainMappingResult struct {
	// Full path to the DomainMapping resource in the API. Example: apps/myapp/domainMapping/example.com.
	Name string `pulumi:"name"`
	// The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping.
	ResourceRecords []ResourceRecordResponse `pulumi:"resourceRecords"`
	// SSL configuration for this domain. If unconfigured, this domain will not serve with SSL.
	SslSettings SslSettingsResponse `pulumi:"sslSettings"`
}

func LookupDomainMappingOutput(ctx *pulumi.Context, args LookupDomainMappingOutputArgs, opts ...pulumi.InvokeOption) LookupDomainMappingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainMappingResult, error) {
			args := v.(LookupDomainMappingArgs)
			r, err := LookupDomainMapping(ctx, &args, opts...)
			var s LookupDomainMappingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainMappingResultOutput)
}

type LookupDomainMappingOutputArgs struct {
	AppId           pulumi.StringInput `pulumi:"appId"`
	DomainMappingId pulumi.StringInput `pulumi:"domainMappingId"`
}

func (LookupDomainMappingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainMappingArgs)(nil)).Elem()
}

type LookupDomainMappingResultOutput struct{ *pulumi.OutputState }

func (LookupDomainMappingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainMappingResult)(nil)).Elem()
}

func (o LookupDomainMappingResultOutput) ToLookupDomainMappingResultOutput() LookupDomainMappingResultOutput {
	return o
}

func (o LookupDomainMappingResultOutput) ToLookupDomainMappingResultOutputWithContext(ctx context.Context) LookupDomainMappingResultOutput {
	return o
}

// Full path to the DomainMapping resource in the API. Example: apps/myapp/domainMapping/example.com.
func (o LookupDomainMappingResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainMappingResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping.
func (o LookupDomainMappingResultOutput) ResourceRecords() ResourceRecordResponseArrayOutput {
	return o.ApplyT(func(v LookupDomainMappingResult) []ResourceRecordResponse { return v.ResourceRecords }).(ResourceRecordResponseArrayOutput)
}

// SSL configuration for this domain. If unconfigured, this domain will not serve with SSL.
func (o LookupDomainMappingResultOutput) SslSettings() SslSettingsResponseOutput {
	return o.ApplyT(func(v LookupDomainMappingResult) SslSettingsResponse { return v.SslSettings }).(SslSettingsResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainMappingResultOutput{})
}
