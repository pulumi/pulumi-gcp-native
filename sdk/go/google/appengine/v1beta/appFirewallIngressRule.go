// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a firewall rule for the application.
type AppFirewallIngressRule struct {
	pulumi.CustomResourceState
}

// NewAppFirewallIngressRule registers a new resource with the given unique name, arguments, and options.
func NewAppFirewallIngressRule(ctx *pulumi.Context,
	name string, args *AppFirewallIngressRuleArgs, opts ...pulumi.ResourceOption) (*AppFirewallIngressRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppsId == nil {
		return nil, errors.New("invalid value for required argument 'AppsId'")
	}
	if args.IngressRulesId == nil {
		return nil, errors.New("invalid value for required argument 'IngressRulesId'")
	}
	var resource AppFirewallIngressRule
	err := ctx.RegisterResource("google-cloud:appengine/v1beta:AppFirewallIngressRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppFirewallIngressRule gets an existing AppFirewallIngressRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppFirewallIngressRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppFirewallIngressRuleState, opts ...pulumi.ResourceOption) (*AppFirewallIngressRule, error) {
	var resource AppFirewallIngressRule
	err := ctx.ReadResource("google-cloud:appengine/v1beta:AppFirewallIngressRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppFirewallIngressRule resources.
type appFirewallIngressRuleState struct {
}

type AppFirewallIngressRuleState struct {
}

func (AppFirewallIngressRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*appFirewallIngressRuleState)(nil)).Elem()
}

type appFirewallIngressRuleArgs struct {
	// The action to take on matched requests.
	Action *string `pulumi:"action"`
	AppsId string  `pulumi:"appsId"`
	// An optional string description of this rule. This field has a maximum length of 100 characters.
	Description    *string `pulumi:"description"`
	IngressRulesId string  `pulumi:"ingressRulesId"`
	// A positive integer between 1, Int32.MaxValue-1 that defines the order of rule evaluation. Rules with the lowest priority are evaluated first.A default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action of this rule can be modified by the user.
	Priority *int `pulumi:"priority"`
	// IP address or range, defined using CIDR notation, of requests that this rule applies to. You can use the wildcard character "*" to match all IPs equivalent to "0/0" and "::/0" together. Examples: 192.168.1.1 or 192.168.0.0/16 or 2001:db8::/32 or 2001:0db8:0000:0042:0000:8a2e:0370:7334. Truncation will be silently performed on addresses which are not properly truncated. For example, 1.2.3.4/24 is accepted as the same address as 1.2.3.0/24. Similarly, for IPv6, 2001:db8::1/32 is accepted as the same address as 2001:db8::/32.
	SourceRange *string `pulumi:"sourceRange"`
}

// The set of arguments for constructing a AppFirewallIngressRule resource.
type AppFirewallIngressRuleArgs struct {
	// The action to take on matched requests.
	Action pulumi.StringPtrInput
	AppsId pulumi.StringInput
	// An optional string description of this rule. This field has a maximum length of 100 characters.
	Description    pulumi.StringPtrInput
	IngressRulesId pulumi.StringInput
	// A positive integer between 1, Int32.MaxValue-1 that defines the order of rule evaluation. Rules with the lowest priority are evaluated first.A default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action of this rule can be modified by the user.
	Priority pulumi.IntPtrInput
	// IP address or range, defined using CIDR notation, of requests that this rule applies to. You can use the wildcard character "*" to match all IPs equivalent to "0/0" and "::/0" together. Examples: 192.168.1.1 or 192.168.0.0/16 or 2001:db8::/32 or 2001:0db8:0000:0042:0000:8a2e:0370:7334. Truncation will be silently performed on addresses which are not properly truncated. For example, 1.2.3.4/24 is accepted as the same address as 1.2.3.0/24. Similarly, for IPv6, 2001:db8::1/32 is accepted as the same address as 2001:db8::/32.
	SourceRange pulumi.StringPtrInput
}

func (AppFirewallIngressRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appFirewallIngressRuleArgs)(nil)).Elem()
}

type AppFirewallIngressRuleInput interface {
	pulumi.Input

	ToAppFirewallIngressRuleOutput() AppFirewallIngressRuleOutput
	ToAppFirewallIngressRuleOutputWithContext(ctx context.Context) AppFirewallIngressRuleOutput
}

func (*AppFirewallIngressRule) ElementType() reflect.Type {
	return reflect.TypeOf((*AppFirewallIngressRule)(nil))
}

func (i *AppFirewallIngressRule) ToAppFirewallIngressRuleOutput() AppFirewallIngressRuleOutput {
	return i.ToAppFirewallIngressRuleOutputWithContext(context.Background())
}

func (i *AppFirewallIngressRule) ToAppFirewallIngressRuleOutputWithContext(ctx context.Context) AppFirewallIngressRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppFirewallIngressRuleOutput)
}

type AppFirewallIngressRuleOutput struct {
	*pulumi.OutputState
}

func (AppFirewallIngressRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppFirewallIngressRule)(nil))
}

func (o AppFirewallIngressRuleOutput) ToAppFirewallIngressRuleOutput() AppFirewallIngressRuleOutput {
	return o
}

func (o AppFirewallIngressRuleOutput) ToAppFirewallIngressRuleOutputWithContext(ctx context.Context) AppFirewallIngressRuleOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AppFirewallIngressRuleOutput{})
}
