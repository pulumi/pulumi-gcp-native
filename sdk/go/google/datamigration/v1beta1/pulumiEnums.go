// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The log type that this config enables.
type AuditLogConfigLogType pulumi.String

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'. Valid values: 'ALWAYS': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.
type CloudSqlSettingsActivationPolicy pulumi.String

const (
	// unspecified policy.
	CloudSqlSettingsActivationPolicySqlActivationPolicyUnspecified = CloudSqlSettingsActivationPolicy("SQL_ACTIVATION_POLICY_UNSPECIFIED")
	// The instance is always up and running.
	CloudSqlSettingsActivationPolicyAlways = CloudSqlSettingsActivationPolicy("ALWAYS")
	// The instance should never spin up.
	CloudSqlSettingsActivationPolicyNever = CloudSqlSettingsActivationPolicy("NEVER")
)

func (CloudSqlSettingsActivationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CloudSqlSettingsActivationPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsActivationPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsActivationPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudSqlSettingsActivationPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The type of storage: `PD_SSD` (default) or `PD_HDD`.
type CloudSqlSettingsDataDiskType pulumi.String

const (
	// Unspecified.
	CloudSqlSettingsDataDiskTypeSqlDataDiskTypeUnspecified = CloudSqlSettingsDataDiskType("SQL_DATA_DISK_TYPE_UNSPECIFIED")
	// SSD disk.
	CloudSqlSettingsDataDiskTypePdSsd = CloudSqlSettingsDataDiskType("PD_SSD")
	// HDD disk.
	CloudSqlSettingsDataDiskTypePdHdd = CloudSqlSettingsDataDiskType("PD_HDD")
)

func (CloudSqlSettingsDataDiskType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CloudSqlSettingsDataDiskType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsDataDiskType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsDataDiskType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudSqlSettingsDataDiskType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The database engine type and version.
type CloudSqlSettingsDatabaseVersion pulumi.String

const (
	// Unspecified version.
	CloudSqlSettingsDatabaseVersionSqlDatabaseVersionUnspecified = CloudSqlSettingsDatabaseVersion("SQL_DATABASE_VERSION_UNSPECIFIED")
	// MySQL 5.6.
	CloudSqlSettingsDatabaseVersionMysql56 = CloudSqlSettingsDatabaseVersion("MYSQL_5_6")
	// MySQL 5.7.
	CloudSqlSettingsDatabaseVersionMysql57 = CloudSqlSettingsDatabaseVersion("MYSQL_5_7")
	// MySQL 8.0.
	CloudSqlSettingsDatabaseVersionMysql80 = CloudSqlSettingsDatabaseVersion("MYSQL_8_0")
)

func (CloudSqlSettingsDatabaseVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CloudSqlSettingsDatabaseVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsDatabaseVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsDatabaseVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudSqlSettingsDatabaseVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The database provider.
type ConnectionProfileProvider pulumi.String

const (
	// The database provider is unknown.
	ConnectionProfileProviderDatabaseProviderUnspecified = ConnectionProfileProvider("DATABASE_PROVIDER_UNSPECIFIED")
	// CloudSQL runs the database.
	ConnectionProfileProviderCloudsql = ConnectionProfileProvider("CLOUDSQL")
	// RDS runs the database.
	ConnectionProfileProviderRds = ConnectionProfileProvider("RDS")
)

func (ConnectionProfileProvider) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ConnectionProfileProvider) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionProfileProvider) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionProfileProvider) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectionProfileProvider) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The current connection profile state (e.g. DRAFT, READY, or FAILED).
type ConnectionProfileStateEnum pulumi.String

const (
	// The state of the connection profile is unknown.
	ConnectionProfileStateEnumStateUnspecified = ConnectionProfileStateEnum("STATE_UNSPECIFIED")
	// The connection profile is in draft mode and fully editable.
	ConnectionProfileStateEnumDraft = ConnectionProfileStateEnum("DRAFT")
	// The connection profile is being created.
	ConnectionProfileStateEnumCreating = ConnectionProfileStateEnum("CREATING")
	// The connection profile is ready.
	ConnectionProfileStateEnumReady = ConnectionProfileStateEnum("READY")
	// The connection profile is being updated.
	ConnectionProfileStateEnumUpdating = ConnectionProfileStateEnum("UPDATING")
	// The connection profile is being deleted.
	ConnectionProfileStateEnumDeleting = ConnectionProfileStateEnum("DELETING")
	// The connection profile has been deleted.
	ConnectionProfileStateEnumDeleted = ConnectionProfileStateEnum("DELETED")
	// The last action on the connection profile failed.
	ConnectionProfileStateEnumFailed = ConnectionProfileStateEnum("FAILED")
)

func (ConnectionProfileStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ConnectionProfileStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionProfileStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionProfileStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectionProfileStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The database engine.
type DatabaseTypeEngine pulumi.String

const (
	// The source database engine of the migration job is unknown.
	DatabaseTypeEngineDatabaseEngineUnspecified = DatabaseTypeEngine("DATABASE_ENGINE_UNSPECIFIED")
	// The source engine is MySQL.
	DatabaseTypeEngineMysql = DatabaseTypeEngine("MYSQL")
)

func (DatabaseTypeEngine) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DatabaseTypeEngine) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseTypeEngine) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseTypeEngine) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseTypeEngine) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The database provider.
type DatabaseTypeProvider pulumi.String

const (
	// The database provider is unknown.
	DatabaseTypeProviderDatabaseProviderUnspecified = DatabaseTypeProvider("DATABASE_PROVIDER_UNSPECIFIED")
	// CloudSQL runs the database.
	DatabaseTypeProviderCloudsql = DatabaseTypeProvider("CLOUDSQL")
	// RDS runs the database.
	DatabaseTypeProviderRds = DatabaseTypeProvider("RDS")
)

func (DatabaseTypeProvider) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DatabaseTypeProvider) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseTypeProvider) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseTypeProvider) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseTypeProvider) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The current migration job state.
type MigrationJobStateEnum pulumi.String

const (
	// The state of the migration job is unknown.
	MigrationJobStateEnumStateUnspecified = MigrationJobStateEnum("STATE_UNSPECIFIED")
	// The migration job is down for maintenance.
	MigrationJobStateEnumMaintenance = MigrationJobStateEnum("MAINTENANCE")
	// The migration job is in draft mode and no resources are created.
	MigrationJobStateEnumDraft = MigrationJobStateEnum("DRAFT")
	// The migration job is being created.
	MigrationJobStateEnumCreating = MigrationJobStateEnum("CREATING")
	// The migration job is created, not started and is fully editable.
	MigrationJobStateEnumNotStarted = MigrationJobStateEnum("NOT_STARTED")
	// The migration job is running.
	MigrationJobStateEnumRunning = MigrationJobStateEnum("RUNNING")
	// The migration job failed.
	MigrationJobStateEnumFailed = MigrationJobStateEnum("FAILED")
	// The migration job has been completed.
	MigrationJobStateEnumCompleted = MigrationJobStateEnum("COMPLETED")
	// The migration job is being deleted.
	MigrationJobStateEnumDeleting = MigrationJobStateEnum("DELETING")
	// The migration job is being stopped.
	MigrationJobStateEnumStopping = MigrationJobStateEnum("STOPPING")
	// The migration job is currently stopped.
	MigrationJobStateEnumStopped = MigrationJobStateEnum("STOPPED")
	// The migration job has been deleted.
	MigrationJobStateEnumDeleted = MigrationJobStateEnum("DELETED")
	// The migration job is being updated.
	MigrationJobStateEnumUpdating = MigrationJobStateEnum("UPDATING")
	// The migration job is starting.
	MigrationJobStateEnumStarting = MigrationJobStateEnum("STARTING")
	// The migration job is restarting.
	MigrationJobStateEnumRestarting = MigrationJobStateEnum("RESTARTING")
	// The migration job is resuming.
	MigrationJobStateEnumResuming = MigrationJobStateEnum("RESUMING")
)

func (MigrationJobStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e MigrationJobStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MigrationJobStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MigrationJobStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MigrationJobStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. The migration job type.
type MigrationJobType pulumi.String

const (
	// The type of the migration job is unknown.
	MigrationJobTypeTypeUnspecified = MigrationJobType("TYPE_UNSPECIFIED")
	// The migration job is a one time migration.
	MigrationJobTypeOneTime = MigrationJobType("ONE_TIME")
	// The migration job is a continuous migration.
	MigrationJobTypeContinuous = MigrationJobType("CONTINUOUS")
)

func (MigrationJobType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e MigrationJobType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MigrationJobType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MigrationJobType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MigrationJobType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
