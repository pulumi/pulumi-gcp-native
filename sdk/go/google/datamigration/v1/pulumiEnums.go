// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Optional. The database engine major version. This is an optional field. If a database version is not supplied at cluster creation time, then a default database version will be used.
type AlloyDbSettingsDatabaseVersion string

const (
	// This is an unknown database version.
	AlloyDbSettingsDatabaseVersionDatabaseVersionUnspecified = AlloyDbSettingsDatabaseVersion("DATABASE_VERSION_UNSPECIFIED")
	// The database version is Postgres 14.
	AlloyDbSettingsDatabaseVersionPostgres14 = AlloyDbSettingsDatabaseVersion("POSTGRES_14")
	// The database version is Postgres 15.
	AlloyDbSettingsDatabaseVersionPostgres15 = AlloyDbSettingsDatabaseVersion("POSTGRES_15")
)

func (AlloyDbSettingsDatabaseVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*AlloyDbSettingsDatabaseVersion)(nil)).Elem()
}

func (e AlloyDbSettingsDatabaseVersion) ToAlloyDbSettingsDatabaseVersionOutput() AlloyDbSettingsDatabaseVersionOutput {
	return pulumi.ToOutput(e).(AlloyDbSettingsDatabaseVersionOutput)
}

func (e AlloyDbSettingsDatabaseVersion) ToAlloyDbSettingsDatabaseVersionOutputWithContext(ctx context.Context) AlloyDbSettingsDatabaseVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AlloyDbSettingsDatabaseVersionOutput)
}

func (e AlloyDbSettingsDatabaseVersion) ToAlloyDbSettingsDatabaseVersionPtrOutput() AlloyDbSettingsDatabaseVersionPtrOutput {
	return e.ToAlloyDbSettingsDatabaseVersionPtrOutputWithContext(context.Background())
}

func (e AlloyDbSettingsDatabaseVersion) ToAlloyDbSettingsDatabaseVersionPtrOutputWithContext(ctx context.Context) AlloyDbSettingsDatabaseVersionPtrOutput {
	return AlloyDbSettingsDatabaseVersion(e).ToAlloyDbSettingsDatabaseVersionOutputWithContext(ctx).ToAlloyDbSettingsDatabaseVersionPtrOutputWithContext(ctx)
}

func (e AlloyDbSettingsDatabaseVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlloyDbSettingsDatabaseVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlloyDbSettingsDatabaseVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AlloyDbSettingsDatabaseVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AlloyDbSettingsDatabaseVersionOutput struct{ *pulumi.OutputState }

func (AlloyDbSettingsDatabaseVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlloyDbSettingsDatabaseVersion)(nil)).Elem()
}

func (o AlloyDbSettingsDatabaseVersionOutput) ToAlloyDbSettingsDatabaseVersionOutput() AlloyDbSettingsDatabaseVersionOutput {
	return o
}

func (o AlloyDbSettingsDatabaseVersionOutput) ToAlloyDbSettingsDatabaseVersionOutputWithContext(ctx context.Context) AlloyDbSettingsDatabaseVersionOutput {
	return o
}

func (o AlloyDbSettingsDatabaseVersionOutput) ToAlloyDbSettingsDatabaseVersionPtrOutput() AlloyDbSettingsDatabaseVersionPtrOutput {
	return o.ToAlloyDbSettingsDatabaseVersionPtrOutputWithContext(context.Background())
}

func (o AlloyDbSettingsDatabaseVersionOutput) ToAlloyDbSettingsDatabaseVersionPtrOutputWithContext(ctx context.Context) AlloyDbSettingsDatabaseVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlloyDbSettingsDatabaseVersion) *AlloyDbSettingsDatabaseVersion {
		return &v
	}).(AlloyDbSettingsDatabaseVersionPtrOutput)
}

func (o AlloyDbSettingsDatabaseVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AlloyDbSettingsDatabaseVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlloyDbSettingsDatabaseVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AlloyDbSettingsDatabaseVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlloyDbSettingsDatabaseVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlloyDbSettingsDatabaseVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AlloyDbSettingsDatabaseVersionPtrOutput struct{ *pulumi.OutputState }

func (AlloyDbSettingsDatabaseVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlloyDbSettingsDatabaseVersion)(nil)).Elem()
}

func (o AlloyDbSettingsDatabaseVersionPtrOutput) ToAlloyDbSettingsDatabaseVersionPtrOutput() AlloyDbSettingsDatabaseVersionPtrOutput {
	return o
}

func (o AlloyDbSettingsDatabaseVersionPtrOutput) ToAlloyDbSettingsDatabaseVersionPtrOutputWithContext(ctx context.Context) AlloyDbSettingsDatabaseVersionPtrOutput {
	return o
}

func (o AlloyDbSettingsDatabaseVersionPtrOutput) Elem() AlloyDbSettingsDatabaseVersionOutput {
	return o.ApplyT(func(v *AlloyDbSettingsDatabaseVersion) AlloyDbSettingsDatabaseVersion {
		if v != nil {
			return *v
		}
		var ret AlloyDbSettingsDatabaseVersion
		return ret
	}).(AlloyDbSettingsDatabaseVersionOutput)
}

func (o AlloyDbSettingsDatabaseVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlloyDbSettingsDatabaseVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AlloyDbSettingsDatabaseVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AlloyDbSettingsDatabaseVersionInput is an input type that accepts AlloyDbSettingsDatabaseVersionArgs and AlloyDbSettingsDatabaseVersionOutput values.
// You can construct a concrete instance of `AlloyDbSettingsDatabaseVersionInput` via:
//
//	AlloyDbSettingsDatabaseVersionArgs{...}
type AlloyDbSettingsDatabaseVersionInput interface {
	pulumi.Input

	ToAlloyDbSettingsDatabaseVersionOutput() AlloyDbSettingsDatabaseVersionOutput
	ToAlloyDbSettingsDatabaseVersionOutputWithContext(context.Context) AlloyDbSettingsDatabaseVersionOutput
}

var alloyDbSettingsDatabaseVersionPtrType = reflect.TypeOf((**AlloyDbSettingsDatabaseVersion)(nil)).Elem()

type AlloyDbSettingsDatabaseVersionPtrInput interface {
	pulumi.Input

	ToAlloyDbSettingsDatabaseVersionPtrOutput() AlloyDbSettingsDatabaseVersionPtrOutput
	ToAlloyDbSettingsDatabaseVersionPtrOutputWithContext(context.Context) AlloyDbSettingsDatabaseVersionPtrOutput
}

type alloyDbSettingsDatabaseVersionPtr string

func AlloyDbSettingsDatabaseVersionPtr(v string) AlloyDbSettingsDatabaseVersionPtrInput {
	return (*alloyDbSettingsDatabaseVersionPtr)(&v)
}

func (*alloyDbSettingsDatabaseVersionPtr) ElementType() reflect.Type {
	return alloyDbSettingsDatabaseVersionPtrType
}

func (in *alloyDbSettingsDatabaseVersionPtr) ToAlloyDbSettingsDatabaseVersionPtrOutput() AlloyDbSettingsDatabaseVersionPtrOutput {
	return pulumi.ToOutput(in).(AlloyDbSettingsDatabaseVersionPtrOutput)
}

func (in *alloyDbSettingsDatabaseVersionPtr) ToAlloyDbSettingsDatabaseVersionPtrOutputWithContext(ctx context.Context) AlloyDbSettingsDatabaseVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AlloyDbSettingsDatabaseVersionPtrOutput)
}

func (in *alloyDbSettingsDatabaseVersionPtr) ToOutput(ctx context.Context) pulumix.Output[*AlloyDbSettingsDatabaseVersion] {
	return pulumix.Output[*AlloyDbSettingsDatabaseVersion]{
		OutputState: in.ToAlloyDbSettingsDatabaseVersionPtrOutputWithContext(ctx).OutputState,
	}
}

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts AuditLogConfigLogTypeArgs and AuditLogConfigLogTypeOutput values.
// You can construct a concrete instance of `AuditLogConfigLogTypeInput` via:
//
//	AuditLogConfigLogTypeArgs{...}
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AuditLogConfigLogType] {
	return pulumix.Output[*AuditLogConfigLogType]{
		OutputState: in.ToAuditLogConfigLogTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'. Valid values: 'ALWAYS': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.
type CloudSqlSettingsActivationPolicy string

const (
	// unspecified policy.
	CloudSqlSettingsActivationPolicySqlActivationPolicyUnspecified = CloudSqlSettingsActivationPolicy("SQL_ACTIVATION_POLICY_UNSPECIFIED")
	// The instance is always up and running.
	CloudSqlSettingsActivationPolicyAlways = CloudSqlSettingsActivationPolicy("ALWAYS")
	// The instance should never spin up.
	CloudSqlSettingsActivationPolicyNever = CloudSqlSettingsActivationPolicy("NEVER")
)

func (CloudSqlSettingsActivationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSqlSettingsActivationPolicy)(nil)).Elem()
}

func (e CloudSqlSettingsActivationPolicy) ToCloudSqlSettingsActivationPolicyOutput() CloudSqlSettingsActivationPolicyOutput {
	return pulumi.ToOutput(e).(CloudSqlSettingsActivationPolicyOutput)
}

func (e CloudSqlSettingsActivationPolicy) ToCloudSqlSettingsActivationPolicyOutputWithContext(ctx context.Context) CloudSqlSettingsActivationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CloudSqlSettingsActivationPolicyOutput)
}

func (e CloudSqlSettingsActivationPolicy) ToCloudSqlSettingsActivationPolicyPtrOutput() CloudSqlSettingsActivationPolicyPtrOutput {
	return e.ToCloudSqlSettingsActivationPolicyPtrOutputWithContext(context.Background())
}

func (e CloudSqlSettingsActivationPolicy) ToCloudSqlSettingsActivationPolicyPtrOutputWithContext(ctx context.Context) CloudSqlSettingsActivationPolicyPtrOutput {
	return CloudSqlSettingsActivationPolicy(e).ToCloudSqlSettingsActivationPolicyOutputWithContext(ctx).ToCloudSqlSettingsActivationPolicyPtrOutputWithContext(ctx)
}

func (e CloudSqlSettingsActivationPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsActivationPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsActivationPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudSqlSettingsActivationPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CloudSqlSettingsActivationPolicyOutput struct{ *pulumi.OutputState }

func (CloudSqlSettingsActivationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSqlSettingsActivationPolicy)(nil)).Elem()
}

func (o CloudSqlSettingsActivationPolicyOutput) ToCloudSqlSettingsActivationPolicyOutput() CloudSqlSettingsActivationPolicyOutput {
	return o
}

func (o CloudSqlSettingsActivationPolicyOutput) ToCloudSqlSettingsActivationPolicyOutputWithContext(ctx context.Context) CloudSqlSettingsActivationPolicyOutput {
	return o
}

func (o CloudSqlSettingsActivationPolicyOutput) ToCloudSqlSettingsActivationPolicyPtrOutput() CloudSqlSettingsActivationPolicyPtrOutput {
	return o.ToCloudSqlSettingsActivationPolicyPtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsActivationPolicyOutput) ToCloudSqlSettingsActivationPolicyPtrOutputWithContext(ctx context.Context) CloudSqlSettingsActivationPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudSqlSettingsActivationPolicy) *CloudSqlSettingsActivationPolicy {
		return &v
	}).(CloudSqlSettingsActivationPolicyPtrOutput)
}

func (o CloudSqlSettingsActivationPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CloudSqlSettingsActivationPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudSqlSettingsActivationPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CloudSqlSettingsActivationPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsActivationPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudSqlSettingsActivationPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CloudSqlSettingsActivationPolicyPtrOutput struct{ *pulumi.OutputState }

func (CloudSqlSettingsActivationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudSqlSettingsActivationPolicy)(nil)).Elem()
}

func (o CloudSqlSettingsActivationPolicyPtrOutput) ToCloudSqlSettingsActivationPolicyPtrOutput() CloudSqlSettingsActivationPolicyPtrOutput {
	return o
}

func (o CloudSqlSettingsActivationPolicyPtrOutput) ToCloudSqlSettingsActivationPolicyPtrOutputWithContext(ctx context.Context) CloudSqlSettingsActivationPolicyPtrOutput {
	return o
}

func (o CloudSqlSettingsActivationPolicyPtrOutput) Elem() CloudSqlSettingsActivationPolicyOutput {
	return o.ApplyT(func(v *CloudSqlSettingsActivationPolicy) CloudSqlSettingsActivationPolicy {
		if v != nil {
			return *v
		}
		var ret CloudSqlSettingsActivationPolicy
		return ret
	}).(CloudSqlSettingsActivationPolicyOutput)
}

func (o CloudSqlSettingsActivationPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsActivationPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CloudSqlSettingsActivationPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CloudSqlSettingsActivationPolicyInput is an input type that accepts CloudSqlSettingsActivationPolicyArgs and CloudSqlSettingsActivationPolicyOutput values.
// You can construct a concrete instance of `CloudSqlSettingsActivationPolicyInput` via:
//
//	CloudSqlSettingsActivationPolicyArgs{...}
type CloudSqlSettingsActivationPolicyInput interface {
	pulumi.Input

	ToCloudSqlSettingsActivationPolicyOutput() CloudSqlSettingsActivationPolicyOutput
	ToCloudSqlSettingsActivationPolicyOutputWithContext(context.Context) CloudSqlSettingsActivationPolicyOutput
}

var cloudSqlSettingsActivationPolicyPtrType = reflect.TypeOf((**CloudSqlSettingsActivationPolicy)(nil)).Elem()

type CloudSqlSettingsActivationPolicyPtrInput interface {
	pulumi.Input

	ToCloudSqlSettingsActivationPolicyPtrOutput() CloudSqlSettingsActivationPolicyPtrOutput
	ToCloudSqlSettingsActivationPolicyPtrOutputWithContext(context.Context) CloudSqlSettingsActivationPolicyPtrOutput
}

type cloudSqlSettingsActivationPolicyPtr string

func CloudSqlSettingsActivationPolicyPtr(v string) CloudSqlSettingsActivationPolicyPtrInput {
	return (*cloudSqlSettingsActivationPolicyPtr)(&v)
}

func (*cloudSqlSettingsActivationPolicyPtr) ElementType() reflect.Type {
	return cloudSqlSettingsActivationPolicyPtrType
}

func (in *cloudSqlSettingsActivationPolicyPtr) ToCloudSqlSettingsActivationPolicyPtrOutput() CloudSqlSettingsActivationPolicyPtrOutput {
	return pulumi.ToOutput(in).(CloudSqlSettingsActivationPolicyPtrOutput)
}

func (in *cloudSqlSettingsActivationPolicyPtr) ToCloudSqlSettingsActivationPolicyPtrOutputWithContext(ctx context.Context) CloudSqlSettingsActivationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CloudSqlSettingsActivationPolicyPtrOutput)
}

func (in *cloudSqlSettingsActivationPolicyPtr) ToOutput(ctx context.Context) pulumix.Output[*CloudSqlSettingsActivationPolicy] {
	return pulumix.Output[*CloudSqlSettingsActivationPolicy]{
		OutputState: in.ToCloudSqlSettingsActivationPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data availability. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available).
type CloudSqlSettingsAvailabilityType string

const (
	// This is an unknown Availability type.
	CloudSqlSettingsAvailabilityTypeSqlAvailabilityTypeUnspecified = CloudSqlSettingsAvailabilityType("SQL_AVAILABILITY_TYPE_UNSPECIFIED")
	// Zonal availablility instance.
	CloudSqlSettingsAvailabilityTypeZonal = CloudSqlSettingsAvailabilityType("ZONAL")
	// Regional availability instance.
	CloudSqlSettingsAvailabilityTypeRegional = CloudSqlSettingsAvailabilityType("REGIONAL")
)

func (CloudSqlSettingsAvailabilityType) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSqlSettingsAvailabilityType)(nil)).Elem()
}

func (e CloudSqlSettingsAvailabilityType) ToCloudSqlSettingsAvailabilityTypeOutput() CloudSqlSettingsAvailabilityTypeOutput {
	return pulumi.ToOutput(e).(CloudSqlSettingsAvailabilityTypeOutput)
}

func (e CloudSqlSettingsAvailabilityType) ToCloudSqlSettingsAvailabilityTypeOutputWithContext(ctx context.Context) CloudSqlSettingsAvailabilityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CloudSqlSettingsAvailabilityTypeOutput)
}

func (e CloudSqlSettingsAvailabilityType) ToCloudSqlSettingsAvailabilityTypePtrOutput() CloudSqlSettingsAvailabilityTypePtrOutput {
	return e.ToCloudSqlSettingsAvailabilityTypePtrOutputWithContext(context.Background())
}

func (e CloudSqlSettingsAvailabilityType) ToCloudSqlSettingsAvailabilityTypePtrOutputWithContext(ctx context.Context) CloudSqlSettingsAvailabilityTypePtrOutput {
	return CloudSqlSettingsAvailabilityType(e).ToCloudSqlSettingsAvailabilityTypeOutputWithContext(ctx).ToCloudSqlSettingsAvailabilityTypePtrOutputWithContext(ctx)
}

func (e CloudSqlSettingsAvailabilityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsAvailabilityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsAvailabilityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudSqlSettingsAvailabilityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CloudSqlSettingsAvailabilityTypeOutput struct{ *pulumi.OutputState }

func (CloudSqlSettingsAvailabilityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSqlSettingsAvailabilityType)(nil)).Elem()
}

func (o CloudSqlSettingsAvailabilityTypeOutput) ToCloudSqlSettingsAvailabilityTypeOutput() CloudSqlSettingsAvailabilityTypeOutput {
	return o
}

func (o CloudSqlSettingsAvailabilityTypeOutput) ToCloudSqlSettingsAvailabilityTypeOutputWithContext(ctx context.Context) CloudSqlSettingsAvailabilityTypeOutput {
	return o
}

func (o CloudSqlSettingsAvailabilityTypeOutput) ToCloudSqlSettingsAvailabilityTypePtrOutput() CloudSqlSettingsAvailabilityTypePtrOutput {
	return o.ToCloudSqlSettingsAvailabilityTypePtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsAvailabilityTypeOutput) ToCloudSqlSettingsAvailabilityTypePtrOutputWithContext(ctx context.Context) CloudSqlSettingsAvailabilityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudSqlSettingsAvailabilityType) *CloudSqlSettingsAvailabilityType {
		return &v
	}).(CloudSqlSettingsAvailabilityTypePtrOutput)
}

func (o CloudSqlSettingsAvailabilityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CloudSqlSettingsAvailabilityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudSqlSettingsAvailabilityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CloudSqlSettingsAvailabilityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsAvailabilityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudSqlSettingsAvailabilityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CloudSqlSettingsAvailabilityTypePtrOutput struct{ *pulumi.OutputState }

func (CloudSqlSettingsAvailabilityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudSqlSettingsAvailabilityType)(nil)).Elem()
}

func (o CloudSqlSettingsAvailabilityTypePtrOutput) ToCloudSqlSettingsAvailabilityTypePtrOutput() CloudSqlSettingsAvailabilityTypePtrOutput {
	return o
}

func (o CloudSqlSettingsAvailabilityTypePtrOutput) ToCloudSqlSettingsAvailabilityTypePtrOutputWithContext(ctx context.Context) CloudSqlSettingsAvailabilityTypePtrOutput {
	return o
}

func (o CloudSqlSettingsAvailabilityTypePtrOutput) Elem() CloudSqlSettingsAvailabilityTypeOutput {
	return o.ApplyT(func(v *CloudSqlSettingsAvailabilityType) CloudSqlSettingsAvailabilityType {
		if v != nil {
			return *v
		}
		var ret CloudSqlSettingsAvailabilityType
		return ret
	}).(CloudSqlSettingsAvailabilityTypeOutput)
}

func (o CloudSqlSettingsAvailabilityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsAvailabilityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CloudSqlSettingsAvailabilityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CloudSqlSettingsAvailabilityTypeInput is an input type that accepts CloudSqlSettingsAvailabilityTypeArgs and CloudSqlSettingsAvailabilityTypeOutput values.
// You can construct a concrete instance of `CloudSqlSettingsAvailabilityTypeInput` via:
//
//	CloudSqlSettingsAvailabilityTypeArgs{...}
type CloudSqlSettingsAvailabilityTypeInput interface {
	pulumi.Input

	ToCloudSqlSettingsAvailabilityTypeOutput() CloudSqlSettingsAvailabilityTypeOutput
	ToCloudSqlSettingsAvailabilityTypeOutputWithContext(context.Context) CloudSqlSettingsAvailabilityTypeOutput
}

var cloudSqlSettingsAvailabilityTypePtrType = reflect.TypeOf((**CloudSqlSettingsAvailabilityType)(nil)).Elem()

type CloudSqlSettingsAvailabilityTypePtrInput interface {
	pulumi.Input

	ToCloudSqlSettingsAvailabilityTypePtrOutput() CloudSqlSettingsAvailabilityTypePtrOutput
	ToCloudSqlSettingsAvailabilityTypePtrOutputWithContext(context.Context) CloudSqlSettingsAvailabilityTypePtrOutput
}

type cloudSqlSettingsAvailabilityTypePtr string

func CloudSqlSettingsAvailabilityTypePtr(v string) CloudSqlSettingsAvailabilityTypePtrInput {
	return (*cloudSqlSettingsAvailabilityTypePtr)(&v)
}

func (*cloudSqlSettingsAvailabilityTypePtr) ElementType() reflect.Type {
	return cloudSqlSettingsAvailabilityTypePtrType
}

func (in *cloudSqlSettingsAvailabilityTypePtr) ToCloudSqlSettingsAvailabilityTypePtrOutput() CloudSqlSettingsAvailabilityTypePtrOutput {
	return pulumi.ToOutput(in).(CloudSqlSettingsAvailabilityTypePtrOutput)
}

func (in *cloudSqlSettingsAvailabilityTypePtr) ToCloudSqlSettingsAvailabilityTypePtrOutputWithContext(ctx context.Context) CloudSqlSettingsAvailabilityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CloudSqlSettingsAvailabilityTypePtrOutput)
}

func (in *cloudSqlSettingsAvailabilityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*CloudSqlSettingsAvailabilityType] {
	return pulumix.Output[*CloudSqlSettingsAvailabilityType]{
		OutputState: in.ToCloudSqlSettingsAvailabilityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The type of storage: `PD_SSD` (default) or `PD_HDD`.
type CloudSqlSettingsDataDiskType string

const (
	// Unspecified.
	CloudSqlSettingsDataDiskTypeSqlDataDiskTypeUnspecified = CloudSqlSettingsDataDiskType("SQL_DATA_DISK_TYPE_UNSPECIFIED")
	// SSD disk.
	CloudSqlSettingsDataDiskTypePdSsd = CloudSqlSettingsDataDiskType("PD_SSD")
	// HDD disk.
	CloudSqlSettingsDataDiskTypePdHdd = CloudSqlSettingsDataDiskType("PD_HDD")
)

func (CloudSqlSettingsDataDiskType) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSqlSettingsDataDiskType)(nil)).Elem()
}

func (e CloudSqlSettingsDataDiskType) ToCloudSqlSettingsDataDiskTypeOutput() CloudSqlSettingsDataDiskTypeOutput {
	return pulumi.ToOutput(e).(CloudSqlSettingsDataDiskTypeOutput)
}

func (e CloudSqlSettingsDataDiskType) ToCloudSqlSettingsDataDiskTypeOutputWithContext(ctx context.Context) CloudSqlSettingsDataDiskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CloudSqlSettingsDataDiskTypeOutput)
}

func (e CloudSqlSettingsDataDiskType) ToCloudSqlSettingsDataDiskTypePtrOutput() CloudSqlSettingsDataDiskTypePtrOutput {
	return e.ToCloudSqlSettingsDataDiskTypePtrOutputWithContext(context.Background())
}

func (e CloudSqlSettingsDataDiskType) ToCloudSqlSettingsDataDiskTypePtrOutputWithContext(ctx context.Context) CloudSqlSettingsDataDiskTypePtrOutput {
	return CloudSqlSettingsDataDiskType(e).ToCloudSqlSettingsDataDiskTypeOutputWithContext(ctx).ToCloudSqlSettingsDataDiskTypePtrOutputWithContext(ctx)
}

func (e CloudSqlSettingsDataDiskType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsDataDiskType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsDataDiskType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudSqlSettingsDataDiskType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CloudSqlSettingsDataDiskTypeOutput struct{ *pulumi.OutputState }

func (CloudSqlSettingsDataDiskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSqlSettingsDataDiskType)(nil)).Elem()
}

func (o CloudSqlSettingsDataDiskTypeOutput) ToCloudSqlSettingsDataDiskTypeOutput() CloudSqlSettingsDataDiskTypeOutput {
	return o
}

func (o CloudSqlSettingsDataDiskTypeOutput) ToCloudSqlSettingsDataDiskTypeOutputWithContext(ctx context.Context) CloudSqlSettingsDataDiskTypeOutput {
	return o
}

func (o CloudSqlSettingsDataDiskTypeOutput) ToCloudSqlSettingsDataDiskTypePtrOutput() CloudSqlSettingsDataDiskTypePtrOutput {
	return o.ToCloudSqlSettingsDataDiskTypePtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsDataDiskTypeOutput) ToCloudSqlSettingsDataDiskTypePtrOutputWithContext(ctx context.Context) CloudSqlSettingsDataDiskTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudSqlSettingsDataDiskType) *CloudSqlSettingsDataDiskType {
		return &v
	}).(CloudSqlSettingsDataDiskTypePtrOutput)
}

func (o CloudSqlSettingsDataDiskTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CloudSqlSettingsDataDiskTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudSqlSettingsDataDiskType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CloudSqlSettingsDataDiskTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsDataDiskTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudSqlSettingsDataDiskType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CloudSqlSettingsDataDiskTypePtrOutput struct{ *pulumi.OutputState }

func (CloudSqlSettingsDataDiskTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudSqlSettingsDataDiskType)(nil)).Elem()
}

func (o CloudSqlSettingsDataDiskTypePtrOutput) ToCloudSqlSettingsDataDiskTypePtrOutput() CloudSqlSettingsDataDiskTypePtrOutput {
	return o
}

func (o CloudSqlSettingsDataDiskTypePtrOutput) ToCloudSqlSettingsDataDiskTypePtrOutputWithContext(ctx context.Context) CloudSqlSettingsDataDiskTypePtrOutput {
	return o
}

func (o CloudSqlSettingsDataDiskTypePtrOutput) Elem() CloudSqlSettingsDataDiskTypeOutput {
	return o.ApplyT(func(v *CloudSqlSettingsDataDiskType) CloudSqlSettingsDataDiskType {
		if v != nil {
			return *v
		}
		var ret CloudSqlSettingsDataDiskType
		return ret
	}).(CloudSqlSettingsDataDiskTypeOutput)
}

func (o CloudSqlSettingsDataDiskTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsDataDiskTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CloudSqlSettingsDataDiskType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CloudSqlSettingsDataDiskTypeInput is an input type that accepts CloudSqlSettingsDataDiskTypeArgs and CloudSqlSettingsDataDiskTypeOutput values.
// You can construct a concrete instance of `CloudSqlSettingsDataDiskTypeInput` via:
//
//	CloudSqlSettingsDataDiskTypeArgs{...}
type CloudSqlSettingsDataDiskTypeInput interface {
	pulumi.Input

	ToCloudSqlSettingsDataDiskTypeOutput() CloudSqlSettingsDataDiskTypeOutput
	ToCloudSqlSettingsDataDiskTypeOutputWithContext(context.Context) CloudSqlSettingsDataDiskTypeOutput
}

var cloudSqlSettingsDataDiskTypePtrType = reflect.TypeOf((**CloudSqlSettingsDataDiskType)(nil)).Elem()

type CloudSqlSettingsDataDiskTypePtrInput interface {
	pulumi.Input

	ToCloudSqlSettingsDataDiskTypePtrOutput() CloudSqlSettingsDataDiskTypePtrOutput
	ToCloudSqlSettingsDataDiskTypePtrOutputWithContext(context.Context) CloudSqlSettingsDataDiskTypePtrOutput
}

type cloudSqlSettingsDataDiskTypePtr string

func CloudSqlSettingsDataDiskTypePtr(v string) CloudSqlSettingsDataDiskTypePtrInput {
	return (*cloudSqlSettingsDataDiskTypePtr)(&v)
}

func (*cloudSqlSettingsDataDiskTypePtr) ElementType() reflect.Type {
	return cloudSqlSettingsDataDiskTypePtrType
}

func (in *cloudSqlSettingsDataDiskTypePtr) ToCloudSqlSettingsDataDiskTypePtrOutput() CloudSqlSettingsDataDiskTypePtrOutput {
	return pulumi.ToOutput(in).(CloudSqlSettingsDataDiskTypePtrOutput)
}

func (in *cloudSqlSettingsDataDiskTypePtr) ToCloudSqlSettingsDataDiskTypePtrOutputWithContext(ctx context.Context) CloudSqlSettingsDataDiskTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CloudSqlSettingsDataDiskTypePtrOutput)
}

func (in *cloudSqlSettingsDataDiskTypePtr) ToOutput(ctx context.Context) pulumix.Output[*CloudSqlSettingsDataDiskType] {
	return pulumix.Output[*CloudSqlSettingsDataDiskType]{
		OutputState: in.ToCloudSqlSettingsDataDiskTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The database engine type and version.
type CloudSqlSettingsDatabaseVersion string

const (
	// Unspecified version.
	CloudSqlSettingsDatabaseVersionSqlDatabaseVersionUnspecified = CloudSqlSettingsDatabaseVersion("SQL_DATABASE_VERSION_UNSPECIFIED")
	// MySQL 5.6.
	CloudSqlSettingsDatabaseVersionMysql56 = CloudSqlSettingsDatabaseVersion("MYSQL_5_6")
	// MySQL 5.7.
	CloudSqlSettingsDatabaseVersionMysql57 = CloudSqlSettingsDatabaseVersion("MYSQL_5_7")
	// MySQL 8.0.
	CloudSqlSettingsDatabaseVersionMysql80 = CloudSqlSettingsDatabaseVersion("MYSQL_8_0")
	// The database major version is MySQL 8.0 and the minor version is 18.
	CloudSqlSettingsDatabaseVersionMysql8018 = CloudSqlSettingsDatabaseVersion("MYSQL_8_0_18")
	// The database major version is MySQL 8.0 and the minor version is 26.
	CloudSqlSettingsDatabaseVersionMysql8026 = CloudSqlSettingsDatabaseVersion("MYSQL_8_0_26")
	// The database major version is MySQL 8.0 and the minor version is 27.
	CloudSqlSettingsDatabaseVersionMysql8027 = CloudSqlSettingsDatabaseVersion("MYSQL_8_0_27")
	// The database major version is MySQL 8.0 and the minor version is 28.
	CloudSqlSettingsDatabaseVersionMysql8028 = CloudSqlSettingsDatabaseVersion("MYSQL_8_0_28")
	// The database major version is MySQL 8.0 and the minor version is 30.
	CloudSqlSettingsDatabaseVersionMysql8030 = CloudSqlSettingsDatabaseVersion("MYSQL_8_0_30")
	// The database major version is MySQL 8.0 and the minor version is 31.
	CloudSqlSettingsDatabaseVersionMysql8031 = CloudSqlSettingsDatabaseVersion("MYSQL_8_0_31")
	// The database major version is MySQL 8.0 and the minor version is 32.
	CloudSqlSettingsDatabaseVersionMysql8032 = CloudSqlSettingsDatabaseVersion("MYSQL_8_0_32")
	// The database major version is MySQL 8.0 and the minor version is 33.
	CloudSqlSettingsDatabaseVersionMysql8033 = CloudSqlSettingsDatabaseVersion("MYSQL_8_0_33")
	// The database major version is MySQL 8.0 and the minor version is 34.
	CloudSqlSettingsDatabaseVersionMysql8034 = CloudSqlSettingsDatabaseVersion("MYSQL_8_0_34")
	// PostgreSQL 9.6.
	CloudSqlSettingsDatabaseVersionPostgres96 = CloudSqlSettingsDatabaseVersion("POSTGRES_9_6")
	// PostgreSQL 11.
	CloudSqlSettingsDatabaseVersionPostgres11 = CloudSqlSettingsDatabaseVersion("POSTGRES_11")
	// PostgreSQL 10.
	CloudSqlSettingsDatabaseVersionPostgres10 = CloudSqlSettingsDatabaseVersion("POSTGRES_10")
	// PostgreSQL 12.
	CloudSqlSettingsDatabaseVersionPostgres12 = CloudSqlSettingsDatabaseVersion("POSTGRES_12")
	// PostgreSQL 13.
	CloudSqlSettingsDatabaseVersionPostgres13 = CloudSqlSettingsDatabaseVersion("POSTGRES_13")
	// PostgreSQL 14.
	CloudSqlSettingsDatabaseVersionPostgres14 = CloudSqlSettingsDatabaseVersion("POSTGRES_14")
	// PostgreSQL 15.
	CloudSqlSettingsDatabaseVersionPostgres15 = CloudSqlSettingsDatabaseVersion("POSTGRES_15")
)

func (CloudSqlSettingsDatabaseVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSqlSettingsDatabaseVersion)(nil)).Elem()
}

func (e CloudSqlSettingsDatabaseVersion) ToCloudSqlSettingsDatabaseVersionOutput() CloudSqlSettingsDatabaseVersionOutput {
	return pulumi.ToOutput(e).(CloudSqlSettingsDatabaseVersionOutput)
}

func (e CloudSqlSettingsDatabaseVersion) ToCloudSqlSettingsDatabaseVersionOutputWithContext(ctx context.Context) CloudSqlSettingsDatabaseVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CloudSqlSettingsDatabaseVersionOutput)
}

func (e CloudSqlSettingsDatabaseVersion) ToCloudSqlSettingsDatabaseVersionPtrOutput() CloudSqlSettingsDatabaseVersionPtrOutput {
	return e.ToCloudSqlSettingsDatabaseVersionPtrOutputWithContext(context.Background())
}

func (e CloudSqlSettingsDatabaseVersion) ToCloudSqlSettingsDatabaseVersionPtrOutputWithContext(ctx context.Context) CloudSqlSettingsDatabaseVersionPtrOutput {
	return CloudSqlSettingsDatabaseVersion(e).ToCloudSqlSettingsDatabaseVersionOutputWithContext(ctx).ToCloudSqlSettingsDatabaseVersionPtrOutputWithContext(ctx)
}

func (e CloudSqlSettingsDatabaseVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsDatabaseVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsDatabaseVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudSqlSettingsDatabaseVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CloudSqlSettingsDatabaseVersionOutput struct{ *pulumi.OutputState }

func (CloudSqlSettingsDatabaseVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSqlSettingsDatabaseVersion)(nil)).Elem()
}

func (o CloudSqlSettingsDatabaseVersionOutput) ToCloudSqlSettingsDatabaseVersionOutput() CloudSqlSettingsDatabaseVersionOutput {
	return o
}

func (o CloudSqlSettingsDatabaseVersionOutput) ToCloudSqlSettingsDatabaseVersionOutputWithContext(ctx context.Context) CloudSqlSettingsDatabaseVersionOutput {
	return o
}

func (o CloudSqlSettingsDatabaseVersionOutput) ToCloudSqlSettingsDatabaseVersionPtrOutput() CloudSqlSettingsDatabaseVersionPtrOutput {
	return o.ToCloudSqlSettingsDatabaseVersionPtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsDatabaseVersionOutput) ToCloudSqlSettingsDatabaseVersionPtrOutputWithContext(ctx context.Context) CloudSqlSettingsDatabaseVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudSqlSettingsDatabaseVersion) *CloudSqlSettingsDatabaseVersion {
		return &v
	}).(CloudSqlSettingsDatabaseVersionPtrOutput)
}

func (o CloudSqlSettingsDatabaseVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CloudSqlSettingsDatabaseVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudSqlSettingsDatabaseVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CloudSqlSettingsDatabaseVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsDatabaseVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudSqlSettingsDatabaseVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CloudSqlSettingsDatabaseVersionPtrOutput struct{ *pulumi.OutputState }

func (CloudSqlSettingsDatabaseVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudSqlSettingsDatabaseVersion)(nil)).Elem()
}

func (o CloudSqlSettingsDatabaseVersionPtrOutput) ToCloudSqlSettingsDatabaseVersionPtrOutput() CloudSqlSettingsDatabaseVersionPtrOutput {
	return o
}

func (o CloudSqlSettingsDatabaseVersionPtrOutput) ToCloudSqlSettingsDatabaseVersionPtrOutputWithContext(ctx context.Context) CloudSqlSettingsDatabaseVersionPtrOutput {
	return o
}

func (o CloudSqlSettingsDatabaseVersionPtrOutput) Elem() CloudSqlSettingsDatabaseVersionOutput {
	return o.ApplyT(func(v *CloudSqlSettingsDatabaseVersion) CloudSqlSettingsDatabaseVersion {
		if v != nil {
			return *v
		}
		var ret CloudSqlSettingsDatabaseVersion
		return ret
	}).(CloudSqlSettingsDatabaseVersionOutput)
}

func (o CloudSqlSettingsDatabaseVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsDatabaseVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CloudSqlSettingsDatabaseVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CloudSqlSettingsDatabaseVersionInput is an input type that accepts CloudSqlSettingsDatabaseVersionArgs and CloudSqlSettingsDatabaseVersionOutput values.
// You can construct a concrete instance of `CloudSqlSettingsDatabaseVersionInput` via:
//
//	CloudSqlSettingsDatabaseVersionArgs{...}
type CloudSqlSettingsDatabaseVersionInput interface {
	pulumi.Input

	ToCloudSqlSettingsDatabaseVersionOutput() CloudSqlSettingsDatabaseVersionOutput
	ToCloudSqlSettingsDatabaseVersionOutputWithContext(context.Context) CloudSqlSettingsDatabaseVersionOutput
}

var cloudSqlSettingsDatabaseVersionPtrType = reflect.TypeOf((**CloudSqlSettingsDatabaseVersion)(nil)).Elem()

type CloudSqlSettingsDatabaseVersionPtrInput interface {
	pulumi.Input

	ToCloudSqlSettingsDatabaseVersionPtrOutput() CloudSqlSettingsDatabaseVersionPtrOutput
	ToCloudSqlSettingsDatabaseVersionPtrOutputWithContext(context.Context) CloudSqlSettingsDatabaseVersionPtrOutput
}

type cloudSqlSettingsDatabaseVersionPtr string

func CloudSqlSettingsDatabaseVersionPtr(v string) CloudSqlSettingsDatabaseVersionPtrInput {
	return (*cloudSqlSettingsDatabaseVersionPtr)(&v)
}

func (*cloudSqlSettingsDatabaseVersionPtr) ElementType() reflect.Type {
	return cloudSqlSettingsDatabaseVersionPtrType
}

func (in *cloudSqlSettingsDatabaseVersionPtr) ToCloudSqlSettingsDatabaseVersionPtrOutput() CloudSqlSettingsDatabaseVersionPtrOutput {
	return pulumi.ToOutput(in).(CloudSqlSettingsDatabaseVersionPtrOutput)
}

func (in *cloudSqlSettingsDatabaseVersionPtr) ToCloudSqlSettingsDatabaseVersionPtrOutputWithContext(ctx context.Context) CloudSqlSettingsDatabaseVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CloudSqlSettingsDatabaseVersionPtrOutput)
}

func (in *cloudSqlSettingsDatabaseVersionPtr) ToOutput(ctx context.Context) pulumix.Output[*CloudSqlSettingsDatabaseVersion] {
	return pulumix.Output[*CloudSqlSettingsDatabaseVersion]{
		OutputState: in.ToCloudSqlSettingsDatabaseVersionPtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. The edition of the given Cloud SQL instance.
type CloudSqlSettingsEdition string

const (
	// The instance did not specify the edition.
	CloudSqlSettingsEditionEditionUnspecified = CloudSqlSettingsEdition("EDITION_UNSPECIFIED")
	// The instance is an enterprise edition.
	CloudSqlSettingsEditionEnterprise = CloudSqlSettingsEdition("ENTERPRISE")
	// The instance is an enterprise plus edition.
	CloudSqlSettingsEditionEnterprisePlus = CloudSqlSettingsEdition("ENTERPRISE_PLUS")
)

func (CloudSqlSettingsEdition) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSqlSettingsEdition)(nil)).Elem()
}

func (e CloudSqlSettingsEdition) ToCloudSqlSettingsEditionOutput() CloudSqlSettingsEditionOutput {
	return pulumi.ToOutput(e).(CloudSqlSettingsEditionOutput)
}

func (e CloudSqlSettingsEdition) ToCloudSqlSettingsEditionOutputWithContext(ctx context.Context) CloudSqlSettingsEditionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CloudSqlSettingsEditionOutput)
}

func (e CloudSqlSettingsEdition) ToCloudSqlSettingsEditionPtrOutput() CloudSqlSettingsEditionPtrOutput {
	return e.ToCloudSqlSettingsEditionPtrOutputWithContext(context.Background())
}

func (e CloudSqlSettingsEdition) ToCloudSqlSettingsEditionPtrOutputWithContext(ctx context.Context) CloudSqlSettingsEditionPtrOutput {
	return CloudSqlSettingsEdition(e).ToCloudSqlSettingsEditionOutputWithContext(ctx).ToCloudSqlSettingsEditionPtrOutputWithContext(ctx)
}

func (e CloudSqlSettingsEdition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsEdition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudSqlSettingsEdition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudSqlSettingsEdition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CloudSqlSettingsEditionOutput struct{ *pulumi.OutputState }

func (CloudSqlSettingsEditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSqlSettingsEdition)(nil)).Elem()
}

func (o CloudSqlSettingsEditionOutput) ToCloudSqlSettingsEditionOutput() CloudSqlSettingsEditionOutput {
	return o
}

func (o CloudSqlSettingsEditionOutput) ToCloudSqlSettingsEditionOutputWithContext(ctx context.Context) CloudSqlSettingsEditionOutput {
	return o
}

func (o CloudSqlSettingsEditionOutput) ToCloudSqlSettingsEditionPtrOutput() CloudSqlSettingsEditionPtrOutput {
	return o.ToCloudSqlSettingsEditionPtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsEditionOutput) ToCloudSqlSettingsEditionPtrOutputWithContext(ctx context.Context) CloudSqlSettingsEditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudSqlSettingsEdition) *CloudSqlSettingsEdition {
		return &v
	}).(CloudSqlSettingsEditionPtrOutput)
}

func (o CloudSqlSettingsEditionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CloudSqlSettingsEditionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudSqlSettingsEdition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CloudSqlSettingsEditionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsEditionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudSqlSettingsEdition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CloudSqlSettingsEditionPtrOutput struct{ *pulumi.OutputState }

func (CloudSqlSettingsEditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudSqlSettingsEdition)(nil)).Elem()
}

func (o CloudSqlSettingsEditionPtrOutput) ToCloudSqlSettingsEditionPtrOutput() CloudSqlSettingsEditionPtrOutput {
	return o
}

func (o CloudSqlSettingsEditionPtrOutput) ToCloudSqlSettingsEditionPtrOutputWithContext(ctx context.Context) CloudSqlSettingsEditionPtrOutput {
	return o
}

func (o CloudSqlSettingsEditionPtrOutput) Elem() CloudSqlSettingsEditionOutput {
	return o.ApplyT(func(v *CloudSqlSettingsEdition) CloudSqlSettingsEdition {
		if v != nil {
			return *v
		}
		var ret CloudSqlSettingsEdition
		return ret
	}).(CloudSqlSettingsEditionOutput)
}

func (o CloudSqlSettingsEditionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudSqlSettingsEditionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CloudSqlSettingsEdition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CloudSqlSettingsEditionInput is an input type that accepts CloudSqlSettingsEditionArgs and CloudSqlSettingsEditionOutput values.
// You can construct a concrete instance of `CloudSqlSettingsEditionInput` via:
//
//	CloudSqlSettingsEditionArgs{...}
type CloudSqlSettingsEditionInput interface {
	pulumi.Input

	ToCloudSqlSettingsEditionOutput() CloudSqlSettingsEditionOutput
	ToCloudSqlSettingsEditionOutputWithContext(context.Context) CloudSqlSettingsEditionOutput
}

var cloudSqlSettingsEditionPtrType = reflect.TypeOf((**CloudSqlSettingsEdition)(nil)).Elem()

type CloudSqlSettingsEditionPtrInput interface {
	pulumi.Input

	ToCloudSqlSettingsEditionPtrOutput() CloudSqlSettingsEditionPtrOutput
	ToCloudSqlSettingsEditionPtrOutputWithContext(context.Context) CloudSqlSettingsEditionPtrOutput
}

type cloudSqlSettingsEditionPtr string

func CloudSqlSettingsEditionPtr(v string) CloudSqlSettingsEditionPtrInput {
	return (*cloudSqlSettingsEditionPtr)(&v)
}

func (*cloudSqlSettingsEditionPtr) ElementType() reflect.Type {
	return cloudSqlSettingsEditionPtrType
}

func (in *cloudSqlSettingsEditionPtr) ToCloudSqlSettingsEditionPtrOutput() CloudSqlSettingsEditionPtrOutput {
	return pulumi.ToOutput(in).(CloudSqlSettingsEditionPtrOutput)
}

func (in *cloudSqlSettingsEditionPtr) ToCloudSqlSettingsEditionPtrOutputWithContext(ctx context.Context) CloudSqlSettingsEditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CloudSqlSettingsEditionPtrOutput)
}

func (in *cloudSqlSettingsEditionPtr) ToOutput(ctx context.Context) pulumix.Output[*CloudSqlSettingsEdition] {
	return pulumix.Output[*CloudSqlSettingsEdition]{
		OutputState: in.ToCloudSqlSettingsEditionPtrOutputWithContext(ctx).OutputState,
	}
}

// The database provider.
type ConnectionProfileProvider string

const (
	// The database provider is unknown.
	ConnectionProfileProviderDatabaseProviderUnspecified = ConnectionProfileProvider("DATABASE_PROVIDER_UNSPECIFIED")
	// CloudSQL runs the database.
	ConnectionProfileProviderCloudsql = ConnectionProfileProvider("CLOUDSQL")
	// RDS runs the database.
	ConnectionProfileProviderRds = ConnectionProfileProvider("RDS")
	// Amazon Aurora.
	ConnectionProfileProviderAurora = ConnectionProfileProvider("AURORA")
	// AlloyDB.
	ConnectionProfileProviderAlloydb = ConnectionProfileProvider("ALLOYDB")
)

func (ConnectionProfileProvider) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileProvider)(nil)).Elem()
}

func (e ConnectionProfileProvider) ToConnectionProfileProviderOutput() ConnectionProfileProviderOutput {
	return pulumi.ToOutput(e).(ConnectionProfileProviderOutput)
}

func (e ConnectionProfileProvider) ToConnectionProfileProviderOutputWithContext(ctx context.Context) ConnectionProfileProviderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConnectionProfileProviderOutput)
}

func (e ConnectionProfileProvider) ToConnectionProfileProviderPtrOutput() ConnectionProfileProviderPtrOutput {
	return e.ToConnectionProfileProviderPtrOutputWithContext(context.Background())
}

func (e ConnectionProfileProvider) ToConnectionProfileProviderPtrOutputWithContext(ctx context.Context) ConnectionProfileProviderPtrOutput {
	return ConnectionProfileProvider(e).ToConnectionProfileProviderOutputWithContext(ctx).ToConnectionProfileProviderPtrOutputWithContext(ctx)
}

func (e ConnectionProfileProvider) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionProfileProvider) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionProfileProvider) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectionProfileProvider) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConnectionProfileProviderOutput struct{ *pulumi.OutputState }

func (ConnectionProfileProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileProvider)(nil)).Elem()
}

func (o ConnectionProfileProviderOutput) ToConnectionProfileProviderOutput() ConnectionProfileProviderOutput {
	return o
}

func (o ConnectionProfileProviderOutput) ToConnectionProfileProviderOutputWithContext(ctx context.Context) ConnectionProfileProviderOutput {
	return o
}

func (o ConnectionProfileProviderOutput) ToConnectionProfileProviderPtrOutput() ConnectionProfileProviderPtrOutput {
	return o.ToConnectionProfileProviderPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileProviderOutput) ToConnectionProfileProviderPtrOutputWithContext(ctx context.Context) ConnectionProfileProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionProfileProvider) *ConnectionProfileProvider {
		return &v
	}).(ConnectionProfileProviderPtrOutput)
}

func (o ConnectionProfileProviderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectionProfileProviderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectionProfileProvider) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectionProfileProviderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileProviderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectionProfileProvider) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectionProfileProviderPtrOutput struct{ *pulumi.OutputState }

func (ConnectionProfileProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileProvider)(nil)).Elem()
}

func (o ConnectionProfileProviderPtrOutput) ToConnectionProfileProviderPtrOutput() ConnectionProfileProviderPtrOutput {
	return o
}

func (o ConnectionProfileProviderPtrOutput) ToConnectionProfileProviderPtrOutputWithContext(ctx context.Context) ConnectionProfileProviderPtrOutput {
	return o
}

func (o ConnectionProfileProviderPtrOutput) Elem() ConnectionProfileProviderOutput {
	return o.ApplyT(func(v *ConnectionProfileProvider) ConnectionProfileProvider {
		if v != nil {
			return *v
		}
		var ret ConnectionProfileProvider
		return ret
	}).(ConnectionProfileProviderOutput)
}

func (o ConnectionProfileProviderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileProviderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConnectionProfileProvider) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConnectionProfileProviderInput is an input type that accepts ConnectionProfileProviderArgs and ConnectionProfileProviderOutput values.
// You can construct a concrete instance of `ConnectionProfileProviderInput` via:
//
//	ConnectionProfileProviderArgs{...}
type ConnectionProfileProviderInput interface {
	pulumi.Input

	ToConnectionProfileProviderOutput() ConnectionProfileProviderOutput
	ToConnectionProfileProviderOutputWithContext(context.Context) ConnectionProfileProviderOutput
}

var connectionProfileProviderPtrType = reflect.TypeOf((**ConnectionProfileProvider)(nil)).Elem()

type ConnectionProfileProviderPtrInput interface {
	pulumi.Input

	ToConnectionProfileProviderPtrOutput() ConnectionProfileProviderPtrOutput
	ToConnectionProfileProviderPtrOutputWithContext(context.Context) ConnectionProfileProviderPtrOutput
}

type connectionProfileProviderPtr string

func ConnectionProfileProviderPtr(v string) ConnectionProfileProviderPtrInput {
	return (*connectionProfileProviderPtr)(&v)
}

func (*connectionProfileProviderPtr) ElementType() reflect.Type {
	return connectionProfileProviderPtrType
}

func (in *connectionProfileProviderPtr) ToConnectionProfileProviderPtrOutput() ConnectionProfileProviderPtrOutput {
	return pulumi.ToOutput(in).(ConnectionProfileProviderPtrOutput)
}

func (in *connectionProfileProviderPtr) ToConnectionProfileProviderPtrOutputWithContext(ctx context.Context) ConnectionProfileProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConnectionProfileProviderPtrOutput)
}

func (in *connectionProfileProviderPtr) ToOutput(ctx context.Context) pulumix.Output[*ConnectionProfileProvider] {
	return pulumix.Output[*ConnectionProfileProvider]{
		OutputState: in.ToConnectionProfileProviderPtrOutputWithContext(ctx).OutputState,
	}
}

// The current connection profile state (e.g. DRAFT, READY, or FAILED).
type ConnectionProfileStateEnum string

const (
	// The state of the connection profile is unknown.
	ConnectionProfileStateEnumStateUnspecified = ConnectionProfileStateEnum("STATE_UNSPECIFIED")
	// The connection profile is in draft mode and fully editable.
	ConnectionProfileStateEnumDraft = ConnectionProfileStateEnum("DRAFT")
	// The connection profile is being created.
	ConnectionProfileStateEnumCreating = ConnectionProfileStateEnum("CREATING")
	// The connection profile is ready.
	ConnectionProfileStateEnumReady = ConnectionProfileStateEnum("READY")
	// The connection profile is being updated.
	ConnectionProfileStateEnumUpdating = ConnectionProfileStateEnum("UPDATING")
	// The connection profile is being deleted.
	ConnectionProfileStateEnumDeleting = ConnectionProfileStateEnum("DELETING")
	// The connection profile has been deleted.
	ConnectionProfileStateEnumDeleted = ConnectionProfileStateEnum("DELETED")
	// The last action on the connection profile failed.
	ConnectionProfileStateEnumFailed = ConnectionProfileStateEnum("FAILED")
)

func (ConnectionProfileStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileStateEnum)(nil)).Elem()
}

func (e ConnectionProfileStateEnum) ToConnectionProfileStateEnumOutput() ConnectionProfileStateEnumOutput {
	return pulumi.ToOutput(e).(ConnectionProfileStateEnumOutput)
}

func (e ConnectionProfileStateEnum) ToConnectionProfileStateEnumOutputWithContext(ctx context.Context) ConnectionProfileStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConnectionProfileStateEnumOutput)
}

func (e ConnectionProfileStateEnum) ToConnectionProfileStateEnumPtrOutput() ConnectionProfileStateEnumPtrOutput {
	return e.ToConnectionProfileStateEnumPtrOutputWithContext(context.Background())
}

func (e ConnectionProfileStateEnum) ToConnectionProfileStateEnumPtrOutputWithContext(ctx context.Context) ConnectionProfileStateEnumPtrOutput {
	return ConnectionProfileStateEnum(e).ToConnectionProfileStateEnumOutputWithContext(ctx).ToConnectionProfileStateEnumPtrOutputWithContext(ctx)
}

func (e ConnectionProfileStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionProfileStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionProfileStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectionProfileStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConnectionProfileStateEnumOutput struct{ *pulumi.OutputState }

func (ConnectionProfileStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionProfileStateEnum)(nil)).Elem()
}

func (o ConnectionProfileStateEnumOutput) ToConnectionProfileStateEnumOutput() ConnectionProfileStateEnumOutput {
	return o
}

func (o ConnectionProfileStateEnumOutput) ToConnectionProfileStateEnumOutputWithContext(ctx context.Context) ConnectionProfileStateEnumOutput {
	return o
}

func (o ConnectionProfileStateEnumOutput) ToConnectionProfileStateEnumPtrOutput() ConnectionProfileStateEnumPtrOutput {
	return o.ToConnectionProfileStateEnumPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileStateEnumOutput) ToConnectionProfileStateEnumPtrOutputWithContext(ctx context.Context) ConnectionProfileStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionProfileStateEnum) *ConnectionProfileStateEnum {
		return &v
	}).(ConnectionProfileStateEnumPtrOutput)
}

func (o ConnectionProfileStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectionProfileStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectionProfileStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectionProfileStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectionProfileStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectionProfileStateEnumPtrOutput struct{ *pulumi.OutputState }

func (ConnectionProfileStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfileStateEnum)(nil)).Elem()
}

func (o ConnectionProfileStateEnumPtrOutput) ToConnectionProfileStateEnumPtrOutput() ConnectionProfileStateEnumPtrOutput {
	return o
}

func (o ConnectionProfileStateEnumPtrOutput) ToConnectionProfileStateEnumPtrOutputWithContext(ctx context.Context) ConnectionProfileStateEnumPtrOutput {
	return o
}

func (o ConnectionProfileStateEnumPtrOutput) Elem() ConnectionProfileStateEnumOutput {
	return o.ApplyT(func(v *ConnectionProfileStateEnum) ConnectionProfileStateEnum {
		if v != nil {
			return *v
		}
		var ret ConnectionProfileStateEnum
		return ret
	}).(ConnectionProfileStateEnumOutput)
}

func (o ConnectionProfileStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectionProfileStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConnectionProfileStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConnectionProfileStateEnumInput is an input type that accepts ConnectionProfileStateEnumArgs and ConnectionProfileStateEnumOutput values.
// You can construct a concrete instance of `ConnectionProfileStateEnumInput` via:
//
//	ConnectionProfileStateEnumArgs{...}
type ConnectionProfileStateEnumInput interface {
	pulumi.Input

	ToConnectionProfileStateEnumOutput() ConnectionProfileStateEnumOutput
	ToConnectionProfileStateEnumOutputWithContext(context.Context) ConnectionProfileStateEnumOutput
}

var connectionProfileStateEnumPtrType = reflect.TypeOf((**ConnectionProfileStateEnum)(nil)).Elem()

type ConnectionProfileStateEnumPtrInput interface {
	pulumi.Input

	ToConnectionProfileStateEnumPtrOutput() ConnectionProfileStateEnumPtrOutput
	ToConnectionProfileStateEnumPtrOutputWithContext(context.Context) ConnectionProfileStateEnumPtrOutput
}

type connectionProfileStateEnumPtr string

func ConnectionProfileStateEnumPtr(v string) ConnectionProfileStateEnumPtrInput {
	return (*connectionProfileStateEnumPtr)(&v)
}

func (*connectionProfileStateEnumPtr) ElementType() reflect.Type {
	return connectionProfileStateEnumPtrType
}

func (in *connectionProfileStateEnumPtr) ToConnectionProfileStateEnumPtrOutput() ConnectionProfileStateEnumPtrOutput {
	return pulumi.ToOutput(in).(ConnectionProfileStateEnumPtrOutput)
}

func (in *connectionProfileStateEnumPtr) ToConnectionProfileStateEnumPtrOutputWithContext(ctx context.Context) ConnectionProfileStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConnectionProfileStateEnumPtrOutput)
}

func (in *connectionProfileStateEnumPtr) ToOutput(ctx context.Context) pulumix.Output[*ConnectionProfileStateEnum] {
	return pulumix.Output[*ConnectionProfileStateEnum]{
		OutputState: in.ToConnectionProfileStateEnumPtrOutputWithContext(ctx).OutputState,
	}
}

// Required. Engine type.
type DatabaseEngineInfoEngine string

const (
	// The source database engine of the migration job is unknown.
	DatabaseEngineInfoEngineDatabaseEngineUnspecified = DatabaseEngineInfoEngine("DATABASE_ENGINE_UNSPECIFIED")
	// The source engine is MySQL.
	DatabaseEngineInfoEngineMysql = DatabaseEngineInfoEngine("MYSQL")
	// The source engine is PostgreSQL.
	DatabaseEngineInfoEnginePostgresql = DatabaseEngineInfoEngine("POSTGRESQL")
	// The source engine is Oracle.
	DatabaseEngineInfoEngineOracle = DatabaseEngineInfoEngine("ORACLE")
)

func (DatabaseEngineInfoEngine) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseEngineInfoEngine)(nil)).Elem()
}

func (e DatabaseEngineInfoEngine) ToDatabaseEngineInfoEngineOutput() DatabaseEngineInfoEngineOutput {
	return pulumi.ToOutput(e).(DatabaseEngineInfoEngineOutput)
}

func (e DatabaseEngineInfoEngine) ToDatabaseEngineInfoEngineOutputWithContext(ctx context.Context) DatabaseEngineInfoEngineOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseEngineInfoEngineOutput)
}

func (e DatabaseEngineInfoEngine) ToDatabaseEngineInfoEnginePtrOutput() DatabaseEngineInfoEnginePtrOutput {
	return e.ToDatabaseEngineInfoEnginePtrOutputWithContext(context.Background())
}

func (e DatabaseEngineInfoEngine) ToDatabaseEngineInfoEnginePtrOutputWithContext(ctx context.Context) DatabaseEngineInfoEnginePtrOutput {
	return DatabaseEngineInfoEngine(e).ToDatabaseEngineInfoEngineOutputWithContext(ctx).ToDatabaseEngineInfoEnginePtrOutputWithContext(ctx)
}

func (e DatabaseEngineInfoEngine) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseEngineInfoEngine) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseEngineInfoEngine) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseEngineInfoEngine) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseEngineInfoEngineOutput struct{ *pulumi.OutputState }

func (DatabaseEngineInfoEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseEngineInfoEngine)(nil)).Elem()
}

func (o DatabaseEngineInfoEngineOutput) ToDatabaseEngineInfoEngineOutput() DatabaseEngineInfoEngineOutput {
	return o
}

func (o DatabaseEngineInfoEngineOutput) ToDatabaseEngineInfoEngineOutputWithContext(ctx context.Context) DatabaseEngineInfoEngineOutput {
	return o
}

func (o DatabaseEngineInfoEngineOutput) ToDatabaseEngineInfoEnginePtrOutput() DatabaseEngineInfoEnginePtrOutput {
	return o.ToDatabaseEngineInfoEnginePtrOutputWithContext(context.Background())
}

func (o DatabaseEngineInfoEngineOutput) ToDatabaseEngineInfoEnginePtrOutputWithContext(ctx context.Context) DatabaseEngineInfoEnginePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseEngineInfoEngine) *DatabaseEngineInfoEngine {
		return &v
	}).(DatabaseEngineInfoEnginePtrOutput)
}

func (o DatabaseEngineInfoEngineOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseEngineInfoEngineOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseEngineInfoEngine) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseEngineInfoEngineOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseEngineInfoEngineOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseEngineInfoEngine) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseEngineInfoEnginePtrOutput struct{ *pulumi.OutputState }

func (DatabaseEngineInfoEnginePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseEngineInfoEngine)(nil)).Elem()
}

func (o DatabaseEngineInfoEnginePtrOutput) ToDatabaseEngineInfoEnginePtrOutput() DatabaseEngineInfoEnginePtrOutput {
	return o
}

func (o DatabaseEngineInfoEnginePtrOutput) ToDatabaseEngineInfoEnginePtrOutputWithContext(ctx context.Context) DatabaseEngineInfoEnginePtrOutput {
	return o
}

func (o DatabaseEngineInfoEnginePtrOutput) Elem() DatabaseEngineInfoEngineOutput {
	return o.ApplyT(func(v *DatabaseEngineInfoEngine) DatabaseEngineInfoEngine {
		if v != nil {
			return *v
		}
		var ret DatabaseEngineInfoEngine
		return ret
	}).(DatabaseEngineInfoEngineOutput)
}

func (o DatabaseEngineInfoEnginePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseEngineInfoEnginePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseEngineInfoEngine) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabaseEngineInfoEngineInput is an input type that accepts DatabaseEngineInfoEngineArgs and DatabaseEngineInfoEngineOutput values.
// You can construct a concrete instance of `DatabaseEngineInfoEngineInput` via:
//
//	DatabaseEngineInfoEngineArgs{...}
type DatabaseEngineInfoEngineInput interface {
	pulumi.Input

	ToDatabaseEngineInfoEngineOutput() DatabaseEngineInfoEngineOutput
	ToDatabaseEngineInfoEngineOutputWithContext(context.Context) DatabaseEngineInfoEngineOutput
}

var databaseEngineInfoEnginePtrType = reflect.TypeOf((**DatabaseEngineInfoEngine)(nil)).Elem()

type DatabaseEngineInfoEnginePtrInput interface {
	pulumi.Input

	ToDatabaseEngineInfoEnginePtrOutput() DatabaseEngineInfoEnginePtrOutput
	ToDatabaseEngineInfoEnginePtrOutputWithContext(context.Context) DatabaseEngineInfoEnginePtrOutput
}

type databaseEngineInfoEnginePtr string

func DatabaseEngineInfoEnginePtr(v string) DatabaseEngineInfoEnginePtrInput {
	return (*databaseEngineInfoEnginePtr)(&v)
}

func (*databaseEngineInfoEnginePtr) ElementType() reflect.Type {
	return databaseEngineInfoEnginePtrType
}

func (in *databaseEngineInfoEnginePtr) ToDatabaseEngineInfoEnginePtrOutput() DatabaseEngineInfoEnginePtrOutput {
	return pulumi.ToOutput(in).(DatabaseEngineInfoEnginePtrOutput)
}

func (in *databaseEngineInfoEnginePtr) ToDatabaseEngineInfoEnginePtrOutputWithContext(ctx context.Context) DatabaseEngineInfoEnginePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseEngineInfoEnginePtrOutput)
}

func (in *databaseEngineInfoEnginePtr) ToOutput(ctx context.Context) pulumix.Output[*DatabaseEngineInfoEngine] {
	return pulumix.Output[*DatabaseEngineInfoEngine]{
		OutputState: in.ToDatabaseEngineInfoEnginePtrOutputWithContext(ctx).OutputState,
	}
}

// The database engine.
type DatabaseTypeEngine string

const (
	// The source database engine of the migration job is unknown.
	DatabaseTypeEngineDatabaseEngineUnspecified = DatabaseTypeEngine("DATABASE_ENGINE_UNSPECIFIED")
	// The source engine is MySQL.
	DatabaseTypeEngineMysql = DatabaseTypeEngine("MYSQL")
	// The source engine is PostgreSQL.
	DatabaseTypeEnginePostgresql = DatabaseTypeEngine("POSTGRESQL")
	// The source engine is Oracle.
	DatabaseTypeEngineOracle = DatabaseTypeEngine("ORACLE")
)

func (DatabaseTypeEngine) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTypeEngine)(nil)).Elem()
}

func (e DatabaseTypeEngine) ToDatabaseTypeEngineOutput() DatabaseTypeEngineOutput {
	return pulumi.ToOutput(e).(DatabaseTypeEngineOutput)
}

func (e DatabaseTypeEngine) ToDatabaseTypeEngineOutputWithContext(ctx context.Context) DatabaseTypeEngineOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseTypeEngineOutput)
}

func (e DatabaseTypeEngine) ToDatabaseTypeEnginePtrOutput() DatabaseTypeEnginePtrOutput {
	return e.ToDatabaseTypeEnginePtrOutputWithContext(context.Background())
}

func (e DatabaseTypeEngine) ToDatabaseTypeEnginePtrOutputWithContext(ctx context.Context) DatabaseTypeEnginePtrOutput {
	return DatabaseTypeEngine(e).ToDatabaseTypeEngineOutputWithContext(ctx).ToDatabaseTypeEnginePtrOutputWithContext(ctx)
}

func (e DatabaseTypeEngine) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseTypeEngine) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseTypeEngine) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseTypeEngine) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseTypeEngineOutput struct{ *pulumi.OutputState }

func (DatabaseTypeEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTypeEngine)(nil)).Elem()
}

func (o DatabaseTypeEngineOutput) ToDatabaseTypeEngineOutput() DatabaseTypeEngineOutput {
	return o
}

func (o DatabaseTypeEngineOutput) ToDatabaseTypeEngineOutputWithContext(ctx context.Context) DatabaseTypeEngineOutput {
	return o
}

func (o DatabaseTypeEngineOutput) ToDatabaseTypeEnginePtrOutput() DatabaseTypeEnginePtrOutput {
	return o.ToDatabaseTypeEnginePtrOutputWithContext(context.Background())
}

func (o DatabaseTypeEngineOutput) ToDatabaseTypeEnginePtrOutputWithContext(ctx context.Context) DatabaseTypeEnginePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseTypeEngine) *DatabaseTypeEngine {
		return &v
	}).(DatabaseTypeEnginePtrOutput)
}

func (o DatabaseTypeEngineOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseTypeEngineOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseTypeEngine) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseTypeEngineOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseTypeEngineOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseTypeEngine) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseTypeEnginePtrOutput struct{ *pulumi.OutputState }

func (DatabaseTypeEnginePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseTypeEngine)(nil)).Elem()
}

func (o DatabaseTypeEnginePtrOutput) ToDatabaseTypeEnginePtrOutput() DatabaseTypeEnginePtrOutput {
	return o
}

func (o DatabaseTypeEnginePtrOutput) ToDatabaseTypeEnginePtrOutputWithContext(ctx context.Context) DatabaseTypeEnginePtrOutput {
	return o
}

func (o DatabaseTypeEnginePtrOutput) Elem() DatabaseTypeEngineOutput {
	return o.ApplyT(func(v *DatabaseTypeEngine) DatabaseTypeEngine {
		if v != nil {
			return *v
		}
		var ret DatabaseTypeEngine
		return ret
	}).(DatabaseTypeEngineOutput)
}

func (o DatabaseTypeEnginePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseTypeEnginePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseTypeEngine) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabaseTypeEngineInput is an input type that accepts DatabaseTypeEngineArgs and DatabaseTypeEngineOutput values.
// You can construct a concrete instance of `DatabaseTypeEngineInput` via:
//
//	DatabaseTypeEngineArgs{...}
type DatabaseTypeEngineInput interface {
	pulumi.Input

	ToDatabaseTypeEngineOutput() DatabaseTypeEngineOutput
	ToDatabaseTypeEngineOutputWithContext(context.Context) DatabaseTypeEngineOutput
}

var databaseTypeEnginePtrType = reflect.TypeOf((**DatabaseTypeEngine)(nil)).Elem()

type DatabaseTypeEnginePtrInput interface {
	pulumi.Input

	ToDatabaseTypeEnginePtrOutput() DatabaseTypeEnginePtrOutput
	ToDatabaseTypeEnginePtrOutputWithContext(context.Context) DatabaseTypeEnginePtrOutput
}

type databaseTypeEnginePtr string

func DatabaseTypeEnginePtr(v string) DatabaseTypeEnginePtrInput {
	return (*databaseTypeEnginePtr)(&v)
}

func (*databaseTypeEnginePtr) ElementType() reflect.Type {
	return databaseTypeEnginePtrType
}

func (in *databaseTypeEnginePtr) ToDatabaseTypeEnginePtrOutput() DatabaseTypeEnginePtrOutput {
	return pulumi.ToOutput(in).(DatabaseTypeEnginePtrOutput)
}

func (in *databaseTypeEnginePtr) ToDatabaseTypeEnginePtrOutputWithContext(ctx context.Context) DatabaseTypeEnginePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseTypeEnginePtrOutput)
}

func (in *databaseTypeEnginePtr) ToOutput(ctx context.Context) pulumix.Output[*DatabaseTypeEngine] {
	return pulumix.Output[*DatabaseTypeEngine]{
		OutputState: in.ToDatabaseTypeEnginePtrOutputWithContext(ctx).OutputState,
	}
}

// The database provider.
type DatabaseTypeProvider string

const (
	// The database provider is unknown.
	DatabaseTypeProviderDatabaseProviderUnspecified = DatabaseTypeProvider("DATABASE_PROVIDER_UNSPECIFIED")
	// CloudSQL runs the database.
	DatabaseTypeProviderCloudsql = DatabaseTypeProvider("CLOUDSQL")
	// RDS runs the database.
	DatabaseTypeProviderRds = DatabaseTypeProvider("RDS")
	// Amazon Aurora.
	DatabaseTypeProviderAurora = DatabaseTypeProvider("AURORA")
	// AlloyDB.
	DatabaseTypeProviderAlloydb = DatabaseTypeProvider("ALLOYDB")
)

func (DatabaseTypeProvider) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTypeProvider)(nil)).Elem()
}

func (e DatabaseTypeProvider) ToDatabaseTypeProviderOutput() DatabaseTypeProviderOutput {
	return pulumi.ToOutput(e).(DatabaseTypeProviderOutput)
}

func (e DatabaseTypeProvider) ToDatabaseTypeProviderOutputWithContext(ctx context.Context) DatabaseTypeProviderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseTypeProviderOutput)
}

func (e DatabaseTypeProvider) ToDatabaseTypeProviderPtrOutput() DatabaseTypeProviderPtrOutput {
	return e.ToDatabaseTypeProviderPtrOutputWithContext(context.Background())
}

func (e DatabaseTypeProvider) ToDatabaseTypeProviderPtrOutputWithContext(ctx context.Context) DatabaseTypeProviderPtrOutput {
	return DatabaseTypeProvider(e).ToDatabaseTypeProviderOutputWithContext(ctx).ToDatabaseTypeProviderPtrOutputWithContext(ctx)
}

func (e DatabaseTypeProvider) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseTypeProvider) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseTypeProvider) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseTypeProvider) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseTypeProviderOutput struct{ *pulumi.OutputState }

func (DatabaseTypeProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTypeProvider)(nil)).Elem()
}

func (o DatabaseTypeProviderOutput) ToDatabaseTypeProviderOutput() DatabaseTypeProviderOutput {
	return o
}

func (o DatabaseTypeProviderOutput) ToDatabaseTypeProviderOutputWithContext(ctx context.Context) DatabaseTypeProviderOutput {
	return o
}

func (o DatabaseTypeProviderOutput) ToDatabaseTypeProviderPtrOutput() DatabaseTypeProviderPtrOutput {
	return o.ToDatabaseTypeProviderPtrOutputWithContext(context.Background())
}

func (o DatabaseTypeProviderOutput) ToDatabaseTypeProviderPtrOutputWithContext(ctx context.Context) DatabaseTypeProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseTypeProvider) *DatabaseTypeProvider {
		return &v
	}).(DatabaseTypeProviderPtrOutput)
}

func (o DatabaseTypeProviderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseTypeProviderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseTypeProvider) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseTypeProviderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseTypeProviderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseTypeProvider) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseTypeProviderPtrOutput struct{ *pulumi.OutputState }

func (DatabaseTypeProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseTypeProvider)(nil)).Elem()
}

func (o DatabaseTypeProviderPtrOutput) ToDatabaseTypeProviderPtrOutput() DatabaseTypeProviderPtrOutput {
	return o
}

func (o DatabaseTypeProviderPtrOutput) ToDatabaseTypeProviderPtrOutputWithContext(ctx context.Context) DatabaseTypeProviderPtrOutput {
	return o
}

func (o DatabaseTypeProviderPtrOutput) Elem() DatabaseTypeProviderOutput {
	return o.ApplyT(func(v *DatabaseTypeProvider) DatabaseTypeProvider {
		if v != nil {
			return *v
		}
		var ret DatabaseTypeProvider
		return ret
	}).(DatabaseTypeProviderOutput)
}

func (o DatabaseTypeProviderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseTypeProviderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseTypeProvider) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabaseTypeProviderInput is an input type that accepts DatabaseTypeProviderArgs and DatabaseTypeProviderOutput values.
// You can construct a concrete instance of `DatabaseTypeProviderInput` via:
//
//	DatabaseTypeProviderArgs{...}
type DatabaseTypeProviderInput interface {
	pulumi.Input

	ToDatabaseTypeProviderOutput() DatabaseTypeProviderOutput
	ToDatabaseTypeProviderOutputWithContext(context.Context) DatabaseTypeProviderOutput
}

var databaseTypeProviderPtrType = reflect.TypeOf((**DatabaseTypeProvider)(nil)).Elem()

type DatabaseTypeProviderPtrInput interface {
	pulumi.Input

	ToDatabaseTypeProviderPtrOutput() DatabaseTypeProviderPtrOutput
	ToDatabaseTypeProviderPtrOutputWithContext(context.Context) DatabaseTypeProviderPtrOutput
}

type databaseTypeProviderPtr string

func DatabaseTypeProviderPtr(v string) DatabaseTypeProviderPtrInput {
	return (*databaseTypeProviderPtr)(&v)
}

func (*databaseTypeProviderPtr) ElementType() reflect.Type {
	return databaseTypeProviderPtrType
}

func (in *databaseTypeProviderPtr) ToDatabaseTypeProviderPtrOutput() DatabaseTypeProviderPtrOutput {
	return pulumi.ToOutput(in).(DatabaseTypeProviderPtrOutput)
}

func (in *databaseTypeProviderPtr) ToDatabaseTypeProviderPtrOutputWithContext(ctx context.Context) DatabaseTypeProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseTypeProviderPtrOutput)
}

func (in *databaseTypeProviderPtr) ToOutput(ctx context.Context) pulumix.Output[*DatabaseTypeProvider] {
	return pulumix.Output[*DatabaseTypeProvider]{
		OutputState: in.ToDatabaseTypeProviderPtrOutputWithContext(ctx).OutputState,
	}
}

// Required. Relation between source value and compare value
type DoubleComparisonFilterValueComparison string

const (
	// Value comparison unspecified.
	DoubleComparisonFilterValueComparisonValueComparisonUnspecified = DoubleComparisonFilterValueComparison("VALUE_COMPARISON_UNSPECIFIED")
	// Value is smaller than the Compare value.
	DoubleComparisonFilterValueComparisonValueComparisonIfValueSmallerThan = DoubleComparisonFilterValueComparison("VALUE_COMPARISON_IF_VALUE_SMALLER_THAN")
	// Value is smaller or equal than the Compare value.
	DoubleComparisonFilterValueComparisonValueComparisonIfValueSmallerEqualThan = DoubleComparisonFilterValueComparison("VALUE_COMPARISON_IF_VALUE_SMALLER_EQUAL_THAN")
	// Value is larger than the Compare value.
	DoubleComparisonFilterValueComparisonValueComparisonIfValueLargerThan = DoubleComparisonFilterValueComparison("VALUE_COMPARISON_IF_VALUE_LARGER_THAN")
	// Value is larger or equal than the Compare value.
	DoubleComparisonFilterValueComparisonValueComparisonIfValueLargerEqualThan = DoubleComparisonFilterValueComparison("VALUE_COMPARISON_IF_VALUE_LARGER_EQUAL_THAN")
)

func (DoubleComparisonFilterValueComparison) ElementType() reflect.Type {
	return reflect.TypeOf((*DoubleComparisonFilterValueComparison)(nil)).Elem()
}

func (e DoubleComparisonFilterValueComparison) ToDoubleComparisonFilterValueComparisonOutput() DoubleComparisonFilterValueComparisonOutput {
	return pulumi.ToOutput(e).(DoubleComparisonFilterValueComparisonOutput)
}

func (e DoubleComparisonFilterValueComparison) ToDoubleComparisonFilterValueComparisonOutputWithContext(ctx context.Context) DoubleComparisonFilterValueComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DoubleComparisonFilterValueComparisonOutput)
}

func (e DoubleComparisonFilterValueComparison) ToDoubleComparisonFilterValueComparisonPtrOutput() DoubleComparisonFilterValueComparisonPtrOutput {
	return e.ToDoubleComparisonFilterValueComparisonPtrOutputWithContext(context.Background())
}

func (e DoubleComparisonFilterValueComparison) ToDoubleComparisonFilterValueComparisonPtrOutputWithContext(ctx context.Context) DoubleComparisonFilterValueComparisonPtrOutput {
	return DoubleComparisonFilterValueComparison(e).ToDoubleComparisonFilterValueComparisonOutputWithContext(ctx).ToDoubleComparisonFilterValueComparisonPtrOutputWithContext(ctx)
}

func (e DoubleComparisonFilterValueComparison) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DoubleComparisonFilterValueComparison) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DoubleComparisonFilterValueComparison) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DoubleComparisonFilterValueComparison) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DoubleComparisonFilterValueComparisonOutput struct{ *pulumi.OutputState }

func (DoubleComparisonFilterValueComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DoubleComparisonFilterValueComparison)(nil)).Elem()
}

func (o DoubleComparisonFilterValueComparisonOutput) ToDoubleComparisonFilterValueComparisonOutput() DoubleComparisonFilterValueComparisonOutput {
	return o
}

func (o DoubleComparisonFilterValueComparisonOutput) ToDoubleComparisonFilterValueComparisonOutputWithContext(ctx context.Context) DoubleComparisonFilterValueComparisonOutput {
	return o
}

func (o DoubleComparisonFilterValueComparisonOutput) ToDoubleComparisonFilterValueComparisonPtrOutput() DoubleComparisonFilterValueComparisonPtrOutput {
	return o.ToDoubleComparisonFilterValueComparisonPtrOutputWithContext(context.Background())
}

func (o DoubleComparisonFilterValueComparisonOutput) ToDoubleComparisonFilterValueComparisonPtrOutputWithContext(ctx context.Context) DoubleComparisonFilterValueComparisonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DoubleComparisonFilterValueComparison) *DoubleComparisonFilterValueComparison {
		return &v
	}).(DoubleComparisonFilterValueComparisonPtrOutput)
}

func (o DoubleComparisonFilterValueComparisonOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DoubleComparisonFilterValueComparisonOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DoubleComparisonFilterValueComparison) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DoubleComparisonFilterValueComparisonOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DoubleComparisonFilterValueComparisonOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DoubleComparisonFilterValueComparison) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DoubleComparisonFilterValueComparisonPtrOutput struct{ *pulumi.OutputState }

func (DoubleComparisonFilterValueComparisonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DoubleComparisonFilterValueComparison)(nil)).Elem()
}

func (o DoubleComparisonFilterValueComparisonPtrOutput) ToDoubleComparisonFilterValueComparisonPtrOutput() DoubleComparisonFilterValueComparisonPtrOutput {
	return o
}

func (o DoubleComparisonFilterValueComparisonPtrOutput) ToDoubleComparisonFilterValueComparisonPtrOutputWithContext(ctx context.Context) DoubleComparisonFilterValueComparisonPtrOutput {
	return o
}

func (o DoubleComparisonFilterValueComparisonPtrOutput) Elem() DoubleComparisonFilterValueComparisonOutput {
	return o.ApplyT(func(v *DoubleComparisonFilterValueComparison) DoubleComparisonFilterValueComparison {
		if v != nil {
			return *v
		}
		var ret DoubleComparisonFilterValueComparison
		return ret
	}).(DoubleComparisonFilterValueComparisonOutput)
}

func (o DoubleComparisonFilterValueComparisonPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DoubleComparisonFilterValueComparisonPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DoubleComparisonFilterValueComparison) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DoubleComparisonFilterValueComparisonInput is an input type that accepts DoubleComparisonFilterValueComparisonArgs and DoubleComparisonFilterValueComparisonOutput values.
// You can construct a concrete instance of `DoubleComparisonFilterValueComparisonInput` via:
//
//	DoubleComparisonFilterValueComparisonArgs{...}
type DoubleComparisonFilterValueComparisonInput interface {
	pulumi.Input

	ToDoubleComparisonFilterValueComparisonOutput() DoubleComparisonFilterValueComparisonOutput
	ToDoubleComparisonFilterValueComparisonOutputWithContext(context.Context) DoubleComparisonFilterValueComparisonOutput
}

var doubleComparisonFilterValueComparisonPtrType = reflect.TypeOf((**DoubleComparisonFilterValueComparison)(nil)).Elem()

type DoubleComparisonFilterValueComparisonPtrInput interface {
	pulumi.Input

	ToDoubleComparisonFilterValueComparisonPtrOutput() DoubleComparisonFilterValueComparisonPtrOutput
	ToDoubleComparisonFilterValueComparisonPtrOutputWithContext(context.Context) DoubleComparisonFilterValueComparisonPtrOutput
}

type doubleComparisonFilterValueComparisonPtr string

func DoubleComparisonFilterValueComparisonPtr(v string) DoubleComparisonFilterValueComparisonPtrInput {
	return (*doubleComparisonFilterValueComparisonPtr)(&v)
}

func (*doubleComparisonFilterValueComparisonPtr) ElementType() reflect.Type {
	return doubleComparisonFilterValueComparisonPtrType
}

func (in *doubleComparisonFilterValueComparisonPtr) ToDoubleComparisonFilterValueComparisonPtrOutput() DoubleComparisonFilterValueComparisonPtrOutput {
	return pulumi.ToOutput(in).(DoubleComparisonFilterValueComparisonPtrOutput)
}

func (in *doubleComparisonFilterValueComparisonPtr) ToDoubleComparisonFilterValueComparisonPtrOutputWithContext(ctx context.Context) DoubleComparisonFilterValueComparisonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DoubleComparisonFilterValueComparisonPtrOutput)
}

func (in *doubleComparisonFilterValueComparisonPtr) ToOutput(ctx context.Context) pulumix.Output[*DoubleComparisonFilterValueComparison] {
	return pulumix.Output[*DoubleComparisonFilterValueComparison]{
		OutputState: in.ToDoubleComparisonFilterValueComparisonPtrOutputWithContext(ctx).OutputState,
	}
}

// Required. Relation between source value and compare value
type IntComparisonFilterValueComparison string

const (
	// Value comparison unspecified.
	IntComparisonFilterValueComparisonValueComparisonUnspecified = IntComparisonFilterValueComparison("VALUE_COMPARISON_UNSPECIFIED")
	// Value is smaller than the Compare value.
	IntComparisonFilterValueComparisonValueComparisonIfValueSmallerThan = IntComparisonFilterValueComparison("VALUE_COMPARISON_IF_VALUE_SMALLER_THAN")
	// Value is smaller or equal than the Compare value.
	IntComparisonFilterValueComparisonValueComparisonIfValueSmallerEqualThan = IntComparisonFilterValueComparison("VALUE_COMPARISON_IF_VALUE_SMALLER_EQUAL_THAN")
	// Value is larger than the Compare value.
	IntComparisonFilterValueComparisonValueComparisonIfValueLargerThan = IntComparisonFilterValueComparison("VALUE_COMPARISON_IF_VALUE_LARGER_THAN")
	// Value is larger or equal than the Compare value.
	IntComparisonFilterValueComparisonValueComparisonIfValueLargerEqualThan = IntComparisonFilterValueComparison("VALUE_COMPARISON_IF_VALUE_LARGER_EQUAL_THAN")
)

func (IntComparisonFilterValueComparison) ElementType() reflect.Type {
	return reflect.TypeOf((*IntComparisonFilterValueComparison)(nil)).Elem()
}

func (e IntComparisonFilterValueComparison) ToIntComparisonFilterValueComparisonOutput() IntComparisonFilterValueComparisonOutput {
	return pulumi.ToOutput(e).(IntComparisonFilterValueComparisonOutput)
}

func (e IntComparisonFilterValueComparison) ToIntComparisonFilterValueComparisonOutputWithContext(ctx context.Context) IntComparisonFilterValueComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntComparisonFilterValueComparisonOutput)
}

func (e IntComparisonFilterValueComparison) ToIntComparisonFilterValueComparisonPtrOutput() IntComparisonFilterValueComparisonPtrOutput {
	return e.ToIntComparisonFilterValueComparisonPtrOutputWithContext(context.Background())
}

func (e IntComparisonFilterValueComparison) ToIntComparisonFilterValueComparisonPtrOutputWithContext(ctx context.Context) IntComparisonFilterValueComparisonPtrOutput {
	return IntComparisonFilterValueComparison(e).ToIntComparisonFilterValueComparisonOutputWithContext(ctx).ToIntComparisonFilterValueComparisonPtrOutputWithContext(ctx)
}

func (e IntComparisonFilterValueComparison) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntComparisonFilterValueComparison) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntComparisonFilterValueComparison) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntComparisonFilterValueComparison) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntComparisonFilterValueComparisonOutput struct{ *pulumi.OutputState }

func (IntComparisonFilterValueComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntComparisonFilterValueComparison)(nil)).Elem()
}

func (o IntComparisonFilterValueComparisonOutput) ToIntComparisonFilterValueComparisonOutput() IntComparisonFilterValueComparisonOutput {
	return o
}

func (o IntComparisonFilterValueComparisonOutput) ToIntComparisonFilterValueComparisonOutputWithContext(ctx context.Context) IntComparisonFilterValueComparisonOutput {
	return o
}

func (o IntComparisonFilterValueComparisonOutput) ToIntComparisonFilterValueComparisonPtrOutput() IntComparisonFilterValueComparisonPtrOutput {
	return o.ToIntComparisonFilterValueComparisonPtrOutputWithContext(context.Background())
}

func (o IntComparisonFilterValueComparisonOutput) ToIntComparisonFilterValueComparisonPtrOutputWithContext(ctx context.Context) IntComparisonFilterValueComparisonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntComparisonFilterValueComparison) *IntComparisonFilterValueComparison {
		return &v
	}).(IntComparisonFilterValueComparisonPtrOutput)
}

func (o IntComparisonFilterValueComparisonOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntComparisonFilterValueComparisonOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntComparisonFilterValueComparison) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntComparisonFilterValueComparisonOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntComparisonFilterValueComparisonOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntComparisonFilterValueComparison) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntComparisonFilterValueComparisonPtrOutput struct{ *pulumi.OutputState }

func (IntComparisonFilterValueComparisonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntComparisonFilterValueComparison)(nil)).Elem()
}

func (o IntComparisonFilterValueComparisonPtrOutput) ToIntComparisonFilterValueComparisonPtrOutput() IntComparisonFilterValueComparisonPtrOutput {
	return o
}

func (o IntComparisonFilterValueComparisonPtrOutput) ToIntComparisonFilterValueComparisonPtrOutputWithContext(ctx context.Context) IntComparisonFilterValueComparisonPtrOutput {
	return o
}

func (o IntComparisonFilterValueComparisonPtrOutput) Elem() IntComparisonFilterValueComparisonOutput {
	return o.ApplyT(func(v *IntComparisonFilterValueComparison) IntComparisonFilterValueComparison {
		if v != nil {
			return *v
		}
		var ret IntComparisonFilterValueComparison
		return ret
	}).(IntComparisonFilterValueComparisonOutput)
}

func (o IntComparisonFilterValueComparisonPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntComparisonFilterValueComparisonPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntComparisonFilterValueComparison) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntComparisonFilterValueComparisonInput is an input type that accepts IntComparisonFilterValueComparisonArgs and IntComparisonFilterValueComparisonOutput values.
// You can construct a concrete instance of `IntComparisonFilterValueComparisonInput` via:
//
//	IntComparisonFilterValueComparisonArgs{...}
type IntComparisonFilterValueComparisonInput interface {
	pulumi.Input

	ToIntComparisonFilterValueComparisonOutput() IntComparisonFilterValueComparisonOutput
	ToIntComparisonFilterValueComparisonOutputWithContext(context.Context) IntComparisonFilterValueComparisonOutput
}

var intComparisonFilterValueComparisonPtrType = reflect.TypeOf((**IntComparisonFilterValueComparison)(nil)).Elem()

type IntComparisonFilterValueComparisonPtrInput interface {
	pulumi.Input

	ToIntComparisonFilterValueComparisonPtrOutput() IntComparisonFilterValueComparisonPtrOutput
	ToIntComparisonFilterValueComparisonPtrOutputWithContext(context.Context) IntComparisonFilterValueComparisonPtrOutput
}

type intComparisonFilterValueComparisonPtr string

func IntComparisonFilterValueComparisonPtr(v string) IntComparisonFilterValueComparisonPtrInput {
	return (*intComparisonFilterValueComparisonPtr)(&v)
}

func (*intComparisonFilterValueComparisonPtr) ElementType() reflect.Type {
	return intComparisonFilterValueComparisonPtrType
}

func (in *intComparisonFilterValueComparisonPtr) ToIntComparisonFilterValueComparisonPtrOutput() IntComparisonFilterValueComparisonPtrOutput {
	return pulumi.ToOutput(in).(IntComparisonFilterValueComparisonPtrOutput)
}

func (in *intComparisonFilterValueComparisonPtr) ToIntComparisonFilterValueComparisonPtrOutputWithContext(ctx context.Context) IntComparisonFilterValueComparisonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntComparisonFilterValueComparisonPtrOutput)
}

func (in *intComparisonFilterValueComparisonPtr) ToOutput(ctx context.Context) pulumix.Output[*IntComparisonFilterValueComparison] {
	return pulumix.Output[*IntComparisonFilterValueComparison]{
		OutputState: in.ToIntComparisonFilterValueComparisonPtrOutputWithContext(ctx).OutputState,
	}
}

// Required. The rule scope
type MappingRuleRuleScope string

const (
	// Unspecified database entity type.
	MappingRuleRuleScopeDatabaseEntityTypeUnspecified = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_UNSPECIFIED")
	// Schema.
	MappingRuleRuleScopeDatabaseEntityTypeSchema = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_SCHEMA")
	// Table.
	MappingRuleRuleScopeDatabaseEntityTypeTable = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_TABLE")
	// Column.
	MappingRuleRuleScopeDatabaseEntityTypeColumn = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_COLUMN")
	// Constraint.
	MappingRuleRuleScopeDatabaseEntityTypeConstraint = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_CONSTRAINT")
	// Index.
	MappingRuleRuleScopeDatabaseEntityTypeIndex = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_INDEX")
	// Trigger.
	MappingRuleRuleScopeDatabaseEntityTypeTrigger = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_TRIGGER")
	// View.
	MappingRuleRuleScopeDatabaseEntityTypeView = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_VIEW")
	// Sequence.
	MappingRuleRuleScopeDatabaseEntityTypeSequence = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_SEQUENCE")
	// Stored Procedure.
	MappingRuleRuleScopeDatabaseEntityTypeStoredProcedure = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_STORED_PROCEDURE")
	// Function.
	MappingRuleRuleScopeDatabaseEntityTypeFunction = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_FUNCTION")
	// Synonym.
	MappingRuleRuleScopeDatabaseEntityTypeSynonym = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_SYNONYM")
	// Package.
	MappingRuleRuleScopeDatabaseEntityTypeDatabasePackage = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_DATABASE_PACKAGE")
	// UDT.
	MappingRuleRuleScopeDatabaseEntityTypeUdt = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_UDT")
	// Materialized View.
	MappingRuleRuleScopeDatabaseEntityTypeMaterializedView = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW")
	// Database.
	MappingRuleRuleScopeDatabaseEntityTypeDatabase = MappingRuleRuleScope("DATABASE_ENTITY_TYPE_DATABASE")
)

func (MappingRuleRuleScope) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingRuleRuleScope)(nil)).Elem()
}

func (e MappingRuleRuleScope) ToMappingRuleRuleScopeOutput() MappingRuleRuleScopeOutput {
	return pulumi.ToOutput(e).(MappingRuleRuleScopeOutput)
}

func (e MappingRuleRuleScope) ToMappingRuleRuleScopeOutputWithContext(ctx context.Context) MappingRuleRuleScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MappingRuleRuleScopeOutput)
}

func (e MappingRuleRuleScope) ToMappingRuleRuleScopePtrOutput() MappingRuleRuleScopePtrOutput {
	return e.ToMappingRuleRuleScopePtrOutputWithContext(context.Background())
}

func (e MappingRuleRuleScope) ToMappingRuleRuleScopePtrOutputWithContext(ctx context.Context) MappingRuleRuleScopePtrOutput {
	return MappingRuleRuleScope(e).ToMappingRuleRuleScopeOutputWithContext(ctx).ToMappingRuleRuleScopePtrOutputWithContext(ctx)
}

func (e MappingRuleRuleScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MappingRuleRuleScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MappingRuleRuleScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MappingRuleRuleScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MappingRuleRuleScopeOutput struct{ *pulumi.OutputState }

func (MappingRuleRuleScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingRuleRuleScope)(nil)).Elem()
}

func (o MappingRuleRuleScopeOutput) ToMappingRuleRuleScopeOutput() MappingRuleRuleScopeOutput {
	return o
}

func (o MappingRuleRuleScopeOutput) ToMappingRuleRuleScopeOutputWithContext(ctx context.Context) MappingRuleRuleScopeOutput {
	return o
}

func (o MappingRuleRuleScopeOutput) ToMappingRuleRuleScopePtrOutput() MappingRuleRuleScopePtrOutput {
	return o.ToMappingRuleRuleScopePtrOutputWithContext(context.Background())
}

func (o MappingRuleRuleScopeOutput) ToMappingRuleRuleScopePtrOutputWithContext(ctx context.Context) MappingRuleRuleScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MappingRuleRuleScope) *MappingRuleRuleScope {
		return &v
	}).(MappingRuleRuleScopePtrOutput)
}

func (o MappingRuleRuleScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MappingRuleRuleScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MappingRuleRuleScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MappingRuleRuleScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MappingRuleRuleScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MappingRuleRuleScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MappingRuleRuleScopePtrOutput struct{ *pulumi.OutputState }

func (MappingRuleRuleScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingRuleRuleScope)(nil)).Elem()
}

func (o MappingRuleRuleScopePtrOutput) ToMappingRuleRuleScopePtrOutput() MappingRuleRuleScopePtrOutput {
	return o
}

func (o MappingRuleRuleScopePtrOutput) ToMappingRuleRuleScopePtrOutputWithContext(ctx context.Context) MappingRuleRuleScopePtrOutput {
	return o
}

func (o MappingRuleRuleScopePtrOutput) Elem() MappingRuleRuleScopeOutput {
	return o.ApplyT(func(v *MappingRuleRuleScope) MappingRuleRuleScope {
		if v != nil {
			return *v
		}
		var ret MappingRuleRuleScope
		return ret
	}).(MappingRuleRuleScopeOutput)
}

func (o MappingRuleRuleScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MappingRuleRuleScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MappingRuleRuleScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MappingRuleRuleScopeInput is an input type that accepts MappingRuleRuleScopeArgs and MappingRuleRuleScopeOutput values.
// You can construct a concrete instance of `MappingRuleRuleScopeInput` via:
//
//	MappingRuleRuleScopeArgs{...}
type MappingRuleRuleScopeInput interface {
	pulumi.Input

	ToMappingRuleRuleScopeOutput() MappingRuleRuleScopeOutput
	ToMappingRuleRuleScopeOutputWithContext(context.Context) MappingRuleRuleScopeOutput
}

var mappingRuleRuleScopePtrType = reflect.TypeOf((**MappingRuleRuleScope)(nil)).Elem()

type MappingRuleRuleScopePtrInput interface {
	pulumi.Input

	ToMappingRuleRuleScopePtrOutput() MappingRuleRuleScopePtrOutput
	ToMappingRuleRuleScopePtrOutputWithContext(context.Context) MappingRuleRuleScopePtrOutput
}

type mappingRuleRuleScopePtr string

func MappingRuleRuleScopePtr(v string) MappingRuleRuleScopePtrInput {
	return (*mappingRuleRuleScopePtr)(&v)
}

func (*mappingRuleRuleScopePtr) ElementType() reflect.Type {
	return mappingRuleRuleScopePtrType
}

func (in *mappingRuleRuleScopePtr) ToMappingRuleRuleScopePtrOutput() MappingRuleRuleScopePtrOutput {
	return pulumi.ToOutput(in).(MappingRuleRuleScopePtrOutput)
}

func (in *mappingRuleRuleScopePtr) ToMappingRuleRuleScopePtrOutputWithContext(ctx context.Context) MappingRuleRuleScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MappingRuleRuleScopePtrOutput)
}

func (in *mappingRuleRuleScopePtr) ToOutput(ctx context.Context) pulumix.Output[*MappingRuleRuleScope] {
	return pulumix.Output[*MappingRuleRuleScope]{
		OutputState: in.ToMappingRuleRuleScopePtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. The mapping rule state
type MappingRuleStateEnum string

const (
	// The state of the mapping rule is unknown.
	MappingRuleStateEnumStateUnspecified = MappingRuleStateEnum("STATE_UNSPECIFIED")
	// The rule is enabled.
	MappingRuleStateEnumEnabled = MappingRuleStateEnum("ENABLED")
	// The rule is disabled.
	MappingRuleStateEnumDisabled = MappingRuleStateEnum("DISABLED")
	// The rule is logically deleted.
	MappingRuleStateEnumDeleted = MappingRuleStateEnum("DELETED")
)

func (MappingRuleStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingRuleStateEnum)(nil)).Elem()
}

func (e MappingRuleStateEnum) ToMappingRuleStateEnumOutput() MappingRuleStateEnumOutput {
	return pulumi.ToOutput(e).(MappingRuleStateEnumOutput)
}

func (e MappingRuleStateEnum) ToMappingRuleStateEnumOutputWithContext(ctx context.Context) MappingRuleStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MappingRuleStateEnumOutput)
}

func (e MappingRuleStateEnum) ToMappingRuleStateEnumPtrOutput() MappingRuleStateEnumPtrOutput {
	return e.ToMappingRuleStateEnumPtrOutputWithContext(context.Background())
}

func (e MappingRuleStateEnum) ToMappingRuleStateEnumPtrOutputWithContext(ctx context.Context) MappingRuleStateEnumPtrOutput {
	return MappingRuleStateEnum(e).ToMappingRuleStateEnumOutputWithContext(ctx).ToMappingRuleStateEnumPtrOutputWithContext(ctx)
}

func (e MappingRuleStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MappingRuleStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MappingRuleStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MappingRuleStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MappingRuleStateEnumOutput struct{ *pulumi.OutputState }

func (MappingRuleStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingRuleStateEnum)(nil)).Elem()
}

func (o MappingRuleStateEnumOutput) ToMappingRuleStateEnumOutput() MappingRuleStateEnumOutput {
	return o
}

func (o MappingRuleStateEnumOutput) ToMappingRuleStateEnumOutputWithContext(ctx context.Context) MappingRuleStateEnumOutput {
	return o
}

func (o MappingRuleStateEnumOutput) ToMappingRuleStateEnumPtrOutput() MappingRuleStateEnumPtrOutput {
	return o.ToMappingRuleStateEnumPtrOutputWithContext(context.Background())
}

func (o MappingRuleStateEnumOutput) ToMappingRuleStateEnumPtrOutputWithContext(ctx context.Context) MappingRuleStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MappingRuleStateEnum) *MappingRuleStateEnum {
		return &v
	}).(MappingRuleStateEnumPtrOutput)
}

func (o MappingRuleStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MappingRuleStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MappingRuleStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MappingRuleStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MappingRuleStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MappingRuleStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MappingRuleStateEnumPtrOutput struct{ *pulumi.OutputState }

func (MappingRuleStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingRuleStateEnum)(nil)).Elem()
}

func (o MappingRuleStateEnumPtrOutput) ToMappingRuleStateEnumPtrOutput() MappingRuleStateEnumPtrOutput {
	return o
}

func (o MappingRuleStateEnumPtrOutput) ToMappingRuleStateEnumPtrOutputWithContext(ctx context.Context) MappingRuleStateEnumPtrOutput {
	return o
}

func (o MappingRuleStateEnumPtrOutput) Elem() MappingRuleStateEnumOutput {
	return o.ApplyT(func(v *MappingRuleStateEnum) MappingRuleStateEnum {
		if v != nil {
			return *v
		}
		var ret MappingRuleStateEnum
		return ret
	}).(MappingRuleStateEnumOutput)
}

func (o MappingRuleStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MappingRuleStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MappingRuleStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MappingRuleStateEnumInput is an input type that accepts MappingRuleStateEnumArgs and MappingRuleStateEnumOutput values.
// You can construct a concrete instance of `MappingRuleStateEnumInput` via:
//
//	MappingRuleStateEnumArgs{...}
type MappingRuleStateEnumInput interface {
	pulumi.Input

	ToMappingRuleStateEnumOutput() MappingRuleStateEnumOutput
	ToMappingRuleStateEnumOutputWithContext(context.Context) MappingRuleStateEnumOutput
}

var mappingRuleStateEnumPtrType = reflect.TypeOf((**MappingRuleStateEnum)(nil)).Elem()

type MappingRuleStateEnumPtrInput interface {
	pulumi.Input

	ToMappingRuleStateEnumPtrOutput() MappingRuleStateEnumPtrOutput
	ToMappingRuleStateEnumPtrOutputWithContext(context.Context) MappingRuleStateEnumPtrOutput
}

type mappingRuleStateEnumPtr string

func MappingRuleStateEnumPtr(v string) MappingRuleStateEnumPtrInput {
	return (*mappingRuleStateEnumPtr)(&v)
}

func (*mappingRuleStateEnumPtr) ElementType() reflect.Type {
	return mappingRuleStateEnumPtrType
}

func (in *mappingRuleStateEnumPtr) ToMappingRuleStateEnumPtrOutput() MappingRuleStateEnumPtrOutput {
	return pulumi.ToOutput(in).(MappingRuleStateEnumPtrOutput)
}

func (in *mappingRuleStateEnumPtr) ToMappingRuleStateEnumPtrOutputWithContext(ctx context.Context) MappingRuleStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MappingRuleStateEnumPtrOutput)
}

func (in *mappingRuleStateEnumPtr) ToOutput(ctx context.Context) pulumix.Output[*MappingRuleStateEnum] {
	return pulumix.Output[*MappingRuleStateEnum]{
		OutputState: in.ToMappingRuleStateEnumPtrOutputWithContext(ctx).OutputState,
	}
}

// The current migration job state.
type MigrationJobStateEnum string

const (
	// The state of the migration job is unknown.
	MigrationJobStateEnumStateUnspecified = MigrationJobStateEnum("STATE_UNSPECIFIED")
	// The migration job is down for maintenance.
	MigrationJobStateEnumMaintenance = MigrationJobStateEnum("MAINTENANCE")
	// The migration job is in draft mode and no resources are created.
	MigrationJobStateEnumDraft = MigrationJobStateEnum("DRAFT")
	// The migration job is being created.
	MigrationJobStateEnumCreating = MigrationJobStateEnum("CREATING")
	// The migration job is created and not started.
	MigrationJobStateEnumNotStarted = MigrationJobStateEnum("NOT_STARTED")
	// The migration job is running.
	MigrationJobStateEnumRunning = MigrationJobStateEnum("RUNNING")
	// The migration job failed.
	MigrationJobStateEnumFailed = MigrationJobStateEnum("FAILED")
	// The migration job has been completed.
	MigrationJobStateEnumCompleted = MigrationJobStateEnum("COMPLETED")
	// The migration job is being deleted.
	MigrationJobStateEnumDeleting = MigrationJobStateEnum("DELETING")
	// The migration job is being stopped.
	MigrationJobStateEnumStopping = MigrationJobStateEnum("STOPPING")
	// The migration job is currently stopped.
	MigrationJobStateEnumStopped = MigrationJobStateEnum("STOPPED")
	// The migration job has been deleted.
	MigrationJobStateEnumDeleted = MigrationJobStateEnum("DELETED")
	// The migration job is being updated.
	MigrationJobStateEnumUpdating = MigrationJobStateEnum("UPDATING")
	// The migration job is starting.
	MigrationJobStateEnumStarting = MigrationJobStateEnum("STARTING")
	// The migration job is restarting.
	MigrationJobStateEnumRestarting = MigrationJobStateEnum("RESTARTING")
	// The migration job is resuming.
	MigrationJobStateEnumResuming = MigrationJobStateEnum("RESUMING")
)

func (MigrationJobStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationJobStateEnum)(nil)).Elem()
}

func (e MigrationJobStateEnum) ToMigrationJobStateEnumOutput() MigrationJobStateEnumOutput {
	return pulumi.ToOutput(e).(MigrationJobStateEnumOutput)
}

func (e MigrationJobStateEnum) ToMigrationJobStateEnumOutputWithContext(ctx context.Context) MigrationJobStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MigrationJobStateEnumOutput)
}

func (e MigrationJobStateEnum) ToMigrationJobStateEnumPtrOutput() MigrationJobStateEnumPtrOutput {
	return e.ToMigrationJobStateEnumPtrOutputWithContext(context.Background())
}

func (e MigrationJobStateEnum) ToMigrationJobStateEnumPtrOutputWithContext(ctx context.Context) MigrationJobStateEnumPtrOutput {
	return MigrationJobStateEnum(e).ToMigrationJobStateEnumOutputWithContext(ctx).ToMigrationJobStateEnumPtrOutputWithContext(ctx)
}

func (e MigrationJobStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MigrationJobStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MigrationJobStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MigrationJobStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MigrationJobStateEnumOutput struct{ *pulumi.OutputState }

func (MigrationJobStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationJobStateEnum)(nil)).Elem()
}

func (o MigrationJobStateEnumOutput) ToMigrationJobStateEnumOutput() MigrationJobStateEnumOutput {
	return o
}

func (o MigrationJobStateEnumOutput) ToMigrationJobStateEnumOutputWithContext(ctx context.Context) MigrationJobStateEnumOutput {
	return o
}

func (o MigrationJobStateEnumOutput) ToMigrationJobStateEnumPtrOutput() MigrationJobStateEnumPtrOutput {
	return o.ToMigrationJobStateEnumPtrOutputWithContext(context.Background())
}

func (o MigrationJobStateEnumOutput) ToMigrationJobStateEnumPtrOutputWithContext(ctx context.Context) MigrationJobStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrationJobStateEnum) *MigrationJobStateEnum {
		return &v
	}).(MigrationJobStateEnumPtrOutput)
}

func (o MigrationJobStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MigrationJobStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MigrationJobStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MigrationJobStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MigrationJobStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MigrationJobStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MigrationJobStateEnumPtrOutput struct{ *pulumi.OutputState }

func (MigrationJobStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationJobStateEnum)(nil)).Elem()
}

func (o MigrationJobStateEnumPtrOutput) ToMigrationJobStateEnumPtrOutput() MigrationJobStateEnumPtrOutput {
	return o
}

func (o MigrationJobStateEnumPtrOutput) ToMigrationJobStateEnumPtrOutputWithContext(ctx context.Context) MigrationJobStateEnumPtrOutput {
	return o
}

func (o MigrationJobStateEnumPtrOutput) Elem() MigrationJobStateEnumOutput {
	return o.ApplyT(func(v *MigrationJobStateEnum) MigrationJobStateEnum {
		if v != nil {
			return *v
		}
		var ret MigrationJobStateEnum
		return ret
	}).(MigrationJobStateEnumOutput)
}

func (o MigrationJobStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MigrationJobStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MigrationJobStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MigrationJobStateEnumInput is an input type that accepts MigrationJobStateEnumArgs and MigrationJobStateEnumOutput values.
// You can construct a concrete instance of `MigrationJobStateEnumInput` via:
//
//	MigrationJobStateEnumArgs{...}
type MigrationJobStateEnumInput interface {
	pulumi.Input

	ToMigrationJobStateEnumOutput() MigrationJobStateEnumOutput
	ToMigrationJobStateEnumOutputWithContext(context.Context) MigrationJobStateEnumOutput
}

var migrationJobStateEnumPtrType = reflect.TypeOf((**MigrationJobStateEnum)(nil)).Elem()

type MigrationJobStateEnumPtrInput interface {
	pulumi.Input

	ToMigrationJobStateEnumPtrOutput() MigrationJobStateEnumPtrOutput
	ToMigrationJobStateEnumPtrOutputWithContext(context.Context) MigrationJobStateEnumPtrOutput
}

type migrationJobStateEnumPtr string

func MigrationJobStateEnumPtr(v string) MigrationJobStateEnumPtrInput {
	return (*migrationJobStateEnumPtr)(&v)
}

func (*migrationJobStateEnumPtr) ElementType() reflect.Type {
	return migrationJobStateEnumPtrType
}

func (in *migrationJobStateEnumPtr) ToMigrationJobStateEnumPtrOutput() MigrationJobStateEnumPtrOutput {
	return pulumi.ToOutput(in).(MigrationJobStateEnumPtrOutput)
}

func (in *migrationJobStateEnumPtr) ToMigrationJobStateEnumPtrOutputWithContext(ctx context.Context) MigrationJobStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MigrationJobStateEnumPtrOutput)
}

func (in *migrationJobStateEnumPtr) ToOutput(ctx context.Context) pulumix.Output[*MigrationJobStateEnum] {
	return pulumix.Output[*MigrationJobStateEnum]{
		OutputState: in.ToMigrationJobStateEnumPtrOutputWithContext(ctx).OutputState,
	}
}

// Required. The migration job type.
type MigrationJobType string

const (
	// The type of the migration job is unknown.
	MigrationJobTypeTypeUnspecified = MigrationJobType("TYPE_UNSPECIFIED")
	// The migration job is a one time migration.
	MigrationJobTypeOneTime = MigrationJobType("ONE_TIME")
	// The migration job is a continuous migration.
	MigrationJobTypeContinuous = MigrationJobType("CONTINUOUS")
)

func (MigrationJobType) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationJobType)(nil)).Elem()
}

func (e MigrationJobType) ToMigrationJobTypeOutput() MigrationJobTypeOutput {
	return pulumi.ToOutput(e).(MigrationJobTypeOutput)
}

func (e MigrationJobType) ToMigrationJobTypeOutputWithContext(ctx context.Context) MigrationJobTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MigrationJobTypeOutput)
}

func (e MigrationJobType) ToMigrationJobTypePtrOutput() MigrationJobTypePtrOutput {
	return e.ToMigrationJobTypePtrOutputWithContext(context.Background())
}

func (e MigrationJobType) ToMigrationJobTypePtrOutputWithContext(ctx context.Context) MigrationJobTypePtrOutput {
	return MigrationJobType(e).ToMigrationJobTypeOutputWithContext(ctx).ToMigrationJobTypePtrOutputWithContext(ctx)
}

func (e MigrationJobType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MigrationJobType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MigrationJobType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MigrationJobType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MigrationJobTypeOutput struct{ *pulumi.OutputState }

func (MigrationJobTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationJobType)(nil)).Elem()
}

func (o MigrationJobTypeOutput) ToMigrationJobTypeOutput() MigrationJobTypeOutput {
	return o
}

func (o MigrationJobTypeOutput) ToMigrationJobTypeOutputWithContext(ctx context.Context) MigrationJobTypeOutput {
	return o
}

func (o MigrationJobTypeOutput) ToMigrationJobTypePtrOutput() MigrationJobTypePtrOutput {
	return o.ToMigrationJobTypePtrOutputWithContext(context.Background())
}

func (o MigrationJobTypeOutput) ToMigrationJobTypePtrOutputWithContext(ctx context.Context) MigrationJobTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrationJobType) *MigrationJobType {
		return &v
	}).(MigrationJobTypePtrOutput)
}

func (o MigrationJobTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MigrationJobTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MigrationJobType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MigrationJobTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MigrationJobTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MigrationJobType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MigrationJobTypePtrOutput struct{ *pulumi.OutputState }

func (MigrationJobTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationJobType)(nil)).Elem()
}

func (o MigrationJobTypePtrOutput) ToMigrationJobTypePtrOutput() MigrationJobTypePtrOutput {
	return o
}

func (o MigrationJobTypePtrOutput) ToMigrationJobTypePtrOutputWithContext(ctx context.Context) MigrationJobTypePtrOutput {
	return o
}

func (o MigrationJobTypePtrOutput) Elem() MigrationJobTypeOutput {
	return o.ApplyT(func(v *MigrationJobType) MigrationJobType {
		if v != nil {
			return *v
		}
		var ret MigrationJobType
		return ret
	}).(MigrationJobTypeOutput)
}

func (o MigrationJobTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MigrationJobTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MigrationJobType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MigrationJobTypeInput is an input type that accepts MigrationJobTypeArgs and MigrationJobTypeOutput values.
// You can construct a concrete instance of `MigrationJobTypeInput` via:
//
//	MigrationJobTypeArgs{...}
type MigrationJobTypeInput interface {
	pulumi.Input

	ToMigrationJobTypeOutput() MigrationJobTypeOutput
	ToMigrationJobTypeOutputWithContext(context.Context) MigrationJobTypeOutput
}

var migrationJobTypePtrType = reflect.TypeOf((**MigrationJobType)(nil)).Elem()

type MigrationJobTypePtrInput interface {
	pulumi.Input

	ToMigrationJobTypePtrOutput() MigrationJobTypePtrOutput
	ToMigrationJobTypePtrOutputWithContext(context.Context) MigrationJobTypePtrOutput
}

type migrationJobTypePtr string

func MigrationJobTypePtr(v string) MigrationJobTypePtrInput {
	return (*migrationJobTypePtr)(&v)
}

func (*migrationJobTypePtr) ElementType() reflect.Type {
	return migrationJobTypePtrType
}

func (in *migrationJobTypePtr) ToMigrationJobTypePtrOutput() MigrationJobTypePtrOutput {
	return pulumi.ToOutput(in).(MigrationJobTypePtrOutput)
}

func (in *migrationJobTypePtr) ToMigrationJobTypePtrOutputWithContext(ctx context.Context) MigrationJobTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MigrationJobTypePtrOutput)
}

func (in *migrationJobTypePtr) ToOutput(ctx context.Context) pulumix.Output[*MigrationJobType] {
	return pulumix.Output[*MigrationJobType]{
		OutputState: in.ToMigrationJobTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. Additional transformation that can be done on the source entity name before it is being used by the new_name_pattern, for example lower case. If no transformation is desired, use NO_TRANSFORMATION
type MultiEntityRenameSourceNameTransformation string

const (
	// Entity name transformation unspecified.
	MultiEntityRenameSourceNameTransformationEntityNameTransformationUnspecified = MultiEntityRenameSourceNameTransformation("ENTITY_NAME_TRANSFORMATION_UNSPECIFIED")
	// No transformation.
	MultiEntityRenameSourceNameTransformationEntityNameTransformationNoTransformation = MultiEntityRenameSourceNameTransformation("ENTITY_NAME_TRANSFORMATION_NO_TRANSFORMATION")
	// Transform to lower case.
	MultiEntityRenameSourceNameTransformationEntityNameTransformationLowerCase = MultiEntityRenameSourceNameTransformation("ENTITY_NAME_TRANSFORMATION_LOWER_CASE")
	// Transform to upper case.
	MultiEntityRenameSourceNameTransformationEntityNameTransformationUpperCase = MultiEntityRenameSourceNameTransformation("ENTITY_NAME_TRANSFORMATION_UPPER_CASE")
	// Transform to capitalized case.
	MultiEntityRenameSourceNameTransformationEntityNameTransformationCapitalizedCase = MultiEntityRenameSourceNameTransformation("ENTITY_NAME_TRANSFORMATION_CAPITALIZED_CASE")
)

func (MultiEntityRenameSourceNameTransformation) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiEntityRenameSourceNameTransformation)(nil)).Elem()
}

func (e MultiEntityRenameSourceNameTransformation) ToMultiEntityRenameSourceNameTransformationOutput() MultiEntityRenameSourceNameTransformationOutput {
	return pulumi.ToOutput(e).(MultiEntityRenameSourceNameTransformationOutput)
}

func (e MultiEntityRenameSourceNameTransformation) ToMultiEntityRenameSourceNameTransformationOutputWithContext(ctx context.Context) MultiEntityRenameSourceNameTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MultiEntityRenameSourceNameTransformationOutput)
}

func (e MultiEntityRenameSourceNameTransformation) ToMultiEntityRenameSourceNameTransformationPtrOutput() MultiEntityRenameSourceNameTransformationPtrOutput {
	return e.ToMultiEntityRenameSourceNameTransformationPtrOutputWithContext(context.Background())
}

func (e MultiEntityRenameSourceNameTransformation) ToMultiEntityRenameSourceNameTransformationPtrOutputWithContext(ctx context.Context) MultiEntityRenameSourceNameTransformationPtrOutput {
	return MultiEntityRenameSourceNameTransformation(e).ToMultiEntityRenameSourceNameTransformationOutputWithContext(ctx).ToMultiEntityRenameSourceNameTransformationPtrOutputWithContext(ctx)
}

func (e MultiEntityRenameSourceNameTransformation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MultiEntityRenameSourceNameTransformation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MultiEntityRenameSourceNameTransformation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MultiEntityRenameSourceNameTransformation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MultiEntityRenameSourceNameTransformationOutput struct{ *pulumi.OutputState }

func (MultiEntityRenameSourceNameTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiEntityRenameSourceNameTransformation)(nil)).Elem()
}

func (o MultiEntityRenameSourceNameTransformationOutput) ToMultiEntityRenameSourceNameTransformationOutput() MultiEntityRenameSourceNameTransformationOutput {
	return o
}

func (o MultiEntityRenameSourceNameTransformationOutput) ToMultiEntityRenameSourceNameTransformationOutputWithContext(ctx context.Context) MultiEntityRenameSourceNameTransformationOutput {
	return o
}

func (o MultiEntityRenameSourceNameTransformationOutput) ToMultiEntityRenameSourceNameTransformationPtrOutput() MultiEntityRenameSourceNameTransformationPtrOutput {
	return o.ToMultiEntityRenameSourceNameTransformationPtrOutputWithContext(context.Background())
}

func (o MultiEntityRenameSourceNameTransformationOutput) ToMultiEntityRenameSourceNameTransformationPtrOutputWithContext(ctx context.Context) MultiEntityRenameSourceNameTransformationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiEntityRenameSourceNameTransformation) *MultiEntityRenameSourceNameTransformation {
		return &v
	}).(MultiEntityRenameSourceNameTransformationPtrOutput)
}

func (o MultiEntityRenameSourceNameTransformationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MultiEntityRenameSourceNameTransformationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MultiEntityRenameSourceNameTransformation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MultiEntityRenameSourceNameTransformationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MultiEntityRenameSourceNameTransformationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MultiEntityRenameSourceNameTransformation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MultiEntityRenameSourceNameTransformationPtrOutput struct{ *pulumi.OutputState }

func (MultiEntityRenameSourceNameTransformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiEntityRenameSourceNameTransformation)(nil)).Elem()
}

func (o MultiEntityRenameSourceNameTransformationPtrOutput) ToMultiEntityRenameSourceNameTransformationPtrOutput() MultiEntityRenameSourceNameTransformationPtrOutput {
	return o
}

func (o MultiEntityRenameSourceNameTransformationPtrOutput) ToMultiEntityRenameSourceNameTransformationPtrOutputWithContext(ctx context.Context) MultiEntityRenameSourceNameTransformationPtrOutput {
	return o
}

func (o MultiEntityRenameSourceNameTransformationPtrOutput) Elem() MultiEntityRenameSourceNameTransformationOutput {
	return o.ApplyT(func(v *MultiEntityRenameSourceNameTransformation) MultiEntityRenameSourceNameTransformation {
		if v != nil {
			return *v
		}
		var ret MultiEntityRenameSourceNameTransformation
		return ret
	}).(MultiEntityRenameSourceNameTransformationOutput)
}

func (o MultiEntityRenameSourceNameTransformationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MultiEntityRenameSourceNameTransformationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MultiEntityRenameSourceNameTransformation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MultiEntityRenameSourceNameTransformationInput is an input type that accepts MultiEntityRenameSourceNameTransformationArgs and MultiEntityRenameSourceNameTransformationOutput values.
// You can construct a concrete instance of `MultiEntityRenameSourceNameTransformationInput` via:
//
//	MultiEntityRenameSourceNameTransformationArgs{...}
type MultiEntityRenameSourceNameTransformationInput interface {
	pulumi.Input

	ToMultiEntityRenameSourceNameTransformationOutput() MultiEntityRenameSourceNameTransformationOutput
	ToMultiEntityRenameSourceNameTransformationOutputWithContext(context.Context) MultiEntityRenameSourceNameTransformationOutput
}

var multiEntityRenameSourceNameTransformationPtrType = reflect.TypeOf((**MultiEntityRenameSourceNameTransformation)(nil)).Elem()

type MultiEntityRenameSourceNameTransformationPtrInput interface {
	pulumi.Input

	ToMultiEntityRenameSourceNameTransformationPtrOutput() MultiEntityRenameSourceNameTransformationPtrOutput
	ToMultiEntityRenameSourceNameTransformationPtrOutputWithContext(context.Context) MultiEntityRenameSourceNameTransformationPtrOutput
}

type multiEntityRenameSourceNameTransformationPtr string

func MultiEntityRenameSourceNameTransformationPtr(v string) MultiEntityRenameSourceNameTransformationPtrInput {
	return (*multiEntityRenameSourceNameTransformationPtr)(&v)
}

func (*multiEntityRenameSourceNameTransformationPtr) ElementType() reflect.Type {
	return multiEntityRenameSourceNameTransformationPtrType
}

func (in *multiEntityRenameSourceNameTransformationPtr) ToMultiEntityRenameSourceNameTransformationPtrOutput() MultiEntityRenameSourceNameTransformationPtrOutput {
	return pulumi.ToOutput(in).(MultiEntityRenameSourceNameTransformationPtrOutput)
}

func (in *multiEntityRenameSourceNameTransformationPtr) ToMultiEntityRenameSourceNameTransformationPtrOutputWithContext(ctx context.Context) MultiEntityRenameSourceNameTransformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MultiEntityRenameSourceNameTransformationPtrOutput)
}

func (in *multiEntityRenameSourceNameTransformationPtr) ToOutput(ctx context.Context) pulumix.Output[*MultiEntityRenameSourceNameTransformation] {
	return pulumix.Output[*MultiEntityRenameSourceNameTransformation]{
		OutputState: in.ToMultiEntityRenameSourceNameTransformationPtrOutputWithContext(ctx).OutputState,
	}
}

// Initial dump parallelism level.
type PerformanceConfigDumpParallelLevel string

const (
	// Unknown dump parallel level. Will be defaulted to OPTIMAL.
	PerformanceConfigDumpParallelLevelDumpParallelLevelUnspecified = PerformanceConfigDumpParallelLevel("DUMP_PARALLEL_LEVEL_UNSPECIFIED")
	// Minimal parallel level.
	PerformanceConfigDumpParallelLevelMin = PerformanceConfigDumpParallelLevel("MIN")
	// Optimal parallel level.
	PerformanceConfigDumpParallelLevelOptimal = PerformanceConfigDumpParallelLevel("OPTIMAL")
	// Maximum parallel level.
	PerformanceConfigDumpParallelLevelMax = PerformanceConfigDumpParallelLevel("MAX")
)

func (PerformanceConfigDumpParallelLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*PerformanceConfigDumpParallelLevel)(nil)).Elem()
}

func (e PerformanceConfigDumpParallelLevel) ToPerformanceConfigDumpParallelLevelOutput() PerformanceConfigDumpParallelLevelOutput {
	return pulumi.ToOutput(e).(PerformanceConfigDumpParallelLevelOutput)
}

func (e PerformanceConfigDumpParallelLevel) ToPerformanceConfigDumpParallelLevelOutputWithContext(ctx context.Context) PerformanceConfigDumpParallelLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PerformanceConfigDumpParallelLevelOutput)
}

func (e PerformanceConfigDumpParallelLevel) ToPerformanceConfigDumpParallelLevelPtrOutput() PerformanceConfigDumpParallelLevelPtrOutput {
	return e.ToPerformanceConfigDumpParallelLevelPtrOutputWithContext(context.Background())
}

func (e PerformanceConfigDumpParallelLevel) ToPerformanceConfigDumpParallelLevelPtrOutputWithContext(ctx context.Context) PerformanceConfigDumpParallelLevelPtrOutput {
	return PerformanceConfigDumpParallelLevel(e).ToPerformanceConfigDumpParallelLevelOutputWithContext(ctx).ToPerformanceConfigDumpParallelLevelPtrOutputWithContext(ctx)
}

func (e PerformanceConfigDumpParallelLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PerformanceConfigDumpParallelLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PerformanceConfigDumpParallelLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PerformanceConfigDumpParallelLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PerformanceConfigDumpParallelLevelOutput struct{ *pulumi.OutputState }

func (PerformanceConfigDumpParallelLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PerformanceConfigDumpParallelLevel)(nil)).Elem()
}

func (o PerformanceConfigDumpParallelLevelOutput) ToPerformanceConfigDumpParallelLevelOutput() PerformanceConfigDumpParallelLevelOutput {
	return o
}

func (o PerformanceConfigDumpParallelLevelOutput) ToPerformanceConfigDumpParallelLevelOutputWithContext(ctx context.Context) PerformanceConfigDumpParallelLevelOutput {
	return o
}

func (o PerformanceConfigDumpParallelLevelOutput) ToPerformanceConfigDumpParallelLevelPtrOutput() PerformanceConfigDumpParallelLevelPtrOutput {
	return o.ToPerformanceConfigDumpParallelLevelPtrOutputWithContext(context.Background())
}

func (o PerformanceConfigDumpParallelLevelOutput) ToPerformanceConfigDumpParallelLevelPtrOutputWithContext(ctx context.Context) PerformanceConfigDumpParallelLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PerformanceConfigDumpParallelLevel) *PerformanceConfigDumpParallelLevel {
		return &v
	}).(PerformanceConfigDumpParallelLevelPtrOutput)
}

func (o PerformanceConfigDumpParallelLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PerformanceConfigDumpParallelLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PerformanceConfigDumpParallelLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PerformanceConfigDumpParallelLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PerformanceConfigDumpParallelLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PerformanceConfigDumpParallelLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PerformanceConfigDumpParallelLevelPtrOutput struct{ *pulumi.OutputState }

func (PerformanceConfigDumpParallelLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerformanceConfigDumpParallelLevel)(nil)).Elem()
}

func (o PerformanceConfigDumpParallelLevelPtrOutput) ToPerformanceConfigDumpParallelLevelPtrOutput() PerformanceConfigDumpParallelLevelPtrOutput {
	return o
}

func (o PerformanceConfigDumpParallelLevelPtrOutput) ToPerformanceConfigDumpParallelLevelPtrOutputWithContext(ctx context.Context) PerformanceConfigDumpParallelLevelPtrOutput {
	return o
}

func (o PerformanceConfigDumpParallelLevelPtrOutput) Elem() PerformanceConfigDumpParallelLevelOutput {
	return o.ApplyT(func(v *PerformanceConfigDumpParallelLevel) PerformanceConfigDumpParallelLevel {
		if v != nil {
			return *v
		}
		var ret PerformanceConfigDumpParallelLevel
		return ret
	}).(PerformanceConfigDumpParallelLevelOutput)
}

func (o PerformanceConfigDumpParallelLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PerformanceConfigDumpParallelLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PerformanceConfigDumpParallelLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PerformanceConfigDumpParallelLevelInput is an input type that accepts PerformanceConfigDumpParallelLevelArgs and PerformanceConfigDumpParallelLevelOutput values.
// You can construct a concrete instance of `PerformanceConfigDumpParallelLevelInput` via:
//
//	PerformanceConfigDumpParallelLevelArgs{...}
type PerformanceConfigDumpParallelLevelInput interface {
	pulumi.Input

	ToPerformanceConfigDumpParallelLevelOutput() PerformanceConfigDumpParallelLevelOutput
	ToPerformanceConfigDumpParallelLevelOutputWithContext(context.Context) PerformanceConfigDumpParallelLevelOutput
}

var performanceConfigDumpParallelLevelPtrType = reflect.TypeOf((**PerformanceConfigDumpParallelLevel)(nil)).Elem()

type PerformanceConfigDumpParallelLevelPtrInput interface {
	pulumi.Input

	ToPerformanceConfigDumpParallelLevelPtrOutput() PerformanceConfigDumpParallelLevelPtrOutput
	ToPerformanceConfigDumpParallelLevelPtrOutputWithContext(context.Context) PerformanceConfigDumpParallelLevelPtrOutput
}

type performanceConfigDumpParallelLevelPtr string

func PerformanceConfigDumpParallelLevelPtr(v string) PerformanceConfigDumpParallelLevelPtrInput {
	return (*performanceConfigDumpParallelLevelPtr)(&v)
}

func (*performanceConfigDumpParallelLevelPtr) ElementType() reflect.Type {
	return performanceConfigDumpParallelLevelPtrType
}

func (in *performanceConfigDumpParallelLevelPtr) ToPerformanceConfigDumpParallelLevelPtrOutput() PerformanceConfigDumpParallelLevelPtrOutput {
	return pulumi.ToOutput(in).(PerformanceConfigDumpParallelLevelPtrOutput)
}

func (in *performanceConfigDumpParallelLevelPtr) ToPerformanceConfigDumpParallelLevelPtrOutputWithContext(ctx context.Context) PerformanceConfigDumpParallelLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PerformanceConfigDumpParallelLevelPtrOutput)
}

func (in *performanceConfigDumpParallelLevelPtr) ToOutput(ctx context.Context) pulumix.Output[*PerformanceConfigDumpParallelLevel] {
	return pulumix.Output[*PerformanceConfigDumpParallelLevel]{
		OutputState: in.ToPerformanceConfigDumpParallelLevelPtrOutputWithContext(ctx).OutputState,
	}
}

// Required. Enum to set the option defining the datatypes numeric filter has to be applied to
type SourceNumericFilterNumericFilterOption string

const (
	// Numeric filter option unspecified
	SourceNumericFilterNumericFilterOptionNumericFilterOptionUnspecified = SourceNumericFilterNumericFilterOption("NUMERIC_FILTER_OPTION_UNSPECIFIED")
	// Numeric filter option that matches all numeric columns.
	SourceNumericFilterNumericFilterOptionNumericFilterOptionAll = SourceNumericFilterNumericFilterOption("NUMERIC_FILTER_OPTION_ALL")
	// Numeric filter option that matches columns having numeric datatypes with specified precision and scale within the limited range of filter.
	SourceNumericFilterNumericFilterOptionNumericFilterOptionLimit = SourceNumericFilterNumericFilterOption("NUMERIC_FILTER_OPTION_LIMIT")
	// Numeric filter option that matches only the numeric columns with no precision and scale specified.
	SourceNumericFilterNumericFilterOptionNumericFilterOptionLimitless = SourceNumericFilterNumericFilterOption("NUMERIC_FILTER_OPTION_LIMITLESS")
)

func (SourceNumericFilterNumericFilterOption) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceNumericFilterNumericFilterOption)(nil)).Elem()
}

func (e SourceNumericFilterNumericFilterOption) ToSourceNumericFilterNumericFilterOptionOutput() SourceNumericFilterNumericFilterOptionOutput {
	return pulumi.ToOutput(e).(SourceNumericFilterNumericFilterOptionOutput)
}

func (e SourceNumericFilterNumericFilterOption) ToSourceNumericFilterNumericFilterOptionOutputWithContext(ctx context.Context) SourceNumericFilterNumericFilterOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SourceNumericFilterNumericFilterOptionOutput)
}

func (e SourceNumericFilterNumericFilterOption) ToSourceNumericFilterNumericFilterOptionPtrOutput() SourceNumericFilterNumericFilterOptionPtrOutput {
	return e.ToSourceNumericFilterNumericFilterOptionPtrOutputWithContext(context.Background())
}

func (e SourceNumericFilterNumericFilterOption) ToSourceNumericFilterNumericFilterOptionPtrOutputWithContext(ctx context.Context) SourceNumericFilterNumericFilterOptionPtrOutput {
	return SourceNumericFilterNumericFilterOption(e).ToSourceNumericFilterNumericFilterOptionOutputWithContext(ctx).ToSourceNumericFilterNumericFilterOptionPtrOutputWithContext(ctx)
}

func (e SourceNumericFilterNumericFilterOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceNumericFilterNumericFilterOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceNumericFilterNumericFilterOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SourceNumericFilterNumericFilterOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SourceNumericFilterNumericFilterOptionOutput struct{ *pulumi.OutputState }

func (SourceNumericFilterNumericFilterOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceNumericFilterNumericFilterOption)(nil)).Elem()
}

func (o SourceNumericFilterNumericFilterOptionOutput) ToSourceNumericFilterNumericFilterOptionOutput() SourceNumericFilterNumericFilterOptionOutput {
	return o
}

func (o SourceNumericFilterNumericFilterOptionOutput) ToSourceNumericFilterNumericFilterOptionOutputWithContext(ctx context.Context) SourceNumericFilterNumericFilterOptionOutput {
	return o
}

func (o SourceNumericFilterNumericFilterOptionOutput) ToSourceNumericFilterNumericFilterOptionPtrOutput() SourceNumericFilterNumericFilterOptionPtrOutput {
	return o.ToSourceNumericFilterNumericFilterOptionPtrOutputWithContext(context.Background())
}

func (o SourceNumericFilterNumericFilterOptionOutput) ToSourceNumericFilterNumericFilterOptionPtrOutputWithContext(ctx context.Context) SourceNumericFilterNumericFilterOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceNumericFilterNumericFilterOption) *SourceNumericFilterNumericFilterOption {
		return &v
	}).(SourceNumericFilterNumericFilterOptionPtrOutput)
}

func (o SourceNumericFilterNumericFilterOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SourceNumericFilterNumericFilterOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceNumericFilterNumericFilterOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SourceNumericFilterNumericFilterOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceNumericFilterNumericFilterOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceNumericFilterNumericFilterOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SourceNumericFilterNumericFilterOptionPtrOutput struct{ *pulumi.OutputState }

func (SourceNumericFilterNumericFilterOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceNumericFilterNumericFilterOption)(nil)).Elem()
}

func (o SourceNumericFilterNumericFilterOptionPtrOutput) ToSourceNumericFilterNumericFilterOptionPtrOutput() SourceNumericFilterNumericFilterOptionPtrOutput {
	return o
}

func (o SourceNumericFilterNumericFilterOptionPtrOutput) ToSourceNumericFilterNumericFilterOptionPtrOutputWithContext(ctx context.Context) SourceNumericFilterNumericFilterOptionPtrOutput {
	return o
}

func (o SourceNumericFilterNumericFilterOptionPtrOutput) Elem() SourceNumericFilterNumericFilterOptionOutput {
	return o.ApplyT(func(v *SourceNumericFilterNumericFilterOption) SourceNumericFilterNumericFilterOption {
		if v != nil {
			return *v
		}
		var ret SourceNumericFilterNumericFilterOption
		return ret
	}).(SourceNumericFilterNumericFilterOptionOutput)
}

func (o SourceNumericFilterNumericFilterOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceNumericFilterNumericFilterOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SourceNumericFilterNumericFilterOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SourceNumericFilterNumericFilterOptionInput is an input type that accepts SourceNumericFilterNumericFilterOptionArgs and SourceNumericFilterNumericFilterOptionOutput values.
// You can construct a concrete instance of `SourceNumericFilterNumericFilterOptionInput` via:
//
//	SourceNumericFilterNumericFilterOptionArgs{...}
type SourceNumericFilterNumericFilterOptionInput interface {
	pulumi.Input

	ToSourceNumericFilterNumericFilterOptionOutput() SourceNumericFilterNumericFilterOptionOutput
	ToSourceNumericFilterNumericFilterOptionOutputWithContext(context.Context) SourceNumericFilterNumericFilterOptionOutput
}

var sourceNumericFilterNumericFilterOptionPtrType = reflect.TypeOf((**SourceNumericFilterNumericFilterOption)(nil)).Elem()

type SourceNumericFilterNumericFilterOptionPtrInput interface {
	pulumi.Input

	ToSourceNumericFilterNumericFilterOptionPtrOutput() SourceNumericFilterNumericFilterOptionPtrOutput
	ToSourceNumericFilterNumericFilterOptionPtrOutputWithContext(context.Context) SourceNumericFilterNumericFilterOptionPtrOutput
}

type sourceNumericFilterNumericFilterOptionPtr string

func SourceNumericFilterNumericFilterOptionPtr(v string) SourceNumericFilterNumericFilterOptionPtrInput {
	return (*sourceNumericFilterNumericFilterOptionPtr)(&v)
}

func (*sourceNumericFilterNumericFilterOptionPtr) ElementType() reflect.Type {
	return sourceNumericFilterNumericFilterOptionPtrType
}

func (in *sourceNumericFilterNumericFilterOptionPtr) ToSourceNumericFilterNumericFilterOptionPtrOutput() SourceNumericFilterNumericFilterOptionPtrOutput {
	return pulumi.ToOutput(in).(SourceNumericFilterNumericFilterOptionPtrOutput)
}

func (in *sourceNumericFilterNumericFilterOptionPtr) ToSourceNumericFilterNumericFilterOptionPtrOutputWithContext(ctx context.Context) SourceNumericFilterNumericFilterOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SourceNumericFilterNumericFilterOptionPtrOutput)
}

func (in *sourceNumericFilterNumericFilterOptionPtr) ToOutput(ctx context.Context) pulumix.Output[*SourceNumericFilterNumericFilterOption] {
	return pulumix.Output[*SourceNumericFilterNumericFilterOption]{
		OutputState: in.ToSourceNumericFilterNumericFilterOptionPtrOutputWithContext(ctx).OutputState,
	}
}

// Required. Indicates whether the filter matches rows with values that are present in the list or those with values not present in it.
type ValueListFilterValuePresentList string

const (
	// Value present in list unspecified
	ValueListFilterValuePresentListValuePresentInListUnspecified = ValueListFilterValuePresentList("VALUE_PRESENT_IN_LIST_UNSPECIFIED")
	// If the source value is in the supplied list at value_list
	ValueListFilterValuePresentListValuePresentInListIfValueList = ValueListFilterValuePresentList("VALUE_PRESENT_IN_LIST_IF_VALUE_LIST")
	// If the source value is not in the supplied list at value_list
	ValueListFilterValuePresentListValuePresentInListIfValueNotList = ValueListFilterValuePresentList("VALUE_PRESENT_IN_LIST_IF_VALUE_NOT_LIST")
)

func (ValueListFilterValuePresentList) ElementType() reflect.Type {
	return reflect.TypeOf((*ValueListFilterValuePresentList)(nil)).Elem()
}

func (e ValueListFilterValuePresentList) ToValueListFilterValuePresentListOutput() ValueListFilterValuePresentListOutput {
	return pulumi.ToOutput(e).(ValueListFilterValuePresentListOutput)
}

func (e ValueListFilterValuePresentList) ToValueListFilterValuePresentListOutputWithContext(ctx context.Context) ValueListFilterValuePresentListOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ValueListFilterValuePresentListOutput)
}

func (e ValueListFilterValuePresentList) ToValueListFilterValuePresentListPtrOutput() ValueListFilterValuePresentListPtrOutput {
	return e.ToValueListFilterValuePresentListPtrOutputWithContext(context.Background())
}

func (e ValueListFilterValuePresentList) ToValueListFilterValuePresentListPtrOutputWithContext(ctx context.Context) ValueListFilterValuePresentListPtrOutput {
	return ValueListFilterValuePresentList(e).ToValueListFilterValuePresentListOutputWithContext(ctx).ToValueListFilterValuePresentListPtrOutputWithContext(ctx)
}

func (e ValueListFilterValuePresentList) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValueListFilterValuePresentList) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValueListFilterValuePresentList) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ValueListFilterValuePresentList) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ValueListFilterValuePresentListOutput struct{ *pulumi.OutputState }

func (ValueListFilterValuePresentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValueListFilterValuePresentList)(nil)).Elem()
}

func (o ValueListFilterValuePresentListOutput) ToValueListFilterValuePresentListOutput() ValueListFilterValuePresentListOutput {
	return o
}

func (o ValueListFilterValuePresentListOutput) ToValueListFilterValuePresentListOutputWithContext(ctx context.Context) ValueListFilterValuePresentListOutput {
	return o
}

func (o ValueListFilterValuePresentListOutput) ToValueListFilterValuePresentListPtrOutput() ValueListFilterValuePresentListPtrOutput {
	return o.ToValueListFilterValuePresentListPtrOutputWithContext(context.Background())
}

func (o ValueListFilterValuePresentListOutput) ToValueListFilterValuePresentListPtrOutputWithContext(ctx context.Context) ValueListFilterValuePresentListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValueListFilterValuePresentList) *ValueListFilterValuePresentList {
		return &v
	}).(ValueListFilterValuePresentListPtrOutput)
}

func (o ValueListFilterValuePresentListOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ValueListFilterValuePresentListOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ValueListFilterValuePresentList) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ValueListFilterValuePresentListOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ValueListFilterValuePresentListOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ValueListFilterValuePresentList) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ValueListFilterValuePresentListPtrOutput struct{ *pulumi.OutputState }

func (ValueListFilterValuePresentListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValueListFilterValuePresentList)(nil)).Elem()
}

func (o ValueListFilterValuePresentListPtrOutput) ToValueListFilterValuePresentListPtrOutput() ValueListFilterValuePresentListPtrOutput {
	return o
}

func (o ValueListFilterValuePresentListPtrOutput) ToValueListFilterValuePresentListPtrOutputWithContext(ctx context.Context) ValueListFilterValuePresentListPtrOutput {
	return o
}

func (o ValueListFilterValuePresentListPtrOutput) Elem() ValueListFilterValuePresentListOutput {
	return o.ApplyT(func(v *ValueListFilterValuePresentList) ValueListFilterValuePresentList {
		if v != nil {
			return *v
		}
		var ret ValueListFilterValuePresentList
		return ret
	}).(ValueListFilterValuePresentListOutput)
}

func (o ValueListFilterValuePresentListPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ValueListFilterValuePresentListPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ValueListFilterValuePresentList) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ValueListFilterValuePresentListInput is an input type that accepts ValueListFilterValuePresentListArgs and ValueListFilterValuePresentListOutput values.
// You can construct a concrete instance of `ValueListFilterValuePresentListInput` via:
//
//	ValueListFilterValuePresentListArgs{...}
type ValueListFilterValuePresentListInput interface {
	pulumi.Input

	ToValueListFilterValuePresentListOutput() ValueListFilterValuePresentListOutput
	ToValueListFilterValuePresentListOutputWithContext(context.Context) ValueListFilterValuePresentListOutput
}

var valueListFilterValuePresentListPtrType = reflect.TypeOf((**ValueListFilterValuePresentList)(nil)).Elem()

type ValueListFilterValuePresentListPtrInput interface {
	pulumi.Input

	ToValueListFilterValuePresentListPtrOutput() ValueListFilterValuePresentListPtrOutput
	ToValueListFilterValuePresentListPtrOutputWithContext(context.Context) ValueListFilterValuePresentListPtrOutput
}

type valueListFilterValuePresentListPtr string

func ValueListFilterValuePresentListPtr(v string) ValueListFilterValuePresentListPtrInput {
	return (*valueListFilterValuePresentListPtr)(&v)
}

func (*valueListFilterValuePresentListPtr) ElementType() reflect.Type {
	return valueListFilterValuePresentListPtrType
}

func (in *valueListFilterValuePresentListPtr) ToValueListFilterValuePresentListPtrOutput() ValueListFilterValuePresentListPtrOutput {
	return pulumi.ToOutput(in).(ValueListFilterValuePresentListPtrOutput)
}

func (in *valueListFilterValuePresentListPtr) ToValueListFilterValuePresentListPtrOutputWithContext(ctx context.Context) ValueListFilterValuePresentListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ValueListFilterValuePresentListPtrOutput)
}

func (in *valueListFilterValuePresentListPtr) ToOutput(ctx context.Context) pulumix.Output[*ValueListFilterValuePresentList] {
	return pulumix.Output[*ValueListFilterValuePresentList]{
		OutputState: in.ToValueListFilterValuePresentListPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlloyDbSettingsDatabaseVersionInput)(nil)).Elem(), AlloyDbSettingsDatabaseVersion("DATABASE_VERSION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AlloyDbSettingsDatabaseVersionPtrInput)(nil)).Elem(), AlloyDbSettingsDatabaseVersion("DATABASE_VERSION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSqlSettingsActivationPolicyInput)(nil)).Elem(), CloudSqlSettingsActivationPolicy("SQL_ACTIVATION_POLICY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSqlSettingsActivationPolicyPtrInput)(nil)).Elem(), CloudSqlSettingsActivationPolicy("SQL_ACTIVATION_POLICY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSqlSettingsAvailabilityTypeInput)(nil)).Elem(), CloudSqlSettingsAvailabilityType("SQL_AVAILABILITY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSqlSettingsAvailabilityTypePtrInput)(nil)).Elem(), CloudSqlSettingsAvailabilityType("SQL_AVAILABILITY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSqlSettingsDataDiskTypeInput)(nil)).Elem(), CloudSqlSettingsDataDiskType("SQL_DATA_DISK_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSqlSettingsDataDiskTypePtrInput)(nil)).Elem(), CloudSqlSettingsDataDiskType("SQL_DATA_DISK_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSqlSettingsDatabaseVersionInput)(nil)).Elem(), CloudSqlSettingsDatabaseVersion("SQL_DATABASE_VERSION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSqlSettingsDatabaseVersionPtrInput)(nil)).Elem(), CloudSqlSettingsDatabaseVersion("SQL_DATABASE_VERSION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSqlSettingsEditionInput)(nil)).Elem(), CloudSqlSettingsEdition("EDITION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSqlSettingsEditionPtrInput)(nil)).Elem(), CloudSqlSettingsEdition("EDITION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileProviderInput)(nil)).Elem(), ConnectionProfileProvider("DATABASE_PROVIDER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileProviderPtrInput)(nil)).Elem(), ConnectionProfileProvider("DATABASE_PROVIDER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileStateEnumInput)(nil)).Elem(), ConnectionProfileStateEnum("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileStateEnumPtrInput)(nil)).Elem(), ConnectionProfileStateEnum("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseEngineInfoEngineInput)(nil)).Elem(), DatabaseEngineInfoEngine("DATABASE_ENGINE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseEngineInfoEnginePtrInput)(nil)).Elem(), DatabaseEngineInfoEngine("DATABASE_ENGINE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseTypeEngineInput)(nil)).Elem(), DatabaseTypeEngine("DATABASE_ENGINE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseTypeEnginePtrInput)(nil)).Elem(), DatabaseTypeEngine("DATABASE_ENGINE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseTypeProviderInput)(nil)).Elem(), DatabaseTypeProvider("DATABASE_PROVIDER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseTypeProviderPtrInput)(nil)).Elem(), DatabaseTypeProvider("DATABASE_PROVIDER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DoubleComparisonFilterValueComparisonInput)(nil)).Elem(), DoubleComparisonFilterValueComparison("VALUE_COMPARISON_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DoubleComparisonFilterValueComparisonPtrInput)(nil)).Elem(), DoubleComparisonFilterValueComparison("VALUE_COMPARISON_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*IntComparisonFilterValueComparisonInput)(nil)).Elem(), IntComparisonFilterValueComparison("VALUE_COMPARISON_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*IntComparisonFilterValueComparisonPtrInput)(nil)).Elem(), IntComparisonFilterValueComparison("VALUE_COMPARISON_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MappingRuleRuleScopeInput)(nil)).Elem(), MappingRuleRuleScope("DATABASE_ENTITY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MappingRuleRuleScopePtrInput)(nil)).Elem(), MappingRuleRuleScope("DATABASE_ENTITY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MappingRuleStateEnumInput)(nil)).Elem(), MappingRuleStateEnum("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MappingRuleStateEnumPtrInput)(nil)).Elem(), MappingRuleStateEnum("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationJobStateEnumInput)(nil)).Elem(), MigrationJobStateEnum("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationJobStateEnumPtrInput)(nil)).Elem(), MigrationJobStateEnum("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationJobTypeInput)(nil)).Elem(), MigrationJobType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationJobTypePtrInput)(nil)).Elem(), MigrationJobType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MultiEntityRenameSourceNameTransformationInput)(nil)).Elem(), MultiEntityRenameSourceNameTransformation("ENTITY_NAME_TRANSFORMATION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MultiEntityRenameSourceNameTransformationPtrInput)(nil)).Elem(), MultiEntityRenameSourceNameTransformation("ENTITY_NAME_TRANSFORMATION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PerformanceConfigDumpParallelLevelInput)(nil)).Elem(), PerformanceConfigDumpParallelLevel("DUMP_PARALLEL_LEVEL_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PerformanceConfigDumpParallelLevelPtrInput)(nil)).Elem(), PerformanceConfigDumpParallelLevel("DUMP_PARALLEL_LEVEL_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SourceNumericFilterNumericFilterOptionInput)(nil)).Elem(), SourceNumericFilterNumericFilterOption("NUMERIC_FILTER_OPTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SourceNumericFilterNumericFilterOptionPtrInput)(nil)).Elem(), SourceNumericFilterNumericFilterOption("NUMERIC_FILTER_OPTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ValueListFilterValuePresentListInput)(nil)).Elem(), ValueListFilterValuePresentList("VALUE_PRESENT_IN_LIST_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ValueListFilterValuePresentListPtrInput)(nil)).Elem(), ValueListFilterValuePresentList("VALUE_PRESENT_IN_LIST_UNSPECIFIED"))
	pulumi.RegisterOutputType(AlloyDbSettingsDatabaseVersionOutput{})
	pulumi.RegisterOutputType(AlloyDbSettingsDatabaseVersionPtrOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(CloudSqlSettingsActivationPolicyOutput{})
	pulumi.RegisterOutputType(CloudSqlSettingsActivationPolicyPtrOutput{})
	pulumi.RegisterOutputType(CloudSqlSettingsAvailabilityTypeOutput{})
	pulumi.RegisterOutputType(CloudSqlSettingsAvailabilityTypePtrOutput{})
	pulumi.RegisterOutputType(CloudSqlSettingsDataDiskTypeOutput{})
	pulumi.RegisterOutputType(CloudSqlSettingsDataDiskTypePtrOutput{})
	pulumi.RegisterOutputType(CloudSqlSettingsDatabaseVersionOutput{})
	pulumi.RegisterOutputType(CloudSqlSettingsDatabaseVersionPtrOutput{})
	pulumi.RegisterOutputType(CloudSqlSettingsEditionOutput{})
	pulumi.RegisterOutputType(CloudSqlSettingsEditionPtrOutput{})
	pulumi.RegisterOutputType(ConnectionProfileProviderOutput{})
	pulumi.RegisterOutputType(ConnectionProfileProviderPtrOutput{})
	pulumi.RegisterOutputType(ConnectionProfileStateEnumOutput{})
	pulumi.RegisterOutputType(ConnectionProfileStateEnumPtrOutput{})
	pulumi.RegisterOutputType(DatabaseEngineInfoEngineOutput{})
	pulumi.RegisterOutputType(DatabaseEngineInfoEnginePtrOutput{})
	pulumi.RegisterOutputType(DatabaseTypeEngineOutput{})
	pulumi.RegisterOutputType(DatabaseTypeEnginePtrOutput{})
	pulumi.RegisterOutputType(DatabaseTypeProviderOutput{})
	pulumi.RegisterOutputType(DatabaseTypeProviderPtrOutput{})
	pulumi.RegisterOutputType(DoubleComparisonFilterValueComparisonOutput{})
	pulumi.RegisterOutputType(DoubleComparisonFilterValueComparisonPtrOutput{})
	pulumi.RegisterOutputType(IntComparisonFilterValueComparisonOutput{})
	pulumi.RegisterOutputType(IntComparisonFilterValueComparisonPtrOutput{})
	pulumi.RegisterOutputType(MappingRuleRuleScopeOutput{})
	pulumi.RegisterOutputType(MappingRuleRuleScopePtrOutput{})
	pulumi.RegisterOutputType(MappingRuleStateEnumOutput{})
	pulumi.RegisterOutputType(MappingRuleStateEnumPtrOutput{})
	pulumi.RegisterOutputType(MigrationJobStateEnumOutput{})
	pulumi.RegisterOutputType(MigrationJobStateEnumPtrOutput{})
	pulumi.RegisterOutputType(MigrationJobTypeOutput{})
	pulumi.RegisterOutputType(MigrationJobTypePtrOutput{})
	pulumi.RegisterOutputType(MultiEntityRenameSourceNameTransformationOutput{})
	pulumi.RegisterOutputType(MultiEntityRenameSourceNameTransformationPtrOutput{})
	pulumi.RegisterOutputType(PerformanceConfigDumpParallelLevelOutput{})
	pulumi.RegisterOutputType(PerformanceConfigDumpParallelLevelPtrOutput{})
	pulumi.RegisterOutputType(SourceNumericFilterNumericFilterOptionOutput{})
	pulumi.RegisterOutputType(SourceNumericFilterNumericFilterOptionPtrOutput{})
	pulumi.RegisterOutputType(ValueListFilterValuePresentListOutput{})
	pulumi.RegisterOutputType(ValueListFilterValuePresentListPtrOutput{})
}
