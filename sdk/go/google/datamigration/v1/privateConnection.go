// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new private connection in a given project and location.
type PrivateConnection struct {
	pulumi.CustomResourceState

	// The create time of the resource.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The private connection display name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The error details in case of state FAILED.
	Error StatusResponseOutput `pulumi:"error"`
	// The resource labels for private connections to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Required. The private connection identifier.
	PrivateConnectionId pulumi.StringOutput `pulumi:"privateConnectionId"`
	Project             pulumi.StringOutput `pulumi:"project"`
	// Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Optional. If set to true, will skip validations.
	SkipValidation pulumi.BoolPtrOutput `pulumi:"skipValidation"`
	// The state of the private connection.
	State pulumi.StringOutput `pulumi:"state"`
	// The last update time of the resource.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// VPC peering configuration.
	VpcPeeringConfig VpcPeeringConfigResponseOutput `pulumi:"vpcPeeringConfig"`
}

// NewPrivateConnection registers a new resource with the given unique name, arguments, and options.
func NewPrivateConnection(ctx *pulumi.Context,
	name string, args *PrivateConnectionArgs, opts ...pulumi.ResourceOption) (*PrivateConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PrivateConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'PrivateConnectionId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"privateConnectionId",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PrivateConnection
	err := ctx.RegisterResource("google-native:datamigration/v1:PrivateConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateConnection gets an existing PrivateConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateConnectionState, opts ...pulumi.ResourceOption) (*PrivateConnection, error) {
	var resource PrivateConnection
	err := ctx.ReadResource("google-native:datamigration/v1:PrivateConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateConnection resources.
type privateConnectionState struct {
}

type PrivateConnectionState struct {
}

func (PrivateConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateConnectionState)(nil)).Elem()
}

type privateConnectionArgs struct {
	// The private connection display name.
	DisplayName *string `pulumi:"displayName"`
	// The resource labels for private connections to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// Required. The private connection identifier.
	PrivateConnectionId string  `pulumi:"privateConnectionId"`
	Project             *string `pulumi:"project"`
	// Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
	RequestId *string `pulumi:"requestId"`
	// Optional. If set to true, will skip validations.
	SkipValidation *bool `pulumi:"skipValidation"`
	// VPC peering configuration.
	VpcPeeringConfig *VpcPeeringConfig `pulumi:"vpcPeeringConfig"`
}

// The set of arguments for constructing a PrivateConnection resource.
type PrivateConnectionArgs struct {
	// The private connection display name.
	DisplayName pulumi.StringPtrInput
	// The resource labels for private connections to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringPtrInput
	// Required. The private connection identifier.
	PrivateConnectionId pulumi.StringInput
	Project             pulumi.StringPtrInput
	// Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
	RequestId pulumi.StringPtrInput
	// Optional. If set to true, will skip validations.
	SkipValidation pulumi.BoolPtrInput
	// VPC peering configuration.
	VpcPeeringConfig VpcPeeringConfigPtrInput
}

func (PrivateConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateConnectionArgs)(nil)).Elem()
}

type PrivateConnectionInput interface {
	pulumi.Input

	ToPrivateConnectionOutput() PrivateConnectionOutput
	ToPrivateConnectionOutputWithContext(ctx context.Context) PrivateConnectionOutput
}

func (*PrivateConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateConnection)(nil)).Elem()
}

func (i *PrivateConnection) ToPrivateConnectionOutput() PrivateConnectionOutput {
	return i.ToPrivateConnectionOutputWithContext(context.Background())
}

func (i *PrivateConnection) ToPrivateConnectionOutputWithContext(ctx context.Context) PrivateConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateConnectionOutput)
}

func (i *PrivateConnection) ToOutput(ctx context.Context) pulumix.Output[*PrivateConnection] {
	return pulumix.Output[*PrivateConnection]{
		OutputState: i.ToPrivateConnectionOutputWithContext(ctx).OutputState,
	}
}

type PrivateConnectionOutput struct{ *pulumi.OutputState }

func (PrivateConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateConnection)(nil)).Elem()
}

func (o PrivateConnectionOutput) ToPrivateConnectionOutput() PrivateConnectionOutput {
	return o
}

func (o PrivateConnectionOutput) ToPrivateConnectionOutputWithContext(ctx context.Context) PrivateConnectionOutput {
	return o
}

func (o PrivateConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[*PrivateConnection] {
	return pulumix.Output[*PrivateConnection]{
		OutputState: o.OutputState,
	}
}

// The create time of the resource.
func (o PrivateConnectionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateConnection) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The private connection display name.
func (o PrivateConnectionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateConnection) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The error details in case of state FAILED.
func (o PrivateConnectionOutput) Error() StatusResponseOutput {
	return o.ApplyT(func(v *PrivateConnection) StatusResponseOutput { return v.Error }).(StatusResponseOutput)
}

// The resource labels for private connections to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
func (o PrivateConnectionOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrivateConnection) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o PrivateConnectionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateConnection) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource.
func (o PrivateConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Required. The private connection identifier.
func (o PrivateConnectionOutput) PrivateConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateConnection) pulumi.StringOutput { return v.PrivateConnectionId }).(pulumi.StringOutput)
}

func (o PrivateConnectionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateConnection) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
func (o PrivateConnectionOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateConnection) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Optional. If set to true, will skip validations.
func (o PrivateConnectionOutput) SkipValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateConnection) pulumi.BoolPtrOutput { return v.SkipValidation }).(pulumi.BoolPtrOutput)
}

// The state of the private connection.
func (o PrivateConnectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateConnection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The last update time of the resource.
func (o PrivateConnectionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateConnection) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// VPC peering configuration.
func (o PrivateConnectionOutput) VpcPeeringConfig() VpcPeeringConfigResponseOutput {
	return o.ApplyT(func(v *PrivateConnection) VpcPeeringConfigResponseOutput { return v.VpcPeeringConfig }).(VpcPeeringConfigResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateConnectionInput)(nil)).Elem(), &PrivateConnection{})
	pulumi.RegisterOutputType(PrivateConnectionOutput{})
}
