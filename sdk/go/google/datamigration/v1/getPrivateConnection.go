// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single private connection.
func LookupPrivateConnection(ctx *pulumi.Context, args *LookupPrivateConnectionArgs, opts ...pulumi.InvokeOption) (*LookupPrivateConnectionResult, error) {
	var rv LookupPrivateConnectionResult
	err := ctx.Invoke("google-native:datamigration/v1:getPrivateConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPrivateConnectionArgs struct {
	Location            string  `pulumi:"location"`
	PrivateConnectionId string  `pulumi:"privateConnectionId"`
	Project             *string `pulumi:"project"`
}

type LookupPrivateConnectionResult struct {
	// The create time of the resource.
	CreateTime string `pulumi:"createTime"`
	// The private connection display name.
	DisplayName string `pulumi:"displayName"`
	// The error details in case of state FAILED.
	Error StatusResponse `pulumi:"error"`
	// The resource labels for private connections to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
	Labels map[string]string `pulumi:"labels"`
	// The resource's name.
	Name string `pulumi:"name"`
	// The state of the Private Connection.
	State string `pulumi:"state"`
	// The last update time of the resource.
	UpdateTime string `pulumi:"updateTime"`
	// VPC Peering Config.
	VpcPeeringConfig VpcPeeringConfigResponse `pulumi:"vpcPeeringConfig"`
}

func LookupPrivateConnectionOutput(ctx *pulumi.Context, args LookupPrivateConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupPrivateConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPrivateConnectionResult, error) {
			args := v.(LookupPrivateConnectionArgs)
			r, err := LookupPrivateConnection(ctx, &args, opts...)
			var s LookupPrivateConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPrivateConnectionResultOutput)
}

type LookupPrivateConnectionOutputArgs struct {
	Location            pulumi.StringInput    `pulumi:"location"`
	PrivateConnectionId pulumi.StringInput    `pulumi:"privateConnectionId"`
	Project             pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupPrivateConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrivateConnectionArgs)(nil)).Elem()
}

type LookupPrivateConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupPrivateConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrivateConnectionResult)(nil)).Elem()
}

func (o LookupPrivateConnectionResultOutput) ToLookupPrivateConnectionResultOutput() LookupPrivateConnectionResultOutput {
	return o
}

func (o LookupPrivateConnectionResultOutput) ToLookupPrivateConnectionResultOutputWithContext(ctx context.Context) LookupPrivateConnectionResultOutput {
	return o
}

// The create time of the resource.
func (o LookupPrivateConnectionResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The private connection display name.
func (o LookupPrivateConnectionResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The error details in case of state FAILED.
func (o LookupPrivateConnectionResultOutput) Error() StatusResponseOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) StatusResponse { return v.Error }).(StatusResponseOutput)
}

// The resource labels for private connections to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
func (o LookupPrivateConnectionResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource's name.
func (o LookupPrivateConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The state of the Private Connection.
func (o LookupPrivateConnectionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.State }).(pulumi.StringOutput)
}

// The last update time of the resource.
func (o LookupPrivateConnectionResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// VPC Peering Config.
func (o LookupPrivateConnectionResultOutput) VpcPeeringConfig() VpcPeeringConfigResponseOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) VpcPeeringConfigResponse { return v.VpcPeeringConfig }).(VpcPeeringConfigResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPrivateConnectionResultOutput{})
}
