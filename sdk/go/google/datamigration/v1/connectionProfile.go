// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new connection profile in a given project and location.
type ConnectionProfile struct {
	pulumi.CustomResourceState

	// An AlloyDB cluster connection profile.
	Alloydb AlloyDbConnectionProfileResponseOutput `pulumi:"alloydb"`
	// A CloudSQL database connection profile.
	Cloudsql CloudSqlConnectionProfileResponseOutput `pulumi:"cloudsql"`
	// Required. The connection profile identifier.
	ConnectionProfileId pulumi.StringOutput `pulumi:"connectionProfileId"`
	// The timestamp when the resource was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The connection profile display name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The error details in case of state FAILED.
	Error StatusResponseOutput `pulumi:"error"`
	// The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// A MySQL database connection profile.
	Mysql MySqlConnectionProfileResponseOutput `pulumi:"mysql"`
	// The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
	Name pulumi.StringOutput `pulumi:"name"`
	// An Oracle database connection profile.
	Oracle OracleConnectionProfileResponseOutput `pulumi:"oracle"`
	// A PostgreSQL database connection profile.
	Postgresql PostgreSqlConnectionProfileResponseOutput `pulumi:"postgresql"`
	Project    pulumi.StringOutput                       `pulumi:"project"`
	// The database provider.
	Provider pulumi.StringOutput `pulumi:"provider"`
	// Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Optional. Create the connection profile without validating it. The default is false. Only supported for Oracle connection profiles.
	SkipValidation pulumi.BoolPtrOutput `pulumi:"skipValidation"`
	// The current connection profile state (e.g. DRAFT, READY, or FAILED).
	State pulumi.StringOutput `pulumi:"state"`
	// The timestamp when the resource was last updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Optional. Only validate the connection profile, but don't create any resources. The default is false. Only supported for Oracle connection profiles.
	ValidateOnly pulumi.BoolPtrOutput `pulumi:"validateOnly"`
}

// NewConnectionProfile registers a new resource with the given unique name, arguments, and options.
func NewConnectionProfile(ctx *pulumi.Context,
	name string, args *ConnectionProfileArgs, opts ...pulumi.ResourceOption) (*ConnectionProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionProfileId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionProfileId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"connectionProfileId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	var resource ConnectionProfile
	err := ctx.RegisterResource("google-native:datamigration/v1:ConnectionProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectionProfile gets an existing ConnectionProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectionProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionProfileState, opts ...pulumi.ResourceOption) (*ConnectionProfile, error) {
	var resource ConnectionProfile
	err := ctx.ReadResource("google-native:datamigration/v1:ConnectionProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectionProfile resources.
type connectionProfileState struct {
}

type ConnectionProfileState struct {
}

func (ConnectionProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionProfileState)(nil)).Elem()
}

type connectionProfileArgs struct {
	// An AlloyDB cluster connection profile.
	Alloydb *AlloyDbConnectionProfile `pulumi:"alloydb"`
	// A CloudSQL database connection profile.
	Cloudsql *CloudSqlConnectionProfile `pulumi:"cloudsql"`
	// Required. The connection profile identifier.
	ConnectionProfileId string `pulumi:"connectionProfileId"`
	// The connection profile display name.
	DisplayName *string `pulumi:"displayName"`
	// The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// A MySQL database connection profile.
	Mysql *MySqlConnectionProfile `pulumi:"mysql"`
	// The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
	Name *string `pulumi:"name"`
	// An Oracle database connection profile.
	Oracle *OracleConnectionProfile `pulumi:"oracle"`
	// A PostgreSQL database connection profile.
	Postgresql *PostgreSqlConnectionProfile `pulumi:"postgresql"`
	Project    *string                      `pulumi:"project"`
	// The database provider.
	Provider *ConnectionProfileProvider `pulumi:"provider"`
	// Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
	RequestId *string `pulumi:"requestId"`
	// Optional. Create the connection profile without validating it. The default is false. Only supported for Oracle connection profiles.
	SkipValidation *bool `pulumi:"skipValidation"`
	// The current connection profile state (e.g. DRAFT, READY, or FAILED).
	State *ConnectionProfileStateEnum `pulumi:"state"`
	// Optional. Only validate the connection profile, but don't create any resources. The default is false. Only supported for Oracle connection profiles.
	ValidateOnly *bool `pulumi:"validateOnly"`
}

// The set of arguments for constructing a ConnectionProfile resource.
type ConnectionProfileArgs struct {
	// An AlloyDB cluster connection profile.
	Alloydb AlloyDbConnectionProfilePtrInput
	// A CloudSQL database connection profile.
	Cloudsql CloudSqlConnectionProfilePtrInput
	// Required. The connection profile identifier.
	ConnectionProfileId pulumi.StringInput
	// The connection profile display name.
	DisplayName pulumi.StringPtrInput
	// The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// A MySQL database connection profile.
	Mysql MySqlConnectionProfilePtrInput
	// The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
	Name pulumi.StringPtrInput
	// An Oracle database connection profile.
	Oracle OracleConnectionProfilePtrInput
	// A PostgreSQL database connection profile.
	Postgresql PostgreSqlConnectionProfilePtrInput
	Project    pulumi.StringPtrInput
	// The database provider.
	Provider ConnectionProfileProviderPtrInput
	// Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
	RequestId pulumi.StringPtrInput
	// Optional. Create the connection profile without validating it. The default is false. Only supported for Oracle connection profiles.
	SkipValidation pulumi.BoolPtrInput
	// The current connection profile state (e.g. DRAFT, READY, or FAILED).
	State ConnectionProfileStateEnumPtrInput
	// Optional. Only validate the connection profile, but don't create any resources. The default is false. Only supported for Oracle connection profiles.
	ValidateOnly pulumi.BoolPtrInput
}

func (ConnectionProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionProfileArgs)(nil)).Elem()
}

type ConnectionProfileInput interface {
	pulumi.Input

	ToConnectionProfileOutput() ConnectionProfileOutput
	ToConnectionProfileOutputWithContext(ctx context.Context) ConnectionProfileOutput
}

func (*ConnectionProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfile)(nil)).Elem()
}

func (i *ConnectionProfile) ToConnectionProfileOutput() ConnectionProfileOutput {
	return i.ToConnectionProfileOutputWithContext(context.Background())
}

func (i *ConnectionProfile) ToConnectionProfileOutputWithContext(ctx context.Context) ConnectionProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionProfileOutput)
}

type ConnectionProfileOutput struct{ *pulumi.OutputState }

func (ConnectionProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionProfile)(nil)).Elem()
}

func (o ConnectionProfileOutput) ToConnectionProfileOutput() ConnectionProfileOutput {
	return o
}

func (o ConnectionProfileOutput) ToConnectionProfileOutputWithContext(ctx context.Context) ConnectionProfileOutput {
	return o
}

// An AlloyDB cluster connection profile.
func (o ConnectionProfileOutput) Alloydb() AlloyDbConnectionProfileResponseOutput {
	return o.ApplyT(func(v *ConnectionProfile) AlloyDbConnectionProfileResponseOutput { return v.Alloydb }).(AlloyDbConnectionProfileResponseOutput)
}

// A CloudSQL database connection profile.
func (o ConnectionProfileOutput) Cloudsql() CloudSqlConnectionProfileResponseOutput {
	return o.ApplyT(func(v *ConnectionProfile) CloudSqlConnectionProfileResponseOutput { return v.Cloudsql }).(CloudSqlConnectionProfileResponseOutput)
}

// Required. The connection profile identifier.
func (o ConnectionProfileOutput) ConnectionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.ConnectionProfileId }).(pulumi.StringOutput)
}

// The timestamp when the resource was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o ConnectionProfileOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The connection profile display name.
func (o ConnectionProfileOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The error details in case of state FAILED.
func (o ConnectionProfileOutput) Error() StatusResponseOutput {
	return o.ApplyT(func(v *ConnectionProfile) StatusResponseOutput { return v.Error }).(StatusResponseOutput)
}

// The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
func (o ConnectionProfileOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o ConnectionProfileOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// A MySQL database connection profile.
func (o ConnectionProfileOutput) Mysql() MySqlConnectionProfileResponseOutput {
	return o.ApplyT(func(v *ConnectionProfile) MySqlConnectionProfileResponseOutput { return v.Mysql }).(MySqlConnectionProfileResponseOutput)
}

// The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
func (o ConnectionProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An Oracle database connection profile.
func (o ConnectionProfileOutput) Oracle() OracleConnectionProfileResponseOutput {
	return o.ApplyT(func(v *ConnectionProfile) OracleConnectionProfileResponseOutput { return v.Oracle }).(OracleConnectionProfileResponseOutput)
}

// A PostgreSQL database connection profile.
func (o ConnectionProfileOutput) Postgresql() PostgreSqlConnectionProfileResponseOutput {
	return o.ApplyT(func(v *ConnectionProfile) PostgreSqlConnectionProfileResponseOutput { return v.Postgresql }).(PostgreSqlConnectionProfileResponseOutput)
}

func (o ConnectionProfileOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The database provider.
func (o ConnectionProfileOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.Provider }).(pulumi.StringOutput)
}

// Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
func (o ConnectionProfileOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Optional. Create the connection profile without validating it. The default is false. Only supported for Oracle connection profiles.
func (o ConnectionProfileOutput) SkipValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.BoolPtrOutput { return v.SkipValidation }).(pulumi.BoolPtrOutput)
}

// The current connection profile state (e.g. DRAFT, READY, or FAILED).
func (o ConnectionProfileOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The timestamp when the resource was last updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
func (o ConnectionProfileOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Optional. Only validate the connection profile, but don't create any resources. The default is false. Only supported for Oracle connection profiles.
func (o ConnectionProfileOutput) ValidateOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionProfile) pulumi.BoolPtrOutput { return v.ValidateOnly }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionProfileInput)(nil)).Elem(), &ConnectionProfile{})
	pulumi.RegisterOutputType(ConnectionProfileOutput{})
}
