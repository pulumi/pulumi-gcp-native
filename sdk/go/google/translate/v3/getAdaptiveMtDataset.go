// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the Adaptive MT dataset.
func LookupAdaptiveMtDataset(ctx *pulumi.Context, args *LookupAdaptiveMtDatasetArgs, opts ...pulumi.InvokeOption) (*LookupAdaptiveMtDatasetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAdaptiveMtDatasetResult
	err := ctx.Invoke("google-native:translate/v3:getAdaptiveMtDataset", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAdaptiveMtDatasetArgs struct {
	AdaptiveMtDatasetId string  `pulumi:"adaptiveMtDatasetId"`
	Location            string  `pulumi:"location"`
	Project             *string `pulumi:"project"`
}

type LookupAdaptiveMtDatasetResult struct {
	// Timestamp when this dataset was created.
	CreateTime string `pulumi:"createTime"`
	// The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.
	DisplayName string `pulumi:"displayName"`
	// The number of examples in the dataset.
	ExampleCount int `pulumi:"exampleCount"`
	// The resource name of the dataset, in form of `projects/{project-number-or-id}/locations/{location_id}/adaptiveMtDatasets/{dataset_id}`
	Name string `pulumi:"name"`
	// The BCP-47 language code of the source language.
	SourceLanguageCode string `pulumi:"sourceLanguageCode"`
	// The BCP-47 language code of the target language.
	TargetLanguageCode string `pulumi:"targetLanguageCode"`
	// Timestamp when this dataset was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupAdaptiveMtDatasetOutput(ctx *pulumi.Context, args LookupAdaptiveMtDatasetOutputArgs, opts ...pulumi.InvokeOption) LookupAdaptiveMtDatasetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAdaptiveMtDatasetResult, error) {
			args := v.(LookupAdaptiveMtDatasetArgs)
			r, err := LookupAdaptiveMtDataset(ctx, &args, opts...)
			var s LookupAdaptiveMtDatasetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAdaptiveMtDatasetResultOutput)
}

type LookupAdaptiveMtDatasetOutputArgs struct {
	AdaptiveMtDatasetId pulumi.StringInput    `pulumi:"adaptiveMtDatasetId"`
	Location            pulumi.StringInput    `pulumi:"location"`
	Project             pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupAdaptiveMtDatasetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAdaptiveMtDatasetArgs)(nil)).Elem()
}

type LookupAdaptiveMtDatasetResultOutput struct{ *pulumi.OutputState }

func (LookupAdaptiveMtDatasetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAdaptiveMtDatasetResult)(nil)).Elem()
}

func (o LookupAdaptiveMtDatasetResultOutput) ToLookupAdaptiveMtDatasetResultOutput() LookupAdaptiveMtDatasetResultOutput {
	return o
}

func (o LookupAdaptiveMtDatasetResultOutput) ToLookupAdaptiveMtDatasetResultOutputWithContext(ctx context.Context) LookupAdaptiveMtDatasetResultOutput {
	return o
}

// Timestamp when this dataset was created.
func (o LookupAdaptiveMtDatasetResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAdaptiveMtDatasetResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.
func (o LookupAdaptiveMtDatasetResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAdaptiveMtDatasetResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The number of examples in the dataset.
func (o LookupAdaptiveMtDatasetResultOutput) ExampleCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAdaptiveMtDatasetResult) int { return v.ExampleCount }).(pulumi.IntOutput)
}

// The resource name of the dataset, in form of `projects/{project-number-or-id}/locations/{location_id}/adaptiveMtDatasets/{dataset_id}`
func (o LookupAdaptiveMtDatasetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAdaptiveMtDatasetResult) string { return v.Name }).(pulumi.StringOutput)
}

// The BCP-47 language code of the source language.
func (o LookupAdaptiveMtDatasetResultOutput) SourceLanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAdaptiveMtDatasetResult) string { return v.SourceLanguageCode }).(pulumi.StringOutput)
}

// The BCP-47 language code of the target language.
func (o LookupAdaptiveMtDatasetResultOutput) TargetLanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAdaptiveMtDatasetResult) string { return v.TargetLanguageCode }).(pulumi.StringOutput)
}

// Timestamp when this dataset was last updated.
func (o LookupAdaptiveMtDatasetResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAdaptiveMtDatasetResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAdaptiveMtDatasetResultOutput{})
}
