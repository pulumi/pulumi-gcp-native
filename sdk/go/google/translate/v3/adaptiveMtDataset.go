// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an Adaptive MT dataset.
type AdaptiveMtDataset struct {
	pulumi.CustomResourceState

	// Timestamp when this dataset was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The number of examples in the dataset.
	ExampleCount pulumi.IntOutput    `pulumi:"exampleCount"`
	Location     pulumi.StringOutput `pulumi:"location"`
	// The resource name of the dataset, in form of `projects/{project-number-or-id}/locations/{location_id}/adaptiveMtDatasets/{dataset_id}`
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The BCP-47 language code of the source language.
	SourceLanguageCode pulumi.StringOutput `pulumi:"sourceLanguageCode"`
	// The BCP-47 language code of the target language.
	TargetLanguageCode pulumi.StringOutput `pulumi:"targetLanguageCode"`
	// Timestamp when this dataset was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewAdaptiveMtDataset registers a new resource with the given unique name, arguments, and options.
func NewAdaptiveMtDataset(ctx *pulumi.Context,
	name string, args *AdaptiveMtDatasetArgs, opts ...pulumi.ResourceOption) (*AdaptiveMtDataset, error) {
	if args == nil {
		args = &AdaptiveMtDatasetArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AdaptiveMtDataset
	err := ctx.RegisterResource("google-native:translate/v3:AdaptiveMtDataset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAdaptiveMtDataset gets an existing AdaptiveMtDataset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAdaptiveMtDataset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AdaptiveMtDatasetState, opts ...pulumi.ResourceOption) (*AdaptiveMtDataset, error) {
	var resource AdaptiveMtDataset
	err := ctx.ReadResource("google-native:translate/v3:AdaptiveMtDataset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AdaptiveMtDataset resources.
type adaptiveMtDatasetState struct {
}

type AdaptiveMtDatasetState struct {
}

func (AdaptiveMtDatasetState) ElementType() reflect.Type {
	return reflect.TypeOf((*adaptiveMtDatasetState)(nil)).Elem()
}

type adaptiveMtDatasetArgs struct {
	// The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.
	DisplayName *string `pulumi:"displayName"`
	// The number of examples in the dataset.
	ExampleCount *int    `pulumi:"exampleCount"`
	Location     *string `pulumi:"location"`
	// The resource name of the dataset, in form of `projects/{project-number-or-id}/locations/{location_id}/adaptiveMtDatasets/{dataset_id}`
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The BCP-47 language code of the source language.
	SourceLanguageCode *string `pulumi:"sourceLanguageCode"`
	// The BCP-47 language code of the target language.
	TargetLanguageCode *string `pulumi:"targetLanguageCode"`
}

// The set of arguments for constructing a AdaptiveMtDataset resource.
type AdaptiveMtDatasetArgs struct {
	// The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.
	DisplayName pulumi.StringPtrInput
	// The number of examples in the dataset.
	ExampleCount pulumi.IntPtrInput
	Location     pulumi.StringPtrInput
	// The resource name of the dataset, in form of `projects/{project-number-or-id}/locations/{location_id}/adaptiveMtDatasets/{dataset_id}`
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The BCP-47 language code of the source language.
	SourceLanguageCode pulumi.StringPtrInput
	// The BCP-47 language code of the target language.
	TargetLanguageCode pulumi.StringPtrInput
}

func (AdaptiveMtDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*adaptiveMtDatasetArgs)(nil)).Elem()
}

type AdaptiveMtDatasetInput interface {
	pulumi.Input

	ToAdaptiveMtDatasetOutput() AdaptiveMtDatasetOutput
	ToAdaptiveMtDatasetOutputWithContext(ctx context.Context) AdaptiveMtDatasetOutput
}

func (*AdaptiveMtDataset) ElementType() reflect.Type {
	return reflect.TypeOf((**AdaptiveMtDataset)(nil)).Elem()
}

func (i *AdaptiveMtDataset) ToAdaptiveMtDatasetOutput() AdaptiveMtDatasetOutput {
	return i.ToAdaptiveMtDatasetOutputWithContext(context.Background())
}

func (i *AdaptiveMtDataset) ToAdaptiveMtDatasetOutputWithContext(ctx context.Context) AdaptiveMtDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdaptiveMtDatasetOutput)
}

type AdaptiveMtDatasetOutput struct{ *pulumi.OutputState }

func (AdaptiveMtDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdaptiveMtDataset)(nil)).Elem()
}

func (o AdaptiveMtDatasetOutput) ToAdaptiveMtDatasetOutput() AdaptiveMtDatasetOutput {
	return o
}

func (o AdaptiveMtDatasetOutput) ToAdaptiveMtDatasetOutputWithContext(ctx context.Context) AdaptiveMtDatasetOutput {
	return o
}

// Timestamp when this dataset was created.
func (o AdaptiveMtDatasetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AdaptiveMtDataset) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.
func (o AdaptiveMtDatasetOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AdaptiveMtDataset) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The number of examples in the dataset.
func (o AdaptiveMtDatasetOutput) ExampleCount() pulumi.IntOutput {
	return o.ApplyT(func(v *AdaptiveMtDataset) pulumi.IntOutput { return v.ExampleCount }).(pulumi.IntOutput)
}

func (o AdaptiveMtDatasetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AdaptiveMtDataset) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the dataset, in form of `projects/{project-number-or-id}/locations/{location_id}/adaptiveMtDatasets/{dataset_id}`
func (o AdaptiveMtDatasetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AdaptiveMtDataset) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AdaptiveMtDatasetOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AdaptiveMtDataset) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The BCP-47 language code of the source language.
func (o AdaptiveMtDatasetOutput) SourceLanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v *AdaptiveMtDataset) pulumi.StringOutput { return v.SourceLanguageCode }).(pulumi.StringOutput)
}

// The BCP-47 language code of the target language.
func (o AdaptiveMtDatasetOutput) TargetLanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v *AdaptiveMtDataset) pulumi.StringOutput { return v.TargetLanguageCode }).(pulumi.StringOutput)
}

// Timestamp when this dataset was last updated.
func (o AdaptiveMtDatasetOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AdaptiveMtDataset) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AdaptiveMtDatasetInput)(nil)).Elem(), &AdaptiveMtDataset{})
	pulumi.RegisterOutputType(AdaptiveMtDatasetOutput{})
}
