// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a Dataset.
func LookupDataset(ctx *pulumi.Context, args *LookupDatasetArgs, opts ...pulumi.InvokeOption) (*LookupDatasetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDatasetResult
	err := ctx.Invoke("google-native:translate/v3:getDataset", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDatasetArgs struct {
	DatasetId string  `pulumi:"datasetId"`
	Location  string  `pulumi:"location"`
	Project   *string `pulumi:"project"`
}

type LookupDatasetResult struct {
	// Timestamp when this dataset was created.
	CreateTime string `pulumi:"createTime"`
	// The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.
	DisplayName string `pulumi:"displayName"`
	// The number of examples in the dataset.
	ExampleCount int `pulumi:"exampleCount"`
	// The resource name of the dataset, in form of `projects/{project-number-or-id}/locations/{location_id}/datasets/{dataset_id}`
	Name string `pulumi:"name"`
	// The BCP-47 language code of the source language.
	SourceLanguageCode string `pulumi:"sourceLanguageCode"`
	// The BCP-47 language code of the target language.
	TargetLanguageCode string `pulumi:"targetLanguageCode"`
	// Number of test examples (sentence pairs).
	TestExampleCount int `pulumi:"testExampleCount"`
	// Number of training examples (sentence pairs).
	TrainExampleCount int `pulumi:"trainExampleCount"`
	// Timestamp when this dataset was last updated.
	UpdateTime string `pulumi:"updateTime"`
	// Number of validation examples (sentence pairs).
	ValidateExampleCount int `pulumi:"validateExampleCount"`
}

func LookupDatasetOutput(ctx *pulumi.Context, args LookupDatasetOutputArgs, opts ...pulumi.InvokeOption) LookupDatasetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatasetResult, error) {
			args := v.(LookupDatasetArgs)
			r, err := LookupDataset(ctx, &args, opts...)
			var s LookupDatasetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatasetResultOutput)
}

type LookupDatasetOutputArgs struct {
	DatasetId pulumi.StringInput    `pulumi:"datasetId"`
	Location  pulumi.StringInput    `pulumi:"location"`
	Project   pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupDatasetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetArgs)(nil)).Elem()
}

type LookupDatasetResultOutput struct{ *pulumi.OutputState }

func (LookupDatasetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetResult)(nil)).Elem()
}

func (o LookupDatasetResultOutput) ToLookupDatasetResultOutput() LookupDatasetResultOutput {
	return o
}

func (o LookupDatasetResultOutput) ToLookupDatasetResultOutputWithContext(ctx context.Context) LookupDatasetResultOutput {
	return o
}

// Timestamp when this dataset was created.
func (o LookupDatasetResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.
func (o LookupDatasetResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The number of examples in the dataset.
func (o LookupDatasetResultOutput) ExampleCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDatasetResult) int { return v.ExampleCount }).(pulumi.IntOutput)
}

// The resource name of the dataset, in form of `projects/{project-number-or-id}/locations/{location_id}/datasets/{dataset_id}`
func (o LookupDatasetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetResult) string { return v.Name }).(pulumi.StringOutput)
}

// The BCP-47 language code of the source language.
func (o LookupDatasetResultOutput) SourceLanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetResult) string { return v.SourceLanguageCode }).(pulumi.StringOutput)
}

// The BCP-47 language code of the target language.
func (o LookupDatasetResultOutput) TargetLanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetResult) string { return v.TargetLanguageCode }).(pulumi.StringOutput)
}

// Number of test examples (sentence pairs).
func (o LookupDatasetResultOutput) TestExampleCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDatasetResult) int { return v.TestExampleCount }).(pulumi.IntOutput)
}

// Number of training examples (sentence pairs).
func (o LookupDatasetResultOutput) TrainExampleCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDatasetResult) int { return v.TrainExampleCount }).(pulumi.IntOutput)
}

// Timestamp when this dataset was last updated.
func (o LookupDatasetResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// Number of validation examples (sentence pairs).
func (o LookupDatasetResultOutput) ValidateExampleCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDatasetResult) int { return v.ValidateExampleCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatasetResultOutput{})
}
