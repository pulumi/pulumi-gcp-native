// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a new ApiConfig in a given project and location.
type ApigatewayOperation struct {
	pulumi.CustomResourceState
}

// NewApigatewayOperation registers a new resource with the given unique name, arguments, and options.
func NewApigatewayOperation(ctx *pulumi.Context,
	name string, args *ApigatewayOperationArgs, opts ...pulumi.ResourceOption) (*ApigatewayOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	var resource ApigatewayOperation
	err := ctx.RegisterResource("google-cloud:apigateway/v1beta:ApigatewayOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigatewayOperation gets an existing ApigatewayOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigatewayOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigatewayOperationState, opts ...pulumi.ResourceOption) (*ApigatewayOperation, error) {
	var resource ApigatewayOperation
	err := ctx.ReadResource("google-cloud:apigateway/v1beta:ApigatewayOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigatewayOperation resources.
type apigatewayOperationState struct {
}

type ApigatewayOperationState struct {
}

func (ApigatewayOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigatewayOperationState)(nil)).Elem()
}

type apigatewayOperationArgs struct {
	// Required. Identifier to assign to the API Config. Must be unique within scope of the parent resource.
	ApiConfigId *string `pulumi:"apiConfigId"`
	// Output only. Created time.
	CreateTime *string `pulumi:"createTime"`
	// Optional. Display name.
	DisplayName *string `pulumi:"displayName"`
	// Immutable. Gateway specific configuration.
	GatewayConfig *ApigatewayGatewayConfig `pulumi:"gatewayConfig"`
	// Immutable. The Google Cloud IAM Service Account that Gateways serving this config should use to authenticate to other services. This may either be the Service Account's email (`{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`) or its full resource name (`projects/{PROJECT}/accounts/{UNIQUE_ID}`). This is most often used when the service is a GCP resource such as a Cloud Run Service or an IAP-secured service.
	GatewayServiceAccount *string `pulumi:"gatewayServiceAccount"`
	// Optional. gRPC service definition files. If specified, openapi_documents must not be included.
	GrpcServices []ApigatewayApiConfigGrpcServiceDefinition `pulumi:"grpcServices"`
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels map[string]string `pulumi:"labels"`
	// Optional. Service Configuration files. At least one must be included when using gRPC service definitions. See https://cloud.google.com/endpoints/docs/grpc/grpc-service-config#service_configuration_overview for the expected file contents. If multiple files are specified, the files are merged with the following rules: * All singular scalar fields are merged using "last one wins" semantics in the order of the files uploaded. * Repeated fields are concatenated. * Singular embedded messages are merged using these rules for nested fields.
	ManagedServiceConfigs []ApigatewayApiConfigFile `pulumi:"managedServiceConfigs"`
	// Output only. Resource name of the API Config. Format: projects/{project}/locations/global/apis/{api}/configs/{api_config}
	Name *string `pulumi:"name"`
	// Optional. OpenAPI specification documents. If specified, grpc_services and managed_service_configs must not be included.
	OpenapiDocuments []ApigatewayApiConfigOpenApiDocument `pulumi:"openapiDocuments"`
	// Required. Parent resource of the API Config, of the form: `projects/*/locations/global/apis/*`
	Parent string `pulumi:"parent"`
	// Output only. The ID of the associated Service Config ( https://cloud.google.com/service-infrastructure/docs/glossary#config).
	ServiceConfigId *string `pulumi:"serviceConfigId"`
	// Output only. State of the API Config.
	State *string `pulumi:"state"`
	// Output only. Updated time.
	UpdateTime *string `pulumi:"updateTime"`
}

// The set of arguments for constructing a ApigatewayOperation resource.
type ApigatewayOperationArgs struct {
	// Required. Identifier to assign to the API Config. Must be unique within scope of the parent resource.
	ApiConfigId pulumi.StringPtrInput
	// Output only. Created time.
	CreateTime pulumi.StringPtrInput
	// Optional. Display name.
	DisplayName pulumi.StringPtrInput
	// Immutable. Gateway specific configuration.
	GatewayConfig ApigatewayGatewayConfigPtrInput
	// Immutable. The Google Cloud IAM Service Account that Gateways serving this config should use to authenticate to other services. This may either be the Service Account's email (`{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`) or its full resource name (`projects/{PROJECT}/accounts/{UNIQUE_ID}`). This is most often used when the service is a GCP resource such as a Cloud Run Service or an IAP-secured service.
	GatewayServiceAccount pulumi.StringPtrInput
	// Optional. gRPC service definition files. If specified, openapi_documents must not be included.
	GrpcServices ApigatewayApiConfigGrpcServiceDefinitionArrayInput
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels pulumi.StringMapInput
	// Optional. Service Configuration files. At least one must be included when using gRPC service definitions. See https://cloud.google.com/endpoints/docs/grpc/grpc-service-config#service_configuration_overview for the expected file contents. If multiple files are specified, the files are merged with the following rules: * All singular scalar fields are merged using "last one wins" semantics in the order of the files uploaded. * Repeated fields are concatenated. * Singular embedded messages are merged using these rules for nested fields.
	ManagedServiceConfigs ApigatewayApiConfigFileArrayInput
	// Output only. Resource name of the API Config. Format: projects/{project}/locations/global/apis/{api}/configs/{api_config}
	Name pulumi.StringPtrInput
	// Optional. OpenAPI specification documents. If specified, grpc_services and managed_service_configs must not be included.
	OpenapiDocuments ApigatewayApiConfigOpenApiDocumentArrayInput
	// Required. Parent resource of the API Config, of the form: `projects/*/locations/global/apis/*`
	Parent pulumi.StringInput
	// Output only. The ID of the associated Service Config ( https://cloud.google.com/service-infrastructure/docs/glossary#config).
	ServiceConfigId pulumi.StringPtrInput
	// Output only. State of the API Config.
	State pulumi.StringPtrInput
	// Output only. Updated time.
	UpdateTime pulumi.StringPtrInput
}

func (ApigatewayOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigatewayOperationArgs)(nil)).Elem()
}

type ApigatewayOperationInput interface {
	pulumi.Input

	ToApigatewayOperationOutput() ApigatewayOperationOutput
	ToApigatewayOperationOutputWithContext(ctx context.Context) ApigatewayOperationOutput
}

func (*ApigatewayOperation) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayOperation)(nil))
}

func (i *ApigatewayOperation) ToApigatewayOperationOutput() ApigatewayOperationOutput {
	return i.ToApigatewayOperationOutputWithContext(context.Background())
}

func (i *ApigatewayOperation) ToApigatewayOperationOutputWithContext(ctx context.Context) ApigatewayOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayOperationOutput)
}

type ApigatewayOperationOutput struct {
	*pulumi.OutputState
}

func (ApigatewayOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayOperation)(nil))
}

func (o ApigatewayOperationOutput) ToApigatewayOperationOutput() ApigatewayOperationOutput {
	return o
}

func (o ApigatewayOperationOutput) ToApigatewayOperationOutputWithContext(ctx context.Context) ApigatewayOperationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ApigatewayOperationOutput{})
}
