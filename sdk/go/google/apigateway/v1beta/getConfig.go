// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single ApiConfig.
func LookupConfig(ctx *pulumi.Context, args *LookupConfigArgs, opts ...pulumi.InvokeOption) (*LookupConfigResult, error) {
	var rv LookupConfigResult
	err := ctx.Invoke("google-native:apigateway/v1beta:getConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConfigArgs struct {
	ApiId    string  `pulumi:"apiId"`
	ConfigId string  `pulumi:"configId"`
	Location string  `pulumi:"location"`
	Project  string  `pulumi:"project"`
	View     *string `pulumi:"view"`
}

type LookupConfigResult struct {
	// Created time.
	CreateTime string `pulumi:"createTime"`
	// Optional. Display name.
	DisplayName string `pulumi:"displayName"`
	// Immutable. Gateway specific configuration.
	GatewayConfig ApigatewayGatewayConfigResponse `pulumi:"gatewayConfig"`
	// Immutable. The Google Cloud IAM Service Account that Gateways serving this config should use to authenticate to other services. This may either be the Service Account's email (`{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`) or its full resource name (`projects/{PROJECT}/accounts/{UNIQUE_ID}`). This is most often used when the service is a GCP resource such as a Cloud Run Service or an IAP-secured service.
	GatewayServiceAccount string `pulumi:"gatewayServiceAccount"`
	// Optional. gRPC service definition files. If specified, openapi_documents must not be included.
	GrpcServices []ApigatewayApiConfigGrpcServiceDefinitionResponse `pulumi:"grpcServices"`
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels map[string]string `pulumi:"labels"`
	// Optional. Service Configuration files. At least one must be included when using gRPC service definitions. See https://cloud.google.com/endpoints/docs/grpc/grpc-service-config#service_configuration_overview for the expected file contents. If multiple files are specified, the files are merged with the following rules: * All singular scalar fields are merged using "last one wins" semantics in the order of the files uploaded. * Repeated fields are concatenated. * Singular embedded messages are merged using these rules for nested fields.
	ManagedServiceConfigs []ApigatewayApiConfigFileResponse `pulumi:"managedServiceConfigs"`
	// Resource name of the API Config. Format: projects/{project}/locations/global/apis/{api}/configs/{api_config}
	Name string `pulumi:"name"`
	// Optional. OpenAPI specification documents. If specified, grpc_services and managed_service_configs must not be included.
	OpenapiDocuments []ApigatewayApiConfigOpenApiDocumentResponse `pulumi:"openapiDocuments"`
	// The ID of the associated Service Config ( https://cloud.google.com/service-infrastructure/docs/glossary#config).
	ServiceConfigId string `pulumi:"serviceConfigId"`
	// State of the API Config.
	State string `pulumi:"state"`
	// Updated time.
	UpdateTime string `pulumi:"updateTime"`
}
