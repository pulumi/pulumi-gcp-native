// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single Gateway.
func LookupGateway(ctx *pulumi.Context, args *LookupGatewayArgs, opts ...pulumi.InvokeOption) (*LookupGatewayResult, error) {
	var rv LookupGatewayResult
	err := ctx.Invoke("google-native:apigateway/v1:getGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGatewayArgs struct {
	GatewayId string  `pulumi:"gatewayId"`
	Location  string  `pulumi:"location"`
	Project   *string `pulumi:"project"`
}

type LookupGatewayResult struct {
	// Resource name of the API Config for this Gateway. Format: projects/{project}/locations/global/apis/{api}/configs/{apiConfig}
	ApiConfig string `pulumi:"apiConfig"`
	// Created time.
	CreateTime string `pulumi:"createTime"`
	// The default API Gateway host name of the form `{gateway_id}-{hash}.{region_code}.gateway.dev`.
	DefaultHostname string `pulumi:"defaultHostname"`
	// Optional. Display name.
	DisplayName string `pulumi:"displayName"`
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels map[string]string `pulumi:"labels"`
	// Resource name of the Gateway. Format: projects/{project}/locations/{location}/gateways/{gateway}
	Name string `pulumi:"name"`
	// The current state of the Gateway.
	State string `pulumi:"state"`
	// Updated time.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupGatewayOutput(ctx *pulumi.Context, args LookupGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupGatewayResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGatewayResult, error) {
			args := v.(LookupGatewayArgs)
			r, err := LookupGateway(ctx, &args, opts...)
			var s LookupGatewayResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGatewayResultOutput)
}

type LookupGatewayOutputArgs struct {
	GatewayId pulumi.StringInput    `pulumi:"gatewayId"`
	Location  pulumi.StringInput    `pulumi:"location"`
	Project   pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupGatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayArgs)(nil)).Elem()
}

type LookupGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayResult)(nil)).Elem()
}

func (o LookupGatewayResultOutput) ToLookupGatewayResultOutput() LookupGatewayResultOutput {
	return o
}

func (o LookupGatewayResultOutput) ToLookupGatewayResultOutputWithContext(ctx context.Context) LookupGatewayResultOutput {
	return o
}

// Resource name of the API Config for this Gateway. Format: projects/{project}/locations/global/apis/{api}/configs/{apiConfig}
func (o LookupGatewayResultOutput) ApiConfig() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.ApiConfig }).(pulumi.StringOutput)
}

// Created time.
func (o LookupGatewayResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The default API Gateway host name of the form `{gateway_id}-{hash}.{region_code}.gateway.dev`.
func (o LookupGatewayResultOutput) DefaultHostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.DefaultHostname }).(pulumi.StringOutput)
}

// Optional. Display name.
func (o LookupGatewayResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
func (o LookupGatewayResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupGatewayResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource name of the Gateway. Format: projects/{project}/locations/{location}/gateways/{gateway}
func (o LookupGatewayResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.Name }).(pulumi.StringOutput)
}

// The current state of the Gateway.
func (o LookupGatewayResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.State }).(pulumi.StringOutput)
}

// Updated time.
func (o LookupGatewayResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGatewayResultOutput{})
}
