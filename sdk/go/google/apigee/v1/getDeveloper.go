// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the developer details, including the developer's name, email address, apps, and other information. **Note**: The response includes only the first 100 developer apps.
func LookupDeveloper(ctx *pulumi.Context, args *LookupDeveloperArgs, opts ...pulumi.InvokeOption) (*LookupDeveloperResult, error) {
	var rv LookupDeveloperResult
	err := ctx.Invoke("google-native:apigee/v1:getDeveloper", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDeveloperArgs struct {
	Action         *string `pulumi:"action"`
	DeveloperId    string  `pulumi:"developerId"`
	OrganizationId string  `pulumi:"organizationId"`
}

type LookupDeveloperResult struct {
	// Access type.
	AccessType string `pulumi:"accessType"`
	// Developer app family.
	AppFamily string `pulumi:"appFamily"`
	// List of apps associated with the developer.
	Apps []string `pulumi:"apps"`
	// Optional. Developer attributes (name/value pairs). The custom attribute limit is 18.
	Attributes []GoogleCloudApigeeV1AttributeResponse `pulumi:"attributes"`
	// List of companies associated with the developer.
	Companies []string `pulumi:"companies"`
	// Time at which the developer was created in milliseconds since epoch.
	CreatedAt string `pulumi:"createdAt"`
	// ID of the developer. **Note**: IDs are generated internally by Apigee and are not guaranteed to stay the same over time.
	DeveloperId string `pulumi:"developerId"`
	// Email address of the developer. This value is used to uniquely identify the developer in Apigee hybrid. Note that the email address has to be in lowercase only.
	Email string `pulumi:"email"`
	// First name of the developer.
	FirstName string `pulumi:"firstName"`
	// Time at which the developer was last modified in milliseconds since epoch.
	LastModifiedAt string `pulumi:"lastModifiedAt"`
	// Last name of the developer.
	LastName string `pulumi:"lastName"`
	// Name of the Apigee organization in which the developer resides.
	OrganizationName string `pulumi:"organizationName"`
	// Status of the developer. Valid values are `active` and `inactive`.
	Status string `pulumi:"status"`
	// User name of the developer. Not used by Apigee hybrid.
	UserName string `pulumi:"userName"`
}

func LookupDeveloperOutput(ctx *pulumi.Context, args LookupDeveloperOutputArgs, opts ...pulumi.InvokeOption) LookupDeveloperResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDeveloperResult, error) {
			args := v.(LookupDeveloperArgs)
			r, err := LookupDeveloper(ctx, &args, opts...)
			var s LookupDeveloperResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDeveloperResultOutput)
}

type LookupDeveloperOutputArgs struct {
	Action         pulumi.StringPtrInput `pulumi:"action"`
	DeveloperId    pulumi.StringInput    `pulumi:"developerId"`
	OrganizationId pulumi.StringInput    `pulumi:"organizationId"`
}

func (LookupDeveloperOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeveloperArgs)(nil)).Elem()
}

type LookupDeveloperResultOutput struct{ *pulumi.OutputState }

func (LookupDeveloperResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeveloperResult)(nil)).Elem()
}

func (o LookupDeveloperResultOutput) ToLookupDeveloperResultOutput() LookupDeveloperResultOutput {
	return o
}

func (o LookupDeveloperResultOutput) ToLookupDeveloperResultOutputWithContext(ctx context.Context) LookupDeveloperResultOutput {
	return o
}

// Access type.
func (o LookupDeveloperResultOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeveloperResult) string { return v.AccessType }).(pulumi.StringOutput)
}

// Developer app family.
func (o LookupDeveloperResultOutput) AppFamily() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeveloperResult) string { return v.AppFamily }).(pulumi.StringOutput)
}

// List of apps associated with the developer.
func (o LookupDeveloperResultOutput) Apps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDeveloperResult) []string { return v.Apps }).(pulumi.StringArrayOutput)
}

// Optional. Developer attributes (name/value pairs). The custom attribute limit is 18.
func (o LookupDeveloperResultOutput) Attributes() GoogleCloudApigeeV1AttributeResponseArrayOutput {
	return o.ApplyT(func(v LookupDeveloperResult) []GoogleCloudApigeeV1AttributeResponse { return v.Attributes }).(GoogleCloudApigeeV1AttributeResponseArrayOutput)
}

// List of companies associated with the developer.
func (o LookupDeveloperResultOutput) Companies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDeveloperResult) []string { return v.Companies }).(pulumi.StringArrayOutput)
}

// Time at which the developer was created in milliseconds since epoch.
func (o LookupDeveloperResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeveloperResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// ID of the developer. **Note**: IDs are generated internally by Apigee and are not guaranteed to stay the same over time.
func (o LookupDeveloperResultOutput) DeveloperId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeveloperResult) string { return v.DeveloperId }).(pulumi.StringOutput)
}

// Email address of the developer. This value is used to uniquely identify the developer in Apigee hybrid. Note that the email address has to be in lowercase only.
func (o LookupDeveloperResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeveloperResult) string { return v.Email }).(pulumi.StringOutput)
}

// First name of the developer.
func (o LookupDeveloperResultOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeveloperResult) string { return v.FirstName }).(pulumi.StringOutput)
}

// Time at which the developer was last modified in milliseconds since epoch.
func (o LookupDeveloperResultOutput) LastModifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeveloperResult) string { return v.LastModifiedAt }).(pulumi.StringOutput)
}

// Last name of the developer.
func (o LookupDeveloperResultOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeveloperResult) string { return v.LastName }).(pulumi.StringOutput)
}

// Name of the Apigee organization in which the developer resides.
func (o LookupDeveloperResultOutput) OrganizationName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeveloperResult) string { return v.OrganizationName }).(pulumi.StringOutput)
}

// Status of the developer. Valid values are `active` and `inactive`.
func (o LookupDeveloperResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeveloperResult) string { return v.Status }).(pulumi.StringOutput)
}

// User name of the developer. Not used by Apigee hybrid.
func (o LookupDeveloperResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeveloperResult) string { return v.UserName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeveloperResultOutput{})
}
