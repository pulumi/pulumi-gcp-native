// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets the details of a NAT address. **Note:** Not supported for Apigee hybrid.
func LookupNatAddress(ctx *pulumi.Context, args *LookupNatAddressArgs, opts ...pulumi.InvokeOption) (*LookupNatAddressResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNatAddressResult
	err := ctx.Invoke("google-native:apigee/v1:getNatAddress", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupNatAddressArgs struct {
	InstanceId     string `pulumi:"instanceId"`
	NatAddressId   string `pulumi:"natAddressId"`
	OrganizationId string `pulumi:"organizationId"`
}

type LookupNatAddressResult struct {
	// The static IPV4 address.
	IpAddress string `pulumi:"ipAddress"`
	// Resource ID of the NAT address.
	Name string `pulumi:"name"`
	// State of the nat address.
	State string `pulumi:"state"`
}

func LookupNatAddressOutput(ctx *pulumi.Context, args LookupNatAddressOutputArgs, opts ...pulumi.InvokeOption) LookupNatAddressResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNatAddressResult, error) {
			args := v.(LookupNatAddressArgs)
			r, err := LookupNatAddress(ctx, &args, opts...)
			var s LookupNatAddressResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNatAddressResultOutput)
}

type LookupNatAddressOutputArgs struct {
	InstanceId     pulumi.StringInput `pulumi:"instanceId"`
	NatAddressId   pulumi.StringInput `pulumi:"natAddressId"`
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
}

func (LookupNatAddressOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNatAddressArgs)(nil)).Elem()
}

type LookupNatAddressResultOutput struct{ *pulumi.OutputState }

func (LookupNatAddressResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNatAddressResult)(nil)).Elem()
}

func (o LookupNatAddressResultOutput) ToLookupNatAddressResultOutput() LookupNatAddressResultOutput {
	return o
}

func (o LookupNatAddressResultOutput) ToLookupNatAddressResultOutputWithContext(ctx context.Context) LookupNatAddressResultOutput {
	return o
}

func (o LookupNatAddressResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupNatAddressResult] {
	return pulumix.Output[LookupNatAddressResult]{
		OutputState: o.OutputState,
	}
}

// The static IPV4 address.
func (o LookupNatAddressResultOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNatAddressResult) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Resource ID of the NAT address.
func (o LookupNatAddressResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNatAddressResult) string { return v.Name }).(pulumi.StringOutput)
}

// State of the nat address.
func (o LookupNatAddressResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNatAddressResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNatAddressResultOutput{})
}
