// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a TargetServer in the specified environment.
type OrganizationEnvironmentTargetserver struct {
	pulumi.CustomResourceState
}

// NewOrganizationEnvironmentTargetserver registers a new resource with the given unique name, arguments, and options.
func NewOrganizationEnvironmentTargetserver(ctx *pulumi.Context,
	name string, args *OrganizationEnvironmentTargetserverArgs, opts ...pulumi.ResourceOption) (*OrganizationEnvironmentTargetserver, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentsId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentsId'")
	}
	if args.OrganizationsId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationsId'")
	}
	if args.TargetserversId == nil {
		return nil, errors.New("invalid value for required argument 'TargetserversId'")
	}
	var resource OrganizationEnvironmentTargetserver
	err := ctx.RegisterResource("google-cloud:apigee/v1:OrganizationEnvironmentTargetserver", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationEnvironmentTargetserver gets an existing OrganizationEnvironmentTargetserver resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationEnvironmentTargetserver(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationEnvironmentTargetserverState, opts ...pulumi.ResourceOption) (*OrganizationEnvironmentTargetserver, error) {
	var resource OrganizationEnvironmentTargetserver
	err := ctx.ReadResource("google-cloud:apigee/v1:OrganizationEnvironmentTargetserver", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationEnvironmentTargetserver resources.
type organizationEnvironmentTargetserverState struct {
}

type OrganizationEnvironmentTargetserverState struct {
}

func (OrganizationEnvironmentTargetserverState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvironmentTargetserverState)(nil)).Elem()
}

type organizationEnvironmentTargetserverArgs struct {
	// Optional. A human-readable description of this TargetServer.
	Description    *string `pulumi:"description"`
	EnvironmentsId string  `pulumi:"environmentsId"`
	// Required. The host name this target connects to. Value must be a valid hostname as described by RFC-1123.
	Host *string `pulumi:"host"`
	// Optional. Enabling/disabling a TargetServer is useful when TargetServers are used in load balancing configurations, and one or more TargetServers need to taken out of rotation periodically. Defaults to true.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Required. The resource id of this target server. Values must match the regular expression
	Name            *string `pulumi:"name"`
	OrganizationsId string  `pulumi:"organizationsId"`
	// Required. The port number this target connects to on the given host. Value must be between 1 and 65535, inclusive.
	Port *int `pulumi:"port"`
	// Optional. Specifies TLS configuration info for this TargetServer. The JSON name is `sSLInfo` for legacy/backwards compatibility reasons -- Edge originally supported SSL, and the name is still used for TLS configuration.
	SSLInfo         *GoogleCloudApigeeV1TlsInfo `pulumi:"sSLInfo"`
	TargetserversId string                      `pulumi:"targetserversId"`
}

// The set of arguments for constructing a OrganizationEnvironmentTargetserver resource.
type OrganizationEnvironmentTargetserverArgs struct {
	// Optional. A human-readable description of this TargetServer.
	Description    pulumi.StringPtrInput
	EnvironmentsId pulumi.StringInput
	// Required. The host name this target connects to. Value must be a valid hostname as described by RFC-1123.
	Host pulumi.StringPtrInput
	// Optional. Enabling/disabling a TargetServer is useful when TargetServers are used in load balancing configurations, and one or more TargetServers need to taken out of rotation periodically. Defaults to true.
	IsEnabled pulumi.BoolPtrInput
	// Required. The resource id of this target server. Values must match the regular expression
	Name            pulumi.StringPtrInput
	OrganizationsId pulumi.StringInput
	// Required. The port number this target connects to on the given host. Value must be between 1 and 65535, inclusive.
	Port pulumi.IntPtrInput
	// Optional. Specifies TLS configuration info for this TargetServer. The JSON name is `sSLInfo` for legacy/backwards compatibility reasons -- Edge originally supported SSL, and the name is still used for TLS configuration.
	SSLInfo         GoogleCloudApigeeV1TlsInfoPtrInput
	TargetserversId pulumi.StringInput
}

func (OrganizationEnvironmentTargetserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvironmentTargetserverArgs)(nil)).Elem()
}

type OrganizationEnvironmentTargetserverInput interface {
	pulumi.Input

	ToOrganizationEnvironmentTargetserverOutput() OrganizationEnvironmentTargetserverOutput
	ToOrganizationEnvironmentTargetserverOutputWithContext(ctx context.Context) OrganizationEnvironmentTargetserverOutput
}

func (*OrganizationEnvironmentTargetserver) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationEnvironmentTargetserver)(nil))
}

func (i *OrganizationEnvironmentTargetserver) ToOrganizationEnvironmentTargetserverOutput() OrganizationEnvironmentTargetserverOutput {
	return i.ToOrganizationEnvironmentTargetserverOutputWithContext(context.Background())
}

func (i *OrganizationEnvironmentTargetserver) ToOrganizationEnvironmentTargetserverOutputWithContext(ctx context.Context) OrganizationEnvironmentTargetserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationEnvironmentTargetserverOutput)
}

type OrganizationEnvironmentTargetserverOutput struct {
	*pulumi.OutputState
}

func (OrganizationEnvironmentTargetserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationEnvironmentTargetserver)(nil))
}

func (o OrganizationEnvironmentTargetserverOutput) ToOrganizationEnvironmentTargetserverOutput() OrganizationEnvironmentTargetserverOutput {
	return o
}

func (o OrganizationEnvironmentTargetserverOutput) ToOrganizationEnvironmentTargetserverOutputWithContext(ctx context.Context) OrganizationEnvironmentTargetserverOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationEnvironmentTargetserverOutput{})
}
