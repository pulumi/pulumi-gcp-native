// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get security report status If the query is still in progress, the `state` is set to "running" After the query has completed successfully, `state` is set to "completed"
func LookupSecurityReport(ctx *pulumi.Context, args *LookupSecurityReportArgs, opts ...pulumi.InvokeOption) (*LookupSecurityReportResult, error) {
	var rv LookupSecurityReportResult
	err := ctx.Invoke("google-native:apigee/v1:getSecurityReport", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSecurityReportArgs struct {
	EnvironmentId    string `pulumi:"environmentId"`
	OrganizationId   string `pulumi:"organizationId"`
	SecurityReportId string `pulumi:"securityReportId"`
}

type LookupSecurityReportResult struct {
	// Creation time of the query.
	Created string `pulumi:"created"`
	// Display Name specified by the user.
	DisplayName string `pulumi:"displayName"`
	// Hostname is available only when query is executed at host level.
	EnvgroupHostname string `pulumi:"envgroupHostname"`
	// Error is set when query fails.
	Error string `pulumi:"error"`
	// ExecutionTime is available only after the query is completed.
	ExecutionTime string `pulumi:"executionTime"`
	// Contains information like metrics, dimenstions etc of the Security Report.
	QueryParams GoogleCloudApigeeV1SecurityReportMetadataResponse `pulumi:"queryParams"`
	// Report Definition ID.
	ReportDefinitionId string `pulumi:"reportDefinitionId"`
	// Result is available only after the query is completed.
	Result GoogleCloudApigeeV1SecurityReportResultMetadataResponse `pulumi:"result"`
	// ResultFileSize is available only after the query is completed.
	ResultFileSize string `pulumi:"resultFileSize"`
	// ResultRows is available only after the query is completed.
	ResultRows string `pulumi:"resultRows"`
	// Self link of the query. Example: `/organizations/myorg/environments/myenv/securityReports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd` or following format if query is running at host level: `/organizations/myorg/hostSecurityReports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`
	Self string `pulumi:"self"`
	// Query state could be "enqueued", "running", "completed", "failed".
	State string `pulumi:"state"`
	// Last updated timestamp for the query.
	Updated string `pulumi:"updated"`
}

func LookupSecurityReportOutput(ctx *pulumi.Context, args LookupSecurityReportOutputArgs, opts ...pulumi.InvokeOption) LookupSecurityReportResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSecurityReportResult, error) {
			args := v.(LookupSecurityReportArgs)
			r, err := LookupSecurityReport(ctx, &args, opts...)
			var s LookupSecurityReportResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSecurityReportResultOutput)
}

type LookupSecurityReportOutputArgs struct {
	EnvironmentId    pulumi.StringInput `pulumi:"environmentId"`
	OrganizationId   pulumi.StringInput `pulumi:"organizationId"`
	SecurityReportId pulumi.StringInput `pulumi:"securityReportId"`
}

func (LookupSecurityReportOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityReportArgs)(nil)).Elem()
}

type LookupSecurityReportResultOutput struct{ *pulumi.OutputState }

func (LookupSecurityReportResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityReportResult)(nil)).Elem()
}

func (o LookupSecurityReportResultOutput) ToLookupSecurityReportResultOutput() LookupSecurityReportResultOutput {
	return o
}

func (o LookupSecurityReportResultOutput) ToLookupSecurityReportResultOutputWithContext(ctx context.Context) LookupSecurityReportResultOutput {
	return o
}

// Creation time of the query.
func (o LookupSecurityReportResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityReportResult) string { return v.Created }).(pulumi.StringOutput)
}

// Display Name specified by the user.
func (o LookupSecurityReportResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityReportResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Hostname is available only when query is executed at host level.
func (o LookupSecurityReportResultOutput) EnvgroupHostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityReportResult) string { return v.EnvgroupHostname }).(pulumi.StringOutput)
}

// Error is set when query fails.
func (o LookupSecurityReportResultOutput) Error() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityReportResult) string { return v.Error }).(pulumi.StringOutput)
}

// ExecutionTime is available only after the query is completed.
func (o LookupSecurityReportResultOutput) ExecutionTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityReportResult) string { return v.ExecutionTime }).(pulumi.StringOutput)
}

// Contains information like metrics, dimenstions etc of the Security Report.
func (o LookupSecurityReportResultOutput) QueryParams() GoogleCloudApigeeV1SecurityReportMetadataResponseOutput {
	return o.ApplyT(func(v LookupSecurityReportResult) GoogleCloudApigeeV1SecurityReportMetadataResponse {
		return v.QueryParams
	}).(GoogleCloudApigeeV1SecurityReportMetadataResponseOutput)
}

// Report Definition ID.
func (o LookupSecurityReportResultOutput) ReportDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityReportResult) string { return v.ReportDefinitionId }).(pulumi.StringOutput)
}

// Result is available only after the query is completed.
func (o LookupSecurityReportResultOutput) Result() GoogleCloudApigeeV1SecurityReportResultMetadataResponseOutput {
	return o.ApplyT(func(v LookupSecurityReportResult) GoogleCloudApigeeV1SecurityReportResultMetadataResponse {
		return v.Result
	}).(GoogleCloudApigeeV1SecurityReportResultMetadataResponseOutput)
}

// ResultFileSize is available only after the query is completed.
func (o LookupSecurityReportResultOutput) ResultFileSize() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityReportResult) string { return v.ResultFileSize }).(pulumi.StringOutput)
}

// ResultRows is available only after the query is completed.
func (o LookupSecurityReportResultOutput) ResultRows() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityReportResult) string { return v.ResultRows }).(pulumi.StringOutput)
}

// Self link of the query. Example: `/organizations/myorg/environments/myenv/securityReports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd` or following format if query is running at host level: `/organizations/myorg/hostSecurityReports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`
func (o LookupSecurityReportResultOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityReportResult) string { return v.Self }).(pulumi.StringOutput)
}

// Query state could be "enqueued", "running", "completed", "failed".
func (o LookupSecurityReportResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityReportResult) string { return v.State }).(pulumi.StringOutput)
}

// Last updated timestamp for the query.
func (o LookupSecurityReportResultOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityReportResult) string { return v.Updated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecurityReportResultOutput{})
}
