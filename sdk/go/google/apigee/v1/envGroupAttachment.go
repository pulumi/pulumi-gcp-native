// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new attachment of an environment to an environment group.
type EnvGroupAttachment struct {
	pulumi.CustomResourceState

	// The time at which the environment group attachment was created as milliseconds since epoch.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Required. ID of the attached environment.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// ID of the environment group attachment.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewEnvGroupAttachment registers a new resource with the given unique name, arguments, and options.
func NewEnvGroupAttachment(ctx *pulumi.Context,
	name string, args *EnvGroupAttachmentArgs, opts ...pulumi.ResourceOption) (*EnvGroupAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvgroupId == nil {
		return nil, errors.New("invalid value for required argument 'EnvgroupId'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	var resource EnvGroupAttachment
	err := ctx.RegisterResource("google-native:apigee/v1:EnvGroupAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvGroupAttachment gets an existing EnvGroupAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvGroupAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvGroupAttachmentState, opts ...pulumi.ResourceOption) (*EnvGroupAttachment, error) {
	var resource EnvGroupAttachment
	err := ctx.ReadResource("google-native:apigee/v1:EnvGroupAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvGroupAttachment resources.
type envGroupAttachmentState struct {
	// The time at which the environment group attachment was created as milliseconds since epoch.
	CreatedAt *string `pulumi:"createdAt"`
	// Required. ID of the attached environment.
	Environment *string `pulumi:"environment"`
	// ID of the environment group attachment.
	Name *string `pulumi:"name"`
}

type EnvGroupAttachmentState struct {
	// The time at which the environment group attachment was created as milliseconds since epoch.
	CreatedAt pulumi.StringPtrInput
	// Required. ID of the attached environment.
	Environment pulumi.StringPtrInput
	// ID of the environment group attachment.
	Name pulumi.StringPtrInput
}

func (EnvGroupAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*envGroupAttachmentState)(nil)).Elem()
}

type envGroupAttachmentArgs struct {
	EnvgroupId string `pulumi:"envgroupId"`
	// Required. ID of the attached environment.
	Environment *string `pulumi:"environment"`
	// ID of the environment group attachment.
	Name           *string `pulumi:"name"`
	OrganizationId string  `pulumi:"organizationId"`
}

// The set of arguments for constructing a EnvGroupAttachment resource.
type EnvGroupAttachmentArgs struct {
	EnvgroupId pulumi.StringInput
	// Required. ID of the attached environment.
	Environment pulumi.StringPtrInput
	// ID of the environment group attachment.
	Name           pulumi.StringPtrInput
	OrganizationId pulumi.StringInput
}

func (EnvGroupAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*envGroupAttachmentArgs)(nil)).Elem()
}

type EnvGroupAttachmentInput interface {
	pulumi.Input

	ToEnvGroupAttachmentOutput() EnvGroupAttachmentOutput
	ToEnvGroupAttachmentOutputWithContext(ctx context.Context) EnvGroupAttachmentOutput
}

func (*EnvGroupAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvGroupAttachment)(nil))
}

func (i *EnvGroupAttachment) ToEnvGroupAttachmentOutput() EnvGroupAttachmentOutput {
	return i.ToEnvGroupAttachmentOutputWithContext(context.Background())
}

func (i *EnvGroupAttachment) ToEnvGroupAttachmentOutputWithContext(ctx context.Context) EnvGroupAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvGroupAttachmentOutput)
}

type EnvGroupAttachmentOutput struct {
	*pulumi.OutputState
}

func (EnvGroupAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvGroupAttachment)(nil))
}

func (o EnvGroupAttachmentOutput) ToEnvGroupAttachmentOutput() EnvGroupAttachmentOutput {
	return o
}

func (o EnvGroupAttachmentOutput) ToEnvGroupAttachmentOutputWithContext(ctx context.Context) EnvGroupAttachmentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(EnvGroupAttachmentOutput{})
}
