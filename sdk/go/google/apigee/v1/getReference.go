// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a Reference resource.
func LookupReference(ctx *pulumi.Context, args *LookupReferenceArgs, opts ...pulumi.InvokeOption) (*LookupReferenceResult, error) {
	var rv LookupReferenceResult
	err := ctx.Invoke("google-native:apigee/v1:getReference", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupReferenceArgs struct {
	EnvironmentId  string `pulumi:"environmentId"`
	OrganizationId string `pulumi:"organizationId"`
	ReferenceId    string `pulumi:"referenceId"`
}

type LookupReferenceResult struct {
	// Optional. A human-readable description of this reference.
	Description string `pulumi:"description"`
	// The resource id of this reference. Values must match the regular expression [\w\s\-.]+.
	Name string `pulumi:"name"`
	// The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resource_type.
	Refers string `pulumi:"refers"`
	// The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
	ResourceType string `pulumi:"resourceType"`
}

func LookupReferenceOutput(ctx *pulumi.Context, args LookupReferenceOutputArgs, opts ...pulumi.InvokeOption) LookupReferenceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupReferenceResult, error) {
			args := v.(LookupReferenceArgs)
			r, err := LookupReference(ctx, &args, opts...)
			var s LookupReferenceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupReferenceResultOutput)
}

type LookupReferenceOutputArgs struct {
	EnvironmentId  pulumi.StringInput `pulumi:"environmentId"`
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	ReferenceId    pulumi.StringInput `pulumi:"referenceId"`
}

func (LookupReferenceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReferenceArgs)(nil)).Elem()
}

type LookupReferenceResultOutput struct{ *pulumi.OutputState }

func (LookupReferenceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReferenceResult)(nil)).Elem()
}

func (o LookupReferenceResultOutput) ToLookupReferenceResultOutput() LookupReferenceResultOutput {
	return o
}

func (o LookupReferenceResultOutput) ToLookupReferenceResultOutputWithContext(ctx context.Context) LookupReferenceResultOutput {
	return o
}

// Optional. A human-readable description of this reference.
func (o LookupReferenceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReferenceResult) string { return v.Description }).(pulumi.StringOutput)
}

// The resource id of this reference. Values must match the regular expression [\w\s\-.]+.
func (o LookupReferenceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReferenceResult) string { return v.Name }).(pulumi.StringOutput)
}

// The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resource_type.
func (o LookupReferenceResultOutput) Refers() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReferenceResult) string { return v.Refers }).(pulumi.StringOutput)
}

// The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
func (o LookupReferenceResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReferenceResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReferenceResultOutput{})
}
