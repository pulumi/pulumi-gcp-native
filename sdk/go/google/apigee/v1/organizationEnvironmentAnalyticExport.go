// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Submit a data export job to be processed in the background. If the request is successful, the API returns a 201 status, a URI that can be used to retrieve the status of the export job, and the `state` value of "enqueued".
type OrganizationEnvironmentAnalyticExport struct {
	pulumi.CustomResourceState

	// Time the export job was created.
	Created pulumi.StringOutput `pulumi:"created"`
	// Name of the datastore that is the destination of the export job [datastore]
	DatastoreName pulumi.StringOutput `pulumi:"datastoreName"`
	// Description of the export job.
	Description pulumi.StringOutput `pulumi:"description"`
	// Error is set when export fails
	Error pulumi.StringOutput `pulumi:"error"`
	// Execution time for this export job. If the job is still in progress, it will be set to the amount of time that has elapsed since`created`, in seconds. Else, it will set to (`updated` - `created`), in seconds.
	ExecutionTime pulumi.StringOutput `pulumi:"executionTime"`
	// Display name of the export job.
	Name pulumi.StringOutput `pulumi:"name"`
	// Self link of the export job. A URI that can be used to retrieve the status of an export job. Example: `/organizations/myorg/environments/myenv/analytics/exports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`
	Self pulumi.StringOutput `pulumi:"self"`
	// Status of the export job. Valid values include `enqueued`, `running`, `completed`, and `failed`.
	State pulumi.StringOutput `pulumi:"state"`
	// Time the export job was last updated.
	Updated pulumi.StringOutput `pulumi:"updated"`
}

// NewOrganizationEnvironmentAnalyticExport registers a new resource with the given unique name, arguments, and options.
func NewOrganizationEnvironmentAnalyticExport(ctx *pulumi.Context,
	name string, args *OrganizationEnvironmentAnalyticExportArgs, opts ...pulumi.ResourceOption) (*OrganizationEnvironmentAnalyticExport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	if args.ExportId == nil {
		return nil, errors.New("invalid value for required argument 'ExportId'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	var resource OrganizationEnvironmentAnalyticExport
	err := ctx.RegisterResource("google-native:apigee/v1:OrganizationEnvironmentAnalyticExport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationEnvironmentAnalyticExport gets an existing OrganizationEnvironmentAnalyticExport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationEnvironmentAnalyticExport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationEnvironmentAnalyticExportState, opts ...pulumi.ResourceOption) (*OrganizationEnvironmentAnalyticExport, error) {
	var resource OrganizationEnvironmentAnalyticExport
	err := ctx.ReadResource("google-native:apigee/v1:OrganizationEnvironmentAnalyticExport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationEnvironmentAnalyticExport resources.
type organizationEnvironmentAnalyticExportState struct {
	// Time the export job was created.
	Created *string `pulumi:"created"`
	// Name of the datastore that is the destination of the export job [datastore]
	DatastoreName *string `pulumi:"datastoreName"`
	// Description of the export job.
	Description *string `pulumi:"description"`
	// Error is set when export fails
	Error *string `pulumi:"error"`
	// Execution time for this export job. If the job is still in progress, it will be set to the amount of time that has elapsed since`created`, in seconds. Else, it will set to (`updated` - `created`), in seconds.
	ExecutionTime *string `pulumi:"executionTime"`
	// Display name of the export job.
	Name *string `pulumi:"name"`
	// Self link of the export job. A URI that can be used to retrieve the status of an export job. Example: `/organizations/myorg/environments/myenv/analytics/exports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`
	Self *string `pulumi:"self"`
	// Status of the export job. Valid values include `enqueued`, `running`, `completed`, and `failed`.
	State *string `pulumi:"state"`
	// Time the export job was last updated.
	Updated *string `pulumi:"updated"`
}

type OrganizationEnvironmentAnalyticExportState struct {
	// Time the export job was created.
	Created pulumi.StringPtrInput
	// Name of the datastore that is the destination of the export job [datastore]
	DatastoreName pulumi.StringPtrInput
	// Description of the export job.
	Description pulumi.StringPtrInput
	// Error is set when export fails
	Error pulumi.StringPtrInput
	// Execution time for this export job. If the job is still in progress, it will be set to the amount of time that has elapsed since`created`, in seconds. Else, it will set to (`updated` - `created`), in seconds.
	ExecutionTime pulumi.StringPtrInput
	// Display name of the export job.
	Name pulumi.StringPtrInput
	// Self link of the export job. A URI that can be used to retrieve the status of an export job. Example: `/organizations/myorg/environments/myenv/analytics/exports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`
	Self pulumi.StringPtrInput
	// Status of the export job. Valid values include `enqueued`, `running`, `completed`, and `failed`.
	State pulumi.StringPtrInput
	// Time the export job was last updated.
	Updated pulumi.StringPtrInput
}

func (OrganizationEnvironmentAnalyticExportState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvironmentAnalyticExportState)(nil)).Elem()
}

type organizationEnvironmentAnalyticExportArgs struct {
	// Optional. Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\t`).
	CsvDelimiter *string `pulumi:"csvDelimiter"`
	// Required. Name of the preconfigured datastore.
	DatastoreName *string `pulumi:"datastoreName"`
	// Required. Date range of the data to export.
	DateRange *GoogleCloudApigeeV1DateRange `pulumi:"dateRange"`
	// Optional. Description of the export job.
	Description   *string `pulumi:"description"`
	EnvironmentId string  `pulumi:"environmentId"`
	ExportId      string  `pulumi:"exportId"`
	// Required. Display name of the export job.
	Name           *string `pulumi:"name"`
	OrganizationId string  `pulumi:"organizationId"`
	// Optional. Output format of the export. Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the `csvDelimiter` property.
	OutputFormat *string `pulumi:"outputFormat"`
}

// The set of arguments for constructing a OrganizationEnvironmentAnalyticExport resource.
type OrganizationEnvironmentAnalyticExportArgs struct {
	// Optional. Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\t`).
	CsvDelimiter pulumi.StringPtrInput
	// Required. Name of the preconfigured datastore.
	DatastoreName pulumi.StringPtrInput
	// Required. Date range of the data to export.
	DateRange GoogleCloudApigeeV1DateRangePtrInput
	// Optional. Description of the export job.
	Description   pulumi.StringPtrInput
	EnvironmentId pulumi.StringInput
	ExportId      pulumi.StringInput
	// Required. Display name of the export job.
	Name           pulumi.StringPtrInput
	OrganizationId pulumi.StringInput
	// Optional. Output format of the export. Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the `csvDelimiter` property.
	OutputFormat pulumi.StringPtrInput
}

func (OrganizationEnvironmentAnalyticExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvironmentAnalyticExportArgs)(nil)).Elem()
}

type OrganizationEnvironmentAnalyticExportInput interface {
	pulumi.Input

	ToOrganizationEnvironmentAnalyticExportOutput() OrganizationEnvironmentAnalyticExportOutput
	ToOrganizationEnvironmentAnalyticExportOutputWithContext(ctx context.Context) OrganizationEnvironmentAnalyticExportOutput
}

func (*OrganizationEnvironmentAnalyticExport) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationEnvironmentAnalyticExport)(nil))
}

func (i *OrganizationEnvironmentAnalyticExport) ToOrganizationEnvironmentAnalyticExportOutput() OrganizationEnvironmentAnalyticExportOutput {
	return i.ToOrganizationEnvironmentAnalyticExportOutputWithContext(context.Background())
}

func (i *OrganizationEnvironmentAnalyticExport) ToOrganizationEnvironmentAnalyticExportOutputWithContext(ctx context.Context) OrganizationEnvironmentAnalyticExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationEnvironmentAnalyticExportOutput)
}

type OrganizationEnvironmentAnalyticExportOutput struct {
	*pulumi.OutputState
}

func (OrganizationEnvironmentAnalyticExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationEnvironmentAnalyticExport)(nil))
}

func (o OrganizationEnvironmentAnalyticExportOutput) ToOrganizationEnvironmentAnalyticExportOutput() OrganizationEnvironmentAnalyticExportOutput {
	return o
}

func (o OrganizationEnvironmentAnalyticExportOutput) ToOrganizationEnvironmentAnalyticExportOutputWithContext(ctx context.Context) OrganizationEnvironmentAnalyticExportOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationEnvironmentAnalyticExportOutput{})
}
