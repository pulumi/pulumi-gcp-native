// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details for an API product subscription.
func LookupSubscription(ctx *pulumi.Context, args *LookupSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSubscriptionResult
	err := ctx.Invoke("google-native:apigee/v1:getSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSubscriptionArgs struct {
	DeveloperId    string `pulumi:"developerId"`
	OrganizationId string `pulumi:"organizationId"`
	SubscriptionId string `pulumi:"subscriptionId"`
}

type LookupSubscriptionResult struct {
	// Name of the API product for which the developer is purchasing a subscription.
	Apiproduct string `pulumi:"apiproduct"`
	// Time when the API product subscription was created in milliseconds since epoch.
	CreatedAt string `pulumi:"createdAt"`
	// Time when the API product subscription ends in milliseconds since epoch.
	EndTime string `pulumi:"endTime"`
	// Time when the API product subscription was last modified in milliseconds since epoch.
	LastModifiedAt string `pulumi:"lastModifiedAt"`
	// Name of the API product subscription.
	Name string `pulumi:"name"`
	// Time when the API product subscription starts in milliseconds since epoch.
	StartTime string `pulumi:"startTime"`
}

func LookupSubscriptionOutput(ctx *pulumi.Context, args LookupSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSubscriptionResult, error) {
			args := v.(LookupSubscriptionArgs)
			r, err := LookupSubscription(ctx, &args, opts...)
			var s LookupSubscriptionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSubscriptionResultOutput)
}

type LookupSubscriptionOutputArgs struct {
	DeveloperId    pulumi.StringInput `pulumi:"developerId"`
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
}

func (LookupSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubscriptionArgs)(nil)).Elem()
}

type LookupSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubscriptionResult)(nil)).Elem()
}

func (o LookupSubscriptionResultOutput) ToLookupSubscriptionResultOutput() LookupSubscriptionResultOutput {
	return o
}

func (o LookupSubscriptionResultOutput) ToLookupSubscriptionResultOutputWithContext(ctx context.Context) LookupSubscriptionResultOutput {
	return o
}

// Name of the API product for which the developer is purchasing a subscription.
func (o LookupSubscriptionResultOutput) Apiproduct() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.Apiproduct }).(pulumi.StringOutput)
}

// Time when the API product subscription was created in milliseconds since epoch.
func (o LookupSubscriptionResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Time when the API product subscription ends in milliseconds since epoch.
func (o LookupSubscriptionResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.EndTime }).(pulumi.StringOutput)
}

// Time when the API product subscription was last modified in milliseconds since epoch.
func (o LookupSubscriptionResultOutput) LastModifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.LastModifiedAt }).(pulumi.StringOutput)
}

// Name of the API product subscription.
func (o LookupSubscriptionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Time when the API product subscription starts in milliseconds since epoch.
func (o LookupSubscriptionResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscriptionResult) string { return v.StartTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSubscriptionResultOutput{})
}
