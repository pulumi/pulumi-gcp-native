// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new environment group.
type OrganizationEnvgroup struct {
	pulumi.CustomResourceState

	// The time at which the environment group was created as milliseconds since epoch.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Required. Host names for this environment group.
	Hostnames pulumi.StringArrayOutput `pulumi:"hostnames"`
	// The time at which the environment group was last updated as milliseconds since epoch.
	LastModifiedAt pulumi.StringOutput `pulumi:"lastModifiedAt"`
	// ID of the environment group.
	Name pulumi.StringOutput `pulumi:"name"`
	// State of the environment group. Values other than ACTIVE means the resource is not ready to use.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewOrganizationEnvgroup registers a new resource with the given unique name, arguments, and options.
func NewOrganizationEnvgroup(ctx *pulumi.Context,
	name string, args *OrganizationEnvgroupArgs, opts ...pulumi.ResourceOption) (*OrganizationEnvgroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	var resource OrganizationEnvgroup
	err := ctx.RegisterResource("google-native:apigee/v1:OrganizationEnvgroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationEnvgroup gets an existing OrganizationEnvgroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationEnvgroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationEnvgroupState, opts ...pulumi.ResourceOption) (*OrganizationEnvgroup, error) {
	var resource OrganizationEnvgroup
	err := ctx.ReadResource("google-native:apigee/v1:OrganizationEnvgroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationEnvgroup resources.
type organizationEnvgroupState struct {
	// The time at which the environment group was created as milliseconds since epoch.
	CreatedAt *string `pulumi:"createdAt"`
	// Required. Host names for this environment group.
	Hostnames []string `pulumi:"hostnames"`
	// The time at which the environment group was last updated as milliseconds since epoch.
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// ID of the environment group.
	Name *string `pulumi:"name"`
	// State of the environment group. Values other than ACTIVE means the resource is not ready to use.
	State *string `pulumi:"state"`
}

type OrganizationEnvgroupState struct {
	// The time at which the environment group was created as milliseconds since epoch.
	CreatedAt pulumi.StringPtrInput
	// Required. Host names for this environment group.
	Hostnames pulumi.StringArrayInput
	// The time at which the environment group was last updated as milliseconds since epoch.
	LastModifiedAt pulumi.StringPtrInput
	// ID of the environment group.
	Name pulumi.StringPtrInput
	// State of the environment group. Values other than ACTIVE means the resource is not ready to use.
	State pulumi.StringPtrInput
}

func (OrganizationEnvgroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvgroupState)(nil)).Elem()
}

type organizationEnvgroupArgs struct {
	// Required. Host names for this environment group.
	Hostnames []string `pulumi:"hostnames"`
	// ID of the environment group.
	Name           *string `pulumi:"name"`
	OrganizationId string  `pulumi:"organizationId"`
}

// The set of arguments for constructing a OrganizationEnvgroup resource.
type OrganizationEnvgroupArgs struct {
	// Required. Host names for this environment group.
	Hostnames pulumi.StringArrayInput
	// ID of the environment group.
	Name           pulumi.StringPtrInput
	OrganizationId pulumi.StringInput
}

func (OrganizationEnvgroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvgroupArgs)(nil)).Elem()
}

type OrganizationEnvgroupInput interface {
	pulumi.Input

	ToOrganizationEnvgroupOutput() OrganizationEnvgroupOutput
	ToOrganizationEnvgroupOutputWithContext(ctx context.Context) OrganizationEnvgroupOutput
}

func (*OrganizationEnvgroup) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationEnvgroup)(nil))
}

func (i *OrganizationEnvgroup) ToOrganizationEnvgroupOutput() OrganizationEnvgroupOutput {
	return i.ToOrganizationEnvgroupOutputWithContext(context.Background())
}

func (i *OrganizationEnvgroup) ToOrganizationEnvgroupOutputWithContext(ctx context.Context) OrganizationEnvgroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationEnvgroupOutput)
}

type OrganizationEnvgroupOutput struct {
	*pulumi.OutputState
}

func (OrganizationEnvgroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationEnvgroup)(nil))
}

func (o OrganizationEnvgroupOutput) ToOrganizationEnvgroupOutput() OrganizationEnvgroupOutput {
	return o
}

func (o OrganizationEnvgroupOutput) ToOrganizationEnvgroupOutputWithContext(ctx context.Context) OrganizationEnvgroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationEnvgroupOutput{})
}
