// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new data collector.
type Datacollector struct {
	pulumi.CustomResourceState

	// The time at which the data collector was created in milliseconds since the epoch.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A description of the data collector.
	Description pulumi.StringOutput `pulumi:"description"`
	// The time at which the Data Collector was last updated in milliseconds since the epoch.
	LastModifiedAt pulumi.StringOutput `pulumi:"lastModifiedAt"`
	// ID of the data collector. Must begin with `dc_`.
	Name pulumi.StringOutput `pulumi:"name"`
	// Immutable. The type of data this data collector will collect.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDatacollector registers a new resource with the given unique name, arguments, and options.
func NewDatacollector(ctx *pulumi.Context,
	name string, args *DatacollectorArgs, opts ...pulumi.ResourceOption) (*Datacollector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	var resource Datacollector
	err := ctx.RegisterResource("google-native:apigee/v1:Datacollector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatacollector gets an existing Datacollector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatacollector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatacollectorState, opts ...pulumi.ResourceOption) (*Datacollector, error) {
	var resource Datacollector
	err := ctx.ReadResource("google-native:apigee/v1:Datacollector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Datacollector resources.
type datacollectorState struct {
	// The time at which the data collector was created in milliseconds since the epoch.
	CreatedAt *string `pulumi:"createdAt"`
	// A description of the data collector.
	Description *string `pulumi:"description"`
	// The time at which the Data Collector was last updated in milliseconds since the epoch.
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// ID of the data collector. Must begin with `dc_`.
	Name *string `pulumi:"name"`
	// Immutable. The type of data this data collector will collect.
	Type *string `pulumi:"type"`
}

type DatacollectorState struct {
	// The time at which the data collector was created in milliseconds since the epoch.
	CreatedAt pulumi.StringPtrInput
	// A description of the data collector.
	Description pulumi.StringPtrInput
	// The time at which the Data Collector was last updated in milliseconds since the epoch.
	LastModifiedAt pulumi.StringPtrInput
	// ID of the data collector. Must begin with `dc_`.
	Name pulumi.StringPtrInput
	// Immutable. The type of data this data collector will collect.
	Type pulumi.StringPtrInput
}

func (DatacollectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*datacollectorState)(nil)).Elem()
}

type datacollectorArgs struct {
	DataCollectorId *string `pulumi:"dataCollectorId"`
	// A description of the data collector.
	Description *string `pulumi:"description"`
	// ID of the data collector. Must begin with `dc_`.
	Name           *string `pulumi:"name"`
	OrganizationId string  `pulumi:"organizationId"`
	// Immutable. The type of data this data collector will collect.
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a Datacollector resource.
type DatacollectorArgs struct {
	DataCollectorId pulumi.StringPtrInput
	// A description of the data collector.
	Description pulumi.StringPtrInput
	// ID of the data collector. Must begin with `dc_`.
	Name           pulumi.StringPtrInput
	OrganizationId pulumi.StringInput
	// Immutable. The type of data this data collector will collect.
	Type pulumi.StringPtrInput
}

func (DatacollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datacollectorArgs)(nil)).Elem()
}

type DatacollectorInput interface {
	pulumi.Input

	ToDatacollectorOutput() DatacollectorOutput
	ToDatacollectorOutputWithContext(ctx context.Context) DatacollectorOutput
}

func (*Datacollector) ElementType() reflect.Type {
	return reflect.TypeOf((*Datacollector)(nil))
}

func (i *Datacollector) ToDatacollectorOutput() DatacollectorOutput {
	return i.ToDatacollectorOutputWithContext(context.Background())
}

func (i *Datacollector) ToDatacollectorOutputWithContext(ctx context.Context) DatacollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatacollectorOutput)
}

type DatacollectorOutput struct {
	*pulumi.OutputState
}

func (DatacollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Datacollector)(nil))
}

func (o DatacollectorOutput) ToDatacollectorOutput() DatacollectorOutput {
	return o
}

func (o DatacollectorOutput) ToDatacollectorOutputWithContext(ctx context.Context) DatacollectorOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DatacollectorOutput{})
}
