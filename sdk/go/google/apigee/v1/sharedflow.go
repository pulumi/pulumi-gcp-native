// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Uploads a ZIP-formatted shared flow configuration bundle to an organization. If the shared flow already exists, this creates a new revision of it. If the shared flow does not exist, this creates it. Once imported, the shared flow revision must be deployed before it can be accessed at runtime. The size limit of a shared flow bundle is 15 MB.
type Sharedflow struct {
	pulumi.CustomResourceState

	// Required. Must be set to either `import` or `validate`.
	Action pulumi.StringOutput `pulumi:"action"`
	// The id of the most recently created revision for this shared flow.
	LatestRevisionId pulumi.StringOutput `pulumi:"latestRevisionId"`
	// Metadata describing the shared flow.
	MetaData GoogleCloudApigeeV1EntityMetadataResponseOutput `pulumi:"metaData"`
	// Required. The name to give the shared flow
	Name           pulumi.StringOutput `pulumi:"name"`
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// A list of revisions of this shared flow.
	Revision pulumi.StringArrayOutput `pulumi:"revision"`
}

// NewSharedflow registers a new resource with the given unique name, arguments, and options.
func NewSharedflow(ctx *pulumi.Context,
	name string, args *SharedflowArgs, opts ...pulumi.ResourceOption) (*Sharedflow, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"action",
		"name",
		"organizationId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Sharedflow
	err := ctx.RegisterResource("google-native:apigee/v1:Sharedflow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSharedflow gets an existing Sharedflow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSharedflow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SharedflowState, opts ...pulumi.ResourceOption) (*Sharedflow, error) {
	var resource Sharedflow
	err := ctx.ReadResource("google-native:apigee/v1:Sharedflow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Sharedflow resources.
type sharedflowState struct {
}

type SharedflowState struct {
}

func (SharedflowState) ElementType() reflect.Type {
	return reflect.TypeOf((*sharedflowState)(nil)).Elem()
}

type sharedflowArgs struct {
	// Required. Must be set to either `import` or `validate`.
	Action string `pulumi:"action"`
	// The HTTP Content-Type header value specifying the content type of the body.
	ContentType *string `pulumi:"contentType"`
	// The HTTP request/response body as raw binary.
	Data *string `pulumi:"data"`
	// Application specific response metadata. Must be set in the first response for streaming APIs.
	Extensions []map[string]interface{} `pulumi:"extensions"`
	// Required. The name to give the shared flow
	Name           *string `pulumi:"name"`
	OrganizationId string  `pulumi:"organizationId"`
}

// The set of arguments for constructing a Sharedflow resource.
type SharedflowArgs struct {
	// Required. Must be set to either `import` or `validate`.
	Action pulumi.StringInput
	// The HTTP Content-Type header value specifying the content type of the body.
	ContentType pulumi.StringPtrInput
	// The HTTP request/response body as raw binary.
	Data pulumi.StringPtrInput
	// Application specific response metadata. Must be set in the first response for streaming APIs.
	Extensions pulumi.MapArrayInput
	// Required. The name to give the shared flow
	Name           pulumi.StringPtrInput
	OrganizationId pulumi.StringInput
}

func (SharedflowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sharedflowArgs)(nil)).Elem()
}

type SharedflowInput interface {
	pulumi.Input

	ToSharedflowOutput() SharedflowOutput
	ToSharedflowOutputWithContext(ctx context.Context) SharedflowOutput
}

func (*Sharedflow) ElementType() reflect.Type {
	return reflect.TypeOf((**Sharedflow)(nil)).Elem()
}

func (i *Sharedflow) ToSharedflowOutput() SharedflowOutput {
	return i.ToSharedflowOutputWithContext(context.Background())
}

func (i *Sharedflow) ToSharedflowOutputWithContext(ctx context.Context) SharedflowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedflowOutput)
}

type SharedflowOutput struct{ *pulumi.OutputState }

func (SharedflowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sharedflow)(nil)).Elem()
}

func (o SharedflowOutput) ToSharedflowOutput() SharedflowOutput {
	return o
}

func (o SharedflowOutput) ToSharedflowOutputWithContext(ctx context.Context) SharedflowOutput {
	return o
}

// Required. Must be set to either `import` or `validate`.
func (o SharedflowOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *Sharedflow) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// The id of the most recently created revision for this shared flow.
func (o SharedflowOutput) LatestRevisionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Sharedflow) pulumi.StringOutput { return v.LatestRevisionId }).(pulumi.StringOutput)
}

// Metadata describing the shared flow.
func (o SharedflowOutput) MetaData() GoogleCloudApigeeV1EntityMetadataResponseOutput {
	return o.ApplyT(func(v *Sharedflow) GoogleCloudApigeeV1EntityMetadataResponseOutput { return v.MetaData }).(GoogleCloudApigeeV1EntityMetadataResponseOutput)
}

// Required. The name to give the shared flow
func (o SharedflowOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Sharedflow) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SharedflowOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Sharedflow) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// A list of revisions of this shared flow.
func (o SharedflowOutput) Revision() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Sharedflow) pulumi.StringArrayOutput { return v.Revision }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SharedflowInput)(nil)).Elem(), &Sharedflow{})
	pulumi.RegisterOutputType(SharedflowOutput{})
}
