// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a debug session.
func LookupDebugSession(ctx *pulumi.Context, args *LookupDebugSessionArgs, opts ...pulumi.InvokeOption) (*LookupDebugSessionResult, error) {
	var rv LookupDebugSessionResult
	err := ctx.Invoke("google-native:apigee/v1:getDebugSession", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDebugSessionArgs struct {
	ApiId          string `pulumi:"apiId"`
	DebugsessionId string `pulumi:"debugsessionId"`
	EnvironmentId  string `pulumi:"environmentId"`
	OrganizationId string `pulumi:"organizationId"`
	RevisionId     string `pulumi:"revisionId"`
}

type LookupDebugSessionResult struct {
	// Optional. The number of request to be traced. Min = 1, Max = 15, Default = 10.
	Count int `pulumi:"count"`
	// Optional. A conditional statement which is evaluated against the request message to determine if it should be traced. Syntax matches that of on API Proxy bundle flow Condition.
	Filter string `pulumi:"filter"`
	// A unique ID for this DebugSession.
	Name string `pulumi:"name"`
	// Optional. The time in seconds after which this DebugSession should end. This value will override the value in query param, if both are provided.
	Timeout string `pulumi:"timeout"`
	// Optional. The maximum number of bytes captured from the response payload. Min = 0, Max = 5120, Default = 5120.
	Tracesize int `pulumi:"tracesize"`
	// Optional. The length of time, in seconds, that this debug session is valid, starting from when it's received in the control plane. Min = 1, Max = 15, Default = 10.
	Validity int `pulumi:"validity"`
}
