// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the key value entry value for a key value map scoped to an organization, environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
func LookupEnvironmentEntry(ctx *pulumi.Context, args *LookupEnvironmentEntryArgs, opts ...pulumi.InvokeOption) (*LookupEnvironmentEntryResult, error) {
	var rv LookupEnvironmentEntryResult
	err := ctx.Invoke("google-native:apigee/v1:getEnvironmentEntry", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEnvironmentEntryArgs struct {
	EntryId        string `pulumi:"entryId"`
	EnvironmentId  string `pulumi:"environmentId"`
	KeyvaluemapId  string `pulumi:"keyvaluemapId"`
	OrganizationId string `pulumi:"organizationId"`
}

type LookupEnvironmentEntryResult struct {
	// Resource URI that can be used to identify the scope of the key value map entries.
	Name string `pulumi:"name"`
	// Data or payload that is being retrieved and associated with the unique key.
	Value string `pulumi:"value"`
}

func LookupEnvironmentEntryOutput(ctx *pulumi.Context, args LookupEnvironmentEntryOutputArgs, opts ...pulumi.InvokeOption) LookupEnvironmentEntryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEnvironmentEntryResult, error) {
			args := v.(LookupEnvironmentEntryArgs)
			r, err := LookupEnvironmentEntry(ctx, &args, opts...)
			var s LookupEnvironmentEntryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEnvironmentEntryResultOutput)
}

type LookupEnvironmentEntryOutputArgs struct {
	EntryId        pulumi.StringInput `pulumi:"entryId"`
	EnvironmentId  pulumi.StringInput `pulumi:"environmentId"`
	KeyvaluemapId  pulumi.StringInput `pulumi:"keyvaluemapId"`
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
}

func (LookupEnvironmentEntryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnvironmentEntryArgs)(nil)).Elem()
}

type LookupEnvironmentEntryResultOutput struct{ *pulumi.OutputState }

func (LookupEnvironmentEntryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnvironmentEntryResult)(nil)).Elem()
}

func (o LookupEnvironmentEntryResultOutput) ToLookupEnvironmentEntryResultOutput() LookupEnvironmentEntryResultOutput {
	return o
}

func (o LookupEnvironmentEntryResultOutput) ToLookupEnvironmentEntryResultOutputWithContext(ctx context.Context) LookupEnvironmentEntryResultOutput {
	return o
}

// Resource URI that can be used to identify the scope of the key value map entries.
func (o LookupEnvironmentEntryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnvironmentEntryResult) string { return v.Name }).(pulumi.StringOutput)
}

// Data or payload that is being retrieved and associated with the unique key.
func (o LookupEnvironmentEntryResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnvironmentEntryResult) string { return v.Value }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEnvironmentEntryResultOutput{})
}
