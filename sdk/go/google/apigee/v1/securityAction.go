// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// CreateSecurityAction creates a SecurityAction.
// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
// on Google Cloud even though it will be deleted from Pulumi state.
type SecurityAction struct {
	pulumi.CustomResourceState

	// Allow a request through if it matches this SecurityAction.
	Allow GoogleCloudApigeeV1SecurityActionAllowResponseOutput `pulumi:"allow"`
	// A valid SecurityAction must contain at least one condition.
	ConditionConfig GoogleCloudApigeeV1SecurityActionConditionConfigResponseOutput `pulumi:"conditionConfig"`
	// The create time for this SecurityAction.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Deny a request through if it matches this SecurityAction.
	Deny GoogleCloudApigeeV1SecurityActionDenyResponseOutput `pulumi:"deny"`
	// Optional. An optional user provided description of the SecurityAction.
	Description   pulumi.StringOutput `pulumi:"description"`
	EnvironmentId pulumi.StringOutput `pulumi:"environmentId"`
	// The expiration for this SecurityAction.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// Flag a request through if it matches this SecurityAction.
	Flag GoogleCloudApigeeV1SecurityActionFlagResponseOutput `pulumi:"flag"`
	// Immutable. This field is ignored during creation as per AIP-133. Please set the `security_action_id` field in the CreateSecurityActionRequest when creating a new SecurityAction. Format: organizations/{org}/environments/{env}/securityActions/{security_action}
	Name           pulumi.StringOutput `pulumi:"name"`
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Required. The ID to use for the SecurityAction, which will become the final component of the action's resource name. This value should be 0-61 characters, and valid format is (^[a-z]([a-z0-9-]{​0,61}[a-z0-9])?$).
	SecurityActionId pulumi.StringOutput `pulumi:"securityActionId"`
	// Only an ENABLED SecurityAction is enforced. An ENABLED SecurityAction past its expiration time will not be enforced.
	State pulumi.StringOutput `pulumi:"state"`
	// Input only. The TTL for this SecurityAction.
	Ttl pulumi.StringOutput `pulumi:"ttl"`
	// The update time for this SecurityAction. This reflects when this SecurityAction changed states.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewSecurityAction registers a new resource with the given unique name, arguments, and options.
func NewSecurityAction(ctx *pulumi.Context,
	name string, args *SecurityActionArgs, opts ...pulumi.ResourceOption) (*SecurityAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConditionConfig == nil {
		return nil, errors.New("invalid value for required argument 'ConditionConfig'")
	}
	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.SecurityActionId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityActionId'")
	}
	if args.State == nil {
		return nil, errors.New("invalid value for required argument 'State'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"environmentId",
		"organizationId",
		"securityActionId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityAction
	err := ctx.RegisterResource("google-native:apigee/v1:SecurityAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityAction gets an existing SecurityAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityActionState, opts ...pulumi.ResourceOption) (*SecurityAction, error) {
	var resource SecurityAction
	err := ctx.ReadResource("google-native:apigee/v1:SecurityAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityAction resources.
type securityActionState struct {
}

type SecurityActionState struct {
}

func (SecurityActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityActionState)(nil)).Elem()
}

type securityActionArgs struct {
	// Allow a request through if it matches this SecurityAction.
	Allow *GoogleCloudApigeeV1SecurityActionAllow `pulumi:"allow"`
	// A valid SecurityAction must contain at least one condition.
	ConditionConfig GoogleCloudApigeeV1SecurityActionConditionConfig `pulumi:"conditionConfig"`
	// Deny a request through if it matches this SecurityAction.
	Deny *GoogleCloudApigeeV1SecurityActionDeny `pulumi:"deny"`
	// Optional. An optional user provided description of the SecurityAction.
	Description   *string `pulumi:"description"`
	EnvironmentId string  `pulumi:"environmentId"`
	// The expiration for this SecurityAction.
	ExpireTime *string `pulumi:"expireTime"`
	// Flag a request through if it matches this SecurityAction.
	Flag *GoogleCloudApigeeV1SecurityActionFlag `pulumi:"flag"`
	// Immutable. This field is ignored during creation as per AIP-133. Please set the `security_action_id` field in the CreateSecurityActionRequest when creating a new SecurityAction. Format: organizations/{org}/environments/{env}/securityActions/{security_action}
	Name           *string `pulumi:"name"`
	OrganizationId string  `pulumi:"organizationId"`
	// Required. The ID to use for the SecurityAction, which will become the final component of the action's resource name. This value should be 0-61 characters, and valid format is (^[a-z]([a-z0-9-]{​0,61}[a-z0-9])?$).
	SecurityActionId string `pulumi:"securityActionId"`
	// Only an ENABLED SecurityAction is enforced. An ENABLED SecurityAction past its expiration time will not be enforced.
	State SecurityActionStateEnum `pulumi:"state"`
	// Input only. The TTL for this SecurityAction.
	Ttl *string `pulumi:"ttl"`
}

// The set of arguments for constructing a SecurityAction resource.
type SecurityActionArgs struct {
	// Allow a request through if it matches this SecurityAction.
	Allow GoogleCloudApigeeV1SecurityActionAllowPtrInput
	// A valid SecurityAction must contain at least one condition.
	ConditionConfig GoogleCloudApigeeV1SecurityActionConditionConfigInput
	// Deny a request through if it matches this SecurityAction.
	Deny GoogleCloudApigeeV1SecurityActionDenyPtrInput
	// Optional. An optional user provided description of the SecurityAction.
	Description   pulumi.StringPtrInput
	EnvironmentId pulumi.StringInput
	// The expiration for this SecurityAction.
	ExpireTime pulumi.StringPtrInput
	// Flag a request through if it matches this SecurityAction.
	Flag GoogleCloudApigeeV1SecurityActionFlagPtrInput
	// Immutable. This field is ignored during creation as per AIP-133. Please set the `security_action_id` field in the CreateSecurityActionRequest when creating a new SecurityAction. Format: organizations/{org}/environments/{env}/securityActions/{security_action}
	Name           pulumi.StringPtrInput
	OrganizationId pulumi.StringInput
	// Required. The ID to use for the SecurityAction, which will become the final component of the action's resource name. This value should be 0-61 characters, and valid format is (^[a-z]([a-z0-9-]{​0,61}[a-z0-9])?$).
	SecurityActionId pulumi.StringInput
	// Only an ENABLED SecurityAction is enforced. An ENABLED SecurityAction past its expiration time will not be enforced.
	State SecurityActionStateEnumInput
	// Input only. The TTL for this SecurityAction.
	Ttl pulumi.StringPtrInput
}

func (SecurityActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityActionArgs)(nil)).Elem()
}

type SecurityActionInput interface {
	pulumi.Input

	ToSecurityActionOutput() SecurityActionOutput
	ToSecurityActionOutputWithContext(ctx context.Context) SecurityActionOutput
}

func (*SecurityAction) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityAction)(nil)).Elem()
}

func (i *SecurityAction) ToSecurityActionOutput() SecurityActionOutput {
	return i.ToSecurityActionOutputWithContext(context.Background())
}

func (i *SecurityAction) ToSecurityActionOutputWithContext(ctx context.Context) SecurityActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityActionOutput)
}

type SecurityActionOutput struct{ *pulumi.OutputState }

func (SecurityActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityAction)(nil)).Elem()
}

func (o SecurityActionOutput) ToSecurityActionOutput() SecurityActionOutput {
	return o
}

func (o SecurityActionOutput) ToSecurityActionOutputWithContext(ctx context.Context) SecurityActionOutput {
	return o
}

// Allow a request through if it matches this SecurityAction.
func (o SecurityActionOutput) Allow() GoogleCloudApigeeV1SecurityActionAllowResponseOutput {
	return o.ApplyT(func(v *SecurityAction) GoogleCloudApigeeV1SecurityActionAllowResponseOutput { return v.Allow }).(GoogleCloudApigeeV1SecurityActionAllowResponseOutput)
}

// A valid SecurityAction must contain at least one condition.
func (o SecurityActionOutput) ConditionConfig() GoogleCloudApigeeV1SecurityActionConditionConfigResponseOutput {
	return o.ApplyT(func(v *SecurityAction) GoogleCloudApigeeV1SecurityActionConditionConfigResponseOutput {
		return v.ConditionConfig
	}).(GoogleCloudApigeeV1SecurityActionConditionConfigResponseOutput)
}

// The create time for this SecurityAction.
func (o SecurityActionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAction) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Deny a request through if it matches this SecurityAction.
func (o SecurityActionOutput) Deny() GoogleCloudApigeeV1SecurityActionDenyResponseOutput {
	return o.ApplyT(func(v *SecurityAction) GoogleCloudApigeeV1SecurityActionDenyResponseOutput { return v.Deny }).(GoogleCloudApigeeV1SecurityActionDenyResponseOutput)
}

// Optional. An optional user provided description of the SecurityAction.
func (o SecurityActionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAction) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o SecurityActionOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAction) pulumi.StringOutput { return v.EnvironmentId }).(pulumi.StringOutput)
}

// The expiration for this SecurityAction.
func (o SecurityActionOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAction) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// Flag a request through if it matches this SecurityAction.
func (o SecurityActionOutput) Flag() GoogleCloudApigeeV1SecurityActionFlagResponseOutput {
	return o.ApplyT(func(v *SecurityAction) GoogleCloudApigeeV1SecurityActionFlagResponseOutput { return v.Flag }).(GoogleCloudApigeeV1SecurityActionFlagResponseOutput)
}

// Immutable. This field is ignored during creation as per AIP-133. Please set the `security_action_id` field in the CreateSecurityActionRequest when creating a new SecurityAction. Format: organizations/{org}/environments/{env}/securityActions/{security_action}
func (o SecurityActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAction) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SecurityActionOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAction) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Required. The ID to use for the SecurityAction, which will become the final component of the action's resource name. This value should be 0-61 characters, and valid format is (^[a-z]([a-z0-9-]{​0,61}[a-z0-9])?$).
func (o SecurityActionOutput) SecurityActionId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAction) pulumi.StringOutput { return v.SecurityActionId }).(pulumi.StringOutput)
}

// Only an ENABLED SecurityAction is enforced. An ENABLED SecurityAction past its expiration time will not be enforced.
func (o SecurityActionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAction) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Input only. The TTL for this SecurityAction.
func (o SecurityActionOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAction) pulumi.StringOutput { return v.Ttl }).(pulumi.StringOutput)
}

// The update time for this SecurityAction. This reflects when this SecurityAction changed states.
func (o SecurityActionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAction) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityActionInput)(nil)).Elem(), &SecurityAction{})
	pulumi.RegisterOutputType(SecurityActionOutput{})
}
