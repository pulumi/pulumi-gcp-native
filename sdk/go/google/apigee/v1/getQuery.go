// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get query status If the query is still in progress, the `state` is set to "running" After the query has completed successfully, `state` is set to "completed"
func LookupQuery(ctx *pulumi.Context, args *LookupQueryArgs, opts ...pulumi.InvokeOption) (*LookupQueryResult, error) {
	var rv LookupQueryResult
	err := ctx.Invoke("google-native:apigee/v1:getQuery", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupQueryArgs struct {
	EnvironmentId  string `pulumi:"environmentId"`
	OrganizationId string `pulumi:"organizationId"`
	QueryId        string `pulumi:"queryId"`
}

type LookupQueryResult struct {
	// Creation time of the query.
	Created string `pulumi:"created"`
	// Hostname is available only when query is executed at host level.
	EnvgroupHostname string `pulumi:"envgroupHostname"`
	// Error is set when query fails.
	Error string `pulumi:"error"`
	// ExecutionTime is available only after the query is completed.
	ExecutionTime string `pulumi:"executionTime"`
	// Asynchronous Query Name.
	Name string `pulumi:"name"`
	// Contains information like metrics, dimenstions etc of the AsyncQuery.
	QueryParams GoogleCloudApigeeV1QueryMetadataResponse `pulumi:"queryParams"`
	// Asynchronous Report ID.
	ReportDefinitionId string `pulumi:"reportDefinitionId"`
	// Result is available only after the query is completed.
	Result GoogleCloudApigeeV1AsyncQueryResultResponse `pulumi:"result"`
	// ResultFileSize is available only after the query is completed.
	ResultFileSize string `pulumi:"resultFileSize"`
	// ResultRows is available only after the query is completed.
	ResultRows string `pulumi:"resultRows"`
	// Self link of the query. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`
	Self string `pulumi:"self"`
	// Query state could be "enqueued", "running", "completed", "failed".
	State string `pulumi:"state"`
	// Last updated timestamp for the query.
	Updated string `pulumi:"updated"`
}

func LookupQueryOutput(ctx *pulumi.Context, args LookupQueryOutputArgs, opts ...pulumi.InvokeOption) LookupQueryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupQueryResult, error) {
			args := v.(LookupQueryArgs)
			r, err := LookupQuery(ctx, &args, opts...)
			var s LookupQueryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupQueryResultOutput)
}

type LookupQueryOutputArgs struct {
	EnvironmentId  pulumi.StringInput `pulumi:"environmentId"`
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	QueryId        pulumi.StringInput `pulumi:"queryId"`
}

func (LookupQueryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueryArgs)(nil)).Elem()
}

type LookupQueryResultOutput struct{ *pulumi.OutputState }

func (LookupQueryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueryResult)(nil)).Elem()
}

func (o LookupQueryResultOutput) ToLookupQueryResultOutput() LookupQueryResultOutput {
	return o
}

func (o LookupQueryResultOutput) ToLookupQueryResultOutputWithContext(ctx context.Context) LookupQueryResultOutput {
	return o
}

// Creation time of the query.
func (o LookupQueryResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryResult) string { return v.Created }).(pulumi.StringOutput)
}

// Hostname is available only when query is executed at host level.
func (o LookupQueryResultOutput) EnvgroupHostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryResult) string { return v.EnvgroupHostname }).(pulumi.StringOutput)
}

// Error is set when query fails.
func (o LookupQueryResultOutput) Error() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryResult) string { return v.Error }).(pulumi.StringOutput)
}

// ExecutionTime is available only after the query is completed.
func (o LookupQueryResultOutput) ExecutionTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryResult) string { return v.ExecutionTime }).(pulumi.StringOutput)
}

// Asynchronous Query Name.
func (o LookupQueryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryResult) string { return v.Name }).(pulumi.StringOutput)
}

// Contains information like metrics, dimenstions etc of the AsyncQuery.
func (o LookupQueryResultOutput) QueryParams() GoogleCloudApigeeV1QueryMetadataResponseOutput {
	return o.ApplyT(func(v LookupQueryResult) GoogleCloudApigeeV1QueryMetadataResponse { return v.QueryParams }).(GoogleCloudApigeeV1QueryMetadataResponseOutput)
}

// Asynchronous Report ID.
func (o LookupQueryResultOutput) ReportDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryResult) string { return v.ReportDefinitionId }).(pulumi.StringOutput)
}

// Result is available only after the query is completed.
func (o LookupQueryResultOutput) Result() GoogleCloudApigeeV1AsyncQueryResultResponseOutput {
	return o.ApplyT(func(v LookupQueryResult) GoogleCloudApigeeV1AsyncQueryResultResponse { return v.Result }).(GoogleCloudApigeeV1AsyncQueryResultResponseOutput)
}

// ResultFileSize is available only after the query is completed.
func (o LookupQueryResultOutput) ResultFileSize() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryResult) string { return v.ResultFileSize }).(pulumi.StringOutput)
}

// ResultRows is available only after the query is completed.
func (o LookupQueryResultOutput) ResultRows() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryResult) string { return v.ResultRows }).(pulumi.StringOutput)
}

// Self link of the query. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`
func (o LookupQueryResultOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryResult) string { return v.Self }).(pulumi.StringOutput)
}

// Query state could be "enqueued", "running", "completed", "failed".
func (o LookupQueryResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryResult) string { return v.State }).(pulumi.StringOutput)
}

// Last updated timestamp for the query.
func (o LookupQueryResultOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueryResult) string { return v.Updated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQueryResultOutput{})
}
