// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets an API category.
func GetApicategory(ctx *pulumi.Context, args *GetApicategoryArgs, opts ...pulumi.InvokeOption) (*GetApicategoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetApicategoryResult
	err := ctx.Invoke("google-native:apigee/v1:getApicategory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetApicategoryArgs struct {
	ApicategoryId  string `pulumi:"apicategoryId"`
	OrganizationId string `pulumi:"organizationId"`
	SiteId         string `pulumi:"siteId"`
}

type GetApicategoryResult struct {
	// The API category resource.
	Data GoogleCloudApigeeV1ApiCategoryResponse `pulumi:"data"`
	// Unique error code for the request, if any.
	ErrorCode string `pulumi:"errorCode"`
	// Description of the operation.
	Message string `pulumi:"message"`
	// Unique ID of the request.
	RequestId string `pulumi:"requestId"`
	// Status of the operation.
	Status string `pulumi:"status"`
}

func GetApicategoryOutput(ctx *pulumi.Context, args GetApicategoryOutputArgs, opts ...pulumi.InvokeOption) GetApicategoryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetApicategoryResult, error) {
			args := v.(GetApicategoryArgs)
			r, err := GetApicategory(ctx, &args, opts...)
			var s GetApicategoryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetApicategoryResultOutput)
}

type GetApicategoryOutputArgs struct {
	ApicategoryId  pulumi.StringInput `pulumi:"apicategoryId"`
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	SiteId         pulumi.StringInput `pulumi:"siteId"`
}

func (GetApicategoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApicategoryArgs)(nil)).Elem()
}

type GetApicategoryResultOutput struct{ *pulumi.OutputState }

func (GetApicategoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApicategoryResult)(nil)).Elem()
}

func (o GetApicategoryResultOutput) ToGetApicategoryResultOutput() GetApicategoryResultOutput {
	return o
}

func (o GetApicategoryResultOutput) ToGetApicategoryResultOutputWithContext(ctx context.Context) GetApicategoryResultOutput {
	return o
}

func (o GetApicategoryResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetApicategoryResult] {
	return pulumix.Output[GetApicategoryResult]{
		OutputState: o.OutputState,
	}
}

// The API category resource.
func (o GetApicategoryResultOutput) Data() GoogleCloudApigeeV1ApiCategoryResponseOutput {
	return o.ApplyT(func(v GetApicategoryResult) GoogleCloudApigeeV1ApiCategoryResponse { return v.Data }).(GoogleCloudApigeeV1ApiCategoryResponseOutput)
}

// Unique error code for the request, if any.
func (o GetApicategoryResultOutput) ErrorCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApicategoryResult) string { return v.ErrorCode }).(pulumi.StringOutput)
}

// Description of the operation.
func (o GetApicategoryResultOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetApicategoryResult) string { return v.Message }).(pulumi.StringOutput)
}

// Unique ID of the request.
func (o GetApicategoryResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApicategoryResult) string { return v.RequestId }).(pulumi.StringOutput)
}

// Status of the operation.
func (o GetApicategoryResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetApicategoryResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetApicategoryResultOutput{})
}
