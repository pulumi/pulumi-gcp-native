// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a new category on the portal.
type OrganizationSiteApicategory struct {
	pulumi.CustomResourceState
}

// NewOrganizationSiteApicategory registers a new resource with the given unique name, arguments, and options.
func NewOrganizationSiteApicategory(ctx *pulumi.Context,
	name string, args *OrganizationSiteApicategoryArgs, opts ...pulumi.ResourceOption) (*OrganizationSiteApicategory, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApicategoriesId == nil {
		return nil, errors.New("invalid value for required argument 'ApicategoriesId'")
	}
	if args.OrganizationsId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationsId'")
	}
	if args.SitesId == nil {
		return nil, errors.New("invalid value for required argument 'SitesId'")
	}
	var resource OrganizationSiteApicategory
	err := ctx.RegisterResource("google-cloud:apigee/v1:OrganizationSiteApicategory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationSiteApicategory gets an existing OrganizationSiteApicategory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationSiteApicategory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationSiteApicategoryState, opts ...pulumi.ResourceOption) (*OrganizationSiteApicategory, error) {
	var resource OrganizationSiteApicategory
	err := ctx.ReadResource("google-cloud:apigee/v1:OrganizationSiteApicategory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationSiteApicategory resources.
type organizationSiteApicategoryState struct {
}

type OrganizationSiteApicategoryState struct {
}

func (OrganizationSiteApicategoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationSiteApicategoryState)(nil)).Elem()
}

type organizationSiteApicategoryArgs struct {
	ApicategoriesId string `pulumi:"apicategoriesId"`
	// ID of the category (a UUID).
	Id *string `pulumi:"id"`
	// Name of the category.
	Name            *string `pulumi:"name"`
	OrganizationsId string  `pulumi:"organizationsId"`
	// Name of the portal.
	SiteId  *string `pulumi:"siteId"`
	SitesId string  `pulumi:"sitesId"`
	// Time the category was last modified in milliseconds since epoch.
	UpdateTime *string `pulumi:"updateTime"`
}

// The set of arguments for constructing a OrganizationSiteApicategory resource.
type OrganizationSiteApicategoryArgs struct {
	ApicategoriesId pulumi.StringInput
	// ID of the category (a UUID).
	Id pulumi.StringPtrInput
	// Name of the category.
	Name            pulumi.StringPtrInput
	OrganizationsId pulumi.StringInput
	// Name of the portal.
	SiteId  pulumi.StringPtrInput
	SitesId pulumi.StringInput
	// Time the category was last modified in milliseconds since epoch.
	UpdateTime pulumi.StringPtrInput
}

func (OrganizationSiteApicategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationSiteApicategoryArgs)(nil)).Elem()
}

type OrganizationSiteApicategoryInput interface {
	pulumi.Input

	ToOrganizationSiteApicategoryOutput() OrganizationSiteApicategoryOutput
	ToOrganizationSiteApicategoryOutputWithContext(ctx context.Context) OrganizationSiteApicategoryOutput
}

func (*OrganizationSiteApicategory) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationSiteApicategory)(nil))
}

func (i *OrganizationSiteApicategory) ToOrganizationSiteApicategoryOutput() OrganizationSiteApicategoryOutput {
	return i.ToOrganizationSiteApicategoryOutputWithContext(context.Background())
}

func (i *OrganizationSiteApicategory) ToOrganizationSiteApicategoryOutputWithContext(ctx context.Context) OrganizationSiteApicategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSiteApicategoryOutput)
}

type OrganizationSiteApicategoryOutput struct {
	*pulumi.OutputState
}

func (OrganizationSiteApicategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationSiteApicategory)(nil))
}

func (o OrganizationSiteApicategoryOutput) ToOrganizationSiteApicategoryOutput() OrganizationSiteApicategoryOutput {
	return o
}

func (o OrganizationSiteApicategoryOutput) ToOrganizationSiteApicategoryOutputWithContext(ctx context.Context) OrganizationSiteApicategoryOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationSiteApicategoryOutput{})
}
