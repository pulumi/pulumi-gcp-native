// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the AppGroup details for the provided AppGroup name in the request URI.
func LookupAppgroup(ctx *pulumi.Context, args *LookupAppgroupArgs, opts ...pulumi.InvokeOption) (*LookupAppgroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAppgroupResult
	err := ctx.Invoke("google-native:apigee/v1:getAppgroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAppgroupArgs struct {
	AppgroupId     string `pulumi:"appgroupId"`
	OrganizationId string `pulumi:"organizationId"`
}

type LookupAppgroupResult struct {
	// Internal identifier that cannot be edited
	AppGroupId string `pulumi:"appGroupId"`
	// A list of attributes
	Attributes []GoogleCloudApigeeV1AttributeResponse `pulumi:"attributes"`
	// channel identifier identifies the owner maintaing this grouping.
	ChannelId string `pulumi:"channelId"`
	// A reference to the associated storefront/marketplace.
	ChannelUri string `pulumi:"channelUri"`
	// Created time as milliseconds since epoch.
	CreatedAt string `pulumi:"createdAt"`
	// app group name displayed in the UI
	DisplayName string `pulumi:"displayName"`
	// Modified time as milliseconds since epoch.
	LastModifiedAt string `pulumi:"lastModifiedAt"`
	// Immutable. Name of the AppGroup. Characters you can use in the name are restricted to: A-Z0-9._\-$ %.
	Name string `pulumi:"name"`
	// Immutable. the org the app group is created
	Organization string `pulumi:"organization"`
	// Valid values are `active` or `inactive`. Note that the status of the AppGroup should be updated via UpdateAppGroupRequest by setting the action as `active` or `inactive`.
	Status string `pulumi:"status"`
}

func LookupAppgroupOutput(ctx *pulumi.Context, args LookupAppgroupOutputArgs, opts ...pulumi.InvokeOption) LookupAppgroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAppgroupResult, error) {
			args := v.(LookupAppgroupArgs)
			r, err := LookupAppgroup(ctx, &args, opts...)
			var s LookupAppgroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAppgroupResultOutput)
}

type LookupAppgroupOutputArgs struct {
	AppgroupId     pulumi.StringInput `pulumi:"appgroupId"`
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
}

func (LookupAppgroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppgroupArgs)(nil)).Elem()
}

type LookupAppgroupResultOutput struct{ *pulumi.OutputState }

func (LookupAppgroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppgroupResult)(nil)).Elem()
}

func (o LookupAppgroupResultOutput) ToLookupAppgroupResultOutput() LookupAppgroupResultOutput {
	return o
}

func (o LookupAppgroupResultOutput) ToLookupAppgroupResultOutputWithContext(ctx context.Context) LookupAppgroupResultOutput {
	return o
}

// Internal identifier that cannot be edited
func (o LookupAppgroupResultOutput) AppGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppgroupResult) string { return v.AppGroupId }).(pulumi.StringOutput)
}

// A list of attributes
func (o LookupAppgroupResultOutput) Attributes() GoogleCloudApigeeV1AttributeResponseArrayOutput {
	return o.ApplyT(func(v LookupAppgroupResult) []GoogleCloudApigeeV1AttributeResponse { return v.Attributes }).(GoogleCloudApigeeV1AttributeResponseArrayOutput)
}

// channel identifier identifies the owner maintaing this grouping.
func (o LookupAppgroupResultOutput) ChannelId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppgroupResult) string { return v.ChannelId }).(pulumi.StringOutput)
}

// A reference to the associated storefront/marketplace.
func (o LookupAppgroupResultOutput) ChannelUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppgroupResult) string { return v.ChannelUri }).(pulumi.StringOutput)
}

// Created time as milliseconds since epoch.
func (o LookupAppgroupResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppgroupResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// app group name displayed in the UI
func (o LookupAppgroupResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppgroupResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Modified time as milliseconds since epoch.
func (o LookupAppgroupResultOutput) LastModifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppgroupResult) string { return v.LastModifiedAt }).(pulumi.StringOutput)
}

// Immutable. Name of the AppGroup. Characters you can use in the name are restricted to: A-Z0-9._\-$ %.
func (o LookupAppgroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppgroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// Immutable. the org the app group is created
func (o LookupAppgroupResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppgroupResult) string { return v.Organization }).(pulumi.StringOutput)
}

// Valid values are `active` or `inactive`. Note that the status of the AppGroup should be updated via UpdateAppGroupRequest by setting the action as `active` or `inactive`.
func (o LookupAppgroupResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppgroupResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAppgroupResultOutput{})
}
