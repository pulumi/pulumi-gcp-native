// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an API proxy. The API proxy created will not be accessible at runtime until it is deployed to an environment. Create a new API proxy by setting the `name` query parameter to the name of the API proxy. Import an API proxy configuration bundle stored in zip format on your local machine to your organization by doing the following: * Set the `name` query parameter to the name of the API proxy. * Set the `action` query parameter to `import`. * Set the `Content-Type` header to `multipart/form-data`. * Pass as a file the name of API proxy configuration bundle stored in zip format on your local machine using the `file` form field. **Note**: To validate the API proxy configuration bundle only without importing it, set the `action` query parameter to `validate`. When importing an API proxy configuration bundle, if the API proxy does not exist, it will be created. If the API proxy exists, then a new revision is created. Invalid API proxy configurations are rejected, and a list of validation errors is returned to the client.
type Api struct {
	pulumi.CustomResourceState

	// Action to perform when importing an API proxy configuration bundle. Set this parameter to one of the following values: * `import` to import the API proxy configuration bundle. * `validate` to validate the API proxy configuration bundle without importing it.
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// The type of the API proxy.
	ApiProxyType pulumi.StringOutput `pulumi:"apiProxyType"`
	// User labels applied to this API Proxy.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The id of the most recently created revision for this api proxy.
	LatestRevisionId pulumi.StringOutput `pulumi:"latestRevisionId"`
	// Metadata describing the API proxy.
	MetaData GoogleCloudApigeeV1EntityMetadataResponseOutput `pulumi:"metaData"`
	// Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-
	Name           pulumi.StringOutput `pulumi:"name"`
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Whether this proxy is read-only. A read-only proxy cannot have new revisions created through calls to CreateApiProxyRevision. A proxy is read-only if it was generated by an archive.
	ReadOnly pulumi.BoolOutput `pulumi:"readOnly"`
	// List of revisions defined for the API proxy.
	Revision pulumi.StringArrayOutput `pulumi:"revision"`
	// Ignored. All uploads are validated regardless of the value of this field. Maintained for compatibility with Apigee Edge API.
	Validate pulumi.BoolPtrOutput `pulumi:"validate"`
}

// NewApi registers a new resource with the given unique name, arguments, and options.
func NewApi(ctx *pulumi.Context,
	name string, args *ApiArgs, opts ...pulumi.ResourceOption) (*Api, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"organizationId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Api
	err := ctx.RegisterResource("google-native:apigee/v1:Api", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApi gets an existing Api resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiState, opts ...pulumi.ResourceOption) (*Api, error) {
	var resource Api
	err := ctx.ReadResource("google-native:apigee/v1:Api", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Api resources.
type apiState struct {
}

type ApiState struct {
}

func (ApiState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiState)(nil)).Elem()
}

type apiArgs struct {
	// Action to perform when importing an API proxy configuration bundle. Set this parameter to one of the following values: * `import` to import the API proxy configuration bundle. * `validate` to validate the API proxy configuration bundle without importing it.
	Action *string `pulumi:"action"`
	// The HTTP Content-Type header value specifying the content type of the body.
	ContentType *string `pulumi:"contentType"`
	// The HTTP request/response body as raw binary.
	Data *string `pulumi:"data"`
	// Application specific response metadata. Must be set in the first response for streaming APIs.
	Extensions []map[string]interface{} `pulumi:"extensions"`
	// File to upload.
	File pulumi.AssetOrArchive `pulumi:"file"`
	// Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-
	Name           *string `pulumi:"name"`
	OrganizationId string  `pulumi:"organizationId"`
	// Ignored. All uploads are validated regardless of the value of this field. Maintained for compatibility with Apigee Edge API.
	Validate *bool `pulumi:"validate"`
}

// The set of arguments for constructing a Api resource.
type ApiArgs struct {
	// Action to perform when importing an API proxy configuration bundle. Set this parameter to one of the following values: * `import` to import the API proxy configuration bundle. * `validate` to validate the API proxy configuration bundle without importing it.
	Action pulumi.StringPtrInput
	// The HTTP Content-Type header value specifying the content type of the body.
	ContentType pulumi.StringPtrInput
	// The HTTP request/response body as raw binary.
	Data pulumi.StringPtrInput
	// Application specific response metadata. Must be set in the first response for streaming APIs.
	Extensions pulumi.MapArrayInput
	// File to upload.
	File pulumi.AssetOrArchiveInput
	// Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-
	Name           pulumi.StringPtrInput
	OrganizationId pulumi.StringInput
	// Ignored. All uploads are validated regardless of the value of this field. Maintained for compatibility with Apigee Edge API.
	Validate pulumi.BoolPtrInput
}

func (ApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiArgs)(nil)).Elem()
}

type ApiInput interface {
	pulumi.Input

	ToApiOutput() ApiOutput
	ToApiOutputWithContext(ctx context.Context) ApiOutput
}

func (*Api) ElementType() reflect.Type {
	return reflect.TypeOf((**Api)(nil)).Elem()
}

func (i *Api) ToApiOutput() ApiOutput {
	return i.ToApiOutputWithContext(context.Background())
}

func (i *Api) ToApiOutputWithContext(ctx context.Context) ApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOutput)
}

type ApiOutput struct{ *pulumi.OutputState }

func (ApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Api)(nil)).Elem()
}

func (o ApiOutput) ToApiOutput() ApiOutput {
	return o
}

func (o ApiOutput) ToApiOutputWithContext(ctx context.Context) ApiOutput {
	return o
}

// Action to perform when importing an API proxy configuration bundle. Set this parameter to one of the following values: * `import` to import the API proxy configuration bundle. * `validate` to validate the API proxy configuration bundle without importing it.
func (o ApiOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// The type of the API proxy.
func (o ApiOutput) ApiProxyType() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.ApiProxyType }).(pulumi.StringOutput)
}

// User labels applied to this API Proxy.
func (o ApiOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Api) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The id of the most recently created revision for this api proxy.
func (o ApiOutput) LatestRevisionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.LatestRevisionId }).(pulumi.StringOutput)
}

// Metadata describing the API proxy.
func (o ApiOutput) MetaData() GoogleCloudApigeeV1EntityMetadataResponseOutput {
	return o.ApplyT(func(v *Api) GoogleCloudApigeeV1EntityMetadataResponseOutput { return v.MetaData }).(GoogleCloudApigeeV1EntityMetadataResponseOutput)
}

// Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-
func (o ApiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ApiOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Whether this proxy is read-only. A read-only proxy cannot have new revisions created through calls to CreateApiProxyRevision. A proxy is read-only if it was generated by an archive.
func (o ApiOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v *Api) pulumi.BoolOutput { return v.ReadOnly }).(pulumi.BoolOutput)
}

// List of revisions defined for the API proxy.
func (o ApiOutput) Revision() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Api) pulumi.StringArrayOutput { return v.Revision }).(pulumi.StringArrayOutput)
}

// Ignored. All uploads are validated regardless of the value of this field. Maintained for compatibility with Apigee Edge API.
func (o ApiOutput) Validate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.BoolPtrOutput { return v.Validate }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiInput)(nil)).Elem(), &Api{})
	pulumi.RegisterOutputType(ApiOutput{})
}
