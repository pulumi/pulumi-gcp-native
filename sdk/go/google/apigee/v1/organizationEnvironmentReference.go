// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a Reference in the specified environment.
type OrganizationEnvironmentReference struct {
	pulumi.CustomResourceState
}

// NewOrganizationEnvironmentReference registers a new resource with the given unique name, arguments, and options.
func NewOrganizationEnvironmentReference(ctx *pulumi.Context,
	name string, args *OrganizationEnvironmentReferenceArgs, opts ...pulumi.ResourceOption) (*OrganizationEnvironmentReference, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentsId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentsId'")
	}
	if args.OrganizationsId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationsId'")
	}
	if args.ReferencesId == nil {
		return nil, errors.New("invalid value for required argument 'ReferencesId'")
	}
	var resource OrganizationEnvironmentReference
	err := ctx.RegisterResource("google-cloud:apigee/v1:OrganizationEnvironmentReference", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationEnvironmentReference gets an existing OrganizationEnvironmentReference resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationEnvironmentReference(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationEnvironmentReferenceState, opts ...pulumi.ResourceOption) (*OrganizationEnvironmentReference, error) {
	var resource OrganizationEnvironmentReference
	err := ctx.ReadResource("google-cloud:apigee/v1:OrganizationEnvironmentReference", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationEnvironmentReference resources.
type organizationEnvironmentReferenceState struct {
}

type OrganizationEnvironmentReferenceState struct {
}

func (OrganizationEnvironmentReferenceState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvironmentReferenceState)(nil)).Elem()
}

type organizationEnvironmentReferenceArgs struct {
	// Optional. A human-readable description of this reference.
	Description    *string `pulumi:"description"`
	EnvironmentsId string  `pulumi:"environmentsId"`
	// Required. The resource id of this reference. Values must match the regular expression [\w\s\-.]+.
	Name            *string `pulumi:"name"`
	OrganizationsId string  `pulumi:"organizationsId"`
	ReferencesId    string  `pulumi:"referencesId"`
	// Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resource_type.
	Refers *string `pulumi:"refers"`
	// The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
	ResourceType *string `pulumi:"resourceType"`
}

// The set of arguments for constructing a OrganizationEnvironmentReference resource.
type OrganizationEnvironmentReferenceArgs struct {
	// Optional. A human-readable description of this reference.
	Description    pulumi.StringPtrInput
	EnvironmentsId pulumi.StringInput
	// Required. The resource id of this reference. Values must match the regular expression [\w\s\-.]+.
	Name            pulumi.StringPtrInput
	OrganizationsId pulumi.StringInput
	ReferencesId    pulumi.StringInput
	// Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resource_type.
	Refers pulumi.StringPtrInput
	// The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
	ResourceType pulumi.StringPtrInput
}

func (OrganizationEnvironmentReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvironmentReferenceArgs)(nil)).Elem()
}

type OrganizationEnvironmentReferenceInput interface {
	pulumi.Input

	ToOrganizationEnvironmentReferenceOutput() OrganizationEnvironmentReferenceOutput
	ToOrganizationEnvironmentReferenceOutputWithContext(ctx context.Context) OrganizationEnvironmentReferenceOutput
}

func (*OrganizationEnvironmentReference) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationEnvironmentReference)(nil))
}

func (i *OrganizationEnvironmentReference) ToOrganizationEnvironmentReferenceOutput() OrganizationEnvironmentReferenceOutput {
	return i.ToOrganizationEnvironmentReferenceOutputWithContext(context.Background())
}

func (i *OrganizationEnvironmentReference) ToOrganizationEnvironmentReferenceOutputWithContext(ctx context.Context) OrganizationEnvironmentReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationEnvironmentReferenceOutput)
}

type OrganizationEnvironmentReferenceOutput struct {
	*pulumi.OutputState
}

func (OrganizationEnvironmentReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationEnvironmentReference)(nil))
}

func (o OrganizationEnvironmentReferenceOutput) ToOrganizationEnvironmentReferenceOutput() OrganizationEnvironmentReferenceOutput {
	return o
}

func (o OrganizationEnvironmentReferenceOutput) ToOrganizationEnvironmentReferenceOutputWithContext(ctx context.Context) OrganizationEnvironmentReferenceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationEnvironmentReferenceOutput{})
}
