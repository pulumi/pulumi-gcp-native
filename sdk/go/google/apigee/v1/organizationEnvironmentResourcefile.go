// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a resource file. Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
type OrganizationEnvironmentResourcefile struct {
	pulumi.CustomResourceState

	// The HTTP Content-Type header value specifying the content type of the body.
	ContentType pulumi.StringOutput `pulumi:"contentType"`
	// The HTTP request/response body as raw binary.
	Data pulumi.StringOutput `pulumi:"data"`
	// Application specific response metadata. Must be set in the first response for streaming APIs.
	Extensions pulumi.StringMapArrayOutput `pulumi:"extensions"`
}

// NewOrganizationEnvironmentResourcefile registers a new resource with the given unique name, arguments, and options.
func NewOrganizationEnvironmentResourcefile(ctx *pulumi.Context,
	name string, args *OrganizationEnvironmentResourcefileArgs, opts ...pulumi.ResourceOption) (*OrganizationEnvironmentResourcefile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource OrganizationEnvironmentResourcefile
	err := ctx.RegisterResource("google-native:apigee/v1:OrganizationEnvironmentResourcefile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationEnvironmentResourcefile gets an existing OrganizationEnvironmentResourcefile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationEnvironmentResourcefile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationEnvironmentResourcefileState, opts ...pulumi.ResourceOption) (*OrganizationEnvironmentResourcefile, error) {
	var resource OrganizationEnvironmentResourcefile
	err := ctx.ReadResource("google-native:apigee/v1:OrganizationEnvironmentResourcefile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationEnvironmentResourcefile resources.
type organizationEnvironmentResourcefileState struct {
	// The HTTP Content-Type header value specifying the content type of the body.
	ContentType *string `pulumi:"contentType"`
	// The HTTP request/response body as raw binary.
	Data *string `pulumi:"data"`
	// Application specific response metadata. Must be set in the first response for streaming APIs.
	Extensions []map[string]string `pulumi:"extensions"`
}

type OrganizationEnvironmentResourcefileState struct {
	// The HTTP Content-Type header value specifying the content type of the body.
	ContentType pulumi.StringPtrInput
	// The HTTP request/response body as raw binary.
	Data pulumi.StringPtrInput
	// Application specific response metadata. Must be set in the first response for streaming APIs.
	Extensions pulumi.StringMapArrayInput
}

func (OrganizationEnvironmentResourcefileState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvironmentResourcefileState)(nil)).Elem()
}

type organizationEnvironmentResourcefileArgs struct {
	// The HTTP Content-Type header value specifying the content type of the body.
	ContentType *string `pulumi:"contentType"`
	// The HTTP request/response body as raw binary.
	Data          *string `pulumi:"data"`
	EnvironmentId string  `pulumi:"environmentId"`
	// Application specific response metadata. Must be set in the first response for streaming APIs.
	Extensions     []map[string]string `pulumi:"extensions"`
	Name           string              `pulumi:"name"`
	OrganizationId string              `pulumi:"organizationId"`
	Type           string              `pulumi:"type"`
}

// The set of arguments for constructing a OrganizationEnvironmentResourcefile resource.
type OrganizationEnvironmentResourcefileArgs struct {
	// The HTTP Content-Type header value specifying the content type of the body.
	ContentType pulumi.StringPtrInput
	// The HTTP request/response body as raw binary.
	Data          pulumi.StringPtrInput
	EnvironmentId pulumi.StringInput
	// Application specific response metadata. Must be set in the first response for streaming APIs.
	Extensions     pulumi.StringMapArrayInput
	Name           pulumi.StringInput
	OrganizationId pulumi.StringInput
	Type           pulumi.StringInput
}

func (OrganizationEnvironmentResourcefileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvironmentResourcefileArgs)(nil)).Elem()
}

type OrganizationEnvironmentResourcefileInput interface {
	pulumi.Input

	ToOrganizationEnvironmentResourcefileOutput() OrganizationEnvironmentResourcefileOutput
	ToOrganizationEnvironmentResourcefileOutputWithContext(ctx context.Context) OrganizationEnvironmentResourcefileOutput
}

func (*OrganizationEnvironmentResourcefile) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationEnvironmentResourcefile)(nil))
}

func (i *OrganizationEnvironmentResourcefile) ToOrganizationEnvironmentResourcefileOutput() OrganizationEnvironmentResourcefileOutput {
	return i.ToOrganizationEnvironmentResourcefileOutputWithContext(context.Background())
}

func (i *OrganizationEnvironmentResourcefile) ToOrganizationEnvironmentResourcefileOutputWithContext(ctx context.Context) OrganizationEnvironmentResourcefileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationEnvironmentResourcefileOutput)
}

type OrganizationEnvironmentResourcefileOutput struct {
	*pulumi.OutputState
}

func (OrganizationEnvironmentResourcefileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationEnvironmentResourcefile)(nil))
}

func (o OrganizationEnvironmentResourcefileOutput) ToOrganizationEnvironmentResourcefileOutput() OrganizationEnvironmentResourcefileOutput {
	return o
}

func (o OrganizationEnvironmentResourcefileOutput) ToOrganizationEnvironmentResourcefileOutputWithContext(ctx context.Context) OrganizationEnvironmentResourcefileOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationEnvironmentResourcefileOutput{})
}
