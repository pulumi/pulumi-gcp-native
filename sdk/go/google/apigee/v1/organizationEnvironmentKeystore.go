// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a keystore or truststore. - Keystore: Contains certificates and their associated keys. - Truststore: Contains trusted certificates used to validate a server's certificate. These certificates are typically self-signed certificates or certificates that are not signed by a trusted CA.
type OrganizationEnvironmentKeystore struct {
	pulumi.CustomResourceState

	// Aliases in this keystore.
	Aliases pulumi.StringArrayOutput `pulumi:"aliases"`
	// Required. Resource ID for this keystore. Values must match the regular expression `[\w[:space:]-.]{1,255}`.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewOrganizationEnvironmentKeystore registers a new resource with the given unique name, arguments, and options.
func NewOrganizationEnvironmentKeystore(ctx *pulumi.Context,
	name string, args *OrganizationEnvironmentKeystoreArgs, opts ...pulumi.ResourceOption) (*OrganizationEnvironmentKeystore, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	if args.KeystoreId == nil {
		return nil, errors.New("invalid value for required argument 'KeystoreId'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	var resource OrganizationEnvironmentKeystore
	err := ctx.RegisterResource("google-native:apigee/v1:OrganizationEnvironmentKeystore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationEnvironmentKeystore gets an existing OrganizationEnvironmentKeystore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationEnvironmentKeystore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationEnvironmentKeystoreState, opts ...pulumi.ResourceOption) (*OrganizationEnvironmentKeystore, error) {
	var resource OrganizationEnvironmentKeystore
	err := ctx.ReadResource("google-native:apigee/v1:OrganizationEnvironmentKeystore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationEnvironmentKeystore resources.
type organizationEnvironmentKeystoreState struct {
	// Aliases in this keystore.
	Aliases []string `pulumi:"aliases"`
	// Required. Resource ID for this keystore. Values must match the regular expression `[\w[:space:]-.]{1,255}`.
	Name *string `pulumi:"name"`
}

type OrganizationEnvironmentKeystoreState struct {
	// Aliases in this keystore.
	Aliases pulumi.StringArrayInput
	// Required. Resource ID for this keystore. Values must match the regular expression `[\w[:space:]-.]{1,255}`.
	Name pulumi.StringPtrInput
}

func (OrganizationEnvironmentKeystoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvironmentKeystoreState)(nil)).Elem()
}

type organizationEnvironmentKeystoreArgs struct {
	EnvironmentId string `pulumi:"environmentId"`
	KeystoreId    string `pulumi:"keystoreId"`
	// Required. Resource ID for this keystore. Values must match the regular expression `[\w[:space:]-.]{1,255}`.
	Name           *string `pulumi:"name"`
	OrganizationId string  `pulumi:"organizationId"`
}

// The set of arguments for constructing a OrganizationEnvironmentKeystore resource.
type OrganizationEnvironmentKeystoreArgs struct {
	EnvironmentId pulumi.StringInput
	KeystoreId    pulumi.StringInput
	// Required. Resource ID for this keystore. Values must match the regular expression `[\w[:space:]-.]{1,255}`.
	Name           pulumi.StringPtrInput
	OrganizationId pulumi.StringInput
}

func (OrganizationEnvironmentKeystoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvironmentKeystoreArgs)(nil)).Elem()
}

type OrganizationEnvironmentKeystoreInput interface {
	pulumi.Input

	ToOrganizationEnvironmentKeystoreOutput() OrganizationEnvironmentKeystoreOutput
	ToOrganizationEnvironmentKeystoreOutputWithContext(ctx context.Context) OrganizationEnvironmentKeystoreOutput
}

func (*OrganizationEnvironmentKeystore) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationEnvironmentKeystore)(nil))
}

func (i *OrganizationEnvironmentKeystore) ToOrganizationEnvironmentKeystoreOutput() OrganizationEnvironmentKeystoreOutput {
	return i.ToOrganizationEnvironmentKeystoreOutputWithContext(context.Background())
}

func (i *OrganizationEnvironmentKeystore) ToOrganizationEnvironmentKeystoreOutputWithContext(ctx context.Context) OrganizationEnvironmentKeystoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationEnvironmentKeystoreOutput)
}

type OrganizationEnvironmentKeystoreOutput struct {
	*pulumi.OutputState
}

func (OrganizationEnvironmentKeystoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationEnvironmentKeystore)(nil))
}

func (o OrganizationEnvironmentKeystoreOutput) ToOrganizationEnvironmentKeystoreOutput() OrganizationEnvironmentKeystoreOutput {
	return o
}

func (o OrganizationEnvironmentKeystoreOutput) ToOrganizationEnvironmentKeystoreOutputWithContext(ctx context.Context) OrganizationEnvironmentKeystoreOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationEnvironmentKeystoreOutput{})
}
