// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Create a new domain mapping.
type NamespaceDomainmapping struct {
	pulumi.CustomResourceState
}

// NewNamespaceDomainmapping registers a new resource with the given unique name, arguments, and options.
func NewNamespaceDomainmapping(ctx *pulumi.Context,
	name string, args *NamespaceDomainmappingArgs, opts ...pulumi.ResourceOption) (*NamespaceDomainmapping, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainmappingsId == nil {
		return nil, errors.New("invalid value for required argument 'DomainmappingsId'")
	}
	if args.NamespacesId == nil {
		return nil, errors.New("invalid value for required argument 'NamespacesId'")
	}
	var resource NamespaceDomainmapping
	err := ctx.RegisterResource("google-cloud:run/v1:NamespaceDomainmapping", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamespaceDomainmapping gets an existing NamespaceDomainmapping resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespaceDomainmapping(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamespaceDomainmappingState, opts ...pulumi.ResourceOption) (*NamespaceDomainmapping, error) {
	var resource NamespaceDomainmapping
	err := ctx.ReadResource("google-cloud:run/v1:NamespaceDomainmapping", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NamespaceDomainmapping resources.
type namespaceDomainmappingState struct {
}

type NamespaceDomainmappingState struct {
}

func (NamespaceDomainmappingState) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceDomainmappingState)(nil)).Elem()
}

type namespaceDomainmappingArgs struct {
	// The API version for this call such as "domains.cloudrun.com/v1".
	ApiVersion       *string `pulumi:"apiVersion"`
	DomainmappingsId string  `pulumi:"domainmappingsId"`
	// The kind of resource, in this case "DomainMapping".
	Kind *string `pulumi:"kind"`
	// Metadata associated with this BuildTemplate.
	Metadata     *ObjectMeta `pulumi:"metadata"`
	NamespacesId string      `pulumi:"namespacesId"`
	// The spec for this DomainMapping.
	Spec *DomainMappingSpec `pulumi:"spec"`
	// The current status of the DomainMapping.
	Status *DomainMappingStatus `pulumi:"status"`
}

// The set of arguments for constructing a NamespaceDomainmapping resource.
type NamespaceDomainmappingArgs struct {
	// The API version for this call such as "domains.cloudrun.com/v1".
	ApiVersion       pulumi.StringPtrInput
	DomainmappingsId pulumi.StringInput
	// The kind of resource, in this case "DomainMapping".
	Kind pulumi.StringPtrInput
	// Metadata associated with this BuildTemplate.
	Metadata     ObjectMetaPtrInput
	NamespacesId pulumi.StringInput
	// The spec for this DomainMapping.
	Spec DomainMappingSpecPtrInput
	// The current status of the DomainMapping.
	Status DomainMappingStatusPtrInput
}

func (NamespaceDomainmappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceDomainmappingArgs)(nil)).Elem()
}

type NamespaceDomainmappingInput interface {
	pulumi.Input

	ToNamespaceDomainmappingOutput() NamespaceDomainmappingOutput
	ToNamespaceDomainmappingOutputWithContext(ctx context.Context) NamespaceDomainmappingOutput
}

func (*NamespaceDomainmapping) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceDomainmapping)(nil))
}

func (i *NamespaceDomainmapping) ToNamespaceDomainmappingOutput() NamespaceDomainmappingOutput {
	return i.ToNamespaceDomainmappingOutputWithContext(context.Background())
}

func (i *NamespaceDomainmapping) ToNamespaceDomainmappingOutputWithContext(ctx context.Context) NamespaceDomainmappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceDomainmappingOutput)
}

type NamespaceDomainmappingOutput struct {
	*pulumi.OutputState
}

func (NamespaceDomainmappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceDomainmapping)(nil))
}

func (o NamespaceDomainmappingOutput) ToNamespaceDomainmappingOutput() NamespaceDomainmappingOutput {
	return o
}

func (o NamespaceDomainmappingOutput) ToNamespaceDomainmappingOutputWithContext(ctx context.Context) NamespaceDomainmappingOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(NamespaceDomainmappingOutput{})
}
