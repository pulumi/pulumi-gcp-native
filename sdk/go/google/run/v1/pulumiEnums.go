// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts AuditLogConfigLogTypeArgs and AuditLogConfigLogTypeOutput values.
// You can construct a concrete instance of `AuditLogConfigLogTypeInput` via:
//
//          AuditLogConfigLogTypeArgs{...}
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

// The mode of the certificate.
type DomainMappingSpecCertificateMode string

const (
	DomainMappingSpecCertificateModeCertificateModeUnspecified = DomainMappingSpecCertificateMode("CERTIFICATE_MODE_UNSPECIFIED")
	// Do not provision an HTTPS certificate.
	DomainMappingSpecCertificateModeNone = DomainMappingSpecCertificateMode("NONE")
	// Automatically provisions an HTTPS certificate via GoogleCA or LetsEncrypt.
	DomainMappingSpecCertificateModeAutomatic = DomainMappingSpecCertificateMode("AUTOMATIC")
)

func (DomainMappingSpecCertificateMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMappingSpecCertificateMode)(nil)).Elem()
}

func (e DomainMappingSpecCertificateMode) ToDomainMappingSpecCertificateModeOutput() DomainMappingSpecCertificateModeOutput {
	return pulumi.ToOutput(e).(DomainMappingSpecCertificateModeOutput)
}

func (e DomainMappingSpecCertificateMode) ToDomainMappingSpecCertificateModeOutputWithContext(ctx context.Context) DomainMappingSpecCertificateModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DomainMappingSpecCertificateModeOutput)
}

func (e DomainMappingSpecCertificateMode) ToDomainMappingSpecCertificateModePtrOutput() DomainMappingSpecCertificateModePtrOutput {
	return e.ToDomainMappingSpecCertificateModePtrOutputWithContext(context.Background())
}

func (e DomainMappingSpecCertificateMode) ToDomainMappingSpecCertificateModePtrOutputWithContext(ctx context.Context) DomainMappingSpecCertificateModePtrOutput {
	return DomainMappingSpecCertificateMode(e).ToDomainMappingSpecCertificateModeOutputWithContext(ctx).ToDomainMappingSpecCertificateModePtrOutputWithContext(ctx)
}

func (e DomainMappingSpecCertificateMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DomainMappingSpecCertificateMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DomainMappingSpecCertificateMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DomainMappingSpecCertificateMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DomainMappingSpecCertificateModeOutput struct{ *pulumi.OutputState }

func (DomainMappingSpecCertificateModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMappingSpecCertificateMode)(nil)).Elem()
}

func (o DomainMappingSpecCertificateModeOutput) ToDomainMappingSpecCertificateModeOutput() DomainMappingSpecCertificateModeOutput {
	return o
}

func (o DomainMappingSpecCertificateModeOutput) ToDomainMappingSpecCertificateModeOutputWithContext(ctx context.Context) DomainMappingSpecCertificateModeOutput {
	return o
}

func (o DomainMappingSpecCertificateModeOutput) ToDomainMappingSpecCertificateModePtrOutput() DomainMappingSpecCertificateModePtrOutput {
	return o.ToDomainMappingSpecCertificateModePtrOutputWithContext(context.Background())
}

func (o DomainMappingSpecCertificateModeOutput) ToDomainMappingSpecCertificateModePtrOutputWithContext(ctx context.Context) DomainMappingSpecCertificateModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainMappingSpecCertificateMode) *DomainMappingSpecCertificateMode {
		return &v
	}).(DomainMappingSpecCertificateModePtrOutput)
}

func (o DomainMappingSpecCertificateModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DomainMappingSpecCertificateModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DomainMappingSpecCertificateMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DomainMappingSpecCertificateModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DomainMappingSpecCertificateModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DomainMappingSpecCertificateMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DomainMappingSpecCertificateModePtrOutput struct{ *pulumi.OutputState }

func (DomainMappingSpecCertificateModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMappingSpecCertificateMode)(nil)).Elem()
}

func (o DomainMappingSpecCertificateModePtrOutput) ToDomainMappingSpecCertificateModePtrOutput() DomainMappingSpecCertificateModePtrOutput {
	return o
}

func (o DomainMappingSpecCertificateModePtrOutput) ToDomainMappingSpecCertificateModePtrOutputWithContext(ctx context.Context) DomainMappingSpecCertificateModePtrOutput {
	return o
}

func (o DomainMappingSpecCertificateModePtrOutput) Elem() DomainMappingSpecCertificateModeOutput {
	return o.ApplyT(func(v *DomainMappingSpecCertificateMode) DomainMappingSpecCertificateMode {
		if v != nil {
			return *v
		}
		var ret DomainMappingSpecCertificateMode
		return ret
	}).(DomainMappingSpecCertificateModeOutput)
}

func (o DomainMappingSpecCertificateModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DomainMappingSpecCertificateModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DomainMappingSpecCertificateMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DomainMappingSpecCertificateModeInput is an input type that accepts DomainMappingSpecCertificateModeArgs and DomainMappingSpecCertificateModeOutput values.
// You can construct a concrete instance of `DomainMappingSpecCertificateModeInput` via:
//
//          DomainMappingSpecCertificateModeArgs{...}
type DomainMappingSpecCertificateModeInput interface {
	pulumi.Input

	ToDomainMappingSpecCertificateModeOutput() DomainMappingSpecCertificateModeOutput
	ToDomainMappingSpecCertificateModeOutputWithContext(context.Context) DomainMappingSpecCertificateModeOutput
}

var domainMappingSpecCertificateModePtrType = reflect.TypeOf((**DomainMappingSpecCertificateMode)(nil)).Elem()

type DomainMappingSpecCertificateModePtrInput interface {
	pulumi.Input

	ToDomainMappingSpecCertificateModePtrOutput() DomainMappingSpecCertificateModePtrOutput
	ToDomainMappingSpecCertificateModePtrOutputWithContext(context.Context) DomainMappingSpecCertificateModePtrOutput
}

type domainMappingSpecCertificateModePtr string

func DomainMappingSpecCertificateModePtr(v string) DomainMappingSpecCertificateModePtrInput {
	return (*domainMappingSpecCertificateModePtr)(&v)
}

func (*domainMappingSpecCertificateModePtr) ElementType() reflect.Type {
	return domainMappingSpecCertificateModePtrType
}

func (in *domainMappingSpecCertificateModePtr) ToDomainMappingSpecCertificateModePtrOutput() DomainMappingSpecCertificateModePtrOutput {
	return pulumi.ToOutput(in).(DomainMappingSpecCertificateModePtrOutput)
}

func (in *domainMappingSpecCertificateModePtr) ToDomainMappingSpecCertificateModePtrOutputWithContext(ctx context.Context) DomainMappingSpecCertificateModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DomainMappingSpecCertificateModePtrOutput)
}

// Resource record type. Example: `AAAA`.
type ResourceRecordType string

const (
	// An unknown resource record.
	ResourceRecordTypeRecordTypeUnspecified = ResourceRecordType("RECORD_TYPE_UNSPECIFIED")
	// An A resource record. Data is an IPv4 address.
	ResourceRecordTypeA = ResourceRecordType("A")
	// An AAAA resource record. Data is an IPv6 address.
	ResourceRecordTypeAaaa = ResourceRecordType("AAAA")
	// A CNAME resource record. Data is a domain name to be aliased.
	ResourceRecordTypeCname = ResourceRecordType("CNAME")
)

func (ResourceRecordType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRecordType)(nil)).Elem()
}

func (e ResourceRecordType) ToResourceRecordTypeOutput() ResourceRecordTypeOutput {
	return pulumi.ToOutput(e).(ResourceRecordTypeOutput)
}

func (e ResourceRecordType) ToResourceRecordTypeOutputWithContext(ctx context.Context) ResourceRecordTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceRecordTypeOutput)
}

func (e ResourceRecordType) ToResourceRecordTypePtrOutput() ResourceRecordTypePtrOutput {
	return e.ToResourceRecordTypePtrOutputWithContext(context.Background())
}

func (e ResourceRecordType) ToResourceRecordTypePtrOutputWithContext(ctx context.Context) ResourceRecordTypePtrOutput {
	return ResourceRecordType(e).ToResourceRecordTypeOutputWithContext(ctx).ToResourceRecordTypePtrOutputWithContext(ctx)
}

func (e ResourceRecordType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceRecordType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceRecordType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceRecordType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceRecordTypeOutput struct{ *pulumi.OutputState }

func (ResourceRecordTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRecordType)(nil)).Elem()
}

func (o ResourceRecordTypeOutput) ToResourceRecordTypeOutput() ResourceRecordTypeOutput {
	return o
}

func (o ResourceRecordTypeOutput) ToResourceRecordTypeOutputWithContext(ctx context.Context) ResourceRecordTypeOutput {
	return o
}

func (o ResourceRecordTypeOutput) ToResourceRecordTypePtrOutput() ResourceRecordTypePtrOutput {
	return o.ToResourceRecordTypePtrOutputWithContext(context.Background())
}

func (o ResourceRecordTypeOutput) ToResourceRecordTypePtrOutputWithContext(ctx context.Context) ResourceRecordTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceRecordType) *ResourceRecordType {
		return &v
	}).(ResourceRecordTypePtrOutput)
}

func (o ResourceRecordTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceRecordTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceRecordType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceRecordTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceRecordTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceRecordType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceRecordTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceRecordTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRecordType)(nil)).Elem()
}

func (o ResourceRecordTypePtrOutput) ToResourceRecordTypePtrOutput() ResourceRecordTypePtrOutput {
	return o
}

func (o ResourceRecordTypePtrOutput) ToResourceRecordTypePtrOutputWithContext(ctx context.Context) ResourceRecordTypePtrOutput {
	return o
}

func (o ResourceRecordTypePtrOutput) Elem() ResourceRecordTypeOutput {
	return o.ApplyT(func(v *ResourceRecordType) ResourceRecordType {
		if v != nil {
			return *v
		}
		var ret ResourceRecordType
		return ret
	}).(ResourceRecordTypeOutput)
}

func (o ResourceRecordTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceRecordTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceRecordType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceRecordTypeInput is an input type that accepts ResourceRecordTypeArgs and ResourceRecordTypeOutput values.
// You can construct a concrete instance of `ResourceRecordTypeInput` via:
//
//          ResourceRecordTypeArgs{...}
type ResourceRecordTypeInput interface {
	pulumi.Input

	ToResourceRecordTypeOutput() ResourceRecordTypeOutput
	ToResourceRecordTypeOutputWithContext(context.Context) ResourceRecordTypeOutput
}

var resourceRecordTypePtrType = reflect.TypeOf((**ResourceRecordType)(nil)).Elem()

type ResourceRecordTypePtrInput interface {
	pulumi.Input

	ToResourceRecordTypePtrOutput() ResourceRecordTypePtrOutput
	ToResourceRecordTypePtrOutputWithContext(context.Context) ResourceRecordTypePtrOutput
}

type resourceRecordTypePtr string

func ResourceRecordTypePtr(v string) ResourceRecordTypePtrInput {
	return (*resourceRecordTypePtr)(&v)
}

func (*resourceRecordTypePtr) ElementType() reflect.Type {
	return resourceRecordTypePtrType
}

func (in *resourceRecordTypePtr) ToResourceRecordTypePtrOutput() ResourceRecordTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceRecordTypePtrOutput)
}

func (in *resourceRecordTypePtr) ToResourceRecordTypePtrOutputWithContext(ctx context.Context) ResourceRecordTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceRecordTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMappingSpecCertificateModeInput)(nil)).Elem(), DomainMappingSpecCertificateMode("CERTIFICATE_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMappingSpecCertificateModePtrInput)(nil)).Elem(), DomainMappingSpecCertificateMode("CERTIFICATE_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceRecordTypeInput)(nil)).Elem(), ResourceRecordType("RECORD_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceRecordTypePtrInput)(nil)).Elem(), ResourceRecordType("RECORD_TYPE_UNSPECIFIED"))
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(DomainMappingSpecCertificateModeOutput{})
	pulumi.RegisterOutputType(DomainMappingSpecCertificateModePtrOutput{})
	pulumi.RegisterOutputType(ResourceRecordTypeOutput{})
	pulumi.RegisterOutputType(ResourceRecordTypePtrOutput{})
}
