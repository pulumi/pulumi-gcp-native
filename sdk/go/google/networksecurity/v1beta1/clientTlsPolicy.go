// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new ClientTlsPolicy in a given project and location.
type ClientTlsPolicy struct {
	pulumi.CustomResourceState

	// Optional. Defines a mechanism to provision client identity (public and private keys) for peer to peer authentication. The presence of this dictates mTLS.
	ClientCertificate GoogleCloudNetworksecurityV1beta1CertificateProviderResponseOutput `pulumi:"clientCertificate"`
	// Required. Short name of the ClientTlsPolicy resource to be created. This value should be 1-63 characters long, containing only letters, numbers, hyphens, and underscores, and should not start with a number. E.g. "client_mtls_policy".
	ClientTlsPolicyId pulumi.StringOutput `pulumi:"clientTlsPolicyId"`
	// The timestamp when the resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Free-text description of the resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. Set of label tags associated with the resource.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Name of the ClientTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/clientTlsPolicies/{client_tls_policy}`
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.
	ServerValidationCa ValidationCAResponseArrayOutput `pulumi:"serverValidationCa"`
	// Optional. Server Name Indication string to present to the server during TLS handshake. E.g: "secure.example.com".
	Sni pulumi.StringOutput `pulumi:"sni"`
	// The timestamp when the resource was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewClientTlsPolicy registers a new resource with the given unique name, arguments, and options.
func NewClientTlsPolicy(ctx *pulumi.Context,
	name string, args *ClientTlsPolicyArgs, opts ...pulumi.ResourceOption) (*ClientTlsPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientTlsPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'ClientTlsPolicyId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"clientTlsPolicyId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClientTlsPolicy
	err := ctx.RegisterResource("google-native:networksecurity/v1beta1:ClientTlsPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClientTlsPolicy gets an existing ClientTlsPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClientTlsPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClientTlsPolicyState, opts ...pulumi.ResourceOption) (*ClientTlsPolicy, error) {
	var resource ClientTlsPolicy
	err := ctx.ReadResource("google-native:networksecurity/v1beta1:ClientTlsPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClientTlsPolicy resources.
type clientTlsPolicyState struct {
}

type ClientTlsPolicyState struct {
}

func (ClientTlsPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*clientTlsPolicyState)(nil)).Elem()
}

type clientTlsPolicyArgs struct {
	// Optional. Defines a mechanism to provision client identity (public and private keys) for peer to peer authentication. The presence of this dictates mTLS.
	ClientCertificate *GoogleCloudNetworksecurityV1beta1CertificateProvider `pulumi:"clientCertificate"`
	// Required. Short name of the ClientTlsPolicy resource to be created. This value should be 1-63 characters long, containing only letters, numbers, hyphens, and underscores, and should not start with a number. E.g. "client_mtls_policy".
	ClientTlsPolicyId string `pulumi:"clientTlsPolicyId"`
	// Optional. Free-text description of the resource.
	Description *string `pulumi:"description"`
	// Optional. Set of label tags associated with the resource.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// Name of the ClientTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/clientTlsPolicies/{client_tls_policy}`
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.
	ServerValidationCa []ValidationCA `pulumi:"serverValidationCa"`
	// Optional. Server Name Indication string to present to the server during TLS handshake. E.g: "secure.example.com".
	Sni *string `pulumi:"sni"`
}

// The set of arguments for constructing a ClientTlsPolicy resource.
type ClientTlsPolicyArgs struct {
	// Optional. Defines a mechanism to provision client identity (public and private keys) for peer to peer authentication. The presence of this dictates mTLS.
	ClientCertificate GoogleCloudNetworksecurityV1beta1CertificateProviderPtrInput
	// Required. Short name of the ClientTlsPolicy resource to be created. This value should be 1-63 characters long, containing only letters, numbers, hyphens, and underscores, and should not start with a number. E.g. "client_mtls_policy".
	ClientTlsPolicyId pulumi.StringInput
	// Optional. Free-text description of the resource.
	Description pulumi.StringPtrInput
	// Optional. Set of label tags associated with the resource.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// Name of the ClientTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/clientTlsPolicies/{client_tls_policy}`
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.
	ServerValidationCa ValidationCAArrayInput
	// Optional. Server Name Indication string to present to the server during TLS handshake. E.g: "secure.example.com".
	Sni pulumi.StringPtrInput
}

func (ClientTlsPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clientTlsPolicyArgs)(nil)).Elem()
}

type ClientTlsPolicyInput interface {
	pulumi.Input

	ToClientTlsPolicyOutput() ClientTlsPolicyOutput
	ToClientTlsPolicyOutputWithContext(ctx context.Context) ClientTlsPolicyOutput
}

func (*ClientTlsPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientTlsPolicy)(nil)).Elem()
}

func (i *ClientTlsPolicy) ToClientTlsPolicyOutput() ClientTlsPolicyOutput {
	return i.ToClientTlsPolicyOutputWithContext(context.Background())
}

func (i *ClientTlsPolicy) ToClientTlsPolicyOutputWithContext(ctx context.Context) ClientTlsPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientTlsPolicyOutput)
}

type ClientTlsPolicyOutput struct{ *pulumi.OutputState }

func (ClientTlsPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientTlsPolicy)(nil)).Elem()
}

func (o ClientTlsPolicyOutput) ToClientTlsPolicyOutput() ClientTlsPolicyOutput {
	return o
}

func (o ClientTlsPolicyOutput) ToClientTlsPolicyOutputWithContext(ctx context.Context) ClientTlsPolicyOutput {
	return o
}

// Optional. Defines a mechanism to provision client identity (public and private keys) for peer to peer authentication. The presence of this dictates mTLS.
func (o ClientTlsPolicyOutput) ClientCertificate() GoogleCloudNetworksecurityV1beta1CertificateProviderResponseOutput {
	return o.ApplyT(func(v *ClientTlsPolicy) GoogleCloudNetworksecurityV1beta1CertificateProviderResponseOutput {
		return v.ClientCertificate
	}).(GoogleCloudNetworksecurityV1beta1CertificateProviderResponseOutput)
}

// Required. Short name of the ClientTlsPolicy resource to be created. This value should be 1-63 characters long, containing only letters, numbers, hyphens, and underscores, and should not start with a number. E.g. "client_mtls_policy".
func (o ClientTlsPolicyOutput) ClientTlsPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientTlsPolicy) pulumi.StringOutput { return v.ClientTlsPolicyId }).(pulumi.StringOutput)
}

// The timestamp when the resource was created.
func (o ClientTlsPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientTlsPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Free-text description of the resource.
func (o ClientTlsPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientTlsPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. Set of label tags associated with the resource.
func (o ClientTlsPolicyOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClientTlsPolicy) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o ClientTlsPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientTlsPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the ClientTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/clientTlsPolicies/{client_tls_policy}`
func (o ClientTlsPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientTlsPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ClientTlsPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientTlsPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.
func (o ClientTlsPolicyOutput) ServerValidationCa() ValidationCAResponseArrayOutput {
	return o.ApplyT(func(v *ClientTlsPolicy) ValidationCAResponseArrayOutput { return v.ServerValidationCa }).(ValidationCAResponseArrayOutput)
}

// Optional. Server Name Indication string to present to the server during TLS handshake. E.g: "secure.example.com".
func (o ClientTlsPolicyOutput) Sni() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientTlsPolicy) pulumi.StringOutput { return v.Sni }).(pulumi.StringOutput)
}

// The timestamp when the resource was updated.
func (o ClientTlsPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientTlsPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClientTlsPolicyInput)(nil)).Elem(), &ClientTlsPolicy{})
	pulumi.RegisterOutputType(ClientTlsPolicyOutput{})
}
