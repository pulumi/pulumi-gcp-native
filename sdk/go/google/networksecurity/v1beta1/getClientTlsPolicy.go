// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single ClientTlsPolicy.
func LookupClientTlsPolicy(ctx *pulumi.Context, args *LookupClientTlsPolicyArgs, opts ...pulumi.InvokeOption) (*LookupClientTlsPolicyResult, error) {
	var rv LookupClientTlsPolicyResult
	err := ctx.Invoke("google-native:networksecurity/v1beta1:getClientTlsPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupClientTlsPolicyArgs struct {
	ClientTlsPolicyId string `pulumi:"clientTlsPolicyId"`
	Location          string `pulumi:"location"`
	Project           string `pulumi:"project"`
}

type LookupClientTlsPolicyResult struct {
	// Optional. Defines a mechanism to provision client identity (public and private keys) for peer to peer authentication. The presence of this dictates mTLS.
	ClientCertificate GoogleCloudNetworksecurityV1beta1CertificateProviderResponse `pulumi:"clientCertificate"`
	// The timestamp when the resource was created.
	CreateTime string `pulumi:"createTime"`
	// Optional. Free-text description of the resource.
	Description string `pulumi:"description"`
	// Optional. Set of label tags associated with the resource.
	Labels map[string]string `pulumi:"labels"`
	// Name of the ClientTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/clientTlsPolicies/{client_tls_policy}`
	Name string `pulumi:"name"`
	// Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.
	ServerValidationCa []ValidationCAResponse `pulumi:"serverValidationCa"`
	// Optional. Server Name Indication string to present to the server during TLS handshake. E.g: "secure.example.com".
	Sni string `pulumi:"sni"`
	// The timestamp when the resource was updated.
	UpdateTime string `pulumi:"updateTime"`
}
