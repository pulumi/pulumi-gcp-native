// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new FirewallEndpointAssociation in a given project and location.
// Auto-naming is currently not supported for this resource.
type FirewallEndpointAssociation struct {
	pulumi.CustomResourceState

	// Create time stamp
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The URL of the FirewallEndpoint that is being associated.
	FirewallEndpoint pulumi.StringOutput `pulumi:"firewallEndpoint"`
	// Optional. Id of the requesting object. If auto-generating Id server-side, remove this field and firewall_endpoint_association_id from the method_signature of Create RPC.
	FirewallEndpointAssociationId pulumi.StringPtrOutput `pulumi:"firewallEndpointAssociationId"`
	// Optional. Labels as key value pairs
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// name of resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The URL of the network that is being associated.
	Network pulumi.StringOutput `pulumi:"network"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Whether reconciling is in progress, recommended per https://google.aip.dev/128.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Current state of the association.
	State pulumi.StringOutput `pulumi:"state"`
	// Optional. The URL of the TlsInspectionPolicy that is being associated.
	TlsInspectionPolicy pulumi.StringOutput `pulumi:"tlsInspectionPolicy"`
	// Update time stamp
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewFirewallEndpointAssociation registers a new resource with the given unique name, arguments, and options.
func NewFirewallEndpointAssociation(ctx *pulumi.Context,
	name string, args *FirewallEndpointAssociationArgs, opts ...pulumi.ResourceOption) (*FirewallEndpointAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirewallEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'FirewallEndpoint'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallEndpointAssociation
	err := ctx.RegisterResource("google-native:networksecurity/v1beta1:FirewallEndpointAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallEndpointAssociation gets an existing FirewallEndpointAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallEndpointAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallEndpointAssociationState, opts ...pulumi.ResourceOption) (*FirewallEndpointAssociation, error) {
	var resource FirewallEndpointAssociation
	err := ctx.ReadResource("google-native:networksecurity/v1beta1:FirewallEndpointAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallEndpointAssociation resources.
type firewallEndpointAssociationState struct {
}

type FirewallEndpointAssociationState struct {
}

func (FirewallEndpointAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallEndpointAssociationState)(nil)).Elem()
}

type firewallEndpointAssociationArgs struct {
	// The URL of the FirewallEndpoint that is being associated.
	FirewallEndpoint string `pulumi:"firewallEndpoint"`
	// Optional. Id of the requesting object. If auto-generating Id server-side, remove this field and firewall_endpoint_association_id from the method_signature of Create RPC.
	FirewallEndpointAssociationId *string `pulumi:"firewallEndpointAssociationId"`
	// Optional. Labels as key value pairs
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// The URL of the network that is being associated.
	Network string  `pulumi:"network"`
	Project *string `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// Optional. The URL of the TlsInspectionPolicy that is being associated.
	TlsInspectionPolicy *string `pulumi:"tlsInspectionPolicy"`
}

// The set of arguments for constructing a FirewallEndpointAssociation resource.
type FirewallEndpointAssociationArgs struct {
	// The URL of the FirewallEndpoint that is being associated.
	FirewallEndpoint pulumi.StringInput
	// Optional. Id of the requesting object. If auto-generating Id server-side, remove this field and firewall_endpoint_association_id from the method_signature of Create RPC.
	FirewallEndpointAssociationId pulumi.StringPtrInput
	// Optional. Labels as key value pairs
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// The URL of the network that is being associated.
	Network pulumi.StringInput
	Project pulumi.StringPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// Optional. The URL of the TlsInspectionPolicy that is being associated.
	TlsInspectionPolicy pulumi.StringPtrInput
}

func (FirewallEndpointAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallEndpointAssociationArgs)(nil)).Elem()
}

type FirewallEndpointAssociationInput interface {
	pulumi.Input

	ToFirewallEndpointAssociationOutput() FirewallEndpointAssociationOutput
	ToFirewallEndpointAssociationOutputWithContext(ctx context.Context) FirewallEndpointAssociationOutput
}

func (*FirewallEndpointAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallEndpointAssociation)(nil)).Elem()
}

func (i *FirewallEndpointAssociation) ToFirewallEndpointAssociationOutput() FirewallEndpointAssociationOutput {
	return i.ToFirewallEndpointAssociationOutputWithContext(context.Background())
}

func (i *FirewallEndpointAssociation) ToFirewallEndpointAssociationOutputWithContext(ctx context.Context) FirewallEndpointAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallEndpointAssociationOutput)
}

type FirewallEndpointAssociationOutput struct{ *pulumi.OutputState }

func (FirewallEndpointAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallEndpointAssociation)(nil)).Elem()
}

func (o FirewallEndpointAssociationOutput) ToFirewallEndpointAssociationOutput() FirewallEndpointAssociationOutput {
	return o
}

func (o FirewallEndpointAssociationOutput) ToFirewallEndpointAssociationOutputWithContext(ctx context.Context) FirewallEndpointAssociationOutput {
	return o
}

// Create time stamp
func (o FirewallEndpointAssociationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The URL of the FirewallEndpoint that is being associated.
func (o FirewallEndpointAssociationOutput) FirewallEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.FirewallEndpoint }).(pulumi.StringOutput)
}

// Optional. Id of the requesting object. If auto-generating Id server-side, remove this field and firewall_endpoint_association_id from the method_signature of Create RPC.
func (o FirewallEndpointAssociationOutput) FirewallEndpointAssociationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringPtrOutput { return v.FirewallEndpointAssociationId }).(pulumi.StringPtrOutput)
}

// Optional. Labels as key value pairs
func (o FirewallEndpointAssociationOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o FirewallEndpointAssociationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// name of resource
func (o FirewallEndpointAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The URL of the network that is being associated.
func (o FirewallEndpointAssociationOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

func (o FirewallEndpointAssociationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Whether reconciling is in progress, recommended per https://google.aip.dev/128.
func (o FirewallEndpointAssociationOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o FirewallEndpointAssociationOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Current state of the association.
func (o FirewallEndpointAssociationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Optional. The URL of the TlsInspectionPolicy that is being associated.
func (o FirewallEndpointAssociationOutput) TlsInspectionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.TlsInspectionPolicy }).(pulumi.StringOutput)
}

// Update time stamp
func (o FirewallEndpointAssociationOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallEndpointAssociation) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallEndpointAssociationInput)(nil)).Elem(), &FirewallEndpointAssociation{})
	pulumi.RegisterOutputType(FirewallEndpointAssociationOutput{})
}
