// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single FirewallEndpointAssociation.
func LookupFirewallEndpointAssociation(ctx *pulumi.Context, args *LookupFirewallEndpointAssociationArgs, opts ...pulumi.InvokeOption) (*LookupFirewallEndpointAssociationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFirewallEndpointAssociationResult
	err := ctx.Invoke("google-native:networksecurity/v1beta1:getFirewallEndpointAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFirewallEndpointAssociationArgs struct {
	FirewallEndpointAssociationId string  `pulumi:"firewallEndpointAssociationId"`
	Location                      string  `pulumi:"location"`
	Project                       *string `pulumi:"project"`
}

type LookupFirewallEndpointAssociationResult struct {
	// Create time stamp
	CreateTime string `pulumi:"createTime"`
	// The URL of the FirewallEndpoint that is being associated.
	FirewallEndpoint string `pulumi:"firewallEndpoint"`
	// Optional. Labels as key value pairs
	Labels map[string]string `pulumi:"labels"`
	// name of resource
	Name string `pulumi:"name"`
	// The URL of the network that is being associated.
	Network string `pulumi:"network"`
	// Whether reconciling is in progress, recommended per https://google.aip.dev/128.
	Reconciling bool `pulumi:"reconciling"`
	// Current state of the association.
	State string `pulumi:"state"`
	// Optional. The URL of the TlsInspectionPolicy that is being associated.
	TlsInspectionPolicy string `pulumi:"tlsInspectionPolicy"`
	// Update time stamp
	UpdateTime string `pulumi:"updateTime"`
}

func LookupFirewallEndpointAssociationOutput(ctx *pulumi.Context, args LookupFirewallEndpointAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupFirewallEndpointAssociationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFirewallEndpointAssociationResult, error) {
			args := v.(LookupFirewallEndpointAssociationArgs)
			r, err := LookupFirewallEndpointAssociation(ctx, &args, opts...)
			var s LookupFirewallEndpointAssociationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFirewallEndpointAssociationResultOutput)
}

type LookupFirewallEndpointAssociationOutputArgs struct {
	FirewallEndpointAssociationId pulumi.StringInput    `pulumi:"firewallEndpointAssociationId"`
	Location                      pulumi.StringInput    `pulumi:"location"`
	Project                       pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupFirewallEndpointAssociationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirewallEndpointAssociationArgs)(nil)).Elem()
}

type LookupFirewallEndpointAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupFirewallEndpointAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirewallEndpointAssociationResult)(nil)).Elem()
}

func (o LookupFirewallEndpointAssociationResultOutput) ToLookupFirewallEndpointAssociationResultOutput() LookupFirewallEndpointAssociationResultOutput {
	return o
}

func (o LookupFirewallEndpointAssociationResultOutput) ToLookupFirewallEndpointAssociationResultOutputWithContext(ctx context.Context) LookupFirewallEndpointAssociationResultOutput {
	return o
}

// Create time stamp
func (o LookupFirewallEndpointAssociationResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallEndpointAssociationResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The URL of the FirewallEndpoint that is being associated.
func (o LookupFirewallEndpointAssociationResultOutput) FirewallEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallEndpointAssociationResult) string { return v.FirewallEndpoint }).(pulumi.StringOutput)
}

// Optional. Labels as key value pairs
func (o LookupFirewallEndpointAssociationResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFirewallEndpointAssociationResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// name of resource
func (o LookupFirewallEndpointAssociationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallEndpointAssociationResult) string { return v.Name }).(pulumi.StringOutput)
}

// The URL of the network that is being associated.
func (o LookupFirewallEndpointAssociationResultOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallEndpointAssociationResult) string { return v.Network }).(pulumi.StringOutput)
}

// Whether reconciling is in progress, recommended per https://google.aip.dev/128.
func (o LookupFirewallEndpointAssociationResultOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupFirewallEndpointAssociationResult) bool { return v.Reconciling }).(pulumi.BoolOutput)
}

// Current state of the association.
func (o LookupFirewallEndpointAssociationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallEndpointAssociationResult) string { return v.State }).(pulumi.StringOutput)
}

// Optional. The URL of the TlsInspectionPolicy that is being associated.
func (o LookupFirewallEndpointAssociationResultOutput) TlsInspectionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallEndpointAssociationResult) string { return v.TlsInspectionPolicy }).(pulumi.StringOutput)
}

// Update time stamp
func (o LookupFirewallEndpointAssociationResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallEndpointAssociationResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFirewallEndpointAssociationResultOutput{})
}
