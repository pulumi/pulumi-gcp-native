// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new GatewaySecurityPolicy in a given project and location.
type GatewaySecurityPolicy struct {
	pulumi.CustomResourceState

	// The timestamp when the resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Free-text description of the resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// Required. Short name of the GatewaySecurityPolicy resource to be created. This value should be 1-63 characters long, containing only letters, numbers, hyphens, and underscores, and should not start with a number. E.g. "gateway_security_policy1".
	GatewaySecurityPolicyId pulumi.StringOutput `pulumi:"gatewaySecurityPolicyId"`
	Location                pulumi.StringOutput `pulumi:"location"`
	// Name of the resource. Name is of the form projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy} gateway_security_policy should match the pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Optional. Name of a TLS Inspection Policy resource that defines how TLS inspection will be performed for any rule(s) which enables it.
	TlsInspectionPolicy pulumi.StringOutput `pulumi:"tlsInspectionPolicy"`
	// The timestamp when the resource was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewGatewaySecurityPolicy registers a new resource with the given unique name, arguments, and options.
func NewGatewaySecurityPolicy(ctx *pulumi.Context,
	name string, args *GatewaySecurityPolicyArgs, opts ...pulumi.ResourceOption) (*GatewaySecurityPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GatewaySecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'GatewaySecurityPolicyId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"gatewaySecurityPolicyId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	var resource GatewaySecurityPolicy
	err := ctx.RegisterResource("google-native:networksecurity/v1beta1:GatewaySecurityPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewaySecurityPolicy gets an existing GatewaySecurityPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewaySecurityPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewaySecurityPolicyState, opts ...pulumi.ResourceOption) (*GatewaySecurityPolicy, error) {
	var resource GatewaySecurityPolicy
	err := ctx.ReadResource("google-native:networksecurity/v1beta1:GatewaySecurityPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewaySecurityPolicy resources.
type gatewaySecurityPolicyState struct {
}

type GatewaySecurityPolicyState struct {
}

func (GatewaySecurityPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewaySecurityPolicyState)(nil)).Elem()
}

type gatewaySecurityPolicyArgs struct {
	// Optional. Free-text description of the resource.
	Description *string `pulumi:"description"`
	// Required. Short name of the GatewaySecurityPolicy resource to be created. This value should be 1-63 characters long, containing only letters, numbers, hyphens, and underscores, and should not start with a number. E.g. "gateway_security_policy1".
	GatewaySecurityPolicyId string  `pulumi:"gatewaySecurityPolicyId"`
	Location                *string `pulumi:"location"`
	// Name of the resource. Name is of the form projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy} gateway_security_policy should match the pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Optional. Name of a TLS Inspection Policy resource that defines how TLS inspection will be performed for any rule(s) which enables it.
	TlsInspectionPolicy *string `pulumi:"tlsInspectionPolicy"`
}

// The set of arguments for constructing a GatewaySecurityPolicy resource.
type GatewaySecurityPolicyArgs struct {
	// Optional. Free-text description of the resource.
	Description pulumi.StringPtrInput
	// Required. Short name of the GatewaySecurityPolicy resource to be created. This value should be 1-63 characters long, containing only letters, numbers, hyphens, and underscores, and should not start with a number. E.g. "gateway_security_policy1".
	GatewaySecurityPolicyId pulumi.StringInput
	Location                pulumi.StringPtrInput
	// Name of the resource. Name is of the form projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy} gateway_security_policy should match the pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Optional. Name of a TLS Inspection Policy resource that defines how TLS inspection will be performed for any rule(s) which enables it.
	TlsInspectionPolicy pulumi.StringPtrInput
}

func (GatewaySecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewaySecurityPolicyArgs)(nil)).Elem()
}

type GatewaySecurityPolicyInput interface {
	pulumi.Input

	ToGatewaySecurityPolicyOutput() GatewaySecurityPolicyOutput
	ToGatewaySecurityPolicyOutputWithContext(ctx context.Context) GatewaySecurityPolicyOutput
}

func (*GatewaySecurityPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySecurityPolicy)(nil)).Elem()
}

func (i *GatewaySecurityPolicy) ToGatewaySecurityPolicyOutput() GatewaySecurityPolicyOutput {
	return i.ToGatewaySecurityPolicyOutputWithContext(context.Background())
}

func (i *GatewaySecurityPolicy) ToGatewaySecurityPolicyOutputWithContext(ctx context.Context) GatewaySecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySecurityPolicyOutput)
}

type GatewaySecurityPolicyOutput struct{ *pulumi.OutputState }

func (GatewaySecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySecurityPolicy)(nil)).Elem()
}

func (o GatewaySecurityPolicyOutput) ToGatewaySecurityPolicyOutput() GatewaySecurityPolicyOutput {
	return o
}

func (o GatewaySecurityPolicyOutput) ToGatewaySecurityPolicyOutputWithContext(ctx context.Context) GatewaySecurityPolicyOutput {
	return o
}

// The timestamp when the resource was created.
func (o GatewaySecurityPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewaySecurityPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Free-text description of the resource.
func (o GatewaySecurityPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewaySecurityPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Required. Short name of the GatewaySecurityPolicy resource to be created. This value should be 1-63 characters long, containing only letters, numbers, hyphens, and underscores, and should not start with a number. E.g. "gateway_security_policy1".
func (o GatewaySecurityPolicyOutput) GatewaySecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewaySecurityPolicy) pulumi.StringOutput { return v.GatewaySecurityPolicyId }).(pulumi.StringOutput)
}

func (o GatewaySecurityPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewaySecurityPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the resource. Name is of the form projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy} gateway_security_policy should match the pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
func (o GatewaySecurityPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewaySecurityPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o GatewaySecurityPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewaySecurityPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. Name of a TLS Inspection Policy resource that defines how TLS inspection will be performed for any rule(s) which enables it.
func (o GatewaySecurityPolicyOutput) TlsInspectionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewaySecurityPolicy) pulumi.StringOutput { return v.TlsInspectionPolicy }).(pulumi.StringOutput)
}

// The timestamp when the resource was updated.
func (o GatewaySecurityPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewaySecurityPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySecurityPolicyInput)(nil)).Elem(), &GatewaySecurityPolicy{})
	pulumi.RegisterOutputType(GatewaySecurityPolicyOutput{})
}
