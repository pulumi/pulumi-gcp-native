// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Required. The type of the Address Group. Possible values are "IPv4" or "IPV6".
type AddressGroupType string

const (
	// Default value.
	AddressGroupTypeTypeUnspecified = AddressGroupType("TYPE_UNSPECIFIED")
	// IP v4 ranges.
	AddressGroupTypeIpv4 = AddressGroupType("IPV4")
	// IP v6 ranges.
	AddressGroupTypeIpv6 = AddressGroupType("IPV6")
)

func (AddressGroupType) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressGroupType)(nil)).Elem()
}

func (e AddressGroupType) ToAddressGroupTypeOutput() AddressGroupTypeOutput {
	return pulumi.ToOutput(e).(AddressGroupTypeOutput)
}

func (e AddressGroupType) ToAddressGroupTypeOutputWithContext(ctx context.Context) AddressGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AddressGroupTypeOutput)
}

func (e AddressGroupType) ToAddressGroupTypePtrOutput() AddressGroupTypePtrOutput {
	return e.ToAddressGroupTypePtrOutputWithContext(context.Background())
}

func (e AddressGroupType) ToAddressGroupTypePtrOutputWithContext(ctx context.Context) AddressGroupTypePtrOutput {
	return AddressGroupType(e).ToAddressGroupTypeOutputWithContext(ctx).ToAddressGroupTypePtrOutputWithContext(ctx)
}

func (e AddressGroupType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressGroupType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressGroupType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AddressGroupType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AddressGroupTypeOutput struct{ *pulumi.OutputState }

func (AddressGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressGroupType)(nil)).Elem()
}

func (o AddressGroupTypeOutput) ToAddressGroupTypeOutput() AddressGroupTypeOutput {
	return o
}

func (o AddressGroupTypeOutput) ToAddressGroupTypeOutputWithContext(ctx context.Context) AddressGroupTypeOutput {
	return o
}

func (o AddressGroupTypeOutput) ToAddressGroupTypePtrOutput() AddressGroupTypePtrOutput {
	return o.ToAddressGroupTypePtrOutputWithContext(context.Background())
}

func (o AddressGroupTypeOutput) ToAddressGroupTypePtrOutputWithContext(ctx context.Context) AddressGroupTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddressGroupType) *AddressGroupType {
		return &v
	}).(AddressGroupTypePtrOutput)
}

func (o AddressGroupTypeOutput) ToOutput(ctx context.Context) pulumix.Output[AddressGroupType] {
	return pulumix.Output[AddressGroupType]{
		OutputState: o.OutputState,
	}
}

func (o AddressGroupTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AddressGroupTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressGroupType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AddressGroupTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressGroupTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressGroupType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AddressGroupTypePtrOutput struct{ *pulumi.OutputState }

func (AddressGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressGroupType)(nil)).Elem()
}

func (o AddressGroupTypePtrOutput) ToAddressGroupTypePtrOutput() AddressGroupTypePtrOutput {
	return o
}

func (o AddressGroupTypePtrOutput) ToAddressGroupTypePtrOutputWithContext(ctx context.Context) AddressGroupTypePtrOutput {
	return o
}

func (o AddressGroupTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AddressGroupType] {
	return pulumix.Output[*AddressGroupType]{
		OutputState: o.OutputState,
	}
}

func (o AddressGroupTypePtrOutput) Elem() AddressGroupTypeOutput {
	return o.ApplyT(func(v *AddressGroupType) AddressGroupType {
		if v != nil {
			return *v
		}
		var ret AddressGroupType
		return ret
	}).(AddressGroupTypeOutput)
}

func (o AddressGroupTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressGroupTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AddressGroupType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AddressGroupTypeInput is an input type that accepts AddressGroupTypeArgs and AddressGroupTypeOutput values.
// You can construct a concrete instance of `AddressGroupTypeInput` via:
//
//	AddressGroupTypeArgs{...}
type AddressGroupTypeInput interface {
	pulumi.Input

	ToAddressGroupTypeOutput() AddressGroupTypeOutput
	ToAddressGroupTypeOutputWithContext(context.Context) AddressGroupTypeOutput
}

var addressGroupTypePtrType = reflect.TypeOf((**AddressGroupType)(nil)).Elem()

type AddressGroupTypePtrInput interface {
	pulumi.Input

	ToAddressGroupTypePtrOutput() AddressGroupTypePtrOutput
	ToAddressGroupTypePtrOutputWithContext(context.Context) AddressGroupTypePtrOutput
}

type addressGroupTypePtr string

func AddressGroupTypePtr(v string) AddressGroupTypePtrInput {
	return (*addressGroupTypePtr)(&v)
}

func (*addressGroupTypePtr) ElementType() reflect.Type {
	return addressGroupTypePtrType
}

func (in *addressGroupTypePtr) ToAddressGroupTypePtrOutput() AddressGroupTypePtrOutput {
	return pulumi.ToOutput(in).(AddressGroupTypePtrOutput)
}

func (in *addressGroupTypePtr) ToAddressGroupTypePtrOutputWithContext(ctx context.Context) AddressGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AddressGroupTypePtrOutput)
}

func (in *addressGroupTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AddressGroupType] {
	return pulumix.Output[*AddressGroupType]{
		OutputState: in.ToAddressGroupTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. The action to take when a rule match is found. Possible values are "ALLOW" or "DENY".
type AuthorizationPolicyAction string

const (
	// Default value.
	AuthorizationPolicyActionActionUnspecified = AuthorizationPolicyAction("ACTION_UNSPECIFIED")
	// Grant access.
	AuthorizationPolicyActionAllow = AuthorizationPolicyAction("ALLOW")
	// Deny access. Deny rules should be avoided unless they are used to provide a default "deny all" fallback.
	AuthorizationPolicyActionDeny = AuthorizationPolicyAction("DENY")
)

func (AuthorizationPolicyAction) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyAction)(nil)).Elem()
}

func (e AuthorizationPolicyAction) ToAuthorizationPolicyActionOutput() AuthorizationPolicyActionOutput {
	return pulumi.ToOutput(e).(AuthorizationPolicyActionOutput)
}

func (e AuthorizationPolicyAction) ToAuthorizationPolicyActionOutputWithContext(ctx context.Context) AuthorizationPolicyActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuthorizationPolicyActionOutput)
}

func (e AuthorizationPolicyAction) ToAuthorizationPolicyActionPtrOutput() AuthorizationPolicyActionPtrOutput {
	return e.ToAuthorizationPolicyActionPtrOutputWithContext(context.Background())
}

func (e AuthorizationPolicyAction) ToAuthorizationPolicyActionPtrOutputWithContext(ctx context.Context) AuthorizationPolicyActionPtrOutput {
	return AuthorizationPolicyAction(e).ToAuthorizationPolicyActionOutputWithContext(ctx).ToAuthorizationPolicyActionPtrOutputWithContext(ctx)
}

func (e AuthorizationPolicyAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthorizationPolicyAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthorizationPolicyAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuthorizationPolicyAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuthorizationPolicyActionOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPolicyAction)(nil)).Elem()
}

func (o AuthorizationPolicyActionOutput) ToAuthorizationPolicyActionOutput() AuthorizationPolicyActionOutput {
	return o
}

func (o AuthorizationPolicyActionOutput) ToAuthorizationPolicyActionOutputWithContext(ctx context.Context) AuthorizationPolicyActionOutput {
	return o
}

func (o AuthorizationPolicyActionOutput) ToAuthorizationPolicyActionPtrOutput() AuthorizationPolicyActionPtrOutput {
	return o.ToAuthorizationPolicyActionPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicyActionOutput) ToAuthorizationPolicyActionPtrOutputWithContext(ctx context.Context) AuthorizationPolicyActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationPolicyAction) *AuthorizationPolicyAction {
		return &v
	}).(AuthorizationPolicyActionPtrOutput)
}

func (o AuthorizationPolicyActionOutput) ToOutput(ctx context.Context) pulumix.Output[AuthorizationPolicyAction] {
	return pulumix.Output[AuthorizationPolicyAction]{
		OutputState: o.OutputState,
	}
}

func (o AuthorizationPolicyActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuthorizationPolicyActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthorizationPolicyAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuthorizationPolicyActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicyActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthorizationPolicyAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuthorizationPolicyActionPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicyAction)(nil)).Elem()
}

func (o AuthorizationPolicyActionPtrOutput) ToAuthorizationPolicyActionPtrOutput() AuthorizationPolicyActionPtrOutput {
	return o
}

func (o AuthorizationPolicyActionPtrOutput) ToAuthorizationPolicyActionPtrOutputWithContext(ctx context.Context) AuthorizationPolicyActionPtrOutput {
	return o
}

func (o AuthorizationPolicyActionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AuthorizationPolicyAction] {
	return pulumix.Output[*AuthorizationPolicyAction]{
		OutputState: o.OutputState,
	}
}

func (o AuthorizationPolicyActionPtrOutput) Elem() AuthorizationPolicyActionOutput {
	return o.ApplyT(func(v *AuthorizationPolicyAction) AuthorizationPolicyAction {
		if v != nil {
			return *v
		}
		var ret AuthorizationPolicyAction
		return ret
	}).(AuthorizationPolicyActionOutput)
}

func (o AuthorizationPolicyActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthorizationPolicyActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuthorizationPolicyAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuthorizationPolicyActionInput is an input type that accepts AuthorizationPolicyActionArgs and AuthorizationPolicyActionOutput values.
// You can construct a concrete instance of `AuthorizationPolicyActionInput` via:
//
//	AuthorizationPolicyActionArgs{...}
type AuthorizationPolicyActionInput interface {
	pulumi.Input

	ToAuthorizationPolicyActionOutput() AuthorizationPolicyActionOutput
	ToAuthorizationPolicyActionOutputWithContext(context.Context) AuthorizationPolicyActionOutput
}

var authorizationPolicyActionPtrType = reflect.TypeOf((**AuthorizationPolicyAction)(nil)).Elem()

type AuthorizationPolicyActionPtrInput interface {
	pulumi.Input

	ToAuthorizationPolicyActionPtrOutput() AuthorizationPolicyActionPtrOutput
	ToAuthorizationPolicyActionPtrOutputWithContext(context.Context) AuthorizationPolicyActionPtrOutput
}

type authorizationPolicyActionPtr string

func AuthorizationPolicyActionPtr(v string) AuthorizationPolicyActionPtrInput {
	return (*authorizationPolicyActionPtr)(&v)
}

func (*authorizationPolicyActionPtr) ElementType() reflect.Type {
	return authorizationPolicyActionPtrType
}

func (in *authorizationPolicyActionPtr) ToAuthorizationPolicyActionPtrOutput() AuthorizationPolicyActionPtrOutput {
	return pulumi.ToOutput(in).(AuthorizationPolicyActionPtrOutput)
}

func (in *authorizationPolicyActionPtr) ToAuthorizationPolicyActionPtrOutputWithContext(ctx context.Context) AuthorizationPolicyActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuthorizationPolicyActionPtrOutput)
}

func (in *authorizationPolicyActionPtr) ToOutput(ctx context.Context) pulumix.Output[*AuthorizationPolicyAction] {
	return pulumix.Output[*AuthorizationPolicyAction]{
		OutputState: in.ToAuthorizationPolicyActionPtrOutputWithContext(ctx).OutputState,
	}
}

// The log type that this config enables.
type GoogleIamV1AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	GoogleIamV1AuditLogConfigLogTypeLogTypeUnspecified = GoogleIamV1AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	GoogleIamV1AuditLogConfigLogTypeAdminRead = GoogleIamV1AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	GoogleIamV1AuditLogConfigLogTypeDataWrite = GoogleIamV1AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	GoogleIamV1AuditLogConfigLogTypeDataRead = GoogleIamV1AuditLogConfigLogType("DATA_READ")
)

func (GoogleIamV1AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditLogConfigLogType)(nil)).Elem()
}

func (e GoogleIamV1AuditLogConfigLogType) ToGoogleIamV1AuditLogConfigLogTypeOutput() GoogleIamV1AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(GoogleIamV1AuditLogConfigLogTypeOutput)
}

func (e GoogleIamV1AuditLogConfigLogType) ToGoogleIamV1AuditLogConfigLogTypeOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GoogleIamV1AuditLogConfigLogTypeOutput)
}

func (e GoogleIamV1AuditLogConfigLogType) ToGoogleIamV1AuditLogConfigLogTypePtrOutput() GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return e.ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e GoogleIamV1AuditLogConfigLogType) ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return GoogleIamV1AuditLogConfigLogType(e).ToGoogleIamV1AuditLogConfigLogTypeOutputWithContext(ctx).ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e GoogleIamV1AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleIamV1AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleIamV1AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleIamV1AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GoogleIamV1AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditLogConfigLogType)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToGoogleIamV1AuditLogConfigLogTypeOutput() GoogleIamV1AuditLogConfigLogTypeOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToGoogleIamV1AuditLogConfigLogTypeOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigLogTypeOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToGoogleIamV1AuditLogConfigLogTypePtrOutput() GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return o.ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleIamV1AuditLogConfigLogType) *GoogleIamV1AuditLogConfigLogType {
		return &v
	}).(GoogleIamV1AuditLogConfigLogTypePtrOutput)
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GoogleIamV1AuditLogConfigLogType] {
	return pulumix.Output[GoogleIamV1AuditLogConfigLogType]{
		OutputState: o.OutputState,
	}
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GoogleIamV1AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GoogleIamV1AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GoogleIamV1AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleIamV1AuditLogConfigLogType)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigLogTypePtrOutput) ToGoogleIamV1AuditLogConfigLogTypePtrOutput() GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigLogTypePtrOutput) ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigLogTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GoogleIamV1AuditLogConfigLogType] {
	return pulumix.Output[*GoogleIamV1AuditLogConfigLogType]{
		OutputState: o.OutputState,
	}
}

func (o GoogleIamV1AuditLogConfigLogTypePtrOutput) Elem() GoogleIamV1AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *GoogleIamV1AuditLogConfigLogType) GoogleIamV1AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret GoogleIamV1AuditLogConfigLogType
		return ret
	}).(GoogleIamV1AuditLogConfigLogTypeOutput)
}

func (o GoogleIamV1AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoogleIamV1AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GoogleIamV1AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GoogleIamV1AuditLogConfigLogTypeInput is an input type that accepts GoogleIamV1AuditLogConfigLogTypeArgs and GoogleIamV1AuditLogConfigLogTypeOutput values.
// You can construct a concrete instance of `GoogleIamV1AuditLogConfigLogTypeInput` via:
//
//	GoogleIamV1AuditLogConfigLogTypeArgs{...}
type GoogleIamV1AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToGoogleIamV1AuditLogConfigLogTypeOutput() GoogleIamV1AuditLogConfigLogTypeOutput
	ToGoogleIamV1AuditLogConfigLogTypeOutputWithContext(context.Context) GoogleIamV1AuditLogConfigLogTypeOutput
}

var googleIamV1AuditLogConfigLogTypePtrType = reflect.TypeOf((**GoogleIamV1AuditLogConfigLogType)(nil)).Elem()

type GoogleIamV1AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToGoogleIamV1AuditLogConfigLogTypePtrOutput() GoogleIamV1AuditLogConfigLogTypePtrOutput
	ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(context.Context) GoogleIamV1AuditLogConfigLogTypePtrOutput
}

type googleIamV1AuditLogConfigLogTypePtr string

func GoogleIamV1AuditLogConfigLogTypePtr(v string) GoogleIamV1AuditLogConfigLogTypePtrInput {
	return (*googleIamV1AuditLogConfigLogTypePtr)(&v)
}

func (*googleIamV1AuditLogConfigLogTypePtr) ElementType() reflect.Type {
	return googleIamV1AuditLogConfigLogTypePtrType
}

func (in *googleIamV1AuditLogConfigLogTypePtr) ToGoogleIamV1AuditLogConfigLogTypePtrOutput() GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(GoogleIamV1AuditLogConfigLogTypePtrOutput)
}

func (in *googleIamV1AuditLogConfigLogTypePtr) ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GoogleIamV1AuditLogConfigLogTypePtrOutput)
}

func (in *googleIamV1AuditLogConfigLogTypePtr) ToOutput(ctx context.Context) pulumix.Output[*GoogleIamV1AuditLogConfigLogType] {
	return pulumix.Output[*GoogleIamV1AuditLogConfigLogType]{
		OutputState: in.ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(ctx).OutputState,
	}
}

// When the client presents an invalid certificate or no certificate to the load balancer, the `client_validation_mode` specifies how the client connection is handled. Required if the policy is to be used with the external HTTPS load balancing. For Traffic Director it must be empty.
type MTLSPolicyClientValidationMode string

const (
	// Not allowed.
	MTLSPolicyClientValidationModeClientValidationModeUnspecified = MTLSPolicyClientValidationMode("CLIENT_VALIDATION_MODE_UNSPECIFIED")
	// Allow connection even if certificate chain validation of the client certificate failed or no client certificate was presented. The proof of possession of the private key is always checked if client certificate was presented. This mode requires the backend to implement processing of data extracted from a client certificate to authenticate the peer, or to reject connections if the client certificate fingerprint is missing.
	MTLSPolicyClientValidationModeAllowInvalidOrMissingClientCert = MTLSPolicyClientValidationMode("ALLOW_INVALID_OR_MISSING_CLIENT_CERT")
	// Require a client certificate and allow connection to the backend only if validation of the client certificate passed. If set, requires a reference to non-empty TrustConfig specified in `client_validation_trust_config`.
	MTLSPolicyClientValidationModeRejectInvalid = MTLSPolicyClientValidationMode("REJECT_INVALID")
)

func (MTLSPolicyClientValidationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*MTLSPolicyClientValidationMode)(nil)).Elem()
}

func (e MTLSPolicyClientValidationMode) ToMTLSPolicyClientValidationModeOutput() MTLSPolicyClientValidationModeOutput {
	return pulumi.ToOutput(e).(MTLSPolicyClientValidationModeOutput)
}

func (e MTLSPolicyClientValidationMode) ToMTLSPolicyClientValidationModeOutputWithContext(ctx context.Context) MTLSPolicyClientValidationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MTLSPolicyClientValidationModeOutput)
}

func (e MTLSPolicyClientValidationMode) ToMTLSPolicyClientValidationModePtrOutput() MTLSPolicyClientValidationModePtrOutput {
	return e.ToMTLSPolicyClientValidationModePtrOutputWithContext(context.Background())
}

func (e MTLSPolicyClientValidationMode) ToMTLSPolicyClientValidationModePtrOutputWithContext(ctx context.Context) MTLSPolicyClientValidationModePtrOutput {
	return MTLSPolicyClientValidationMode(e).ToMTLSPolicyClientValidationModeOutputWithContext(ctx).ToMTLSPolicyClientValidationModePtrOutputWithContext(ctx)
}

func (e MTLSPolicyClientValidationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MTLSPolicyClientValidationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MTLSPolicyClientValidationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MTLSPolicyClientValidationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MTLSPolicyClientValidationModeOutput struct{ *pulumi.OutputState }

func (MTLSPolicyClientValidationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MTLSPolicyClientValidationMode)(nil)).Elem()
}

func (o MTLSPolicyClientValidationModeOutput) ToMTLSPolicyClientValidationModeOutput() MTLSPolicyClientValidationModeOutput {
	return o
}

func (o MTLSPolicyClientValidationModeOutput) ToMTLSPolicyClientValidationModeOutputWithContext(ctx context.Context) MTLSPolicyClientValidationModeOutput {
	return o
}

func (o MTLSPolicyClientValidationModeOutput) ToMTLSPolicyClientValidationModePtrOutput() MTLSPolicyClientValidationModePtrOutput {
	return o.ToMTLSPolicyClientValidationModePtrOutputWithContext(context.Background())
}

func (o MTLSPolicyClientValidationModeOutput) ToMTLSPolicyClientValidationModePtrOutputWithContext(ctx context.Context) MTLSPolicyClientValidationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MTLSPolicyClientValidationMode) *MTLSPolicyClientValidationMode {
		return &v
	}).(MTLSPolicyClientValidationModePtrOutput)
}

func (o MTLSPolicyClientValidationModeOutput) ToOutput(ctx context.Context) pulumix.Output[MTLSPolicyClientValidationMode] {
	return pulumix.Output[MTLSPolicyClientValidationMode]{
		OutputState: o.OutputState,
	}
}

func (o MTLSPolicyClientValidationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MTLSPolicyClientValidationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MTLSPolicyClientValidationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MTLSPolicyClientValidationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MTLSPolicyClientValidationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MTLSPolicyClientValidationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MTLSPolicyClientValidationModePtrOutput struct{ *pulumi.OutputState }

func (MTLSPolicyClientValidationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MTLSPolicyClientValidationMode)(nil)).Elem()
}

func (o MTLSPolicyClientValidationModePtrOutput) ToMTLSPolicyClientValidationModePtrOutput() MTLSPolicyClientValidationModePtrOutput {
	return o
}

func (o MTLSPolicyClientValidationModePtrOutput) ToMTLSPolicyClientValidationModePtrOutputWithContext(ctx context.Context) MTLSPolicyClientValidationModePtrOutput {
	return o
}

func (o MTLSPolicyClientValidationModePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MTLSPolicyClientValidationMode] {
	return pulumix.Output[*MTLSPolicyClientValidationMode]{
		OutputState: o.OutputState,
	}
}

func (o MTLSPolicyClientValidationModePtrOutput) Elem() MTLSPolicyClientValidationModeOutput {
	return o.ApplyT(func(v *MTLSPolicyClientValidationMode) MTLSPolicyClientValidationMode {
		if v != nil {
			return *v
		}
		var ret MTLSPolicyClientValidationMode
		return ret
	}).(MTLSPolicyClientValidationModeOutput)
}

func (o MTLSPolicyClientValidationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MTLSPolicyClientValidationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MTLSPolicyClientValidationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MTLSPolicyClientValidationModeInput is an input type that accepts MTLSPolicyClientValidationModeArgs and MTLSPolicyClientValidationModeOutput values.
// You can construct a concrete instance of `MTLSPolicyClientValidationModeInput` via:
//
//	MTLSPolicyClientValidationModeArgs{...}
type MTLSPolicyClientValidationModeInput interface {
	pulumi.Input

	ToMTLSPolicyClientValidationModeOutput() MTLSPolicyClientValidationModeOutput
	ToMTLSPolicyClientValidationModeOutputWithContext(context.Context) MTLSPolicyClientValidationModeOutput
}

var mtlspolicyClientValidationModePtrType = reflect.TypeOf((**MTLSPolicyClientValidationMode)(nil)).Elem()

type MTLSPolicyClientValidationModePtrInput interface {
	pulumi.Input

	ToMTLSPolicyClientValidationModePtrOutput() MTLSPolicyClientValidationModePtrOutput
	ToMTLSPolicyClientValidationModePtrOutputWithContext(context.Context) MTLSPolicyClientValidationModePtrOutput
}

type mtlspolicyClientValidationModePtr string

func MTLSPolicyClientValidationModePtr(v string) MTLSPolicyClientValidationModePtrInput {
	return (*mtlspolicyClientValidationModePtr)(&v)
}

func (*mtlspolicyClientValidationModePtr) ElementType() reflect.Type {
	return mtlspolicyClientValidationModePtrType
}

func (in *mtlspolicyClientValidationModePtr) ToMTLSPolicyClientValidationModePtrOutput() MTLSPolicyClientValidationModePtrOutput {
	return pulumi.ToOutput(in).(MTLSPolicyClientValidationModePtrOutput)
}

func (in *mtlspolicyClientValidationModePtr) ToMTLSPolicyClientValidationModePtrOutputWithContext(ctx context.Context) MTLSPolicyClientValidationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MTLSPolicyClientValidationModePtrOutput)
}

func (in *mtlspolicyClientValidationModePtr) ToOutput(ctx context.Context) pulumix.Output[*MTLSPolicyClientValidationMode] {
	return pulumix.Output[*MTLSPolicyClientValidationMode]{
		OutputState: in.ToMTLSPolicyClientValidationModePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. The type of the Address Group. Possible values are "IPv4" or "IPV6".
type OrganizationAddressGroupType string

const (
	// Default value.
	OrganizationAddressGroupTypeTypeUnspecified = OrganizationAddressGroupType("TYPE_UNSPECIFIED")
	// IP v4 ranges.
	OrganizationAddressGroupTypeIpv4 = OrganizationAddressGroupType("IPV4")
	// IP v6 ranges.
	OrganizationAddressGroupTypeIpv6 = OrganizationAddressGroupType("IPV6")
)

func (OrganizationAddressGroupType) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAddressGroupType)(nil)).Elem()
}

func (e OrganizationAddressGroupType) ToOrganizationAddressGroupTypeOutput() OrganizationAddressGroupTypeOutput {
	return pulumi.ToOutput(e).(OrganizationAddressGroupTypeOutput)
}

func (e OrganizationAddressGroupType) ToOrganizationAddressGroupTypeOutputWithContext(ctx context.Context) OrganizationAddressGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OrganizationAddressGroupTypeOutput)
}

func (e OrganizationAddressGroupType) ToOrganizationAddressGroupTypePtrOutput() OrganizationAddressGroupTypePtrOutput {
	return e.ToOrganizationAddressGroupTypePtrOutputWithContext(context.Background())
}

func (e OrganizationAddressGroupType) ToOrganizationAddressGroupTypePtrOutputWithContext(ctx context.Context) OrganizationAddressGroupTypePtrOutput {
	return OrganizationAddressGroupType(e).ToOrganizationAddressGroupTypeOutputWithContext(ctx).ToOrganizationAddressGroupTypePtrOutputWithContext(ctx)
}

func (e OrganizationAddressGroupType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OrganizationAddressGroupType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OrganizationAddressGroupType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OrganizationAddressGroupType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OrganizationAddressGroupTypeOutput struct{ *pulumi.OutputState }

func (OrganizationAddressGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAddressGroupType)(nil)).Elem()
}

func (o OrganizationAddressGroupTypeOutput) ToOrganizationAddressGroupTypeOutput() OrganizationAddressGroupTypeOutput {
	return o
}

func (o OrganizationAddressGroupTypeOutput) ToOrganizationAddressGroupTypeOutputWithContext(ctx context.Context) OrganizationAddressGroupTypeOutput {
	return o
}

func (o OrganizationAddressGroupTypeOutput) ToOrganizationAddressGroupTypePtrOutput() OrganizationAddressGroupTypePtrOutput {
	return o.ToOrganizationAddressGroupTypePtrOutputWithContext(context.Background())
}

func (o OrganizationAddressGroupTypeOutput) ToOrganizationAddressGroupTypePtrOutputWithContext(ctx context.Context) OrganizationAddressGroupTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationAddressGroupType) *OrganizationAddressGroupType {
		return &v
	}).(OrganizationAddressGroupTypePtrOutput)
}

func (o OrganizationAddressGroupTypeOutput) ToOutput(ctx context.Context) pulumix.Output[OrganizationAddressGroupType] {
	return pulumix.Output[OrganizationAddressGroupType]{
		OutputState: o.OutputState,
	}
}

func (o OrganizationAddressGroupTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OrganizationAddressGroupTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OrganizationAddressGroupType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OrganizationAddressGroupTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OrganizationAddressGroupTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OrganizationAddressGroupType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OrganizationAddressGroupTypePtrOutput struct{ *pulumi.OutputState }

func (OrganizationAddressGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationAddressGroupType)(nil)).Elem()
}

func (o OrganizationAddressGroupTypePtrOutput) ToOrganizationAddressGroupTypePtrOutput() OrganizationAddressGroupTypePtrOutput {
	return o
}

func (o OrganizationAddressGroupTypePtrOutput) ToOrganizationAddressGroupTypePtrOutputWithContext(ctx context.Context) OrganizationAddressGroupTypePtrOutput {
	return o
}

func (o OrganizationAddressGroupTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrganizationAddressGroupType] {
	return pulumix.Output[*OrganizationAddressGroupType]{
		OutputState: o.OutputState,
	}
}

func (o OrganizationAddressGroupTypePtrOutput) Elem() OrganizationAddressGroupTypeOutput {
	return o.ApplyT(func(v *OrganizationAddressGroupType) OrganizationAddressGroupType {
		if v != nil {
			return *v
		}
		var ret OrganizationAddressGroupType
		return ret
	}).(OrganizationAddressGroupTypeOutput)
}

func (o OrganizationAddressGroupTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OrganizationAddressGroupTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OrganizationAddressGroupType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OrganizationAddressGroupTypeInput is an input type that accepts OrganizationAddressGroupTypeArgs and OrganizationAddressGroupTypeOutput values.
// You can construct a concrete instance of `OrganizationAddressGroupTypeInput` via:
//
//	OrganizationAddressGroupTypeArgs{...}
type OrganizationAddressGroupTypeInput interface {
	pulumi.Input

	ToOrganizationAddressGroupTypeOutput() OrganizationAddressGroupTypeOutput
	ToOrganizationAddressGroupTypeOutputWithContext(context.Context) OrganizationAddressGroupTypeOutput
}

var organizationAddressGroupTypePtrType = reflect.TypeOf((**OrganizationAddressGroupType)(nil)).Elem()

type OrganizationAddressGroupTypePtrInput interface {
	pulumi.Input

	ToOrganizationAddressGroupTypePtrOutput() OrganizationAddressGroupTypePtrOutput
	ToOrganizationAddressGroupTypePtrOutputWithContext(context.Context) OrganizationAddressGroupTypePtrOutput
}

type organizationAddressGroupTypePtr string

func OrganizationAddressGroupTypePtr(v string) OrganizationAddressGroupTypePtrInput {
	return (*organizationAddressGroupTypePtr)(&v)
}

func (*organizationAddressGroupTypePtr) ElementType() reflect.Type {
	return organizationAddressGroupTypePtrType
}

func (in *organizationAddressGroupTypePtr) ToOrganizationAddressGroupTypePtrOutput() OrganizationAddressGroupTypePtrOutput {
	return pulumi.ToOutput(in).(OrganizationAddressGroupTypePtrOutput)
}

func (in *organizationAddressGroupTypePtr) ToOrganizationAddressGroupTypePtrOutputWithContext(ctx context.Context) OrganizationAddressGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OrganizationAddressGroupTypePtrOutput)
}

func (in *organizationAddressGroupTypePtr) ToOutput(ctx context.Context) pulumix.Output[*OrganizationAddressGroupType] {
	return pulumix.Output[*OrganizationAddressGroupType]{
		OutputState: in.ToOrganizationAddressGroupTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. Profile which tells what the primitive action should be.
type RuleBasicProfile string

const (
	// If there is not a mentioned action for the target.
	RuleBasicProfileBasicProfileUnspecified = RuleBasicProfile("BASIC_PROFILE_UNSPECIFIED")
	// Allow the matched traffic.
	RuleBasicProfileAllow = RuleBasicProfile("ALLOW")
	// Deny the matched traffic.
	RuleBasicProfileDeny = RuleBasicProfile("DENY")
)

func (RuleBasicProfile) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleBasicProfile)(nil)).Elem()
}

func (e RuleBasicProfile) ToRuleBasicProfileOutput() RuleBasicProfileOutput {
	return pulumi.ToOutput(e).(RuleBasicProfileOutput)
}

func (e RuleBasicProfile) ToRuleBasicProfileOutputWithContext(ctx context.Context) RuleBasicProfileOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleBasicProfileOutput)
}

func (e RuleBasicProfile) ToRuleBasicProfilePtrOutput() RuleBasicProfilePtrOutput {
	return e.ToRuleBasicProfilePtrOutputWithContext(context.Background())
}

func (e RuleBasicProfile) ToRuleBasicProfilePtrOutputWithContext(ctx context.Context) RuleBasicProfilePtrOutput {
	return RuleBasicProfile(e).ToRuleBasicProfileOutputWithContext(ctx).ToRuleBasicProfilePtrOutputWithContext(ctx)
}

func (e RuleBasicProfile) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleBasicProfile) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleBasicProfile) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleBasicProfile) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleBasicProfileOutput struct{ *pulumi.OutputState }

func (RuleBasicProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleBasicProfile)(nil)).Elem()
}

func (o RuleBasicProfileOutput) ToRuleBasicProfileOutput() RuleBasicProfileOutput {
	return o
}

func (o RuleBasicProfileOutput) ToRuleBasicProfileOutputWithContext(ctx context.Context) RuleBasicProfileOutput {
	return o
}

func (o RuleBasicProfileOutput) ToRuleBasicProfilePtrOutput() RuleBasicProfilePtrOutput {
	return o.ToRuleBasicProfilePtrOutputWithContext(context.Background())
}

func (o RuleBasicProfileOutput) ToRuleBasicProfilePtrOutputWithContext(ctx context.Context) RuleBasicProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleBasicProfile) *RuleBasicProfile {
		return &v
	}).(RuleBasicProfilePtrOutput)
}

func (o RuleBasicProfileOutput) ToOutput(ctx context.Context) pulumix.Output[RuleBasicProfile] {
	return pulumix.Output[RuleBasicProfile]{
		OutputState: o.OutputState,
	}
}

func (o RuleBasicProfileOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleBasicProfileOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleBasicProfile) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleBasicProfileOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleBasicProfileOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleBasicProfile) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleBasicProfilePtrOutput struct{ *pulumi.OutputState }

func (RuleBasicProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleBasicProfile)(nil)).Elem()
}

func (o RuleBasicProfilePtrOutput) ToRuleBasicProfilePtrOutput() RuleBasicProfilePtrOutput {
	return o
}

func (o RuleBasicProfilePtrOutput) ToRuleBasicProfilePtrOutputWithContext(ctx context.Context) RuleBasicProfilePtrOutput {
	return o
}

func (o RuleBasicProfilePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleBasicProfile] {
	return pulumix.Output[*RuleBasicProfile]{
		OutputState: o.OutputState,
	}
}

func (o RuleBasicProfilePtrOutput) Elem() RuleBasicProfileOutput {
	return o.ApplyT(func(v *RuleBasicProfile) RuleBasicProfile {
		if v != nil {
			return *v
		}
		var ret RuleBasicProfile
		return ret
	}).(RuleBasicProfileOutput)
}

func (o RuleBasicProfilePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleBasicProfilePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleBasicProfile) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleBasicProfileInput is an input type that accepts RuleBasicProfileArgs and RuleBasicProfileOutput values.
// You can construct a concrete instance of `RuleBasicProfileInput` via:
//
//	RuleBasicProfileArgs{...}
type RuleBasicProfileInput interface {
	pulumi.Input

	ToRuleBasicProfileOutput() RuleBasicProfileOutput
	ToRuleBasicProfileOutputWithContext(context.Context) RuleBasicProfileOutput
}

var ruleBasicProfilePtrType = reflect.TypeOf((**RuleBasicProfile)(nil)).Elem()

type RuleBasicProfilePtrInput interface {
	pulumi.Input

	ToRuleBasicProfilePtrOutput() RuleBasicProfilePtrOutput
	ToRuleBasicProfilePtrOutputWithContext(context.Context) RuleBasicProfilePtrOutput
}

type ruleBasicProfilePtr string

func RuleBasicProfilePtr(v string) RuleBasicProfilePtrInput {
	return (*ruleBasicProfilePtr)(&v)
}

func (*ruleBasicProfilePtr) ElementType() reflect.Type {
	return ruleBasicProfilePtrType
}

func (in *ruleBasicProfilePtr) ToRuleBasicProfilePtrOutput() RuleBasicProfilePtrOutput {
	return pulumi.ToOutput(in).(RuleBasicProfilePtrOutput)
}

func (in *ruleBasicProfilePtr) ToRuleBasicProfilePtrOutputWithContext(ctx context.Context) RuleBasicProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleBasicProfilePtrOutput)
}

func (in *ruleBasicProfilePtr) ToOutput(ctx context.Context) pulumix.Output[*RuleBasicProfile] {
	return pulumix.Output[*RuleBasicProfile]{
		OutputState: in.ToRuleBasicProfilePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AddressGroupTypeInput)(nil)).Elem(), AddressGroupType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AddressGroupTypePtrInput)(nil)).Elem(), AddressGroupType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicyActionInput)(nil)).Elem(), AuthorizationPolicyAction("ACTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicyActionPtrInput)(nil)).Elem(), AuthorizationPolicyAction("ACTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditLogConfigLogTypeInput)(nil)).Elem(), GoogleIamV1AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditLogConfigLogTypePtrInput)(nil)).Elem(), GoogleIamV1AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MTLSPolicyClientValidationModeInput)(nil)).Elem(), MTLSPolicyClientValidationMode("CLIENT_VALIDATION_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MTLSPolicyClientValidationModePtrInput)(nil)).Elem(), MTLSPolicyClientValidationMode("CLIENT_VALIDATION_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationAddressGroupTypeInput)(nil)).Elem(), OrganizationAddressGroupType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationAddressGroupTypePtrInput)(nil)).Elem(), OrganizationAddressGroupType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleBasicProfileInput)(nil)).Elem(), RuleBasicProfile("BASIC_PROFILE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleBasicProfilePtrInput)(nil)).Elem(), RuleBasicProfile("BASIC_PROFILE_UNSPECIFIED"))
	pulumi.RegisterOutputType(AddressGroupTypeOutput{})
	pulumi.RegisterOutputType(AddressGroupTypePtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyActionOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(MTLSPolicyClientValidationModeOutput{})
	pulumi.RegisterOutputType(MTLSPolicyClientValidationModePtrOutput{})
	pulumi.RegisterOutputType(OrganizationAddressGroupTypeOutput{})
	pulumi.RegisterOutputType(OrganizationAddressGroupTypePtrOutput{})
	pulumi.RegisterOutputType(RuleBasicProfileOutput{})
	pulumi.RegisterOutputType(RuleBasicProfilePtrOutput{})
}
