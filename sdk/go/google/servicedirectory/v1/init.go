// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "google-native:servicedirectory/v1:Endpoint":
		r = &Endpoint{}
	case "google-native:servicedirectory/v1:Namespace":
		r = &Namespace{}
	case "google-native:servicedirectory/v1:NamespaceIamBinding":
		r = &NamespaceIamBinding{}
	case "google-native:servicedirectory/v1:NamespaceIamMember":
		r = &NamespaceIamMember{}
	case "google-native:servicedirectory/v1:NamespaceIamPolicy":
		r = &NamespaceIamPolicy{}
	case "google-native:servicedirectory/v1:NamespaceServiceIamBinding":
		r = &NamespaceServiceIamBinding{}
	case "google-native:servicedirectory/v1:NamespaceServiceIamMember":
		r = &NamespaceServiceIamMember{}
	case "google-native:servicedirectory/v1:NamespaceServiceIamPolicy":
		r = &NamespaceServiceIamPolicy{}
	case "google-native:servicedirectory/v1:Service":
		r = &Service{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"google-native",
		"servicedirectory/v1",
		&module{version},
	)
}
