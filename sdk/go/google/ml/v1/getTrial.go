// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a trial.
func LookupTrial(ctx *pulumi.Context, args *LookupTrialArgs, opts ...pulumi.InvokeOption) (*LookupTrialResult, error) {
	var rv LookupTrialResult
	err := ctx.Invoke("google-native:ml/v1:getTrial", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTrialArgs struct {
	Location string `pulumi:"location"`
	Project  string `pulumi:"project"`
	StudyId  string `pulumi:"studyId"`
	TrialId  string `pulumi:"trialId"`
}

type LookupTrialResult struct {
	// The identifier of the client that originally requested this trial.
	ClientId string `pulumi:"clientId"`
	// Time at which the trial's status changed to COMPLETED.
	EndTime string `pulumi:"endTime"`
	// The final measurement containing the objective value.
	FinalMeasurement GoogleCloudMlV1__MeasurementResponse `pulumi:"finalMeasurement"`
	// A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true.
	InfeasibleReason string `pulumi:"infeasibleReason"`
	// A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.
	Measurements []GoogleCloudMlV1__MeasurementResponse `pulumi:"measurements"`
	// Name of the trial assigned by the service.
	Name string `pulumi:"name"`
	// The parameters of the trial.
	Parameters []GoogleCloudMlV1_Trial_ParameterResponse `pulumi:"parameters"`
	// Time at which the trial was started.
	StartTime string `pulumi:"startTime"`
	// The detailed state of a trial.
	State string `pulumi:"state"`
	// If true, the parameters in this trial are not attempted again.
	TrialInfeasible bool `pulumi:"trialInfeasible"`
}
