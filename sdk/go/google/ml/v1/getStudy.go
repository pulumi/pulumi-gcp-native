// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a study.
func LookupStudy(ctx *pulumi.Context, args *LookupStudyArgs, opts ...pulumi.InvokeOption) (*LookupStudyResult, error) {
	var rv LookupStudyResult
	err := ctx.Invoke("google-native:ml/v1:getStudy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStudyArgs struct {
	Location string  `pulumi:"location"`
	Project  *string `pulumi:"project"`
	StudyId  string  `pulumi:"studyId"`
}

type LookupStudyResult struct {
	// Time at which the study was created.
	CreateTime string `pulumi:"createTime"`
	// A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.
	InactiveReason string `pulumi:"inactiveReason"`
	// The name of a study.
	Name string `pulumi:"name"`
	// The detailed state of a study.
	State string `pulumi:"state"`
	// Configuration of the study.
	StudyConfig GoogleCloudMlV1__StudyConfigResponse `pulumi:"studyConfig"`
}

func LookupStudyOutput(ctx *pulumi.Context, args LookupStudyOutputArgs, opts ...pulumi.InvokeOption) LookupStudyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStudyResult, error) {
			args := v.(LookupStudyArgs)
			r, err := LookupStudy(ctx, &args, opts...)
			var s LookupStudyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStudyResultOutput)
}

type LookupStudyOutputArgs struct {
	Location pulumi.StringInput    `pulumi:"location"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
	StudyId  pulumi.StringInput    `pulumi:"studyId"`
}

func (LookupStudyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStudyArgs)(nil)).Elem()
}

type LookupStudyResultOutput struct{ *pulumi.OutputState }

func (LookupStudyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStudyResult)(nil)).Elem()
}

func (o LookupStudyResultOutput) ToLookupStudyResultOutput() LookupStudyResultOutput {
	return o
}

func (o LookupStudyResultOutput) ToLookupStudyResultOutputWithContext(ctx context.Context) LookupStudyResultOutput {
	return o
}

// Time at which the study was created.
func (o LookupStudyResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStudyResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.
func (o LookupStudyResultOutput) InactiveReason() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStudyResult) string { return v.InactiveReason }).(pulumi.StringOutput)
}

// The name of a study.
func (o LookupStudyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStudyResult) string { return v.Name }).(pulumi.StringOutput)
}

// The detailed state of a study.
func (o LookupStudyResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStudyResult) string { return v.State }).(pulumi.StringOutput)
}

// Configuration of the study.
func (o LookupStudyResultOutput) StudyConfig() GoogleCloudMlV1__StudyConfigResponseOutput {
	return o.ApplyT(func(v LookupStudyResult) GoogleCloudMlV1__StudyConfigResponse { return v.StudyConfig }).(GoogleCloudMlV1__StudyConfigResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStudyResultOutput{})
}
