// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates Assured Workload.
type OrganizationWorkload struct {
	pulumi.CustomResourceState
}

// NewOrganizationWorkload registers a new resource with the given unique name, arguments, and options.
func NewOrganizationWorkload(ctx *pulumi.Context,
	name string, args *OrganizationWorkloadArgs, opts ...pulumi.ResourceOption) (*OrganizationWorkload, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.OrganizationsId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationsId'")
	}
	if args.WorkloadsId == nil {
		return nil, errors.New("invalid value for required argument 'WorkloadsId'")
	}
	var resource OrganizationWorkload
	err := ctx.RegisterResource("google-cloud:assuredworkloads/v1:OrganizationWorkload", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationWorkload gets an existing OrganizationWorkload resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationWorkload(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationWorkloadState, opts ...pulumi.ResourceOption) (*OrganizationWorkload, error) {
	var resource OrganizationWorkload
	err := ctx.ReadResource("google-cloud:assuredworkloads/v1:OrganizationWorkload", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationWorkload resources.
type organizationWorkloadState struct {
}

type OrganizationWorkloadState struct {
}

func (OrganizationWorkloadState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationWorkloadState)(nil)).Elem()
}

type organizationWorkloadArgs struct {
	// Required. Input only. The billing account used for the resources which are direct children of workload. This billing account is initially associated with the resources created as part of Workload creation. After the initial creation of these resources, the customer can change the assigned billing account. The resource name has the form `billingAccounts/{billing_account_id}`. For example, `billingAccounts/012345-567890-ABCDEF`.
	BillingAccount *string `pulumi:"billingAccount"`
	// Required. Immutable. Compliance Regime associated with this workload.
	ComplianceRegime *string `pulumi:"complianceRegime"`
	// Output only. Immutable. The Workload creation timestamp.
	CreateTime *string `pulumi:"createTime"`
	// Required. The user-assigned display name of the Workload. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, and spaces. Example: My Workload
	DisplayName *string `pulumi:"displayName"`
	// Optional. ETag of the workload, it is calculated on the basis of the Workload contents. It will be used in Update & Delete operations.
	Etag *string `pulumi:"etag"`
	// Input only. Settings used to create a CMEK crypto key. When set a project with a KMS CMEK key is provisioned. This field is mandatory for a subset of Compliance Regimes.
	KmsSettings *GoogleCloudAssuredworkloadsV1WorkloadKMSSettings `pulumi:"kmsSettings"`
	// Optional. Labels applied to the workload.
	Labels      map[string]string `pulumi:"labels"`
	LocationsId string            `pulumi:"locationsId"`
	// Optional. The resource name of the workload. Format: organizations/{organization}/locations/{location}/workloads/{workload} Read-only.
	Name            *string `pulumi:"name"`
	OrganizationsId string  `pulumi:"organizationsId"`
	// Input only. The parent resource for the resources managed by this Assured Workload. May be either an organization or a folder. Must be the same or a child of the Workload parent. If not specified all resources are created under the Workload parent. Formats: folders/{folder_id} organizations/{organization_id}
	ProvisionedResourcesParent *string `pulumi:"provisionedResourcesParent"`
	// Output only. The resources associated with this workload. These resources will be created when creating the workload. If any of the projects already exist, the workload creation will fail. Always read only.
	Resources   []GoogleCloudAssuredworkloadsV1WorkloadResourceInfo `pulumi:"resources"`
	WorkloadsId string                                              `pulumi:"workloadsId"`
}

// The set of arguments for constructing a OrganizationWorkload resource.
type OrganizationWorkloadArgs struct {
	// Required. Input only. The billing account used for the resources which are direct children of workload. This billing account is initially associated with the resources created as part of Workload creation. After the initial creation of these resources, the customer can change the assigned billing account. The resource name has the form `billingAccounts/{billing_account_id}`. For example, `billingAccounts/012345-567890-ABCDEF`.
	BillingAccount pulumi.StringPtrInput
	// Required. Immutable. Compliance Regime associated with this workload.
	ComplianceRegime pulumi.StringPtrInput
	// Output only. Immutable. The Workload creation timestamp.
	CreateTime pulumi.StringPtrInput
	// Required. The user-assigned display name of the Workload. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, and spaces. Example: My Workload
	DisplayName pulumi.StringPtrInput
	// Optional. ETag of the workload, it is calculated on the basis of the Workload contents. It will be used in Update & Delete operations.
	Etag pulumi.StringPtrInput
	// Input only. Settings used to create a CMEK crypto key. When set a project with a KMS CMEK key is provisioned. This field is mandatory for a subset of Compliance Regimes.
	KmsSettings GoogleCloudAssuredworkloadsV1WorkloadKMSSettingsPtrInput
	// Optional. Labels applied to the workload.
	Labels      pulumi.StringMapInput
	LocationsId pulumi.StringInput
	// Optional. The resource name of the workload. Format: organizations/{organization}/locations/{location}/workloads/{workload} Read-only.
	Name            pulumi.StringPtrInput
	OrganizationsId pulumi.StringInput
	// Input only. The parent resource for the resources managed by this Assured Workload. May be either an organization or a folder. Must be the same or a child of the Workload parent. If not specified all resources are created under the Workload parent. Formats: folders/{folder_id} organizations/{organization_id}
	ProvisionedResourcesParent pulumi.StringPtrInput
	// Output only. The resources associated with this workload. These resources will be created when creating the workload. If any of the projects already exist, the workload creation will fail. Always read only.
	Resources   GoogleCloudAssuredworkloadsV1WorkloadResourceInfoArrayInput
	WorkloadsId pulumi.StringInput
}

func (OrganizationWorkloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationWorkloadArgs)(nil)).Elem()
}

type OrganizationWorkloadInput interface {
	pulumi.Input

	ToOrganizationWorkloadOutput() OrganizationWorkloadOutput
	ToOrganizationWorkloadOutputWithContext(ctx context.Context) OrganizationWorkloadOutput
}

func (*OrganizationWorkload) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationWorkload)(nil))
}

func (i *OrganizationWorkload) ToOrganizationWorkloadOutput() OrganizationWorkloadOutput {
	return i.ToOrganizationWorkloadOutputWithContext(context.Background())
}

func (i *OrganizationWorkload) ToOrganizationWorkloadOutputWithContext(ctx context.Context) OrganizationWorkloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationWorkloadOutput)
}

type OrganizationWorkloadOutput struct {
	*pulumi.OutputState
}

func (OrganizationWorkloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationWorkload)(nil))
}

func (o OrganizationWorkloadOutput) ToOrganizationWorkloadOutput() OrganizationWorkloadOutput {
	return o
}

func (o OrganizationWorkloadOutput) ToOrganizationWorkloadOutputWithContext(ctx context.Context) OrganizationWorkloadOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationWorkloadOutput{})
}
