// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new API key. NOTE: Key is a global resource; hence the only supported value for location is `global`.
// Auto-naming is currently not supported for this resource.
type Key struct {
	pulumi.CustomResourceState

	// Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// A timestamp identifying the time this key was originally created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A timestamp when this key was deleted. If the resource is not deleted, this must be empty.
	DeleteTime pulumi.StringOutput `pulumi:"deleteTime"`
	// Human-readable display name of this key that you can modify. The maximum length is 63 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// A checksum computed by the server based on the current value of the Key resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. See https://google.aip.dev/154.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// User specified key id (optional). If specified, it will become the final component of the key resource name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. In another word, the id must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`. The id must NOT be a UUID-like string.
	KeyId pulumi.StringPtrOutput `pulumi:"keyId"`
	// An encrypted and signed value held by this key. This field can be accessed only through the `GetKeyString` method.
	KeyString pulumi.StringOutput `pulumi:"keyString"`
	Location  pulumi.StringOutput `pulumi:"location"`
	// The resource name of the key. The `name` has the form: `projects//locations/global/keys/`. For example: `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is a global resource; hence the only supported value for location is `global`.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Key restrictions.
	Restrictions V2RestrictionsResponseOutput `pulumi:"restrictions"`
	// Unique id in UUID4 format.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// A timestamp identifying the time this key was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewKey registers a new resource with the given unique name, arguments, and options.
func NewKey(ctx *pulumi.Context,
	name string, args *KeyArgs, opts ...pulumi.ResourceOption) (*Key, error) {
	if args == nil {
		args = &KeyArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Key
	err := ctx.RegisterResource("google-native:apikeys/v2:Key", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKey gets an existing Key resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KeyState, opts ...pulumi.ResourceOption) (*Key, error) {
	var resource Key
	err := ctx.ReadResource("google-native:apikeys/v2:Key", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Key resources.
type keyState struct {
}

type KeyState struct {
}

func (KeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*keyState)(nil)).Elem()
}

type keyArgs struct {
	// Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects.
	Annotations map[string]string `pulumi:"annotations"`
	// Human-readable display name of this key that you can modify. The maximum length is 63 characters.
	DisplayName *string `pulumi:"displayName"`
	// User specified key id (optional). If specified, it will become the final component of the key resource name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. In another word, the id must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`. The id must NOT be a UUID-like string.
	KeyId    *string `pulumi:"keyId"`
	Location *string `pulumi:"location"`
	Project  *string `pulumi:"project"`
	// Key restrictions.
	Restrictions *V2Restrictions `pulumi:"restrictions"`
}

// The set of arguments for constructing a Key resource.
type KeyArgs struct {
	// Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects.
	Annotations pulumi.StringMapInput
	// Human-readable display name of this key that you can modify. The maximum length is 63 characters.
	DisplayName pulumi.StringPtrInput
	// User specified key id (optional). If specified, it will become the final component of the key resource name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. In another word, the id must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`. The id must NOT be a UUID-like string.
	KeyId    pulumi.StringPtrInput
	Location pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// Key restrictions.
	Restrictions V2RestrictionsPtrInput
}

func (KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*keyArgs)(nil)).Elem()
}

type KeyInput interface {
	pulumi.Input

	ToKeyOutput() KeyOutput
	ToKeyOutputWithContext(ctx context.Context) KeyOutput
}

func (*Key) ElementType() reflect.Type {
	return reflect.TypeOf((**Key)(nil)).Elem()
}

func (i *Key) ToKeyOutput() KeyOutput {
	return i.ToKeyOutputWithContext(context.Background())
}

func (i *Key) ToKeyOutputWithContext(ctx context.Context) KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyOutput)
}

func (i *Key) ToOutput(ctx context.Context) pulumix.Output[*Key] {
	return pulumix.Output[*Key]{
		OutputState: i.ToKeyOutputWithContext(ctx).OutputState,
	}
}

type KeyOutput struct{ *pulumi.OutputState }

func (KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Key)(nil)).Elem()
}

func (o KeyOutput) ToKeyOutput() KeyOutput {
	return o
}

func (o KeyOutput) ToKeyOutputWithContext(ctx context.Context) KeyOutput {
	return o
}

func (o KeyOutput) ToOutput(ctx context.Context) pulumix.Output[*Key] {
	return pulumix.Output[*Key]{
		OutputState: o.OutputState,
	}
}

// Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects.
func (o KeyOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Key) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// A timestamp identifying the time this key was originally created.
func (o KeyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Key) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A timestamp when this key was deleted. If the resource is not deleted, this must be empty.
func (o KeyOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Key) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

// Human-readable display name of this key that you can modify. The maximum length is 63 characters.
func (o KeyOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Key) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// A checksum computed by the server based on the current value of the Key resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. See https://google.aip.dev/154.
func (o KeyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *Key) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// User specified key id (optional). If specified, it will become the final component of the key resource name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. In another word, the id must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`. The id must NOT be a UUID-like string.
func (o KeyOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Key) pulumi.StringPtrOutput { return v.KeyId }).(pulumi.StringPtrOutput)
}

// An encrypted and signed value held by this key. This field can be accessed only through the `GetKeyString` method.
func (o KeyOutput) KeyString() pulumi.StringOutput {
	return o.ApplyT(func(v *Key) pulumi.StringOutput { return v.KeyString }).(pulumi.StringOutput)
}

func (o KeyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Key) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the key. The `name` has the form: `projects//locations/global/keys/`. For example: `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is a global resource; hence the only supported value for location is `global`.
func (o KeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Key) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o KeyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Key) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Key restrictions.
func (o KeyOutput) Restrictions() V2RestrictionsResponseOutput {
	return o.ApplyT(func(v *Key) V2RestrictionsResponseOutput { return v.Restrictions }).(V2RestrictionsResponseOutput)
}

// Unique id in UUID4 format.
func (o KeyOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *Key) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// A timestamp identifying the time this key was last updated.
func (o KeyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Key) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KeyInput)(nil)).Elem(), &Key{})
	pulumi.RegisterOutputType(KeyOutput{})
}
