// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Identifier of an Android application for key use.
type V2AndroidApplication struct {
	// The package name of the application.
	PackageName *string `pulumi:"packageName"`
	// The SHA1 fingerprint of the application. For example, both sha1 formats are acceptable : DA:39:A3:EE:5E:6B:4B:0D:32:55:BF:EF:95:60:18:90:AF:D8:07:09 or DA39A3EE5E6B4B0D3255BFEF95601890AFD80709. Output format is the latter.
	Sha1Fingerprint *string `pulumi:"sha1Fingerprint"`
}

// V2AndroidApplicationInput is an input type that accepts V2AndroidApplicationArgs and V2AndroidApplicationOutput values.
// You can construct a concrete instance of `V2AndroidApplicationInput` via:
//
//	V2AndroidApplicationArgs{...}
type V2AndroidApplicationInput interface {
	pulumi.Input

	ToV2AndroidApplicationOutput() V2AndroidApplicationOutput
	ToV2AndroidApplicationOutputWithContext(context.Context) V2AndroidApplicationOutput
}

// Identifier of an Android application for key use.
type V2AndroidApplicationArgs struct {
	// The package name of the application.
	PackageName pulumi.StringPtrInput `pulumi:"packageName"`
	// The SHA1 fingerprint of the application. For example, both sha1 formats are acceptable : DA:39:A3:EE:5E:6B:4B:0D:32:55:BF:EF:95:60:18:90:AF:D8:07:09 or DA39A3EE5E6B4B0D3255BFEF95601890AFD80709. Output format is the latter.
	Sha1Fingerprint pulumi.StringPtrInput `pulumi:"sha1Fingerprint"`
}

func (V2AndroidApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*V2AndroidApplication)(nil)).Elem()
}

func (i V2AndroidApplicationArgs) ToV2AndroidApplicationOutput() V2AndroidApplicationOutput {
	return i.ToV2AndroidApplicationOutputWithContext(context.Background())
}

func (i V2AndroidApplicationArgs) ToV2AndroidApplicationOutputWithContext(ctx context.Context) V2AndroidApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2AndroidApplicationOutput)
}

// V2AndroidApplicationArrayInput is an input type that accepts V2AndroidApplicationArray and V2AndroidApplicationArrayOutput values.
// You can construct a concrete instance of `V2AndroidApplicationArrayInput` via:
//
//	V2AndroidApplicationArray{ V2AndroidApplicationArgs{...} }
type V2AndroidApplicationArrayInput interface {
	pulumi.Input

	ToV2AndroidApplicationArrayOutput() V2AndroidApplicationArrayOutput
	ToV2AndroidApplicationArrayOutputWithContext(context.Context) V2AndroidApplicationArrayOutput
}

type V2AndroidApplicationArray []V2AndroidApplicationInput

func (V2AndroidApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]V2AndroidApplication)(nil)).Elem()
}

func (i V2AndroidApplicationArray) ToV2AndroidApplicationArrayOutput() V2AndroidApplicationArrayOutput {
	return i.ToV2AndroidApplicationArrayOutputWithContext(context.Background())
}

func (i V2AndroidApplicationArray) ToV2AndroidApplicationArrayOutputWithContext(ctx context.Context) V2AndroidApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2AndroidApplicationArrayOutput)
}

// Identifier of an Android application for key use.
type V2AndroidApplicationOutput struct{ *pulumi.OutputState }

func (V2AndroidApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2AndroidApplication)(nil)).Elem()
}

func (o V2AndroidApplicationOutput) ToV2AndroidApplicationOutput() V2AndroidApplicationOutput {
	return o
}

func (o V2AndroidApplicationOutput) ToV2AndroidApplicationOutputWithContext(ctx context.Context) V2AndroidApplicationOutput {
	return o
}

// The package name of the application.
func (o V2AndroidApplicationOutput) PackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v V2AndroidApplication) *string { return v.PackageName }).(pulumi.StringPtrOutput)
}

// The SHA1 fingerprint of the application. For example, both sha1 formats are acceptable : DA:39:A3:EE:5E:6B:4B:0D:32:55:BF:EF:95:60:18:90:AF:D8:07:09 or DA39A3EE5E6B4B0D3255BFEF95601890AFD80709. Output format is the latter.
func (o V2AndroidApplicationOutput) Sha1Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v V2AndroidApplication) *string { return v.Sha1Fingerprint }).(pulumi.StringPtrOutput)
}

type V2AndroidApplicationArrayOutput struct{ *pulumi.OutputState }

func (V2AndroidApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]V2AndroidApplication)(nil)).Elem()
}

func (o V2AndroidApplicationArrayOutput) ToV2AndroidApplicationArrayOutput() V2AndroidApplicationArrayOutput {
	return o
}

func (o V2AndroidApplicationArrayOutput) ToV2AndroidApplicationArrayOutputWithContext(ctx context.Context) V2AndroidApplicationArrayOutput {
	return o
}

func (o V2AndroidApplicationArrayOutput) Index(i pulumi.IntInput) V2AndroidApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) V2AndroidApplication {
		return vs[0].([]V2AndroidApplication)[vs[1].(int)]
	}).(V2AndroidApplicationOutput)
}

// Identifier of an Android application for key use.
type V2AndroidApplicationResponse struct {
	// The package name of the application.
	PackageName string `pulumi:"packageName"`
	// The SHA1 fingerprint of the application. For example, both sha1 formats are acceptable : DA:39:A3:EE:5E:6B:4B:0D:32:55:BF:EF:95:60:18:90:AF:D8:07:09 or DA39A3EE5E6B4B0D3255BFEF95601890AFD80709. Output format is the latter.
	Sha1Fingerprint string `pulumi:"sha1Fingerprint"`
}

// Identifier of an Android application for key use.
type V2AndroidApplicationResponseOutput struct{ *pulumi.OutputState }

func (V2AndroidApplicationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2AndroidApplicationResponse)(nil)).Elem()
}

func (o V2AndroidApplicationResponseOutput) ToV2AndroidApplicationResponseOutput() V2AndroidApplicationResponseOutput {
	return o
}

func (o V2AndroidApplicationResponseOutput) ToV2AndroidApplicationResponseOutputWithContext(ctx context.Context) V2AndroidApplicationResponseOutput {
	return o
}

// The package name of the application.
func (o V2AndroidApplicationResponseOutput) PackageName() pulumi.StringOutput {
	return o.ApplyT(func(v V2AndroidApplicationResponse) string { return v.PackageName }).(pulumi.StringOutput)
}

// The SHA1 fingerprint of the application. For example, both sha1 formats are acceptable : DA:39:A3:EE:5E:6B:4B:0D:32:55:BF:EF:95:60:18:90:AF:D8:07:09 or DA39A3EE5E6B4B0D3255BFEF95601890AFD80709. Output format is the latter.
func (o V2AndroidApplicationResponseOutput) Sha1Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v V2AndroidApplicationResponse) string { return v.Sha1Fingerprint }).(pulumi.StringOutput)
}

type V2AndroidApplicationResponseArrayOutput struct{ *pulumi.OutputState }

func (V2AndroidApplicationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]V2AndroidApplicationResponse)(nil)).Elem()
}

func (o V2AndroidApplicationResponseArrayOutput) ToV2AndroidApplicationResponseArrayOutput() V2AndroidApplicationResponseArrayOutput {
	return o
}

func (o V2AndroidApplicationResponseArrayOutput) ToV2AndroidApplicationResponseArrayOutputWithContext(ctx context.Context) V2AndroidApplicationResponseArrayOutput {
	return o
}

func (o V2AndroidApplicationResponseArrayOutput) Index(i pulumi.IntInput) V2AndroidApplicationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) V2AndroidApplicationResponse {
		return vs[0].([]V2AndroidApplicationResponse)[vs[1].(int)]
	}).(V2AndroidApplicationResponseOutput)
}

// The Android apps that are allowed to use the key.
type V2AndroidKeyRestrictions struct {
	// A list of Android applications that are allowed to make API calls with this key.
	AllowedApplications []V2AndroidApplication `pulumi:"allowedApplications"`
}

// V2AndroidKeyRestrictionsInput is an input type that accepts V2AndroidKeyRestrictionsArgs and V2AndroidKeyRestrictionsOutput values.
// You can construct a concrete instance of `V2AndroidKeyRestrictionsInput` via:
//
//	V2AndroidKeyRestrictionsArgs{...}
type V2AndroidKeyRestrictionsInput interface {
	pulumi.Input

	ToV2AndroidKeyRestrictionsOutput() V2AndroidKeyRestrictionsOutput
	ToV2AndroidKeyRestrictionsOutputWithContext(context.Context) V2AndroidKeyRestrictionsOutput
}

// The Android apps that are allowed to use the key.
type V2AndroidKeyRestrictionsArgs struct {
	// A list of Android applications that are allowed to make API calls with this key.
	AllowedApplications V2AndroidApplicationArrayInput `pulumi:"allowedApplications"`
}

func (V2AndroidKeyRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*V2AndroidKeyRestrictions)(nil)).Elem()
}

func (i V2AndroidKeyRestrictionsArgs) ToV2AndroidKeyRestrictionsOutput() V2AndroidKeyRestrictionsOutput {
	return i.ToV2AndroidKeyRestrictionsOutputWithContext(context.Background())
}

func (i V2AndroidKeyRestrictionsArgs) ToV2AndroidKeyRestrictionsOutputWithContext(ctx context.Context) V2AndroidKeyRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2AndroidKeyRestrictionsOutput)
}

func (i V2AndroidKeyRestrictionsArgs) ToV2AndroidKeyRestrictionsPtrOutput() V2AndroidKeyRestrictionsPtrOutput {
	return i.ToV2AndroidKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i V2AndroidKeyRestrictionsArgs) ToV2AndroidKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2AndroidKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2AndroidKeyRestrictionsOutput).ToV2AndroidKeyRestrictionsPtrOutputWithContext(ctx)
}

// V2AndroidKeyRestrictionsPtrInput is an input type that accepts V2AndroidKeyRestrictionsArgs, V2AndroidKeyRestrictionsPtr and V2AndroidKeyRestrictionsPtrOutput values.
// You can construct a concrete instance of `V2AndroidKeyRestrictionsPtrInput` via:
//
//	        V2AndroidKeyRestrictionsArgs{...}
//
//	or:
//
//	        nil
type V2AndroidKeyRestrictionsPtrInput interface {
	pulumi.Input

	ToV2AndroidKeyRestrictionsPtrOutput() V2AndroidKeyRestrictionsPtrOutput
	ToV2AndroidKeyRestrictionsPtrOutputWithContext(context.Context) V2AndroidKeyRestrictionsPtrOutput
}

type v2androidKeyRestrictionsPtrType V2AndroidKeyRestrictionsArgs

func V2AndroidKeyRestrictionsPtr(v *V2AndroidKeyRestrictionsArgs) V2AndroidKeyRestrictionsPtrInput {
	return (*v2androidKeyRestrictionsPtrType)(v)
}

func (*v2androidKeyRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**V2AndroidKeyRestrictions)(nil)).Elem()
}

func (i *v2androidKeyRestrictionsPtrType) ToV2AndroidKeyRestrictionsPtrOutput() V2AndroidKeyRestrictionsPtrOutput {
	return i.ToV2AndroidKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i *v2androidKeyRestrictionsPtrType) ToV2AndroidKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2AndroidKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2AndroidKeyRestrictionsPtrOutput)
}

// The Android apps that are allowed to use the key.
type V2AndroidKeyRestrictionsOutput struct{ *pulumi.OutputState }

func (V2AndroidKeyRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2AndroidKeyRestrictions)(nil)).Elem()
}

func (o V2AndroidKeyRestrictionsOutput) ToV2AndroidKeyRestrictionsOutput() V2AndroidKeyRestrictionsOutput {
	return o
}

func (o V2AndroidKeyRestrictionsOutput) ToV2AndroidKeyRestrictionsOutputWithContext(ctx context.Context) V2AndroidKeyRestrictionsOutput {
	return o
}

func (o V2AndroidKeyRestrictionsOutput) ToV2AndroidKeyRestrictionsPtrOutput() V2AndroidKeyRestrictionsPtrOutput {
	return o.ToV2AndroidKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (o V2AndroidKeyRestrictionsOutput) ToV2AndroidKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2AndroidKeyRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v V2AndroidKeyRestrictions) *V2AndroidKeyRestrictions {
		return &v
	}).(V2AndroidKeyRestrictionsPtrOutput)
}

// A list of Android applications that are allowed to make API calls with this key.
func (o V2AndroidKeyRestrictionsOutput) AllowedApplications() V2AndroidApplicationArrayOutput {
	return o.ApplyT(func(v V2AndroidKeyRestrictions) []V2AndroidApplication { return v.AllowedApplications }).(V2AndroidApplicationArrayOutput)
}

type V2AndroidKeyRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (V2AndroidKeyRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**V2AndroidKeyRestrictions)(nil)).Elem()
}

func (o V2AndroidKeyRestrictionsPtrOutput) ToV2AndroidKeyRestrictionsPtrOutput() V2AndroidKeyRestrictionsPtrOutput {
	return o
}

func (o V2AndroidKeyRestrictionsPtrOutput) ToV2AndroidKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2AndroidKeyRestrictionsPtrOutput {
	return o
}

func (o V2AndroidKeyRestrictionsPtrOutput) Elem() V2AndroidKeyRestrictionsOutput {
	return o.ApplyT(func(v *V2AndroidKeyRestrictions) V2AndroidKeyRestrictions {
		if v != nil {
			return *v
		}
		var ret V2AndroidKeyRestrictions
		return ret
	}).(V2AndroidKeyRestrictionsOutput)
}

// A list of Android applications that are allowed to make API calls with this key.
func (o V2AndroidKeyRestrictionsPtrOutput) AllowedApplications() V2AndroidApplicationArrayOutput {
	return o.ApplyT(func(v *V2AndroidKeyRestrictions) []V2AndroidApplication {
		if v == nil {
			return nil
		}
		return v.AllowedApplications
	}).(V2AndroidApplicationArrayOutput)
}

// The Android apps that are allowed to use the key.
type V2AndroidKeyRestrictionsResponse struct {
	// A list of Android applications that are allowed to make API calls with this key.
	AllowedApplications []V2AndroidApplicationResponse `pulumi:"allowedApplications"`
}

// The Android apps that are allowed to use the key.
type V2AndroidKeyRestrictionsResponseOutput struct{ *pulumi.OutputState }

func (V2AndroidKeyRestrictionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2AndroidKeyRestrictionsResponse)(nil)).Elem()
}

func (o V2AndroidKeyRestrictionsResponseOutput) ToV2AndroidKeyRestrictionsResponseOutput() V2AndroidKeyRestrictionsResponseOutput {
	return o
}

func (o V2AndroidKeyRestrictionsResponseOutput) ToV2AndroidKeyRestrictionsResponseOutputWithContext(ctx context.Context) V2AndroidKeyRestrictionsResponseOutput {
	return o
}

// A list of Android applications that are allowed to make API calls with this key.
func (o V2AndroidKeyRestrictionsResponseOutput) AllowedApplications() V2AndroidApplicationResponseArrayOutput {
	return o.ApplyT(func(v V2AndroidKeyRestrictionsResponse) []V2AndroidApplicationResponse { return v.AllowedApplications }).(V2AndroidApplicationResponseArrayOutput)
}

// A restriction for a specific service and optionally one or multiple specific methods. Both fields are case insensitive.
type V2ApiTarget struct {
	// Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`
	Methods []string `pulumi:"methods"`
	// The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use [`gcloud services list`](/sdk/gcloud/reference/services/list) to get a list of services that are enabled in the project.
	Service *string `pulumi:"service"`
}

// V2ApiTargetInput is an input type that accepts V2ApiTargetArgs and V2ApiTargetOutput values.
// You can construct a concrete instance of `V2ApiTargetInput` via:
//
//	V2ApiTargetArgs{...}
type V2ApiTargetInput interface {
	pulumi.Input

	ToV2ApiTargetOutput() V2ApiTargetOutput
	ToV2ApiTargetOutputWithContext(context.Context) V2ApiTargetOutput
}

// A restriction for a specific service and optionally one or multiple specific methods. Both fields are case insensitive.
type V2ApiTargetArgs struct {
	// Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`
	Methods pulumi.StringArrayInput `pulumi:"methods"`
	// The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use [`gcloud services list`](/sdk/gcloud/reference/services/list) to get a list of services that are enabled in the project.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (V2ApiTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*V2ApiTarget)(nil)).Elem()
}

func (i V2ApiTargetArgs) ToV2ApiTargetOutput() V2ApiTargetOutput {
	return i.ToV2ApiTargetOutputWithContext(context.Background())
}

func (i V2ApiTargetArgs) ToV2ApiTargetOutputWithContext(ctx context.Context) V2ApiTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2ApiTargetOutput)
}

// V2ApiTargetArrayInput is an input type that accepts V2ApiTargetArray and V2ApiTargetArrayOutput values.
// You can construct a concrete instance of `V2ApiTargetArrayInput` via:
//
//	V2ApiTargetArray{ V2ApiTargetArgs{...} }
type V2ApiTargetArrayInput interface {
	pulumi.Input

	ToV2ApiTargetArrayOutput() V2ApiTargetArrayOutput
	ToV2ApiTargetArrayOutputWithContext(context.Context) V2ApiTargetArrayOutput
}

type V2ApiTargetArray []V2ApiTargetInput

func (V2ApiTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]V2ApiTarget)(nil)).Elem()
}

func (i V2ApiTargetArray) ToV2ApiTargetArrayOutput() V2ApiTargetArrayOutput {
	return i.ToV2ApiTargetArrayOutputWithContext(context.Background())
}

func (i V2ApiTargetArray) ToV2ApiTargetArrayOutputWithContext(ctx context.Context) V2ApiTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2ApiTargetArrayOutput)
}

// A restriction for a specific service and optionally one or multiple specific methods. Both fields are case insensitive.
type V2ApiTargetOutput struct{ *pulumi.OutputState }

func (V2ApiTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2ApiTarget)(nil)).Elem()
}

func (o V2ApiTargetOutput) ToV2ApiTargetOutput() V2ApiTargetOutput {
	return o
}

func (o V2ApiTargetOutput) ToV2ApiTargetOutputWithContext(ctx context.Context) V2ApiTargetOutput {
	return o
}

// Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`
func (o V2ApiTargetOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v V2ApiTarget) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

// The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use [`gcloud services list`](/sdk/gcloud/reference/services/list) to get a list of services that are enabled in the project.
func (o V2ApiTargetOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v V2ApiTarget) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type V2ApiTargetArrayOutput struct{ *pulumi.OutputState }

func (V2ApiTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]V2ApiTarget)(nil)).Elem()
}

func (o V2ApiTargetArrayOutput) ToV2ApiTargetArrayOutput() V2ApiTargetArrayOutput {
	return o
}

func (o V2ApiTargetArrayOutput) ToV2ApiTargetArrayOutputWithContext(ctx context.Context) V2ApiTargetArrayOutput {
	return o
}

func (o V2ApiTargetArrayOutput) Index(i pulumi.IntInput) V2ApiTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) V2ApiTarget {
		return vs[0].([]V2ApiTarget)[vs[1].(int)]
	}).(V2ApiTargetOutput)
}

// A restriction for a specific service and optionally one or multiple specific methods. Both fields are case insensitive.
type V2ApiTargetResponse struct {
	// Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`
	Methods []string `pulumi:"methods"`
	// The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use [`gcloud services list`](/sdk/gcloud/reference/services/list) to get a list of services that are enabled in the project.
	Service string `pulumi:"service"`
}

// A restriction for a specific service and optionally one or multiple specific methods. Both fields are case insensitive.
type V2ApiTargetResponseOutput struct{ *pulumi.OutputState }

func (V2ApiTargetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2ApiTargetResponse)(nil)).Elem()
}

func (o V2ApiTargetResponseOutput) ToV2ApiTargetResponseOutput() V2ApiTargetResponseOutput {
	return o
}

func (o V2ApiTargetResponseOutput) ToV2ApiTargetResponseOutputWithContext(ctx context.Context) V2ApiTargetResponseOutput {
	return o
}

// Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`
func (o V2ApiTargetResponseOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v V2ApiTargetResponse) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

// The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use [`gcloud services list`](/sdk/gcloud/reference/services/list) to get a list of services that are enabled in the project.
func (o V2ApiTargetResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v V2ApiTargetResponse) string { return v.Service }).(pulumi.StringOutput)
}

type V2ApiTargetResponseArrayOutput struct{ *pulumi.OutputState }

func (V2ApiTargetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]V2ApiTargetResponse)(nil)).Elem()
}

func (o V2ApiTargetResponseArrayOutput) ToV2ApiTargetResponseArrayOutput() V2ApiTargetResponseArrayOutput {
	return o
}

func (o V2ApiTargetResponseArrayOutput) ToV2ApiTargetResponseArrayOutputWithContext(ctx context.Context) V2ApiTargetResponseArrayOutput {
	return o
}

func (o V2ApiTargetResponseArrayOutput) Index(i pulumi.IntInput) V2ApiTargetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) V2ApiTargetResponse {
		return vs[0].([]V2ApiTargetResponse)[vs[1].(int)]
	}).(V2ApiTargetResponseOutput)
}

// The HTTP referrers (websites) that are allowed to use the key.
type V2BrowserKeyRestrictions struct {
	// A list of regular expressions for the referrer URLs that are allowed to make API calls with this key.
	AllowedReferrers []string `pulumi:"allowedReferrers"`
}

// V2BrowserKeyRestrictionsInput is an input type that accepts V2BrowserKeyRestrictionsArgs and V2BrowserKeyRestrictionsOutput values.
// You can construct a concrete instance of `V2BrowserKeyRestrictionsInput` via:
//
//	V2BrowserKeyRestrictionsArgs{...}
type V2BrowserKeyRestrictionsInput interface {
	pulumi.Input

	ToV2BrowserKeyRestrictionsOutput() V2BrowserKeyRestrictionsOutput
	ToV2BrowserKeyRestrictionsOutputWithContext(context.Context) V2BrowserKeyRestrictionsOutput
}

// The HTTP referrers (websites) that are allowed to use the key.
type V2BrowserKeyRestrictionsArgs struct {
	// A list of regular expressions for the referrer URLs that are allowed to make API calls with this key.
	AllowedReferrers pulumi.StringArrayInput `pulumi:"allowedReferrers"`
}

func (V2BrowserKeyRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*V2BrowserKeyRestrictions)(nil)).Elem()
}

func (i V2BrowserKeyRestrictionsArgs) ToV2BrowserKeyRestrictionsOutput() V2BrowserKeyRestrictionsOutput {
	return i.ToV2BrowserKeyRestrictionsOutputWithContext(context.Background())
}

func (i V2BrowserKeyRestrictionsArgs) ToV2BrowserKeyRestrictionsOutputWithContext(ctx context.Context) V2BrowserKeyRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2BrowserKeyRestrictionsOutput)
}

func (i V2BrowserKeyRestrictionsArgs) ToV2BrowserKeyRestrictionsPtrOutput() V2BrowserKeyRestrictionsPtrOutput {
	return i.ToV2BrowserKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i V2BrowserKeyRestrictionsArgs) ToV2BrowserKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2BrowserKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2BrowserKeyRestrictionsOutput).ToV2BrowserKeyRestrictionsPtrOutputWithContext(ctx)
}

// V2BrowserKeyRestrictionsPtrInput is an input type that accepts V2BrowserKeyRestrictionsArgs, V2BrowserKeyRestrictionsPtr and V2BrowserKeyRestrictionsPtrOutput values.
// You can construct a concrete instance of `V2BrowserKeyRestrictionsPtrInput` via:
//
//	        V2BrowserKeyRestrictionsArgs{...}
//
//	or:
//
//	        nil
type V2BrowserKeyRestrictionsPtrInput interface {
	pulumi.Input

	ToV2BrowserKeyRestrictionsPtrOutput() V2BrowserKeyRestrictionsPtrOutput
	ToV2BrowserKeyRestrictionsPtrOutputWithContext(context.Context) V2BrowserKeyRestrictionsPtrOutput
}

type v2browserKeyRestrictionsPtrType V2BrowserKeyRestrictionsArgs

func V2BrowserKeyRestrictionsPtr(v *V2BrowserKeyRestrictionsArgs) V2BrowserKeyRestrictionsPtrInput {
	return (*v2browserKeyRestrictionsPtrType)(v)
}

func (*v2browserKeyRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**V2BrowserKeyRestrictions)(nil)).Elem()
}

func (i *v2browserKeyRestrictionsPtrType) ToV2BrowserKeyRestrictionsPtrOutput() V2BrowserKeyRestrictionsPtrOutput {
	return i.ToV2BrowserKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i *v2browserKeyRestrictionsPtrType) ToV2BrowserKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2BrowserKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2BrowserKeyRestrictionsPtrOutput)
}

// The HTTP referrers (websites) that are allowed to use the key.
type V2BrowserKeyRestrictionsOutput struct{ *pulumi.OutputState }

func (V2BrowserKeyRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2BrowserKeyRestrictions)(nil)).Elem()
}

func (o V2BrowserKeyRestrictionsOutput) ToV2BrowserKeyRestrictionsOutput() V2BrowserKeyRestrictionsOutput {
	return o
}

func (o V2BrowserKeyRestrictionsOutput) ToV2BrowserKeyRestrictionsOutputWithContext(ctx context.Context) V2BrowserKeyRestrictionsOutput {
	return o
}

func (o V2BrowserKeyRestrictionsOutput) ToV2BrowserKeyRestrictionsPtrOutput() V2BrowserKeyRestrictionsPtrOutput {
	return o.ToV2BrowserKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (o V2BrowserKeyRestrictionsOutput) ToV2BrowserKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2BrowserKeyRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v V2BrowserKeyRestrictions) *V2BrowserKeyRestrictions {
		return &v
	}).(V2BrowserKeyRestrictionsPtrOutput)
}

// A list of regular expressions for the referrer URLs that are allowed to make API calls with this key.
func (o V2BrowserKeyRestrictionsOutput) AllowedReferrers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v V2BrowserKeyRestrictions) []string { return v.AllowedReferrers }).(pulumi.StringArrayOutput)
}

type V2BrowserKeyRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (V2BrowserKeyRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**V2BrowserKeyRestrictions)(nil)).Elem()
}

func (o V2BrowserKeyRestrictionsPtrOutput) ToV2BrowserKeyRestrictionsPtrOutput() V2BrowserKeyRestrictionsPtrOutput {
	return o
}

func (o V2BrowserKeyRestrictionsPtrOutput) ToV2BrowserKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2BrowserKeyRestrictionsPtrOutput {
	return o
}

func (o V2BrowserKeyRestrictionsPtrOutput) Elem() V2BrowserKeyRestrictionsOutput {
	return o.ApplyT(func(v *V2BrowserKeyRestrictions) V2BrowserKeyRestrictions {
		if v != nil {
			return *v
		}
		var ret V2BrowserKeyRestrictions
		return ret
	}).(V2BrowserKeyRestrictionsOutput)
}

// A list of regular expressions for the referrer URLs that are allowed to make API calls with this key.
func (o V2BrowserKeyRestrictionsPtrOutput) AllowedReferrers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *V2BrowserKeyRestrictions) []string {
		if v == nil {
			return nil
		}
		return v.AllowedReferrers
	}).(pulumi.StringArrayOutput)
}

// The HTTP referrers (websites) that are allowed to use the key.
type V2BrowserKeyRestrictionsResponse struct {
	// A list of regular expressions for the referrer URLs that are allowed to make API calls with this key.
	AllowedReferrers []string `pulumi:"allowedReferrers"`
}

// The HTTP referrers (websites) that are allowed to use the key.
type V2BrowserKeyRestrictionsResponseOutput struct{ *pulumi.OutputState }

func (V2BrowserKeyRestrictionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2BrowserKeyRestrictionsResponse)(nil)).Elem()
}

func (o V2BrowserKeyRestrictionsResponseOutput) ToV2BrowserKeyRestrictionsResponseOutput() V2BrowserKeyRestrictionsResponseOutput {
	return o
}

func (o V2BrowserKeyRestrictionsResponseOutput) ToV2BrowserKeyRestrictionsResponseOutputWithContext(ctx context.Context) V2BrowserKeyRestrictionsResponseOutput {
	return o
}

// A list of regular expressions for the referrer URLs that are allowed to make API calls with this key.
func (o V2BrowserKeyRestrictionsResponseOutput) AllowedReferrers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v V2BrowserKeyRestrictionsResponse) []string { return v.AllowedReferrers }).(pulumi.StringArrayOutput)
}

// The iOS apps that are allowed to use the key.
type V2IosKeyRestrictions struct {
	// A list of bundle IDs that are allowed when making API calls with this key.
	AllowedBundleIds []string `pulumi:"allowedBundleIds"`
}

// V2IosKeyRestrictionsInput is an input type that accepts V2IosKeyRestrictionsArgs and V2IosKeyRestrictionsOutput values.
// You can construct a concrete instance of `V2IosKeyRestrictionsInput` via:
//
//	V2IosKeyRestrictionsArgs{...}
type V2IosKeyRestrictionsInput interface {
	pulumi.Input

	ToV2IosKeyRestrictionsOutput() V2IosKeyRestrictionsOutput
	ToV2IosKeyRestrictionsOutputWithContext(context.Context) V2IosKeyRestrictionsOutput
}

// The iOS apps that are allowed to use the key.
type V2IosKeyRestrictionsArgs struct {
	// A list of bundle IDs that are allowed when making API calls with this key.
	AllowedBundleIds pulumi.StringArrayInput `pulumi:"allowedBundleIds"`
}

func (V2IosKeyRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*V2IosKeyRestrictions)(nil)).Elem()
}

func (i V2IosKeyRestrictionsArgs) ToV2IosKeyRestrictionsOutput() V2IosKeyRestrictionsOutput {
	return i.ToV2IosKeyRestrictionsOutputWithContext(context.Background())
}

func (i V2IosKeyRestrictionsArgs) ToV2IosKeyRestrictionsOutputWithContext(ctx context.Context) V2IosKeyRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2IosKeyRestrictionsOutput)
}

func (i V2IosKeyRestrictionsArgs) ToV2IosKeyRestrictionsPtrOutput() V2IosKeyRestrictionsPtrOutput {
	return i.ToV2IosKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i V2IosKeyRestrictionsArgs) ToV2IosKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2IosKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2IosKeyRestrictionsOutput).ToV2IosKeyRestrictionsPtrOutputWithContext(ctx)
}

// V2IosKeyRestrictionsPtrInput is an input type that accepts V2IosKeyRestrictionsArgs, V2IosKeyRestrictionsPtr and V2IosKeyRestrictionsPtrOutput values.
// You can construct a concrete instance of `V2IosKeyRestrictionsPtrInput` via:
//
//	        V2IosKeyRestrictionsArgs{...}
//
//	or:
//
//	        nil
type V2IosKeyRestrictionsPtrInput interface {
	pulumi.Input

	ToV2IosKeyRestrictionsPtrOutput() V2IosKeyRestrictionsPtrOutput
	ToV2IosKeyRestrictionsPtrOutputWithContext(context.Context) V2IosKeyRestrictionsPtrOutput
}

type v2iosKeyRestrictionsPtrType V2IosKeyRestrictionsArgs

func V2IosKeyRestrictionsPtr(v *V2IosKeyRestrictionsArgs) V2IosKeyRestrictionsPtrInput {
	return (*v2iosKeyRestrictionsPtrType)(v)
}

func (*v2iosKeyRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**V2IosKeyRestrictions)(nil)).Elem()
}

func (i *v2iosKeyRestrictionsPtrType) ToV2IosKeyRestrictionsPtrOutput() V2IosKeyRestrictionsPtrOutput {
	return i.ToV2IosKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i *v2iosKeyRestrictionsPtrType) ToV2IosKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2IosKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2IosKeyRestrictionsPtrOutput)
}

// The iOS apps that are allowed to use the key.
type V2IosKeyRestrictionsOutput struct{ *pulumi.OutputState }

func (V2IosKeyRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2IosKeyRestrictions)(nil)).Elem()
}

func (o V2IosKeyRestrictionsOutput) ToV2IosKeyRestrictionsOutput() V2IosKeyRestrictionsOutput {
	return o
}

func (o V2IosKeyRestrictionsOutput) ToV2IosKeyRestrictionsOutputWithContext(ctx context.Context) V2IosKeyRestrictionsOutput {
	return o
}

func (o V2IosKeyRestrictionsOutput) ToV2IosKeyRestrictionsPtrOutput() V2IosKeyRestrictionsPtrOutput {
	return o.ToV2IosKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (o V2IosKeyRestrictionsOutput) ToV2IosKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2IosKeyRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v V2IosKeyRestrictions) *V2IosKeyRestrictions {
		return &v
	}).(V2IosKeyRestrictionsPtrOutput)
}

// A list of bundle IDs that are allowed when making API calls with this key.
func (o V2IosKeyRestrictionsOutput) AllowedBundleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v V2IosKeyRestrictions) []string { return v.AllowedBundleIds }).(pulumi.StringArrayOutput)
}

type V2IosKeyRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (V2IosKeyRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**V2IosKeyRestrictions)(nil)).Elem()
}

func (o V2IosKeyRestrictionsPtrOutput) ToV2IosKeyRestrictionsPtrOutput() V2IosKeyRestrictionsPtrOutput {
	return o
}

func (o V2IosKeyRestrictionsPtrOutput) ToV2IosKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2IosKeyRestrictionsPtrOutput {
	return o
}

func (o V2IosKeyRestrictionsPtrOutput) Elem() V2IosKeyRestrictionsOutput {
	return o.ApplyT(func(v *V2IosKeyRestrictions) V2IosKeyRestrictions {
		if v != nil {
			return *v
		}
		var ret V2IosKeyRestrictions
		return ret
	}).(V2IosKeyRestrictionsOutput)
}

// A list of bundle IDs that are allowed when making API calls with this key.
func (o V2IosKeyRestrictionsPtrOutput) AllowedBundleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *V2IosKeyRestrictions) []string {
		if v == nil {
			return nil
		}
		return v.AllowedBundleIds
	}).(pulumi.StringArrayOutput)
}

// The iOS apps that are allowed to use the key.
type V2IosKeyRestrictionsResponse struct {
	// A list of bundle IDs that are allowed when making API calls with this key.
	AllowedBundleIds []string `pulumi:"allowedBundleIds"`
}

// The iOS apps that are allowed to use the key.
type V2IosKeyRestrictionsResponseOutput struct{ *pulumi.OutputState }

func (V2IosKeyRestrictionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2IosKeyRestrictionsResponse)(nil)).Elem()
}

func (o V2IosKeyRestrictionsResponseOutput) ToV2IosKeyRestrictionsResponseOutput() V2IosKeyRestrictionsResponseOutput {
	return o
}

func (o V2IosKeyRestrictionsResponseOutput) ToV2IosKeyRestrictionsResponseOutputWithContext(ctx context.Context) V2IosKeyRestrictionsResponseOutput {
	return o
}

// A list of bundle IDs that are allowed when making API calls with this key.
func (o V2IosKeyRestrictionsResponseOutput) AllowedBundleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v V2IosKeyRestrictionsResponse) []string { return v.AllowedBundleIds }).(pulumi.StringArrayOutput)
}

// Describes the restrictions on the key.
type V2Restrictions struct {
	// The Android apps that are allowed to use the key.
	AndroidKeyRestrictions *V2AndroidKeyRestrictions `pulumi:"androidKeyRestrictions"`
	// A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
	ApiTargets []V2ApiTarget `pulumi:"apiTargets"`
	// The HTTP referrers (websites) that are allowed to use the key.
	BrowserKeyRestrictions *V2BrowserKeyRestrictions `pulumi:"browserKeyRestrictions"`
	// The iOS apps that are allowed to use the key.
	IosKeyRestrictions *V2IosKeyRestrictions `pulumi:"iosKeyRestrictions"`
	// The IP addresses of callers that are allowed to use the key.
	ServerKeyRestrictions *V2ServerKeyRestrictions `pulumi:"serverKeyRestrictions"`
}

// V2RestrictionsInput is an input type that accepts V2RestrictionsArgs and V2RestrictionsOutput values.
// You can construct a concrete instance of `V2RestrictionsInput` via:
//
//	V2RestrictionsArgs{...}
type V2RestrictionsInput interface {
	pulumi.Input

	ToV2RestrictionsOutput() V2RestrictionsOutput
	ToV2RestrictionsOutputWithContext(context.Context) V2RestrictionsOutput
}

// Describes the restrictions on the key.
type V2RestrictionsArgs struct {
	// The Android apps that are allowed to use the key.
	AndroidKeyRestrictions V2AndroidKeyRestrictionsPtrInput `pulumi:"androidKeyRestrictions"`
	// A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
	ApiTargets V2ApiTargetArrayInput `pulumi:"apiTargets"`
	// The HTTP referrers (websites) that are allowed to use the key.
	BrowserKeyRestrictions V2BrowserKeyRestrictionsPtrInput `pulumi:"browserKeyRestrictions"`
	// The iOS apps that are allowed to use the key.
	IosKeyRestrictions V2IosKeyRestrictionsPtrInput `pulumi:"iosKeyRestrictions"`
	// The IP addresses of callers that are allowed to use the key.
	ServerKeyRestrictions V2ServerKeyRestrictionsPtrInput `pulumi:"serverKeyRestrictions"`
}

func (V2RestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*V2Restrictions)(nil)).Elem()
}

func (i V2RestrictionsArgs) ToV2RestrictionsOutput() V2RestrictionsOutput {
	return i.ToV2RestrictionsOutputWithContext(context.Background())
}

func (i V2RestrictionsArgs) ToV2RestrictionsOutputWithContext(ctx context.Context) V2RestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2RestrictionsOutput)
}

func (i V2RestrictionsArgs) ToV2RestrictionsPtrOutput() V2RestrictionsPtrOutput {
	return i.ToV2RestrictionsPtrOutputWithContext(context.Background())
}

func (i V2RestrictionsArgs) ToV2RestrictionsPtrOutputWithContext(ctx context.Context) V2RestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2RestrictionsOutput).ToV2RestrictionsPtrOutputWithContext(ctx)
}

// V2RestrictionsPtrInput is an input type that accepts V2RestrictionsArgs, V2RestrictionsPtr and V2RestrictionsPtrOutput values.
// You can construct a concrete instance of `V2RestrictionsPtrInput` via:
//
//	        V2RestrictionsArgs{...}
//
//	or:
//
//	        nil
type V2RestrictionsPtrInput interface {
	pulumi.Input

	ToV2RestrictionsPtrOutput() V2RestrictionsPtrOutput
	ToV2RestrictionsPtrOutputWithContext(context.Context) V2RestrictionsPtrOutput
}

type v2restrictionsPtrType V2RestrictionsArgs

func V2RestrictionsPtr(v *V2RestrictionsArgs) V2RestrictionsPtrInput {
	return (*v2restrictionsPtrType)(v)
}

func (*v2restrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**V2Restrictions)(nil)).Elem()
}

func (i *v2restrictionsPtrType) ToV2RestrictionsPtrOutput() V2RestrictionsPtrOutput {
	return i.ToV2RestrictionsPtrOutputWithContext(context.Background())
}

func (i *v2restrictionsPtrType) ToV2RestrictionsPtrOutputWithContext(ctx context.Context) V2RestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2RestrictionsPtrOutput)
}

// Describes the restrictions on the key.
type V2RestrictionsOutput struct{ *pulumi.OutputState }

func (V2RestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2Restrictions)(nil)).Elem()
}

func (o V2RestrictionsOutput) ToV2RestrictionsOutput() V2RestrictionsOutput {
	return o
}

func (o V2RestrictionsOutput) ToV2RestrictionsOutputWithContext(ctx context.Context) V2RestrictionsOutput {
	return o
}

func (o V2RestrictionsOutput) ToV2RestrictionsPtrOutput() V2RestrictionsPtrOutput {
	return o.ToV2RestrictionsPtrOutputWithContext(context.Background())
}

func (o V2RestrictionsOutput) ToV2RestrictionsPtrOutputWithContext(ctx context.Context) V2RestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v V2Restrictions) *V2Restrictions {
		return &v
	}).(V2RestrictionsPtrOutput)
}

// The Android apps that are allowed to use the key.
func (o V2RestrictionsOutput) AndroidKeyRestrictions() V2AndroidKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v V2Restrictions) *V2AndroidKeyRestrictions { return v.AndroidKeyRestrictions }).(V2AndroidKeyRestrictionsPtrOutput)
}

// A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
func (o V2RestrictionsOutput) ApiTargets() V2ApiTargetArrayOutput {
	return o.ApplyT(func(v V2Restrictions) []V2ApiTarget { return v.ApiTargets }).(V2ApiTargetArrayOutput)
}

// The HTTP referrers (websites) that are allowed to use the key.
func (o V2RestrictionsOutput) BrowserKeyRestrictions() V2BrowserKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v V2Restrictions) *V2BrowserKeyRestrictions { return v.BrowserKeyRestrictions }).(V2BrowserKeyRestrictionsPtrOutput)
}

// The iOS apps that are allowed to use the key.
func (o V2RestrictionsOutput) IosKeyRestrictions() V2IosKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v V2Restrictions) *V2IosKeyRestrictions { return v.IosKeyRestrictions }).(V2IosKeyRestrictionsPtrOutput)
}

// The IP addresses of callers that are allowed to use the key.
func (o V2RestrictionsOutput) ServerKeyRestrictions() V2ServerKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v V2Restrictions) *V2ServerKeyRestrictions { return v.ServerKeyRestrictions }).(V2ServerKeyRestrictionsPtrOutput)
}

type V2RestrictionsPtrOutput struct{ *pulumi.OutputState }

func (V2RestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**V2Restrictions)(nil)).Elem()
}

func (o V2RestrictionsPtrOutput) ToV2RestrictionsPtrOutput() V2RestrictionsPtrOutput {
	return o
}

func (o V2RestrictionsPtrOutput) ToV2RestrictionsPtrOutputWithContext(ctx context.Context) V2RestrictionsPtrOutput {
	return o
}

func (o V2RestrictionsPtrOutput) Elem() V2RestrictionsOutput {
	return o.ApplyT(func(v *V2Restrictions) V2Restrictions {
		if v != nil {
			return *v
		}
		var ret V2Restrictions
		return ret
	}).(V2RestrictionsOutput)
}

// The Android apps that are allowed to use the key.
func (o V2RestrictionsPtrOutput) AndroidKeyRestrictions() V2AndroidKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v *V2Restrictions) *V2AndroidKeyRestrictions {
		if v == nil {
			return nil
		}
		return v.AndroidKeyRestrictions
	}).(V2AndroidKeyRestrictionsPtrOutput)
}

// A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
func (o V2RestrictionsPtrOutput) ApiTargets() V2ApiTargetArrayOutput {
	return o.ApplyT(func(v *V2Restrictions) []V2ApiTarget {
		if v == nil {
			return nil
		}
		return v.ApiTargets
	}).(V2ApiTargetArrayOutput)
}

// The HTTP referrers (websites) that are allowed to use the key.
func (o V2RestrictionsPtrOutput) BrowserKeyRestrictions() V2BrowserKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v *V2Restrictions) *V2BrowserKeyRestrictions {
		if v == nil {
			return nil
		}
		return v.BrowserKeyRestrictions
	}).(V2BrowserKeyRestrictionsPtrOutput)
}

// The iOS apps that are allowed to use the key.
func (o V2RestrictionsPtrOutput) IosKeyRestrictions() V2IosKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v *V2Restrictions) *V2IosKeyRestrictions {
		if v == nil {
			return nil
		}
		return v.IosKeyRestrictions
	}).(V2IosKeyRestrictionsPtrOutput)
}

// The IP addresses of callers that are allowed to use the key.
func (o V2RestrictionsPtrOutput) ServerKeyRestrictions() V2ServerKeyRestrictionsPtrOutput {
	return o.ApplyT(func(v *V2Restrictions) *V2ServerKeyRestrictions {
		if v == nil {
			return nil
		}
		return v.ServerKeyRestrictions
	}).(V2ServerKeyRestrictionsPtrOutput)
}

// Describes the restrictions on the key.
type V2RestrictionsResponse struct {
	// The Android apps that are allowed to use the key.
	AndroidKeyRestrictions V2AndroidKeyRestrictionsResponse `pulumi:"androidKeyRestrictions"`
	// A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
	ApiTargets []V2ApiTargetResponse `pulumi:"apiTargets"`
	// The HTTP referrers (websites) that are allowed to use the key.
	BrowserKeyRestrictions V2BrowserKeyRestrictionsResponse `pulumi:"browserKeyRestrictions"`
	// The iOS apps that are allowed to use the key.
	IosKeyRestrictions V2IosKeyRestrictionsResponse `pulumi:"iosKeyRestrictions"`
	// The IP addresses of callers that are allowed to use the key.
	ServerKeyRestrictions V2ServerKeyRestrictionsResponse `pulumi:"serverKeyRestrictions"`
}

// Describes the restrictions on the key.
type V2RestrictionsResponseOutput struct{ *pulumi.OutputState }

func (V2RestrictionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2RestrictionsResponse)(nil)).Elem()
}

func (o V2RestrictionsResponseOutput) ToV2RestrictionsResponseOutput() V2RestrictionsResponseOutput {
	return o
}

func (o V2RestrictionsResponseOutput) ToV2RestrictionsResponseOutputWithContext(ctx context.Context) V2RestrictionsResponseOutput {
	return o
}

// The Android apps that are allowed to use the key.
func (o V2RestrictionsResponseOutput) AndroidKeyRestrictions() V2AndroidKeyRestrictionsResponseOutput {
	return o.ApplyT(func(v V2RestrictionsResponse) V2AndroidKeyRestrictionsResponse { return v.AndroidKeyRestrictions }).(V2AndroidKeyRestrictionsResponseOutput)
}

// A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.
func (o V2RestrictionsResponseOutput) ApiTargets() V2ApiTargetResponseArrayOutput {
	return o.ApplyT(func(v V2RestrictionsResponse) []V2ApiTargetResponse { return v.ApiTargets }).(V2ApiTargetResponseArrayOutput)
}

// The HTTP referrers (websites) that are allowed to use the key.
func (o V2RestrictionsResponseOutput) BrowserKeyRestrictions() V2BrowserKeyRestrictionsResponseOutput {
	return o.ApplyT(func(v V2RestrictionsResponse) V2BrowserKeyRestrictionsResponse { return v.BrowserKeyRestrictions }).(V2BrowserKeyRestrictionsResponseOutput)
}

// The iOS apps that are allowed to use the key.
func (o V2RestrictionsResponseOutput) IosKeyRestrictions() V2IosKeyRestrictionsResponseOutput {
	return o.ApplyT(func(v V2RestrictionsResponse) V2IosKeyRestrictionsResponse { return v.IosKeyRestrictions }).(V2IosKeyRestrictionsResponseOutput)
}

// The IP addresses of callers that are allowed to use the key.
func (o V2RestrictionsResponseOutput) ServerKeyRestrictions() V2ServerKeyRestrictionsResponseOutput {
	return o.ApplyT(func(v V2RestrictionsResponse) V2ServerKeyRestrictionsResponse { return v.ServerKeyRestrictions }).(V2ServerKeyRestrictionsResponseOutput)
}

// The IP addresses of callers that are allowed to use the key.
type V2ServerKeyRestrictions struct {
	// A list of the caller IP addresses that are allowed to make API calls with this key.
	AllowedIps []string `pulumi:"allowedIps"`
}

// V2ServerKeyRestrictionsInput is an input type that accepts V2ServerKeyRestrictionsArgs and V2ServerKeyRestrictionsOutput values.
// You can construct a concrete instance of `V2ServerKeyRestrictionsInput` via:
//
//	V2ServerKeyRestrictionsArgs{...}
type V2ServerKeyRestrictionsInput interface {
	pulumi.Input

	ToV2ServerKeyRestrictionsOutput() V2ServerKeyRestrictionsOutput
	ToV2ServerKeyRestrictionsOutputWithContext(context.Context) V2ServerKeyRestrictionsOutput
}

// The IP addresses of callers that are allowed to use the key.
type V2ServerKeyRestrictionsArgs struct {
	// A list of the caller IP addresses that are allowed to make API calls with this key.
	AllowedIps pulumi.StringArrayInput `pulumi:"allowedIps"`
}

func (V2ServerKeyRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*V2ServerKeyRestrictions)(nil)).Elem()
}

func (i V2ServerKeyRestrictionsArgs) ToV2ServerKeyRestrictionsOutput() V2ServerKeyRestrictionsOutput {
	return i.ToV2ServerKeyRestrictionsOutputWithContext(context.Background())
}

func (i V2ServerKeyRestrictionsArgs) ToV2ServerKeyRestrictionsOutputWithContext(ctx context.Context) V2ServerKeyRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2ServerKeyRestrictionsOutput)
}

func (i V2ServerKeyRestrictionsArgs) ToV2ServerKeyRestrictionsPtrOutput() V2ServerKeyRestrictionsPtrOutput {
	return i.ToV2ServerKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i V2ServerKeyRestrictionsArgs) ToV2ServerKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2ServerKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2ServerKeyRestrictionsOutput).ToV2ServerKeyRestrictionsPtrOutputWithContext(ctx)
}

// V2ServerKeyRestrictionsPtrInput is an input type that accepts V2ServerKeyRestrictionsArgs, V2ServerKeyRestrictionsPtr and V2ServerKeyRestrictionsPtrOutput values.
// You can construct a concrete instance of `V2ServerKeyRestrictionsPtrInput` via:
//
//	        V2ServerKeyRestrictionsArgs{...}
//
//	or:
//
//	        nil
type V2ServerKeyRestrictionsPtrInput interface {
	pulumi.Input

	ToV2ServerKeyRestrictionsPtrOutput() V2ServerKeyRestrictionsPtrOutput
	ToV2ServerKeyRestrictionsPtrOutputWithContext(context.Context) V2ServerKeyRestrictionsPtrOutput
}

type v2serverKeyRestrictionsPtrType V2ServerKeyRestrictionsArgs

func V2ServerKeyRestrictionsPtr(v *V2ServerKeyRestrictionsArgs) V2ServerKeyRestrictionsPtrInput {
	return (*v2serverKeyRestrictionsPtrType)(v)
}

func (*v2serverKeyRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**V2ServerKeyRestrictions)(nil)).Elem()
}

func (i *v2serverKeyRestrictionsPtrType) ToV2ServerKeyRestrictionsPtrOutput() V2ServerKeyRestrictionsPtrOutput {
	return i.ToV2ServerKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (i *v2serverKeyRestrictionsPtrType) ToV2ServerKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2ServerKeyRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2ServerKeyRestrictionsPtrOutput)
}

// The IP addresses of callers that are allowed to use the key.
type V2ServerKeyRestrictionsOutput struct{ *pulumi.OutputState }

func (V2ServerKeyRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2ServerKeyRestrictions)(nil)).Elem()
}

func (o V2ServerKeyRestrictionsOutput) ToV2ServerKeyRestrictionsOutput() V2ServerKeyRestrictionsOutput {
	return o
}

func (o V2ServerKeyRestrictionsOutput) ToV2ServerKeyRestrictionsOutputWithContext(ctx context.Context) V2ServerKeyRestrictionsOutput {
	return o
}

func (o V2ServerKeyRestrictionsOutput) ToV2ServerKeyRestrictionsPtrOutput() V2ServerKeyRestrictionsPtrOutput {
	return o.ToV2ServerKeyRestrictionsPtrOutputWithContext(context.Background())
}

func (o V2ServerKeyRestrictionsOutput) ToV2ServerKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2ServerKeyRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v V2ServerKeyRestrictions) *V2ServerKeyRestrictions {
		return &v
	}).(V2ServerKeyRestrictionsPtrOutput)
}

// A list of the caller IP addresses that are allowed to make API calls with this key.
func (o V2ServerKeyRestrictionsOutput) AllowedIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v V2ServerKeyRestrictions) []string { return v.AllowedIps }).(pulumi.StringArrayOutput)
}

type V2ServerKeyRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (V2ServerKeyRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**V2ServerKeyRestrictions)(nil)).Elem()
}

func (o V2ServerKeyRestrictionsPtrOutput) ToV2ServerKeyRestrictionsPtrOutput() V2ServerKeyRestrictionsPtrOutput {
	return o
}

func (o V2ServerKeyRestrictionsPtrOutput) ToV2ServerKeyRestrictionsPtrOutputWithContext(ctx context.Context) V2ServerKeyRestrictionsPtrOutput {
	return o
}

func (o V2ServerKeyRestrictionsPtrOutput) Elem() V2ServerKeyRestrictionsOutput {
	return o.ApplyT(func(v *V2ServerKeyRestrictions) V2ServerKeyRestrictions {
		if v != nil {
			return *v
		}
		var ret V2ServerKeyRestrictions
		return ret
	}).(V2ServerKeyRestrictionsOutput)
}

// A list of the caller IP addresses that are allowed to make API calls with this key.
func (o V2ServerKeyRestrictionsPtrOutput) AllowedIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *V2ServerKeyRestrictions) []string {
		if v == nil {
			return nil
		}
		return v.AllowedIps
	}).(pulumi.StringArrayOutput)
}

// The IP addresses of callers that are allowed to use the key.
type V2ServerKeyRestrictionsResponse struct {
	// A list of the caller IP addresses that are allowed to make API calls with this key.
	AllowedIps []string `pulumi:"allowedIps"`
}

// The IP addresses of callers that are allowed to use the key.
type V2ServerKeyRestrictionsResponseOutput struct{ *pulumi.OutputState }

func (V2ServerKeyRestrictionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V2ServerKeyRestrictionsResponse)(nil)).Elem()
}

func (o V2ServerKeyRestrictionsResponseOutput) ToV2ServerKeyRestrictionsResponseOutput() V2ServerKeyRestrictionsResponseOutput {
	return o
}

func (o V2ServerKeyRestrictionsResponseOutput) ToV2ServerKeyRestrictionsResponseOutputWithContext(ctx context.Context) V2ServerKeyRestrictionsResponseOutput {
	return o
}

// A list of the caller IP addresses that are allowed to make API calls with this key.
func (o V2ServerKeyRestrictionsResponseOutput) AllowedIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v V2ServerKeyRestrictionsResponse) []string { return v.AllowedIps }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*V2AndroidApplicationInput)(nil)).Elem(), V2AndroidApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2AndroidApplicationArrayInput)(nil)).Elem(), V2AndroidApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2AndroidKeyRestrictionsInput)(nil)).Elem(), V2AndroidKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2AndroidKeyRestrictionsPtrInput)(nil)).Elem(), V2AndroidKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2ApiTargetInput)(nil)).Elem(), V2ApiTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2ApiTargetArrayInput)(nil)).Elem(), V2ApiTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2BrowserKeyRestrictionsInput)(nil)).Elem(), V2BrowserKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2BrowserKeyRestrictionsPtrInput)(nil)).Elem(), V2BrowserKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2IosKeyRestrictionsInput)(nil)).Elem(), V2IosKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2IosKeyRestrictionsPtrInput)(nil)).Elem(), V2IosKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2RestrictionsInput)(nil)).Elem(), V2RestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2RestrictionsPtrInput)(nil)).Elem(), V2RestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2ServerKeyRestrictionsInput)(nil)).Elem(), V2ServerKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2ServerKeyRestrictionsPtrInput)(nil)).Elem(), V2ServerKeyRestrictionsArgs{})
	pulumi.RegisterOutputType(V2AndroidApplicationOutput{})
	pulumi.RegisterOutputType(V2AndroidApplicationArrayOutput{})
	pulumi.RegisterOutputType(V2AndroidApplicationResponseOutput{})
	pulumi.RegisterOutputType(V2AndroidApplicationResponseArrayOutput{})
	pulumi.RegisterOutputType(V2AndroidKeyRestrictionsOutput{})
	pulumi.RegisterOutputType(V2AndroidKeyRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(V2AndroidKeyRestrictionsResponseOutput{})
	pulumi.RegisterOutputType(V2ApiTargetOutput{})
	pulumi.RegisterOutputType(V2ApiTargetArrayOutput{})
	pulumi.RegisterOutputType(V2ApiTargetResponseOutput{})
	pulumi.RegisterOutputType(V2ApiTargetResponseArrayOutput{})
	pulumi.RegisterOutputType(V2BrowserKeyRestrictionsOutput{})
	pulumi.RegisterOutputType(V2BrowserKeyRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(V2BrowserKeyRestrictionsResponseOutput{})
	pulumi.RegisterOutputType(V2IosKeyRestrictionsOutput{})
	pulumi.RegisterOutputType(V2IosKeyRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(V2IosKeyRestrictionsResponseOutput{})
	pulumi.RegisterOutputType(V2RestrictionsOutput{})
	pulumi.RegisterOutputType(V2RestrictionsPtrOutput{})
	pulumi.RegisterOutputType(V2RestrictionsResponseOutput{})
	pulumi.RegisterOutputType(V2ServerKeyRestrictionsOutput{})
	pulumi.RegisterOutputType(V2ServerKeyRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(V2ServerKeyRestrictionsResponseOutput{})
}
