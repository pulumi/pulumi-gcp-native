// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the metadata for an API key. The key string of the API key isn't included in the response. NOTE: Key is a global resource; hence the only supported value for location is `global`.
func LookupKey(ctx *pulumi.Context, args *LookupKeyArgs, opts ...pulumi.InvokeOption) (*LookupKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKeyResult
	err := ctx.Invoke("google-native:apikeys/v2:getKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupKeyArgs struct {
	KeyId    string  `pulumi:"keyId"`
	Location string  `pulumi:"location"`
	Project  *string `pulumi:"project"`
}

type LookupKeyResult struct {
	// Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects.
	Annotations map[string]string `pulumi:"annotations"`
	// A timestamp identifying the time this key was originally created.
	CreateTime string `pulumi:"createTime"`
	// A timestamp when this key was deleted. If the resource is not deleted, this must be empty.
	DeleteTime string `pulumi:"deleteTime"`
	// Human-readable display name of this key that you can modify. The maximum length is 63 characters.
	DisplayName string `pulumi:"displayName"`
	// A checksum computed by the server based on the current value of the Key resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. See https://google.aip.dev/154.
	Etag string `pulumi:"etag"`
	// An encrypted and signed value held by this key. This field can be accessed only through the `GetKeyString` method.
	KeyString string `pulumi:"keyString"`
	// The resource name of the key. The `name` has the form: `projects//locations/global/keys/`. For example: `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is a global resource; hence the only supported value for location is `global`.
	Name string `pulumi:"name"`
	// Key restrictions.
	Restrictions V2RestrictionsResponse `pulumi:"restrictions"`
	// Unique id in UUID4 format.
	Uid string `pulumi:"uid"`
	// A timestamp identifying the time this key was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupKeyOutput(ctx *pulumi.Context, args LookupKeyOutputArgs, opts ...pulumi.InvokeOption) LookupKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupKeyResult, error) {
			args := v.(LookupKeyArgs)
			r, err := LookupKey(ctx, &args, opts...)
			var s LookupKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupKeyResultOutput)
}

type LookupKeyOutputArgs struct {
	KeyId    pulumi.StringInput    `pulumi:"keyId"`
	Location pulumi.StringInput    `pulumi:"location"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyArgs)(nil)).Elem()
}

type LookupKeyResultOutput struct{ *pulumi.OutputState }

func (LookupKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyResult)(nil)).Elem()
}

func (o LookupKeyResultOutput) ToLookupKeyResultOutput() LookupKeyResultOutput {
	return o
}

func (o LookupKeyResultOutput) ToLookupKeyResultOutputWithContext(ctx context.Context) LookupKeyResultOutput {
	return o
}

// Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects.
func (o LookupKeyResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupKeyResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// A timestamp identifying the time this key was originally created.
func (o LookupKeyResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// A timestamp when this key was deleted. If the resource is not deleted, this must be empty.
func (o LookupKeyResultOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// Human-readable display name of this key that you can modify. The maximum length is 63 characters.
func (o LookupKeyResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A checksum computed by the server based on the current value of the Key resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. See https://google.aip.dev/154.
func (o LookupKeyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// An encrypted and signed value held by this key. This field can be accessed only through the `GetKeyString` method.
func (o LookupKeyResultOutput) KeyString() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.KeyString }).(pulumi.StringOutput)
}

// The resource name of the key. The `name` has the form: `projects//locations/global/keys/`. For example: `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is a global resource; hence the only supported value for location is `global`.
func (o LookupKeyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.Name }).(pulumi.StringOutput)
}

// Key restrictions.
func (o LookupKeyResultOutput) Restrictions() V2RestrictionsResponseOutput {
	return o.ApplyT(func(v LookupKeyResult) V2RestrictionsResponse { return v.Restrictions }).(V2RestrictionsResponseOutput)
}

// Unique id in UUID4 format.
func (o LookupKeyResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.Uid }).(pulumi.StringOutput)
}

// A timestamp identifying the time this key was last updated.
func (o LookupKeyResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKeyResultOutput{})
}
