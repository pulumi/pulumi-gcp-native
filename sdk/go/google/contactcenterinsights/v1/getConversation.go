// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a conversation.
func LookupConversation(ctx *pulumi.Context, args *LookupConversationArgs, opts ...pulumi.InvokeOption) (*LookupConversationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConversationResult
	err := ctx.Invoke("google-native:contactcenterinsights/v1:getConversation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConversationArgs struct {
	ConversationId string  `pulumi:"conversationId"`
	Location       string  `pulumi:"location"`
	Project        *string `pulumi:"project"`
	View           *string `pulumi:"view"`
}

type LookupConversationResult struct {
	// An opaque, user-specified string representing the human agent who handled the conversation.
	AgentId string `pulumi:"agentId"`
	// Call-specific metadata.
	CallMetadata GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponse `pulumi:"callMetadata"`
	// The time at which the conversation was created.
	CreateTime string `pulumi:"createTime"`
	// The source of the audio and transcription for the conversation.
	DataSource GoogleCloudContactcenterinsightsV1ConversationDataSourceResponse `pulumi:"dataSource"`
	// All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}
	DialogflowIntents GoogleCloudContactcenterinsightsV1DialogflowIntentResponse `pulumi:"dialogflowIntents"`
	// The duration of the conversation.
	Duration string `pulumi:"duration"`
	// The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.
	ExpireTime string `pulumi:"expireTime"`
	// A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.
	Labels map[string]string `pulumi:"labels"`
	// A user-specified language code for the conversation.
	LanguageCode string `pulumi:"languageCode"`
	// The conversation's latest analysis, if one exists.
	LatestAnalysis GoogleCloudContactcenterinsightsV1AnalysisResponse `pulumi:"latestAnalysis"`
	// Latest summary of the conversation.
	LatestSummary GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponse `pulumi:"latestSummary"`
	// Immutable. The conversation medium, if unspecified will default to PHONE_CALL.
	Medium string `pulumi:"medium"`
	// Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}
	Name string `pulumi:"name"`
	// Obfuscated user ID which the customer sent to us.
	ObfuscatedUserId string `pulumi:"obfuscatedUserId"`
	// The annotations that were generated during the customer and agent interaction.
	RuntimeAnnotations []GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse `pulumi:"runtimeAnnotations"`
	// The time at which the conversation started.
	StartTime string `pulumi:"startTime"`
	// The conversation transcript.
	Transcript GoogleCloudContactcenterinsightsV1ConversationTranscriptResponse `pulumi:"transcript"`
	// Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.
	Ttl string `pulumi:"ttl"`
	// The number of turns in the conversation.
	TurnCount int `pulumi:"turnCount"`
	// The most recent time at which the conversation was updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupConversationOutput(ctx *pulumi.Context, args LookupConversationOutputArgs, opts ...pulumi.InvokeOption) LookupConversationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConversationResult, error) {
			args := v.(LookupConversationArgs)
			r, err := LookupConversation(ctx, &args, opts...)
			var s LookupConversationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConversationResultOutput)
}

type LookupConversationOutputArgs struct {
	ConversationId pulumi.StringInput    `pulumi:"conversationId"`
	Location       pulumi.StringInput    `pulumi:"location"`
	Project        pulumi.StringPtrInput `pulumi:"project"`
	View           pulumi.StringPtrInput `pulumi:"view"`
}

func (LookupConversationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConversationArgs)(nil)).Elem()
}

type LookupConversationResultOutput struct{ *pulumi.OutputState }

func (LookupConversationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConversationResult)(nil)).Elem()
}

func (o LookupConversationResultOutput) ToLookupConversationResultOutput() LookupConversationResultOutput {
	return o
}

func (o LookupConversationResultOutput) ToLookupConversationResultOutputWithContext(ctx context.Context) LookupConversationResultOutput {
	return o
}

// An opaque, user-specified string representing the human agent who handled the conversation.
func (o LookupConversationResultOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConversationResult) string { return v.AgentId }).(pulumi.StringOutput)
}

// Call-specific metadata.
func (o LookupConversationResultOutput) CallMetadata() GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput {
	return o.ApplyT(func(v LookupConversationResult) GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponse {
		return v.CallMetadata
	}).(GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput)
}

// The time at which the conversation was created.
func (o LookupConversationResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConversationResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The source of the audio and transcription for the conversation.
func (o LookupConversationResultOutput) DataSource() GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput {
	return o.ApplyT(func(v LookupConversationResult) GoogleCloudContactcenterinsightsV1ConversationDataSourceResponse {
		return v.DataSource
	}).(GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput)
}

// All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}
func (o LookupConversationResultOutput) DialogflowIntents() GoogleCloudContactcenterinsightsV1DialogflowIntentResponseOutput {
	return o.ApplyT(func(v LookupConversationResult) GoogleCloudContactcenterinsightsV1DialogflowIntentResponse {
		return v.DialogflowIntents
	}).(GoogleCloudContactcenterinsightsV1DialogflowIntentResponseOutput)
}

// The duration of the conversation.
func (o LookupConversationResultOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConversationResult) string { return v.Duration }).(pulumi.StringOutput)
}

// The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.
func (o LookupConversationResultOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConversationResult) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.
func (o LookupConversationResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConversationResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// A user-specified language code for the conversation.
func (o LookupConversationResultOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConversationResult) string { return v.LanguageCode }).(pulumi.StringOutput)
}

// The conversation's latest analysis, if one exists.
func (o LookupConversationResultOutput) LatestAnalysis() GoogleCloudContactcenterinsightsV1AnalysisResponseOutput {
	return o.ApplyT(func(v LookupConversationResult) GoogleCloudContactcenterinsightsV1AnalysisResponse {
		return v.LatestAnalysis
	}).(GoogleCloudContactcenterinsightsV1AnalysisResponseOutput)
}

// Latest summary of the conversation.
func (o LookupConversationResultOutput) LatestSummary() GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput {
	return o.ApplyT(func(v LookupConversationResult) GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponse {
		return v.LatestSummary
	}).(GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput)
}

// Immutable. The conversation medium, if unspecified will default to PHONE_CALL.
func (o LookupConversationResultOutput) Medium() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConversationResult) string { return v.Medium }).(pulumi.StringOutput)
}

// Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}
func (o LookupConversationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConversationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Obfuscated user ID which the customer sent to us.
func (o LookupConversationResultOutput) ObfuscatedUserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConversationResult) string { return v.ObfuscatedUserId }).(pulumi.StringOutput)
}

// The annotations that were generated during the customer and agent interaction.
func (o LookupConversationResultOutput) RuntimeAnnotations() GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput {
	return o.ApplyT(func(v LookupConversationResult) []GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse {
		return v.RuntimeAnnotations
	}).(GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput)
}

// The time at which the conversation started.
func (o LookupConversationResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConversationResult) string { return v.StartTime }).(pulumi.StringOutput)
}

// The conversation transcript.
func (o LookupConversationResultOutput) Transcript() GoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput {
	return o.ApplyT(func(v LookupConversationResult) GoogleCloudContactcenterinsightsV1ConversationTranscriptResponse {
		return v.Transcript
	}).(GoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput)
}

// Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.
func (o LookupConversationResultOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConversationResult) string { return v.Ttl }).(pulumi.StringOutput)
}

// The number of turns in the conversation.
func (o LookupConversationResultOutput) TurnCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupConversationResult) int { return v.TurnCount }).(pulumi.IntOutput)
}

// The most recent time at which the conversation was updated.
func (o LookupConversationResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConversationResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConversationResultOutput{})
}
