// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a conversation.
type Conversation struct {
	pulumi.CustomResourceState

	// An opaque, user-specified string representing the human agent who handled the conversation.
	AgentId pulumi.StringOutput `pulumi:"agentId"`
	// Call-specific metadata.
	CallMetadata GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput `pulumi:"callMetadata"`
	// A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
	ConversationId pulumi.StringPtrOutput `pulumi:"conversationId"`
	// The time at which the conversation was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The source of the audio and transcription for the conversation.
	DataSource GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput `pulumi:"dataSource"`
	// All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}
	DialogflowIntents GoogleCloudContactcenterinsightsV1DialogflowIntentResponseMapOutput `pulumi:"dialogflowIntents"`
	// The duration of the conversation.
	Duration pulumi.StringOutput `pulumi:"duration"`
	// The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// A user-specified language code for the conversation.
	LanguageCode pulumi.StringOutput `pulumi:"languageCode"`
	// The conversation's latest analysis, if one exists.
	LatestAnalysis GoogleCloudContactcenterinsightsV1AnalysisResponseOutput `pulumi:"latestAnalysis"`
	// Latest summary of the conversation.
	LatestSummary GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput `pulumi:"latestSummary"`
	Location      pulumi.StringOutput                                                                     `pulumi:"location"`
	// Immutable. The conversation medium, if unspecified will default to PHONE_CALL.
	Medium pulumi.StringOutput `pulumi:"medium"`
	// Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}
	Name pulumi.StringOutput `pulumi:"name"`
	// Obfuscated user ID which the customer sent to us.
	ObfuscatedUserId pulumi.StringOutput `pulumi:"obfuscatedUserId"`
	Project          pulumi.StringOutput `pulumi:"project"`
	// The annotations that were generated during the customer and agent interaction.
	RuntimeAnnotations GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput `pulumi:"runtimeAnnotations"`
	// The time at which the conversation started.
	StartTime pulumi.StringOutput `pulumi:"startTime"`
	// The conversation transcript.
	Transcript GoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput `pulumi:"transcript"`
	// Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.
	Ttl pulumi.StringOutput `pulumi:"ttl"`
	// The number of turns in the conversation.
	TurnCount pulumi.IntOutput `pulumi:"turnCount"`
	// The most recent time at which the conversation was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewConversation registers a new resource with the given unique name, arguments, and options.
func NewConversation(ctx *pulumi.Context,
	name string, args *ConversationArgs, opts ...pulumi.ResourceOption) (*Conversation, error) {
	if args == nil {
		args = &ConversationArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Conversation
	err := ctx.RegisterResource("google-native:contactcenterinsights/v1:Conversation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConversation gets an existing Conversation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConversation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConversationState, opts ...pulumi.ResourceOption) (*Conversation, error) {
	var resource Conversation
	err := ctx.ReadResource("google-native:contactcenterinsights/v1:Conversation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Conversation resources.
type conversationState struct {
}

type ConversationState struct {
}

func (ConversationState) ElementType() reflect.Type {
	return reflect.TypeOf((*conversationState)(nil)).Elem()
}

type conversationArgs struct {
	// An opaque, user-specified string representing the human agent who handled the conversation.
	AgentId *string `pulumi:"agentId"`
	// Call-specific metadata.
	CallMetadata *GoogleCloudContactcenterinsightsV1ConversationCallMetadata `pulumi:"callMetadata"`
	// A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
	ConversationId *string `pulumi:"conversationId"`
	// The source of the audio and transcription for the conversation.
	DataSource *GoogleCloudContactcenterinsightsV1ConversationDataSource `pulumi:"dataSource"`
	// The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.
	ExpireTime *string `pulumi:"expireTime"`
	// A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.
	Labels map[string]string `pulumi:"labels"`
	// A user-specified language code for the conversation.
	LanguageCode *string `pulumi:"languageCode"`
	Location     *string `pulumi:"location"`
	// Immutable. The conversation medium, if unspecified will default to PHONE_CALL.
	Medium *ConversationMedium `pulumi:"medium"`
	// Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}
	Name *string `pulumi:"name"`
	// Obfuscated user ID which the customer sent to us.
	ObfuscatedUserId *string `pulumi:"obfuscatedUserId"`
	Project          *string `pulumi:"project"`
	// The time at which the conversation started.
	StartTime *string `pulumi:"startTime"`
	// Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.
	Ttl *string `pulumi:"ttl"`
}

// The set of arguments for constructing a Conversation resource.
type ConversationArgs struct {
	// An opaque, user-specified string representing the human agent who handled the conversation.
	AgentId pulumi.StringPtrInput
	// Call-specific metadata.
	CallMetadata GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrInput
	// A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
	ConversationId pulumi.StringPtrInput
	// The source of the audio and transcription for the conversation.
	DataSource GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrInput
	// The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.
	ExpireTime pulumi.StringPtrInput
	// A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.
	Labels pulumi.StringMapInput
	// A user-specified language code for the conversation.
	LanguageCode pulumi.StringPtrInput
	Location     pulumi.StringPtrInput
	// Immutable. The conversation medium, if unspecified will default to PHONE_CALL.
	Medium ConversationMediumPtrInput
	// Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}
	Name pulumi.StringPtrInput
	// Obfuscated user ID which the customer sent to us.
	ObfuscatedUserId pulumi.StringPtrInput
	Project          pulumi.StringPtrInput
	// The time at which the conversation started.
	StartTime pulumi.StringPtrInput
	// Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.
	Ttl pulumi.StringPtrInput
}

func (ConversationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*conversationArgs)(nil)).Elem()
}

type ConversationInput interface {
	pulumi.Input

	ToConversationOutput() ConversationOutput
	ToConversationOutputWithContext(ctx context.Context) ConversationOutput
}

func (*Conversation) ElementType() reflect.Type {
	return reflect.TypeOf((**Conversation)(nil)).Elem()
}

func (i *Conversation) ToConversationOutput() ConversationOutput {
	return i.ToConversationOutputWithContext(context.Background())
}

func (i *Conversation) ToConversationOutputWithContext(ctx context.Context) ConversationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConversationOutput)
}

type ConversationOutput struct{ *pulumi.OutputState }

func (ConversationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Conversation)(nil)).Elem()
}

func (o ConversationOutput) ToConversationOutput() ConversationOutput {
	return o
}

func (o ConversationOutput) ToConversationOutputWithContext(ctx context.Context) ConversationOutput {
	return o
}

// An opaque, user-specified string representing the human agent who handled the conversation.
func (o ConversationOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringOutput { return v.AgentId }).(pulumi.StringOutput)
}

// Call-specific metadata.
func (o ConversationOutput) CallMetadata() GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput {
	return o.ApplyT(func(v *Conversation) GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput {
		return v.CallMetadata
	}).(GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput)
}

// A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`
func (o ConversationOutput) ConversationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringPtrOutput { return v.ConversationId }).(pulumi.StringPtrOutput)
}

// The time at which the conversation was created.
func (o ConversationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The source of the audio and transcription for the conversation.
func (o ConversationOutput) DataSource() GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput {
	return o.ApplyT(func(v *Conversation) GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput {
		return v.DataSource
	}).(GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput)
}

// All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}
func (o ConversationOutput) DialogflowIntents() GoogleCloudContactcenterinsightsV1DialogflowIntentResponseMapOutput {
	return o.ApplyT(func(v *Conversation) GoogleCloudContactcenterinsightsV1DialogflowIntentResponseMapOutput {
		return v.DialogflowIntents
	}).(GoogleCloudContactcenterinsightsV1DialogflowIntentResponseMapOutput)
}

// The duration of the conversation.
func (o ConversationOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringOutput { return v.Duration }).(pulumi.StringOutput)
}

// The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.
func (o ConversationOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.
func (o ConversationOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// A user-specified language code for the conversation.
func (o ConversationOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringOutput { return v.LanguageCode }).(pulumi.StringOutput)
}

// The conversation's latest analysis, if one exists.
func (o ConversationOutput) LatestAnalysis() GoogleCloudContactcenterinsightsV1AnalysisResponseOutput {
	return o.ApplyT(func(v *Conversation) GoogleCloudContactcenterinsightsV1AnalysisResponseOutput {
		return v.LatestAnalysis
	}).(GoogleCloudContactcenterinsightsV1AnalysisResponseOutput)
}

// Latest summary of the conversation.
func (o ConversationOutput) LatestSummary() GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput {
	return o.ApplyT(func(v *Conversation) GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput {
		return v.LatestSummary
	}).(GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput)
}

func (o ConversationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Immutable. The conversation medium, if unspecified will default to PHONE_CALL.
func (o ConversationOutput) Medium() pulumi.StringOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringOutput { return v.Medium }).(pulumi.StringOutput)
}

// Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}
func (o ConversationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Obfuscated user ID which the customer sent to us.
func (o ConversationOutput) ObfuscatedUserId() pulumi.StringOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringOutput { return v.ObfuscatedUserId }).(pulumi.StringOutput)
}

func (o ConversationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The annotations that were generated during the customer and agent interaction.
func (o ConversationOutput) RuntimeAnnotations() GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput {
	return o.ApplyT(func(v *Conversation) GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput {
		return v.RuntimeAnnotations
	}).(GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput)
}

// The time at which the conversation started.
func (o ConversationOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringOutput { return v.StartTime }).(pulumi.StringOutput)
}

// The conversation transcript.
func (o ConversationOutput) Transcript() GoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput {
	return o.ApplyT(func(v *Conversation) GoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput {
		return v.Transcript
	}).(GoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput)
}

// Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.
func (o ConversationOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringOutput { return v.Ttl }).(pulumi.StringOutput)
}

// The number of turns in the conversation.
func (o ConversationOutput) TurnCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Conversation) pulumi.IntOutput { return v.TurnCount }).(pulumi.IntOutput)
}

// The most recent time at which the conversation was updated.
func (o ConversationOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Conversation) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConversationInput)(nil)).Elem(), &Conversation{})
	pulumi.RegisterOutputType(ConversationOutput{})
}
