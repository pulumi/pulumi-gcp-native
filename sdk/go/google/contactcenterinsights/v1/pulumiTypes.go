// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// The analysis resource.
type GoogleCloudContactcenterinsightsV1AnalysisResponse struct {
	// The result of the analysis, which is populated when the analysis finishes.
	AnalysisResult GoogleCloudContactcenterinsightsV1AnalysisResultResponse `pulumi:"analysisResult"`
	// To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.
	AnnotatorSelector GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse `pulumi:"annotatorSelector"`
	// The time at which the analysis was created, which occurs when the long-running operation completes.
	CreateTime string `pulumi:"createTime"`
	// Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
	Name string `pulumi:"name"`
	// The time at which the analysis was requested.
	RequestTime string `pulumi:"requestTime"`
}

// The analysis resource.
type GoogleCloudContactcenterinsightsV1AnalysisResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1AnalysisResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnalysisResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1AnalysisResponseOutput) ToGoogleCloudContactcenterinsightsV1AnalysisResponseOutput() GoogleCloudContactcenterinsightsV1AnalysisResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnalysisResponseOutput) ToGoogleCloudContactcenterinsightsV1AnalysisResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnalysisResponseOutput {
	return o
}

// The result of the analysis, which is populated when the analysis finishes.
func (o GoogleCloudContactcenterinsightsV1AnalysisResponseOutput) AnalysisResult() GoogleCloudContactcenterinsightsV1AnalysisResultResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnalysisResponse) GoogleCloudContactcenterinsightsV1AnalysisResultResponse {
		return v.AnalysisResult
	}).(GoogleCloudContactcenterinsightsV1AnalysisResultResponseOutput)
}

// To select the annotators to run and the phrase matchers to use (if any). If not specified, all annotators will be run.
func (o GoogleCloudContactcenterinsightsV1AnalysisResponseOutput) AnnotatorSelector() GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnalysisResponse) GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse {
		return v.AnnotatorSelector
	}).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput)
}

// The time at which the analysis was created, which occurs when the long-running operation completes.
func (o GoogleCloudContactcenterinsightsV1AnalysisResponseOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnalysisResponse) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
func (o GoogleCloudContactcenterinsightsV1AnalysisResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnalysisResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The time at which the analysis was requested.
func (o GoogleCloudContactcenterinsightsV1AnalysisResponseOutput) RequestTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnalysisResponse) string { return v.RequestTime }).(pulumi.StringOutput)
}

// Call-specific metadata created during analysis.
type GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponse struct {
	// A list of call annotations that apply to this call.
	Annotations []GoogleCloudContactcenterinsightsV1CallAnnotationResponse `pulumi:"annotations"`
	// All the entities in the call.
	Entities GoogleCloudContactcenterinsightsV1EntityResponse `pulumi:"entities"`
	// All the matched intents in the call.
	Intents GoogleCloudContactcenterinsightsV1IntentResponse `pulumi:"intents"`
	// Overall conversation-level issue modeling result.
	IssueModelResult GoogleCloudContactcenterinsightsV1IssueModelResultResponse `pulumi:"issueModelResult"`
	// All the matched phrase matchers in the call.
	PhraseMatchers GoogleCloudContactcenterinsightsV1PhraseMatchDataResponse `pulumi:"phraseMatchers"`
	// Overall conversation-level sentiment for each channel of the call.
	Sentiments []GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponse `pulumi:"sentiments"`
}

// Call-specific metadata created during analysis.
type GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput) ToGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput() GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput) ToGoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput {
	return o
}

// A list of call annotations that apply to this call.
func (o GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput) Annotations() GoogleCloudContactcenterinsightsV1CallAnnotationResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponse) []GoogleCloudContactcenterinsightsV1CallAnnotationResponse {
		return v.Annotations
	}).(GoogleCloudContactcenterinsightsV1CallAnnotationResponseArrayOutput)
}

// All the entities in the call.
func (o GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput) Entities() GoogleCloudContactcenterinsightsV1EntityResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponse) GoogleCloudContactcenterinsightsV1EntityResponse {
		return v.Entities
	}).(GoogleCloudContactcenterinsightsV1EntityResponseOutput)
}

// All the matched intents in the call.
func (o GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput) Intents() GoogleCloudContactcenterinsightsV1IntentResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponse) GoogleCloudContactcenterinsightsV1IntentResponse {
		return v.Intents
	}).(GoogleCloudContactcenterinsightsV1IntentResponseOutput)
}

// Overall conversation-level issue modeling result.
func (o GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput) IssueModelResult() GoogleCloudContactcenterinsightsV1IssueModelResultResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponse) GoogleCloudContactcenterinsightsV1IssueModelResultResponse {
		return v.IssueModelResult
	}).(GoogleCloudContactcenterinsightsV1IssueModelResultResponseOutput)
}

// All the matched phrase matchers in the call.
func (o GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput) PhraseMatchers() GoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponse) GoogleCloudContactcenterinsightsV1PhraseMatchDataResponse {
		return v.PhraseMatchers
	}).(GoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutput)
}

// Overall conversation-level sentiment for each channel of the call.
func (o GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput) Sentiments() GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponse) []GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponse {
		return v.Sentiments
	}).(GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseArrayOutput)
}

// The result of an analysis.
type GoogleCloudContactcenterinsightsV1AnalysisResultResponse struct {
	// Call-specific metadata created by the analysis.
	CallAnalysisMetadata GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponse `pulumi:"callAnalysisMetadata"`
	// The time at which the analysis ended.
	EndTime string `pulumi:"endTime"`
}

// The result of an analysis.
type GoogleCloudContactcenterinsightsV1AnalysisResultResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1AnalysisResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnalysisResultResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1AnalysisResultResponseOutput) ToGoogleCloudContactcenterinsightsV1AnalysisResultResponseOutput() GoogleCloudContactcenterinsightsV1AnalysisResultResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnalysisResultResponseOutput) ToGoogleCloudContactcenterinsightsV1AnalysisResultResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnalysisResultResponseOutput {
	return o
}

// Call-specific metadata created by the analysis.
func (o GoogleCloudContactcenterinsightsV1AnalysisResultResponseOutput) CallAnalysisMetadata() GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnalysisResultResponse) GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponse {
		return v.CallAnalysisMetadata
	}).(GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput)
}

// The time at which the analysis ended.
func (o GoogleCloudContactcenterinsightsV1AnalysisResultResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnalysisResultResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// A point in a conversation that marks the start or the end of an annotation.
type GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse struct {
	// The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
	TranscriptIndex int `pulumi:"transcriptIndex"`
	// The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
	WordIndex int `pulumi:"wordIndex"`
}

// A point in a conversation that marks the start or the end of an annotation.
type GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput) ToGoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput() GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput) ToGoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput {
	return o
}

// The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
func (o GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput) TranscriptIndex() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse) int { return v.TranscriptIndex }).(pulumi.IntOutput)
}

// The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
func (o GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput) WordIndex() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse) int { return v.WordIndex }).(pulumi.IntOutput)
}

// Selector of all available annotators and phrase matchers to run.
type GoogleCloudContactcenterinsightsV1AnnotatorSelector struct {
	// The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.
	IssueModels []string `pulumi:"issueModels"`
	// The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
	PhraseMatchers []string `pulumi:"phraseMatchers"`
	// Whether to run the entity annotator.
	RunEntityAnnotator *bool `pulumi:"runEntityAnnotator"`
	// Whether to run the intent annotator.
	RunIntentAnnotator *bool `pulumi:"runIntentAnnotator"`
	// Whether to run the interruption annotator.
	RunInterruptionAnnotator *bool `pulumi:"runInterruptionAnnotator"`
	// Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
	RunIssueModelAnnotator *bool `pulumi:"runIssueModelAnnotator"`
	// Whether to run the active phrase matcher annotator(s).
	RunPhraseMatcherAnnotator *bool `pulumi:"runPhraseMatcherAnnotator"`
	// Whether to run the sentiment annotator.
	RunSentimentAnnotator *bool `pulumi:"runSentimentAnnotator"`
	// Whether to run the silence annotator.
	RunSilenceAnnotator *bool `pulumi:"runSilenceAnnotator"`
	// Whether to run the summarization annotator.
	RunSummarizationAnnotator *bool `pulumi:"runSummarizationAnnotator"`
	// Configuration for the summarization annotator.
	SummarizationConfig *GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig `pulumi:"summarizationConfig"`
}

// GoogleCloudContactcenterinsightsV1AnnotatorSelectorInput is an input type that accepts GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs and GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1AnnotatorSelectorInput` via:
//
//	GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs{...}
type GoogleCloudContactcenterinsightsV1AnnotatorSelectorInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput
	ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput
}

// Selector of all available annotators and phrase matchers to run.
type GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs struct {
	// The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.
	IssueModels pulumi.StringArrayInput `pulumi:"issueModels"`
	// The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
	PhraseMatchers pulumi.StringArrayInput `pulumi:"phraseMatchers"`
	// Whether to run the entity annotator.
	RunEntityAnnotator pulumi.BoolPtrInput `pulumi:"runEntityAnnotator"`
	// Whether to run the intent annotator.
	RunIntentAnnotator pulumi.BoolPtrInput `pulumi:"runIntentAnnotator"`
	// Whether to run the interruption annotator.
	RunInterruptionAnnotator pulumi.BoolPtrInput `pulumi:"runInterruptionAnnotator"`
	// Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
	RunIssueModelAnnotator pulumi.BoolPtrInput `pulumi:"runIssueModelAnnotator"`
	// Whether to run the active phrase matcher annotator(s).
	RunPhraseMatcherAnnotator pulumi.BoolPtrInput `pulumi:"runPhraseMatcherAnnotator"`
	// Whether to run the sentiment annotator.
	RunSentimentAnnotator pulumi.BoolPtrInput `pulumi:"runSentimentAnnotator"`
	// Whether to run the silence annotator.
	RunSilenceAnnotator pulumi.BoolPtrInput `pulumi:"runSilenceAnnotator"`
	// Whether to run the summarization annotator.
	RunSummarizationAnnotator pulumi.BoolPtrInput `pulumi:"runSummarizationAnnotator"`
	// Configuration for the summarization annotator.
	SummarizationConfig GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrInput `pulumi:"summarizationConfig"`
}

func (GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnnotatorSelector)(nil)).Elem()
}

func (i GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput {
	return i.ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput)
}

func (i GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput).ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutputWithContext(ctx)
}

// GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrInput is an input type that accepts GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs, GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtr and GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrInput` via:
//
//	        GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput
	ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput
}

type googleCloudContactcenterinsightsV1AnnotatorSelectorPtrType GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs

func GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtr(v *GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs) GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrInput {
	return (*googleCloudContactcenterinsightsV1AnnotatorSelectorPtrType)(v)
}

func (*googleCloudContactcenterinsightsV1AnnotatorSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1AnnotatorSelector)(nil)).Elem()
}

func (i *googleCloudContactcenterinsightsV1AnnotatorSelectorPtrType) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutputWithContext(context.Background())
}

func (i *googleCloudContactcenterinsightsV1AnnotatorSelectorPtrType) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput)
}

// Selector of all available annotators and phrase matchers to run.
type GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnnotatorSelector)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput {
	return o.ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutputWithContext(context.Background())
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudContactcenterinsightsV1AnnotatorSelector) *GoogleCloudContactcenterinsightsV1AnnotatorSelector {
		return &v
	}).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput)
}

// The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) IssueModels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelector) []string { return v.IssueModels }).(pulumi.StringArrayOutput)
}

// The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) PhraseMatchers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelector) []string { return v.PhraseMatchers }).(pulumi.StringArrayOutput)
}

// Whether to run the entity annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) RunEntityAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool { return v.RunEntityAnnotator }).(pulumi.BoolPtrOutput)
}

// Whether to run the intent annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) RunIntentAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool { return v.RunIntentAnnotator }).(pulumi.BoolPtrOutput)
}

// Whether to run the interruption annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) RunInterruptionAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool { return v.RunInterruptionAnnotator }).(pulumi.BoolPtrOutput)
}

// Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) RunIssueModelAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool { return v.RunIssueModelAnnotator }).(pulumi.BoolPtrOutput)
}

// Whether to run the active phrase matcher annotator(s).
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) RunPhraseMatcherAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool { return v.RunPhraseMatcherAnnotator }).(pulumi.BoolPtrOutput)
}

// Whether to run the sentiment annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) RunSentimentAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool { return v.RunSentimentAnnotator }).(pulumi.BoolPtrOutput)
}

// Whether to run the silence annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) RunSilenceAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool { return v.RunSilenceAnnotator }).(pulumi.BoolPtrOutput)
}

// Whether to run the summarization annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) RunSummarizationAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool { return v.RunSummarizationAnnotator }).(pulumi.BoolPtrOutput)
}

// Configuration for the summarization annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput) SummarizationConfig() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelector) *GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig {
		return v.SummarizationConfig
	}).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput)
}

type GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1AnnotatorSelector)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) Elem() GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelector) GoogleCloudContactcenterinsightsV1AnnotatorSelector {
		if v != nil {
			return *v
		}
		var ret GoogleCloudContactcenterinsightsV1AnnotatorSelector
		return ret
	}).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput)
}

// The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) IssueModels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelector) []string {
		if v == nil {
			return nil
		}
		return v.IssueModels
	}).(pulumi.StringArrayOutput)
}

// The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) PhraseMatchers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelector) []string {
		if v == nil {
			return nil
		}
		return v.PhraseMatchers
	}).(pulumi.StringArrayOutput)
}

// Whether to run the entity annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) RunEntityAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool {
		if v == nil {
			return nil
		}
		return v.RunEntityAnnotator
	}).(pulumi.BoolPtrOutput)
}

// Whether to run the intent annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) RunIntentAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool {
		if v == nil {
			return nil
		}
		return v.RunIntentAnnotator
	}).(pulumi.BoolPtrOutput)
}

// Whether to run the interruption annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) RunInterruptionAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool {
		if v == nil {
			return nil
		}
		return v.RunInterruptionAnnotator
	}).(pulumi.BoolPtrOutput)
}

// Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) RunIssueModelAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool {
		if v == nil {
			return nil
		}
		return v.RunIssueModelAnnotator
	}).(pulumi.BoolPtrOutput)
}

// Whether to run the active phrase matcher annotator(s).
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) RunPhraseMatcherAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool {
		if v == nil {
			return nil
		}
		return v.RunPhraseMatcherAnnotator
	}).(pulumi.BoolPtrOutput)
}

// Whether to run the sentiment annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) RunSentimentAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool {
		if v == nil {
			return nil
		}
		return v.RunSentimentAnnotator
	}).(pulumi.BoolPtrOutput)
}

// Whether to run the silence annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) RunSilenceAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool {
		if v == nil {
			return nil
		}
		return v.RunSilenceAnnotator
	}).(pulumi.BoolPtrOutput)
}

// Whether to run the summarization annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) RunSummarizationAnnotator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelector) *bool {
		if v == nil {
			return nil
		}
		return v.RunSummarizationAnnotator
	}).(pulumi.BoolPtrOutput)
}

// Configuration for the summarization annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput) SummarizationConfig() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelector) *GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig {
		if v == nil {
			return nil
		}
		return v.SummarizationConfig
	}).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput)
}

// Selector of all available annotators and phrase matchers to run.
type GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse struct {
	// The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.
	IssueModels []string `pulumi:"issueModels"`
	// The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
	PhraseMatchers []string `pulumi:"phraseMatchers"`
	// Whether to run the entity annotator.
	RunEntityAnnotator bool `pulumi:"runEntityAnnotator"`
	// Whether to run the intent annotator.
	RunIntentAnnotator bool `pulumi:"runIntentAnnotator"`
	// Whether to run the interruption annotator.
	RunInterruptionAnnotator bool `pulumi:"runInterruptionAnnotator"`
	// Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
	RunIssueModelAnnotator bool `pulumi:"runIssueModelAnnotator"`
	// Whether to run the active phrase matcher annotator(s).
	RunPhraseMatcherAnnotator bool `pulumi:"runPhraseMatcherAnnotator"`
	// Whether to run the sentiment annotator.
	RunSentimentAnnotator bool `pulumi:"runSentimentAnnotator"`
	// Whether to run the silence annotator.
	RunSilenceAnnotator bool `pulumi:"runSilenceAnnotator"`
	// Whether to run the summarization annotator.
	RunSummarizationAnnotator bool `pulumi:"runSummarizationAnnotator"`
	// Configuration for the summarization annotator.
	SummarizationConfig GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponse `pulumi:"summarizationConfig"`
}

// Selector of all available annotators and phrase matchers to run.
type GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput {
	return o
}

// The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput) IssueModels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse) []string { return v.IssueModels }).(pulumi.StringArrayOutput)
}

// The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput) PhraseMatchers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse) []string { return v.PhraseMatchers }).(pulumi.StringArrayOutput)
}

// Whether to run the entity annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput) RunEntityAnnotator() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse) bool { return v.RunEntityAnnotator }).(pulumi.BoolOutput)
}

// Whether to run the intent annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput) RunIntentAnnotator() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse) bool { return v.RunIntentAnnotator }).(pulumi.BoolOutput)
}

// Whether to run the interruption annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput) RunInterruptionAnnotator() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse) bool {
		return v.RunInterruptionAnnotator
	}).(pulumi.BoolOutput)
}

// Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput) RunIssueModelAnnotator() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse) bool {
		return v.RunIssueModelAnnotator
	}).(pulumi.BoolOutput)
}

// Whether to run the active phrase matcher annotator(s).
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput) RunPhraseMatcherAnnotator() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse) bool {
		return v.RunPhraseMatcherAnnotator
	}).(pulumi.BoolOutput)
}

// Whether to run the sentiment annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput) RunSentimentAnnotator() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse) bool {
		return v.RunSentimentAnnotator
	}).(pulumi.BoolOutput)
}

// Whether to run the silence annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput) RunSilenceAnnotator() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse) bool { return v.RunSilenceAnnotator }).(pulumi.BoolOutput)
}

// Whether to run the summarization annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput) RunSummarizationAnnotator() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse) bool {
		return v.RunSummarizationAnnotator
	}).(pulumi.BoolOutput)
}

// Configuration for the summarization annotator.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput) SummarizationConfig() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponse) GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponse {
		return v.SummarizationConfig
	}).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponseOutput)
}

// Configuration for summarization.
type GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig struct {
	// Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
	ConversationProfile *string `pulumi:"conversationProfile"`
	// Default summarization model to be used.
	SummarizationModel *GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigSummarizationModel `pulumi:"summarizationModel"`
}

// GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigInput is an input type that accepts GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigArgs and GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigInput` via:
//
//	GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigArgs{...}
type GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput
	ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput
}

// Configuration for summarization.
type GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigArgs struct {
	// Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
	ConversationProfile pulumi.StringPtrInput `pulumi:"conversationProfile"`
	// Default summarization model to be used.
	SummarizationModel GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigSummarizationModelPtrInput `pulumi:"summarizationModel"`
}

func (GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig)(nil)).Elem()
}

func (i GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigArgs) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput {
	return i.ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigArgs) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput)
}

func (i GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigArgs) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigArgs) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput).ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutputWithContext(ctx)
}

// GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrInput is an input type that accepts GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigArgs, GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtr and GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrInput` via:
//
//	        GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput
	ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput
}

type googleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrType GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigArgs

func GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtr(v *GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigArgs) GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrInput {
	return (*googleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrType)(v)
}

func (*googleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig)(nil)).Elem()
}

func (i *googleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrType) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrType) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput)
}

// Configuration for summarization.
type GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput {
	return o.ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig) *GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig {
		return &v
	}).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput)
}

// Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput) ConversationProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig) *string {
		return v.ConversationProfile
	}).(pulumi.StringPtrOutput)
}

// Default summarization model to be used.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput) SummarizationModel() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigSummarizationModelPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig) *GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigSummarizationModel {
		return v.SummarizationModel
	}).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigSummarizationModelPtrOutput)
}

type GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput) Elem() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig) GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig
		return ret
	}).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput)
}

// Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput) ConversationProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConversationProfile
	}).(pulumi.StringPtrOutput)
}

// Default summarization model to be used.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput) SummarizationModel() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigSummarizationModelPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig) *GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigSummarizationModel {
		if v == nil {
			return nil
		}
		return v.SummarizationModel
	}).(GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigSummarizationModelPtrOutput)
}

// Configuration for summarization.
type GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponse struct {
	// Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
	ConversationProfile string `pulumi:"conversationProfile"`
	// Default summarization model to be used.
	SummarizationModel string `pulumi:"summarizationModel"`
}

// Configuration for summarization.
type GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponseOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponseOutput() GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponseOutput) ToGoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponseOutput {
	return o
}

// Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponseOutput) ConversationProfile() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponse) string {
		return v.ConversationProfile
	}).(pulumi.StringOutput)
}

// Default summarization model to be used.
func (o GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponseOutput) SummarizationModel() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponse) string {
		return v.SummarizationModel
	}).(pulumi.StringOutput)
}

// The feedback that the customer has about a certain answer in the conversation.
type GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse struct {
	// Indicates whether an answer or item was clicked by the human agent.
	Clicked bool `pulumi:"clicked"`
	// The correctness level of an answer.
	CorrectnessLevel string `pulumi:"correctnessLevel"`
	// Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
	Displayed bool `pulumi:"displayed"`
}

// The feedback that the customer has about a certain answer in the conversation.
type GoogleCloudContactcenterinsightsV1AnswerFeedbackResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1AnswerFeedbackResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1AnswerFeedbackResponseOutput) ToGoogleCloudContactcenterinsightsV1AnswerFeedbackResponseOutput() GoogleCloudContactcenterinsightsV1AnswerFeedbackResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1AnswerFeedbackResponseOutput) ToGoogleCloudContactcenterinsightsV1AnswerFeedbackResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1AnswerFeedbackResponseOutput {
	return o
}

// Indicates whether an answer or item was clicked by the human agent.
func (o GoogleCloudContactcenterinsightsV1AnswerFeedbackResponseOutput) Clicked() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse) bool { return v.Clicked }).(pulumi.BoolOutput)
}

// The correctness level of an answer.
func (o GoogleCloudContactcenterinsightsV1AnswerFeedbackResponseOutput) CorrectnessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse) string { return v.CorrectnessLevel }).(pulumi.StringOutput)
}

// Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
func (o GoogleCloudContactcenterinsightsV1AnswerFeedbackResponseOutput) Displayed() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse) bool { return v.Displayed }).(pulumi.BoolOutput)
}

// Agent Assist Article Suggestion data.
type GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse struct {
	// The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
	ConfidenceScore float64 `pulumi:"confidenceScore"`
	// Map that contains metadata about the Article Suggestion and the document that it originates from.
	Metadata map[string]string `pulumi:"metadata"`
	// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
	QueryRecord string `pulumi:"queryRecord"`
	// The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
	Source string `pulumi:"source"`
	// Article title.
	Title string `pulumi:"title"`
	// Article URI.
	Uri string `pulumi:"uri"`
}

// Agent Assist Article Suggestion data.
type GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput) ToGoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput() GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput) ToGoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput {
	return o
}

// The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
func (o GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput) ConfidenceScore() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse) float64 {
		return v.ConfidenceScore
	}).(pulumi.Float64Output)
}

// Map that contains metadata about the Article Suggestion and the document that it originates from.
func (o GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse) map[string]string {
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
func (o GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput) QueryRecord() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse) string { return v.QueryRecord }).(pulumi.StringOutput)
}

// The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
func (o GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse) string { return v.Source }).(pulumi.StringOutput)
}

// Article title.
func (o GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse) string { return v.Title }).(pulumi.StringOutput)
}

// Article URI.
func (o GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// A piece of metadata that applies to a window of a call.
type GoogleCloudContactcenterinsightsV1CallAnnotationResponse struct {
	// The boundary in the conversation where the annotation ends, inclusive.
	AnnotationEndBoundary GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse `pulumi:"annotationEndBoundary"`
	// The boundary in the conversation where the annotation starts, inclusive.
	AnnotationStartBoundary GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse `pulumi:"annotationStartBoundary"`
	// The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.
	ChannelTag int `pulumi:"channelTag"`
	// Data specifying an entity mention.
	EntityMentionData GoogleCloudContactcenterinsightsV1EntityMentionDataResponse `pulumi:"entityMentionData"`
	// Data specifying a hold.
	HoldData GoogleCloudContactcenterinsightsV1HoldDataResponse `pulumi:"holdData"`
	// Data specifying an intent match.
	IntentMatchData GoogleCloudContactcenterinsightsV1IntentMatchDataResponse `pulumi:"intentMatchData"`
	// Data specifying an interruption.
	InterruptionData GoogleCloudContactcenterinsightsV1InterruptionDataResponse `pulumi:"interruptionData"`
	// Data specifying an issue match.
	IssueMatchData GoogleCloudContactcenterinsightsV1IssueMatchDataResponse `pulumi:"issueMatchData"`
	// Data specifying a phrase match.
	PhraseMatchData GoogleCloudContactcenterinsightsV1PhraseMatchDataResponse `pulumi:"phraseMatchData"`
	// Data specifying sentiment.
	SentimentData GoogleCloudContactcenterinsightsV1SentimentDataResponse `pulumi:"sentimentData"`
	// Data specifying silence.
	SilenceData GoogleCloudContactcenterinsightsV1SilenceDataResponse `pulumi:"silenceData"`
}

// A piece of metadata that applies to a window of a call.
type GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1CallAnnotationResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput) ToGoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput() GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput) ToGoogleCloudContactcenterinsightsV1CallAnnotationResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput {
	return o
}

// The boundary in the conversation where the annotation ends, inclusive.
func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput) AnnotationEndBoundary() GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1CallAnnotationResponse) GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse {
		return v.AnnotationEndBoundary
	}).(GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput)
}

// The boundary in the conversation where the annotation starts, inclusive.
func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput) AnnotationStartBoundary() GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1CallAnnotationResponse) GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse {
		return v.AnnotationStartBoundary
	}).(GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput)
}

// The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.
func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput) ChannelTag() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1CallAnnotationResponse) int { return v.ChannelTag }).(pulumi.IntOutput)
}

// Data specifying an entity mention.
func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput) EntityMentionData() GoogleCloudContactcenterinsightsV1EntityMentionDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1CallAnnotationResponse) GoogleCloudContactcenterinsightsV1EntityMentionDataResponse {
		return v.EntityMentionData
	}).(GoogleCloudContactcenterinsightsV1EntityMentionDataResponseOutput)
}

// Data specifying a hold.
func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput) HoldData() GoogleCloudContactcenterinsightsV1HoldDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1CallAnnotationResponse) GoogleCloudContactcenterinsightsV1HoldDataResponse {
		return v.HoldData
	}).(GoogleCloudContactcenterinsightsV1HoldDataResponseOutput)
}

// Data specifying an intent match.
func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput) IntentMatchData() GoogleCloudContactcenterinsightsV1IntentMatchDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1CallAnnotationResponse) GoogleCloudContactcenterinsightsV1IntentMatchDataResponse {
		return v.IntentMatchData
	}).(GoogleCloudContactcenterinsightsV1IntentMatchDataResponseOutput)
}

// Data specifying an interruption.
func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput) InterruptionData() GoogleCloudContactcenterinsightsV1InterruptionDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1CallAnnotationResponse) GoogleCloudContactcenterinsightsV1InterruptionDataResponse {
		return v.InterruptionData
	}).(GoogleCloudContactcenterinsightsV1InterruptionDataResponseOutput)
}

// Data specifying an issue match.
func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput) IssueMatchData() GoogleCloudContactcenterinsightsV1IssueMatchDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1CallAnnotationResponse) GoogleCloudContactcenterinsightsV1IssueMatchDataResponse {
		return v.IssueMatchData
	}).(GoogleCloudContactcenterinsightsV1IssueMatchDataResponseOutput)
}

// Data specifying a phrase match.
func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput) PhraseMatchData() GoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1CallAnnotationResponse) GoogleCloudContactcenterinsightsV1PhraseMatchDataResponse {
		return v.PhraseMatchData
	}).(GoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutput)
}

// Data specifying sentiment.
func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput) SentimentData() GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1CallAnnotationResponse) GoogleCloudContactcenterinsightsV1SentimentDataResponse {
		return v.SentimentData
	}).(GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput)
}

// Data specifying silence.
func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput) SilenceData() GoogleCloudContactcenterinsightsV1SilenceDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1CallAnnotationResponse) GoogleCloudContactcenterinsightsV1SilenceDataResponse {
		return v.SilenceData
	}).(GoogleCloudContactcenterinsightsV1SilenceDataResponseOutput)
}

type GoogleCloudContactcenterinsightsV1CallAnnotationResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1CallAnnotationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudContactcenterinsightsV1CallAnnotationResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1CallAnnotationResponseArrayOutput() GoogleCloudContactcenterinsightsV1CallAnnotationResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1CallAnnotationResponseArrayOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1CallAnnotationResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1CallAnnotationResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudContactcenterinsightsV1CallAnnotationResponse {
		return vs[0].([]GoogleCloudContactcenterinsightsV1CallAnnotationResponse)[vs[1].(int)]
	}).(GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput)
}

// Call-specific metadata.
type GoogleCloudContactcenterinsightsV1ConversationCallMetadata struct {
	// The audio channel that contains the agent.
	AgentChannel *int `pulumi:"agentChannel"`
	// The audio channel that contains the customer.
	CustomerChannel *int `pulumi:"customerChannel"`
}

// GoogleCloudContactcenterinsightsV1ConversationCallMetadataInput is an input type that accepts GoogleCloudContactcenterinsightsV1ConversationCallMetadataArgs and GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1ConversationCallMetadataInput` via:
//
//	GoogleCloudContactcenterinsightsV1ConversationCallMetadataArgs{...}
type GoogleCloudContactcenterinsightsV1ConversationCallMetadataInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput() GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput
	ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput
}

// Call-specific metadata.
type GoogleCloudContactcenterinsightsV1ConversationCallMetadataArgs struct {
	// The audio channel that contains the agent.
	AgentChannel pulumi.IntPtrInput `pulumi:"agentChannel"`
	// The audio channel that contains the customer.
	CustomerChannel pulumi.IntPtrInput `pulumi:"customerChannel"`
}

func (GoogleCloudContactcenterinsightsV1ConversationCallMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationCallMetadata)(nil)).Elem()
}

func (i GoogleCloudContactcenterinsightsV1ConversationCallMetadataArgs) ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput() GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput {
	return i.ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1ConversationCallMetadataArgs) ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput)
}

func (i GoogleCloudContactcenterinsightsV1ConversationCallMetadataArgs) ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput() GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1ConversationCallMetadataArgs) ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput).ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutputWithContext(ctx)
}

// GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrInput is an input type that accepts GoogleCloudContactcenterinsightsV1ConversationCallMetadataArgs, GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtr and GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrInput` via:
//
//	        GoogleCloudContactcenterinsightsV1ConversationCallMetadataArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput() GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput
	ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput
}

type googleCloudContactcenterinsightsV1ConversationCallMetadataPtrType GoogleCloudContactcenterinsightsV1ConversationCallMetadataArgs

func GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtr(v *GoogleCloudContactcenterinsightsV1ConversationCallMetadataArgs) GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrInput {
	return (*googleCloudContactcenterinsightsV1ConversationCallMetadataPtrType)(v)
}

func (*googleCloudContactcenterinsightsV1ConversationCallMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1ConversationCallMetadata)(nil)).Elem()
}

func (i *googleCloudContactcenterinsightsV1ConversationCallMetadataPtrType) ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput() GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutputWithContext(context.Background())
}

func (i *googleCloudContactcenterinsightsV1ConversationCallMetadataPtrType) ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput)
}

// Call-specific metadata.
type GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationCallMetadata)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput) ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput() GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput) ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput) ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput() GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput {
	return o.ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutputWithContext(context.Background())
}

func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput) ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudContactcenterinsightsV1ConversationCallMetadata) *GoogleCloudContactcenterinsightsV1ConversationCallMetadata {
		return &v
	}).(GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput)
}

// The audio channel that contains the agent.
func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput) AgentChannel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationCallMetadata) *int { return v.AgentChannel }).(pulumi.IntPtrOutput)
}

// The audio channel that contains the customer.
func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput) CustomerChannel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationCallMetadata) *int { return v.CustomerChannel }).(pulumi.IntPtrOutput)
}

type GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1ConversationCallMetadata)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput) ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput() GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput) ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput) Elem() GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1ConversationCallMetadata) GoogleCloudContactcenterinsightsV1ConversationCallMetadata {
		if v != nil {
			return *v
		}
		var ret GoogleCloudContactcenterinsightsV1ConversationCallMetadata
		return ret
	}).(GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput)
}

// The audio channel that contains the agent.
func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput) AgentChannel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1ConversationCallMetadata) *int {
		if v == nil {
			return nil
		}
		return v.AgentChannel
	}).(pulumi.IntPtrOutput)
}

// The audio channel that contains the customer.
func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput) CustomerChannel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1ConversationCallMetadata) *int {
		if v == nil {
			return nil
		}
		return v.CustomerChannel
	}).(pulumi.IntPtrOutput)
}

// Call-specific metadata.
type GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponse struct {
	// The audio channel that contains the agent.
	AgentChannel int `pulumi:"agentChannel"`
	// The audio channel that contains the customer.
	CustomerChannel int `pulumi:"customerChannel"`
}

// Call-specific metadata.
type GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput() GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput {
	return o
}

// The audio channel that contains the agent.
func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput) AgentChannel() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponse) int { return v.AgentChannel }).(pulumi.IntOutput)
}

// The audio channel that contains the customer.
func (o GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput) CustomerChannel() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponse) int {
		return v.CustomerChannel
	}).(pulumi.IntOutput)
}

// The conversation source, which is a combination of transcript, audio, and metadata.
type GoogleCloudContactcenterinsightsV1ConversationDataSource struct {
	// The source when the conversation comes from Dialogflow.
	DialogflowSource *GoogleCloudContactcenterinsightsV1DialogflowSource `pulumi:"dialogflowSource"`
	// A Cloud Storage location specification for the audio and transcript.
	GcsSource *GoogleCloudContactcenterinsightsV1GcsSource `pulumi:"gcsSource"`
}

// GoogleCloudContactcenterinsightsV1ConversationDataSourceInput is an input type that accepts GoogleCloudContactcenterinsightsV1ConversationDataSourceArgs and GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1ConversationDataSourceInput` via:
//
//	GoogleCloudContactcenterinsightsV1ConversationDataSourceArgs{...}
type GoogleCloudContactcenterinsightsV1ConversationDataSourceInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1ConversationDataSourceOutput() GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput
	ToGoogleCloudContactcenterinsightsV1ConversationDataSourceOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput
}

// The conversation source, which is a combination of transcript, audio, and metadata.
type GoogleCloudContactcenterinsightsV1ConversationDataSourceArgs struct {
	// The source when the conversation comes from Dialogflow.
	DialogflowSource GoogleCloudContactcenterinsightsV1DialogflowSourcePtrInput `pulumi:"dialogflowSource"`
	// A Cloud Storage location specification for the audio and transcript.
	GcsSource GoogleCloudContactcenterinsightsV1GcsSourcePtrInput `pulumi:"gcsSource"`
}

func (GoogleCloudContactcenterinsightsV1ConversationDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationDataSource)(nil)).Elem()
}

func (i GoogleCloudContactcenterinsightsV1ConversationDataSourceArgs) ToGoogleCloudContactcenterinsightsV1ConversationDataSourceOutput() GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput {
	return i.ToGoogleCloudContactcenterinsightsV1ConversationDataSourceOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1ConversationDataSourceArgs) ToGoogleCloudContactcenterinsightsV1ConversationDataSourceOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput)
}

func (i GoogleCloudContactcenterinsightsV1ConversationDataSourceArgs) ToGoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput() GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1ConversationDataSourceArgs) ToGoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput).ToGoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutputWithContext(ctx)
}

// GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrInput is an input type that accepts GoogleCloudContactcenterinsightsV1ConversationDataSourceArgs, GoogleCloudContactcenterinsightsV1ConversationDataSourcePtr and GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrInput` via:
//
//	        GoogleCloudContactcenterinsightsV1ConversationDataSourceArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput() GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput
	ToGoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput
}

type googleCloudContactcenterinsightsV1ConversationDataSourcePtrType GoogleCloudContactcenterinsightsV1ConversationDataSourceArgs

func GoogleCloudContactcenterinsightsV1ConversationDataSourcePtr(v *GoogleCloudContactcenterinsightsV1ConversationDataSourceArgs) GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrInput {
	return (*googleCloudContactcenterinsightsV1ConversationDataSourcePtrType)(v)
}

func (*googleCloudContactcenterinsightsV1ConversationDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1ConversationDataSource)(nil)).Elem()
}

func (i *googleCloudContactcenterinsightsV1ConversationDataSourcePtrType) ToGoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput() GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutputWithContext(context.Background())
}

func (i *googleCloudContactcenterinsightsV1ConversationDataSourcePtrType) ToGoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput)
}

// The conversation source, which is a combination of transcript, audio, and metadata.
type GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationDataSource)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput) ToGoogleCloudContactcenterinsightsV1ConversationDataSourceOutput() GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput) ToGoogleCloudContactcenterinsightsV1ConversationDataSourceOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput) ToGoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput() GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput {
	return o.ToGoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutputWithContext(context.Background())
}

func (o GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput) ToGoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudContactcenterinsightsV1ConversationDataSource) *GoogleCloudContactcenterinsightsV1ConversationDataSource {
		return &v
	}).(GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput)
}

// The source when the conversation comes from Dialogflow.
func (o GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput) DialogflowSource() GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationDataSource) *GoogleCloudContactcenterinsightsV1DialogflowSource {
		return v.DialogflowSource
	}).(GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput)
}

// A Cloud Storage location specification for the audio and transcript.
func (o GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput) GcsSource() GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationDataSource) *GoogleCloudContactcenterinsightsV1GcsSource {
		return v.GcsSource
	}).(GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput)
}

type GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1ConversationDataSource)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput) ToGoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput() GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput) ToGoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput) Elem() GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1ConversationDataSource) GoogleCloudContactcenterinsightsV1ConversationDataSource {
		if v != nil {
			return *v
		}
		var ret GoogleCloudContactcenterinsightsV1ConversationDataSource
		return ret
	}).(GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput)
}

// The source when the conversation comes from Dialogflow.
func (o GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput) DialogflowSource() GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1ConversationDataSource) *GoogleCloudContactcenterinsightsV1DialogflowSource {
		if v == nil {
			return nil
		}
		return v.DialogflowSource
	}).(GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput)
}

// A Cloud Storage location specification for the audio and transcript.
func (o GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput) GcsSource() GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1ConversationDataSource) *GoogleCloudContactcenterinsightsV1GcsSource {
		if v == nil {
			return nil
		}
		return v.GcsSource
	}).(GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput)
}

// The conversation source, which is a combination of transcript, audio, and metadata.
type GoogleCloudContactcenterinsightsV1ConversationDataSourceResponse struct {
	// The source when the conversation comes from Dialogflow.
	DialogflowSource GoogleCloudContactcenterinsightsV1DialogflowSourceResponse `pulumi:"dialogflowSource"`
	// A Cloud Storage location specification for the audio and transcript.
	GcsSource GoogleCloudContactcenterinsightsV1GcsSourceResponse `pulumi:"gcsSource"`
}

// The conversation source, which is a combination of transcript, audio, and metadata.
type GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationDataSourceResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput() GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput {
	return o
}

// The source when the conversation comes from Dialogflow.
func (o GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput) DialogflowSource() GoogleCloudContactcenterinsightsV1DialogflowSourceResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationDataSourceResponse) GoogleCloudContactcenterinsightsV1DialogflowSourceResponse {
		return v.DialogflowSource
	}).(GoogleCloudContactcenterinsightsV1DialogflowSourceResponseOutput)
}

// A Cloud Storage location specification for the audio and transcript.
func (o GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput) GcsSource() GoogleCloudContactcenterinsightsV1GcsSourceResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationDataSourceResponse) GoogleCloudContactcenterinsightsV1GcsSourceResponse {
		return v.GcsSource
	}).(GoogleCloudContactcenterinsightsV1GcsSourceResponseOutput)
}

// One channel of conversation-level sentiment data.
type GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponse struct {
	// The channel of the audio that the data applies to.
	ChannelTag int `pulumi:"channelTag"`
	// Data specifying sentiment.
	SentimentData GoogleCloudContactcenterinsightsV1SentimentDataResponse `pulumi:"sentimentData"`
}

// One channel of conversation-level sentiment data.
type GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseOutput() GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseOutput {
	return o
}

// The channel of the audio that the data applies to.
func (o GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseOutput) ChannelTag() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponse) int { return v.ChannelTag }).(pulumi.IntOutput)
}

// Data specifying sentiment.
func (o GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseOutput) SentimentData() GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponse) GoogleCloudContactcenterinsightsV1SentimentDataResponse {
		return v.SentimentData
	}).(GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput)
}

type GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseArrayOutput() GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseArrayOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponse {
		return vs[0].([]GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponse)[vs[1].(int)]
	}).(GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseOutput)
}

// The call participant speaking for a given utterance.
type GoogleCloudContactcenterinsightsV1ConversationParticipantResponse struct {
	// Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
	//
	// Deprecated: Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
	DialogflowParticipant string `pulumi:"dialogflowParticipant"`
	// The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
	DialogflowParticipantName string `pulumi:"dialogflowParticipantName"`
	// Obfuscated user ID from Dialogflow.
	ObfuscatedExternalUserId string `pulumi:"obfuscatedExternalUserId"`
	// The role of the participant.
	Role string `pulumi:"role"`
	// A user-specified ID representing the participant.
	UserId string `pulumi:"userId"`
}

// The call participant speaking for a given utterance.
type GoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationParticipantResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput() GoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput {
	return o
}

// Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
//
// Deprecated: Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
func (o GoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput) DialogflowParticipant() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationParticipantResponse) string {
		return v.DialogflowParticipant
	}).(pulumi.StringOutput)
}

// The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
func (o GoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput) DialogflowParticipantName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationParticipantResponse) string {
		return v.DialogflowParticipantName
	}).(pulumi.StringOutput)
}

// Obfuscated user ID from Dialogflow.
func (o GoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput) ObfuscatedExternalUserId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationParticipantResponse) string {
		return v.ObfuscatedExternalUserId
	}).(pulumi.StringOutput)
}

// The role of the participant.
func (o GoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationParticipantResponse) string { return v.Role }).(pulumi.StringOutput)
}

// A user-specified ID representing the participant.
func (o GoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationParticipantResponse) string { return v.UserId }).(pulumi.StringOutput)
}

// Conversation summarization suggestion data.
type GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponse struct {
	// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
	AnswerRecord string `pulumi:"answerRecord"`
	// The confidence score of the summarization.
	Confidence float64 `pulumi:"confidence"`
	// The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}
	ConversationModel string `pulumi:"conversationModel"`
	// A map that contains metadata about the summarization and the document from which it originates.
	Metadata map[string]string `pulumi:"metadata"`
	// The summarization content that is concatenated into one string.
	Text string `pulumi:"text"`
	// The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
	TextSections map[string]string `pulumi:"textSections"`
}

// Conversation summarization suggestion data.
type GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput() GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput {
	return o
}

// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
func (o GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput) AnswerRecord() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponse) string {
		return v.AnswerRecord
	}).(pulumi.StringOutput)
}

// The confidence score of the summarization.
func (o GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput) Confidence() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponse) float64 {
		return v.Confidence
	}).(pulumi.Float64Output)
}

// The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}
func (o GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput) ConversationModel() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponse) string {
		return v.ConversationModel
	}).(pulumi.StringOutput)
}

// A map that contains metadata about the summarization and the document from which it originates.
func (o GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponse) map[string]string {
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// The summarization content that is concatenated into one string.
func (o GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponse) string {
		return v.Text
	}).(pulumi.StringOutput)
}

// The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
func (o GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput) TextSections() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponse) map[string]string {
		return v.TextSections
	}).(pulumi.StringMapOutput)
}

// A message representing the transcript of a conversation.
type GoogleCloudContactcenterinsightsV1ConversationTranscriptResponse struct {
	// A list of sequential transcript segments that comprise the conversation.
	TranscriptSegments []GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse `pulumi:"transcriptSegments"`
}

// A message representing the transcript of a conversation.
type GoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationTranscriptResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput() GoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput {
	return o
}

// A list of sequential transcript segments that comprise the conversation.
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput) TranscriptSegments() GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptResponse) []GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse {
		return v.TranscriptSegments
	}).(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseArrayOutput)
}

// Metadata from Dialogflow relating to the current transcript segment.
type GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponse struct {
	// Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
	SmartReplyAllowlistCovered bool `pulumi:"smartReplyAllowlistCovered"`
}

// Metadata from Dialogflow relating to the current transcript segment.
type GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponseOutput() GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponseOutput {
	return o
}

// Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponseOutput) SmartReplyAllowlistCovered() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponse) bool {
		return v.SmartReplyAllowlistCovered
	}).(pulumi.BoolOutput)
}

// A segment of a full transcript.
type GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse struct {
	// For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.
	ChannelTag int `pulumi:"channelTag"`
	// A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
	Confidence float64 `pulumi:"confidence"`
	// CCAI metadata relating to the current transcript segment.
	DialogflowSegmentMetadata GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponse `pulumi:"dialogflowSegmentMetadata"`
	// The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
	LanguageCode string `pulumi:"languageCode"`
	// The time that the message occurred, if provided.
	MessageTime string `pulumi:"messageTime"`
	// The participant of this segment.
	SegmentParticipant GoogleCloudContactcenterinsightsV1ConversationParticipantResponse `pulumi:"segmentParticipant"`
	// The sentiment for this transcript segment.
	Sentiment GoogleCloudContactcenterinsightsV1SentimentDataResponse `pulumi:"sentiment"`
	// The text of this segment.
	Text string `pulumi:"text"`
	// A list of the word-specific information for each word in the segment.
	Words []GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse `pulumi:"words"`
}

// A segment of a full transcript.
type GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput() GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput {
	return o
}

// For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput) ChannelTag() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse) int {
		return v.ChannelTag
	}).(pulumi.IntOutput)
}

// A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput) Confidence() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse) float64 {
		return v.Confidence
	}).(pulumi.Float64Output)
}

// CCAI metadata relating to the current transcript segment.
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput) DialogflowSegmentMetadata() GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse) GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponse {
		return v.DialogflowSegmentMetadata
	}).(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponseOutput)
}

// The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse) string {
		return v.LanguageCode
	}).(pulumi.StringOutput)
}

// The time that the message occurred, if provided.
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput) MessageTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse) string {
		return v.MessageTime
	}).(pulumi.StringOutput)
}

// The participant of this segment.
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput) SegmentParticipant() GoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse) GoogleCloudContactcenterinsightsV1ConversationParticipantResponse {
		return v.SegmentParticipant
	}).(GoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput)
}

// The sentiment for this transcript segment.
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput) Sentiment() GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse) GoogleCloudContactcenterinsightsV1SentimentDataResponse {
		return v.Sentiment
	}).(GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput)
}

// The text of this segment.
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse) string {
		return v.Text
	}).(pulumi.StringOutput)
}

// A list of the word-specific information for each word in the segment.
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput) Words() GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse) []GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse {
		return v.Words
	}).(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseArrayOutput)
}

type GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseArrayOutput() GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseArrayOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse {
		return vs[0].([]GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse)[vs[1].(int)]
	}).(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput)
}

// Word-level info for words in a transcript.
type GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse struct {
	// A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
	Confidence float64 `pulumi:"confidence"`
	// Time offset of the end of this word relative to the beginning of the total conversation.
	EndOffset string `pulumi:"endOffset"`
	// Time offset of the start of this word relative to the beginning of the total conversation.
	StartOffset string `pulumi:"startOffset"`
	// The word itself. Includes punctuation marks that surround the word.
	Word string `pulumi:"word"`
}

// Word-level info for words in a transcript.
type GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutput() GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutput) ToGoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutput {
	return o
}

// A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutput) Confidence() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse) float64 {
		return v.Confidence
	}).(pulumi.Float64Output)
}

// Time offset of the end of this word relative to the beginning of the total conversation.
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutput) EndOffset() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse) string {
		return v.EndOffset
	}).(pulumi.StringOutput)
}

// Time offset of the start of this word relative to the beginning of the total conversation.
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutput) StartOffset() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse) string {
		return v.StartOffset
	}).(pulumi.StringOutput)
}

// The word itself. Includes punctuation marks that surround the word.
func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutput) Word() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse) string {
		return v.Word
	}).(pulumi.StringOutput)
}

type GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseArrayOutput() GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseArrayOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse {
		return vs[0].([]GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse)[vs[1].(int)]
	}).(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutput)
}

// The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.
type GoogleCloudContactcenterinsightsV1DialogflowIntentResponse struct {
	// The human-readable name of the intent.
	DisplayName string `pulumi:"displayName"`
}

// The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.
type GoogleCloudContactcenterinsightsV1DialogflowIntentResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1DialogflowIntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1DialogflowIntentResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1DialogflowIntentResponseOutput) ToGoogleCloudContactcenterinsightsV1DialogflowIntentResponseOutput() GoogleCloudContactcenterinsightsV1DialogflowIntentResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1DialogflowIntentResponseOutput) ToGoogleCloudContactcenterinsightsV1DialogflowIntentResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1DialogflowIntentResponseOutput {
	return o
}

// The human-readable name of the intent.
func (o GoogleCloudContactcenterinsightsV1DialogflowIntentResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1DialogflowIntentResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Dialogflow interaction data.
type GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponse struct {
	// The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
	Confidence float64 `pulumi:"confidence"`
	// The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}
	DialogflowIntentId string `pulumi:"dialogflowIntentId"`
}

// Dialogflow interaction data.
type GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponseOutput) ToGoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponseOutput() GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponseOutput) ToGoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponseOutput {
	return o
}

// The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
func (o GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponseOutput) Confidence() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponse) float64 {
		return v.Confidence
	}).(pulumi.Float64Output)
}

// The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}
func (o GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponseOutput) DialogflowIntentId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponse) string {
		return v.DialogflowIntentId
	}).(pulumi.StringOutput)
}

// A Dialogflow source of conversation data.
type GoogleCloudContactcenterinsightsV1DialogflowSource struct {
	// Cloud Storage URI that points to a file that contains the conversation audio.
	AudioUri *string `pulumi:"audioUri"`
}

// GoogleCloudContactcenterinsightsV1DialogflowSourceInput is an input type that accepts GoogleCloudContactcenterinsightsV1DialogflowSourceArgs and GoogleCloudContactcenterinsightsV1DialogflowSourceOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1DialogflowSourceInput` via:
//
//	GoogleCloudContactcenterinsightsV1DialogflowSourceArgs{...}
type GoogleCloudContactcenterinsightsV1DialogflowSourceInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1DialogflowSourceOutput() GoogleCloudContactcenterinsightsV1DialogflowSourceOutput
	ToGoogleCloudContactcenterinsightsV1DialogflowSourceOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1DialogflowSourceOutput
}

// A Dialogflow source of conversation data.
type GoogleCloudContactcenterinsightsV1DialogflowSourceArgs struct {
	// Cloud Storage URI that points to a file that contains the conversation audio.
	AudioUri pulumi.StringPtrInput `pulumi:"audioUri"`
}

func (GoogleCloudContactcenterinsightsV1DialogflowSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1DialogflowSource)(nil)).Elem()
}

func (i GoogleCloudContactcenterinsightsV1DialogflowSourceArgs) ToGoogleCloudContactcenterinsightsV1DialogflowSourceOutput() GoogleCloudContactcenterinsightsV1DialogflowSourceOutput {
	return i.ToGoogleCloudContactcenterinsightsV1DialogflowSourceOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1DialogflowSourceArgs) ToGoogleCloudContactcenterinsightsV1DialogflowSourceOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1DialogflowSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1DialogflowSourceOutput)
}

func (i GoogleCloudContactcenterinsightsV1DialogflowSourceArgs) ToGoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput() GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1DialogflowSourceArgs) ToGoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1DialogflowSourceOutput).ToGoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutputWithContext(ctx)
}

// GoogleCloudContactcenterinsightsV1DialogflowSourcePtrInput is an input type that accepts GoogleCloudContactcenterinsightsV1DialogflowSourceArgs, GoogleCloudContactcenterinsightsV1DialogflowSourcePtr and GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1DialogflowSourcePtrInput` via:
//
//	        GoogleCloudContactcenterinsightsV1DialogflowSourceArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudContactcenterinsightsV1DialogflowSourcePtrInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput() GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput
	ToGoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput
}

type googleCloudContactcenterinsightsV1DialogflowSourcePtrType GoogleCloudContactcenterinsightsV1DialogflowSourceArgs

func GoogleCloudContactcenterinsightsV1DialogflowSourcePtr(v *GoogleCloudContactcenterinsightsV1DialogflowSourceArgs) GoogleCloudContactcenterinsightsV1DialogflowSourcePtrInput {
	return (*googleCloudContactcenterinsightsV1DialogflowSourcePtrType)(v)
}

func (*googleCloudContactcenterinsightsV1DialogflowSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1DialogflowSource)(nil)).Elem()
}

func (i *googleCloudContactcenterinsightsV1DialogflowSourcePtrType) ToGoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput() GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutputWithContext(context.Background())
}

func (i *googleCloudContactcenterinsightsV1DialogflowSourcePtrType) ToGoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput)
}

// A Dialogflow source of conversation data.
type GoogleCloudContactcenterinsightsV1DialogflowSourceOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1DialogflowSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1DialogflowSource)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1DialogflowSourceOutput) ToGoogleCloudContactcenterinsightsV1DialogflowSourceOutput() GoogleCloudContactcenterinsightsV1DialogflowSourceOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1DialogflowSourceOutput) ToGoogleCloudContactcenterinsightsV1DialogflowSourceOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1DialogflowSourceOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1DialogflowSourceOutput) ToGoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput() GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput {
	return o.ToGoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutputWithContext(context.Background())
}

func (o GoogleCloudContactcenterinsightsV1DialogflowSourceOutput) ToGoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudContactcenterinsightsV1DialogflowSource) *GoogleCloudContactcenterinsightsV1DialogflowSource {
		return &v
	}).(GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput)
}

// Cloud Storage URI that points to a file that contains the conversation audio.
func (o GoogleCloudContactcenterinsightsV1DialogflowSourceOutput) AudioUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1DialogflowSource) *string { return v.AudioUri }).(pulumi.StringPtrOutput)
}

type GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1DialogflowSource)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput) ToGoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput() GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput) ToGoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput) Elem() GoogleCloudContactcenterinsightsV1DialogflowSourceOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1DialogflowSource) GoogleCloudContactcenterinsightsV1DialogflowSource {
		if v != nil {
			return *v
		}
		var ret GoogleCloudContactcenterinsightsV1DialogflowSource
		return ret
	}).(GoogleCloudContactcenterinsightsV1DialogflowSourceOutput)
}

// Cloud Storage URI that points to a file that contains the conversation audio.
func (o GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput) AudioUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1DialogflowSource) *string {
		if v == nil {
			return nil
		}
		return v.AudioUri
	}).(pulumi.StringPtrOutput)
}

// A Dialogflow source of conversation data.
type GoogleCloudContactcenterinsightsV1DialogflowSourceResponse struct {
	// Cloud Storage URI that points to a file that contains the conversation audio.
	AudioUri string `pulumi:"audioUri"`
	// The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}
	DialogflowConversation string `pulumi:"dialogflowConversation"`
}

// A Dialogflow source of conversation data.
type GoogleCloudContactcenterinsightsV1DialogflowSourceResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1DialogflowSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1DialogflowSourceResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1DialogflowSourceResponseOutput) ToGoogleCloudContactcenterinsightsV1DialogflowSourceResponseOutput() GoogleCloudContactcenterinsightsV1DialogflowSourceResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1DialogflowSourceResponseOutput) ToGoogleCloudContactcenterinsightsV1DialogflowSourceResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1DialogflowSourceResponseOutput {
	return o
}

// Cloud Storage URI that points to a file that contains the conversation audio.
func (o GoogleCloudContactcenterinsightsV1DialogflowSourceResponseOutput) AudioUri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1DialogflowSourceResponse) string { return v.AudioUri }).(pulumi.StringOutput)
}

// The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}
func (o GoogleCloudContactcenterinsightsV1DialogflowSourceResponseOutput) DialogflowConversation() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1DialogflowSourceResponse) string {
		return v.DialogflowConversation
	}).(pulumi.StringOutput)
}

// The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
type GoogleCloudContactcenterinsightsV1EntityMentionDataResponse struct {
	// The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
	EntityUniqueId string `pulumi:"entityUniqueId"`
	// Sentiment expressed for this mention of the entity.
	Sentiment GoogleCloudContactcenterinsightsV1SentimentDataResponse `pulumi:"sentiment"`
	// The type of the entity mention.
	Type string `pulumi:"type"`
}

// The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
type GoogleCloudContactcenterinsightsV1EntityMentionDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1EntityMentionDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1EntityMentionDataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1EntityMentionDataResponseOutput) ToGoogleCloudContactcenterinsightsV1EntityMentionDataResponseOutput() GoogleCloudContactcenterinsightsV1EntityMentionDataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1EntityMentionDataResponseOutput) ToGoogleCloudContactcenterinsightsV1EntityMentionDataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1EntityMentionDataResponseOutput {
	return o
}

// The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
func (o GoogleCloudContactcenterinsightsV1EntityMentionDataResponseOutput) EntityUniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1EntityMentionDataResponse) string { return v.EntityUniqueId }).(pulumi.StringOutput)
}

// Sentiment expressed for this mention of the entity.
func (o GoogleCloudContactcenterinsightsV1EntityMentionDataResponseOutput) Sentiment() GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1EntityMentionDataResponse) GoogleCloudContactcenterinsightsV1SentimentDataResponse {
		return v.Sentiment
	}).(GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput)
}

// The type of the entity mention.
func (o GoogleCloudContactcenterinsightsV1EntityMentionDataResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1EntityMentionDataResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.
type GoogleCloudContactcenterinsightsV1EntityResponse struct {
	// The representative name for the entity.
	DisplayName string `pulumi:"displayName"`
	// Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.
	Metadata map[string]string `pulumi:"metadata"`
	// The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.
	Salience float64 `pulumi:"salience"`
	// The aggregate sentiment expressed for this entity in the conversation.
	Sentiment GoogleCloudContactcenterinsightsV1SentimentDataResponse `pulumi:"sentiment"`
	// The entity type.
	Type string `pulumi:"type"`
}

// The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.
type GoogleCloudContactcenterinsightsV1EntityResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1EntityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1EntityResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1EntityResponseOutput) ToGoogleCloudContactcenterinsightsV1EntityResponseOutput() GoogleCloudContactcenterinsightsV1EntityResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1EntityResponseOutput) ToGoogleCloudContactcenterinsightsV1EntityResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1EntityResponseOutput {
	return o
}

// The representative name for the entity.
func (o GoogleCloudContactcenterinsightsV1EntityResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1EntityResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.
func (o GoogleCloudContactcenterinsightsV1EntityResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1EntityResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.
func (o GoogleCloudContactcenterinsightsV1EntityResponseOutput) Salience() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1EntityResponse) float64 { return v.Salience }).(pulumi.Float64Output)
}

// The aggregate sentiment expressed for this entity in the conversation.
func (o GoogleCloudContactcenterinsightsV1EntityResponseOutput) Sentiment() GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1EntityResponse) GoogleCloudContactcenterinsightsV1SentimentDataResponse {
		return v.Sentiment
	}).(GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput)
}

// The entity type.
func (o GoogleCloudContactcenterinsightsV1EntityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1EntityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Exact match configuration.
type GoogleCloudContactcenterinsightsV1ExactMatchConfig struct {
	// Whether to consider case sensitivity when performing an exact match.
	CaseSensitive *bool `pulumi:"caseSensitive"`
}

// GoogleCloudContactcenterinsightsV1ExactMatchConfigInput is an input type that accepts GoogleCloudContactcenterinsightsV1ExactMatchConfigArgs and GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1ExactMatchConfigInput` via:
//
//	GoogleCloudContactcenterinsightsV1ExactMatchConfigArgs{...}
type GoogleCloudContactcenterinsightsV1ExactMatchConfigInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1ExactMatchConfigOutput() GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput
	ToGoogleCloudContactcenterinsightsV1ExactMatchConfigOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput
}

// Exact match configuration.
type GoogleCloudContactcenterinsightsV1ExactMatchConfigArgs struct {
	// Whether to consider case sensitivity when performing an exact match.
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
}

func (GoogleCloudContactcenterinsightsV1ExactMatchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ExactMatchConfig)(nil)).Elem()
}

func (i GoogleCloudContactcenterinsightsV1ExactMatchConfigArgs) ToGoogleCloudContactcenterinsightsV1ExactMatchConfigOutput() GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput {
	return i.ToGoogleCloudContactcenterinsightsV1ExactMatchConfigOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1ExactMatchConfigArgs) ToGoogleCloudContactcenterinsightsV1ExactMatchConfigOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput)
}

func (i GoogleCloudContactcenterinsightsV1ExactMatchConfigArgs) ToGoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput() GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1ExactMatchConfigArgs) ToGoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput).ToGoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutputWithContext(ctx)
}

// GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrInput is an input type that accepts GoogleCloudContactcenterinsightsV1ExactMatchConfigArgs, GoogleCloudContactcenterinsightsV1ExactMatchConfigPtr and GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrInput` via:
//
//	        GoogleCloudContactcenterinsightsV1ExactMatchConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput() GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput
	ToGoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput
}

type googleCloudContactcenterinsightsV1ExactMatchConfigPtrType GoogleCloudContactcenterinsightsV1ExactMatchConfigArgs

func GoogleCloudContactcenterinsightsV1ExactMatchConfigPtr(v *GoogleCloudContactcenterinsightsV1ExactMatchConfigArgs) GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrInput {
	return (*googleCloudContactcenterinsightsV1ExactMatchConfigPtrType)(v)
}

func (*googleCloudContactcenterinsightsV1ExactMatchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1ExactMatchConfig)(nil)).Elem()
}

func (i *googleCloudContactcenterinsightsV1ExactMatchConfigPtrType) ToGoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput() GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudContactcenterinsightsV1ExactMatchConfigPtrType) ToGoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput)
}

// Exact match configuration.
type GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ExactMatchConfig)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput) ToGoogleCloudContactcenterinsightsV1ExactMatchConfigOutput() GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput) ToGoogleCloudContactcenterinsightsV1ExactMatchConfigOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput) ToGoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput() GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput {
	return o.ToGoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput) ToGoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudContactcenterinsightsV1ExactMatchConfig) *GoogleCloudContactcenterinsightsV1ExactMatchConfig {
		return &v
	}).(GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput)
}

// Whether to consider case sensitivity when performing an exact match.
func (o GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ExactMatchConfig) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

type GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1ExactMatchConfig)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput) ToGoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput() GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput) ToGoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput) Elem() GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1ExactMatchConfig) GoogleCloudContactcenterinsightsV1ExactMatchConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudContactcenterinsightsV1ExactMatchConfig
		return ret
	}).(GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput)
}

// Whether to consider case sensitivity when performing an exact match.
func (o GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1ExactMatchConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

// Exact match configuration.
type GoogleCloudContactcenterinsightsV1ExactMatchConfigResponse struct {
	// Whether to consider case sensitivity when performing an exact match.
	CaseSensitive bool `pulumi:"caseSensitive"`
}

// Exact match configuration.
type GoogleCloudContactcenterinsightsV1ExactMatchConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1ExactMatchConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ExactMatchConfigResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1ExactMatchConfigResponseOutput) ToGoogleCloudContactcenterinsightsV1ExactMatchConfigResponseOutput() GoogleCloudContactcenterinsightsV1ExactMatchConfigResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1ExactMatchConfigResponseOutput) ToGoogleCloudContactcenterinsightsV1ExactMatchConfigResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1ExactMatchConfigResponseOutput {
	return o
}

// Whether to consider case sensitivity when performing an exact match.
func (o GoogleCloudContactcenterinsightsV1ExactMatchConfigResponseOutput) CaseSensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1ExactMatchConfigResponse) bool { return v.CaseSensitive }).(pulumi.BoolOutput)
}

// Agent Assist frequently-asked-question answer data.
type GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse struct {
	// The piece of text from the `source` knowledge base document.
	Answer string `pulumi:"answer"`
	// The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
	ConfidenceScore float64 `pulumi:"confidenceScore"`
	// Map that contains metadata about the FAQ answer and the document that it originates from.
	Metadata map[string]string `pulumi:"metadata"`
	// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
	QueryRecord string `pulumi:"queryRecord"`
	// The corresponding FAQ question.
	Question string `pulumi:"question"`
	// The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
	Source string `pulumi:"source"`
}

// Agent Assist frequently-asked-question answer data.
type GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput) ToGoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput() GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput) ToGoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput {
	return o
}

// The piece of text from the `source` knowledge base document.
func (o GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput) Answer() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse) string { return v.Answer }).(pulumi.StringOutput)
}

// The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
func (o GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput) ConfidenceScore() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse) float64 { return v.ConfidenceScore }).(pulumi.Float64Output)
}

// Map that contains metadata about the FAQ answer and the document that it originates from.
func (o GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
func (o GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput) QueryRecord() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse) string { return v.QueryRecord }).(pulumi.StringOutput)
}

// The corresponding FAQ question.
func (o GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput) Question() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse) string { return v.Question }).(pulumi.StringOutput)
}

// The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
func (o GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse) string { return v.Source }).(pulumi.StringOutput)
}

// A Cloud Storage source of conversation data.
type GoogleCloudContactcenterinsightsV1GcsSource struct {
	// Cloud Storage URI that points to a file that contains the conversation audio.
	AudioUri *string `pulumi:"audioUri"`
	// Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
	TranscriptUri *string `pulumi:"transcriptUri"`
}

// GoogleCloudContactcenterinsightsV1GcsSourceInput is an input type that accepts GoogleCloudContactcenterinsightsV1GcsSourceArgs and GoogleCloudContactcenterinsightsV1GcsSourceOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1GcsSourceInput` via:
//
//	GoogleCloudContactcenterinsightsV1GcsSourceArgs{...}
type GoogleCloudContactcenterinsightsV1GcsSourceInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1GcsSourceOutput() GoogleCloudContactcenterinsightsV1GcsSourceOutput
	ToGoogleCloudContactcenterinsightsV1GcsSourceOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1GcsSourceOutput
}

// A Cloud Storage source of conversation data.
type GoogleCloudContactcenterinsightsV1GcsSourceArgs struct {
	// Cloud Storage URI that points to a file that contains the conversation audio.
	AudioUri pulumi.StringPtrInput `pulumi:"audioUri"`
	// Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
	TranscriptUri pulumi.StringPtrInput `pulumi:"transcriptUri"`
}

func (GoogleCloudContactcenterinsightsV1GcsSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1GcsSource)(nil)).Elem()
}

func (i GoogleCloudContactcenterinsightsV1GcsSourceArgs) ToGoogleCloudContactcenterinsightsV1GcsSourceOutput() GoogleCloudContactcenterinsightsV1GcsSourceOutput {
	return i.ToGoogleCloudContactcenterinsightsV1GcsSourceOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1GcsSourceArgs) ToGoogleCloudContactcenterinsightsV1GcsSourceOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1GcsSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1GcsSourceOutput)
}

func (i GoogleCloudContactcenterinsightsV1GcsSourceArgs) ToGoogleCloudContactcenterinsightsV1GcsSourcePtrOutput() GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1GcsSourcePtrOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1GcsSourceArgs) ToGoogleCloudContactcenterinsightsV1GcsSourcePtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1GcsSourceOutput).ToGoogleCloudContactcenterinsightsV1GcsSourcePtrOutputWithContext(ctx)
}

// GoogleCloudContactcenterinsightsV1GcsSourcePtrInput is an input type that accepts GoogleCloudContactcenterinsightsV1GcsSourceArgs, GoogleCloudContactcenterinsightsV1GcsSourcePtr and GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1GcsSourcePtrInput` via:
//
//	        GoogleCloudContactcenterinsightsV1GcsSourceArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudContactcenterinsightsV1GcsSourcePtrInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1GcsSourcePtrOutput() GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput
	ToGoogleCloudContactcenterinsightsV1GcsSourcePtrOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput
}

type googleCloudContactcenterinsightsV1GcsSourcePtrType GoogleCloudContactcenterinsightsV1GcsSourceArgs

func GoogleCloudContactcenterinsightsV1GcsSourcePtr(v *GoogleCloudContactcenterinsightsV1GcsSourceArgs) GoogleCloudContactcenterinsightsV1GcsSourcePtrInput {
	return (*googleCloudContactcenterinsightsV1GcsSourcePtrType)(v)
}

func (*googleCloudContactcenterinsightsV1GcsSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1GcsSource)(nil)).Elem()
}

func (i *googleCloudContactcenterinsightsV1GcsSourcePtrType) ToGoogleCloudContactcenterinsightsV1GcsSourcePtrOutput() GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1GcsSourcePtrOutputWithContext(context.Background())
}

func (i *googleCloudContactcenterinsightsV1GcsSourcePtrType) ToGoogleCloudContactcenterinsightsV1GcsSourcePtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput)
}

// A Cloud Storage source of conversation data.
type GoogleCloudContactcenterinsightsV1GcsSourceOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1GcsSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1GcsSource)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1GcsSourceOutput) ToGoogleCloudContactcenterinsightsV1GcsSourceOutput() GoogleCloudContactcenterinsightsV1GcsSourceOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1GcsSourceOutput) ToGoogleCloudContactcenterinsightsV1GcsSourceOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1GcsSourceOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1GcsSourceOutput) ToGoogleCloudContactcenterinsightsV1GcsSourcePtrOutput() GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput {
	return o.ToGoogleCloudContactcenterinsightsV1GcsSourcePtrOutputWithContext(context.Background())
}

func (o GoogleCloudContactcenterinsightsV1GcsSourceOutput) ToGoogleCloudContactcenterinsightsV1GcsSourcePtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudContactcenterinsightsV1GcsSource) *GoogleCloudContactcenterinsightsV1GcsSource {
		return &v
	}).(GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput)
}

// Cloud Storage URI that points to a file that contains the conversation audio.
func (o GoogleCloudContactcenterinsightsV1GcsSourceOutput) AudioUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1GcsSource) *string { return v.AudioUri }).(pulumi.StringPtrOutput)
}

// Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
func (o GoogleCloudContactcenterinsightsV1GcsSourceOutput) TranscriptUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1GcsSource) *string { return v.TranscriptUri }).(pulumi.StringPtrOutput)
}

type GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1GcsSource)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput) ToGoogleCloudContactcenterinsightsV1GcsSourcePtrOutput() GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput) ToGoogleCloudContactcenterinsightsV1GcsSourcePtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput) Elem() GoogleCloudContactcenterinsightsV1GcsSourceOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1GcsSource) GoogleCloudContactcenterinsightsV1GcsSource {
		if v != nil {
			return *v
		}
		var ret GoogleCloudContactcenterinsightsV1GcsSource
		return ret
	}).(GoogleCloudContactcenterinsightsV1GcsSourceOutput)
}

// Cloud Storage URI that points to a file that contains the conversation audio.
func (o GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput) AudioUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1GcsSource) *string {
		if v == nil {
			return nil
		}
		return v.AudioUri
	}).(pulumi.StringPtrOutput)
}

// Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
func (o GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput) TranscriptUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1GcsSource) *string {
		if v == nil {
			return nil
		}
		return v.TranscriptUri
	}).(pulumi.StringPtrOutput)
}

// A Cloud Storage source of conversation data.
type GoogleCloudContactcenterinsightsV1GcsSourceResponse struct {
	// Cloud Storage URI that points to a file that contains the conversation audio.
	AudioUri string `pulumi:"audioUri"`
	// Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
	TranscriptUri string `pulumi:"transcriptUri"`
}

// A Cloud Storage source of conversation data.
type GoogleCloudContactcenterinsightsV1GcsSourceResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1GcsSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1GcsSourceResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1GcsSourceResponseOutput) ToGoogleCloudContactcenterinsightsV1GcsSourceResponseOutput() GoogleCloudContactcenterinsightsV1GcsSourceResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1GcsSourceResponseOutput) ToGoogleCloudContactcenterinsightsV1GcsSourceResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1GcsSourceResponseOutput {
	return o
}

// Cloud Storage URI that points to a file that contains the conversation audio.
func (o GoogleCloudContactcenterinsightsV1GcsSourceResponseOutput) AudioUri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1GcsSourceResponse) string { return v.AudioUri }).(pulumi.StringOutput)
}

// Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
func (o GoogleCloudContactcenterinsightsV1GcsSourceResponseOutput) TranscriptUri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1GcsSourceResponse) string { return v.TranscriptUri }).(pulumi.StringOutput)
}

// The data for a hold annotation.
type GoogleCloudContactcenterinsightsV1HoldDataResponse struct {
}

// The data for a hold annotation.
type GoogleCloudContactcenterinsightsV1HoldDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1HoldDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1HoldDataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1HoldDataResponseOutput) ToGoogleCloudContactcenterinsightsV1HoldDataResponseOutput() GoogleCloudContactcenterinsightsV1HoldDataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1HoldDataResponseOutput) ToGoogleCloudContactcenterinsightsV1HoldDataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1HoldDataResponseOutput {
	return o
}

// The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.
type GoogleCloudContactcenterinsightsV1IntentMatchDataResponse struct {
	// The id of the matched intent. Can be used to retrieve the corresponding intent information.
	IntentUniqueId string `pulumi:"intentUniqueId"`
}

// The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.
type GoogleCloudContactcenterinsightsV1IntentMatchDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1IntentMatchDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1IntentMatchDataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1IntentMatchDataResponseOutput) ToGoogleCloudContactcenterinsightsV1IntentMatchDataResponseOutput() GoogleCloudContactcenterinsightsV1IntentMatchDataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1IntentMatchDataResponseOutput) ToGoogleCloudContactcenterinsightsV1IntentMatchDataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IntentMatchDataResponseOutput {
	return o
}

// The id of the matched intent. Can be used to retrieve the corresponding intent information.
func (o GoogleCloudContactcenterinsightsV1IntentMatchDataResponseOutput) IntentUniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IntentMatchDataResponse) string { return v.IntentUniqueId }).(pulumi.StringOutput)
}

// The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.
type GoogleCloudContactcenterinsightsV1IntentResponse struct {
	// The human-readable name of the intent.
	DisplayName string `pulumi:"displayName"`
}

// The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.
type GoogleCloudContactcenterinsightsV1IntentResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1IntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1IntentResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1IntentResponseOutput) ToGoogleCloudContactcenterinsightsV1IntentResponseOutput() GoogleCloudContactcenterinsightsV1IntentResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1IntentResponseOutput) ToGoogleCloudContactcenterinsightsV1IntentResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IntentResponseOutput {
	return o
}

// The human-readable name of the intent.
func (o GoogleCloudContactcenterinsightsV1IntentResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IntentResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The data for an interruption annotation.
type GoogleCloudContactcenterinsightsV1InterruptionDataResponse struct {
}

// The data for an interruption annotation.
type GoogleCloudContactcenterinsightsV1InterruptionDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1InterruptionDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1InterruptionDataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1InterruptionDataResponseOutput) ToGoogleCloudContactcenterinsightsV1InterruptionDataResponseOutput() GoogleCloudContactcenterinsightsV1InterruptionDataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1InterruptionDataResponseOutput) ToGoogleCloudContactcenterinsightsV1InterruptionDataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1InterruptionDataResponseOutput {
	return o
}

// Information about the issue.
type GoogleCloudContactcenterinsightsV1IssueAssignmentResponse struct {
	// Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
	DisplayName string `pulumi:"displayName"`
	// Resource name of the assigned issue.
	Issue string `pulumi:"issue"`
	// Score indicating the likelihood of the issue assignment. currently bounded on [0,1].
	Score float64 `pulumi:"score"`
}

// Information about the issue.
type GoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1IssueAssignmentResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput) ToGoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput() GoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput) ToGoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput {
	return o
}

// Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
func (o GoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueAssignmentResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Resource name of the assigned issue.
func (o GoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput) Issue() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueAssignmentResponse) string { return v.Issue }).(pulumi.StringOutput)
}

// Score indicating the likelihood of the issue assignment. currently bounded on [0,1].
func (o GoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput) Score() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueAssignmentResponse) float64 { return v.Score }).(pulumi.Float64Output)
}

type GoogleCloudContactcenterinsightsV1IssueAssignmentResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1IssueAssignmentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudContactcenterinsightsV1IssueAssignmentResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1IssueAssignmentResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1IssueAssignmentResponseArrayOutput() GoogleCloudContactcenterinsightsV1IssueAssignmentResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1IssueAssignmentResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1IssueAssignmentResponseArrayOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IssueAssignmentResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1IssueAssignmentResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudContactcenterinsightsV1IssueAssignmentResponse {
		return vs[0].([]GoogleCloudContactcenterinsightsV1IssueAssignmentResponse)[vs[1].(int)]
	}).(GoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput)
}

// The data for an issue match annotation.
type GoogleCloudContactcenterinsightsV1IssueMatchDataResponse struct {
	// Information about the issue's assignment.
	IssueAssignment GoogleCloudContactcenterinsightsV1IssueAssignmentResponse `pulumi:"issueAssignment"`
}

// The data for an issue match annotation.
type GoogleCloudContactcenterinsightsV1IssueMatchDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1IssueMatchDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1IssueMatchDataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1IssueMatchDataResponseOutput) ToGoogleCloudContactcenterinsightsV1IssueMatchDataResponseOutput() GoogleCloudContactcenterinsightsV1IssueMatchDataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1IssueMatchDataResponseOutput) ToGoogleCloudContactcenterinsightsV1IssueMatchDataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IssueMatchDataResponseOutput {
	return o
}

// Information about the issue's assignment.
func (o GoogleCloudContactcenterinsightsV1IssueMatchDataResponseOutput) IssueAssignment() GoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueMatchDataResponse) GoogleCloudContactcenterinsightsV1IssueAssignmentResponse {
		return v.IssueAssignment
	}).(GoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput)
}

// Configs for the input data used to create the issue model.
type GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig struct {
	// A filter to reduce the conversations used for training the model to a specific subset.
	Filter *string `pulumi:"filter"`
	// Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
	Medium *GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigMedium `pulumi:"medium"`
}

// GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigInput is an input type that accepts GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigArgs and GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigInput` via:
//
//	GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigArgs{...}
type GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput() GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput
	ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput
}

// Configs for the input data used to create the issue model.
type GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigArgs struct {
	// A filter to reduce the conversations used for training the model to a specific subset.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
	Medium GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigMediumPtrInput `pulumi:"medium"`
}

func (GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig)(nil)).Elem()
}

func (i GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigArgs) ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput() GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput {
	return i.ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigArgs) ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput)
}

func (i GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigArgs) ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput() GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigArgs) ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput).ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutputWithContext(ctx)
}

// GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrInput is an input type that accepts GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigArgs, GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtr and GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrInput` via:
//
//	        GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput() GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput
	ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput
}

type googleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrType GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigArgs

func GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtr(v *GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigArgs) GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrInput {
	return (*googleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrType)(v)
}

func (*googleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig)(nil)).Elem()
}

func (i *googleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrType) ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput() GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrType) ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput)
}

// Configs for the input data used to create the issue model.
type GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput) ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput() GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput) ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput) ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput() GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput {
	return o.ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput) ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig) *GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig {
		return &v
	}).(GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput)
}

// A filter to reduce the conversations used for training the model to a specific subset.
func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput) Medium() GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigMediumPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig) *GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigMedium {
		return v.Medium
	}).(GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigMediumPtrOutput)
}

type GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput) ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput() GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput) ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput) Elem() GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig) GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig
		return ret
	}).(GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput)
}

// A filter to reduce the conversations used for training the model to a specific subset.
func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig) *string {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(pulumi.StringPtrOutput)
}

// Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput) Medium() GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigMediumPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1IssueModelInputDataConfig) *GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigMedium {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigMediumPtrOutput)
}

// Configs for the input data used to create the issue model.
type GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse struct {
	// A filter to reduce the conversations used for training the model to a specific subset.
	Filter string `pulumi:"filter"`
	// Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
	Medium string `pulumi:"medium"`
	// Number of conversations used in training. Output only.
	TrainingConversationsCount string `pulumi:"trainingConversationsCount"`
}

// Configs for the input data used to create the issue model.
type GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponseOutput) ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponseOutput() GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponseOutput) ToGoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponseOutput {
	return o
}

// A filter to reduce the conversations used for training the model to a specific subset.
func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponseOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse) string { return v.Filter }).(pulumi.StringOutput)
}

// Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponseOutput) Medium() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse) string { return v.Medium }).(pulumi.StringOutput)
}

// Number of conversations used in training. Output only.
func (o GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponseOutput) TrainingConversationsCount() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse) string {
		return v.TrainingConversationsCount
	}).(pulumi.StringOutput)
}

// Aggregated statistics about an issue.
type GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponse struct {
	// Display name of the issue.
	DisplayName string `pulumi:"displayName"`
	// Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
	Issue string `pulumi:"issue"`
	// Number of conversations attached to the issue at this point in time.
	LabeledConversationsCount string `pulumi:"labeledConversationsCount"`
}

// Aggregated statistics about an issue.
type GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponseOutput) ToGoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponseOutput() GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponseOutput) ToGoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponseOutput {
	return o
}

// Display name of the issue.
func (o GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponse) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Issue resource. Format: projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
func (o GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponseOutput) Issue() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponse) string {
		return v.Issue
	}).(pulumi.StringOutput)
}

// Number of conversations attached to the issue at this point in time.
func (o GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponseOutput) LabeledConversationsCount() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponse) string {
		return v.LabeledConversationsCount
	}).(pulumi.StringOutput)
}

// Aggregated statistics about an issue model.
type GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponse struct {
	// Number of conversations the issue model has analyzed at this point in time.
	AnalyzedConversationsCount string `pulumi:"analyzedConversationsCount"`
	// Statistics on each issue. Key is the issue's resource name.
	IssueStats GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponse `pulumi:"issueStats"`
	// Number of analyzed conversations for which no issue was applicable at this point in time.
	UnclassifiedConversationsCount string `pulumi:"unclassifiedConversationsCount"`
}

// Aggregated statistics about an issue model.
type GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponseOutput) ToGoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponseOutput() GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponseOutput) ToGoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponseOutput {
	return o
}

// Number of conversations the issue model has analyzed at this point in time.
func (o GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponseOutput) AnalyzedConversationsCount() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponse) string {
		return v.AnalyzedConversationsCount
	}).(pulumi.StringOutput)
}

// Statistics on each issue. Key is the issue's resource name.
func (o GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponseOutput) IssueStats() GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponse) GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponse {
		return v.IssueStats
	}).(GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponseOutput)
}

// Number of analyzed conversations for which no issue was applicable at this point in time.
func (o GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponseOutput) UnclassifiedConversationsCount() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponse) string {
		return v.UnclassifiedConversationsCount
	}).(pulumi.StringOutput)
}

// Issue Modeling result on a conversation.
type GoogleCloudContactcenterinsightsV1IssueModelResultResponse struct {
	// Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}
	IssueModel string `pulumi:"issueModel"`
	// All the matched issues.
	Issues []GoogleCloudContactcenterinsightsV1IssueAssignmentResponse `pulumi:"issues"`
}

// Issue Modeling result on a conversation.
type GoogleCloudContactcenterinsightsV1IssueModelResultResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1IssueModelResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1IssueModelResultResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1IssueModelResultResponseOutput) ToGoogleCloudContactcenterinsightsV1IssueModelResultResponseOutput() GoogleCloudContactcenterinsightsV1IssueModelResultResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1IssueModelResultResponseOutput) ToGoogleCloudContactcenterinsightsV1IssueModelResultResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1IssueModelResultResponseOutput {
	return o
}

// Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}
func (o GoogleCloudContactcenterinsightsV1IssueModelResultResponseOutput) IssueModel() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueModelResultResponse) string { return v.IssueModel }).(pulumi.StringOutput)
}

// All the matched issues.
func (o GoogleCloudContactcenterinsightsV1IssueModelResultResponseOutput) Issues() GoogleCloudContactcenterinsightsV1IssueAssignmentResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1IssueModelResultResponse) []GoogleCloudContactcenterinsightsV1IssueAssignmentResponse {
		return v.Issues
	}).(GoogleCloudContactcenterinsightsV1IssueAssignmentResponseArrayOutput)
}

// The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
type GoogleCloudContactcenterinsightsV1PhraseMatchDataResponse struct {
	// The human-readable name of the phrase matcher.
	DisplayName string `pulumi:"displayName"`
	// The unique identifier (the resource name) of the phrase matcher.
	PhraseMatcher string `pulumi:"phraseMatcher"`
}

// The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
type GoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchDataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutput() GoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutput {
	return o
}

// The human-readable name of the phrase matcher.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1PhraseMatchDataResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The unique identifier (the resource name) of the phrase matcher.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutput) PhraseMatcher() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1PhraseMatchDataResponse) string { return v.PhraseMatcher }).(pulumi.StringOutput)
}

// The data for a phrase match rule.
type GoogleCloudContactcenterinsightsV1PhraseMatchRule struct {
	// Provides additional information about the rule that specifies how to apply the rule.
	Config *GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig `pulumi:"config"`
	// Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
	Negated *bool `pulumi:"negated"`
	// The phrase to be matched.
	Query string `pulumi:"query"`
}

// GoogleCloudContactcenterinsightsV1PhraseMatchRuleInput is an input type that accepts GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs and GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1PhraseMatchRuleInput` via:
//
//	GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs{...}
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput
	ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput
}

// The data for a phrase match rule.
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs struct {
	// Provides additional information about the rule that specifies how to apply the rule.
	Config GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrInput `pulumi:"config"`
	// Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
	Negated pulumi.BoolPtrInput `pulumi:"negated"`
	// The phrase to be matched.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRule)(nil)).Elem()
}

func (i GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput {
	return i.ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput)
}

// GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayInput is an input type that accepts GoogleCloudContactcenterinsightsV1PhraseMatchRuleArray and GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayInput` via:
//
//	GoogleCloudContactcenterinsightsV1PhraseMatchRuleArray{ GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs{...} }
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput
	ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput
}

type GoogleCloudContactcenterinsightsV1PhraseMatchRuleArray []GoogleCloudContactcenterinsightsV1PhraseMatchRuleInput

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudContactcenterinsightsV1PhraseMatchRule)(nil)).Elem()
}

func (i GoogleCloudContactcenterinsightsV1PhraseMatchRuleArray) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput {
	return i.ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1PhraseMatchRuleArray) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput)
}

// The data for a phrase match rule.
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRule)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput {
	return o
}

// Provides additional information about the rule that specifies how to apply the rule.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput) Config() GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1PhraseMatchRule) *GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig {
		return v.Config
	}).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput)
}

// Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput) Negated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1PhraseMatchRule) *bool { return v.Negated }).(pulumi.BoolPtrOutput)
}

// The phrase to be matched.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1PhraseMatchRule) string { return v.Query }).(pulumi.StringOutput)
}

type GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudContactcenterinsightsV1PhraseMatchRule)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput) Index(i pulumi.IntInput) GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudContactcenterinsightsV1PhraseMatchRule {
		return vs[0].([]GoogleCloudContactcenterinsightsV1PhraseMatchRule)[vs[1].(int)]
	}).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput)
}

// Configuration information of a phrase match rule.
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig struct {
	// The configuration for the exact match rule.
	ExactMatchConfig *GoogleCloudContactcenterinsightsV1ExactMatchConfig `pulumi:"exactMatchConfig"`
}

// GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigInput is an input type that accepts GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs and GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigInput` via:
//
//	GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs{...}
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput
	ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput
}

// Configuration information of a phrase match rule.
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs struct {
	// The configuration for the exact match rule.
	ExactMatchConfig GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrInput `pulumi:"exactMatchConfig"`
}

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig)(nil)).Elem()
}

func (i GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput {
	return i.ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput)
}

func (i GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput).ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutputWithContext(ctx)
}

// GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrInput is an input type that accepts GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs, GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtr and GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrInput` via:
//
//	        GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput
	ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput
}

type googleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrType GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs

func GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtr(v *GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs) GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrInput {
	return (*googleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrType)(v)
}

func (*googleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig)(nil)).Elem()
}

func (i *googleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrType) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput {
	return i.ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrType) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput)
}

// Configuration information of a phrase match rule.
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput {
	return o.ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig) *GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig {
		return &v
	}).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput)
}

// The configuration for the exact match rule.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput) ExactMatchConfig() GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig) *GoogleCloudContactcenterinsightsV1ExactMatchConfig {
		return v.ExactMatchConfig
	}).(GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput)
}

type GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput) Elem() GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig) GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig
		return ret
	}).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput)
}

// The configuration for the exact match rule.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput) ExactMatchConfig() GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput {
	return o.ApplyT(func(v *GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig) *GoogleCloudContactcenterinsightsV1ExactMatchConfig {
		if v == nil {
			return nil
		}
		return v.ExactMatchConfig
	}).(GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput)
}

// Configuration information of a phrase match rule.
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponse struct {
	// The configuration for the exact match rule.
	ExactMatchConfig GoogleCloudContactcenterinsightsV1ExactMatchConfigResponse `pulumi:"exactMatchConfig"`
}

// Configuration information of a phrase match rule.
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponseOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponseOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponseOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponseOutput {
	return o
}

// The configuration for the exact match rule.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponseOutput) ExactMatchConfig() GoogleCloudContactcenterinsightsV1ExactMatchConfigResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponse) GoogleCloudContactcenterinsightsV1ExactMatchConfigResponse {
		return v.ExactMatchConfig
	}).(GoogleCloudContactcenterinsightsV1ExactMatchConfigResponseOutput)
}

// A message representing a rule in the phrase matcher.
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup struct {
	// A list of phrase match rules that are included in this group.
	PhraseMatchRules []GoogleCloudContactcenterinsightsV1PhraseMatchRule `pulumi:"phraseMatchRules"`
	// The type of this phrase match rule group.
	Type GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupType `pulumi:"type"`
}

// GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupInput is an input type that accepts GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs and GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupInput` via:
//
//	GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs{...}
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput
	ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput
}

// A message representing a rule in the phrase matcher.
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs struct {
	// A list of phrase match rules that are included in this group.
	PhraseMatchRules GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayInput `pulumi:"phraseMatchRules"`
	// The type of this phrase match rule group.
	Type GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupTypeInput `pulumi:"type"`
}

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup)(nil)).Elem()
}

func (i GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput {
	return i.ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput)
}

// GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayInput is an input type that accepts GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArray and GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput values.
// You can construct a concrete instance of `GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayInput` via:
//
//	GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArray{ GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs{...} }
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayInput interface {
	pulumi.Input

	ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput
	ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutputWithContext(context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput
}

type GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArray []GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupInput

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup)(nil)).Elem()
}

func (i GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArray) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput {
	return i.ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutputWithContext(context.Background())
}

func (i GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArray) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput)
}

// A message representing a rule in the phrase matcher.
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput {
	return o
}

// A list of phrase match rules that are included in this group.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput) PhraseMatchRules() GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup) []GoogleCloudContactcenterinsightsV1PhraseMatchRule {
		return v.PhraseMatchRules
	}).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput)
}

// The type of this phrase match rule group.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput) Type() GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupTypeOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup) GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupType {
		return v.Type
	}).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupTypeOutput)
}

type GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput) Index(i pulumi.IntInput) GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup {
		return vs[0].([]GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup)[vs[1].(int)]
	}).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput)
}

// A message representing a rule in the phrase matcher.
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponse struct {
	// A list of phrase match rules that are included in this group.
	PhraseMatchRules []GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse `pulumi:"phraseMatchRules"`
	// The type of this phrase match rule group.
	Type string `pulumi:"type"`
}

// A message representing a rule in the phrase matcher.
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseOutput {
	return o
}

// A list of phrase match rules that are included in this group.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseOutput) PhraseMatchRules() GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponse) []GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse {
		return v.PhraseMatchRules
	}).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseArrayOutput)
}

// The type of this phrase match rule group.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseArrayOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseArrayOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponse {
		return vs[0].([]GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponse)[vs[1].(int)]
	}).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseOutput)
}

// The data for a phrase match rule.
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse struct {
	// Provides additional information about the rule that specifies how to apply the rule.
	Config GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponse `pulumi:"config"`
	// Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
	Negated bool `pulumi:"negated"`
	// The phrase to be matched.
	Query string `pulumi:"query"`
}

// The data for a phrase match rule.
type GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseOutput {
	return o
}

// Provides additional information about the rule that specifies how to apply the rule.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseOutput) Config() GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse) GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponse {
		return v.Config
	}).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponseOutput)
}

// Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseOutput) Negated() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse) bool { return v.Negated }).(pulumi.BoolOutput)
}

// The phrase to be matched.
func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse) string { return v.Query }).(pulumi.StringOutput)
}

type GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseArrayOutput() GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseArrayOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse {
		return vs[0].([]GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse)[vs[1].(int)]
	}).(GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseOutput)
}

// An annotation that was generated during the customer and agent interaction.
type GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse struct {
	// The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
	AnnotationId string `pulumi:"annotationId"`
	// The feedback that the customer has about the answer in `data`.
	AnswerFeedback GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse `pulumi:"answerFeedback"`
	// Agent Assist Article Suggestion data.
	ArticleSuggestion GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse `pulumi:"articleSuggestion"`
	// Conversation summarization suggestion data.
	ConversationSummarizationSuggestion GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponse `pulumi:"conversationSummarizationSuggestion"`
	// The time at which this annotation was created.
	CreateTime string `pulumi:"createTime"`
	// Dialogflow interaction data.
	DialogflowInteraction GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponse `pulumi:"dialogflowInteraction"`
	// The boundary in the conversation where the annotation ends, inclusive.
	EndBoundary GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse `pulumi:"endBoundary"`
	// Agent Assist FAQ answer data.
	FaqAnswer GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse `pulumi:"faqAnswer"`
	// Agent Assist Smart Compose suggestion data.
	SmartComposeSuggestion GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse `pulumi:"smartComposeSuggestion"`
	// Agent Assist Smart Reply data.
	SmartReply GoogleCloudContactcenterinsightsV1SmartReplyDataResponse `pulumi:"smartReply"`
	// The boundary in the conversation where the annotation starts, inclusive.
	StartBoundary GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse `pulumi:"startBoundary"`
}

// An annotation that was generated during the customer and agent interaction.
type GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput) ToGoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput() GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput) ToGoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput {
	return o
}

// The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput) AnnotationId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse) string { return v.AnnotationId }).(pulumi.StringOutput)
}

// The feedback that the customer has about the answer in `data`.
func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput) AnswerFeedback() GoogleCloudContactcenterinsightsV1AnswerFeedbackResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse) GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse {
		return v.AnswerFeedback
	}).(GoogleCloudContactcenterinsightsV1AnswerFeedbackResponseOutput)
}

// Agent Assist Article Suggestion data.
func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput) ArticleSuggestion() GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse) GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse {
		return v.ArticleSuggestion
	}).(GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput)
}

// Conversation summarization suggestion data.
func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput) ConversationSummarizationSuggestion() GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse) GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponse {
		return v.ConversationSummarizationSuggestion
	}).(GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput)
}

// The time at which this annotation was created.
func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Dialogflow interaction data.
func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput) DialogflowInteraction() GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse) GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponse {
		return v.DialogflowInteraction
	}).(GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponseOutput)
}

// The boundary in the conversation where the annotation ends, inclusive.
func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput) EndBoundary() GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse) GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse {
		return v.EndBoundary
	}).(GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput)
}

// Agent Assist FAQ answer data.
func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput) FaqAnswer() GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse) GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse {
		return v.FaqAnswer
	}).(GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput)
}

// Agent Assist Smart Compose suggestion data.
func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput) SmartComposeSuggestion() GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse) GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse {
		return v.SmartComposeSuggestion
	}).(GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutput)
}

// Agent Assist Smart Reply data.
func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput) SmartReply() GoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse) GoogleCloudContactcenterinsightsV1SmartReplyDataResponse {
		return v.SmartReply
	}).(GoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutput)
}

// The boundary in the conversation where the annotation starts, inclusive.
func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput) StartBoundary() GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse) GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse {
		return v.StartBoundary
	}).(GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput)
}

type GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput() GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput) ToGoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse {
		return vs[0].([]GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse)[vs[1].(int)]
	}).(GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput)
}

// The data for a sentiment annotation.
type GoogleCloudContactcenterinsightsV1SentimentDataResponse struct {
	// A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
	Magnitude float64 `pulumi:"magnitude"`
	// The sentiment score between -1.0 (negative) and 1.0 (positive).
	Score float64 `pulumi:"score"`
}

// The data for a sentiment annotation.
type GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1SentimentDataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput) ToGoogleCloudContactcenterinsightsV1SentimentDataResponseOutput() GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput) ToGoogleCloudContactcenterinsightsV1SentimentDataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput {
	return o
}

// A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
func (o GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput) Magnitude() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1SentimentDataResponse) float64 { return v.Magnitude }).(pulumi.Float64Output)
}

// The sentiment score between -1.0 (negative) and 1.0 (positive).
func (o GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput) Score() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1SentimentDataResponse) float64 { return v.Score }).(pulumi.Float64Output)
}

// The data for a silence annotation.
type GoogleCloudContactcenterinsightsV1SilenceDataResponse struct {
}

// The data for a silence annotation.
type GoogleCloudContactcenterinsightsV1SilenceDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1SilenceDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1SilenceDataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1SilenceDataResponseOutput) ToGoogleCloudContactcenterinsightsV1SilenceDataResponseOutput() GoogleCloudContactcenterinsightsV1SilenceDataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1SilenceDataResponseOutput) ToGoogleCloudContactcenterinsightsV1SilenceDataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1SilenceDataResponseOutput {
	return o
}

// Agent Assist Smart Compose suggestion data.
type GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse struct {
	// The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
	ConfidenceScore float64 `pulumi:"confidenceScore"`
	// Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
	Metadata map[string]string `pulumi:"metadata"`
	// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
	QueryRecord string `pulumi:"queryRecord"`
	// The content of the suggestion.
	Suggestion string `pulumi:"suggestion"`
}

// Agent Assist Smart Compose suggestion data.
type GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutput) ToGoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutput() GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutput) ToGoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutput {
	return o
}

// The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
func (o GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutput) ConfidenceScore() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse) float64 {
		return v.ConfidenceScore
	}).(pulumi.Float64Output)
}

// Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
func (o GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse) map[string]string {
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
func (o GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutput) QueryRecord() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse) string {
		return v.QueryRecord
	}).(pulumi.StringOutput)
}

// The content of the suggestion.
func (o GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutput) Suggestion() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse) string {
		return v.Suggestion
	}).(pulumi.StringOutput)
}

// Agent Assist Smart Reply data.
type GoogleCloudContactcenterinsightsV1SmartReplyDataResponse struct {
	// The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
	ConfidenceScore float64 `pulumi:"confidenceScore"`
	// Map that contains metadata about the Smart Reply and the document from which it originates.
	Metadata map[string]string `pulumi:"metadata"`
	// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
	QueryRecord string `pulumi:"queryRecord"`
	// The content of the reply.
	Reply string `pulumi:"reply"`
}

// Agent Assist Smart Reply data.
type GoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudContactcenterinsightsV1SmartReplyDataResponse)(nil)).Elem()
}

func (o GoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutput) ToGoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutput() GoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutput {
	return o
}

func (o GoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutput) ToGoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutputWithContext(ctx context.Context) GoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutput {
	return o
}

// The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
func (o GoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutput) ConfidenceScore() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1SmartReplyDataResponse) float64 { return v.ConfidenceScore }).(pulumi.Float64Output)
}

// Map that contains metadata about the Smart Reply and the document from which it originates.
func (o GoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1SmartReplyDataResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
func (o GoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutput) QueryRecord() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1SmartReplyDataResponse) string { return v.QueryRecord }).(pulumi.StringOutput)
}

// The content of the reply.
func (o GoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutput) Reply() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudContactcenterinsightsV1SmartReplyDataResponse) string { return v.Reply }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnnotatorSelectorInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationCallMetadataInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1ConversationCallMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1ConversationCallMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationDataSourceInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1ConversationDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1ConversationDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1DialogflowSourceInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1DialogflowSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1DialogflowSourcePtrInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1DialogflowSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ExactMatchConfigInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1ExactMatchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1ExactMatchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1GcsSourceInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1GcsSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1GcsSourcePtrInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1GcsSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRuleInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1PhraseMatchRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1PhraseMatchRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayInput)(nil)).Elem(), GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArray{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1AnalysisResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1AnalysisResultResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1AnnotatorSelectorOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1AnnotatorSelectorPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1AnnotatorSelectorResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1AnswerFeedbackResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1CallAnnotationResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1CallAnnotationResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationCallMetadataOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationCallMetadataPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationDataSourceOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationDataSourcePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationDataSourceResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationParticipantResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationTranscriptResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1DialogflowIntentResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1DialogflowSourceOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1DialogflowSourcePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1DialogflowSourceResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1EntityMentionDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1EntityResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ExactMatchConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ExactMatchConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1ExactMatchConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1FaqAnswerDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1GcsSourceOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1GcsSourcePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1GcsSourceResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1HoldDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1IntentMatchDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1IntentResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1InterruptionDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1IssueAssignmentResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1IssueAssignmentResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1IssueMatchDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStatsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1IssueModelResultResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1PhraseMatchDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1PhraseMatchRuleOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1PhraseMatchRuleArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1SentimentDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1SilenceDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudContactcenterinsightsV1SmartReplyDataResponseOutput{})
}
