// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The health status of the TPU node.
type NodeHealth string

const (
	// Health status is unknown: not initialized or failed to retrieve.
	NodeHealthHealthUnspecified = NodeHealth("HEALTH_UNSPECIFIED")
	// The resource is healthy.
	NodeHealthHealthy = NodeHealth("HEALTHY")
	// The resource is unhealthy.
	NodeHealthDeprecatedUnhealthy = NodeHealth("DEPRECATED_UNHEALTHY")
	// The resource is unresponsive.
	NodeHealthTimeout = NodeHealth("TIMEOUT")
	// The in-guest ML stack is unhealthy.
	NodeHealthUnhealthyTensorflow = NodeHealth("UNHEALTHY_TENSORFLOW")
	// The node is under maintenance/priority boost caused rescheduling and will resume running once rescheduled.
	NodeHealthUnhealthyMaintenance = NodeHealth("UNHEALTHY_MAINTENANCE")
)

func (NodeHealth) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeHealth)(nil)).Elem()
}

func (e NodeHealth) ToNodeHealthOutput() NodeHealthOutput {
	return pulumi.ToOutput(e).(NodeHealthOutput)
}

func (e NodeHealth) ToNodeHealthOutputWithContext(ctx context.Context) NodeHealthOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NodeHealthOutput)
}

func (e NodeHealth) ToNodeHealthPtrOutput() NodeHealthPtrOutput {
	return e.ToNodeHealthPtrOutputWithContext(context.Background())
}

func (e NodeHealth) ToNodeHealthPtrOutputWithContext(ctx context.Context) NodeHealthPtrOutput {
	return NodeHealth(e).ToNodeHealthOutputWithContext(ctx).ToNodeHealthPtrOutputWithContext(ctx)
}

func (e NodeHealth) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NodeHealth) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NodeHealth) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NodeHealth) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NodeHealthOutput struct{ *pulumi.OutputState }

func (NodeHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeHealth)(nil)).Elem()
}

func (o NodeHealthOutput) ToNodeHealthOutput() NodeHealthOutput {
	return o
}

func (o NodeHealthOutput) ToNodeHealthOutputWithContext(ctx context.Context) NodeHealthOutput {
	return o
}

func (o NodeHealthOutput) ToNodeHealthPtrOutput() NodeHealthPtrOutput {
	return o.ToNodeHealthPtrOutputWithContext(context.Background())
}

func (o NodeHealthOutput) ToNodeHealthPtrOutputWithContext(ctx context.Context) NodeHealthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeHealth) *NodeHealth {
		return &v
	}).(NodeHealthPtrOutput)
}

func (o NodeHealthOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NodeHealthOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NodeHealth) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NodeHealthOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NodeHealthOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NodeHealth) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NodeHealthPtrOutput struct{ *pulumi.OutputState }

func (NodeHealthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeHealth)(nil)).Elem()
}

func (o NodeHealthPtrOutput) ToNodeHealthPtrOutput() NodeHealthPtrOutput {
	return o
}

func (o NodeHealthPtrOutput) ToNodeHealthPtrOutputWithContext(ctx context.Context) NodeHealthPtrOutput {
	return o
}

func (o NodeHealthPtrOutput) Elem() NodeHealthOutput {
	return o.ApplyT(func(v *NodeHealth) NodeHealth {
		if v != nil {
			return *v
		}
		var ret NodeHealth
		return ret
	}).(NodeHealthOutput)
}

func (o NodeHealthPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NodeHealthPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NodeHealth) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NodeHealthInput is an input type that accepts values of the NodeHealth enum
// A concrete instance of `NodeHealthInput` can be one of the following:
//
//	NodeHealthHealthUnspecified
//	NodeHealthHealthy
//	NodeHealthDeprecatedUnhealthy
//	NodeHealthTimeout
//	NodeHealthUnhealthyTensorflow
//	NodeHealthUnhealthyMaintenance
type NodeHealthInput interface {
	pulumi.Input

	ToNodeHealthOutput() NodeHealthOutput
	ToNodeHealthOutputWithContext(context.Context) NodeHealthOutput
}

var nodeHealthPtrType = reflect.TypeOf((**NodeHealth)(nil)).Elem()

type NodeHealthPtrInput interface {
	pulumi.Input

	ToNodeHealthPtrOutput() NodeHealthPtrOutput
	ToNodeHealthPtrOutputWithContext(context.Context) NodeHealthPtrOutput
}

type nodeHealthPtr string

func NodeHealthPtr(v string) NodeHealthPtrInput {
	return (*nodeHealthPtr)(&v)
}

func (*nodeHealthPtr) ElementType() reflect.Type {
	return nodeHealthPtrType
}

func (in *nodeHealthPtr) ToNodeHealthPtrOutput() NodeHealthPtrOutput {
	return pulumi.ToOutput(in).(NodeHealthPtrOutput)
}

func (in *nodeHealthPtr) ToNodeHealthPtrOutputWithContext(ctx context.Context) NodeHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NodeHealthPtrOutput)
}

func (in *nodeHealthPtr) ToOutput(ctx context.Context) pulumix.Output[*NodeHealth] {
	return pulumix.Output[*NodeHealth]{
		OutputState: in.ToNodeHealthPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NodeHealthInput)(nil)).Elem(), NodeHealth("HEALTH_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NodeHealthPtrInput)(nil)).Elem(), NodeHealth("HEALTH_UNSPECIFIED"))
	pulumi.RegisterOutputType(NodeHealthOutput{})
	pulumi.RegisterOutputType(NodeHealthPtrOutput{})
}
