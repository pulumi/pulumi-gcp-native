// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a QueuedResource TPU instance.
// Auto-naming is currently not supported for this resource.
type QueuedResource struct {
	pulumi.CustomResourceState

	// The time when the QueuedResource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. The Guaranteed tier
	Guaranteed GuaranteedResponseOutput `pulumi:"guaranteed"`
	Location   pulumi.StringOutput      `pulumi:"location"`
	// Immutable. The name of the QueuedResource.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Optional. The unqualified resource name. Should follow the `^[A-Za-z0-9_.~+%-]+$` regex format.
	QueuedResourceId pulumi.StringPtrOutput `pulumi:"queuedResourceId"`
	// Optional. The queueing policy of the QueuedRequest.
	QueueingPolicy QueueingPolicyResponseOutput `pulumi:"queueingPolicy"`
	// Optional. Idempotent request UUID.
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Optional. Name of the reservation in which the resource should be provisioned. Format: projects/{project}/locations/{zone}/reservations/{reservation}
	ReservationName pulumi.StringOutput `pulumi:"reservationName"`
	// Optional. The Spot tier.
	Spot SpotResponseOutput `pulumi:"spot"`
	// State of the QueuedResource request.
	State QueuedResourceStateResponseOutput `pulumi:"state"`
	// Optional. Defines a TPU resource.
	Tpu TpuResponseOutput `pulumi:"tpu"`
}

// NewQueuedResource registers a new resource with the given unique name, arguments, and options.
func NewQueuedResource(ctx *pulumi.Context,
	name string, args *QueuedResourceArgs, opts ...pulumi.ResourceOption) (*QueuedResource, error) {
	if args == nil {
		args = &QueuedResourceArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource QueuedResource
	err := ctx.RegisterResource("google-native:tpu/v2:QueuedResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQueuedResource gets an existing QueuedResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQueuedResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QueuedResourceState, opts ...pulumi.ResourceOption) (*QueuedResource, error) {
	var resource QueuedResource
	err := ctx.ReadResource("google-native:tpu/v2:QueuedResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering QueuedResource resources.
type queuedResourceState struct {
}

type QueuedResourceState struct {
}

func (QueuedResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*queuedResourceState)(nil)).Elem()
}

type queuedResourceArgs struct {
	// Optional. The Guaranteed tier
	Guaranteed *Guaranteed `pulumi:"guaranteed"`
	Location   *string     `pulumi:"location"`
	Project    *string     `pulumi:"project"`
	// Optional. The unqualified resource name. Should follow the `^[A-Za-z0-9_.~+%-]+$` regex format.
	QueuedResourceId *string `pulumi:"queuedResourceId"`
	// Optional. The queueing policy of the QueuedRequest.
	QueueingPolicy *QueueingPolicy `pulumi:"queueingPolicy"`
	// Optional. Idempotent request UUID.
	RequestId *string `pulumi:"requestId"`
	// Optional. Name of the reservation in which the resource should be provisioned. Format: projects/{project}/locations/{zone}/reservations/{reservation}
	ReservationName *string `pulumi:"reservationName"`
	// Optional. The Spot tier.
	Spot *Spot `pulumi:"spot"`
	// Optional. Defines a TPU resource.
	Tpu *Tpu `pulumi:"tpu"`
}

// The set of arguments for constructing a QueuedResource resource.
type QueuedResourceArgs struct {
	// Optional. The Guaranteed tier
	Guaranteed GuaranteedPtrInput
	Location   pulumi.StringPtrInput
	Project    pulumi.StringPtrInput
	// Optional. The unqualified resource name. Should follow the `^[A-Za-z0-9_.~+%-]+$` regex format.
	QueuedResourceId pulumi.StringPtrInput
	// Optional. The queueing policy of the QueuedRequest.
	QueueingPolicy QueueingPolicyPtrInput
	// Optional. Idempotent request UUID.
	RequestId pulumi.StringPtrInput
	// Optional. Name of the reservation in which the resource should be provisioned. Format: projects/{project}/locations/{zone}/reservations/{reservation}
	ReservationName pulumi.StringPtrInput
	// Optional. The Spot tier.
	Spot SpotPtrInput
	// Optional. Defines a TPU resource.
	Tpu TpuPtrInput
}

func (QueuedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*queuedResourceArgs)(nil)).Elem()
}

type QueuedResourceInput interface {
	pulumi.Input

	ToQueuedResourceOutput() QueuedResourceOutput
	ToQueuedResourceOutputWithContext(ctx context.Context) QueuedResourceOutput
}

func (*QueuedResource) ElementType() reflect.Type {
	return reflect.TypeOf((**QueuedResource)(nil)).Elem()
}

func (i *QueuedResource) ToQueuedResourceOutput() QueuedResourceOutput {
	return i.ToQueuedResourceOutputWithContext(context.Background())
}

func (i *QueuedResource) ToQueuedResourceOutputWithContext(ctx context.Context) QueuedResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueuedResourceOutput)
}

type QueuedResourceOutput struct{ *pulumi.OutputState }

func (QueuedResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueuedResource)(nil)).Elem()
}

func (o QueuedResourceOutput) ToQueuedResourceOutput() QueuedResourceOutput {
	return o
}

func (o QueuedResourceOutput) ToQueuedResourceOutputWithContext(ctx context.Context) QueuedResourceOutput {
	return o
}

// The time when the QueuedResource was created.
func (o QueuedResourceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *QueuedResource) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. The Guaranteed tier
func (o QueuedResourceOutput) Guaranteed() GuaranteedResponseOutput {
	return o.ApplyT(func(v *QueuedResource) GuaranteedResponseOutput { return v.Guaranteed }).(GuaranteedResponseOutput)
}

func (o QueuedResourceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *QueuedResource) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Immutable. The name of the QueuedResource.
func (o QueuedResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *QueuedResource) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o QueuedResourceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *QueuedResource) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. The unqualified resource name. Should follow the `^[A-Za-z0-9_.~+%-]+$` regex format.
func (o QueuedResourceOutput) QueuedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueuedResource) pulumi.StringPtrOutput { return v.QueuedResourceId }).(pulumi.StringPtrOutput)
}

// Optional. The queueing policy of the QueuedRequest.
func (o QueuedResourceOutput) QueueingPolicy() QueueingPolicyResponseOutput {
	return o.ApplyT(func(v *QueuedResource) QueueingPolicyResponseOutput { return v.QueueingPolicy }).(QueueingPolicyResponseOutput)
}

// Optional. Idempotent request UUID.
func (o QueuedResourceOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueuedResource) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Optional. Name of the reservation in which the resource should be provisioned. Format: projects/{project}/locations/{zone}/reservations/{reservation}
func (o QueuedResourceOutput) ReservationName() pulumi.StringOutput {
	return o.ApplyT(func(v *QueuedResource) pulumi.StringOutput { return v.ReservationName }).(pulumi.StringOutput)
}

// Optional. The Spot tier.
func (o QueuedResourceOutput) Spot() SpotResponseOutput {
	return o.ApplyT(func(v *QueuedResource) SpotResponseOutput { return v.Spot }).(SpotResponseOutput)
}

// State of the QueuedResource request.
func (o QueuedResourceOutput) State() QueuedResourceStateResponseOutput {
	return o.ApplyT(func(v *QueuedResource) QueuedResourceStateResponseOutput { return v.State }).(QueuedResourceStateResponseOutput)
}

// Optional. Defines a TPU resource.
func (o QueuedResourceOutput) Tpu() TpuResponseOutput {
	return o.ApplyT(func(v *QueuedResource) TpuResponseOutput { return v.Tpu }).(TpuResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QueuedResourceInput)(nil)).Elem(), &QueuedResource{})
	pulumi.RegisterOutputType(QueuedResourceOutput{})
}
