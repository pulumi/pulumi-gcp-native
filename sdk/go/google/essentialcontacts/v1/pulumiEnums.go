// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ContactNotificationCategorySubscriptionsItem pulumi.String

const (
	// Notification category is unrecognized or unspecified.
	ContactNotificationCategorySubscriptionsItemNotificationCategoryUnspecified = ContactNotificationCategorySubscriptionsItem("NOTIFICATION_CATEGORY_UNSPECIFIED")
	// All notifications related to the resource, including notifications pertaining to categories added in the future.
	ContactNotificationCategorySubscriptionsItemAll = ContactNotificationCategorySubscriptionsItem("ALL")
	// Notifications related to imminent account suspension.
	ContactNotificationCategorySubscriptionsItemSuspension = ContactNotificationCategorySubscriptionsItem("SUSPENSION")
	// Notifications related to security/privacy incidents, notifications, and vulnerabilities.
	ContactNotificationCategorySubscriptionsItemSecurity = ContactNotificationCategorySubscriptionsItem("SECURITY")
	// Notifications related to technical events and issues such as outages, errors, or bugs.
	ContactNotificationCategorySubscriptionsItemTechnical = ContactNotificationCategorySubscriptionsItem("TECHNICAL")
	// Notifications related to billing and payments notifications, price updates, errors, or credits.
	ContactNotificationCategorySubscriptionsItemBilling = ContactNotificationCategorySubscriptionsItem("BILLING")
	// Notifications related to enforcement actions, regulatory compliance, or government notices.
	ContactNotificationCategorySubscriptionsItemLegal = ContactNotificationCategorySubscriptionsItem("LEGAL")
	// Notifications related to new versions, product terms updates, or deprecations.
	ContactNotificationCategorySubscriptionsItemProductUpdates = ContactNotificationCategorySubscriptionsItem("PRODUCT_UPDATES")
	// Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL.
	ContactNotificationCategorySubscriptionsItemTechnicalIncidents = ContactNotificationCategorySubscriptionsItem("TECHNICAL_INCIDENTS")
)

func (ContactNotificationCategorySubscriptionsItem) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ContactNotificationCategorySubscriptionsItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactNotificationCategorySubscriptionsItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactNotificationCategorySubscriptionsItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContactNotificationCategorySubscriptionsItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// ContactNotificationCategorySubscriptionsItemArrayInput is an input type that accepts ContactNotificationCategorySubscriptionsItemArray and ContactNotificationCategorySubscriptionsItemArrayOutput values.
// You can construct a concrete instance of `ContactNotificationCategorySubscriptionsItemArrayInput` via:
//
//          ContactNotificationCategorySubscriptionsItemArray{ ContactNotificationCategorySubscriptionsItemArgs{...} }
type ContactNotificationCategorySubscriptionsItemArrayInput interface {
	pulumi.Input

	ToContactNotificationCategorySubscriptionsItemArrayOutput() ContactNotificationCategorySubscriptionsItemArrayOutput
	ToContactNotificationCategorySubscriptionsItemArrayOutputWithContext(context.Context) ContactNotificationCategorySubscriptionsItemArrayOutput
}

type ContactNotificationCategorySubscriptionsItemArray []ContactNotificationCategorySubscriptionsItem

func (ContactNotificationCategorySubscriptionsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactNotificationCategorySubscriptionsItem)(nil)).Elem()
}

func (i ContactNotificationCategorySubscriptionsItemArray) ToContactNotificationCategorySubscriptionsItemArrayOutput() ContactNotificationCategorySubscriptionsItemArrayOutput {
	return i.ToContactNotificationCategorySubscriptionsItemArrayOutputWithContext(context.Background())
}

func (i ContactNotificationCategorySubscriptionsItemArray) ToContactNotificationCategorySubscriptionsItemArrayOutputWithContext(ctx context.Context) ContactNotificationCategorySubscriptionsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactNotificationCategorySubscriptionsItemArrayOutput)
}

type ContactNotificationCategorySubscriptionsItemArrayOutput struct{ *pulumi.OutputState }

func (ContactNotificationCategorySubscriptionsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactNotificationCategorySubscriptionsItem)(nil)).Elem()
}

func (o ContactNotificationCategorySubscriptionsItemArrayOutput) ToContactNotificationCategorySubscriptionsItemArrayOutput() ContactNotificationCategorySubscriptionsItemArrayOutput {
	return o
}

func (o ContactNotificationCategorySubscriptionsItemArrayOutput) ToContactNotificationCategorySubscriptionsItemArrayOutputWithContext(ctx context.Context) ContactNotificationCategorySubscriptionsItemArrayOutput {
	return o
}

func (o ContactNotificationCategorySubscriptionsItemArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]ContactNotificationCategorySubscriptionsItem)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}

// The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.
type ContactValidationState pulumi.String

const (
	// The validation state is unknown or unspecified.
	ContactValidationStateValidationStateUnspecified = ContactValidationState("VALIDATION_STATE_UNSPECIFIED")
	// The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.
	ContactValidationStateValid = ContactValidationState("VALID")
	// The contact is considered invalid. This may become the state if the contact's email is found to be unreachable.
	ContactValidationStateInvalid = ContactValidationState("INVALID")
)

func (ContactValidationState) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ContactValidationState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactValidationState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactValidationState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContactValidationState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FolderContactNotificationCategorySubscriptionsItem pulumi.String

const (
	// Notification category is unrecognized or unspecified.
	FolderContactNotificationCategorySubscriptionsItemNotificationCategoryUnspecified = FolderContactNotificationCategorySubscriptionsItem("NOTIFICATION_CATEGORY_UNSPECIFIED")
	// All notifications related to the resource, including notifications pertaining to categories added in the future.
	FolderContactNotificationCategorySubscriptionsItemAll = FolderContactNotificationCategorySubscriptionsItem("ALL")
	// Notifications related to imminent account suspension.
	FolderContactNotificationCategorySubscriptionsItemSuspension = FolderContactNotificationCategorySubscriptionsItem("SUSPENSION")
	// Notifications related to security/privacy incidents, notifications, and vulnerabilities.
	FolderContactNotificationCategorySubscriptionsItemSecurity = FolderContactNotificationCategorySubscriptionsItem("SECURITY")
	// Notifications related to technical events and issues such as outages, errors, or bugs.
	FolderContactNotificationCategorySubscriptionsItemTechnical = FolderContactNotificationCategorySubscriptionsItem("TECHNICAL")
	// Notifications related to billing and payments notifications, price updates, errors, or credits.
	FolderContactNotificationCategorySubscriptionsItemBilling = FolderContactNotificationCategorySubscriptionsItem("BILLING")
	// Notifications related to enforcement actions, regulatory compliance, or government notices.
	FolderContactNotificationCategorySubscriptionsItemLegal = FolderContactNotificationCategorySubscriptionsItem("LEGAL")
	// Notifications related to new versions, product terms updates, or deprecations.
	FolderContactNotificationCategorySubscriptionsItemProductUpdates = FolderContactNotificationCategorySubscriptionsItem("PRODUCT_UPDATES")
	// Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL.
	FolderContactNotificationCategorySubscriptionsItemTechnicalIncidents = FolderContactNotificationCategorySubscriptionsItem("TECHNICAL_INCIDENTS")
)

func (FolderContactNotificationCategorySubscriptionsItem) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e FolderContactNotificationCategorySubscriptionsItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FolderContactNotificationCategorySubscriptionsItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FolderContactNotificationCategorySubscriptionsItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FolderContactNotificationCategorySubscriptionsItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// FolderContactNotificationCategorySubscriptionsItemArrayInput is an input type that accepts FolderContactNotificationCategorySubscriptionsItemArray and FolderContactNotificationCategorySubscriptionsItemArrayOutput values.
// You can construct a concrete instance of `FolderContactNotificationCategorySubscriptionsItemArrayInput` via:
//
//          FolderContactNotificationCategorySubscriptionsItemArray{ FolderContactNotificationCategorySubscriptionsItemArgs{...} }
type FolderContactNotificationCategorySubscriptionsItemArrayInput interface {
	pulumi.Input

	ToFolderContactNotificationCategorySubscriptionsItemArrayOutput() FolderContactNotificationCategorySubscriptionsItemArrayOutput
	ToFolderContactNotificationCategorySubscriptionsItemArrayOutputWithContext(context.Context) FolderContactNotificationCategorySubscriptionsItemArrayOutput
}

type FolderContactNotificationCategorySubscriptionsItemArray []FolderContactNotificationCategorySubscriptionsItem

func (FolderContactNotificationCategorySubscriptionsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FolderContactNotificationCategorySubscriptionsItem)(nil)).Elem()
}

func (i FolderContactNotificationCategorySubscriptionsItemArray) ToFolderContactNotificationCategorySubscriptionsItemArrayOutput() FolderContactNotificationCategorySubscriptionsItemArrayOutput {
	return i.ToFolderContactNotificationCategorySubscriptionsItemArrayOutputWithContext(context.Background())
}

func (i FolderContactNotificationCategorySubscriptionsItemArray) ToFolderContactNotificationCategorySubscriptionsItemArrayOutputWithContext(ctx context.Context) FolderContactNotificationCategorySubscriptionsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderContactNotificationCategorySubscriptionsItemArrayOutput)
}

type FolderContactNotificationCategorySubscriptionsItemArrayOutput struct{ *pulumi.OutputState }

func (FolderContactNotificationCategorySubscriptionsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FolderContactNotificationCategorySubscriptionsItem)(nil)).Elem()
}

func (o FolderContactNotificationCategorySubscriptionsItemArrayOutput) ToFolderContactNotificationCategorySubscriptionsItemArrayOutput() FolderContactNotificationCategorySubscriptionsItemArrayOutput {
	return o
}

func (o FolderContactNotificationCategorySubscriptionsItemArrayOutput) ToFolderContactNotificationCategorySubscriptionsItemArrayOutputWithContext(ctx context.Context) FolderContactNotificationCategorySubscriptionsItemArrayOutput {
	return o
}

func (o FolderContactNotificationCategorySubscriptionsItemArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]FolderContactNotificationCategorySubscriptionsItem)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}

// The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.
type FolderContactValidationState pulumi.String

const (
	// The validation state is unknown or unspecified.
	FolderContactValidationStateValidationStateUnspecified = FolderContactValidationState("VALIDATION_STATE_UNSPECIFIED")
	// The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.
	FolderContactValidationStateValid = FolderContactValidationState("VALID")
	// The contact is considered invalid. This may become the state if the contact's email is found to be unreachable.
	FolderContactValidationStateInvalid = FolderContactValidationState("INVALID")
)

func (FolderContactValidationState) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e FolderContactValidationState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FolderContactValidationState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FolderContactValidationState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FolderContactValidationState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OrganizationContactNotificationCategorySubscriptionsItem pulumi.String

const (
	// Notification category is unrecognized or unspecified.
	OrganizationContactNotificationCategorySubscriptionsItemNotificationCategoryUnspecified = OrganizationContactNotificationCategorySubscriptionsItem("NOTIFICATION_CATEGORY_UNSPECIFIED")
	// All notifications related to the resource, including notifications pertaining to categories added in the future.
	OrganizationContactNotificationCategorySubscriptionsItemAll = OrganizationContactNotificationCategorySubscriptionsItem("ALL")
	// Notifications related to imminent account suspension.
	OrganizationContactNotificationCategorySubscriptionsItemSuspension = OrganizationContactNotificationCategorySubscriptionsItem("SUSPENSION")
	// Notifications related to security/privacy incidents, notifications, and vulnerabilities.
	OrganizationContactNotificationCategorySubscriptionsItemSecurity = OrganizationContactNotificationCategorySubscriptionsItem("SECURITY")
	// Notifications related to technical events and issues such as outages, errors, or bugs.
	OrganizationContactNotificationCategorySubscriptionsItemTechnical = OrganizationContactNotificationCategorySubscriptionsItem("TECHNICAL")
	// Notifications related to billing and payments notifications, price updates, errors, or credits.
	OrganizationContactNotificationCategorySubscriptionsItemBilling = OrganizationContactNotificationCategorySubscriptionsItem("BILLING")
	// Notifications related to enforcement actions, regulatory compliance, or government notices.
	OrganizationContactNotificationCategorySubscriptionsItemLegal = OrganizationContactNotificationCategorySubscriptionsItem("LEGAL")
	// Notifications related to new versions, product terms updates, or deprecations.
	OrganizationContactNotificationCategorySubscriptionsItemProductUpdates = OrganizationContactNotificationCategorySubscriptionsItem("PRODUCT_UPDATES")
	// Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL.
	OrganizationContactNotificationCategorySubscriptionsItemTechnicalIncidents = OrganizationContactNotificationCategorySubscriptionsItem("TECHNICAL_INCIDENTS")
)

func (OrganizationContactNotificationCategorySubscriptionsItem) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e OrganizationContactNotificationCategorySubscriptionsItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OrganizationContactNotificationCategorySubscriptionsItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OrganizationContactNotificationCategorySubscriptionsItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OrganizationContactNotificationCategorySubscriptionsItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// OrganizationContactNotificationCategorySubscriptionsItemArrayInput is an input type that accepts OrganizationContactNotificationCategorySubscriptionsItemArray and OrganizationContactNotificationCategorySubscriptionsItemArrayOutput values.
// You can construct a concrete instance of `OrganizationContactNotificationCategorySubscriptionsItemArrayInput` via:
//
//          OrganizationContactNotificationCategorySubscriptionsItemArray{ OrganizationContactNotificationCategorySubscriptionsItemArgs{...} }
type OrganizationContactNotificationCategorySubscriptionsItemArrayInput interface {
	pulumi.Input

	ToOrganizationContactNotificationCategorySubscriptionsItemArrayOutput() OrganizationContactNotificationCategorySubscriptionsItemArrayOutput
	ToOrganizationContactNotificationCategorySubscriptionsItemArrayOutputWithContext(context.Context) OrganizationContactNotificationCategorySubscriptionsItemArrayOutput
}

type OrganizationContactNotificationCategorySubscriptionsItemArray []OrganizationContactNotificationCategorySubscriptionsItem

func (OrganizationContactNotificationCategorySubscriptionsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationContactNotificationCategorySubscriptionsItem)(nil)).Elem()
}

func (i OrganizationContactNotificationCategorySubscriptionsItemArray) ToOrganizationContactNotificationCategorySubscriptionsItemArrayOutput() OrganizationContactNotificationCategorySubscriptionsItemArrayOutput {
	return i.ToOrganizationContactNotificationCategorySubscriptionsItemArrayOutputWithContext(context.Background())
}

func (i OrganizationContactNotificationCategorySubscriptionsItemArray) ToOrganizationContactNotificationCategorySubscriptionsItemArrayOutputWithContext(ctx context.Context) OrganizationContactNotificationCategorySubscriptionsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationContactNotificationCategorySubscriptionsItemArrayOutput)
}

type OrganizationContactNotificationCategorySubscriptionsItemArrayOutput struct{ *pulumi.OutputState }

func (OrganizationContactNotificationCategorySubscriptionsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationContactNotificationCategorySubscriptionsItem)(nil)).Elem()
}

func (o OrganizationContactNotificationCategorySubscriptionsItemArrayOutput) ToOrganizationContactNotificationCategorySubscriptionsItemArrayOutput() OrganizationContactNotificationCategorySubscriptionsItemArrayOutput {
	return o
}

func (o OrganizationContactNotificationCategorySubscriptionsItemArrayOutput) ToOrganizationContactNotificationCategorySubscriptionsItemArrayOutputWithContext(ctx context.Context) OrganizationContactNotificationCategorySubscriptionsItemArrayOutput {
	return o
}

func (o OrganizationContactNotificationCategorySubscriptionsItemArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]OrganizationContactNotificationCategorySubscriptionsItem)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}

// The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.
type OrganizationContactValidationState pulumi.String

const (
	// The validation state is unknown or unspecified.
	OrganizationContactValidationStateValidationStateUnspecified = OrganizationContactValidationState("VALIDATION_STATE_UNSPECIFIED")
	// The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.
	OrganizationContactValidationStateValid = OrganizationContactValidationState("VALID")
	// The contact is considered invalid. This may become the state if the contact's email is found to be unreachable.
	OrganizationContactValidationStateInvalid = OrganizationContactValidationState("INVALID")
)

func (OrganizationContactValidationState) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e OrganizationContactValidationState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OrganizationContactValidationState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OrganizationContactValidationState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OrganizationContactValidationState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
