// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a single contact.
func LookupContact(ctx *pulumi.Context, args *LookupContactArgs, opts ...pulumi.InvokeOption) (*LookupContactResult, error) {
	var rv LookupContactResult
	err := ctx.Invoke("google-native:essentialcontacts/v1:getContact", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupContactArgs struct {
	ContactId string  `pulumi:"contactId"`
	Project   *string `pulumi:"project"`
}

type LookupContactResult struct {
	// The email address to send notifications to. This does not need to be a Google account.
	Email string `pulumi:"email"`
	// The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages.
	LanguageTag string `pulumi:"languageTag"`
	// The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}
	Name string `pulumi:"name"`
	// The categories of notifications that the contact will receive communications for.
	NotificationCategorySubscriptions []string `pulumi:"notificationCategorySubscriptions"`
	// The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago.
	ValidateTime string `pulumi:"validateTime"`
	// The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.
	ValidationState string `pulumi:"validationState"`
}

func LookupContactOutput(ctx *pulumi.Context, args LookupContactOutputArgs, opts ...pulumi.InvokeOption) LookupContactResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupContactResult, error) {
			args := v.(LookupContactArgs)
			r, err := LookupContact(ctx, &args, opts...)
			var s LookupContactResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupContactResultOutput)
}

type LookupContactOutputArgs struct {
	ContactId pulumi.StringInput    `pulumi:"contactId"`
	Project   pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupContactOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContactArgs)(nil)).Elem()
}

type LookupContactResultOutput struct{ *pulumi.OutputState }

func (LookupContactResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContactResult)(nil)).Elem()
}

func (o LookupContactResultOutput) ToLookupContactResultOutput() LookupContactResultOutput {
	return o
}

func (o LookupContactResultOutput) ToLookupContactResultOutputWithContext(ctx context.Context) LookupContactResultOutput {
	return o
}

// The email address to send notifications to. This does not need to be a Google account.
func (o LookupContactResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactResult) string { return v.Email }).(pulumi.StringOutput)
}

// The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages.
func (o LookupContactResultOutput) LanguageTag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactResult) string { return v.LanguageTag }).(pulumi.StringOutput)
}

// The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}
func (o LookupContactResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactResult) string { return v.Name }).(pulumi.StringOutput)
}

// The categories of notifications that the contact will receive communications for.
func (o LookupContactResultOutput) NotificationCategorySubscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupContactResult) []string { return v.NotificationCategorySubscriptions }).(pulumi.StringArrayOutput)
}

// The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago.
func (o LookupContactResultOutput) ValidateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactResult) string { return v.ValidateTime }).(pulumi.StringOutput)
}

// The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.
func (o LookupContactResultOutput) ValidationState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactResult) string { return v.ValidationState }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContactResultOutput{})
}
