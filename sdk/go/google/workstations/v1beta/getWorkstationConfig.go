// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the requested workstation configuration.
func LookupWorkstationConfig(ctx *pulumi.Context, args *LookupWorkstationConfigArgs, opts ...pulumi.InvokeOption) (*LookupWorkstationConfigResult, error) {
	var rv LookupWorkstationConfigResult
	err := ctx.Invoke("google-native:workstations/v1beta:getWorkstationConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWorkstationConfigArgs struct {
	Location             string  `pulumi:"location"`
	Project              *string `pulumi:"project"`
	WorkstationClusterId string  `pulumi:"workstationClusterId"`
	WorkstationConfigId  string  `pulumi:"workstationConfigId"`
}

type LookupWorkstationConfigResult struct {
	// Client-specified annotations.
	Annotations map[string]string `pulumi:"annotations"`
	// Status conditions describing the current resource state.
	Conditions []StatusResponse `pulumi:"conditions"`
	// Container that will be run for each workstation using this configuration when that workstation is started.
	Container ContainerResponse `pulumi:"container"`
	// Time when this resource was created.
	CreateTime string `pulumi:"createTime"`
	// Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the `conditions` field.
	Degraded bool `pulumi:"degraded"`
	// Time when this resource was soft-deleted.
	DeleteTime string `pulumi:"deleteTime"`
	// Human-readable name for this resource.
	DisplayName string `pulumi:"displayName"`
	// Encrypts resources of this workstation configuration using a customer-specified encryption key. If specified, the boot disk of the Compute Engine instance and the persistent disk will be encrypted using this encryption key. If this field is not set, the disks will be encrypted using a generated key. Customer-specified encryption keys do not protect disk metadata. If the customer-specified encryption key is rotated, when the workstation instance is stopped, the system will attempt to recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the persistent disk is recreated. Otherwise, data on the persistent disk will be lost. If the encryption key is revoked, the workstation session will automatically be stopped within 7 hours.
	EncryptionKey CustomerEncryptionKeyResponse `pulumi:"encryptionKey"`
	// Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
	Etag string `pulumi:"etag"`
	// Runtime host for the workstation.
	Host HostResponse `pulumi:"host"`
	// How long to wait before automatically stopping an instance that hasn't received any user traffic. A value of 0 indicates that this instance should never time out due to idleness. Defaults to 20 minutes.
	IdleTimeout string `pulumi:"idleTimeout"`
	// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
	Labels map[string]string `pulumi:"labels"`
	// Full name of this resource.
	Name string `pulumi:"name"`
	// Directories to persist across workstation sessions.
	PersistentDirectories []PersistentDirectoryResponse `pulumi:"persistentDirectories"`
	// Indicates whether this resource is currently being updated to match its intended state.
	Reconciling bool `pulumi:"reconciling"`
	// How long to wait before automatically stopping a workstation after it started. A value of 0 indicates that workstations using this config should never time out. Must be greater than 0 and less than 24 hours if encryption_key is set. Defaults to 12 hours.
	RunningTimeout string `pulumi:"runningTimeout"`
	// A system-assigned unique identified for this resource.
	Uid string `pulumi:"uid"`
	// Time when this resource was most recently updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupWorkstationConfigOutput(ctx *pulumi.Context, args LookupWorkstationConfigOutputArgs, opts ...pulumi.InvokeOption) LookupWorkstationConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkstationConfigResult, error) {
			args := v.(LookupWorkstationConfigArgs)
			r, err := LookupWorkstationConfig(ctx, &args, opts...)
			var s LookupWorkstationConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkstationConfigResultOutput)
}

type LookupWorkstationConfigOutputArgs struct {
	Location             pulumi.StringInput    `pulumi:"location"`
	Project              pulumi.StringPtrInput `pulumi:"project"`
	WorkstationClusterId pulumi.StringInput    `pulumi:"workstationClusterId"`
	WorkstationConfigId  pulumi.StringInput    `pulumi:"workstationConfigId"`
}

func (LookupWorkstationConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkstationConfigArgs)(nil)).Elem()
}

type LookupWorkstationConfigResultOutput struct{ *pulumi.OutputState }

func (LookupWorkstationConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkstationConfigResult)(nil)).Elem()
}

func (o LookupWorkstationConfigResultOutput) ToLookupWorkstationConfigResultOutput() LookupWorkstationConfigResultOutput {
	return o
}

func (o LookupWorkstationConfigResultOutput) ToLookupWorkstationConfigResultOutputWithContext(ctx context.Context) LookupWorkstationConfigResultOutput {
	return o
}

// Client-specified annotations.
func (o LookupWorkstationConfigResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Status conditions describing the current resource state.
func (o LookupWorkstationConfigResultOutput) Conditions() StatusResponseArrayOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) []StatusResponse { return v.Conditions }).(StatusResponseArrayOutput)
}

// Container that will be run for each workstation using this configuration when that workstation is started.
func (o LookupWorkstationConfigResultOutput) Container() ContainerResponseOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) ContainerResponse { return v.Container }).(ContainerResponseOutput)
}

// Time when this resource was created.
func (o LookupWorkstationConfigResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the `conditions` field.
func (o LookupWorkstationConfigResultOutput) Degraded() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) bool { return v.Degraded }).(pulumi.BoolOutput)
}

// Time when this resource was soft-deleted.
func (o LookupWorkstationConfigResultOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// Human-readable name for this resource.
func (o LookupWorkstationConfigResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Encrypts resources of this workstation configuration using a customer-specified encryption key. If specified, the boot disk of the Compute Engine instance and the persistent disk will be encrypted using this encryption key. If this field is not set, the disks will be encrypted using a generated key. Customer-specified encryption keys do not protect disk metadata. If the customer-specified encryption key is rotated, when the workstation instance is stopped, the system will attempt to recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the persistent disk is recreated. Otherwise, data on the persistent disk will be lost. If the encryption key is revoked, the workstation session will automatically be stopped within 7 hours.
func (o LookupWorkstationConfigResultOutput) EncryptionKey() CustomerEncryptionKeyResponseOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) CustomerEncryptionKeyResponse { return v.EncryptionKey }).(CustomerEncryptionKeyResponseOutput)
}

// Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
func (o LookupWorkstationConfigResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Runtime host for the workstation.
func (o LookupWorkstationConfigResultOutput) Host() HostResponseOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) HostResponse { return v.Host }).(HostResponseOutput)
}

// How long to wait before automatically stopping an instance that hasn't received any user traffic. A value of 0 indicates that this instance should never time out due to idleness. Defaults to 20 minutes.
func (o LookupWorkstationConfigResultOutput) IdleTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) string { return v.IdleTimeout }).(pulumi.StringOutput)
}

// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
func (o LookupWorkstationConfigResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Full name of this resource.
func (o LookupWorkstationConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

// Directories to persist across workstation sessions.
func (o LookupWorkstationConfigResultOutput) PersistentDirectories() PersistentDirectoryResponseArrayOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) []PersistentDirectoryResponse { return v.PersistentDirectories }).(PersistentDirectoryResponseArrayOutput)
}

// Indicates whether this resource is currently being updated to match its intended state.
func (o LookupWorkstationConfigResultOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) bool { return v.Reconciling }).(pulumi.BoolOutput)
}

// How long to wait before automatically stopping a workstation after it started. A value of 0 indicates that workstations using this config should never time out. Must be greater than 0 and less than 24 hours if encryption_key is set. Defaults to 12 hours.
func (o LookupWorkstationConfigResultOutput) RunningTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) string { return v.RunningTimeout }).(pulumi.StringOutput)
}

// A system-assigned unique identified for this resource.
func (o LookupWorkstationConfigResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) string { return v.Uid }).(pulumi.StringOutput)
}

// Time when this resource was most recently updated.
func (o LookupWorkstationConfigResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkstationConfigResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkstationConfigResultOutput{})
}
