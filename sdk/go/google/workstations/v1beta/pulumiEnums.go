// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToOutput(ctx context.Context) pulumix.Output[AuditLogConfigLogType] {
	return pulumix.Output[AuditLogConfigLogType]{
		OutputState: o.OutputState,
	}
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AuditLogConfigLogType] {
	return pulumix.Output[*AuditLogConfigLogType]{
		OutputState: o.OutputState,
	}
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts AuditLogConfigLogTypeArgs and AuditLogConfigLogTypeOutput values.
// You can construct a concrete instance of `AuditLogConfigLogTypeInput` via:
//
//	AuditLogConfigLogTypeArgs{...}
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AuditLogConfigLogType] {
	return pulumix.Output[*AuditLogConfigLogType]{
		OutputState: in.ToAuditLogConfigLogTypePtrOutputWithContext(ctx).OutputState,
	}
}

// What should happen to the disk after the workstation is deleted. Defaults to DELETE.
type GceRegionalPersistentDiskReclaimPolicy string

const (
	// Do not use.
	GceRegionalPersistentDiskReclaimPolicyReclaimPolicyUnspecified = GceRegionalPersistentDiskReclaimPolicy("RECLAIM_POLICY_UNSPECIFIED")
	// The persistent disk will be deleted with the workstation.
	GceRegionalPersistentDiskReclaimPolicyDelete = GceRegionalPersistentDiskReclaimPolicy("DELETE")
	// The persistent disk will be remain after the workstation is deleted, and the administrator must manually delete the disk.
	GceRegionalPersistentDiskReclaimPolicyRetain = GceRegionalPersistentDiskReclaimPolicy("RETAIN")
)

func (GceRegionalPersistentDiskReclaimPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*GceRegionalPersistentDiskReclaimPolicy)(nil)).Elem()
}

func (e GceRegionalPersistentDiskReclaimPolicy) ToGceRegionalPersistentDiskReclaimPolicyOutput() GceRegionalPersistentDiskReclaimPolicyOutput {
	return pulumi.ToOutput(e).(GceRegionalPersistentDiskReclaimPolicyOutput)
}

func (e GceRegionalPersistentDiskReclaimPolicy) ToGceRegionalPersistentDiskReclaimPolicyOutputWithContext(ctx context.Context) GceRegionalPersistentDiskReclaimPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GceRegionalPersistentDiskReclaimPolicyOutput)
}

func (e GceRegionalPersistentDiskReclaimPolicy) ToGceRegionalPersistentDiskReclaimPolicyPtrOutput() GceRegionalPersistentDiskReclaimPolicyPtrOutput {
	return e.ToGceRegionalPersistentDiskReclaimPolicyPtrOutputWithContext(context.Background())
}

func (e GceRegionalPersistentDiskReclaimPolicy) ToGceRegionalPersistentDiskReclaimPolicyPtrOutputWithContext(ctx context.Context) GceRegionalPersistentDiskReclaimPolicyPtrOutput {
	return GceRegionalPersistentDiskReclaimPolicy(e).ToGceRegionalPersistentDiskReclaimPolicyOutputWithContext(ctx).ToGceRegionalPersistentDiskReclaimPolicyPtrOutputWithContext(ctx)
}

func (e GceRegionalPersistentDiskReclaimPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GceRegionalPersistentDiskReclaimPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GceRegionalPersistentDiskReclaimPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GceRegionalPersistentDiskReclaimPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GceRegionalPersistentDiskReclaimPolicyOutput struct{ *pulumi.OutputState }

func (GceRegionalPersistentDiskReclaimPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GceRegionalPersistentDiskReclaimPolicy)(nil)).Elem()
}

func (o GceRegionalPersistentDiskReclaimPolicyOutput) ToGceRegionalPersistentDiskReclaimPolicyOutput() GceRegionalPersistentDiskReclaimPolicyOutput {
	return o
}

func (o GceRegionalPersistentDiskReclaimPolicyOutput) ToGceRegionalPersistentDiskReclaimPolicyOutputWithContext(ctx context.Context) GceRegionalPersistentDiskReclaimPolicyOutput {
	return o
}

func (o GceRegionalPersistentDiskReclaimPolicyOutput) ToGceRegionalPersistentDiskReclaimPolicyPtrOutput() GceRegionalPersistentDiskReclaimPolicyPtrOutput {
	return o.ToGceRegionalPersistentDiskReclaimPolicyPtrOutputWithContext(context.Background())
}

func (o GceRegionalPersistentDiskReclaimPolicyOutput) ToGceRegionalPersistentDiskReclaimPolicyPtrOutputWithContext(ctx context.Context) GceRegionalPersistentDiskReclaimPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GceRegionalPersistentDiskReclaimPolicy) *GceRegionalPersistentDiskReclaimPolicy {
		return &v
	}).(GceRegionalPersistentDiskReclaimPolicyPtrOutput)
}

func (o GceRegionalPersistentDiskReclaimPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[GceRegionalPersistentDiskReclaimPolicy] {
	return pulumix.Output[GceRegionalPersistentDiskReclaimPolicy]{
		OutputState: o.OutputState,
	}
}

func (o GceRegionalPersistentDiskReclaimPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GceRegionalPersistentDiskReclaimPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GceRegionalPersistentDiskReclaimPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GceRegionalPersistentDiskReclaimPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GceRegionalPersistentDiskReclaimPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GceRegionalPersistentDiskReclaimPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GceRegionalPersistentDiskReclaimPolicyPtrOutput struct{ *pulumi.OutputState }

func (GceRegionalPersistentDiskReclaimPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GceRegionalPersistentDiskReclaimPolicy)(nil)).Elem()
}

func (o GceRegionalPersistentDiskReclaimPolicyPtrOutput) ToGceRegionalPersistentDiskReclaimPolicyPtrOutput() GceRegionalPersistentDiskReclaimPolicyPtrOutput {
	return o
}

func (o GceRegionalPersistentDiskReclaimPolicyPtrOutput) ToGceRegionalPersistentDiskReclaimPolicyPtrOutputWithContext(ctx context.Context) GceRegionalPersistentDiskReclaimPolicyPtrOutput {
	return o
}

func (o GceRegionalPersistentDiskReclaimPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GceRegionalPersistentDiskReclaimPolicy] {
	return pulumix.Output[*GceRegionalPersistentDiskReclaimPolicy]{
		OutputState: o.OutputState,
	}
}

func (o GceRegionalPersistentDiskReclaimPolicyPtrOutput) Elem() GceRegionalPersistentDiskReclaimPolicyOutput {
	return o.ApplyT(func(v *GceRegionalPersistentDiskReclaimPolicy) GceRegionalPersistentDiskReclaimPolicy {
		if v != nil {
			return *v
		}
		var ret GceRegionalPersistentDiskReclaimPolicy
		return ret
	}).(GceRegionalPersistentDiskReclaimPolicyOutput)
}

func (o GceRegionalPersistentDiskReclaimPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GceRegionalPersistentDiskReclaimPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GceRegionalPersistentDiskReclaimPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GceRegionalPersistentDiskReclaimPolicyInput is an input type that accepts GceRegionalPersistentDiskReclaimPolicyArgs and GceRegionalPersistentDiskReclaimPolicyOutput values.
// You can construct a concrete instance of `GceRegionalPersistentDiskReclaimPolicyInput` via:
//
//	GceRegionalPersistentDiskReclaimPolicyArgs{...}
type GceRegionalPersistentDiskReclaimPolicyInput interface {
	pulumi.Input

	ToGceRegionalPersistentDiskReclaimPolicyOutput() GceRegionalPersistentDiskReclaimPolicyOutput
	ToGceRegionalPersistentDiskReclaimPolicyOutputWithContext(context.Context) GceRegionalPersistentDiskReclaimPolicyOutput
}

var gceRegionalPersistentDiskReclaimPolicyPtrType = reflect.TypeOf((**GceRegionalPersistentDiskReclaimPolicy)(nil)).Elem()

type GceRegionalPersistentDiskReclaimPolicyPtrInput interface {
	pulumi.Input

	ToGceRegionalPersistentDiskReclaimPolicyPtrOutput() GceRegionalPersistentDiskReclaimPolicyPtrOutput
	ToGceRegionalPersistentDiskReclaimPolicyPtrOutputWithContext(context.Context) GceRegionalPersistentDiskReclaimPolicyPtrOutput
}

type gceRegionalPersistentDiskReclaimPolicyPtr string

func GceRegionalPersistentDiskReclaimPolicyPtr(v string) GceRegionalPersistentDiskReclaimPolicyPtrInput {
	return (*gceRegionalPersistentDiskReclaimPolicyPtr)(&v)
}

func (*gceRegionalPersistentDiskReclaimPolicyPtr) ElementType() reflect.Type {
	return gceRegionalPersistentDiskReclaimPolicyPtrType
}

func (in *gceRegionalPersistentDiskReclaimPolicyPtr) ToGceRegionalPersistentDiskReclaimPolicyPtrOutput() GceRegionalPersistentDiskReclaimPolicyPtrOutput {
	return pulumi.ToOutput(in).(GceRegionalPersistentDiskReclaimPolicyPtrOutput)
}

func (in *gceRegionalPersistentDiskReclaimPolicyPtr) ToGceRegionalPersistentDiskReclaimPolicyPtrOutputWithContext(ctx context.Context) GceRegionalPersistentDiskReclaimPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GceRegionalPersistentDiskReclaimPolicyPtrOutput)
}

func (in *gceRegionalPersistentDiskReclaimPolicyPtr) ToOutput(ctx context.Context) pulumix.Output[*GceRegionalPersistentDiskReclaimPolicy] {
	return pulumix.Output[*GceRegionalPersistentDiskReclaimPolicy]{
		OutputState: in.ToGceRegionalPersistentDiskReclaimPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GceRegionalPersistentDiskReclaimPolicyInput)(nil)).Elem(), GceRegionalPersistentDiskReclaimPolicy("RECLAIM_POLICY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GceRegionalPersistentDiskReclaimPolicyPtrInput)(nil)).Elem(), GceRegionalPersistentDiskReclaimPolicy("RECLAIM_POLICY_UNSPECIFIED"))
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(GceRegionalPersistentDiskReclaimPolicyOutput{})
	pulumi.RegisterOutputType(GceRegionalPersistentDiskReclaimPolicyPtrOutput{})
}
