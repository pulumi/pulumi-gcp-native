// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
type AutoscalingPolicyIamPolicy struct {
	pulumi.CustomResourceState
}

// NewAutoscalingPolicyIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewAutoscalingPolicyIamPolicy(ctx *pulumi.Context,
	name string, args *AutoscalingPolicyIamPolicyArgs, opts ...pulumi.ResourceOption) (*AutoscalingPolicyIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutoscalingPoliciesId == nil {
		return nil, errors.New("invalid value for required argument 'AutoscalingPoliciesId'")
	}
	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	var resource AutoscalingPolicyIamPolicy
	err := ctx.RegisterResource("google-cloud:dataproc/v1beta2:AutoscalingPolicyIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoscalingPolicyIamPolicy gets an existing AutoscalingPolicyIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoscalingPolicyIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoscalingPolicyIamPolicyState, opts ...pulumi.ResourceOption) (*AutoscalingPolicyIamPolicy, error) {
	var resource AutoscalingPolicyIamPolicy
	err := ctx.ReadResource("google-cloud:dataproc/v1beta2:AutoscalingPolicyIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutoscalingPolicyIamPolicy resources.
type autoscalingPolicyIamPolicyState struct {
}

type AutoscalingPolicyIamPolicyState struct {
}

func (AutoscalingPolicyIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoscalingPolicyIamPolicyState)(nil)).Elem()
}

type autoscalingPolicyIamPolicyArgs struct {
	AutoscalingPoliciesId string `pulumi:"autoscalingPoliciesId"`
	LocationsId           string `pulumi:"locationsId"`
	// REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy     *Policy `pulumi:"policy"`
	ProjectsId string  `pulumi:"projectsId"`
}

// The set of arguments for constructing a AutoscalingPolicyIamPolicy resource.
type AutoscalingPolicyIamPolicyArgs struct {
	AutoscalingPoliciesId pulumi.StringInput
	LocationsId           pulumi.StringInput
	// REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy     PolicyPtrInput
	ProjectsId pulumi.StringInput
}

func (AutoscalingPolicyIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoscalingPolicyIamPolicyArgs)(nil)).Elem()
}

type AutoscalingPolicyIamPolicyInput interface {
	pulumi.Input

	ToAutoscalingPolicyIamPolicyOutput() AutoscalingPolicyIamPolicyOutput
	ToAutoscalingPolicyIamPolicyOutputWithContext(ctx context.Context) AutoscalingPolicyIamPolicyOutput
}

func (*AutoscalingPolicyIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyIamPolicy)(nil))
}

func (i *AutoscalingPolicyIamPolicy) ToAutoscalingPolicyIamPolicyOutput() AutoscalingPolicyIamPolicyOutput {
	return i.ToAutoscalingPolicyIamPolicyOutputWithContext(context.Background())
}

func (i *AutoscalingPolicyIamPolicy) ToAutoscalingPolicyIamPolicyOutputWithContext(ctx context.Context) AutoscalingPolicyIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyIamPolicyOutput)
}

type AutoscalingPolicyIamPolicyOutput struct {
	*pulumi.OutputState
}

func (AutoscalingPolicyIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyIamPolicy)(nil))
}

func (o AutoscalingPolicyIamPolicyOutput) ToAutoscalingPolicyIamPolicyOutput() AutoscalingPolicyIamPolicyOutput {
	return o
}

func (o AutoscalingPolicyIamPolicyOutput) ToAutoscalingPolicyIamPolicyOutputWithContext(ctx context.Context) AutoscalingPolicyIamPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AutoscalingPolicyIamPolicyOutput{})
}
