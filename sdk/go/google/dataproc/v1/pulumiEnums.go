// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Optional. The type of IPv6 access for a cluster.
type GceClusterConfigPrivateIpv6GoogleAccess pulumi.String

const (
	// If unspecified, Compute Engine default behavior will apply, which is the same as INHERIT_FROM_SUBNETWORK.
	GceClusterConfigPrivateIpv6GoogleAccessPrivateIpv6GoogleAccessUnspecified = GceClusterConfigPrivateIpv6GoogleAccess("PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED")
	// Private access to and from Google Services configuration inherited from the subnetwork configuration. This is the default Compute Engine behavior.
	GceClusterConfigPrivateIpv6GoogleAccessInheritFromSubnetwork = GceClusterConfigPrivateIpv6GoogleAccess("INHERIT_FROM_SUBNETWORK")
	// Enables outbound private IPv6 access to Google Services from the Dataproc cluster.
	GceClusterConfigPrivateIpv6GoogleAccessOutbound = GceClusterConfigPrivateIpv6GoogleAccess("OUTBOUND")
	// Enables bidirectional private IPv6 access between Google Services and the Dataproc cluster.
	GceClusterConfigPrivateIpv6GoogleAccessBidirectional = GceClusterConfigPrivateIpv6GoogleAccess("BIDIRECTIONAL")
)

func (GceClusterConfigPrivateIpv6GoogleAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GceClusterConfigPrivateIpv6GoogleAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GceClusterConfigPrivateIpv6GoogleAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GceClusterConfigPrivateIpv6GoogleAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GceClusterConfigPrivateIpv6GoogleAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
type InstanceGroupConfigPreemptibility pulumi.String

const (
	// Preemptibility is unspecified, the system will choose the appropriate setting for each instance group.
	InstanceGroupConfigPreemptibilityPreemptibilityUnspecified = InstanceGroupConfigPreemptibility("PREEMPTIBILITY_UNSPECIFIED")
	// Instances are non-preemptible.This option is allowed for all instance groups and is the only valid value for Master and Worker instance groups.
	InstanceGroupConfigPreemptibilityNonPreemptible = InstanceGroupConfigPreemptibility("NON_PREEMPTIBLE")
	// Instances are preemptible.This option is allowed only for secondary worker groups.
	InstanceGroupConfigPreemptibilityPreemptible = InstanceGroupConfigPreemptibility("PREEMPTIBLE")
)

func (InstanceGroupConfigPreemptibility) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e InstanceGroupConfigPreemptibility) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupConfigPreemptibility) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupConfigPreemptibility) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceGroupConfigPreemptibility) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Optional. Type of reservation to consume
type ReservationAffinityConsumeReservationType pulumi.String

const (
	ReservationAffinityConsumeReservationTypeTypeUnspecified = ReservationAffinityConsumeReservationType("TYPE_UNSPECIFIED")
	// Do not consume from any allocated capacity.
	ReservationAffinityConsumeReservationTypeNoReservation = ReservationAffinityConsumeReservationType("NO_RESERVATION")
	// Consume any reservation available.
	ReservationAffinityConsumeReservationTypeAnyReservation = ReservationAffinityConsumeReservationType("ANY_RESERVATION")
	// Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
	ReservationAffinityConsumeReservationTypeSpecificReservation = ReservationAffinityConsumeReservationType("SPECIFIC_RESERVATION")
)

func (ReservationAffinityConsumeReservationType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ReservationAffinityConsumeReservationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReservationAffinityConsumeReservationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReservationAffinityConsumeReservationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReservationAffinityConsumeReservationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SoftwareConfigOptionalComponentsItem pulumi.String

const (
	// Unspecified component. Specifying this will cause Cluster creation to fail.
	SoftwareConfigOptionalComponentsItemComponentUnspecified = SoftwareConfigOptionalComponentsItem("COMPONENT_UNSPECIFIED")
	// The Anaconda python distribution. The Anaconda component is not supported in the Dataproc 2.0 image. The 2.0 image is pre-installed with Miniconda.
	SoftwareConfigOptionalComponentsItemAnaconda = SoftwareConfigOptionalComponentsItem("ANACONDA")
	// Docker
	SoftwareConfigOptionalComponentsItemDocker = SoftwareConfigOptionalComponentsItem("DOCKER")
	// The Druid query engine. (alpha)
	SoftwareConfigOptionalComponentsItemDruid = SoftwareConfigOptionalComponentsItem("DRUID")
	// Flink
	SoftwareConfigOptionalComponentsItemFlink = SoftwareConfigOptionalComponentsItem("FLINK")
	// HBase. (beta)
	SoftwareConfigOptionalComponentsItemHbase = SoftwareConfigOptionalComponentsItem("HBASE")
	// The Hive Web HCatalog (the REST service for accessing HCatalog).
	SoftwareConfigOptionalComponentsItemHiveWebhcat = SoftwareConfigOptionalComponentsItem("HIVE_WEBHCAT")
	// The Jupyter Notebook.
	SoftwareConfigOptionalComponentsItemJupyter = SoftwareConfigOptionalComponentsItem("JUPYTER")
	// The Presto query engine.
	SoftwareConfigOptionalComponentsItemPresto = SoftwareConfigOptionalComponentsItem("PRESTO")
	// The Ranger service.
	SoftwareConfigOptionalComponentsItemRanger = SoftwareConfigOptionalComponentsItem("RANGER")
	// The Solr service.
	SoftwareConfigOptionalComponentsItemSolr = SoftwareConfigOptionalComponentsItem("SOLR")
	// The Zeppelin notebook.
	SoftwareConfigOptionalComponentsItemZeppelin = SoftwareConfigOptionalComponentsItem("ZEPPELIN")
	// The Zookeeper service.
	SoftwareConfigOptionalComponentsItemZookeeper = SoftwareConfigOptionalComponentsItem("ZOOKEEPER")
)

func (SoftwareConfigOptionalComponentsItem) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SoftwareConfigOptionalComponentsItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SoftwareConfigOptionalComponentsItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SoftwareConfigOptionalComponentsItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SoftwareConfigOptionalComponentsItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// SoftwareConfigOptionalComponentsItemArrayInput is an input type that accepts SoftwareConfigOptionalComponentsItemArray and SoftwareConfigOptionalComponentsItemArrayOutput values.
// You can construct a concrete instance of `SoftwareConfigOptionalComponentsItemArrayInput` via:
//
//          SoftwareConfigOptionalComponentsItemArray{ SoftwareConfigOptionalComponentsItemArgs{...} }
type SoftwareConfigOptionalComponentsItemArrayInput interface {
	pulumi.Input

	ToSoftwareConfigOptionalComponentsItemArrayOutput() SoftwareConfigOptionalComponentsItemArrayOutput
	ToSoftwareConfigOptionalComponentsItemArrayOutputWithContext(context.Context) SoftwareConfigOptionalComponentsItemArrayOutput
}

type SoftwareConfigOptionalComponentsItemArray []SoftwareConfigOptionalComponentsItem

func (SoftwareConfigOptionalComponentsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SoftwareConfigOptionalComponentsItem)(nil)).Elem()
}

func (i SoftwareConfigOptionalComponentsItemArray) ToSoftwareConfigOptionalComponentsItemArrayOutput() SoftwareConfigOptionalComponentsItemArrayOutput {
	return i.ToSoftwareConfigOptionalComponentsItemArrayOutputWithContext(context.Background())
}

func (i SoftwareConfigOptionalComponentsItemArray) ToSoftwareConfigOptionalComponentsItemArrayOutputWithContext(ctx context.Context) SoftwareConfigOptionalComponentsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareConfigOptionalComponentsItemArrayOutput)
}

type SoftwareConfigOptionalComponentsItemArrayOutput struct{ *pulumi.OutputState }

func (SoftwareConfigOptionalComponentsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SoftwareConfigOptionalComponentsItem)(nil)).Elem()
}

func (o SoftwareConfigOptionalComponentsItemArrayOutput) ToSoftwareConfigOptionalComponentsItemArrayOutput() SoftwareConfigOptionalComponentsItemArrayOutput {
	return o
}

func (o SoftwareConfigOptionalComponentsItemArrayOutput) ToSoftwareConfigOptionalComponentsItemArrayOutputWithContext(ctx context.Context) SoftwareConfigOptionalComponentsItemArrayOutput {
	return o
}

func (o SoftwareConfigOptionalComponentsItemArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]SoftwareConfigOptionalComponentsItem)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}
