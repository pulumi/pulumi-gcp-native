// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies the type and number of accelerator cards attached to the instances of an instance. See GPUs on Compute Engine (https://cloud.google.com/compute/docs/gpus/).
type AcceleratorConfig struct {
	// The number of the accelerator cards of this type exposed to this instance.
	AcceleratorCount *int `pulumi:"acceleratorCount"`
	// Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes).Examples: https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.
	AcceleratorTypeUri *string `pulumi:"acceleratorTypeUri"`
}

// AcceleratorConfigInput is an input type that accepts AcceleratorConfigArgs and AcceleratorConfigOutput values.
// You can construct a concrete instance of `AcceleratorConfigInput` via:
//
//          AcceleratorConfigArgs{...}
type AcceleratorConfigInput interface {
	pulumi.Input

	ToAcceleratorConfigOutput() AcceleratorConfigOutput
	ToAcceleratorConfigOutputWithContext(context.Context) AcceleratorConfigOutput
}

// Specifies the type and number of accelerator cards attached to the instances of an instance. See GPUs on Compute Engine (https://cloud.google.com/compute/docs/gpus/).
type AcceleratorConfigArgs struct {
	// The number of the accelerator cards of this type exposed to this instance.
	AcceleratorCount pulumi.IntPtrInput `pulumi:"acceleratorCount"`
	// Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes).Examples: https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.
	AcceleratorTypeUri pulumi.StringPtrInput `pulumi:"acceleratorTypeUri"`
}

func (AcceleratorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorConfig)(nil)).Elem()
}

func (i AcceleratorConfigArgs) ToAcceleratorConfigOutput() AcceleratorConfigOutput {
	return i.ToAcceleratorConfigOutputWithContext(context.Background())
}

func (i AcceleratorConfigArgs) ToAcceleratorConfigOutputWithContext(ctx context.Context) AcceleratorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorConfigOutput)
}

// AcceleratorConfigArrayInput is an input type that accepts AcceleratorConfigArray and AcceleratorConfigArrayOutput values.
// You can construct a concrete instance of `AcceleratorConfigArrayInput` via:
//
//          AcceleratorConfigArray{ AcceleratorConfigArgs{...} }
type AcceleratorConfigArrayInput interface {
	pulumi.Input

	ToAcceleratorConfigArrayOutput() AcceleratorConfigArrayOutput
	ToAcceleratorConfigArrayOutputWithContext(context.Context) AcceleratorConfigArrayOutput
}

type AcceleratorConfigArray []AcceleratorConfigInput

func (AcceleratorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AcceleratorConfig)(nil)).Elem()
}

func (i AcceleratorConfigArray) ToAcceleratorConfigArrayOutput() AcceleratorConfigArrayOutput {
	return i.ToAcceleratorConfigArrayOutputWithContext(context.Background())
}

func (i AcceleratorConfigArray) ToAcceleratorConfigArrayOutputWithContext(ctx context.Context) AcceleratorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorConfigArrayOutput)
}

// Specifies the type and number of accelerator cards attached to the instances of an instance. See GPUs on Compute Engine (https://cloud.google.com/compute/docs/gpus/).
type AcceleratorConfigOutput struct{ *pulumi.OutputState }

func (AcceleratorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorConfig)(nil)).Elem()
}

func (o AcceleratorConfigOutput) ToAcceleratorConfigOutput() AcceleratorConfigOutput {
	return o
}

func (o AcceleratorConfigOutput) ToAcceleratorConfigOutputWithContext(ctx context.Context) AcceleratorConfigOutput {
	return o
}

// The number of the accelerator cards of this type exposed to this instance.
func (o AcceleratorConfigOutput) AcceleratorCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AcceleratorConfig) *int { return v.AcceleratorCount }).(pulumi.IntPtrOutput)
}

// Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes).Examples: https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.
func (o AcceleratorConfigOutput) AcceleratorTypeUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AcceleratorConfig) *string { return v.AcceleratorTypeUri }).(pulumi.StringPtrOutput)
}

type AcceleratorConfigArrayOutput struct{ *pulumi.OutputState }

func (AcceleratorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AcceleratorConfig)(nil)).Elem()
}

func (o AcceleratorConfigArrayOutput) ToAcceleratorConfigArrayOutput() AcceleratorConfigArrayOutput {
	return o
}

func (o AcceleratorConfigArrayOutput) ToAcceleratorConfigArrayOutputWithContext(ctx context.Context) AcceleratorConfigArrayOutput {
	return o
}

func (o AcceleratorConfigArrayOutput) Index(i pulumi.IntInput) AcceleratorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AcceleratorConfig {
		return vs[0].([]AcceleratorConfig)[vs[1].(int)]
	}).(AcceleratorConfigOutput)
}

// Specifies the type and number of accelerator cards attached to the instances of an instance. See GPUs on Compute Engine (https://cloud.google.com/compute/docs/gpus/).
type AcceleratorConfigResponse struct {
	// The number of the accelerator cards of this type exposed to this instance.
	AcceleratorCount int `pulumi:"acceleratorCount"`
	// Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes).Examples: https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.
	AcceleratorTypeUri string `pulumi:"acceleratorTypeUri"`
}

// AcceleratorConfigResponseInput is an input type that accepts AcceleratorConfigResponseArgs and AcceleratorConfigResponseOutput values.
// You can construct a concrete instance of `AcceleratorConfigResponseInput` via:
//
//          AcceleratorConfigResponseArgs{...}
type AcceleratorConfigResponseInput interface {
	pulumi.Input

	ToAcceleratorConfigResponseOutput() AcceleratorConfigResponseOutput
	ToAcceleratorConfigResponseOutputWithContext(context.Context) AcceleratorConfigResponseOutput
}

// Specifies the type and number of accelerator cards attached to the instances of an instance. See GPUs on Compute Engine (https://cloud.google.com/compute/docs/gpus/).
type AcceleratorConfigResponseArgs struct {
	// The number of the accelerator cards of this type exposed to this instance.
	AcceleratorCount pulumi.IntInput `pulumi:"acceleratorCount"`
	// Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes).Examples: https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.
	AcceleratorTypeUri pulumi.StringInput `pulumi:"acceleratorTypeUri"`
}

func (AcceleratorConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorConfigResponse)(nil)).Elem()
}

func (i AcceleratorConfigResponseArgs) ToAcceleratorConfigResponseOutput() AcceleratorConfigResponseOutput {
	return i.ToAcceleratorConfigResponseOutputWithContext(context.Background())
}

func (i AcceleratorConfigResponseArgs) ToAcceleratorConfigResponseOutputWithContext(ctx context.Context) AcceleratorConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorConfigResponseOutput)
}

// AcceleratorConfigResponseArrayInput is an input type that accepts AcceleratorConfigResponseArray and AcceleratorConfigResponseArrayOutput values.
// You can construct a concrete instance of `AcceleratorConfigResponseArrayInput` via:
//
//          AcceleratorConfigResponseArray{ AcceleratorConfigResponseArgs{...} }
type AcceleratorConfigResponseArrayInput interface {
	pulumi.Input

	ToAcceleratorConfigResponseArrayOutput() AcceleratorConfigResponseArrayOutput
	ToAcceleratorConfigResponseArrayOutputWithContext(context.Context) AcceleratorConfigResponseArrayOutput
}

type AcceleratorConfigResponseArray []AcceleratorConfigResponseInput

func (AcceleratorConfigResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AcceleratorConfigResponse)(nil)).Elem()
}

func (i AcceleratorConfigResponseArray) ToAcceleratorConfigResponseArrayOutput() AcceleratorConfigResponseArrayOutput {
	return i.ToAcceleratorConfigResponseArrayOutputWithContext(context.Background())
}

func (i AcceleratorConfigResponseArray) ToAcceleratorConfigResponseArrayOutputWithContext(ctx context.Context) AcceleratorConfigResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AcceleratorConfigResponseArrayOutput)
}

// Specifies the type and number of accelerator cards attached to the instances of an instance. See GPUs on Compute Engine (https://cloud.google.com/compute/docs/gpus/).
type AcceleratorConfigResponseOutput struct{ *pulumi.OutputState }

func (AcceleratorConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorConfigResponse)(nil)).Elem()
}

func (o AcceleratorConfigResponseOutput) ToAcceleratorConfigResponseOutput() AcceleratorConfigResponseOutput {
	return o
}

func (o AcceleratorConfigResponseOutput) ToAcceleratorConfigResponseOutputWithContext(ctx context.Context) AcceleratorConfigResponseOutput {
	return o
}

// The number of the accelerator cards of this type exposed to this instance.
func (o AcceleratorConfigResponseOutput) AcceleratorCount() pulumi.IntOutput {
	return o.ApplyT(func(v AcceleratorConfigResponse) int { return v.AcceleratorCount }).(pulumi.IntOutput)
}

// Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes).Examples: https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.
func (o AcceleratorConfigResponseOutput) AcceleratorTypeUri() pulumi.StringOutput {
	return o.ApplyT(func(v AcceleratorConfigResponse) string { return v.AcceleratorTypeUri }).(pulumi.StringOutput)
}

type AcceleratorConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (AcceleratorConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AcceleratorConfigResponse)(nil)).Elem()
}

func (o AcceleratorConfigResponseArrayOutput) ToAcceleratorConfigResponseArrayOutput() AcceleratorConfigResponseArrayOutput {
	return o
}

func (o AcceleratorConfigResponseArrayOutput) ToAcceleratorConfigResponseArrayOutputWithContext(ctx context.Context) AcceleratorConfigResponseArrayOutput {
	return o
}

func (o AcceleratorConfigResponseArrayOutput) Index(i pulumi.IntInput) AcceleratorConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AcceleratorConfigResponse {
		return vs[0].([]AcceleratorConfigResponse)[vs[1].(int)]
	}).(AcceleratorConfigResponseOutput)
}

// Autoscaling Policy config associated with the cluster.
type AutoscalingConfig struct {
	// Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.
	PolicyUri *string `pulumi:"policyUri"`
}

// AutoscalingConfigInput is an input type that accepts AutoscalingConfigArgs and AutoscalingConfigOutput values.
// You can construct a concrete instance of `AutoscalingConfigInput` via:
//
//          AutoscalingConfigArgs{...}
type AutoscalingConfigInput interface {
	pulumi.Input

	ToAutoscalingConfigOutput() AutoscalingConfigOutput
	ToAutoscalingConfigOutputWithContext(context.Context) AutoscalingConfigOutput
}

// Autoscaling Policy config associated with the cluster.
type AutoscalingConfigArgs struct {
	// Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.
	PolicyUri pulumi.StringPtrInput `pulumi:"policyUri"`
}

func (AutoscalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingConfig)(nil)).Elem()
}

func (i AutoscalingConfigArgs) ToAutoscalingConfigOutput() AutoscalingConfigOutput {
	return i.ToAutoscalingConfigOutputWithContext(context.Background())
}

func (i AutoscalingConfigArgs) ToAutoscalingConfigOutputWithContext(ctx context.Context) AutoscalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingConfigOutput)
}

func (i AutoscalingConfigArgs) ToAutoscalingConfigPtrOutput() AutoscalingConfigPtrOutput {
	return i.ToAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (i AutoscalingConfigArgs) ToAutoscalingConfigPtrOutputWithContext(ctx context.Context) AutoscalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingConfigOutput).ToAutoscalingConfigPtrOutputWithContext(ctx)
}

// AutoscalingConfigPtrInput is an input type that accepts AutoscalingConfigArgs, AutoscalingConfigPtr and AutoscalingConfigPtrOutput values.
// You can construct a concrete instance of `AutoscalingConfigPtrInput` via:
//
//          AutoscalingConfigArgs{...}
//
//  or:
//
//          nil
type AutoscalingConfigPtrInput interface {
	pulumi.Input

	ToAutoscalingConfigPtrOutput() AutoscalingConfigPtrOutput
	ToAutoscalingConfigPtrOutputWithContext(context.Context) AutoscalingConfigPtrOutput
}

type autoscalingConfigPtrType AutoscalingConfigArgs

func AutoscalingConfigPtr(v *AutoscalingConfigArgs) AutoscalingConfigPtrInput {
	return (*autoscalingConfigPtrType)(v)
}

func (*autoscalingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingConfig)(nil)).Elem()
}

func (i *autoscalingConfigPtrType) ToAutoscalingConfigPtrOutput() AutoscalingConfigPtrOutput {
	return i.ToAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (i *autoscalingConfigPtrType) ToAutoscalingConfigPtrOutputWithContext(ctx context.Context) AutoscalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingConfigPtrOutput)
}

// Autoscaling Policy config associated with the cluster.
type AutoscalingConfigOutput struct{ *pulumi.OutputState }

func (AutoscalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingConfig)(nil)).Elem()
}

func (o AutoscalingConfigOutput) ToAutoscalingConfigOutput() AutoscalingConfigOutput {
	return o
}

func (o AutoscalingConfigOutput) ToAutoscalingConfigOutputWithContext(ctx context.Context) AutoscalingConfigOutput {
	return o
}

func (o AutoscalingConfigOutput) ToAutoscalingConfigPtrOutput() AutoscalingConfigPtrOutput {
	return o.ToAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (o AutoscalingConfigOutput) ToAutoscalingConfigPtrOutputWithContext(ctx context.Context) AutoscalingConfigPtrOutput {
	return o.ApplyT(func(v AutoscalingConfig) *AutoscalingConfig {
		return &v
	}).(AutoscalingConfigPtrOutput)
}

// Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.
func (o AutoscalingConfigOutput) PolicyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingConfig) *string { return v.PolicyUri }).(pulumi.StringPtrOutput)
}

type AutoscalingConfigPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingConfig)(nil)).Elem()
}

func (o AutoscalingConfigPtrOutput) ToAutoscalingConfigPtrOutput() AutoscalingConfigPtrOutput {
	return o
}

func (o AutoscalingConfigPtrOutput) ToAutoscalingConfigPtrOutputWithContext(ctx context.Context) AutoscalingConfigPtrOutput {
	return o
}

func (o AutoscalingConfigPtrOutput) Elem() AutoscalingConfigOutput {
	return o.ApplyT(func(v *AutoscalingConfig) AutoscalingConfig { return *v }).(AutoscalingConfigOutput)
}

// Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.
func (o AutoscalingConfigPtrOutput) PolicyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingConfig) *string {
		if v == nil {
			return nil
		}
		return v.PolicyUri
	}).(pulumi.StringPtrOutput)
}

// Autoscaling Policy config associated with the cluster.
type AutoscalingConfigResponse struct {
	// Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.
	PolicyUri string `pulumi:"policyUri"`
}

// AutoscalingConfigResponseInput is an input type that accepts AutoscalingConfigResponseArgs and AutoscalingConfigResponseOutput values.
// You can construct a concrete instance of `AutoscalingConfigResponseInput` via:
//
//          AutoscalingConfigResponseArgs{...}
type AutoscalingConfigResponseInput interface {
	pulumi.Input

	ToAutoscalingConfigResponseOutput() AutoscalingConfigResponseOutput
	ToAutoscalingConfigResponseOutputWithContext(context.Context) AutoscalingConfigResponseOutput
}

// Autoscaling Policy config associated with the cluster.
type AutoscalingConfigResponseArgs struct {
	// Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.
	PolicyUri pulumi.StringInput `pulumi:"policyUri"`
}

func (AutoscalingConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingConfigResponse)(nil)).Elem()
}

func (i AutoscalingConfigResponseArgs) ToAutoscalingConfigResponseOutput() AutoscalingConfigResponseOutput {
	return i.ToAutoscalingConfigResponseOutputWithContext(context.Background())
}

func (i AutoscalingConfigResponseArgs) ToAutoscalingConfigResponseOutputWithContext(ctx context.Context) AutoscalingConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingConfigResponseOutput)
}

func (i AutoscalingConfigResponseArgs) ToAutoscalingConfigResponsePtrOutput() AutoscalingConfigResponsePtrOutput {
	return i.ToAutoscalingConfigResponsePtrOutputWithContext(context.Background())
}

func (i AutoscalingConfigResponseArgs) ToAutoscalingConfigResponsePtrOutputWithContext(ctx context.Context) AutoscalingConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingConfigResponseOutput).ToAutoscalingConfigResponsePtrOutputWithContext(ctx)
}

// AutoscalingConfigResponsePtrInput is an input type that accepts AutoscalingConfigResponseArgs, AutoscalingConfigResponsePtr and AutoscalingConfigResponsePtrOutput values.
// You can construct a concrete instance of `AutoscalingConfigResponsePtrInput` via:
//
//          AutoscalingConfigResponseArgs{...}
//
//  or:
//
//          nil
type AutoscalingConfigResponsePtrInput interface {
	pulumi.Input

	ToAutoscalingConfigResponsePtrOutput() AutoscalingConfigResponsePtrOutput
	ToAutoscalingConfigResponsePtrOutputWithContext(context.Context) AutoscalingConfigResponsePtrOutput
}

type autoscalingConfigResponsePtrType AutoscalingConfigResponseArgs

func AutoscalingConfigResponsePtr(v *AutoscalingConfigResponseArgs) AutoscalingConfigResponsePtrInput {
	return (*autoscalingConfigResponsePtrType)(v)
}

func (*autoscalingConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingConfigResponse)(nil)).Elem()
}

func (i *autoscalingConfigResponsePtrType) ToAutoscalingConfigResponsePtrOutput() AutoscalingConfigResponsePtrOutput {
	return i.ToAutoscalingConfigResponsePtrOutputWithContext(context.Background())
}

func (i *autoscalingConfigResponsePtrType) ToAutoscalingConfigResponsePtrOutputWithContext(ctx context.Context) AutoscalingConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingConfigResponsePtrOutput)
}

// Autoscaling Policy config associated with the cluster.
type AutoscalingConfigResponseOutput struct{ *pulumi.OutputState }

func (AutoscalingConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingConfigResponse)(nil)).Elem()
}

func (o AutoscalingConfigResponseOutput) ToAutoscalingConfigResponseOutput() AutoscalingConfigResponseOutput {
	return o
}

func (o AutoscalingConfigResponseOutput) ToAutoscalingConfigResponseOutputWithContext(ctx context.Context) AutoscalingConfigResponseOutput {
	return o
}

func (o AutoscalingConfigResponseOutput) ToAutoscalingConfigResponsePtrOutput() AutoscalingConfigResponsePtrOutput {
	return o.ToAutoscalingConfigResponsePtrOutputWithContext(context.Background())
}

func (o AutoscalingConfigResponseOutput) ToAutoscalingConfigResponsePtrOutputWithContext(ctx context.Context) AutoscalingConfigResponsePtrOutput {
	return o.ApplyT(func(v AutoscalingConfigResponse) *AutoscalingConfigResponse {
		return &v
	}).(AutoscalingConfigResponsePtrOutput)
}

// Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.
func (o AutoscalingConfigResponseOutput) PolicyUri() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingConfigResponse) string { return v.PolicyUri }).(pulumi.StringOutput)
}

type AutoscalingConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoscalingConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingConfigResponse)(nil)).Elem()
}

func (o AutoscalingConfigResponsePtrOutput) ToAutoscalingConfigResponsePtrOutput() AutoscalingConfigResponsePtrOutput {
	return o
}

func (o AutoscalingConfigResponsePtrOutput) ToAutoscalingConfigResponsePtrOutputWithContext(ctx context.Context) AutoscalingConfigResponsePtrOutput {
	return o
}

func (o AutoscalingConfigResponsePtrOutput) Elem() AutoscalingConfigResponseOutput {
	return o.ApplyT(func(v *AutoscalingConfigResponse) AutoscalingConfigResponse { return *v }).(AutoscalingConfigResponseOutput)
}

// Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.
func (o AutoscalingConfigResponsePtrOutput) PolicyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyUri
	}).(pulumi.StringPtrOutput)
}

// Basic algorithm for autoscaling.
type BasicAutoscalingAlgorithm struct {
	// Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.
	CooldownPeriod *string `pulumi:"cooldownPeriod"`
	// Optional. YARN autoscaling configuration.
	YarnConfig *BasicYarnAutoscalingConfig `pulumi:"yarnConfig"`
}

// BasicAutoscalingAlgorithmInput is an input type that accepts BasicAutoscalingAlgorithmArgs and BasicAutoscalingAlgorithmOutput values.
// You can construct a concrete instance of `BasicAutoscalingAlgorithmInput` via:
//
//          BasicAutoscalingAlgorithmArgs{...}
type BasicAutoscalingAlgorithmInput interface {
	pulumi.Input

	ToBasicAutoscalingAlgorithmOutput() BasicAutoscalingAlgorithmOutput
	ToBasicAutoscalingAlgorithmOutputWithContext(context.Context) BasicAutoscalingAlgorithmOutput
}

// Basic algorithm for autoscaling.
type BasicAutoscalingAlgorithmArgs struct {
	// Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.
	CooldownPeriod pulumi.StringPtrInput `pulumi:"cooldownPeriod"`
	// Optional. YARN autoscaling configuration.
	YarnConfig BasicYarnAutoscalingConfigPtrInput `pulumi:"yarnConfig"`
}

func (BasicAutoscalingAlgorithmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicAutoscalingAlgorithm)(nil)).Elem()
}

func (i BasicAutoscalingAlgorithmArgs) ToBasicAutoscalingAlgorithmOutput() BasicAutoscalingAlgorithmOutput {
	return i.ToBasicAutoscalingAlgorithmOutputWithContext(context.Background())
}

func (i BasicAutoscalingAlgorithmArgs) ToBasicAutoscalingAlgorithmOutputWithContext(ctx context.Context) BasicAutoscalingAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAutoscalingAlgorithmOutput)
}

func (i BasicAutoscalingAlgorithmArgs) ToBasicAutoscalingAlgorithmPtrOutput() BasicAutoscalingAlgorithmPtrOutput {
	return i.ToBasicAutoscalingAlgorithmPtrOutputWithContext(context.Background())
}

func (i BasicAutoscalingAlgorithmArgs) ToBasicAutoscalingAlgorithmPtrOutputWithContext(ctx context.Context) BasicAutoscalingAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAutoscalingAlgorithmOutput).ToBasicAutoscalingAlgorithmPtrOutputWithContext(ctx)
}

// BasicAutoscalingAlgorithmPtrInput is an input type that accepts BasicAutoscalingAlgorithmArgs, BasicAutoscalingAlgorithmPtr and BasicAutoscalingAlgorithmPtrOutput values.
// You can construct a concrete instance of `BasicAutoscalingAlgorithmPtrInput` via:
//
//          BasicAutoscalingAlgorithmArgs{...}
//
//  or:
//
//          nil
type BasicAutoscalingAlgorithmPtrInput interface {
	pulumi.Input

	ToBasicAutoscalingAlgorithmPtrOutput() BasicAutoscalingAlgorithmPtrOutput
	ToBasicAutoscalingAlgorithmPtrOutputWithContext(context.Context) BasicAutoscalingAlgorithmPtrOutput
}

type basicAutoscalingAlgorithmPtrType BasicAutoscalingAlgorithmArgs

func BasicAutoscalingAlgorithmPtr(v *BasicAutoscalingAlgorithmArgs) BasicAutoscalingAlgorithmPtrInput {
	return (*basicAutoscalingAlgorithmPtrType)(v)
}

func (*basicAutoscalingAlgorithmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicAutoscalingAlgorithm)(nil)).Elem()
}

func (i *basicAutoscalingAlgorithmPtrType) ToBasicAutoscalingAlgorithmPtrOutput() BasicAutoscalingAlgorithmPtrOutput {
	return i.ToBasicAutoscalingAlgorithmPtrOutputWithContext(context.Background())
}

func (i *basicAutoscalingAlgorithmPtrType) ToBasicAutoscalingAlgorithmPtrOutputWithContext(ctx context.Context) BasicAutoscalingAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAutoscalingAlgorithmPtrOutput)
}

// Basic algorithm for autoscaling.
type BasicAutoscalingAlgorithmOutput struct{ *pulumi.OutputState }

func (BasicAutoscalingAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicAutoscalingAlgorithm)(nil)).Elem()
}

func (o BasicAutoscalingAlgorithmOutput) ToBasicAutoscalingAlgorithmOutput() BasicAutoscalingAlgorithmOutput {
	return o
}

func (o BasicAutoscalingAlgorithmOutput) ToBasicAutoscalingAlgorithmOutputWithContext(ctx context.Context) BasicAutoscalingAlgorithmOutput {
	return o
}

func (o BasicAutoscalingAlgorithmOutput) ToBasicAutoscalingAlgorithmPtrOutput() BasicAutoscalingAlgorithmPtrOutput {
	return o.ToBasicAutoscalingAlgorithmPtrOutputWithContext(context.Background())
}

func (o BasicAutoscalingAlgorithmOutput) ToBasicAutoscalingAlgorithmPtrOutputWithContext(ctx context.Context) BasicAutoscalingAlgorithmPtrOutput {
	return o.ApplyT(func(v BasicAutoscalingAlgorithm) *BasicAutoscalingAlgorithm {
		return &v
	}).(BasicAutoscalingAlgorithmPtrOutput)
}

// Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.
func (o BasicAutoscalingAlgorithmOutput) CooldownPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BasicAutoscalingAlgorithm) *string { return v.CooldownPeriod }).(pulumi.StringPtrOutput)
}

// Optional. YARN autoscaling configuration.
func (o BasicAutoscalingAlgorithmOutput) YarnConfig() BasicYarnAutoscalingConfigPtrOutput {
	return o.ApplyT(func(v BasicAutoscalingAlgorithm) *BasicYarnAutoscalingConfig { return v.YarnConfig }).(BasicYarnAutoscalingConfigPtrOutput)
}

type BasicAutoscalingAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (BasicAutoscalingAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicAutoscalingAlgorithm)(nil)).Elem()
}

func (o BasicAutoscalingAlgorithmPtrOutput) ToBasicAutoscalingAlgorithmPtrOutput() BasicAutoscalingAlgorithmPtrOutput {
	return o
}

func (o BasicAutoscalingAlgorithmPtrOutput) ToBasicAutoscalingAlgorithmPtrOutputWithContext(ctx context.Context) BasicAutoscalingAlgorithmPtrOutput {
	return o
}

func (o BasicAutoscalingAlgorithmPtrOutput) Elem() BasicAutoscalingAlgorithmOutput {
	return o.ApplyT(func(v *BasicAutoscalingAlgorithm) BasicAutoscalingAlgorithm { return *v }).(BasicAutoscalingAlgorithmOutput)
}

// Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.
func (o BasicAutoscalingAlgorithmPtrOutput) CooldownPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasicAutoscalingAlgorithm) *string {
		if v == nil {
			return nil
		}
		return v.CooldownPeriod
	}).(pulumi.StringPtrOutput)
}

// Optional. YARN autoscaling configuration.
func (o BasicAutoscalingAlgorithmPtrOutput) YarnConfig() BasicYarnAutoscalingConfigPtrOutput {
	return o.ApplyT(func(v *BasicAutoscalingAlgorithm) *BasicYarnAutoscalingConfig {
		if v == nil {
			return nil
		}
		return v.YarnConfig
	}).(BasicYarnAutoscalingConfigPtrOutput)
}

// Basic algorithm for autoscaling.
type BasicAutoscalingAlgorithmResponse struct {
	// Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.
	CooldownPeriod string `pulumi:"cooldownPeriod"`
	// Optional. YARN autoscaling configuration.
	YarnConfig BasicYarnAutoscalingConfigResponse `pulumi:"yarnConfig"`
}

// BasicAutoscalingAlgorithmResponseInput is an input type that accepts BasicAutoscalingAlgorithmResponseArgs and BasicAutoscalingAlgorithmResponseOutput values.
// You can construct a concrete instance of `BasicAutoscalingAlgorithmResponseInput` via:
//
//          BasicAutoscalingAlgorithmResponseArgs{...}
type BasicAutoscalingAlgorithmResponseInput interface {
	pulumi.Input

	ToBasicAutoscalingAlgorithmResponseOutput() BasicAutoscalingAlgorithmResponseOutput
	ToBasicAutoscalingAlgorithmResponseOutputWithContext(context.Context) BasicAutoscalingAlgorithmResponseOutput
}

// Basic algorithm for autoscaling.
type BasicAutoscalingAlgorithmResponseArgs struct {
	// Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.
	CooldownPeriod pulumi.StringInput `pulumi:"cooldownPeriod"`
	// Optional. YARN autoscaling configuration.
	YarnConfig BasicYarnAutoscalingConfigResponseInput `pulumi:"yarnConfig"`
}

func (BasicAutoscalingAlgorithmResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicAutoscalingAlgorithmResponse)(nil)).Elem()
}

func (i BasicAutoscalingAlgorithmResponseArgs) ToBasicAutoscalingAlgorithmResponseOutput() BasicAutoscalingAlgorithmResponseOutput {
	return i.ToBasicAutoscalingAlgorithmResponseOutputWithContext(context.Background())
}

func (i BasicAutoscalingAlgorithmResponseArgs) ToBasicAutoscalingAlgorithmResponseOutputWithContext(ctx context.Context) BasicAutoscalingAlgorithmResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAutoscalingAlgorithmResponseOutput)
}

func (i BasicAutoscalingAlgorithmResponseArgs) ToBasicAutoscalingAlgorithmResponsePtrOutput() BasicAutoscalingAlgorithmResponsePtrOutput {
	return i.ToBasicAutoscalingAlgorithmResponsePtrOutputWithContext(context.Background())
}

func (i BasicAutoscalingAlgorithmResponseArgs) ToBasicAutoscalingAlgorithmResponsePtrOutputWithContext(ctx context.Context) BasicAutoscalingAlgorithmResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAutoscalingAlgorithmResponseOutput).ToBasicAutoscalingAlgorithmResponsePtrOutputWithContext(ctx)
}

// BasicAutoscalingAlgorithmResponsePtrInput is an input type that accepts BasicAutoscalingAlgorithmResponseArgs, BasicAutoscalingAlgorithmResponsePtr and BasicAutoscalingAlgorithmResponsePtrOutput values.
// You can construct a concrete instance of `BasicAutoscalingAlgorithmResponsePtrInput` via:
//
//          BasicAutoscalingAlgorithmResponseArgs{...}
//
//  or:
//
//          nil
type BasicAutoscalingAlgorithmResponsePtrInput interface {
	pulumi.Input

	ToBasicAutoscalingAlgorithmResponsePtrOutput() BasicAutoscalingAlgorithmResponsePtrOutput
	ToBasicAutoscalingAlgorithmResponsePtrOutputWithContext(context.Context) BasicAutoscalingAlgorithmResponsePtrOutput
}

type basicAutoscalingAlgorithmResponsePtrType BasicAutoscalingAlgorithmResponseArgs

func BasicAutoscalingAlgorithmResponsePtr(v *BasicAutoscalingAlgorithmResponseArgs) BasicAutoscalingAlgorithmResponsePtrInput {
	return (*basicAutoscalingAlgorithmResponsePtrType)(v)
}

func (*basicAutoscalingAlgorithmResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicAutoscalingAlgorithmResponse)(nil)).Elem()
}

func (i *basicAutoscalingAlgorithmResponsePtrType) ToBasicAutoscalingAlgorithmResponsePtrOutput() BasicAutoscalingAlgorithmResponsePtrOutput {
	return i.ToBasicAutoscalingAlgorithmResponsePtrOutputWithContext(context.Background())
}

func (i *basicAutoscalingAlgorithmResponsePtrType) ToBasicAutoscalingAlgorithmResponsePtrOutputWithContext(ctx context.Context) BasicAutoscalingAlgorithmResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAutoscalingAlgorithmResponsePtrOutput)
}

// Basic algorithm for autoscaling.
type BasicAutoscalingAlgorithmResponseOutput struct{ *pulumi.OutputState }

func (BasicAutoscalingAlgorithmResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicAutoscalingAlgorithmResponse)(nil)).Elem()
}

func (o BasicAutoscalingAlgorithmResponseOutput) ToBasicAutoscalingAlgorithmResponseOutput() BasicAutoscalingAlgorithmResponseOutput {
	return o
}

func (o BasicAutoscalingAlgorithmResponseOutput) ToBasicAutoscalingAlgorithmResponseOutputWithContext(ctx context.Context) BasicAutoscalingAlgorithmResponseOutput {
	return o
}

func (o BasicAutoscalingAlgorithmResponseOutput) ToBasicAutoscalingAlgorithmResponsePtrOutput() BasicAutoscalingAlgorithmResponsePtrOutput {
	return o.ToBasicAutoscalingAlgorithmResponsePtrOutputWithContext(context.Background())
}

func (o BasicAutoscalingAlgorithmResponseOutput) ToBasicAutoscalingAlgorithmResponsePtrOutputWithContext(ctx context.Context) BasicAutoscalingAlgorithmResponsePtrOutput {
	return o.ApplyT(func(v BasicAutoscalingAlgorithmResponse) *BasicAutoscalingAlgorithmResponse {
		return &v
	}).(BasicAutoscalingAlgorithmResponsePtrOutput)
}

// Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.
func (o BasicAutoscalingAlgorithmResponseOutput) CooldownPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v BasicAutoscalingAlgorithmResponse) string { return v.CooldownPeriod }).(pulumi.StringOutput)
}

// Optional. YARN autoscaling configuration.
func (o BasicAutoscalingAlgorithmResponseOutput) YarnConfig() BasicYarnAutoscalingConfigResponseOutput {
	return o.ApplyT(func(v BasicAutoscalingAlgorithmResponse) BasicYarnAutoscalingConfigResponse { return v.YarnConfig }).(BasicYarnAutoscalingConfigResponseOutput)
}

type BasicAutoscalingAlgorithmResponsePtrOutput struct{ *pulumi.OutputState }

func (BasicAutoscalingAlgorithmResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicAutoscalingAlgorithmResponse)(nil)).Elem()
}

func (o BasicAutoscalingAlgorithmResponsePtrOutput) ToBasicAutoscalingAlgorithmResponsePtrOutput() BasicAutoscalingAlgorithmResponsePtrOutput {
	return o
}

func (o BasicAutoscalingAlgorithmResponsePtrOutput) ToBasicAutoscalingAlgorithmResponsePtrOutputWithContext(ctx context.Context) BasicAutoscalingAlgorithmResponsePtrOutput {
	return o
}

func (o BasicAutoscalingAlgorithmResponsePtrOutput) Elem() BasicAutoscalingAlgorithmResponseOutput {
	return o.ApplyT(func(v *BasicAutoscalingAlgorithmResponse) BasicAutoscalingAlgorithmResponse { return *v }).(BasicAutoscalingAlgorithmResponseOutput)
}

// Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.
func (o BasicAutoscalingAlgorithmResponsePtrOutput) CooldownPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasicAutoscalingAlgorithmResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CooldownPeriod
	}).(pulumi.StringPtrOutput)
}

// Optional. YARN autoscaling configuration.
func (o BasicAutoscalingAlgorithmResponsePtrOutput) YarnConfig() BasicYarnAutoscalingConfigResponsePtrOutput {
	return o.ApplyT(func(v *BasicAutoscalingAlgorithmResponse) *BasicYarnAutoscalingConfigResponse {
		if v == nil {
			return nil
		}
		return &v.YarnConfig
	}).(BasicYarnAutoscalingConfigResponsePtrOutput)
}

// Basic autoscaling configurations for YARN.
type BasicYarnAutoscalingConfig struct {
	// Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d.
	GracefulDecommissionTimeout string `pulumi:"gracefulDecommissionTimeout"`
	// Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
	ScaleDownFactor float64 `pulumi:"scaleDownFactor"`
	// Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
	ScaleDownMinWorkerFraction *float64 `pulumi:"scaleDownMinWorkerFraction"`
	// Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
	ScaleUpFactor float64 `pulumi:"scaleUpFactor"`
	// Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
	ScaleUpMinWorkerFraction *float64 `pulumi:"scaleUpMinWorkerFraction"`
}

// BasicYarnAutoscalingConfigInput is an input type that accepts BasicYarnAutoscalingConfigArgs and BasicYarnAutoscalingConfigOutput values.
// You can construct a concrete instance of `BasicYarnAutoscalingConfigInput` via:
//
//          BasicYarnAutoscalingConfigArgs{...}
type BasicYarnAutoscalingConfigInput interface {
	pulumi.Input

	ToBasicYarnAutoscalingConfigOutput() BasicYarnAutoscalingConfigOutput
	ToBasicYarnAutoscalingConfigOutputWithContext(context.Context) BasicYarnAutoscalingConfigOutput
}

// Basic autoscaling configurations for YARN.
type BasicYarnAutoscalingConfigArgs struct {
	// Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d.
	GracefulDecommissionTimeout pulumi.StringInput `pulumi:"gracefulDecommissionTimeout"`
	// Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
	ScaleDownFactor pulumi.Float64Input `pulumi:"scaleDownFactor"`
	// Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
	ScaleDownMinWorkerFraction pulumi.Float64PtrInput `pulumi:"scaleDownMinWorkerFraction"`
	// Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
	ScaleUpFactor pulumi.Float64Input `pulumi:"scaleUpFactor"`
	// Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
	ScaleUpMinWorkerFraction pulumi.Float64PtrInput `pulumi:"scaleUpMinWorkerFraction"`
}

func (BasicYarnAutoscalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicYarnAutoscalingConfig)(nil)).Elem()
}

func (i BasicYarnAutoscalingConfigArgs) ToBasicYarnAutoscalingConfigOutput() BasicYarnAutoscalingConfigOutput {
	return i.ToBasicYarnAutoscalingConfigOutputWithContext(context.Background())
}

func (i BasicYarnAutoscalingConfigArgs) ToBasicYarnAutoscalingConfigOutputWithContext(ctx context.Context) BasicYarnAutoscalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicYarnAutoscalingConfigOutput)
}

func (i BasicYarnAutoscalingConfigArgs) ToBasicYarnAutoscalingConfigPtrOutput() BasicYarnAutoscalingConfigPtrOutput {
	return i.ToBasicYarnAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (i BasicYarnAutoscalingConfigArgs) ToBasicYarnAutoscalingConfigPtrOutputWithContext(ctx context.Context) BasicYarnAutoscalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicYarnAutoscalingConfigOutput).ToBasicYarnAutoscalingConfigPtrOutputWithContext(ctx)
}

// BasicYarnAutoscalingConfigPtrInput is an input type that accepts BasicYarnAutoscalingConfigArgs, BasicYarnAutoscalingConfigPtr and BasicYarnAutoscalingConfigPtrOutput values.
// You can construct a concrete instance of `BasicYarnAutoscalingConfigPtrInput` via:
//
//          BasicYarnAutoscalingConfigArgs{...}
//
//  or:
//
//          nil
type BasicYarnAutoscalingConfigPtrInput interface {
	pulumi.Input

	ToBasicYarnAutoscalingConfigPtrOutput() BasicYarnAutoscalingConfigPtrOutput
	ToBasicYarnAutoscalingConfigPtrOutputWithContext(context.Context) BasicYarnAutoscalingConfigPtrOutput
}

type basicYarnAutoscalingConfigPtrType BasicYarnAutoscalingConfigArgs

func BasicYarnAutoscalingConfigPtr(v *BasicYarnAutoscalingConfigArgs) BasicYarnAutoscalingConfigPtrInput {
	return (*basicYarnAutoscalingConfigPtrType)(v)
}

func (*basicYarnAutoscalingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicYarnAutoscalingConfig)(nil)).Elem()
}

func (i *basicYarnAutoscalingConfigPtrType) ToBasicYarnAutoscalingConfigPtrOutput() BasicYarnAutoscalingConfigPtrOutput {
	return i.ToBasicYarnAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (i *basicYarnAutoscalingConfigPtrType) ToBasicYarnAutoscalingConfigPtrOutputWithContext(ctx context.Context) BasicYarnAutoscalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicYarnAutoscalingConfigPtrOutput)
}

// Basic autoscaling configurations for YARN.
type BasicYarnAutoscalingConfigOutput struct{ *pulumi.OutputState }

func (BasicYarnAutoscalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicYarnAutoscalingConfig)(nil)).Elem()
}

func (o BasicYarnAutoscalingConfigOutput) ToBasicYarnAutoscalingConfigOutput() BasicYarnAutoscalingConfigOutput {
	return o
}

func (o BasicYarnAutoscalingConfigOutput) ToBasicYarnAutoscalingConfigOutputWithContext(ctx context.Context) BasicYarnAutoscalingConfigOutput {
	return o
}

func (o BasicYarnAutoscalingConfigOutput) ToBasicYarnAutoscalingConfigPtrOutput() BasicYarnAutoscalingConfigPtrOutput {
	return o.ToBasicYarnAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (o BasicYarnAutoscalingConfigOutput) ToBasicYarnAutoscalingConfigPtrOutputWithContext(ctx context.Context) BasicYarnAutoscalingConfigPtrOutput {
	return o.ApplyT(func(v BasicYarnAutoscalingConfig) *BasicYarnAutoscalingConfig {
		return &v
	}).(BasicYarnAutoscalingConfigPtrOutput)
}

// Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d.
func (o BasicYarnAutoscalingConfigOutput) GracefulDecommissionTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v BasicYarnAutoscalingConfig) string { return v.GracefulDecommissionTimeout }).(pulumi.StringOutput)
}

// Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
func (o BasicYarnAutoscalingConfigOutput) ScaleDownFactor() pulumi.Float64Output {
	return o.ApplyT(func(v BasicYarnAutoscalingConfig) float64 { return v.ScaleDownFactor }).(pulumi.Float64Output)
}

// Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
func (o BasicYarnAutoscalingConfigOutput) ScaleDownMinWorkerFraction() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BasicYarnAutoscalingConfig) *float64 { return v.ScaleDownMinWorkerFraction }).(pulumi.Float64PtrOutput)
}

// Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
func (o BasicYarnAutoscalingConfigOutput) ScaleUpFactor() pulumi.Float64Output {
	return o.ApplyT(func(v BasicYarnAutoscalingConfig) float64 { return v.ScaleUpFactor }).(pulumi.Float64Output)
}

// Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
func (o BasicYarnAutoscalingConfigOutput) ScaleUpMinWorkerFraction() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BasicYarnAutoscalingConfig) *float64 { return v.ScaleUpMinWorkerFraction }).(pulumi.Float64PtrOutput)
}

type BasicYarnAutoscalingConfigPtrOutput struct{ *pulumi.OutputState }

func (BasicYarnAutoscalingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicYarnAutoscalingConfig)(nil)).Elem()
}

func (o BasicYarnAutoscalingConfigPtrOutput) ToBasicYarnAutoscalingConfigPtrOutput() BasicYarnAutoscalingConfigPtrOutput {
	return o
}

func (o BasicYarnAutoscalingConfigPtrOutput) ToBasicYarnAutoscalingConfigPtrOutputWithContext(ctx context.Context) BasicYarnAutoscalingConfigPtrOutput {
	return o
}

func (o BasicYarnAutoscalingConfigPtrOutput) Elem() BasicYarnAutoscalingConfigOutput {
	return o.ApplyT(func(v *BasicYarnAutoscalingConfig) BasicYarnAutoscalingConfig { return *v }).(BasicYarnAutoscalingConfigOutput)
}

// Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d.
func (o BasicYarnAutoscalingConfigPtrOutput) GracefulDecommissionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasicYarnAutoscalingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.GracefulDecommissionTimeout
	}).(pulumi.StringPtrOutput)
}

// Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
func (o BasicYarnAutoscalingConfigPtrOutput) ScaleDownFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BasicYarnAutoscalingConfig) *float64 {
		if v == nil {
			return nil
		}
		return &v.ScaleDownFactor
	}).(pulumi.Float64PtrOutput)
}

// Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
func (o BasicYarnAutoscalingConfigPtrOutput) ScaleDownMinWorkerFraction() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BasicYarnAutoscalingConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.ScaleDownMinWorkerFraction
	}).(pulumi.Float64PtrOutput)
}

// Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
func (o BasicYarnAutoscalingConfigPtrOutput) ScaleUpFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BasicYarnAutoscalingConfig) *float64 {
		if v == nil {
			return nil
		}
		return &v.ScaleUpFactor
	}).(pulumi.Float64PtrOutput)
}

// Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
func (o BasicYarnAutoscalingConfigPtrOutput) ScaleUpMinWorkerFraction() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BasicYarnAutoscalingConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.ScaleUpMinWorkerFraction
	}).(pulumi.Float64PtrOutput)
}

// Basic autoscaling configurations for YARN.
type BasicYarnAutoscalingConfigResponse struct {
	// Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d.
	GracefulDecommissionTimeout string `pulumi:"gracefulDecommissionTimeout"`
	// Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
	ScaleDownFactor float64 `pulumi:"scaleDownFactor"`
	// Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
	ScaleDownMinWorkerFraction float64 `pulumi:"scaleDownMinWorkerFraction"`
	// Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
	ScaleUpFactor float64 `pulumi:"scaleUpFactor"`
	// Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
	ScaleUpMinWorkerFraction float64 `pulumi:"scaleUpMinWorkerFraction"`
}

// BasicYarnAutoscalingConfigResponseInput is an input type that accepts BasicYarnAutoscalingConfigResponseArgs and BasicYarnAutoscalingConfigResponseOutput values.
// You can construct a concrete instance of `BasicYarnAutoscalingConfigResponseInput` via:
//
//          BasicYarnAutoscalingConfigResponseArgs{...}
type BasicYarnAutoscalingConfigResponseInput interface {
	pulumi.Input

	ToBasicYarnAutoscalingConfigResponseOutput() BasicYarnAutoscalingConfigResponseOutput
	ToBasicYarnAutoscalingConfigResponseOutputWithContext(context.Context) BasicYarnAutoscalingConfigResponseOutput
}

// Basic autoscaling configurations for YARN.
type BasicYarnAutoscalingConfigResponseArgs struct {
	// Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d.
	GracefulDecommissionTimeout pulumi.StringInput `pulumi:"gracefulDecommissionTimeout"`
	// Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
	ScaleDownFactor pulumi.Float64Input `pulumi:"scaleDownFactor"`
	// Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
	ScaleDownMinWorkerFraction pulumi.Float64Input `pulumi:"scaleDownMinWorkerFraction"`
	// Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
	ScaleUpFactor pulumi.Float64Input `pulumi:"scaleUpFactor"`
	// Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
	ScaleUpMinWorkerFraction pulumi.Float64Input `pulumi:"scaleUpMinWorkerFraction"`
}

func (BasicYarnAutoscalingConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicYarnAutoscalingConfigResponse)(nil)).Elem()
}

func (i BasicYarnAutoscalingConfigResponseArgs) ToBasicYarnAutoscalingConfigResponseOutput() BasicYarnAutoscalingConfigResponseOutput {
	return i.ToBasicYarnAutoscalingConfigResponseOutputWithContext(context.Background())
}

func (i BasicYarnAutoscalingConfigResponseArgs) ToBasicYarnAutoscalingConfigResponseOutputWithContext(ctx context.Context) BasicYarnAutoscalingConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicYarnAutoscalingConfigResponseOutput)
}

func (i BasicYarnAutoscalingConfigResponseArgs) ToBasicYarnAutoscalingConfigResponsePtrOutput() BasicYarnAutoscalingConfigResponsePtrOutput {
	return i.ToBasicYarnAutoscalingConfigResponsePtrOutputWithContext(context.Background())
}

func (i BasicYarnAutoscalingConfigResponseArgs) ToBasicYarnAutoscalingConfigResponsePtrOutputWithContext(ctx context.Context) BasicYarnAutoscalingConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicYarnAutoscalingConfigResponseOutput).ToBasicYarnAutoscalingConfigResponsePtrOutputWithContext(ctx)
}

// BasicYarnAutoscalingConfigResponsePtrInput is an input type that accepts BasicYarnAutoscalingConfigResponseArgs, BasicYarnAutoscalingConfigResponsePtr and BasicYarnAutoscalingConfigResponsePtrOutput values.
// You can construct a concrete instance of `BasicYarnAutoscalingConfigResponsePtrInput` via:
//
//          BasicYarnAutoscalingConfigResponseArgs{...}
//
//  or:
//
//          nil
type BasicYarnAutoscalingConfigResponsePtrInput interface {
	pulumi.Input

	ToBasicYarnAutoscalingConfigResponsePtrOutput() BasicYarnAutoscalingConfigResponsePtrOutput
	ToBasicYarnAutoscalingConfigResponsePtrOutputWithContext(context.Context) BasicYarnAutoscalingConfigResponsePtrOutput
}

type basicYarnAutoscalingConfigResponsePtrType BasicYarnAutoscalingConfigResponseArgs

func BasicYarnAutoscalingConfigResponsePtr(v *BasicYarnAutoscalingConfigResponseArgs) BasicYarnAutoscalingConfigResponsePtrInput {
	return (*basicYarnAutoscalingConfigResponsePtrType)(v)
}

func (*basicYarnAutoscalingConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicYarnAutoscalingConfigResponse)(nil)).Elem()
}

func (i *basicYarnAutoscalingConfigResponsePtrType) ToBasicYarnAutoscalingConfigResponsePtrOutput() BasicYarnAutoscalingConfigResponsePtrOutput {
	return i.ToBasicYarnAutoscalingConfigResponsePtrOutputWithContext(context.Background())
}

func (i *basicYarnAutoscalingConfigResponsePtrType) ToBasicYarnAutoscalingConfigResponsePtrOutputWithContext(ctx context.Context) BasicYarnAutoscalingConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicYarnAutoscalingConfigResponsePtrOutput)
}

// Basic autoscaling configurations for YARN.
type BasicYarnAutoscalingConfigResponseOutput struct{ *pulumi.OutputState }

func (BasicYarnAutoscalingConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicYarnAutoscalingConfigResponse)(nil)).Elem()
}

func (o BasicYarnAutoscalingConfigResponseOutput) ToBasicYarnAutoscalingConfigResponseOutput() BasicYarnAutoscalingConfigResponseOutput {
	return o
}

func (o BasicYarnAutoscalingConfigResponseOutput) ToBasicYarnAutoscalingConfigResponseOutputWithContext(ctx context.Context) BasicYarnAutoscalingConfigResponseOutput {
	return o
}

func (o BasicYarnAutoscalingConfigResponseOutput) ToBasicYarnAutoscalingConfigResponsePtrOutput() BasicYarnAutoscalingConfigResponsePtrOutput {
	return o.ToBasicYarnAutoscalingConfigResponsePtrOutputWithContext(context.Background())
}

func (o BasicYarnAutoscalingConfigResponseOutput) ToBasicYarnAutoscalingConfigResponsePtrOutputWithContext(ctx context.Context) BasicYarnAutoscalingConfigResponsePtrOutput {
	return o.ApplyT(func(v BasicYarnAutoscalingConfigResponse) *BasicYarnAutoscalingConfigResponse {
		return &v
	}).(BasicYarnAutoscalingConfigResponsePtrOutput)
}

// Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d.
func (o BasicYarnAutoscalingConfigResponseOutput) GracefulDecommissionTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v BasicYarnAutoscalingConfigResponse) string { return v.GracefulDecommissionTimeout }).(pulumi.StringOutput)
}

// Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
func (o BasicYarnAutoscalingConfigResponseOutput) ScaleDownFactor() pulumi.Float64Output {
	return o.ApplyT(func(v BasicYarnAutoscalingConfigResponse) float64 { return v.ScaleDownFactor }).(pulumi.Float64Output)
}

// Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
func (o BasicYarnAutoscalingConfigResponseOutput) ScaleDownMinWorkerFraction() pulumi.Float64Output {
	return o.ApplyT(func(v BasicYarnAutoscalingConfigResponse) float64 { return v.ScaleDownMinWorkerFraction }).(pulumi.Float64Output)
}

// Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
func (o BasicYarnAutoscalingConfigResponseOutput) ScaleUpFactor() pulumi.Float64Output {
	return o.ApplyT(func(v BasicYarnAutoscalingConfigResponse) float64 { return v.ScaleUpFactor }).(pulumi.Float64Output)
}

// Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
func (o BasicYarnAutoscalingConfigResponseOutput) ScaleUpMinWorkerFraction() pulumi.Float64Output {
	return o.ApplyT(func(v BasicYarnAutoscalingConfigResponse) float64 { return v.ScaleUpMinWorkerFraction }).(pulumi.Float64Output)
}

type BasicYarnAutoscalingConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (BasicYarnAutoscalingConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicYarnAutoscalingConfigResponse)(nil)).Elem()
}

func (o BasicYarnAutoscalingConfigResponsePtrOutput) ToBasicYarnAutoscalingConfigResponsePtrOutput() BasicYarnAutoscalingConfigResponsePtrOutput {
	return o
}

func (o BasicYarnAutoscalingConfigResponsePtrOutput) ToBasicYarnAutoscalingConfigResponsePtrOutputWithContext(ctx context.Context) BasicYarnAutoscalingConfigResponsePtrOutput {
	return o
}

func (o BasicYarnAutoscalingConfigResponsePtrOutput) Elem() BasicYarnAutoscalingConfigResponseOutput {
	return o.ApplyT(func(v *BasicYarnAutoscalingConfigResponse) BasicYarnAutoscalingConfigResponse { return *v }).(BasicYarnAutoscalingConfigResponseOutput)
}

// Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d.
func (o BasicYarnAutoscalingConfigResponsePtrOutput) GracefulDecommissionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasicYarnAutoscalingConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GracefulDecommissionTimeout
	}).(pulumi.StringPtrOutput)
}

// Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
func (o BasicYarnAutoscalingConfigResponsePtrOutput) ScaleDownFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BasicYarnAutoscalingConfigResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ScaleDownFactor
	}).(pulumi.Float64PtrOutput)
}

// Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
func (o BasicYarnAutoscalingConfigResponsePtrOutput) ScaleDownMinWorkerFraction() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BasicYarnAutoscalingConfigResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ScaleDownMinWorkerFraction
	}).(pulumi.Float64PtrOutput)
}

// Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
func (o BasicYarnAutoscalingConfigResponsePtrOutput) ScaleUpFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BasicYarnAutoscalingConfigResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ScaleUpFactor
	}).(pulumi.Float64PtrOutput)
}

// Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
func (o BasicYarnAutoscalingConfigResponsePtrOutput) ScaleUpMinWorkerFraction() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BasicYarnAutoscalingConfigResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ScaleUpMinWorkerFraction
	}).(pulumi.Float64PtrOutput)
}

// Associates members with a role.
type Binding struct {
	// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition *Expr `pulumi:"condition"`
	// Specifies the identities requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
	Members []string `pulumi:"members"`
	// Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner.
	Role *string `pulumi:"role"`
}

// BindingInput is an input type that accepts BindingArgs and BindingOutput values.
// You can construct a concrete instance of `BindingInput` via:
//
//          BindingArgs{...}
type BindingInput interface {
	pulumi.Input

	ToBindingOutput() BindingOutput
	ToBindingOutputWithContext(context.Context) BindingOutput
}

// Associates members with a role.
type BindingArgs struct {
	// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprPtrInput `pulumi:"condition"`
	// Specifies the identities requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (BindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (i BindingArgs) ToBindingOutput() BindingOutput {
	return i.ToBindingOutputWithContext(context.Background())
}

func (i BindingArgs) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingOutput)
}

// BindingArrayInput is an input type that accepts BindingArray and BindingArrayOutput values.
// You can construct a concrete instance of `BindingArrayInput` via:
//
//          BindingArray{ BindingArgs{...} }
type BindingArrayInput interface {
	pulumi.Input

	ToBindingArrayOutput() BindingArrayOutput
	ToBindingArrayOutputWithContext(context.Context) BindingArrayOutput
}

type BindingArray []BindingInput

func (BindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (i BindingArray) ToBindingArrayOutput() BindingArrayOutput {
	return i.ToBindingArrayOutputWithContext(context.Background())
}

func (i BindingArray) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingArrayOutput)
}

// Associates members with a role.
type BindingOutput struct{ *pulumi.OutputState }

func (BindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (o BindingOutput) ToBindingOutput() BindingOutput {
	return o
}

func (o BindingOutput) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return o
}

// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingOutput) Condition() ExprPtrOutput {
	return o.ApplyT(func(v Binding) *Expr { return v.Condition }).(ExprPtrOutput)
}

// Specifies the identities requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
func (o BindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Binding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner.
func (o BindingOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Binding) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type BindingArrayOutput struct{ *pulumi.OutputState }

func (BindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (o BindingArrayOutput) ToBindingArrayOutput() BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) Index(i pulumi.IntInput) BindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Binding {
		return vs[0].([]Binding)[vs[1].(int)]
	}).(BindingOutput)
}

// Associates members with a role.
type BindingResponse struct {
	// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprResponse `pulumi:"condition"`
	// Specifies the identities requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
	Members []string `pulumi:"members"`
	// Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner.
	Role string `pulumi:"role"`
}

// BindingResponseInput is an input type that accepts BindingResponseArgs and BindingResponseOutput values.
// You can construct a concrete instance of `BindingResponseInput` via:
//
//          BindingResponseArgs{...}
type BindingResponseInput interface {
	pulumi.Input

	ToBindingResponseOutput() BindingResponseOutput
	ToBindingResponseOutputWithContext(context.Context) BindingResponseOutput
}

// Associates members with a role.
type BindingResponseArgs struct {
	// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprResponseInput `pulumi:"condition"`
	// Specifies the identities requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner.
	Role pulumi.StringInput `pulumi:"role"`
}

func (BindingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingResponse)(nil)).Elem()
}

func (i BindingResponseArgs) ToBindingResponseOutput() BindingResponseOutput {
	return i.ToBindingResponseOutputWithContext(context.Background())
}

func (i BindingResponseArgs) ToBindingResponseOutputWithContext(ctx context.Context) BindingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingResponseOutput)
}

// BindingResponseArrayInput is an input type that accepts BindingResponseArray and BindingResponseArrayOutput values.
// You can construct a concrete instance of `BindingResponseArrayInput` via:
//
//          BindingResponseArray{ BindingResponseArgs{...} }
type BindingResponseArrayInput interface {
	pulumi.Input

	ToBindingResponseArrayOutput() BindingResponseArrayOutput
	ToBindingResponseArrayOutputWithContext(context.Context) BindingResponseArrayOutput
}

type BindingResponseArray []BindingResponseInput

func (BindingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingResponse)(nil)).Elem()
}

func (i BindingResponseArray) ToBindingResponseArrayOutput() BindingResponseArrayOutput {
	return i.ToBindingResponseArrayOutputWithContext(context.Background())
}

func (i BindingResponseArray) ToBindingResponseArrayOutputWithContext(ctx context.Context) BindingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingResponseArrayOutput)
}

// Associates members with a role.
type BindingResponseOutput struct{ *pulumi.OutputState }

func (BindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingResponse)(nil)).Elem()
}

func (o BindingResponseOutput) ToBindingResponseOutput() BindingResponseOutput {
	return o
}

func (o BindingResponseOutput) ToBindingResponseOutputWithContext(ctx context.Context) BindingResponseOutput {
	return o
}

// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingResponseOutput) Condition() ExprResponseOutput {
	return o.ApplyT(func(v BindingResponse) ExprResponse { return v.Condition }).(ExprResponseOutput)
}

// Specifies the identities requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
func (o BindingResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BindingResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner.
func (o BindingResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v BindingResponse) string { return v.Role }).(pulumi.StringOutput)
}

type BindingResponseArrayOutput struct{ *pulumi.OutputState }

func (BindingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingResponse)(nil)).Elem()
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutput() BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutputWithContext(ctx context.Context) BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) Index(i pulumi.IntInput) BindingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BindingResponse {
		return vs[0].([]BindingResponse)[vs[1].(int)]
	}).(BindingResponseOutput)
}

// The cluster config.
type ClusterConfig struct {
	// Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
	AutoscalingConfig *AutoscalingConfig `pulumi:"autoscalingConfig"`
	// Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging bucket (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
	ConfigBucket *string `pulumi:"configBucket"`
	// Optional. Encryption settings for the cluster.
	EncryptionConfig *EncryptionConfig `pulumi:"encryptionConfig"`
	// Optional. Port/endpoint configuration for this cluster
	EndpointConfig *EndpointConfig `pulumi:"endpointConfig"`
	// Optional. The shared Compute Engine config settings for all instances in a cluster.
	GceClusterConfig *GceClusterConfig `pulumi:"gceClusterConfig"`
	// Optional. BETA. The Kubernetes Engine config for Dataproc clusters deployed to Kubernetes. Setting this is considered mutually exclusive with Compute Engine-based options such as gce_cluster_config, master_config, worker_config, secondary_worker_config, and autoscaling_config.
	GkeClusterConfig *GkeClusterConfig `pulumi:"gkeClusterConfig"`
	// Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi
	InitializationActions []NodeInitializationAction `pulumi:"initializationActions"`
	// Optional. Lifecycle setting for the cluster.
	LifecycleConfig *LifecycleConfig `pulumi:"lifecycleConfig"`
	// Optional. The Compute Engine config settings for the master instance in a cluster.
	MasterConfig *InstanceGroupConfig `pulumi:"masterConfig"`
	// Optional. Metastore configuration.
	MetastoreConfig *MetastoreConfig `pulumi:"metastoreConfig"`
	// Optional. The Compute Engine config settings for additional worker instances in a cluster.
	SecondaryWorkerConfig *InstanceGroupConfig `pulumi:"secondaryWorkerConfig"`
	// Optional. Security settings for the cluster.
	SecurityConfig *SecurityConfig `pulumi:"securityConfig"`
	// Optional. The config settings for software inside the cluster.
	SoftwareConfig *SoftwareConfig `pulumi:"softwareConfig"`
	// Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket. This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
	TempBucket *string `pulumi:"tempBucket"`
	// Optional. The Compute Engine config settings for worker instances in a cluster.
	WorkerConfig *InstanceGroupConfig `pulumi:"workerConfig"`
}

// ClusterConfigInput is an input type that accepts ClusterConfigArgs and ClusterConfigOutput values.
// You can construct a concrete instance of `ClusterConfigInput` via:
//
//          ClusterConfigArgs{...}
type ClusterConfigInput interface {
	pulumi.Input

	ToClusterConfigOutput() ClusterConfigOutput
	ToClusterConfigOutputWithContext(context.Context) ClusterConfigOutput
}

// The cluster config.
type ClusterConfigArgs struct {
	// Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
	AutoscalingConfig AutoscalingConfigPtrInput `pulumi:"autoscalingConfig"`
	// Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging bucket (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
	ConfigBucket pulumi.StringPtrInput `pulumi:"configBucket"`
	// Optional. Encryption settings for the cluster.
	EncryptionConfig EncryptionConfigPtrInput `pulumi:"encryptionConfig"`
	// Optional. Port/endpoint configuration for this cluster
	EndpointConfig EndpointConfigPtrInput `pulumi:"endpointConfig"`
	// Optional. The shared Compute Engine config settings for all instances in a cluster.
	GceClusterConfig GceClusterConfigPtrInput `pulumi:"gceClusterConfig"`
	// Optional. BETA. The Kubernetes Engine config for Dataproc clusters deployed to Kubernetes. Setting this is considered mutually exclusive with Compute Engine-based options such as gce_cluster_config, master_config, worker_config, secondary_worker_config, and autoscaling_config.
	GkeClusterConfig GkeClusterConfigPtrInput `pulumi:"gkeClusterConfig"`
	// Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi
	InitializationActions NodeInitializationActionArrayInput `pulumi:"initializationActions"`
	// Optional. Lifecycle setting for the cluster.
	LifecycleConfig LifecycleConfigPtrInput `pulumi:"lifecycleConfig"`
	// Optional. The Compute Engine config settings for the master instance in a cluster.
	MasterConfig InstanceGroupConfigPtrInput `pulumi:"masterConfig"`
	// Optional. Metastore configuration.
	MetastoreConfig MetastoreConfigPtrInput `pulumi:"metastoreConfig"`
	// Optional. The Compute Engine config settings for additional worker instances in a cluster.
	SecondaryWorkerConfig InstanceGroupConfigPtrInput `pulumi:"secondaryWorkerConfig"`
	// Optional. Security settings for the cluster.
	SecurityConfig SecurityConfigPtrInput `pulumi:"securityConfig"`
	// Optional. The config settings for software inside the cluster.
	SoftwareConfig SoftwareConfigPtrInput `pulumi:"softwareConfig"`
	// Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket. This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
	TempBucket pulumi.StringPtrInput `pulumi:"tempBucket"`
	// Optional. The Compute Engine config settings for worker instances in a cluster.
	WorkerConfig InstanceGroupConfigPtrInput `pulumi:"workerConfig"`
}

func (ClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConfig)(nil)).Elem()
}

func (i ClusterConfigArgs) ToClusterConfigOutput() ClusterConfigOutput {
	return i.ToClusterConfigOutputWithContext(context.Background())
}

func (i ClusterConfigArgs) ToClusterConfigOutputWithContext(ctx context.Context) ClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigOutput)
}

func (i ClusterConfigArgs) ToClusterConfigPtrOutput() ClusterConfigPtrOutput {
	return i.ToClusterConfigPtrOutputWithContext(context.Background())
}

func (i ClusterConfigArgs) ToClusterConfigPtrOutputWithContext(ctx context.Context) ClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigOutput).ToClusterConfigPtrOutputWithContext(ctx)
}

// ClusterConfigPtrInput is an input type that accepts ClusterConfigArgs, ClusterConfigPtr and ClusterConfigPtrOutput values.
// You can construct a concrete instance of `ClusterConfigPtrInput` via:
//
//          ClusterConfigArgs{...}
//
//  or:
//
//          nil
type ClusterConfigPtrInput interface {
	pulumi.Input

	ToClusterConfigPtrOutput() ClusterConfigPtrOutput
	ToClusterConfigPtrOutputWithContext(context.Context) ClusterConfigPtrOutput
}

type clusterConfigPtrType ClusterConfigArgs

func ClusterConfigPtr(v *ClusterConfigArgs) ClusterConfigPtrInput {
	return (*clusterConfigPtrType)(v)
}

func (*clusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConfig)(nil)).Elem()
}

func (i *clusterConfigPtrType) ToClusterConfigPtrOutput() ClusterConfigPtrOutput {
	return i.ToClusterConfigPtrOutputWithContext(context.Background())
}

func (i *clusterConfigPtrType) ToClusterConfigPtrOutputWithContext(ctx context.Context) ClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigPtrOutput)
}

// The cluster config.
type ClusterConfigOutput struct{ *pulumi.OutputState }

func (ClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConfig)(nil)).Elem()
}

func (o ClusterConfigOutput) ToClusterConfigOutput() ClusterConfigOutput {
	return o
}

func (o ClusterConfigOutput) ToClusterConfigOutputWithContext(ctx context.Context) ClusterConfigOutput {
	return o
}

func (o ClusterConfigOutput) ToClusterConfigPtrOutput() ClusterConfigPtrOutput {
	return o.ToClusterConfigPtrOutputWithContext(context.Background())
}

func (o ClusterConfigOutput) ToClusterConfigPtrOutputWithContext(ctx context.Context) ClusterConfigPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *ClusterConfig {
		return &v
	}).(ClusterConfigPtrOutput)
}

// Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
func (o ClusterConfigOutput) AutoscalingConfig() AutoscalingConfigPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *AutoscalingConfig { return v.AutoscalingConfig }).(AutoscalingConfigPtrOutput)
}

// Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging bucket (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
func (o ClusterConfigOutput) ConfigBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *string { return v.ConfigBucket }).(pulumi.StringPtrOutput)
}

// Optional. Encryption settings for the cluster.
func (o ClusterConfigOutput) EncryptionConfig() EncryptionConfigPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *EncryptionConfig { return v.EncryptionConfig }).(EncryptionConfigPtrOutput)
}

// Optional. Port/endpoint configuration for this cluster
func (o ClusterConfigOutput) EndpointConfig() EndpointConfigPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *EndpointConfig { return v.EndpointConfig }).(EndpointConfigPtrOutput)
}

// Optional. The shared Compute Engine config settings for all instances in a cluster.
func (o ClusterConfigOutput) GceClusterConfig() GceClusterConfigPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *GceClusterConfig { return v.GceClusterConfig }).(GceClusterConfigPtrOutput)
}

// Optional. BETA. The Kubernetes Engine config for Dataproc clusters deployed to Kubernetes. Setting this is considered mutually exclusive with Compute Engine-based options such as gce_cluster_config, master_config, worker_config, secondary_worker_config, and autoscaling_config.
func (o ClusterConfigOutput) GkeClusterConfig() GkeClusterConfigPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *GkeClusterConfig { return v.GkeClusterConfig }).(GkeClusterConfigPtrOutput)
}

// Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi
func (o ClusterConfigOutput) InitializationActions() NodeInitializationActionArrayOutput {
	return o.ApplyT(func(v ClusterConfig) []NodeInitializationAction { return v.InitializationActions }).(NodeInitializationActionArrayOutput)
}

// Optional. Lifecycle setting for the cluster.
func (o ClusterConfigOutput) LifecycleConfig() LifecycleConfigPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *LifecycleConfig { return v.LifecycleConfig }).(LifecycleConfigPtrOutput)
}

// Optional. The Compute Engine config settings for the master instance in a cluster.
func (o ClusterConfigOutput) MasterConfig() InstanceGroupConfigPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *InstanceGroupConfig { return v.MasterConfig }).(InstanceGroupConfigPtrOutput)
}

// Optional. Metastore configuration.
func (o ClusterConfigOutput) MetastoreConfig() MetastoreConfigPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *MetastoreConfig { return v.MetastoreConfig }).(MetastoreConfigPtrOutput)
}

// Optional. The Compute Engine config settings for additional worker instances in a cluster.
func (o ClusterConfigOutput) SecondaryWorkerConfig() InstanceGroupConfigPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *InstanceGroupConfig { return v.SecondaryWorkerConfig }).(InstanceGroupConfigPtrOutput)
}

// Optional. Security settings for the cluster.
func (o ClusterConfigOutput) SecurityConfig() SecurityConfigPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *SecurityConfig { return v.SecurityConfig }).(SecurityConfigPtrOutput)
}

// Optional. The config settings for software inside the cluster.
func (o ClusterConfigOutput) SoftwareConfig() SoftwareConfigPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *SoftwareConfig { return v.SoftwareConfig }).(SoftwareConfigPtrOutput)
}

// Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket. This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
func (o ClusterConfigOutput) TempBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *string { return v.TempBucket }).(pulumi.StringPtrOutput)
}

// Optional. The Compute Engine config settings for worker instances in a cluster.
func (o ClusterConfigOutput) WorkerConfig() InstanceGroupConfigPtrOutput {
	return o.ApplyT(func(v ClusterConfig) *InstanceGroupConfig { return v.WorkerConfig }).(InstanceGroupConfigPtrOutput)
}

type ClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConfig)(nil)).Elem()
}

func (o ClusterConfigPtrOutput) ToClusterConfigPtrOutput() ClusterConfigPtrOutput {
	return o
}

func (o ClusterConfigPtrOutput) ToClusterConfigPtrOutputWithContext(ctx context.Context) ClusterConfigPtrOutput {
	return o
}

func (o ClusterConfigPtrOutput) Elem() ClusterConfigOutput {
	return o.ApplyT(func(v *ClusterConfig) ClusterConfig { return *v }).(ClusterConfigOutput)
}

// Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
func (o ClusterConfigPtrOutput) AutoscalingConfig() AutoscalingConfigPtrOutput {
	return o.ApplyT(func(v *ClusterConfig) *AutoscalingConfig {
		if v == nil {
			return nil
		}
		return v.AutoscalingConfig
	}).(AutoscalingConfigPtrOutput)
}

// Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging bucket (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
func (o ClusterConfigPtrOutput) ConfigBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConfigBucket
	}).(pulumi.StringPtrOutput)
}

// Optional. Encryption settings for the cluster.
func (o ClusterConfigPtrOutput) EncryptionConfig() EncryptionConfigPtrOutput {
	return o.ApplyT(func(v *ClusterConfig) *EncryptionConfig {
		if v == nil {
			return nil
		}
		return v.EncryptionConfig
	}).(EncryptionConfigPtrOutput)
}

// Optional. Port/endpoint configuration for this cluster
func (o ClusterConfigPtrOutput) EndpointConfig() EndpointConfigPtrOutput {
	return o.ApplyT(func(v *ClusterConfig) *EndpointConfig {
		if v == nil {
			return nil
		}
		return v.EndpointConfig
	}).(EndpointConfigPtrOutput)
}

// Optional. The shared Compute Engine config settings for all instances in a cluster.
func (o ClusterConfigPtrOutput) GceClusterConfig() GceClusterConfigPtrOutput {
	return o.ApplyT(func(v *ClusterConfig) *GceClusterConfig {
		if v == nil {
			return nil
		}
		return v.GceClusterConfig
	}).(GceClusterConfigPtrOutput)
}

// Optional. BETA. The Kubernetes Engine config for Dataproc clusters deployed to Kubernetes. Setting this is considered mutually exclusive with Compute Engine-based options such as gce_cluster_config, master_config, worker_config, secondary_worker_config, and autoscaling_config.
func (o ClusterConfigPtrOutput) GkeClusterConfig() GkeClusterConfigPtrOutput {
	return o.ApplyT(func(v *ClusterConfig) *GkeClusterConfig {
		if v == nil {
			return nil
		}
		return v.GkeClusterConfig
	}).(GkeClusterConfigPtrOutput)
}

// Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi
func (o ClusterConfigPtrOutput) InitializationActions() NodeInitializationActionArrayOutput {
	return o.ApplyT(func(v *ClusterConfig) []NodeInitializationAction {
		if v == nil {
			return nil
		}
		return v.InitializationActions
	}).(NodeInitializationActionArrayOutput)
}

// Optional. Lifecycle setting for the cluster.
func (o ClusterConfigPtrOutput) LifecycleConfig() LifecycleConfigPtrOutput {
	return o.ApplyT(func(v *ClusterConfig) *LifecycleConfig {
		if v == nil {
			return nil
		}
		return v.LifecycleConfig
	}).(LifecycleConfigPtrOutput)
}

// Optional. The Compute Engine config settings for the master instance in a cluster.
func (o ClusterConfigPtrOutput) MasterConfig() InstanceGroupConfigPtrOutput {
	return o.ApplyT(func(v *ClusterConfig) *InstanceGroupConfig {
		if v == nil {
			return nil
		}
		return v.MasterConfig
	}).(InstanceGroupConfigPtrOutput)
}

// Optional. Metastore configuration.
func (o ClusterConfigPtrOutput) MetastoreConfig() MetastoreConfigPtrOutput {
	return o.ApplyT(func(v *ClusterConfig) *MetastoreConfig {
		if v == nil {
			return nil
		}
		return v.MetastoreConfig
	}).(MetastoreConfigPtrOutput)
}

// Optional. The Compute Engine config settings for additional worker instances in a cluster.
func (o ClusterConfigPtrOutput) SecondaryWorkerConfig() InstanceGroupConfigPtrOutput {
	return o.ApplyT(func(v *ClusterConfig) *InstanceGroupConfig {
		if v == nil {
			return nil
		}
		return v.SecondaryWorkerConfig
	}).(InstanceGroupConfigPtrOutput)
}

// Optional. Security settings for the cluster.
func (o ClusterConfigPtrOutput) SecurityConfig() SecurityConfigPtrOutput {
	return o.ApplyT(func(v *ClusterConfig) *SecurityConfig {
		if v == nil {
			return nil
		}
		return v.SecurityConfig
	}).(SecurityConfigPtrOutput)
}

// Optional. The config settings for software inside the cluster.
func (o ClusterConfigPtrOutput) SoftwareConfig() SoftwareConfigPtrOutput {
	return o.ApplyT(func(v *ClusterConfig) *SoftwareConfig {
		if v == nil {
			return nil
		}
		return v.SoftwareConfig
	}).(SoftwareConfigPtrOutput)
}

// Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket. This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
func (o ClusterConfigPtrOutput) TempBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.TempBucket
	}).(pulumi.StringPtrOutput)
}

// Optional. The Compute Engine config settings for worker instances in a cluster.
func (o ClusterConfigPtrOutput) WorkerConfig() InstanceGroupConfigPtrOutput {
	return o.ApplyT(func(v *ClusterConfig) *InstanceGroupConfig {
		if v == nil {
			return nil
		}
		return v.WorkerConfig
	}).(InstanceGroupConfigPtrOutput)
}

// The cluster config.
type ClusterConfigResponse struct {
	// Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
	AutoscalingConfig AutoscalingConfigResponse `pulumi:"autoscalingConfig"`
	// Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging bucket (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
	ConfigBucket string `pulumi:"configBucket"`
	// Optional. Encryption settings for the cluster.
	EncryptionConfig EncryptionConfigResponse `pulumi:"encryptionConfig"`
	// Optional. Port/endpoint configuration for this cluster
	EndpointConfig EndpointConfigResponse `pulumi:"endpointConfig"`
	// Optional. The shared Compute Engine config settings for all instances in a cluster.
	GceClusterConfig GceClusterConfigResponse `pulumi:"gceClusterConfig"`
	// Optional. BETA. The Kubernetes Engine config for Dataproc clusters deployed to Kubernetes. Setting this is considered mutually exclusive with Compute Engine-based options such as gce_cluster_config, master_config, worker_config, secondary_worker_config, and autoscaling_config.
	GkeClusterConfig GkeClusterConfigResponse `pulumi:"gkeClusterConfig"`
	// Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi
	InitializationActions []NodeInitializationActionResponse `pulumi:"initializationActions"`
	// Optional. Lifecycle setting for the cluster.
	LifecycleConfig LifecycleConfigResponse `pulumi:"lifecycleConfig"`
	// Optional. The Compute Engine config settings for the master instance in a cluster.
	MasterConfig InstanceGroupConfigResponse `pulumi:"masterConfig"`
	// Optional. Metastore configuration.
	MetastoreConfig MetastoreConfigResponse `pulumi:"metastoreConfig"`
	// Optional. The Compute Engine config settings for additional worker instances in a cluster.
	SecondaryWorkerConfig InstanceGroupConfigResponse `pulumi:"secondaryWorkerConfig"`
	// Optional. Security settings for the cluster.
	SecurityConfig SecurityConfigResponse `pulumi:"securityConfig"`
	// Optional. The config settings for software inside the cluster.
	SoftwareConfig SoftwareConfigResponse `pulumi:"softwareConfig"`
	// Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket. This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
	TempBucket string `pulumi:"tempBucket"`
	// Optional. The Compute Engine config settings for worker instances in a cluster.
	WorkerConfig InstanceGroupConfigResponse `pulumi:"workerConfig"`
}

// ClusterConfigResponseInput is an input type that accepts ClusterConfigResponseArgs and ClusterConfigResponseOutput values.
// You can construct a concrete instance of `ClusterConfigResponseInput` via:
//
//          ClusterConfigResponseArgs{...}
type ClusterConfigResponseInput interface {
	pulumi.Input

	ToClusterConfigResponseOutput() ClusterConfigResponseOutput
	ToClusterConfigResponseOutputWithContext(context.Context) ClusterConfigResponseOutput
}

// The cluster config.
type ClusterConfigResponseArgs struct {
	// Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
	AutoscalingConfig AutoscalingConfigResponseInput `pulumi:"autoscalingConfig"`
	// Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging bucket (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
	ConfigBucket pulumi.StringInput `pulumi:"configBucket"`
	// Optional. Encryption settings for the cluster.
	EncryptionConfig EncryptionConfigResponseInput `pulumi:"encryptionConfig"`
	// Optional. Port/endpoint configuration for this cluster
	EndpointConfig EndpointConfigResponseInput `pulumi:"endpointConfig"`
	// Optional. The shared Compute Engine config settings for all instances in a cluster.
	GceClusterConfig GceClusterConfigResponseInput `pulumi:"gceClusterConfig"`
	// Optional. BETA. The Kubernetes Engine config for Dataproc clusters deployed to Kubernetes. Setting this is considered mutually exclusive with Compute Engine-based options such as gce_cluster_config, master_config, worker_config, secondary_worker_config, and autoscaling_config.
	GkeClusterConfig GkeClusterConfigResponseInput `pulumi:"gkeClusterConfig"`
	// Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi
	InitializationActions NodeInitializationActionResponseArrayInput `pulumi:"initializationActions"`
	// Optional. Lifecycle setting for the cluster.
	LifecycleConfig LifecycleConfigResponseInput `pulumi:"lifecycleConfig"`
	// Optional. The Compute Engine config settings for the master instance in a cluster.
	MasterConfig InstanceGroupConfigResponseInput `pulumi:"masterConfig"`
	// Optional. Metastore configuration.
	MetastoreConfig MetastoreConfigResponseInput `pulumi:"metastoreConfig"`
	// Optional. The Compute Engine config settings for additional worker instances in a cluster.
	SecondaryWorkerConfig InstanceGroupConfigResponseInput `pulumi:"secondaryWorkerConfig"`
	// Optional. Security settings for the cluster.
	SecurityConfig SecurityConfigResponseInput `pulumi:"securityConfig"`
	// Optional. The config settings for software inside the cluster.
	SoftwareConfig SoftwareConfigResponseInput `pulumi:"softwareConfig"`
	// Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket. This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
	TempBucket pulumi.StringInput `pulumi:"tempBucket"`
	// Optional. The Compute Engine config settings for worker instances in a cluster.
	WorkerConfig InstanceGroupConfigResponseInput `pulumi:"workerConfig"`
}

func (ClusterConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConfigResponse)(nil)).Elem()
}

func (i ClusterConfigResponseArgs) ToClusterConfigResponseOutput() ClusterConfigResponseOutput {
	return i.ToClusterConfigResponseOutputWithContext(context.Background())
}

func (i ClusterConfigResponseArgs) ToClusterConfigResponseOutputWithContext(ctx context.Context) ClusterConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigResponseOutput)
}

func (i ClusterConfigResponseArgs) ToClusterConfigResponsePtrOutput() ClusterConfigResponsePtrOutput {
	return i.ToClusterConfigResponsePtrOutputWithContext(context.Background())
}

func (i ClusterConfigResponseArgs) ToClusterConfigResponsePtrOutputWithContext(ctx context.Context) ClusterConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigResponseOutput).ToClusterConfigResponsePtrOutputWithContext(ctx)
}

// ClusterConfigResponsePtrInput is an input type that accepts ClusterConfigResponseArgs, ClusterConfigResponsePtr and ClusterConfigResponsePtrOutput values.
// You can construct a concrete instance of `ClusterConfigResponsePtrInput` via:
//
//          ClusterConfigResponseArgs{...}
//
//  or:
//
//          nil
type ClusterConfigResponsePtrInput interface {
	pulumi.Input

	ToClusterConfigResponsePtrOutput() ClusterConfigResponsePtrOutput
	ToClusterConfigResponsePtrOutputWithContext(context.Context) ClusterConfigResponsePtrOutput
}

type clusterConfigResponsePtrType ClusterConfigResponseArgs

func ClusterConfigResponsePtr(v *ClusterConfigResponseArgs) ClusterConfigResponsePtrInput {
	return (*clusterConfigResponsePtrType)(v)
}

func (*clusterConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConfigResponse)(nil)).Elem()
}

func (i *clusterConfigResponsePtrType) ToClusterConfigResponsePtrOutput() ClusterConfigResponsePtrOutput {
	return i.ToClusterConfigResponsePtrOutputWithContext(context.Background())
}

func (i *clusterConfigResponsePtrType) ToClusterConfigResponsePtrOutputWithContext(ctx context.Context) ClusterConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigResponsePtrOutput)
}

// The cluster config.
type ClusterConfigResponseOutput struct{ *pulumi.OutputState }

func (ClusterConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConfigResponse)(nil)).Elem()
}

func (o ClusterConfigResponseOutput) ToClusterConfigResponseOutput() ClusterConfigResponseOutput {
	return o
}

func (o ClusterConfigResponseOutput) ToClusterConfigResponseOutputWithContext(ctx context.Context) ClusterConfigResponseOutput {
	return o
}

func (o ClusterConfigResponseOutput) ToClusterConfigResponsePtrOutput() ClusterConfigResponsePtrOutput {
	return o.ToClusterConfigResponsePtrOutputWithContext(context.Background())
}

func (o ClusterConfigResponseOutput) ToClusterConfigResponsePtrOutputWithContext(ctx context.Context) ClusterConfigResponsePtrOutput {
	return o.ApplyT(func(v ClusterConfigResponse) *ClusterConfigResponse {
		return &v
	}).(ClusterConfigResponsePtrOutput)
}

// Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
func (o ClusterConfigResponseOutput) AutoscalingConfig() AutoscalingConfigResponseOutput {
	return o.ApplyT(func(v ClusterConfigResponse) AutoscalingConfigResponse { return v.AutoscalingConfig }).(AutoscalingConfigResponseOutput)
}

// Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging bucket (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
func (o ClusterConfigResponseOutput) ConfigBucket() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterConfigResponse) string { return v.ConfigBucket }).(pulumi.StringOutput)
}

// Optional. Encryption settings for the cluster.
func (o ClusterConfigResponseOutput) EncryptionConfig() EncryptionConfigResponseOutput {
	return o.ApplyT(func(v ClusterConfigResponse) EncryptionConfigResponse { return v.EncryptionConfig }).(EncryptionConfigResponseOutput)
}

// Optional. Port/endpoint configuration for this cluster
func (o ClusterConfigResponseOutput) EndpointConfig() EndpointConfigResponseOutput {
	return o.ApplyT(func(v ClusterConfigResponse) EndpointConfigResponse { return v.EndpointConfig }).(EndpointConfigResponseOutput)
}

// Optional. The shared Compute Engine config settings for all instances in a cluster.
func (o ClusterConfigResponseOutput) GceClusterConfig() GceClusterConfigResponseOutput {
	return o.ApplyT(func(v ClusterConfigResponse) GceClusterConfigResponse { return v.GceClusterConfig }).(GceClusterConfigResponseOutput)
}

// Optional. BETA. The Kubernetes Engine config for Dataproc clusters deployed to Kubernetes. Setting this is considered mutually exclusive with Compute Engine-based options such as gce_cluster_config, master_config, worker_config, secondary_worker_config, and autoscaling_config.
func (o ClusterConfigResponseOutput) GkeClusterConfig() GkeClusterConfigResponseOutput {
	return o.ApplyT(func(v ClusterConfigResponse) GkeClusterConfigResponse { return v.GkeClusterConfig }).(GkeClusterConfigResponseOutput)
}

// Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi
func (o ClusterConfigResponseOutput) InitializationActions() NodeInitializationActionResponseArrayOutput {
	return o.ApplyT(func(v ClusterConfigResponse) []NodeInitializationActionResponse { return v.InitializationActions }).(NodeInitializationActionResponseArrayOutput)
}

// Optional. Lifecycle setting for the cluster.
func (o ClusterConfigResponseOutput) LifecycleConfig() LifecycleConfigResponseOutput {
	return o.ApplyT(func(v ClusterConfigResponse) LifecycleConfigResponse { return v.LifecycleConfig }).(LifecycleConfigResponseOutput)
}

// Optional. The Compute Engine config settings for the master instance in a cluster.
func (o ClusterConfigResponseOutput) MasterConfig() InstanceGroupConfigResponseOutput {
	return o.ApplyT(func(v ClusterConfigResponse) InstanceGroupConfigResponse { return v.MasterConfig }).(InstanceGroupConfigResponseOutput)
}

// Optional. Metastore configuration.
func (o ClusterConfigResponseOutput) MetastoreConfig() MetastoreConfigResponseOutput {
	return o.ApplyT(func(v ClusterConfigResponse) MetastoreConfigResponse { return v.MetastoreConfig }).(MetastoreConfigResponseOutput)
}

// Optional. The Compute Engine config settings for additional worker instances in a cluster.
func (o ClusterConfigResponseOutput) SecondaryWorkerConfig() InstanceGroupConfigResponseOutput {
	return o.ApplyT(func(v ClusterConfigResponse) InstanceGroupConfigResponse { return v.SecondaryWorkerConfig }).(InstanceGroupConfigResponseOutput)
}

// Optional. Security settings for the cluster.
func (o ClusterConfigResponseOutput) SecurityConfig() SecurityConfigResponseOutput {
	return o.ApplyT(func(v ClusterConfigResponse) SecurityConfigResponse { return v.SecurityConfig }).(SecurityConfigResponseOutput)
}

// Optional. The config settings for software inside the cluster.
func (o ClusterConfigResponseOutput) SoftwareConfig() SoftwareConfigResponseOutput {
	return o.ApplyT(func(v ClusterConfigResponse) SoftwareConfigResponse { return v.SoftwareConfig }).(SoftwareConfigResponseOutput)
}

// Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket. This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
func (o ClusterConfigResponseOutput) TempBucket() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterConfigResponse) string { return v.TempBucket }).(pulumi.StringOutput)
}

// Optional. The Compute Engine config settings for worker instances in a cluster.
func (o ClusterConfigResponseOutput) WorkerConfig() InstanceGroupConfigResponseOutput {
	return o.ApplyT(func(v ClusterConfigResponse) InstanceGroupConfigResponse { return v.WorkerConfig }).(InstanceGroupConfigResponseOutput)
}

type ClusterConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ClusterConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConfigResponse)(nil)).Elem()
}

func (o ClusterConfigResponsePtrOutput) ToClusterConfigResponsePtrOutput() ClusterConfigResponsePtrOutput {
	return o
}

func (o ClusterConfigResponsePtrOutput) ToClusterConfigResponsePtrOutputWithContext(ctx context.Context) ClusterConfigResponsePtrOutput {
	return o
}

func (o ClusterConfigResponsePtrOutput) Elem() ClusterConfigResponseOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) ClusterConfigResponse { return *v }).(ClusterConfigResponseOutput)
}

// Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
func (o ClusterConfigResponsePtrOutput) AutoscalingConfig() AutoscalingConfigResponsePtrOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) *AutoscalingConfigResponse {
		if v == nil {
			return nil
		}
		return &v.AutoscalingConfig
	}).(AutoscalingConfigResponsePtrOutput)
}

// Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging bucket (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
func (o ClusterConfigResponsePtrOutput) ConfigBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConfigBucket
	}).(pulumi.StringPtrOutput)
}

// Optional. Encryption settings for the cluster.
func (o ClusterConfigResponsePtrOutput) EncryptionConfig() EncryptionConfigResponsePtrOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) *EncryptionConfigResponse {
		if v == nil {
			return nil
		}
		return &v.EncryptionConfig
	}).(EncryptionConfigResponsePtrOutput)
}

// Optional. Port/endpoint configuration for this cluster
func (o ClusterConfigResponsePtrOutput) EndpointConfig() EndpointConfigResponsePtrOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) *EndpointConfigResponse {
		if v == nil {
			return nil
		}
		return &v.EndpointConfig
	}).(EndpointConfigResponsePtrOutput)
}

// Optional. The shared Compute Engine config settings for all instances in a cluster.
func (o ClusterConfigResponsePtrOutput) GceClusterConfig() GceClusterConfigResponsePtrOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) *GceClusterConfigResponse {
		if v == nil {
			return nil
		}
		return &v.GceClusterConfig
	}).(GceClusterConfigResponsePtrOutput)
}

// Optional. BETA. The Kubernetes Engine config for Dataproc clusters deployed to Kubernetes. Setting this is considered mutually exclusive with Compute Engine-based options such as gce_cluster_config, master_config, worker_config, secondary_worker_config, and autoscaling_config.
func (o ClusterConfigResponsePtrOutput) GkeClusterConfig() GkeClusterConfigResponsePtrOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) *GkeClusterConfigResponse {
		if v == nil {
			return nil
		}
		return &v.GkeClusterConfig
	}).(GkeClusterConfigResponsePtrOutput)
}

// Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi
func (o ClusterConfigResponsePtrOutput) InitializationActions() NodeInitializationActionResponseArrayOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) []NodeInitializationActionResponse {
		if v == nil {
			return nil
		}
		return v.InitializationActions
	}).(NodeInitializationActionResponseArrayOutput)
}

// Optional. Lifecycle setting for the cluster.
func (o ClusterConfigResponsePtrOutput) LifecycleConfig() LifecycleConfigResponsePtrOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) *LifecycleConfigResponse {
		if v == nil {
			return nil
		}
		return &v.LifecycleConfig
	}).(LifecycleConfigResponsePtrOutput)
}

// Optional. The Compute Engine config settings for the master instance in a cluster.
func (o ClusterConfigResponsePtrOutput) MasterConfig() InstanceGroupConfigResponsePtrOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) *InstanceGroupConfigResponse {
		if v == nil {
			return nil
		}
		return &v.MasterConfig
	}).(InstanceGroupConfigResponsePtrOutput)
}

// Optional. Metastore configuration.
func (o ClusterConfigResponsePtrOutput) MetastoreConfig() MetastoreConfigResponsePtrOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) *MetastoreConfigResponse {
		if v == nil {
			return nil
		}
		return &v.MetastoreConfig
	}).(MetastoreConfigResponsePtrOutput)
}

// Optional. The Compute Engine config settings for additional worker instances in a cluster.
func (o ClusterConfigResponsePtrOutput) SecondaryWorkerConfig() InstanceGroupConfigResponsePtrOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) *InstanceGroupConfigResponse {
		if v == nil {
			return nil
		}
		return &v.SecondaryWorkerConfig
	}).(InstanceGroupConfigResponsePtrOutput)
}

// Optional. Security settings for the cluster.
func (o ClusterConfigResponsePtrOutput) SecurityConfig() SecurityConfigResponsePtrOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) *SecurityConfigResponse {
		if v == nil {
			return nil
		}
		return &v.SecurityConfig
	}).(SecurityConfigResponsePtrOutput)
}

// Optional. The config settings for software inside the cluster.
func (o ClusterConfigResponsePtrOutput) SoftwareConfig() SoftwareConfigResponsePtrOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) *SoftwareConfigResponse {
		if v == nil {
			return nil
		}
		return &v.SoftwareConfig
	}).(SoftwareConfigResponsePtrOutput)
}

// Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket. This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.
func (o ClusterConfigResponsePtrOutput) TempBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TempBucket
	}).(pulumi.StringPtrOutput)
}

// Optional. The Compute Engine config settings for worker instances in a cluster.
func (o ClusterConfigResponsePtrOutput) WorkerConfig() InstanceGroupConfigResponsePtrOutput {
	return o.ApplyT(func(v *ClusterConfigResponse) *InstanceGroupConfigResponse {
		if v == nil {
			return nil
		}
		return &v.WorkerConfig
	}).(InstanceGroupConfigResponsePtrOutput)
}

// Contains cluster daemon metrics, such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.
type ClusterMetricsResponse struct {
	// The HDFS metrics.
	HdfsMetrics map[string]string `pulumi:"hdfsMetrics"`
	// The YARN metrics.
	YarnMetrics map[string]string `pulumi:"yarnMetrics"`
}

// ClusterMetricsResponseInput is an input type that accepts ClusterMetricsResponseArgs and ClusterMetricsResponseOutput values.
// You can construct a concrete instance of `ClusterMetricsResponseInput` via:
//
//          ClusterMetricsResponseArgs{...}
type ClusterMetricsResponseInput interface {
	pulumi.Input

	ToClusterMetricsResponseOutput() ClusterMetricsResponseOutput
	ToClusterMetricsResponseOutputWithContext(context.Context) ClusterMetricsResponseOutput
}

// Contains cluster daemon metrics, such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.
type ClusterMetricsResponseArgs struct {
	// The HDFS metrics.
	HdfsMetrics pulumi.StringMapInput `pulumi:"hdfsMetrics"`
	// The YARN metrics.
	YarnMetrics pulumi.StringMapInput `pulumi:"yarnMetrics"`
}

func (ClusterMetricsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMetricsResponse)(nil)).Elem()
}

func (i ClusterMetricsResponseArgs) ToClusterMetricsResponseOutput() ClusterMetricsResponseOutput {
	return i.ToClusterMetricsResponseOutputWithContext(context.Background())
}

func (i ClusterMetricsResponseArgs) ToClusterMetricsResponseOutputWithContext(ctx context.Context) ClusterMetricsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMetricsResponseOutput)
}

func (i ClusterMetricsResponseArgs) ToClusterMetricsResponsePtrOutput() ClusterMetricsResponsePtrOutput {
	return i.ToClusterMetricsResponsePtrOutputWithContext(context.Background())
}

func (i ClusterMetricsResponseArgs) ToClusterMetricsResponsePtrOutputWithContext(ctx context.Context) ClusterMetricsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMetricsResponseOutput).ToClusterMetricsResponsePtrOutputWithContext(ctx)
}

// ClusterMetricsResponsePtrInput is an input type that accepts ClusterMetricsResponseArgs, ClusterMetricsResponsePtr and ClusterMetricsResponsePtrOutput values.
// You can construct a concrete instance of `ClusterMetricsResponsePtrInput` via:
//
//          ClusterMetricsResponseArgs{...}
//
//  or:
//
//          nil
type ClusterMetricsResponsePtrInput interface {
	pulumi.Input

	ToClusterMetricsResponsePtrOutput() ClusterMetricsResponsePtrOutput
	ToClusterMetricsResponsePtrOutputWithContext(context.Context) ClusterMetricsResponsePtrOutput
}

type clusterMetricsResponsePtrType ClusterMetricsResponseArgs

func ClusterMetricsResponsePtr(v *ClusterMetricsResponseArgs) ClusterMetricsResponsePtrInput {
	return (*clusterMetricsResponsePtrType)(v)
}

func (*clusterMetricsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMetricsResponse)(nil)).Elem()
}

func (i *clusterMetricsResponsePtrType) ToClusterMetricsResponsePtrOutput() ClusterMetricsResponsePtrOutput {
	return i.ToClusterMetricsResponsePtrOutputWithContext(context.Background())
}

func (i *clusterMetricsResponsePtrType) ToClusterMetricsResponsePtrOutputWithContext(ctx context.Context) ClusterMetricsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMetricsResponsePtrOutput)
}

// Contains cluster daemon metrics, such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.
type ClusterMetricsResponseOutput struct{ *pulumi.OutputState }

func (ClusterMetricsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMetricsResponse)(nil)).Elem()
}

func (o ClusterMetricsResponseOutput) ToClusterMetricsResponseOutput() ClusterMetricsResponseOutput {
	return o
}

func (o ClusterMetricsResponseOutput) ToClusterMetricsResponseOutputWithContext(ctx context.Context) ClusterMetricsResponseOutput {
	return o
}

func (o ClusterMetricsResponseOutput) ToClusterMetricsResponsePtrOutput() ClusterMetricsResponsePtrOutput {
	return o.ToClusterMetricsResponsePtrOutputWithContext(context.Background())
}

func (o ClusterMetricsResponseOutput) ToClusterMetricsResponsePtrOutputWithContext(ctx context.Context) ClusterMetricsResponsePtrOutput {
	return o.ApplyT(func(v ClusterMetricsResponse) *ClusterMetricsResponse {
		return &v
	}).(ClusterMetricsResponsePtrOutput)
}

// The HDFS metrics.
func (o ClusterMetricsResponseOutput) HdfsMetrics() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterMetricsResponse) map[string]string { return v.HdfsMetrics }).(pulumi.StringMapOutput)
}

// The YARN metrics.
func (o ClusterMetricsResponseOutput) YarnMetrics() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterMetricsResponse) map[string]string { return v.YarnMetrics }).(pulumi.StringMapOutput)
}

type ClusterMetricsResponsePtrOutput struct{ *pulumi.OutputState }

func (ClusterMetricsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMetricsResponse)(nil)).Elem()
}

func (o ClusterMetricsResponsePtrOutput) ToClusterMetricsResponsePtrOutput() ClusterMetricsResponsePtrOutput {
	return o
}

func (o ClusterMetricsResponsePtrOutput) ToClusterMetricsResponsePtrOutputWithContext(ctx context.Context) ClusterMetricsResponsePtrOutput {
	return o
}

func (o ClusterMetricsResponsePtrOutput) Elem() ClusterMetricsResponseOutput {
	return o.ApplyT(func(v *ClusterMetricsResponse) ClusterMetricsResponse { return *v }).(ClusterMetricsResponseOutput)
}

// The HDFS metrics.
func (o ClusterMetricsResponsePtrOutput) HdfsMetrics() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterMetricsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.HdfsMetrics
	}).(pulumi.StringMapOutput)
}

// The YARN metrics.
func (o ClusterMetricsResponsePtrOutput) YarnMetrics() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterMetricsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.YarnMetrics
	}).(pulumi.StringMapOutput)
}

// A selector that chooses target cluster for jobs based on metadata.
type ClusterSelector struct {
	// The cluster labels. Cluster must have all labels to match.
	ClusterLabels map[string]string `pulumi:"clusterLabels"`
	// Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
	Zone *string `pulumi:"zone"`
}

// ClusterSelectorInput is an input type that accepts ClusterSelectorArgs and ClusterSelectorOutput values.
// You can construct a concrete instance of `ClusterSelectorInput` via:
//
//          ClusterSelectorArgs{...}
type ClusterSelectorInput interface {
	pulumi.Input

	ToClusterSelectorOutput() ClusterSelectorOutput
	ToClusterSelectorOutputWithContext(context.Context) ClusterSelectorOutput
}

// A selector that chooses target cluster for jobs based on metadata.
type ClusterSelectorArgs struct {
	// The cluster labels. Cluster must have all labels to match.
	ClusterLabels pulumi.StringMapInput `pulumi:"clusterLabels"`
	// Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (ClusterSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSelector)(nil)).Elem()
}

func (i ClusterSelectorArgs) ToClusterSelectorOutput() ClusterSelectorOutput {
	return i.ToClusterSelectorOutputWithContext(context.Background())
}

func (i ClusterSelectorArgs) ToClusterSelectorOutputWithContext(ctx context.Context) ClusterSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSelectorOutput)
}

func (i ClusterSelectorArgs) ToClusterSelectorPtrOutput() ClusterSelectorPtrOutput {
	return i.ToClusterSelectorPtrOutputWithContext(context.Background())
}

func (i ClusterSelectorArgs) ToClusterSelectorPtrOutputWithContext(ctx context.Context) ClusterSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSelectorOutput).ToClusterSelectorPtrOutputWithContext(ctx)
}

// ClusterSelectorPtrInput is an input type that accepts ClusterSelectorArgs, ClusterSelectorPtr and ClusterSelectorPtrOutput values.
// You can construct a concrete instance of `ClusterSelectorPtrInput` via:
//
//          ClusterSelectorArgs{...}
//
//  or:
//
//          nil
type ClusterSelectorPtrInput interface {
	pulumi.Input

	ToClusterSelectorPtrOutput() ClusterSelectorPtrOutput
	ToClusterSelectorPtrOutputWithContext(context.Context) ClusterSelectorPtrOutput
}

type clusterSelectorPtrType ClusterSelectorArgs

func ClusterSelectorPtr(v *ClusterSelectorArgs) ClusterSelectorPtrInput {
	return (*clusterSelectorPtrType)(v)
}

func (*clusterSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSelector)(nil)).Elem()
}

func (i *clusterSelectorPtrType) ToClusterSelectorPtrOutput() ClusterSelectorPtrOutput {
	return i.ToClusterSelectorPtrOutputWithContext(context.Background())
}

func (i *clusterSelectorPtrType) ToClusterSelectorPtrOutputWithContext(ctx context.Context) ClusterSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSelectorPtrOutput)
}

// A selector that chooses target cluster for jobs based on metadata.
type ClusterSelectorOutput struct{ *pulumi.OutputState }

func (ClusterSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSelector)(nil)).Elem()
}

func (o ClusterSelectorOutput) ToClusterSelectorOutput() ClusterSelectorOutput {
	return o
}

func (o ClusterSelectorOutput) ToClusterSelectorOutputWithContext(ctx context.Context) ClusterSelectorOutput {
	return o
}

func (o ClusterSelectorOutput) ToClusterSelectorPtrOutput() ClusterSelectorPtrOutput {
	return o.ToClusterSelectorPtrOutputWithContext(context.Background())
}

func (o ClusterSelectorOutput) ToClusterSelectorPtrOutputWithContext(ctx context.Context) ClusterSelectorPtrOutput {
	return o.ApplyT(func(v ClusterSelector) *ClusterSelector {
		return &v
	}).(ClusterSelectorPtrOutput)
}

// The cluster labels. Cluster must have all labels to match.
func (o ClusterSelectorOutput) ClusterLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterSelector) map[string]string { return v.ClusterLabels }).(pulumi.StringMapOutput)
}

// Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
func (o ClusterSelectorOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSelector) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ClusterSelectorPtrOutput struct{ *pulumi.OutputState }

func (ClusterSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSelector)(nil)).Elem()
}

func (o ClusterSelectorPtrOutput) ToClusterSelectorPtrOutput() ClusterSelectorPtrOutput {
	return o
}

func (o ClusterSelectorPtrOutput) ToClusterSelectorPtrOutputWithContext(ctx context.Context) ClusterSelectorPtrOutput {
	return o
}

func (o ClusterSelectorPtrOutput) Elem() ClusterSelectorOutput {
	return o.ApplyT(func(v *ClusterSelector) ClusterSelector { return *v }).(ClusterSelectorOutput)
}

// The cluster labels. Cluster must have all labels to match.
func (o ClusterSelectorPtrOutput) ClusterLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.ClusterLabels
	}).(pulumi.StringMapOutput)
}

// Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
func (o ClusterSelectorPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSelector) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

// A selector that chooses target cluster for jobs based on metadata.
type ClusterSelectorResponse struct {
	// The cluster labels. Cluster must have all labels to match.
	ClusterLabels map[string]string `pulumi:"clusterLabels"`
	// Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
	Zone string `pulumi:"zone"`
}

// ClusterSelectorResponseInput is an input type that accepts ClusterSelectorResponseArgs and ClusterSelectorResponseOutput values.
// You can construct a concrete instance of `ClusterSelectorResponseInput` via:
//
//          ClusterSelectorResponseArgs{...}
type ClusterSelectorResponseInput interface {
	pulumi.Input

	ToClusterSelectorResponseOutput() ClusterSelectorResponseOutput
	ToClusterSelectorResponseOutputWithContext(context.Context) ClusterSelectorResponseOutput
}

// A selector that chooses target cluster for jobs based on metadata.
type ClusterSelectorResponseArgs struct {
	// The cluster labels. Cluster must have all labels to match.
	ClusterLabels pulumi.StringMapInput `pulumi:"clusterLabels"`
	// Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (ClusterSelectorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSelectorResponse)(nil)).Elem()
}

func (i ClusterSelectorResponseArgs) ToClusterSelectorResponseOutput() ClusterSelectorResponseOutput {
	return i.ToClusterSelectorResponseOutputWithContext(context.Background())
}

func (i ClusterSelectorResponseArgs) ToClusterSelectorResponseOutputWithContext(ctx context.Context) ClusterSelectorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSelectorResponseOutput)
}

func (i ClusterSelectorResponseArgs) ToClusterSelectorResponsePtrOutput() ClusterSelectorResponsePtrOutput {
	return i.ToClusterSelectorResponsePtrOutputWithContext(context.Background())
}

func (i ClusterSelectorResponseArgs) ToClusterSelectorResponsePtrOutputWithContext(ctx context.Context) ClusterSelectorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSelectorResponseOutput).ToClusterSelectorResponsePtrOutputWithContext(ctx)
}

// ClusterSelectorResponsePtrInput is an input type that accepts ClusterSelectorResponseArgs, ClusterSelectorResponsePtr and ClusterSelectorResponsePtrOutput values.
// You can construct a concrete instance of `ClusterSelectorResponsePtrInput` via:
//
//          ClusterSelectorResponseArgs{...}
//
//  or:
//
//          nil
type ClusterSelectorResponsePtrInput interface {
	pulumi.Input

	ToClusterSelectorResponsePtrOutput() ClusterSelectorResponsePtrOutput
	ToClusterSelectorResponsePtrOutputWithContext(context.Context) ClusterSelectorResponsePtrOutput
}

type clusterSelectorResponsePtrType ClusterSelectorResponseArgs

func ClusterSelectorResponsePtr(v *ClusterSelectorResponseArgs) ClusterSelectorResponsePtrInput {
	return (*clusterSelectorResponsePtrType)(v)
}

func (*clusterSelectorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSelectorResponse)(nil)).Elem()
}

func (i *clusterSelectorResponsePtrType) ToClusterSelectorResponsePtrOutput() ClusterSelectorResponsePtrOutput {
	return i.ToClusterSelectorResponsePtrOutputWithContext(context.Background())
}

func (i *clusterSelectorResponsePtrType) ToClusterSelectorResponsePtrOutputWithContext(ctx context.Context) ClusterSelectorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSelectorResponsePtrOutput)
}

// A selector that chooses target cluster for jobs based on metadata.
type ClusterSelectorResponseOutput struct{ *pulumi.OutputState }

func (ClusterSelectorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSelectorResponse)(nil)).Elem()
}

func (o ClusterSelectorResponseOutput) ToClusterSelectorResponseOutput() ClusterSelectorResponseOutput {
	return o
}

func (o ClusterSelectorResponseOutput) ToClusterSelectorResponseOutputWithContext(ctx context.Context) ClusterSelectorResponseOutput {
	return o
}

func (o ClusterSelectorResponseOutput) ToClusterSelectorResponsePtrOutput() ClusterSelectorResponsePtrOutput {
	return o.ToClusterSelectorResponsePtrOutputWithContext(context.Background())
}

func (o ClusterSelectorResponseOutput) ToClusterSelectorResponsePtrOutputWithContext(ctx context.Context) ClusterSelectorResponsePtrOutput {
	return o.ApplyT(func(v ClusterSelectorResponse) *ClusterSelectorResponse {
		return &v
	}).(ClusterSelectorResponsePtrOutput)
}

// The cluster labels. Cluster must have all labels to match.
func (o ClusterSelectorResponseOutput) ClusterLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterSelectorResponse) map[string]string { return v.ClusterLabels }).(pulumi.StringMapOutput)
}

// Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
func (o ClusterSelectorResponseOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSelectorResponse) string { return v.Zone }).(pulumi.StringOutput)
}

type ClusterSelectorResponsePtrOutput struct{ *pulumi.OutputState }

func (ClusterSelectorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSelectorResponse)(nil)).Elem()
}

func (o ClusterSelectorResponsePtrOutput) ToClusterSelectorResponsePtrOutput() ClusterSelectorResponsePtrOutput {
	return o
}

func (o ClusterSelectorResponsePtrOutput) ToClusterSelectorResponsePtrOutputWithContext(ctx context.Context) ClusterSelectorResponsePtrOutput {
	return o
}

func (o ClusterSelectorResponsePtrOutput) Elem() ClusterSelectorResponseOutput {
	return o.ApplyT(func(v *ClusterSelectorResponse) ClusterSelectorResponse { return *v }).(ClusterSelectorResponseOutput)
}

// The cluster labels. Cluster must have all labels to match.
func (o ClusterSelectorResponsePtrOutput) ClusterLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterSelectorResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.ClusterLabels
	}).(pulumi.StringMapOutput)
}

// Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
func (o ClusterSelectorResponsePtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSelectorResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Zone
	}).(pulumi.StringPtrOutput)
}

// The status of a cluster and its instances.
type ClusterStatusResponse struct {
	// Optional. Output only. Details of cluster's state.
	Detail string `pulumi:"detail"`
	// The cluster's state.
	State string `pulumi:"state"`
	// Time when this state was entered (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	StateStartTime string `pulumi:"stateStartTime"`
	// Additional state information that includes status reported by the agent.
	Substate string `pulumi:"substate"`
}

// ClusterStatusResponseInput is an input type that accepts ClusterStatusResponseArgs and ClusterStatusResponseOutput values.
// You can construct a concrete instance of `ClusterStatusResponseInput` via:
//
//          ClusterStatusResponseArgs{...}
type ClusterStatusResponseInput interface {
	pulumi.Input

	ToClusterStatusResponseOutput() ClusterStatusResponseOutput
	ToClusterStatusResponseOutputWithContext(context.Context) ClusterStatusResponseOutput
}

// The status of a cluster and its instances.
type ClusterStatusResponseArgs struct {
	// Optional. Output only. Details of cluster's state.
	Detail pulumi.StringInput `pulumi:"detail"`
	// The cluster's state.
	State pulumi.StringInput `pulumi:"state"`
	// Time when this state was entered (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	StateStartTime pulumi.StringInput `pulumi:"stateStartTime"`
	// Additional state information that includes status reported by the agent.
	Substate pulumi.StringInput `pulumi:"substate"`
}

func (ClusterStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStatusResponse)(nil)).Elem()
}

func (i ClusterStatusResponseArgs) ToClusterStatusResponseOutput() ClusterStatusResponseOutput {
	return i.ToClusterStatusResponseOutputWithContext(context.Background())
}

func (i ClusterStatusResponseArgs) ToClusterStatusResponseOutputWithContext(ctx context.Context) ClusterStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStatusResponseOutput)
}

func (i ClusterStatusResponseArgs) ToClusterStatusResponsePtrOutput() ClusterStatusResponsePtrOutput {
	return i.ToClusterStatusResponsePtrOutputWithContext(context.Background())
}

func (i ClusterStatusResponseArgs) ToClusterStatusResponsePtrOutputWithContext(ctx context.Context) ClusterStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStatusResponseOutput).ToClusterStatusResponsePtrOutputWithContext(ctx)
}

// ClusterStatusResponsePtrInput is an input type that accepts ClusterStatusResponseArgs, ClusterStatusResponsePtr and ClusterStatusResponsePtrOutput values.
// You can construct a concrete instance of `ClusterStatusResponsePtrInput` via:
//
//          ClusterStatusResponseArgs{...}
//
//  or:
//
//          nil
type ClusterStatusResponsePtrInput interface {
	pulumi.Input

	ToClusterStatusResponsePtrOutput() ClusterStatusResponsePtrOutput
	ToClusterStatusResponsePtrOutputWithContext(context.Context) ClusterStatusResponsePtrOutput
}

type clusterStatusResponsePtrType ClusterStatusResponseArgs

func ClusterStatusResponsePtr(v *ClusterStatusResponseArgs) ClusterStatusResponsePtrInput {
	return (*clusterStatusResponsePtrType)(v)
}

func (*clusterStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStatusResponse)(nil)).Elem()
}

func (i *clusterStatusResponsePtrType) ToClusterStatusResponsePtrOutput() ClusterStatusResponsePtrOutput {
	return i.ToClusterStatusResponsePtrOutputWithContext(context.Background())
}

func (i *clusterStatusResponsePtrType) ToClusterStatusResponsePtrOutputWithContext(ctx context.Context) ClusterStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStatusResponsePtrOutput)
}

// ClusterStatusResponseArrayInput is an input type that accepts ClusterStatusResponseArray and ClusterStatusResponseArrayOutput values.
// You can construct a concrete instance of `ClusterStatusResponseArrayInput` via:
//
//          ClusterStatusResponseArray{ ClusterStatusResponseArgs{...} }
type ClusterStatusResponseArrayInput interface {
	pulumi.Input

	ToClusterStatusResponseArrayOutput() ClusterStatusResponseArrayOutput
	ToClusterStatusResponseArrayOutputWithContext(context.Context) ClusterStatusResponseArrayOutput
}

type ClusterStatusResponseArray []ClusterStatusResponseInput

func (ClusterStatusResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterStatusResponse)(nil)).Elem()
}

func (i ClusterStatusResponseArray) ToClusterStatusResponseArrayOutput() ClusterStatusResponseArrayOutput {
	return i.ToClusterStatusResponseArrayOutputWithContext(context.Background())
}

func (i ClusterStatusResponseArray) ToClusterStatusResponseArrayOutputWithContext(ctx context.Context) ClusterStatusResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStatusResponseArrayOutput)
}

// The status of a cluster and its instances.
type ClusterStatusResponseOutput struct{ *pulumi.OutputState }

func (ClusterStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStatusResponse)(nil)).Elem()
}

func (o ClusterStatusResponseOutput) ToClusterStatusResponseOutput() ClusterStatusResponseOutput {
	return o
}

func (o ClusterStatusResponseOutput) ToClusterStatusResponseOutputWithContext(ctx context.Context) ClusterStatusResponseOutput {
	return o
}

func (o ClusterStatusResponseOutput) ToClusterStatusResponsePtrOutput() ClusterStatusResponsePtrOutput {
	return o.ToClusterStatusResponsePtrOutputWithContext(context.Background())
}

func (o ClusterStatusResponseOutput) ToClusterStatusResponsePtrOutputWithContext(ctx context.Context) ClusterStatusResponsePtrOutput {
	return o.ApplyT(func(v ClusterStatusResponse) *ClusterStatusResponse {
		return &v
	}).(ClusterStatusResponsePtrOutput)
}

// Optional. Output only. Details of cluster's state.
func (o ClusterStatusResponseOutput) Detail() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterStatusResponse) string { return v.Detail }).(pulumi.StringOutput)
}

// The cluster's state.
func (o ClusterStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

// Time when this state was entered (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o ClusterStatusResponseOutput) StateStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterStatusResponse) string { return v.StateStartTime }).(pulumi.StringOutput)
}

// Additional state information that includes status reported by the agent.
func (o ClusterStatusResponseOutput) Substate() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterStatusResponse) string { return v.Substate }).(pulumi.StringOutput)
}

type ClusterStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (ClusterStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStatusResponse)(nil)).Elem()
}

func (o ClusterStatusResponsePtrOutput) ToClusterStatusResponsePtrOutput() ClusterStatusResponsePtrOutput {
	return o
}

func (o ClusterStatusResponsePtrOutput) ToClusterStatusResponsePtrOutputWithContext(ctx context.Context) ClusterStatusResponsePtrOutput {
	return o
}

func (o ClusterStatusResponsePtrOutput) Elem() ClusterStatusResponseOutput {
	return o.ApplyT(func(v *ClusterStatusResponse) ClusterStatusResponse { return *v }).(ClusterStatusResponseOutput)
}

// Optional. Output only. Details of cluster's state.
func (o ClusterStatusResponsePtrOutput) Detail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Detail
	}).(pulumi.StringPtrOutput)
}

// The cluster's state.
func (o ClusterStatusResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Time when this state was entered (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o ClusterStatusResponsePtrOutput) StateStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StateStartTime
	}).(pulumi.StringPtrOutput)
}

// Additional state information that includes status reported by the agent.
func (o ClusterStatusResponsePtrOutput) Substate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Substate
	}).(pulumi.StringPtrOutput)
}

type ClusterStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (ClusterStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterStatusResponse)(nil)).Elem()
}

func (o ClusterStatusResponseArrayOutput) ToClusterStatusResponseArrayOutput() ClusterStatusResponseArrayOutput {
	return o
}

func (o ClusterStatusResponseArrayOutput) ToClusterStatusResponseArrayOutputWithContext(ctx context.Context) ClusterStatusResponseArrayOutput {
	return o
}

func (o ClusterStatusResponseArrayOutput) Index(i pulumi.IntInput) ClusterStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterStatusResponse {
		return vs[0].([]ClusterStatusResponse)[vs[1].(int)]
	}).(ClusterStatusResponseOutput)
}

// Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)
type ConfidentialInstanceConfig struct {
	// Optional. Defines whether the instance should have confidential compute enabled.
	EnableConfidentialCompute *bool `pulumi:"enableConfidentialCompute"`
}

// ConfidentialInstanceConfigInput is an input type that accepts ConfidentialInstanceConfigArgs and ConfidentialInstanceConfigOutput values.
// You can construct a concrete instance of `ConfidentialInstanceConfigInput` via:
//
//          ConfidentialInstanceConfigArgs{...}
type ConfidentialInstanceConfigInput interface {
	pulumi.Input

	ToConfidentialInstanceConfigOutput() ConfidentialInstanceConfigOutput
	ToConfidentialInstanceConfigOutputWithContext(context.Context) ConfidentialInstanceConfigOutput
}

// Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)
type ConfidentialInstanceConfigArgs struct {
	// Optional. Defines whether the instance should have confidential compute enabled.
	EnableConfidentialCompute pulumi.BoolPtrInput `pulumi:"enableConfidentialCompute"`
}

func (ConfidentialInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfidentialInstanceConfig)(nil)).Elem()
}

func (i ConfidentialInstanceConfigArgs) ToConfidentialInstanceConfigOutput() ConfidentialInstanceConfigOutput {
	return i.ToConfidentialInstanceConfigOutputWithContext(context.Background())
}

func (i ConfidentialInstanceConfigArgs) ToConfidentialInstanceConfigOutputWithContext(ctx context.Context) ConfidentialInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfidentialInstanceConfigOutput)
}

func (i ConfidentialInstanceConfigArgs) ToConfidentialInstanceConfigPtrOutput() ConfidentialInstanceConfigPtrOutput {
	return i.ToConfidentialInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ConfidentialInstanceConfigArgs) ToConfidentialInstanceConfigPtrOutputWithContext(ctx context.Context) ConfidentialInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfidentialInstanceConfigOutput).ToConfidentialInstanceConfigPtrOutputWithContext(ctx)
}

// ConfidentialInstanceConfigPtrInput is an input type that accepts ConfidentialInstanceConfigArgs, ConfidentialInstanceConfigPtr and ConfidentialInstanceConfigPtrOutput values.
// You can construct a concrete instance of `ConfidentialInstanceConfigPtrInput` via:
//
//          ConfidentialInstanceConfigArgs{...}
//
//  or:
//
//          nil
type ConfidentialInstanceConfigPtrInput interface {
	pulumi.Input

	ToConfidentialInstanceConfigPtrOutput() ConfidentialInstanceConfigPtrOutput
	ToConfidentialInstanceConfigPtrOutputWithContext(context.Context) ConfidentialInstanceConfigPtrOutput
}

type confidentialInstanceConfigPtrType ConfidentialInstanceConfigArgs

func ConfidentialInstanceConfigPtr(v *ConfidentialInstanceConfigArgs) ConfidentialInstanceConfigPtrInput {
	return (*confidentialInstanceConfigPtrType)(v)
}

func (*confidentialInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfidentialInstanceConfig)(nil)).Elem()
}

func (i *confidentialInstanceConfigPtrType) ToConfidentialInstanceConfigPtrOutput() ConfidentialInstanceConfigPtrOutput {
	return i.ToConfidentialInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *confidentialInstanceConfigPtrType) ToConfidentialInstanceConfigPtrOutputWithContext(ctx context.Context) ConfidentialInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfidentialInstanceConfigPtrOutput)
}

// Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)
type ConfidentialInstanceConfigOutput struct{ *pulumi.OutputState }

func (ConfidentialInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfidentialInstanceConfig)(nil)).Elem()
}

func (o ConfidentialInstanceConfigOutput) ToConfidentialInstanceConfigOutput() ConfidentialInstanceConfigOutput {
	return o
}

func (o ConfidentialInstanceConfigOutput) ToConfidentialInstanceConfigOutputWithContext(ctx context.Context) ConfidentialInstanceConfigOutput {
	return o
}

func (o ConfidentialInstanceConfigOutput) ToConfidentialInstanceConfigPtrOutput() ConfidentialInstanceConfigPtrOutput {
	return o.ToConfidentialInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ConfidentialInstanceConfigOutput) ToConfidentialInstanceConfigPtrOutputWithContext(ctx context.Context) ConfidentialInstanceConfigPtrOutput {
	return o.ApplyT(func(v ConfidentialInstanceConfig) *ConfidentialInstanceConfig {
		return &v
	}).(ConfidentialInstanceConfigPtrOutput)
}

// Optional. Defines whether the instance should have confidential compute enabled.
func (o ConfidentialInstanceConfigOutput) EnableConfidentialCompute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfidentialInstanceConfig) *bool { return v.EnableConfidentialCompute }).(pulumi.BoolPtrOutput)
}

type ConfidentialInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ConfidentialInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfidentialInstanceConfig)(nil)).Elem()
}

func (o ConfidentialInstanceConfigPtrOutput) ToConfidentialInstanceConfigPtrOutput() ConfidentialInstanceConfigPtrOutput {
	return o
}

func (o ConfidentialInstanceConfigPtrOutput) ToConfidentialInstanceConfigPtrOutputWithContext(ctx context.Context) ConfidentialInstanceConfigPtrOutput {
	return o
}

func (o ConfidentialInstanceConfigPtrOutput) Elem() ConfidentialInstanceConfigOutput {
	return o.ApplyT(func(v *ConfidentialInstanceConfig) ConfidentialInstanceConfig { return *v }).(ConfidentialInstanceConfigOutput)
}

// Optional. Defines whether the instance should have confidential compute enabled.
func (o ConfidentialInstanceConfigPtrOutput) EnableConfidentialCompute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfidentialInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableConfidentialCompute
	}).(pulumi.BoolPtrOutput)
}

// Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)
type ConfidentialInstanceConfigResponse struct {
	// Optional. Defines whether the instance should have confidential compute enabled.
	EnableConfidentialCompute bool `pulumi:"enableConfidentialCompute"`
}

// ConfidentialInstanceConfigResponseInput is an input type that accepts ConfidentialInstanceConfigResponseArgs and ConfidentialInstanceConfigResponseOutput values.
// You can construct a concrete instance of `ConfidentialInstanceConfigResponseInput` via:
//
//          ConfidentialInstanceConfigResponseArgs{...}
type ConfidentialInstanceConfigResponseInput interface {
	pulumi.Input

	ToConfidentialInstanceConfigResponseOutput() ConfidentialInstanceConfigResponseOutput
	ToConfidentialInstanceConfigResponseOutputWithContext(context.Context) ConfidentialInstanceConfigResponseOutput
}

// Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)
type ConfidentialInstanceConfigResponseArgs struct {
	// Optional. Defines whether the instance should have confidential compute enabled.
	EnableConfidentialCompute pulumi.BoolInput `pulumi:"enableConfidentialCompute"`
}

func (ConfidentialInstanceConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfidentialInstanceConfigResponse)(nil)).Elem()
}

func (i ConfidentialInstanceConfigResponseArgs) ToConfidentialInstanceConfigResponseOutput() ConfidentialInstanceConfigResponseOutput {
	return i.ToConfidentialInstanceConfigResponseOutputWithContext(context.Background())
}

func (i ConfidentialInstanceConfigResponseArgs) ToConfidentialInstanceConfigResponseOutputWithContext(ctx context.Context) ConfidentialInstanceConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfidentialInstanceConfigResponseOutput)
}

func (i ConfidentialInstanceConfigResponseArgs) ToConfidentialInstanceConfigResponsePtrOutput() ConfidentialInstanceConfigResponsePtrOutput {
	return i.ToConfidentialInstanceConfigResponsePtrOutputWithContext(context.Background())
}

func (i ConfidentialInstanceConfigResponseArgs) ToConfidentialInstanceConfigResponsePtrOutputWithContext(ctx context.Context) ConfidentialInstanceConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfidentialInstanceConfigResponseOutput).ToConfidentialInstanceConfigResponsePtrOutputWithContext(ctx)
}

// ConfidentialInstanceConfigResponsePtrInput is an input type that accepts ConfidentialInstanceConfigResponseArgs, ConfidentialInstanceConfigResponsePtr and ConfidentialInstanceConfigResponsePtrOutput values.
// You can construct a concrete instance of `ConfidentialInstanceConfigResponsePtrInput` via:
//
//          ConfidentialInstanceConfigResponseArgs{...}
//
//  or:
//
//          nil
type ConfidentialInstanceConfigResponsePtrInput interface {
	pulumi.Input

	ToConfidentialInstanceConfigResponsePtrOutput() ConfidentialInstanceConfigResponsePtrOutput
	ToConfidentialInstanceConfigResponsePtrOutputWithContext(context.Context) ConfidentialInstanceConfigResponsePtrOutput
}

type confidentialInstanceConfigResponsePtrType ConfidentialInstanceConfigResponseArgs

func ConfidentialInstanceConfigResponsePtr(v *ConfidentialInstanceConfigResponseArgs) ConfidentialInstanceConfigResponsePtrInput {
	return (*confidentialInstanceConfigResponsePtrType)(v)
}

func (*confidentialInstanceConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfidentialInstanceConfigResponse)(nil)).Elem()
}

func (i *confidentialInstanceConfigResponsePtrType) ToConfidentialInstanceConfigResponsePtrOutput() ConfidentialInstanceConfigResponsePtrOutput {
	return i.ToConfidentialInstanceConfigResponsePtrOutputWithContext(context.Background())
}

func (i *confidentialInstanceConfigResponsePtrType) ToConfidentialInstanceConfigResponsePtrOutputWithContext(ctx context.Context) ConfidentialInstanceConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfidentialInstanceConfigResponsePtrOutput)
}

// Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)
type ConfidentialInstanceConfigResponseOutput struct{ *pulumi.OutputState }

func (ConfidentialInstanceConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfidentialInstanceConfigResponse)(nil)).Elem()
}

func (o ConfidentialInstanceConfigResponseOutput) ToConfidentialInstanceConfigResponseOutput() ConfidentialInstanceConfigResponseOutput {
	return o
}

func (o ConfidentialInstanceConfigResponseOutput) ToConfidentialInstanceConfigResponseOutputWithContext(ctx context.Context) ConfidentialInstanceConfigResponseOutput {
	return o
}

func (o ConfidentialInstanceConfigResponseOutput) ToConfidentialInstanceConfigResponsePtrOutput() ConfidentialInstanceConfigResponsePtrOutput {
	return o.ToConfidentialInstanceConfigResponsePtrOutputWithContext(context.Background())
}

func (o ConfidentialInstanceConfigResponseOutput) ToConfidentialInstanceConfigResponsePtrOutputWithContext(ctx context.Context) ConfidentialInstanceConfigResponsePtrOutput {
	return o.ApplyT(func(v ConfidentialInstanceConfigResponse) *ConfidentialInstanceConfigResponse {
		return &v
	}).(ConfidentialInstanceConfigResponsePtrOutput)
}

// Optional. Defines whether the instance should have confidential compute enabled.
func (o ConfidentialInstanceConfigResponseOutput) EnableConfidentialCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v ConfidentialInstanceConfigResponse) bool { return v.EnableConfidentialCompute }).(pulumi.BoolOutput)
}

type ConfidentialInstanceConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ConfidentialInstanceConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfidentialInstanceConfigResponse)(nil)).Elem()
}

func (o ConfidentialInstanceConfigResponsePtrOutput) ToConfidentialInstanceConfigResponsePtrOutput() ConfidentialInstanceConfigResponsePtrOutput {
	return o
}

func (o ConfidentialInstanceConfigResponsePtrOutput) ToConfidentialInstanceConfigResponsePtrOutputWithContext(ctx context.Context) ConfidentialInstanceConfigResponsePtrOutput {
	return o
}

func (o ConfidentialInstanceConfigResponsePtrOutput) Elem() ConfidentialInstanceConfigResponseOutput {
	return o.ApplyT(func(v *ConfidentialInstanceConfigResponse) ConfidentialInstanceConfigResponse { return *v }).(ConfidentialInstanceConfigResponseOutput)
}

// Optional. Defines whether the instance should have confidential compute enabled.
func (o ConfidentialInstanceConfigResponsePtrOutput) EnableConfidentialCompute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfidentialInstanceConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableConfidentialCompute
	}).(pulumi.BoolPtrOutput)
}

// Specifies the config of disk options for a group of VM instances.
type DiskConfig struct {
	// Optional. Size in GB of the boot disk (default is 500GB).
	BootDiskSizeGb *int `pulumi:"bootDiskSizeGb"`
	// Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
	BootDiskType *string `pulumi:"bootDiskType"`
	// Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
	NumLocalSsds *int `pulumi:"numLocalSsds"`
}

// DiskConfigInput is an input type that accepts DiskConfigArgs and DiskConfigOutput values.
// You can construct a concrete instance of `DiskConfigInput` via:
//
//          DiskConfigArgs{...}
type DiskConfigInput interface {
	pulumi.Input

	ToDiskConfigOutput() DiskConfigOutput
	ToDiskConfigOutputWithContext(context.Context) DiskConfigOutput
}

// Specifies the config of disk options for a group of VM instances.
type DiskConfigArgs struct {
	// Optional. Size in GB of the boot disk (default is 500GB).
	BootDiskSizeGb pulumi.IntPtrInput `pulumi:"bootDiskSizeGb"`
	// Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
	BootDiskType pulumi.StringPtrInput `pulumi:"bootDiskType"`
	// Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
	NumLocalSsds pulumi.IntPtrInput `pulumi:"numLocalSsds"`
}

func (DiskConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskConfig)(nil)).Elem()
}

func (i DiskConfigArgs) ToDiskConfigOutput() DiskConfigOutput {
	return i.ToDiskConfigOutputWithContext(context.Background())
}

func (i DiskConfigArgs) ToDiskConfigOutputWithContext(ctx context.Context) DiskConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskConfigOutput)
}

func (i DiskConfigArgs) ToDiskConfigPtrOutput() DiskConfigPtrOutput {
	return i.ToDiskConfigPtrOutputWithContext(context.Background())
}

func (i DiskConfigArgs) ToDiskConfigPtrOutputWithContext(ctx context.Context) DiskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskConfigOutput).ToDiskConfigPtrOutputWithContext(ctx)
}

// DiskConfigPtrInput is an input type that accepts DiskConfigArgs, DiskConfigPtr and DiskConfigPtrOutput values.
// You can construct a concrete instance of `DiskConfigPtrInput` via:
//
//          DiskConfigArgs{...}
//
//  or:
//
//          nil
type DiskConfigPtrInput interface {
	pulumi.Input

	ToDiskConfigPtrOutput() DiskConfigPtrOutput
	ToDiskConfigPtrOutputWithContext(context.Context) DiskConfigPtrOutput
}

type diskConfigPtrType DiskConfigArgs

func DiskConfigPtr(v *DiskConfigArgs) DiskConfigPtrInput {
	return (*diskConfigPtrType)(v)
}

func (*diskConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskConfig)(nil)).Elem()
}

func (i *diskConfigPtrType) ToDiskConfigPtrOutput() DiskConfigPtrOutput {
	return i.ToDiskConfigPtrOutputWithContext(context.Background())
}

func (i *diskConfigPtrType) ToDiskConfigPtrOutputWithContext(ctx context.Context) DiskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskConfigPtrOutput)
}

// Specifies the config of disk options for a group of VM instances.
type DiskConfigOutput struct{ *pulumi.OutputState }

func (DiskConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskConfig)(nil)).Elem()
}

func (o DiskConfigOutput) ToDiskConfigOutput() DiskConfigOutput {
	return o
}

func (o DiskConfigOutput) ToDiskConfigOutputWithContext(ctx context.Context) DiskConfigOutput {
	return o
}

func (o DiskConfigOutput) ToDiskConfigPtrOutput() DiskConfigPtrOutput {
	return o.ToDiskConfigPtrOutputWithContext(context.Background())
}

func (o DiskConfigOutput) ToDiskConfigPtrOutputWithContext(ctx context.Context) DiskConfigPtrOutput {
	return o.ApplyT(func(v DiskConfig) *DiskConfig {
		return &v
	}).(DiskConfigPtrOutput)
}

// Optional. Size in GB of the boot disk (default is 500GB).
func (o DiskConfigOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DiskConfig) *int { return v.BootDiskSizeGb }).(pulumi.IntPtrOutput)
}

// Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
func (o DiskConfigOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskConfig) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
func (o DiskConfigOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DiskConfig) *int { return v.NumLocalSsds }).(pulumi.IntPtrOutput)
}

type DiskConfigPtrOutput struct{ *pulumi.OutputState }

func (DiskConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskConfig)(nil)).Elem()
}

func (o DiskConfigPtrOutput) ToDiskConfigPtrOutput() DiskConfigPtrOutput {
	return o
}

func (o DiskConfigPtrOutput) ToDiskConfigPtrOutputWithContext(ctx context.Context) DiskConfigPtrOutput {
	return o
}

func (o DiskConfigPtrOutput) Elem() DiskConfigOutput {
	return o.ApplyT(func(v *DiskConfig) DiskConfig { return *v }).(DiskConfigOutput)
}

// Optional. Size in GB of the boot disk (default is 500GB).
func (o DiskConfigPtrOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DiskConfig) *int {
		if v == nil {
			return nil
		}
		return v.BootDiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
func (o DiskConfigPtrOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskConfig) *string {
		if v == nil {
			return nil
		}
		return v.BootDiskType
	}).(pulumi.StringPtrOutput)
}

// Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
func (o DiskConfigPtrOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DiskConfig) *int {
		if v == nil {
			return nil
		}
		return v.NumLocalSsds
	}).(pulumi.IntPtrOutput)
}

// Specifies the config of disk options for a group of VM instances.
type DiskConfigResponse struct {
	// Optional. Size in GB of the boot disk (default is 500GB).
	BootDiskSizeGb int `pulumi:"bootDiskSizeGb"`
	// Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
	BootDiskType string `pulumi:"bootDiskType"`
	// Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
	NumLocalSsds int `pulumi:"numLocalSsds"`
}

// DiskConfigResponseInput is an input type that accepts DiskConfigResponseArgs and DiskConfigResponseOutput values.
// You can construct a concrete instance of `DiskConfigResponseInput` via:
//
//          DiskConfigResponseArgs{...}
type DiskConfigResponseInput interface {
	pulumi.Input

	ToDiskConfigResponseOutput() DiskConfigResponseOutput
	ToDiskConfigResponseOutputWithContext(context.Context) DiskConfigResponseOutput
}

// Specifies the config of disk options for a group of VM instances.
type DiskConfigResponseArgs struct {
	// Optional. Size in GB of the boot disk (default is 500GB).
	BootDiskSizeGb pulumi.IntInput `pulumi:"bootDiskSizeGb"`
	// Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
	BootDiskType pulumi.StringInput `pulumi:"bootDiskType"`
	// Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
	NumLocalSsds pulumi.IntInput `pulumi:"numLocalSsds"`
}

func (DiskConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskConfigResponse)(nil)).Elem()
}

func (i DiskConfigResponseArgs) ToDiskConfigResponseOutput() DiskConfigResponseOutput {
	return i.ToDiskConfigResponseOutputWithContext(context.Background())
}

func (i DiskConfigResponseArgs) ToDiskConfigResponseOutputWithContext(ctx context.Context) DiskConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskConfigResponseOutput)
}

func (i DiskConfigResponseArgs) ToDiskConfigResponsePtrOutput() DiskConfigResponsePtrOutput {
	return i.ToDiskConfigResponsePtrOutputWithContext(context.Background())
}

func (i DiskConfigResponseArgs) ToDiskConfigResponsePtrOutputWithContext(ctx context.Context) DiskConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskConfigResponseOutput).ToDiskConfigResponsePtrOutputWithContext(ctx)
}

// DiskConfigResponsePtrInput is an input type that accepts DiskConfigResponseArgs, DiskConfigResponsePtr and DiskConfigResponsePtrOutput values.
// You can construct a concrete instance of `DiskConfigResponsePtrInput` via:
//
//          DiskConfigResponseArgs{...}
//
//  or:
//
//          nil
type DiskConfigResponsePtrInput interface {
	pulumi.Input

	ToDiskConfigResponsePtrOutput() DiskConfigResponsePtrOutput
	ToDiskConfigResponsePtrOutputWithContext(context.Context) DiskConfigResponsePtrOutput
}

type diskConfigResponsePtrType DiskConfigResponseArgs

func DiskConfigResponsePtr(v *DiskConfigResponseArgs) DiskConfigResponsePtrInput {
	return (*diskConfigResponsePtrType)(v)
}

func (*diskConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskConfigResponse)(nil)).Elem()
}

func (i *diskConfigResponsePtrType) ToDiskConfigResponsePtrOutput() DiskConfigResponsePtrOutput {
	return i.ToDiskConfigResponsePtrOutputWithContext(context.Background())
}

func (i *diskConfigResponsePtrType) ToDiskConfigResponsePtrOutputWithContext(ctx context.Context) DiskConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskConfigResponsePtrOutput)
}

// Specifies the config of disk options for a group of VM instances.
type DiskConfigResponseOutput struct{ *pulumi.OutputState }

func (DiskConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskConfigResponse)(nil)).Elem()
}

func (o DiskConfigResponseOutput) ToDiskConfigResponseOutput() DiskConfigResponseOutput {
	return o
}

func (o DiskConfigResponseOutput) ToDiskConfigResponseOutputWithContext(ctx context.Context) DiskConfigResponseOutput {
	return o
}

func (o DiskConfigResponseOutput) ToDiskConfigResponsePtrOutput() DiskConfigResponsePtrOutput {
	return o.ToDiskConfigResponsePtrOutputWithContext(context.Background())
}

func (o DiskConfigResponseOutput) ToDiskConfigResponsePtrOutputWithContext(ctx context.Context) DiskConfigResponsePtrOutput {
	return o.ApplyT(func(v DiskConfigResponse) *DiskConfigResponse {
		return &v
	}).(DiskConfigResponsePtrOutput)
}

// Optional. Size in GB of the boot disk (default is 500GB).
func (o DiskConfigResponseOutput) BootDiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v DiskConfigResponse) int { return v.BootDiskSizeGb }).(pulumi.IntOutput)
}

// Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
func (o DiskConfigResponseOutput) BootDiskType() pulumi.StringOutput {
	return o.ApplyT(func(v DiskConfigResponse) string { return v.BootDiskType }).(pulumi.StringOutput)
}

// Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
func (o DiskConfigResponseOutput) NumLocalSsds() pulumi.IntOutput {
	return o.ApplyT(func(v DiskConfigResponse) int { return v.NumLocalSsds }).(pulumi.IntOutput)
}

type DiskConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (DiskConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskConfigResponse)(nil)).Elem()
}

func (o DiskConfigResponsePtrOutput) ToDiskConfigResponsePtrOutput() DiskConfigResponsePtrOutput {
	return o
}

func (o DiskConfigResponsePtrOutput) ToDiskConfigResponsePtrOutputWithContext(ctx context.Context) DiskConfigResponsePtrOutput {
	return o
}

func (o DiskConfigResponsePtrOutput) Elem() DiskConfigResponseOutput {
	return o.ApplyT(func(v *DiskConfigResponse) DiskConfigResponse { return *v }).(DiskConfigResponseOutput)
}

// Optional. Size in GB of the boot disk (default is 500GB).
func (o DiskConfigResponsePtrOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DiskConfigResponse) *int {
		if v == nil {
			return nil
		}
		return &v.BootDiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
func (o DiskConfigResponsePtrOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BootDiskType
	}).(pulumi.StringPtrOutput)
}

// Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
func (o DiskConfigResponsePtrOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DiskConfigResponse) *int {
		if v == nil {
			return nil
		}
		return &v.NumLocalSsds
	}).(pulumi.IntPtrOutput)
}

// Encryption settings for the cluster.
type EncryptionConfig struct {
	// Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
	GcePdKmsKeyName *string `pulumi:"gcePdKmsKeyName"`
}

// EncryptionConfigInput is an input type that accepts EncryptionConfigArgs and EncryptionConfigOutput values.
// You can construct a concrete instance of `EncryptionConfigInput` via:
//
//          EncryptionConfigArgs{...}
type EncryptionConfigInput interface {
	pulumi.Input

	ToEncryptionConfigOutput() EncryptionConfigOutput
	ToEncryptionConfigOutputWithContext(context.Context) EncryptionConfigOutput
}

// Encryption settings for the cluster.
type EncryptionConfigArgs struct {
	// Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
	GcePdKmsKeyName pulumi.StringPtrInput `pulumi:"gcePdKmsKeyName"`
}

func (EncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfig)(nil)).Elem()
}

func (i EncryptionConfigArgs) ToEncryptionConfigOutput() EncryptionConfigOutput {
	return i.ToEncryptionConfigOutputWithContext(context.Background())
}

func (i EncryptionConfigArgs) ToEncryptionConfigOutputWithContext(ctx context.Context) EncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigOutput)
}

func (i EncryptionConfigArgs) ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput {
	return i.ToEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i EncryptionConfigArgs) ToEncryptionConfigPtrOutputWithContext(ctx context.Context) EncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigOutput).ToEncryptionConfigPtrOutputWithContext(ctx)
}

// EncryptionConfigPtrInput is an input type that accepts EncryptionConfigArgs, EncryptionConfigPtr and EncryptionConfigPtrOutput values.
// You can construct a concrete instance of `EncryptionConfigPtrInput` via:
//
//          EncryptionConfigArgs{...}
//
//  or:
//
//          nil
type EncryptionConfigPtrInput interface {
	pulumi.Input

	ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput
	ToEncryptionConfigPtrOutputWithContext(context.Context) EncryptionConfigPtrOutput
}

type encryptionConfigPtrType EncryptionConfigArgs

func EncryptionConfigPtr(v *EncryptionConfigArgs) EncryptionConfigPtrInput {
	return (*encryptionConfigPtrType)(v)
}

func (*encryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfig)(nil)).Elem()
}

func (i *encryptionConfigPtrType) ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput {
	return i.ToEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *encryptionConfigPtrType) ToEncryptionConfigPtrOutputWithContext(ctx context.Context) EncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigPtrOutput)
}

// Encryption settings for the cluster.
type EncryptionConfigOutput struct{ *pulumi.OutputState }

func (EncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfig)(nil)).Elem()
}

func (o EncryptionConfigOutput) ToEncryptionConfigOutput() EncryptionConfigOutput {
	return o
}

func (o EncryptionConfigOutput) ToEncryptionConfigOutputWithContext(ctx context.Context) EncryptionConfigOutput {
	return o
}

func (o EncryptionConfigOutput) ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput {
	return o.ToEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o EncryptionConfigOutput) ToEncryptionConfigPtrOutputWithContext(ctx context.Context) EncryptionConfigPtrOutput {
	return o.ApplyT(func(v EncryptionConfig) *EncryptionConfig {
		return &v
	}).(EncryptionConfigPtrOutput)
}

// Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
func (o EncryptionConfigOutput) GcePdKmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionConfig) *string { return v.GcePdKmsKeyName }).(pulumi.StringPtrOutput)
}

type EncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (EncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfig)(nil)).Elem()
}

func (o EncryptionConfigPtrOutput) ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput {
	return o
}

func (o EncryptionConfigPtrOutput) ToEncryptionConfigPtrOutputWithContext(ctx context.Context) EncryptionConfigPtrOutput {
	return o
}

func (o EncryptionConfigPtrOutput) Elem() EncryptionConfigOutput {
	return o.ApplyT(func(v *EncryptionConfig) EncryptionConfig { return *v }).(EncryptionConfigOutput)
}

// Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
func (o EncryptionConfigPtrOutput) GcePdKmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return v.GcePdKmsKeyName
	}).(pulumi.StringPtrOutput)
}

// Encryption settings for the cluster.
type EncryptionConfigResponse struct {
	// Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
	GcePdKmsKeyName string `pulumi:"gcePdKmsKeyName"`
}

// EncryptionConfigResponseInput is an input type that accepts EncryptionConfigResponseArgs and EncryptionConfigResponseOutput values.
// You can construct a concrete instance of `EncryptionConfigResponseInput` via:
//
//          EncryptionConfigResponseArgs{...}
type EncryptionConfigResponseInput interface {
	pulumi.Input

	ToEncryptionConfigResponseOutput() EncryptionConfigResponseOutput
	ToEncryptionConfigResponseOutputWithContext(context.Context) EncryptionConfigResponseOutput
}

// Encryption settings for the cluster.
type EncryptionConfigResponseArgs struct {
	// Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
	GcePdKmsKeyName pulumi.StringInput `pulumi:"gcePdKmsKeyName"`
}

func (EncryptionConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfigResponse)(nil)).Elem()
}

func (i EncryptionConfigResponseArgs) ToEncryptionConfigResponseOutput() EncryptionConfigResponseOutput {
	return i.ToEncryptionConfigResponseOutputWithContext(context.Background())
}

func (i EncryptionConfigResponseArgs) ToEncryptionConfigResponseOutputWithContext(ctx context.Context) EncryptionConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigResponseOutput)
}

func (i EncryptionConfigResponseArgs) ToEncryptionConfigResponsePtrOutput() EncryptionConfigResponsePtrOutput {
	return i.ToEncryptionConfigResponsePtrOutputWithContext(context.Background())
}

func (i EncryptionConfigResponseArgs) ToEncryptionConfigResponsePtrOutputWithContext(ctx context.Context) EncryptionConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigResponseOutput).ToEncryptionConfigResponsePtrOutputWithContext(ctx)
}

// EncryptionConfigResponsePtrInput is an input type that accepts EncryptionConfigResponseArgs, EncryptionConfigResponsePtr and EncryptionConfigResponsePtrOutput values.
// You can construct a concrete instance of `EncryptionConfigResponsePtrInput` via:
//
//          EncryptionConfigResponseArgs{...}
//
//  or:
//
//          nil
type EncryptionConfigResponsePtrInput interface {
	pulumi.Input

	ToEncryptionConfigResponsePtrOutput() EncryptionConfigResponsePtrOutput
	ToEncryptionConfigResponsePtrOutputWithContext(context.Context) EncryptionConfigResponsePtrOutput
}

type encryptionConfigResponsePtrType EncryptionConfigResponseArgs

func EncryptionConfigResponsePtr(v *EncryptionConfigResponseArgs) EncryptionConfigResponsePtrInput {
	return (*encryptionConfigResponsePtrType)(v)
}

func (*encryptionConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfigResponse)(nil)).Elem()
}

func (i *encryptionConfigResponsePtrType) ToEncryptionConfigResponsePtrOutput() EncryptionConfigResponsePtrOutput {
	return i.ToEncryptionConfigResponsePtrOutputWithContext(context.Background())
}

func (i *encryptionConfigResponsePtrType) ToEncryptionConfigResponsePtrOutputWithContext(ctx context.Context) EncryptionConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigResponsePtrOutput)
}

// Encryption settings for the cluster.
type EncryptionConfigResponseOutput struct{ *pulumi.OutputState }

func (EncryptionConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfigResponse)(nil)).Elem()
}

func (o EncryptionConfigResponseOutput) ToEncryptionConfigResponseOutput() EncryptionConfigResponseOutput {
	return o
}

func (o EncryptionConfigResponseOutput) ToEncryptionConfigResponseOutputWithContext(ctx context.Context) EncryptionConfigResponseOutput {
	return o
}

func (o EncryptionConfigResponseOutput) ToEncryptionConfigResponsePtrOutput() EncryptionConfigResponsePtrOutput {
	return o.ToEncryptionConfigResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionConfigResponseOutput) ToEncryptionConfigResponsePtrOutputWithContext(ctx context.Context) EncryptionConfigResponsePtrOutput {
	return o.ApplyT(func(v EncryptionConfigResponse) *EncryptionConfigResponse {
		return &v
	}).(EncryptionConfigResponsePtrOutput)
}

// Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
func (o EncryptionConfigResponseOutput) GcePdKmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionConfigResponse) string { return v.GcePdKmsKeyName }).(pulumi.StringOutput)
}

type EncryptionConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfigResponse)(nil)).Elem()
}

func (o EncryptionConfigResponsePtrOutput) ToEncryptionConfigResponsePtrOutput() EncryptionConfigResponsePtrOutput {
	return o
}

func (o EncryptionConfigResponsePtrOutput) ToEncryptionConfigResponsePtrOutputWithContext(ctx context.Context) EncryptionConfigResponsePtrOutput {
	return o
}

func (o EncryptionConfigResponsePtrOutput) Elem() EncryptionConfigResponseOutput {
	return o.ApplyT(func(v *EncryptionConfigResponse) EncryptionConfigResponse { return *v }).(EncryptionConfigResponseOutput)
}

// Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
func (o EncryptionConfigResponsePtrOutput) GcePdKmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GcePdKmsKeyName
	}).(pulumi.StringPtrOutput)
}

// Endpoint config for this cluster
type EndpointConfig struct {
	// Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
	EnableHttpPortAccess *bool `pulumi:"enableHttpPortAccess"`
}

// EndpointConfigInput is an input type that accepts EndpointConfigArgs and EndpointConfigOutput values.
// You can construct a concrete instance of `EndpointConfigInput` via:
//
//          EndpointConfigArgs{...}
type EndpointConfigInput interface {
	pulumi.Input

	ToEndpointConfigOutput() EndpointConfigOutput
	ToEndpointConfigOutputWithContext(context.Context) EndpointConfigOutput
}

// Endpoint config for this cluster
type EndpointConfigArgs struct {
	// Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
	EnableHttpPortAccess pulumi.BoolPtrInput `pulumi:"enableHttpPortAccess"`
}

func (EndpointConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfig)(nil)).Elem()
}

func (i EndpointConfigArgs) ToEndpointConfigOutput() EndpointConfigOutput {
	return i.ToEndpointConfigOutputWithContext(context.Background())
}

func (i EndpointConfigArgs) ToEndpointConfigOutputWithContext(ctx context.Context) EndpointConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigOutput)
}

func (i EndpointConfigArgs) ToEndpointConfigPtrOutput() EndpointConfigPtrOutput {
	return i.ToEndpointConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigArgs) ToEndpointConfigPtrOutputWithContext(ctx context.Context) EndpointConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigOutput).ToEndpointConfigPtrOutputWithContext(ctx)
}

// EndpointConfigPtrInput is an input type that accepts EndpointConfigArgs, EndpointConfigPtr and EndpointConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigPtrInput` via:
//
//          EndpointConfigArgs{...}
//
//  or:
//
//          nil
type EndpointConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigPtrOutput() EndpointConfigPtrOutput
	ToEndpointConfigPtrOutputWithContext(context.Context) EndpointConfigPtrOutput
}

type endpointConfigPtrType EndpointConfigArgs

func EndpointConfigPtr(v *EndpointConfigArgs) EndpointConfigPtrInput {
	return (*endpointConfigPtrType)(v)
}

func (*endpointConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfig)(nil)).Elem()
}

func (i *endpointConfigPtrType) ToEndpointConfigPtrOutput() EndpointConfigPtrOutput {
	return i.ToEndpointConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigPtrType) ToEndpointConfigPtrOutputWithContext(ctx context.Context) EndpointConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigPtrOutput)
}

// Endpoint config for this cluster
type EndpointConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfig)(nil)).Elem()
}

func (o EndpointConfigOutput) ToEndpointConfigOutput() EndpointConfigOutput {
	return o
}

func (o EndpointConfigOutput) ToEndpointConfigOutputWithContext(ctx context.Context) EndpointConfigOutput {
	return o
}

func (o EndpointConfigOutput) ToEndpointConfigPtrOutput() EndpointConfigPtrOutput {
	return o.ToEndpointConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigOutput) ToEndpointConfigPtrOutputWithContext(ctx context.Context) EndpointConfigPtrOutput {
	return o.ApplyT(func(v EndpointConfig) *EndpointConfig {
		return &v
	}).(EndpointConfigPtrOutput)
}

// Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
func (o EndpointConfigOutput) EnableHttpPortAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfig) *bool { return v.EnableHttpPortAccess }).(pulumi.BoolPtrOutput)
}

type EndpointConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfig)(nil)).Elem()
}

func (o EndpointConfigPtrOutput) ToEndpointConfigPtrOutput() EndpointConfigPtrOutput {
	return o
}

func (o EndpointConfigPtrOutput) ToEndpointConfigPtrOutputWithContext(ctx context.Context) EndpointConfigPtrOutput {
	return o
}

func (o EndpointConfigPtrOutput) Elem() EndpointConfigOutput {
	return o.ApplyT(func(v *EndpointConfig) EndpointConfig { return *v }).(EndpointConfigOutput)
}

// Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
func (o EndpointConfigPtrOutput) EnableHttpPortAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHttpPortAccess
	}).(pulumi.BoolPtrOutput)
}

// Endpoint config for this cluster
type EndpointConfigResponse struct {
	// Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
	EnableHttpPortAccess bool `pulumi:"enableHttpPortAccess"`
	// The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.
	HttpPorts map[string]string `pulumi:"httpPorts"`
}

// EndpointConfigResponseInput is an input type that accepts EndpointConfigResponseArgs and EndpointConfigResponseOutput values.
// You can construct a concrete instance of `EndpointConfigResponseInput` via:
//
//          EndpointConfigResponseArgs{...}
type EndpointConfigResponseInput interface {
	pulumi.Input

	ToEndpointConfigResponseOutput() EndpointConfigResponseOutput
	ToEndpointConfigResponseOutputWithContext(context.Context) EndpointConfigResponseOutput
}

// Endpoint config for this cluster
type EndpointConfigResponseArgs struct {
	// Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
	EnableHttpPortAccess pulumi.BoolInput `pulumi:"enableHttpPortAccess"`
	// The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.
	HttpPorts pulumi.StringMapInput `pulumi:"httpPorts"`
}

func (EndpointConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigResponse)(nil)).Elem()
}

func (i EndpointConfigResponseArgs) ToEndpointConfigResponseOutput() EndpointConfigResponseOutput {
	return i.ToEndpointConfigResponseOutputWithContext(context.Background())
}

func (i EndpointConfigResponseArgs) ToEndpointConfigResponseOutputWithContext(ctx context.Context) EndpointConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigResponseOutput)
}

func (i EndpointConfigResponseArgs) ToEndpointConfigResponsePtrOutput() EndpointConfigResponsePtrOutput {
	return i.ToEndpointConfigResponsePtrOutputWithContext(context.Background())
}

func (i EndpointConfigResponseArgs) ToEndpointConfigResponsePtrOutputWithContext(ctx context.Context) EndpointConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigResponseOutput).ToEndpointConfigResponsePtrOutputWithContext(ctx)
}

// EndpointConfigResponsePtrInput is an input type that accepts EndpointConfigResponseArgs, EndpointConfigResponsePtr and EndpointConfigResponsePtrOutput values.
// You can construct a concrete instance of `EndpointConfigResponsePtrInput` via:
//
//          EndpointConfigResponseArgs{...}
//
//  or:
//
//          nil
type EndpointConfigResponsePtrInput interface {
	pulumi.Input

	ToEndpointConfigResponsePtrOutput() EndpointConfigResponsePtrOutput
	ToEndpointConfigResponsePtrOutputWithContext(context.Context) EndpointConfigResponsePtrOutput
}

type endpointConfigResponsePtrType EndpointConfigResponseArgs

func EndpointConfigResponsePtr(v *EndpointConfigResponseArgs) EndpointConfigResponsePtrInput {
	return (*endpointConfigResponsePtrType)(v)
}

func (*endpointConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigResponse)(nil)).Elem()
}

func (i *endpointConfigResponsePtrType) ToEndpointConfigResponsePtrOutput() EndpointConfigResponsePtrOutput {
	return i.ToEndpointConfigResponsePtrOutputWithContext(context.Background())
}

func (i *endpointConfigResponsePtrType) ToEndpointConfigResponsePtrOutputWithContext(ctx context.Context) EndpointConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigResponsePtrOutput)
}

// Endpoint config for this cluster
type EndpointConfigResponseOutput struct{ *pulumi.OutputState }

func (EndpointConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigResponse)(nil)).Elem()
}

func (o EndpointConfigResponseOutput) ToEndpointConfigResponseOutput() EndpointConfigResponseOutput {
	return o
}

func (o EndpointConfigResponseOutput) ToEndpointConfigResponseOutputWithContext(ctx context.Context) EndpointConfigResponseOutput {
	return o
}

func (o EndpointConfigResponseOutput) ToEndpointConfigResponsePtrOutput() EndpointConfigResponsePtrOutput {
	return o.ToEndpointConfigResponsePtrOutputWithContext(context.Background())
}

func (o EndpointConfigResponseOutput) ToEndpointConfigResponsePtrOutputWithContext(ctx context.Context) EndpointConfigResponsePtrOutput {
	return o.ApplyT(func(v EndpointConfigResponse) *EndpointConfigResponse {
		return &v
	}).(EndpointConfigResponsePtrOutput)
}

// Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
func (o EndpointConfigResponseOutput) EnableHttpPortAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v EndpointConfigResponse) bool { return v.EnableHttpPortAccess }).(pulumi.BoolOutput)
}

// The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.
func (o EndpointConfigResponseOutput) HttpPorts() pulumi.StringMapOutput {
	return o.ApplyT(func(v EndpointConfigResponse) map[string]string { return v.HttpPorts }).(pulumi.StringMapOutput)
}

type EndpointConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigResponse)(nil)).Elem()
}

func (o EndpointConfigResponsePtrOutput) ToEndpointConfigResponsePtrOutput() EndpointConfigResponsePtrOutput {
	return o
}

func (o EndpointConfigResponsePtrOutput) ToEndpointConfigResponsePtrOutputWithContext(ctx context.Context) EndpointConfigResponsePtrOutput {
	return o
}

func (o EndpointConfigResponsePtrOutput) Elem() EndpointConfigResponseOutput {
	return o.ApplyT(func(v *EndpointConfigResponse) EndpointConfigResponse { return *v }).(EndpointConfigResponseOutput)
}

// Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
func (o EndpointConfigResponsePtrOutput) EnableHttpPortAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableHttpPortAccess
	}).(pulumi.BoolPtrOutput)
}

// The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.
func (o EndpointConfigResponsePtrOutput) HttpPorts() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EndpointConfigResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.HttpPorts
	}).(pulumi.StringMapOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type Expr struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression *string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// ExprInput is an input type that accepts ExprArgs and ExprOutput values.
// You can construct a concrete instance of `ExprInput` via:
//
//          ExprArgs{...}
type ExprInput interface {
	pulumi.Input

	ToExprOutput() ExprOutput
	ToExprOutputWithContext(context.Context) ExprOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (ExprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (i ExprArgs) ToExprOutput() ExprOutput {
	return i.ToExprOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput)
}

func (i ExprArgs) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput).ToExprPtrOutputWithContext(ctx)
}

// ExprPtrInput is an input type that accepts ExprArgs, ExprPtr and ExprPtrOutput values.
// You can construct a concrete instance of `ExprPtrInput` via:
//
//          ExprArgs{...}
//
//  or:
//
//          nil
type ExprPtrInput interface {
	pulumi.Input

	ToExprPtrOutput() ExprPtrOutput
	ToExprPtrOutputWithContext(context.Context) ExprPtrOutput
}

type exprPtrType ExprArgs

func ExprPtr(v *ExprArgs) ExprPtrInput {
	return (*exprPtrType)(v)
}

func (*exprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (i *exprPtrType) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i *exprPtrType) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprOutput struct{ *pulumi.OutputState }

func (ExprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (o ExprOutput) ToExprOutput() ExprOutput {
	return o
}

func (o ExprOutput) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return o
}

func (o ExprOutput) ToExprPtrOutput() ExprPtrOutput {
	return o.ToExprPtrOutputWithContext(context.Background())
}

func (o ExprOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o.ApplyT(func(v Expr) *Expr {
		return &v
	}).(ExprPtrOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ExprPtrOutput struct{ *pulumi.OutputState }

func (ExprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (o ExprPtrOutput) ToExprPtrOutput() ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) Elem() ExprOutput {
	return o.ApplyT(func(v *Expr) Expr { return *v }).(ExprOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponse struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title string `pulumi:"title"`
}

// ExprResponseInput is an input type that accepts ExprResponseArgs and ExprResponseOutput values.
// You can construct a concrete instance of `ExprResponseInput` via:
//
//          ExprResponseArgs{...}
type ExprResponseInput interface {
	pulumi.Input

	ToExprResponseOutput() ExprResponseOutput
	ToExprResponseOutputWithContext(context.Context) ExprResponseOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponseArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringInput `pulumi:"title"`
}

func (ExprResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExprResponse)(nil)).Elem()
}

func (i ExprResponseArgs) ToExprResponseOutput() ExprResponseOutput {
	return i.ToExprResponseOutputWithContext(context.Background())
}

func (i ExprResponseArgs) ToExprResponseOutputWithContext(ctx context.Context) ExprResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprResponseOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponseOutput struct{ *pulumi.OutputState }

func (ExprResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExprResponse)(nil)).Elem()
}

func (o ExprResponseOutput) ToExprResponseOutput() ExprResponseOutput {
	return o
}

func (o ExprResponseOutput) ToExprResponseOutputWithContext(ctx context.Context) ExprResponseOutput {
	return o
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Title }).(pulumi.StringOutput)
}

// Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.
type GceClusterConfig struct {
	// Optional. Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs).
	ConfidentialInstanceConfig *ConfidentialInstanceConfig `pulumi:"confidentialInstanceConfig"`
	// Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.
	InternalIpOnly *bool `pulumi:"internalIpOnly"`
	// The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
	Metadata map[string]string `pulumi:"metadata"`
	// Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default projects/[project_id]/regions/global/default default
	NetworkUri *string `pulumi:"networkUri"`
	// Optional. Node Group Affinity for sole-tenant clusters.
	NodeGroupAffinity *NodeGroupAffinity `pulumi:"nodeGroupAffinity"`
	// Optional. The type of IPv6 access for a cluster.
	PrivateIpv6GoogleAccess *GceClusterConfigPrivateIpv6GoogleAccess `pulumi:"privateIpv6GoogleAccess"`
	// Optional. Reservation Affinity for consuming Zonal reservation.
	ReservationAffinity *ReservationAffinity `pulumi:"reservationAffinity"`
	// Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control
	ServiceAccountScopes []string `pulumi:"serviceAccountScopes"`
	// Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
	ShieldedInstanceConfig *ShieldedInstanceConfig `pulumi:"shieldedInstanceConfig"`
	// Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0 projects/[project_id]/regions/us-east1/subnetworks/sub0 sub0
	SubnetworkUri *string `pulumi:"subnetworkUri"`
	// The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
	Tags []string `pulumi:"tags"`
	// Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] us-central1-f
	ZoneUri *string `pulumi:"zoneUri"`
}

// GceClusterConfigInput is an input type that accepts GceClusterConfigArgs and GceClusterConfigOutput values.
// You can construct a concrete instance of `GceClusterConfigInput` via:
//
//          GceClusterConfigArgs{...}
type GceClusterConfigInput interface {
	pulumi.Input

	ToGceClusterConfigOutput() GceClusterConfigOutput
	ToGceClusterConfigOutputWithContext(context.Context) GceClusterConfigOutput
}

// Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.
type GceClusterConfigArgs struct {
	// Optional. Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs).
	ConfidentialInstanceConfig ConfidentialInstanceConfigPtrInput `pulumi:"confidentialInstanceConfig"`
	// Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.
	InternalIpOnly pulumi.BoolPtrInput `pulumi:"internalIpOnly"`
	// The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default projects/[project_id]/regions/global/default default
	NetworkUri pulumi.StringPtrInput `pulumi:"networkUri"`
	// Optional. Node Group Affinity for sole-tenant clusters.
	NodeGroupAffinity NodeGroupAffinityPtrInput `pulumi:"nodeGroupAffinity"`
	// Optional. The type of IPv6 access for a cluster.
	PrivateIpv6GoogleAccess GceClusterConfigPrivateIpv6GoogleAccessPtrInput `pulumi:"privateIpv6GoogleAccess"`
	// Optional. Reservation Affinity for consuming Zonal reservation.
	ReservationAffinity ReservationAffinityPtrInput `pulumi:"reservationAffinity"`
	// Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control
	ServiceAccountScopes pulumi.StringArrayInput `pulumi:"serviceAccountScopes"`
	// Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
	ShieldedInstanceConfig ShieldedInstanceConfigPtrInput `pulumi:"shieldedInstanceConfig"`
	// Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0 projects/[project_id]/regions/us-east1/subnetworks/sub0 sub0
	SubnetworkUri pulumi.StringPtrInput `pulumi:"subnetworkUri"`
	// The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] us-central1-f
	ZoneUri pulumi.StringPtrInput `pulumi:"zoneUri"`
}

func (GceClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GceClusterConfig)(nil)).Elem()
}

func (i GceClusterConfigArgs) ToGceClusterConfigOutput() GceClusterConfigOutput {
	return i.ToGceClusterConfigOutputWithContext(context.Background())
}

func (i GceClusterConfigArgs) ToGceClusterConfigOutputWithContext(ctx context.Context) GceClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GceClusterConfigOutput)
}

func (i GceClusterConfigArgs) ToGceClusterConfigPtrOutput() GceClusterConfigPtrOutput {
	return i.ToGceClusterConfigPtrOutputWithContext(context.Background())
}

func (i GceClusterConfigArgs) ToGceClusterConfigPtrOutputWithContext(ctx context.Context) GceClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GceClusterConfigOutput).ToGceClusterConfigPtrOutputWithContext(ctx)
}

// GceClusterConfigPtrInput is an input type that accepts GceClusterConfigArgs, GceClusterConfigPtr and GceClusterConfigPtrOutput values.
// You can construct a concrete instance of `GceClusterConfigPtrInput` via:
//
//          GceClusterConfigArgs{...}
//
//  or:
//
//          nil
type GceClusterConfigPtrInput interface {
	pulumi.Input

	ToGceClusterConfigPtrOutput() GceClusterConfigPtrOutput
	ToGceClusterConfigPtrOutputWithContext(context.Context) GceClusterConfigPtrOutput
}

type gceClusterConfigPtrType GceClusterConfigArgs

func GceClusterConfigPtr(v *GceClusterConfigArgs) GceClusterConfigPtrInput {
	return (*gceClusterConfigPtrType)(v)
}

func (*gceClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GceClusterConfig)(nil)).Elem()
}

func (i *gceClusterConfigPtrType) ToGceClusterConfigPtrOutput() GceClusterConfigPtrOutput {
	return i.ToGceClusterConfigPtrOutputWithContext(context.Background())
}

func (i *gceClusterConfigPtrType) ToGceClusterConfigPtrOutputWithContext(ctx context.Context) GceClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GceClusterConfigPtrOutput)
}

// Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.
type GceClusterConfigOutput struct{ *pulumi.OutputState }

func (GceClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GceClusterConfig)(nil)).Elem()
}

func (o GceClusterConfigOutput) ToGceClusterConfigOutput() GceClusterConfigOutput {
	return o
}

func (o GceClusterConfigOutput) ToGceClusterConfigOutputWithContext(ctx context.Context) GceClusterConfigOutput {
	return o
}

func (o GceClusterConfigOutput) ToGceClusterConfigPtrOutput() GceClusterConfigPtrOutput {
	return o.ToGceClusterConfigPtrOutputWithContext(context.Background())
}

func (o GceClusterConfigOutput) ToGceClusterConfigPtrOutputWithContext(ctx context.Context) GceClusterConfigPtrOutput {
	return o.ApplyT(func(v GceClusterConfig) *GceClusterConfig {
		return &v
	}).(GceClusterConfigPtrOutput)
}

// Optional. Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs).
func (o GceClusterConfigOutput) ConfidentialInstanceConfig() ConfidentialInstanceConfigPtrOutput {
	return o.ApplyT(func(v GceClusterConfig) *ConfidentialInstanceConfig { return v.ConfidentialInstanceConfig }).(ConfidentialInstanceConfigPtrOutput)
}

// Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.
func (o GceClusterConfigOutput) InternalIpOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GceClusterConfig) *bool { return v.InternalIpOnly }).(pulumi.BoolPtrOutput)
}

// The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
func (o GceClusterConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GceClusterConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default projects/[project_id]/regions/global/default default
func (o GceClusterConfigOutput) NetworkUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GceClusterConfig) *string { return v.NetworkUri }).(pulumi.StringPtrOutput)
}

// Optional. Node Group Affinity for sole-tenant clusters.
func (o GceClusterConfigOutput) NodeGroupAffinity() NodeGroupAffinityPtrOutput {
	return o.ApplyT(func(v GceClusterConfig) *NodeGroupAffinity { return v.NodeGroupAffinity }).(NodeGroupAffinityPtrOutput)
}

// Optional. The type of IPv6 access for a cluster.
func (o GceClusterConfigOutput) PrivateIpv6GoogleAccess() GceClusterConfigPrivateIpv6GoogleAccessPtrOutput {
	return o.ApplyT(func(v GceClusterConfig) *GceClusterConfigPrivateIpv6GoogleAccess { return v.PrivateIpv6GoogleAccess }).(GceClusterConfigPrivateIpv6GoogleAccessPtrOutput)
}

// Optional. Reservation Affinity for consuming Zonal reservation.
func (o GceClusterConfigOutput) ReservationAffinity() ReservationAffinityPtrOutput {
	return o.ApplyT(func(v GceClusterConfig) *ReservationAffinity { return v.ReservationAffinity }).(ReservationAffinityPtrOutput)
}

// Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
func (o GceClusterConfigOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GceClusterConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control
func (o GceClusterConfigOutput) ServiceAccountScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GceClusterConfig) []string { return v.ServiceAccountScopes }).(pulumi.StringArrayOutput)
}

// Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
func (o GceClusterConfigOutput) ShieldedInstanceConfig() ShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v GceClusterConfig) *ShieldedInstanceConfig { return v.ShieldedInstanceConfig }).(ShieldedInstanceConfigPtrOutput)
}

// Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0 projects/[project_id]/regions/us-east1/subnetworks/sub0 sub0
func (o GceClusterConfigOutput) SubnetworkUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GceClusterConfig) *string { return v.SubnetworkUri }).(pulumi.StringPtrOutput)
}

// The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
func (o GceClusterConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GceClusterConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] us-central1-f
func (o GceClusterConfigOutput) ZoneUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GceClusterConfig) *string { return v.ZoneUri }).(pulumi.StringPtrOutput)
}

type GceClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (GceClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GceClusterConfig)(nil)).Elem()
}

func (o GceClusterConfigPtrOutput) ToGceClusterConfigPtrOutput() GceClusterConfigPtrOutput {
	return o
}

func (o GceClusterConfigPtrOutput) ToGceClusterConfigPtrOutputWithContext(ctx context.Context) GceClusterConfigPtrOutput {
	return o
}

func (o GceClusterConfigPtrOutput) Elem() GceClusterConfigOutput {
	return o.ApplyT(func(v *GceClusterConfig) GceClusterConfig { return *v }).(GceClusterConfigOutput)
}

// Optional. Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs).
func (o GceClusterConfigPtrOutput) ConfidentialInstanceConfig() ConfidentialInstanceConfigPtrOutput {
	return o.ApplyT(func(v *GceClusterConfig) *ConfidentialInstanceConfig {
		if v == nil {
			return nil
		}
		return v.ConfidentialInstanceConfig
	}).(ConfidentialInstanceConfigPtrOutput)
}

// Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.
func (o GceClusterConfigPtrOutput) InternalIpOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GceClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.InternalIpOnly
	}).(pulumi.BoolPtrOutput)
}

// The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
func (o GceClusterConfigPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GceClusterConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default projects/[project_id]/regions/global/default default
func (o GceClusterConfigPtrOutput) NetworkUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GceClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.NetworkUri
	}).(pulumi.StringPtrOutput)
}

// Optional. Node Group Affinity for sole-tenant clusters.
func (o GceClusterConfigPtrOutput) NodeGroupAffinity() NodeGroupAffinityPtrOutput {
	return o.ApplyT(func(v *GceClusterConfig) *NodeGroupAffinity {
		if v == nil {
			return nil
		}
		return v.NodeGroupAffinity
	}).(NodeGroupAffinityPtrOutput)
}

// Optional. The type of IPv6 access for a cluster.
func (o GceClusterConfigPtrOutput) PrivateIpv6GoogleAccess() GceClusterConfigPrivateIpv6GoogleAccessPtrOutput {
	return o.ApplyT(func(v *GceClusterConfig) *GceClusterConfigPrivateIpv6GoogleAccess {
		if v == nil {
			return nil
		}
		return v.PrivateIpv6GoogleAccess
	}).(GceClusterConfigPrivateIpv6GoogleAccessPtrOutput)
}

// Optional. Reservation Affinity for consuming Zonal reservation.
func (o GceClusterConfigPtrOutput) ReservationAffinity() ReservationAffinityPtrOutput {
	return o.ApplyT(func(v *GceClusterConfig) *ReservationAffinity {
		if v == nil {
			return nil
		}
		return v.ReservationAffinity
	}).(ReservationAffinityPtrOutput)
}

// Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
func (o GceClusterConfigPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GceClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control
func (o GceClusterConfigPtrOutput) ServiceAccountScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GceClusterConfig) []string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountScopes
	}).(pulumi.StringArrayOutput)
}

// Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
func (o GceClusterConfigPtrOutput) ShieldedInstanceConfig() ShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v *GceClusterConfig) *ShieldedInstanceConfig {
		if v == nil {
			return nil
		}
		return v.ShieldedInstanceConfig
	}).(ShieldedInstanceConfigPtrOutput)
}

// Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0 projects/[project_id]/regions/us-east1/subnetworks/sub0 sub0
func (o GceClusterConfigPtrOutput) SubnetworkUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GceClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.SubnetworkUri
	}).(pulumi.StringPtrOutput)
}

// The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
func (o GceClusterConfigPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GceClusterConfig) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] us-central1-f
func (o GceClusterConfigPtrOutput) ZoneUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GceClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.ZoneUri
	}).(pulumi.StringPtrOutput)
}

// Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.
type GceClusterConfigResponse struct {
	// Optional. Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs).
	ConfidentialInstanceConfig ConfidentialInstanceConfigResponse `pulumi:"confidentialInstanceConfig"`
	// Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.
	InternalIpOnly bool `pulumi:"internalIpOnly"`
	// The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
	Metadata map[string]string `pulumi:"metadata"`
	// Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default projects/[project_id]/regions/global/default default
	NetworkUri string `pulumi:"networkUri"`
	// Optional. Node Group Affinity for sole-tenant clusters.
	NodeGroupAffinity NodeGroupAffinityResponse `pulumi:"nodeGroupAffinity"`
	// Optional. The type of IPv6 access for a cluster.
	PrivateIpv6GoogleAccess string `pulumi:"privateIpv6GoogleAccess"`
	// Optional. Reservation Affinity for consuming Zonal reservation.
	ReservationAffinity ReservationAffinityResponse `pulumi:"reservationAffinity"`
	// Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
	ServiceAccount string `pulumi:"serviceAccount"`
	// Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control
	ServiceAccountScopes []string `pulumi:"serviceAccountScopes"`
	// Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
	ShieldedInstanceConfig ShieldedInstanceConfigResponse `pulumi:"shieldedInstanceConfig"`
	// Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0 projects/[project_id]/regions/us-east1/subnetworks/sub0 sub0
	SubnetworkUri string `pulumi:"subnetworkUri"`
	// The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
	Tags []string `pulumi:"tags"`
	// Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] us-central1-f
	ZoneUri string `pulumi:"zoneUri"`
}

// GceClusterConfigResponseInput is an input type that accepts GceClusterConfigResponseArgs and GceClusterConfigResponseOutput values.
// You can construct a concrete instance of `GceClusterConfigResponseInput` via:
//
//          GceClusterConfigResponseArgs{...}
type GceClusterConfigResponseInput interface {
	pulumi.Input

	ToGceClusterConfigResponseOutput() GceClusterConfigResponseOutput
	ToGceClusterConfigResponseOutputWithContext(context.Context) GceClusterConfigResponseOutput
}

// Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.
type GceClusterConfigResponseArgs struct {
	// Optional. Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs).
	ConfidentialInstanceConfig ConfidentialInstanceConfigResponseInput `pulumi:"confidentialInstanceConfig"`
	// Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.
	InternalIpOnly pulumi.BoolInput `pulumi:"internalIpOnly"`
	// The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default projects/[project_id]/regions/global/default default
	NetworkUri pulumi.StringInput `pulumi:"networkUri"`
	// Optional. Node Group Affinity for sole-tenant clusters.
	NodeGroupAffinity NodeGroupAffinityResponseInput `pulumi:"nodeGroupAffinity"`
	// Optional. The type of IPv6 access for a cluster.
	PrivateIpv6GoogleAccess pulumi.StringInput `pulumi:"privateIpv6GoogleAccess"`
	// Optional. Reservation Affinity for consuming Zonal reservation.
	ReservationAffinity ReservationAffinityResponseInput `pulumi:"reservationAffinity"`
	// Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
	ServiceAccount pulumi.StringInput `pulumi:"serviceAccount"`
	// Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control
	ServiceAccountScopes pulumi.StringArrayInput `pulumi:"serviceAccountScopes"`
	// Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
	ShieldedInstanceConfig ShieldedInstanceConfigResponseInput `pulumi:"shieldedInstanceConfig"`
	// Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0 projects/[project_id]/regions/us-east1/subnetworks/sub0 sub0
	SubnetworkUri pulumi.StringInput `pulumi:"subnetworkUri"`
	// The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] us-central1-f
	ZoneUri pulumi.StringInput `pulumi:"zoneUri"`
}

func (GceClusterConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GceClusterConfigResponse)(nil)).Elem()
}

func (i GceClusterConfigResponseArgs) ToGceClusterConfigResponseOutput() GceClusterConfigResponseOutput {
	return i.ToGceClusterConfigResponseOutputWithContext(context.Background())
}

func (i GceClusterConfigResponseArgs) ToGceClusterConfigResponseOutputWithContext(ctx context.Context) GceClusterConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GceClusterConfigResponseOutput)
}

func (i GceClusterConfigResponseArgs) ToGceClusterConfigResponsePtrOutput() GceClusterConfigResponsePtrOutput {
	return i.ToGceClusterConfigResponsePtrOutputWithContext(context.Background())
}

func (i GceClusterConfigResponseArgs) ToGceClusterConfigResponsePtrOutputWithContext(ctx context.Context) GceClusterConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GceClusterConfigResponseOutput).ToGceClusterConfigResponsePtrOutputWithContext(ctx)
}

// GceClusterConfigResponsePtrInput is an input type that accepts GceClusterConfigResponseArgs, GceClusterConfigResponsePtr and GceClusterConfigResponsePtrOutput values.
// You can construct a concrete instance of `GceClusterConfigResponsePtrInput` via:
//
//          GceClusterConfigResponseArgs{...}
//
//  or:
//
//          nil
type GceClusterConfigResponsePtrInput interface {
	pulumi.Input

	ToGceClusterConfigResponsePtrOutput() GceClusterConfigResponsePtrOutput
	ToGceClusterConfigResponsePtrOutputWithContext(context.Context) GceClusterConfigResponsePtrOutput
}

type gceClusterConfigResponsePtrType GceClusterConfigResponseArgs

func GceClusterConfigResponsePtr(v *GceClusterConfigResponseArgs) GceClusterConfigResponsePtrInput {
	return (*gceClusterConfigResponsePtrType)(v)
}

func (*gceClusterConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GceClusterConfigResponse)(nil)).Elem()
}

func (i *gceClusterConfigResponsePtrType) ToGceClusterConfigResponsePtrOutput() GceClusterConfigResponsePtrOutput {
	return i.ToGceClusterConfigResponsePtrOutputWithContext(context.Background())
}

func (i *gceClusterConfigResponsePtrType) ToGceClusterConfigResponsePtrOutputWithContext(ctx context.Context) GceClusterConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GceClusterConfigResponsePtrOutput)
}

// Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.
type GceClusterConfigResponseOutput struct{ *pulumi.OutputState }

func (GceClusterConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GceClusterConfigResponse)(nil)).Elem()
}

func (o GceClusterConfigResponseOutput) ToGceClusterConfigResponseOutput() GceClusterConfigResponseOutput {
	return o
}

func (o GceClusterConfigResponseOutput) ToGceClusterConfigResponseOutputWithContext(ctx context.Context) GceClusterConfigResponseOutput {
	return o
}

func (o GceClusterConfigResponseOutput) ToGceClusterConfigResponsePtrOutput() GceClusterConfigResponsePtrOutput {
	return o.ToGceClusterConfigResponsePtrOutputWithContext(context.Background())
}

func (o GceClusterConfigResponseOutput) ToGceClusterConfigResponsePtrOutputWithContext(ctx context.Context) GceClusterConfigResponsePtrOutput {
	return o.ApplyT(func(v GceClusterConfigResponse) *GceClusterConfigResponse {
		return &v
	}).(GceClusterConfigResponsePtrOutput)
}

// Optional. Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs).
func (o GceClusterConfigResponseOutput) ConfidentialInstanceConfig() ConfidentialInstanceConfigResponseOutput {
	return o.ApplyT(func(v GceClusterConfigResponse) ConfidentialInstanceConfigResponse {
		return v.ConfidentialInstanceConfig
	}).(ConfidentialInstanceConfigResponseOutput)
}

// Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.
func (o GceClusterConfigResponseOutput) InternalIpOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GceClusterConfigResponse) bool { return v.InternalIpOnly }).(pulumi.BoolOutput)
}

// The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
func (o GceClusterConfigResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GceClusterConfigResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default projects/[project_id]/regions/global/default default
func (o GceClusterConfigResponseOutput) NetworkUri() pulumi.StringOutput {
	return o.ApplyT(func(v GceClusterConfigResponse) string { return v.NetworkUri }).(pulumi.StringOutput)
}

// Optional. Node Group Affinity for sole-tenant clusters.
func (o GceClusterConfigResponseOutput) NodeGroupAffinity() NodeGroupAffinityResponseOutput {
	return o.ApplyT(func(v GceClusterConfigResponse) NodeGroupAffinityResponse { return v.NodeGroupAffinity }).(NodeGroupAffinityResponseOutput)
}

// Optional. The type of IPv6 access for a cluster.
func (o GceClusterConfigResponseOutput) PrivateIpv6GoogleAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GceClusterConfigResponse) string { return v.PrivateIpv6GoogleAccess }).(pulumi.StringOutput)
}

// Optional. Reservation Affinity for consuming Zonal reservation.
func (o GceClusterConfigResponseOutput) ReservationAffinity() ReservationAffinityResponseOutput {
	return o.ApplyT(func(v GceClusterConfigResponse) ReservationAffinityResponse { return v.ReservationAffinity }).(ReservationAffinityResponseOutput)
}

// Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
func (o GceClusterConfigResponseOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GceClusterConfigResponse) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control
func (o GceClusterConfigResponseOutput) ServiceAccountScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GceClusterConfigResponse) []string { return v.ServiceAccountScopes }).(pulumi.StringArrayOutput)
}

// Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
func (o GceClusterConfigResponseOutput) ShieldedInstanceConfig() ShieldedInstanceConfigResponseOutput {
	return o.ApplyT(func(v GceClusterConfigResponse) ShieldedInstanceConfigResponse { return v.ShieldedInstanceConfig }).(ShieldedInstanceConfigResponseOutput)
}

// Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0 projects/[project_id]/regions/us-east1/subnetworks/sub0 sub0
func (o GceClusterConfigResponseOutput) SubnetworkUri() pulumi.StringOutput {
	return o.ApplyT(func(v GceClusterConfigResponse) string { return v.SubnetworkUri }).(pulumi.StringOutput)
}

// The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
func (o GceClusterConfigResponseOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GceClusterConfigResponse) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] us-central1-f
func (o GceClusterConfigResponseOutput) ZoneUri() pulumi.StringOutput {
	return o.ApplyT(func(v GceClusterConfigResponse) string { return v.ZoneUri }).(pulumi.StringOutput)
}

type GceClusterConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GceClusterConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GceClusterConfigResponse)(nil)).Elem()
}

func (o GceClusterConfigResponsePtrOutput) ToGceClusterConfigResponsePtrOutput() GceClusterConfigResponsePtrOutput {
	return o
}

func (o GceClusterConfigResponsePtrOutput) ToGceClusterConfigResponsePtrOutputWithContext(ctx context.Context) GceClusterConfigResponsePtrOutput {
	return o
}

func (o GceClusterConfigResponsePtrOutput) Elem() GceClusterConfigResponseOutput {
	return o.ApplyT(func(v *GceClusterConfigResponse) GceClusterConfigResponse { return *v }).(GceClusterConfigResponseOutput)
}

// Optional. Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs).
func (o GceClusterConfigResponsePtrOutput) ConfidentialInstanceConfig() ConfidentialInstanceConfigResponsePtrOutput {
	return o.ApplyT(func(v *GceClusterConfigResponse) *ConfidentialInstanceConfigResponse {
		if v == nil {
			return nil
		}
		return &v.ConfidentialInstanceConfig
	}).(ConfidentialInstanceConfigResponsePtrOutput)
}

// Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.
func (o GceClusterConfigResponsePtrOutput) InternalIpOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GceClusterConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.InternalIpOnly
	}).(pulumi.BoolPtrOutput)
}

// The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
func (o GceClusterConfigResponsePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GceClusterConfigResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default projects/[project_id]/regions/global/default default
func (o GceClusterConfigResponsePtrOutput) NetworkUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GceClusterConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NetworkUri
	}).(pulumi.StringPtrOutput)
}

// Optional. Node Group Affinity for sole-tenant clusters.
func (o GceClusterConfigResponsePtrOutput) NodeGroupAffinity() NodeGroupAffinityResponsePtrOutput {
	return o.ApplyT(func(v *GceClusterConfigResponse) *NodeGroupAffinityResponse {
		if v == nil {
			return nil
		}
		return &v.NodeGroupAffinity
	}).(NodeGroupAffinityResponsePtrOutput)
}

// Optional. The type of IPv6 access for a cluster.
func (o GceClusterConfigResponsePtrOutput) PrivateIpv6GoogleAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GceClusterConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateIpv6GoogleAccess
	}).(pulumi.StringPtrOutput)
}

// Optional. Reservation Affinity for consuming Zonal reservation.
func (o GceClusterConfigResponsePtrOutput) ReservationAffinity() ReservationAffinityResponsePtrOutput {
	return o.ApplyT(func(v *GceClusterConfigResponse) *ReservationAffinityResponse {
		if v == nil {
			return nil
		}
		return &v.ReservationAffinity
	}).(ReservationAffinityResponsePtrOutput)
}

// Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
func (o GceClusterConfigResponsePtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GceClusterConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control
func (o GceClusterConfigResponsePtrOutput) ServiceAccountScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GceClusterConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountScopes
	}).(pulumi.StringArrayOutput)
}

// Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
func (o GceClusterConfigResponsePtrOutput) ShieldedInstanceConfig() ShieldedInstanceConfigResponsePtrOutput {
	return o.ApplyT(func(v *GceClusterConfigResponse) *ShieldedInstanceConfigResponse {
		if v == nil {
			return nil
		}
		return &v.ShieldedInstanceConfig
	}).(ShieldedInstanceConfigResponsePtrOutput)
}

// Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0 projects/[project_id]/regions/us-east1/subnetworks/sub0 sub0
func (o GceClusterConfigResponsePtrOutput) SubnetworkUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GceClusterConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetworkUri
	}).(pulumi.StringPtrOutput)
}

// The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
func (o GceClusterConfigResponsePtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GceClusterConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] us-central1-f
func (o GceClusterConfigResponsePtrOutput) ZoneUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GceClusterConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ZoneUri
	}).(pulumi.StringPtrOutput)
}

// The GKE config for this cluster.
type GkeClusterConfig struct {
	// Optional. A target for the deployment.
	NamespacedGkeDeploymentTarget *NamespacedGkeDeploymentTarget `pulumi:"namespacedGkeDeploymentTarget"`
}

// GkeClusterConfigInput is an input type that accepts GkeClusterConfigArgs and GkeClusterConfigOutput values.
// You can construct a concrete instance of `GkeClusterConfigInput` via:
//
//          GkeClusterConfigArgs{...}
type GkeClusterConfigInput interface {
	pulumi.Input

	ToGkeClusterConfigOutput() GkeClusterConfigOutput
	ToGkeClusterConfigOutputWithContext(context.Context) GkeClusterConfigOutput
}

// The GKE config for this cluster.
type GkeClusterConfigArgs struct {
	// Optional. A target for the deployment.
	NamespacedGkeDeploymentTarget NamespacedGkeDeploymentTargetPtrInput `pulumi:"namespacedGkeDeploymentTarget"`
}

func (GkeClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeClusterConfig)(nil)).Elem()
}

func (i GkeClusterConfigArgs) ToGkeClusterConfigOutput() GkeClusterConfigOutput {
	return i.ToGkeClusterConfigOutputWithContext(context.Background())
}

func (i GkeClusterConfigArgs) ToGkeClusterConfigOutputWithContext(ctx context.Context) GkeClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterConfigOutput)
}

func (i GkeClusterConfigArgs) ToGkeClusterConfigPtrOutput() GkeClusterConfigPtrOutput {
	return i.ToGkeClusterConfigPtrOutputWithContext(context.Background())
}

func (i GkeClusterConfigArgs) ToGkeClusterConfigPtrOutputWithContext(ctx context.Context) GkeClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterConfigOutput).ToGkeClusterConfigPtrOutputWithContext(ctx)
}

// GkeClusterConfigPtrInput is an input type that accepts GkeClusterConfigArgs, GkeClusterConfigPtr and GkeClusterConfigPtrOutput values.
// You can construct a concrete instance of `GkeClusterConfigPtrInput` via:
//
//          GkeClusterConfigArgs{...}
//
//  or:
//
//          nil
type GkeClusterConfigPtrInput interface {
	pulumi.Input

	ToGkeClusterConfigPtrOutput() GkeClusterConfigPtrOutput
	ToGkeClusterConfigPtrOutputWithContext(context.Context) GkeClusterConfigPtrOutput
}

type gkeClusterConfigPtrType GkeClusterConfigArgs

func GkeClusterConfigPtr(v *GkeClusterConfigArgs) GkeClusterConfigPtrInput {
	return (*gkeClusterConfigPtrType)(v)
}

func (*gkeClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeClusterConfig)(nil)).Elem()
}

func (i *gkeClusterConfigPtrType) ToGkeClusterConfigPtrOutput() GkeClusterConfigPtrOutput {
	return i.ToGkeClusterConfigPtrOutputWithContext(context.Background())
}

func (i *gkeClusterConfigPtrType) ToGkeClusterConfigPtrOutputWithContext(ctx context.Context) GkeClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterConfigPtrOutput)
}

// The GKE config for this cluster.
type GkeClusterConfigOutput struct{ *pulumi.OutputState }

func (GkeClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeClusterConfig)(nil)).Elem()
}

func (o GkeClusterConfigOutput) ToGkeClusterConfigOutput() GkeClusterConfigOutput {
	return o
}

func (o GkeClusterConfigOutput) ToGkeClusterConfigOutputWithContext(ctx context.Context) GkeClusterConfigOutput {
	return o
}

func (o GkeClusterConfigOutput) ToGkeClusterConfigPtrOutput() GkeClusterConfigPtrOutput {
	return o.ToGkeClusterConfigPtrOutputWithContext(context.Background())
}

func (o GkeClusterConfigOutput) ToGkeClusterConfigPtrOutputWithContext(ctx context.Context) GkeClusterConfigPtrOutput {
	return o.ApplyT(func(v GkeClusterConfig) *GkeClusterConfig {
		return &v
	}).(GkeClusterConfigPtrOutput)
}

// Optional. A target for the deployment.
func (o GkeClusterConfigOutput) NamespacedGkeDeploymentTarget() NamespacedGkeDeploymentTargetPtrOutput {
	return o.ApplyT(func(v GkeClusterConfig) *NamespacedGkeDeploymentTarget { return v.NamespacedGkeDeploymentTarget }).(NamespacedGkeDeploymentTargetPtrOutput)
}

type GkeClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (GkeClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeClusterConfig)(nil)).Elem()
}

func (o GkeClusterConfigPtrOutput) ToGkeClusterConfigPtrOutput() GkeClusterConfigPtrOutput {
	return o
}

func (o GkeClusterConfigPtrOutput) ToGkeClusterConfigPtrOutputWithContext(ctx context.Context) GkeClusterConfigPtrOutput {
	return o
}

func (o GkeClusterConfigPtrOutput) Elem() GkeClusterConfigOutput {
	return o.ApplyT(func(v *GkeClusterConfig) GkeClusterConfig { return *v }).(GkeClusterConfigOutput)
}

// Optional. A target for the deployment.
func (o GkeClusterConfigPtrOutput) NamespacedGkeDeploymentTarget() NamespacedGkeDeploymentTargetPtrOutput {
	return o.ApplyT(func(v *GkeClusterConfig) *NamespacedGkeDeploymentTarget {
		if v == nil {
			return nil
		}
		return v.NamespacedGkeDeploymentTarget
	}).(NamespacedGkeDeploymentTargetPtrOutput)
}

// The GKE config for this cluster.
type GkeClusterConfigResponse struct {
	// Optional. A target for the deployment.
	NamespacedGkeDeploymentTarget NamespacedGkeDeploymentTargetResponse `pulumi:"namespacedGkeDeploymentTarget"`
}

// GkeClusterConfigResponseInput is an input type that accepts GkeClusterConfigResponseArgs and GkeClusterConfigResponseOutput values.
// You can construct a concrete instance of `GkeClusterConfigResponseInput` via:
//
//          GkeClusterConfigResponseArgs{...}
type GkeClusterConfigResponseInput interface {
	pulumi.Input

	ToGkeClusterConfigResponseOutput() GkeClusterConfigResponseOutput
	ToGkeClusterConfigResponseOutputWithContext(context.Context) GkeClusterConfigResponseOutput
}

// The GKE config for this cluster.
type GkeClusterConfigResponseArgs struct {
	// Optional. A target for the deployment.
	NamespacedGkeDeploymentTarget NamespacedGkeDeploymentTargetResponseInput `pulumi:"namespacedGkeDeploymentTarget"`
}

func (GkeClusterConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeClusterConfigResponse)(nil)).Elem()
}

func (i GkeClusterConfigResponseArgs) ToGkeClusterConfigResponseOutput() GkeClusterConfigResponseOutput {
	return i.ToGkeClusterConfigResponseOutputWithContext(context.Background())
}

func (i GkeClusterConfigResponseArgs) ToGkeClusterConfigResponseOutputWithContext(ctx context.Context) GkeClusterConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterConfigResponseOutput)
}

func (i GkeClusterConfigResponseArgs) ToGkeClusterConfigResponsePtrOutput() GkeClusterConfigResponsePtrOutput {
	return i.ToGkeClusterConfigResponsePtrOutputWithContext(context.Background())
}

func (i GkeClusterConfigResponseArgs) ToGkeClusterConfigResponsePtrOutputWithContext(ctx context.Context) GkeClusterConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterConfigResponseOutput).ToGkeClusterConfigResponsePtrOutputWithContext(ctx)
}

// GkeClusterConfigResponsePtrInput is an input type that accepts GkeClusterConfigResponseArgs, GkeClusterConfigResponsePtr and GkeClusterConfigResponsePtrOutput values.
// You can construct a concrete instance of `GkeClusterConfigResponsePtrInput` via:
//
//          GkeClusterConfigResponseArgs{...}
//
//  or:
//
//          nil
type GkeClusterConfigResponsePtrInput interface {
	pulumi.Input

	ToGkeClusterConfigResponsePtrOutput() GkeClusterConfigResponsePtrOutput
	ToGkeClusterConfigResponsePtrOutputWithContext(context.Context) GkeClusterConfigResponsePtrOutput
}

type gkeClusterConfigResponsePtrType GkeClusterConfigResponseArgs

func GkeClusterConfigResponsePtr(v *GkeClusterConfigResponseArgs) GkeClusterConfigResponsePtrInput {
	return (*gkeClusterConfigResponsePtrType)(v)
}

func (*gkeClusterConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeClusterConfigResponse)(nil)).Elem()
}

func (i *gkeClusterConfigResponsePtrType) ToGkeClusterConfigResponsePtrOutput() GkeClusterConfigResponsePtrOutput {
	return i.ToGkeClusterConfigResponsePtrOutputWithContext(context.Background())
}

func (i *gkeClusterConfigResponsePtrType) ToGkeClusterConfigResponsePtrOutputWithContext(ctx context.Context) GkeClusterConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterConfigResponsePtrOutput)
}

// The GKE config for this cluster.
type GkeClusterConfigResponseOutput struct{ *pulumi.OutputState }

func (GkeClusterConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeClusterConfigResponse)(nil)).Elem()
}

func (o GkeClusterConfigResponseOutput) ToGkeClusterConfigResponseOutput() GkeClusterConfigResponseOutput {
	return o
}

func (o GkeClusterConfigResponseOutput) ToGkeClusterConfigResponseOutputWithContext(ctx context.Context) GkeClusterConfigResponseOutput {
	return o
}

func (o GkeClusterConfigResponseOutput) ToGkeClusterConfigResponsePtrOutput() GkeClusterConfigResponsePtrOutput {
	return o.ToGkeClusterConfigResponsePtrOutputWithContext(context.Background())
}

func (o GkeClusterConfigResponseOutput) ToGkeClusterConfigResponsePtrOutputWithContext(ctx context.Context) GkeClusterConfigResponsePtrOutput {
	return o.ApplyT(func(v GkeClusterConfigResponse) *GkeClusterConfigResponse {
		return &v
	}).(GkeClusterConfigResponsePtrOutput)
}

// Optional. A target for the deployment.
func (o GkeClusterConfigResponseOutput) NamespacedGkeDeploymentTarget() NamespacedGkeDeploymentTargetResponseOutput {
	return o.ApplyT(func(v GkeClusterConfigResponse) NamespacedGkeDeploymentTargetResponse {
		return v.NamespacedGkeDeploymentTarget
	}).(NamespacedGkeDeploymentTargetResponseOutput)
}

type GkeClusterConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GkeClusterConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeClusterConfigResponse)(nil)).Elem()
}

func (o GkeClusterConfigResponsePtrOutput) ToGkeClusterConfigResponsePtrOutput() GkeClusterConfigResponsePtrOutput {
	return o
}

func (o GkeClusterConfigResponsePtrOutput) ToGkeClusterConfigResponsePtrOutputWithContext(ctx context.Context) GkeClusterConfigResponsePtrOutput {
	return o
}

func (o GkeClusterConfigResponsePtrOutput) Elem() GkeClusterConfigResponseOutput {
	return o.ApplyT(func(v *GkeClusterConfigResponse) GkeClusterConfigResponse { return *v }).(GkeClusterConfigResponseOutput)
}

// Optional. A target for the deployment.
func (o GkeClusterConfigResponsePtrOutput) NamespacedGkeDeploymentTarget() NamespacedGkeDeploymentTargetResponsePtrOutput {
	return o.ApplyT(func(v *GkeClusterConfigResponse) *NamespacedGkeDeploymentTargetResponse {
		if v == nil {
			return nil
		}
		return &v.NamespacedGkeDeploymentTarget
	}).(NamespacedGkeDeploymentTargetResponsePtrOutput)
}

// A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
type HadoopJob struct {
	// Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
	JarFileUris []string `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig *LoggingConfig `pulumi:"loggingConfig"`
	// The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
	MainClass *string `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
	MainJarFileUri *string `pulumi:"mainJarFileUri"`
	// Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
	Properties map[string]string `pulumi:"properties"`
}

// HadoopJobInput is an input type that accepts HadoopJobArgs and HadoopJobOutput values.
// You can construct a concrete instance of `HadoopJobInput` via:
//
//          HadoopJobArgs{...}
type HadoopJobInput interface {
	pulumi.Input

	ToHadoopJobOutput() HadoopJobOutput
	ToHadoopJobOutputWithContext(context.Context) HadoopJobOutput
}

// A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
type HadoopJobArgs struct {
	// Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigPtrInput `pulumi:"loggingConfig"`
	// The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
	MainClass pulumi.StringPtrInput `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
	MainJarFileUri pulumi.StringPtrInput `pulumi:"mainJarFileUri"`
	// Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (HadoopJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HadoopJob)(nil)).Elem()
}

func (i HadoopJobArgs) ToHadoopJobOutput() HadoopJobOutput {
	return i.ToHadoopJobOutputWithContext(context.Background())
}

func (i HadoopJobArgs) ToHadoopJobOutputWithContext(ctx context.Context) HadoopJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HadoopJobOutput)
}

func (i HadoopJobArgs) ToHadoopJobPtrOutput() HadoopJobPtrOutput {
	return i.ToHadoopJobPtrOutputWithContext(context.Background())
}

func (i HadoopJobArgs) ToHadoopJobPtrOutputWithContext(ctx context.Context) HadoopJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HadoopJobOutput).ToHadoopJobPtrOutputWithContext(ctx)
}

// HadoopJobPtrInput is an input type that accepts HadoopJobArgs, HadoopJobPtr and HadoopJobPtrOutput values.
// You can construct a concrete instance of `HadoopJobPtrInput` via:
//
//          HadoopJobArgs{...}
//
//  or:
//
//          nil
type HadoopJobPtrInput interface {
	pulumi.Input

	ToHadoopJobPtrOutput() HadoopJobPtrOutput
	ToHadoopJobPtrOutputWithContext(context.Context) HadoopJobPtrOutput
}

type hadoopJobPtrType HadoopJobArgs

func HadoopJobPtr(v *HadoopJobArgs) HadoopJobPtrInput {
	return (*hadoopJobPtrType)(v)
}

func (*hadoopJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HadoopJob)(nil)).Elem()
}

func (i *hadoopJobPtrType) ToHadoopJobPtrOutput() HadoopJobPtrOutput {
	return i.ToHadoopJobPtrOutputWithContext(context.Background())
}

func (i *hadoopJobPtrType) ToHadoopJobPtrOutputWithContext(ctx context.Context) HadoopJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HadoopJobPtrOutput)
}

// A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
type HadoopJobOutput struct{ *pulumi.OutputState }

func (HadoopJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HadoopJob)(nil)).Elem()
}

func (o HadoopJobOutput) ToHadoopJobOutput() HadoopJobOutput {
	return o
}

func (o HadoopJobOutput) ToHadoopJobOutputWithContext(ctx context.Context) HadoopJobOutput {
	return o
}

func (o HadoopJobOutput) ToHadoopJobPtrOutput() HadoopJobPtrOutput {
	return o.ToHadoopJobPtrOutputWithContext(context.Background())
}

func (o HadoopJobOutput) ToHadoopJobPtrOutputWithContext(ctx context.Context) HadoopJobPtrOutput {
	return o.ApplyT(func(v HadoopJob) *HadoopJob {
		return &v
	}).(HadoopJobPtrOutput)
}

// Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
func (o HadoopJobOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HadoopJob) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o HadoopJobOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HadoopJob) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o HadoopJobOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HadoopJob) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
func (o HadoopJobOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HadoopJob) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o HadoopJobOutput) LoggingConfig() LoggingConfigPtrOutput {
	return o.ApplyT(func(v HadoopJob) *LoggingConfig { return v.LoggingConfig }).(LoggingConfigPtrOutput)
}

// The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
func (o HadoopJobOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HadoopJob) *string { return v.MainClass }).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
func (o HadoopJobOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HadoopJob) *string { return v.MainJarFileUri }).(pulumi.StringPtrOutput)
}

// Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
func (o HadoopJobOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v HadoopJob) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type HadoopJobPtrOutput struct{ *pulumi.OutputState }

func (HadoopJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HadoopJob)(nil)).Elem()
}

func (o HadoopJobPtrOutput) ToHadoopJobPtrOutput() HadoopJobPtrOutput {
	return o
}

func (o HadoopJobPtrOutput) ToHadoopJobPtrOutputWithContext(ctx context.Context) HadoopJobPtrOutput {
	return o
}

func (o HadoopJobPtrOutput) Elem() HadoopJobOutput {
	return o.ApplyT(func(v *HadoopJob) HadoopJob { return *v }).(HadoopJobOutput)
}

// Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
func (o HadoopJobPtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HadoopJob) []string {
		if v == nil {
			return nil
		}
		return v.ArchiveUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o HadoopJobPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HadoopJob) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o HadoopJobPtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HadoopJob) []string {
		if v == nil {
			return nil
		}
		return v.FileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
func (o HadoopJobPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HadoopJob) []string {
		if v == nil {
			return nil
		}
		return v.JarFileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o HadoopJobPtrOutput) LoggingConfig() LoggingConfigPtrOutput {
	return o.ApplyT(func(v *HadoopJob) *LoggingConfig {
		if v == nil {
			return nil
		}
		return v.LoggingConfig
	}).(LoggingConfigPtrOutput)
}

// The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
func (o HadoopJobPtrOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopJob) *string {
		if v == nil {
			return nil
		}
		return v.MainClass
	}).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
func (o HadoopJobPtrOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopJob) *string {
		if v == nil {
			return nil
		}
		return v.MainJarFileUri
	}).(pulumi.StringPtrOutput)
}

// Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
func (o HadoopJobPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HadoopJob) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
type HadoopJobResponse struct {
	// Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
	JarFileUris []string `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigResponse `pulumi:"loggingConfig"`
	// The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
	MainClass string `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
	MainJarFileUri string `pulumi:"mainJarFileUri"`
	// Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
	Properties map[string]string `pulumi:"properties"`
}

// HadoopJobResponseInput is an input type that accepts HadoopJobResponseArgs and HadoopJobResponseOutput values.
// You can construct a concrete instance of `HadoopJobResponseInput` via:
//
//          HadoopJobResponseArgs{...}
type HadoopJobResponseInput interface {
	pulumi.Input

	ToHadoopJobResponseOutput() HadoopJobResponseOutput
	ToHadoopJobResponseOutputWithContext(context.Context) HadoopJobResponseOutput
}

// A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
type HadoopJobResponseArgs struct {
	// Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigResponseInput `pulumi:"loggingConfig"`
	// The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
	MainClass pulumi.StringInput `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
	MainJarFileUri pulumi.StringInput `pulumi:"mainJarFileUri"`
	// Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (HadoopJobResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HadoopJobResponse)(nil)).Elem()
}

func (i HadoopJobResponseArgs) ToHadoopJobResponseOutput() HadoopJobResponseOutput {
	return i.ToHadoopJobResponseOutputWithContext(context.Background())
}

func (i HadoopJobResponseArgs) ToHadoopJobResponseOutputWithContext(ctx context.Context) HadoopJobResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HadoopJobResponseOutput)
}

func (i HadoopJobResponseArgs) ToHadoopJobResponsePtrOutput() HadoopJobResponsePtrOutput {
	return i.ToHadoopJobResponsePtrOutputWithContext(context.Background())
}

func (i HadoopJobResponseArgs) ToHadoopJobResponsePtrOutputWithContext(ctx context.Context) HadoopJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HadoopJobResponseOutput).ToHadoopJobResponsePtrOutputWithContext(ctx)
}

// HadoopJobResponsePtrInput is an input type that accepts HadoopJobResponseArgs, HadoopJobResponsePtr and HadoopJobResponsePtrOutput values.
// You can construct a concrete instance of `HadoopJobResponsePtrInput` via:
//
//          HadoopJobResponseArgs{...}
//
//  or:
//
//          nil
type HadoopJobResponsePtrInput interface {
	pulumi.Input

	ToHadoopJobResponsePtrOutput() HadoopJobResponsePtrOutput
	ToHadoopJobResponsePtrOutputWithContext(context.Context) HadoopJobResponsePtrOutput
}

type hadoopJobResponsePtrType HadoopJobResponseArgs

func HadoopJobResponsePtr(v *HadoopJobResponseArgs) HadoopJobResponsePtrInput {
	return (*hadoopJobResponsePtrType)(v)
}

func (*hadoopJobResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HadoopJobResponse)(nil)).Elem()
}

func (i *hadoopJobResponsePtrType) ToHadoopJobResponsePtrOutput() HadoopJobResponsePtrOutput {
	return i.ToHadoopJobResponsePtrOutputWithContext(context.Background())
}

func (i *hadoopJobResponsePtrType) ToHadoopJobResponsePtrOutputWithContext(ctx context.Context) HadoopJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HadoopJobResponsePtrOutput)
}

// A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
type HadoopJobResponseOutput struct{ *pulumi.OutputState }

func (HadoopJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HadoopJobResponse)(nil)).Elem()
}

func (o HadoopJobResponseOutput) ToHadoopJobResponseOutput() HadoopJobResponseOutput {
	return o
}

func (o HadoopJobResponseOutput) ToHadoopJobResponseOutputWithContext(ctx context.Context) HadoopJobResponseOutput {
	return o
}

func (o HadoopJobResponseOutput) ToHadoopJobResponsePtrOutput() HadoopJobResponsePtrOutput {
	return o.ToHadoopJobResponsePtrOutputWithContext(context.Background())
}

func (o HadoopJobResponseOutput) ToHadoopJobResponsePtrOutputWithContext(ctx context.Context) HadoopJobResponsePtrOutput {
	return o.ApplyT(func(v HadoopJobResponse) *HadoopJobResponse {
		return &v
	}).(HadoopJobResponsePtrOutput)
}

// Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
func (o HadoopJobResponseOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HadoopJobResponse) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o HadoopJobResponseOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HadoopJobResponse) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o HadoopJobResponseOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HadoopJobResponse) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
func (o HadoopJobResponseOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HadoopJobResponse) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o HadoopJobResponseOutput) LoggingConfig() LoggingConfigResponseOutput {
	return o.ApplyT(func(v HadoopJobResponse) LoggingConfigResponse { return v.LoggingConfig }).(LoggingConfigResponseOutput)
}

// The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
func (o HadoopJobResponseOutput) MainClass() pulumi.StringOutput {
	return o.ApplyT(func(v HadoopJobResponse) string { return v.MainClass }).(pulumi.StringOutput)
}

// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
func (o HadoopJobResponseOutput) MainJarFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v HadoopJobResponse) string { return v.MainJarFileUri }).(pulumi.StringOutput)
}

// Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
func (o HadoopJobResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v HadoopJobResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type HadoopJobResponsePtrOutput struct{ *pulumi.OutputState }

func (HadoopJobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HadoopJobResponse)(nil)).Elem()
}

func (o HadoopJobResponsePtrOutput) ToHadoopJobResponsePtrOutput() HadoopJobResponsePtrOutput {
	return o
}

func (o HadoopJobResponsePtrOutput) ToHadoopJobResponsePtrOutputWithContext(ctx context.Context) HadoopJobResponsePtrOutput {
	return o
}

func (o HadoopJobResponsePtrOutput) Elem() HadoopJobResponseOutput {
	return o.ApplyT(func(v *HadoopJobResponse) HadoopJobResponse { return *v }).(HadoopJobResponseOutput)
}

// Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
func (o HadoopJobResponsePtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HadoopJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.ArchiveUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o HadoopJobResponsePtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HadoopJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o HadoopJobResponsePtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HadoopJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.FileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
func (o HadoopJobResponsePtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HadoopJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.JarFileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o HadoopJobResponsePtrOutput) LoggingConfig() LoggingConfigResponsePtrOutput {
	return o.ApplyT(func(v *HadoopJobResponse) *LoggingConfigResponse {
		if v == nil {
			return nil
		}
		return &v.LoggingConfig
	}).(LoggingConfigResponsePtrOutput)
}

// The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
func (o HadoopJobResponsePtrOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopJobResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MainClass
	}).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
func (o HadoopJobResponsePtrOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HadoopJobResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MainJarFileUri
	}).(pulumi.StringPtrOutput)
}

// Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
func (o HadoopJobResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HadoopJobResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.
type HiveJob struct {
	// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
	ContinueOnFailure *bool `pulumi:"continueOnFailure"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
	JarFileUris []string `pulumi:"jarFileUris"`
	// Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains Hive queries.
	QueryFileUri *string `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList *QueryList `pulumi:"queryList"`
	// Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

// HiveJobInput is an input type that accepts HiveJobArgs and HiveJobOutput values.
// You can construct a concrete instance of `HiveJobInput` via:
//
//          HiveJobArgs{...}
type HiveJobInput interface {
	pulumi.Input

	ToHiveJobOutput() HiveJobOutput
	ToHiveJobOutputWithContext(context.Context) HiveJobOutput
}

// A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.
type HiveJobArgs struct {
	// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
	ContinueOnFailure pulumi.BoolPtrInput `pulumi:"continueOnFailure"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains Hive queries.
	QueryFileUri pulumi.StringPtrInput `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList QueryListPtrInput `pulumi:"queryList"`
	// Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (HiveJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveJob)(nil)).Elem()
}

func (i HiveJobArgs) ToHiveJobOutput() HiveJobOutput {
	return i.ToHiveJobOutputWithContext(context.Background())
}

func (i HiveJobArgs) ToHiveJobOutputWithContext(ctx context.Context) HiveJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveJobOutput)
}

func (i HiveJobArgs) ToHiveJobPtrOutput() HiveJobPtrOutput {
	return i.ToHiveJobPtrOutputWithContext(context.Background())
}

func (i HiveJobArgs) ToHiveJobPtrOutputWithContext(ctx context.Context) HiveJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveJobOutput).ToHiveJobPtrOutputWithContext(ctx)
}

// HiveJobPtrInput is an input type that accepts HiveJobArgs, HiveJobPtr and HiveJobPtrOutput values.
// You can construct a concrete instance of `HiveJobPtrInput` via:
//
//          HiveJobArgs{...}
//
//  or:
//
//          nil
type HiveJobPtrInput interface {
	pulumi.Input

	ToHiveJobPtrOutput() HiveJobPtrOutput
	ToHiveJobPtrOutputWithContext(context.Context) HiveJobPtrOutput
}

type hiveJobPtrType HiveJobArgs

func HiveJobPtr(v *HiveJobArgs) HiveJobPtrInput {
	return (*hiveJobPtrType)(v)
}

func (*hiveJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HiveJob)(nil)).Elem()
}

func (i *hiveJobPtrType) ToHiveJobPtrOutput() HiveJobPtrOutput {
	return i.ToHiveJobPtrOutputWithContext(context.Background())
}

func (i *hiveJobPtrType) ToHiveJobPtrOutputWithContext(ctx context.Context) HiveJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveJobPtrOutput)
}

// A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.
type HiveJobOutput struct{ *pulumi.OutputState }

func (HiveJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveJob)(nil)).Elem()
}

func (o HiveJobOutput) ToHiveJobOutput() HiveJobOutput {
	return o
}

func (o HiveJobOutput) ToHiveJobOutputWithContext(ctx context.Context) HiveJobOutput {
	return o
}

func (o HiveJobOutput) ToHiveJobPtrOutput() HiveJobPtrOutput {
	return o.ToHiveJobPtrOutputWithContext(context.Background())
}

func (o HiveJobOutput) ToHiveJobPtrOutputWithContext(ctx context.Context) HiveJobPtrOutput {
	return o.ApplyT(func(v HiveJob) *HiveJob {
		return &v
	}).(HiveJobPtrOutput)
}

// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
func (o HiveJobOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HiveJob) *bool { return v.ContinueOnFailure }).(pulumi.BoolPtrOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
func (o HiveJobOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HiveJob) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
func (o HiveJobOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v HiveJob) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains Hive queries.
func (o HiveJobOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HiveJob) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

// A list of queries.
func (o HiveJobOutput) QueryList() QueryListPtrOutput {
	return o.ApplyT(func(v HiveJob) *QueryList { return v.QueryList }).(QueryListPtrOutput)
}

// Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).
func (o HiveJobOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v HiveJob) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type HiveJobPtrOutput struct{ *pulumi.OutputState }

func (HiveJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HiveJob)(nil)).Elem()
}

func (o HiveJobPtrOutput) ToHiveJobPtrOutput() HiveJobPtrOutput {
	return o
}

func (o HiveJobPtrOutput) ToHiveJobPtrOutputWithContext(ctx context.Context) HiveJobPtrOutput {
	return o
}

func (o HiveJobPtrOutput) Elem() HiveJobOutput {
	return o.ApplyT(func(v *HiveJob) HiveJob { return *v }).(HiveJobOutput)
}

// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
func (o HiveJobPtrOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HiveJob) *bool {
		if v == nil {
			return nil
		}
		return v.ContinueOnFailure
	}).(pulumi.BoolPtrOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
func (o HiveJobPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HiveJob) []string {
		if v == nil {
			return nil
		}
		return v.JarFileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
func (o HiveJobPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HiveJob) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains Hive queries.
func (o HiveJobPtrOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HiveJob) *string {
		if v == nil {
			return nil
		}
		return v.QueryFileUri
	}).(pulumi.StringPtrOutput)
}

// A list of queries.
func (o HiveJobPtrOutput) QueryList() QueryListPtrOutput {
	return o.ApplyT(func(v *HiveJob) *QueryList {
		if v == nil {
			return nil
		}
		return v.QueryList
	}).(QueryListPtrOutput)
}

// Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).
func (o HiveJobPtrOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HiveJob) map[string]string {
		if v == nil {
			return nil
		}
		return v.ScriptVariables
	}).(pulumi.StringMapOutput)
}

// A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.
type HiveJobResponse struct {
	// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
	ContinueOnFailure bool `pulumi:"continueOnFailure"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
	JarFileUris []string `pulumi:"jarFileUris"`
	// Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains Hive queries.
	QueryFileUri string `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList QueryListResponse `pulumi:"queryList"`
	// Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

// HiveJobResponseInput is an input type that accepts HiveJobResponseArgs and HiveJobResponseOutput values.
// You can construct a concrete instance of `HiveJobResponseInput` via:
//
//          HiveJobResponseArgs{...}
type HiveJobResponseInput interface {
	pulumi.Input

	ToHiveJobResponseOutput() HiveJobResponseOutput
	ToHiveJobResponseOutputWithContext(context.Context) HiveJobResponseOutput
}

// A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.
type HiveJobResponseArgs struct {
	// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
	ContinueOnFailure pulumi.BoolInput `pulumi:"continueOnFailure"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains Hive queries.
	QueryFileUri pulumi.StringInput `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList QueryListResponseInput `pulumi:"queryList"`
	// Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (HiveJobResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveJobResponse)(nil)).Elem()
}

func (i HiveJobResponseArgs) ToHiveJobResponseOutput() HiveJobResponseOutput {
	return i.ToHiveJobResponseOutputWithContext(context.Background())
}

func (i HiveJobResponseArgs) ToHiveJobResponseOutputWithContext(ctx context.Context) HiveJobResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveJobResponseOutput)
}

func (i HiveJobResponseArgs) ToHiveJobResponsePtrOutput() HiveJobResponsePtrOutput {
	return i.ToHiveJobResponsePtrOutputWithContext(context.Background())
}

func (i HiveJobResponseArgs) ToHiveJobResponsePtrOutputWithContext(ctx context.Context) HiveJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveJobResponseOutput).ToHiveJobResponsePtrOutputWithContext(ctx)
}

// HiveJobResponsePtrInput is an input type that accepts HiveJobResponseArgs, HiveJobResponsePtr and HiveJobResponsePtrOutput values.
// You can construct a concrete instance of `HiveJobResponsePtrInput` via:
//
//          HiveJobResponseArgs{...}
//
//  or:
//
//          nil
type HiveJobResponsePtrInput interface {
	pulumi.Input

	ToHiveJobResponsePtrOutput() HiveJobResponsePtrOutput
	ToHiveJobResponsePtrOutputWithContext(context.Context) HiveJobResponsePtrOutput
}

type hiveJobResponsePtrType HiveJobResponseArgs

func HiveJobResponsePtr(v *HiveJobResponseArgs) HiveJobResponsePtrInput {
	return (*hiveJobResponsePtrType)(v)
}

func (*hiveJobResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HiveJobResponse)(nil)).Elem()
}

func (i *hiveJobResponsePtrType) ToHiveJobResponsePtrOutput() HiveJobResponsePtrOutput {
	return i.ToHiveJobResponsePtrOutputWithContext(context.Background())
}

func (i *hiveJobResponsePtrType) ToHiveJobResponsePtrOutputWithContext(ctx context.Context) HiveJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveJobResponsePtrOutput)
}

// A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.
type HiveJobResponseOutput struct{ *pulumi.OutputState }

func (HiveJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveJobResponse)(nil)).Elem()
}

func (o HiveJobResponseOutput) ToHiveJobResponseOutput() HiveJobResponseOutput {
	return o
}

func (o HiveJobResponseOutput) ToHiveJobResponseOutputWithContext(ctx context.Context) HiveJobResponseOutput {
	return o
}

func (o HiveJobResponseOutput) ToHiveJobResponsePtrOutput() HiveJobResponsePtrOutput {
	return o.ToHiveJobResponsePtrOutputWithContext(context.Background())
}

func (o HiveJobResponseOutput) ToHiveJobResponsePtrOutputWithContext(ctx context.Context) HiveJobResponsePtrOutput {
	return o.ApplyT(func(v HiveJobResponse) *HiveJobResponse {
		return &v
	}).(HiveJobResponsePtrOutput)
}

// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
func (o HiveJobResponseOutput) ContinueOnFailure() pulumi.BoolOutput {
	return o.ApplyT(func(v HiveJobResponse) bool { return v.ContinueOnFailure }).(pulumi.BoolOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
func (o HiveJobResponseOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HiveJobResponse) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
func (o HiveJobResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v HiveJobResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains Hive queries.
func (o HiveJobResponseOutput) QueryFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v HiveJobResponse) string { return v.QueryFileUri }).(pulumi.StringOutput)
}

// A list of queries.
func (o HiveJobResponseOutput) QueryList() QueryListResponseOutput {
	return o.ApplyT(func(v HiveJobResponse) QueryListResponse { return v.QueryList }).(QueryListResponseOutput)
}

// Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).
func (o HiveJobResponseOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v HiveJobResponse) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type HiveJobResponsePtrOutput struct{ *pulumi.OutputState }

func (HiveJobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HiveJobResponse)(nil)).Elem()
}

func (o HiveJobResponsePtrOutput) ToHiveJobResponsePtrOutput() HiveJobResponsePtrOutput {
	return o
}

func (o HiveJobResponsePtrOutput) ToHiveJobResponsePtrOutputWithContext(ctx context.Context) HiveJobResponsePtrOutput {
	return o
}

func (o HiveJobResponsePtrOutput) Elem() HiveJobResponseOutput {
	return o.ApplyT(func(v *HiveJobResponse) HiveJobResponse { return *v }).(HiveJobResponseOutput)
}

// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
func (o HiveJobResponsePtrOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HiveJobResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ContinueOnFailure
	}).(pulumi.BoolPtrOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
func (o HiveJobResponsePtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HiveJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.JarFileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
func (o HiveJobResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HiveJobResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains Hive queries.
func (o HiveJobResponsePtrOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HiveJobResponse) *string {
		if v == nil {
			return nil
		}
		return &v.QueryFileUri
	}).(pulumi.StringPtrOutput)
}

// A list of queries.
func (o HiveJobResponsePtrOutput) QueryList() QueryListResponsePtrOutput {
	return o.ApplyT(func(v *HiveJobResponse) *QueryListResponse {
		if v == nil {
			return nil
		}
		return &v.QueryList
	}).(QueryListResponsePtrOutput)
}

// Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).
func (o HiveJobResponsePtrOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HiveJobResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.ScriptVariables
	}).(pulumi.StringMapOutput)
}

// Identity related configuration, including service account based secure multi-tenancy user mappings.
type IdentityConfig struct {
	// Map of user to service account.
	UserServiceAccountMapping map[string]string `pulumi:"userServiceAccountMapping"`
}

// IdentityConfigInput is an input type that accepts IdentityConfigArgs and IdentityConfigOutput values.
// You can construct a concrete instance of `IdentityConfigInput` via:
//
//          IdentityConfigArgs{...}
type IdentityConfigInput interface {
	pulumi.Input

	ToIdentityConfigOutput() IdentityConfigOutput
	ToIdentityConfigOutputWithContext(context.Context) IdentityConfigOutput
}

// Identity related configuration, including service account based secure multi-tenancy user mappings.
type IdentityConfigArgs struct {
	// Map of user to service account.
	UserServiceAccountMapping pulumi.StringMapInput `pulumi:"userServiceAccountMapping"`
}

func (IdentityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityConfig)(nil)).Elem()
}

func (i IdentityConfigArgs) ToIdentityConfigOutput() IdentityConfigOutput {
	return i.ToIdentityConfigOutputWithContext(context.Background())
}

func (i IdentityConfigArgs) ToIdentityConfigOutputWithContext(ctx context.Context) IdentityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityConfigOutput)
}

func (i IdentityConfigArgs) ToIdentityConfigPtrOutput() IdentityConfigPtrOutput {
	return i.ToIdentityConfigPtrOutputWithContext(context.Background())
}

func (i IdentityConfigArgs) ToIdentityConfigPtrOutputWithContext(ctx context.Context) IdentityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityConfigOutput).ToIdentityConfigPtrOutputWithContext(ctx)
}

// IdentityConfigPtrInput is an input type that accepts IdentityConfigArgs, IdentityConfigPtr and IdentityConfigPtrOutput values.
// You can construct a concrete instance of `IdentityConfigPtrInput` via:
//
//          IdentityConfigArgs{...}
//
//  or:
//
//          nil
type IdentityConfigPtrInput interface {
	pulumi.Input

	ToIdentityConfigPtrOutput() IdentityConfigPtrOutput
	ToIdentityConfigPtrOutputWithContext(context.Context) IdentityConfigPtrOutput
}

type identityConfigPtrType IdentityConfigArgs

func IdentityConfigPtr(v *IdentityConfigArgs) IdentityConfigPtrInput {
	return (*identityConfigPtrType)(v)
}

func (*identityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityConfig)(nil)).Elem()
}

func (i *identityConfigPtrType) ToIdentityConfigPtrOutput() IdentityConfigPtrOutput {
	return i.ToIdentityConfigPtrOutputWithContext(context.Background())
}

func (i *identityConfigPtrType) ToIdentityConfigPtrOutputWithContext(ctx context.Context) IdentityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityConfigPtrOutput)
}

// Identity related configuration, including service account based secure multi-tenancy user mappings.
type IdentityConfigOutput struct{ *pulumi.OutputState }

func (IdentityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityConfig)(nil)).Elem()
}

func (o IdentityConfigOutput) ToIdentityConfigOutput() IdentityConfigOutput {
	return o
}

func (o IdentityConfigOutput) ToIdentityConfigOutputWithContext(ctx context.Context) IdentityConfigOutput {
	return o
}

func (o IdentityConfigOutput) ToIdentityConfigPtrOutput() IdentityConfigPtrOutput {
	return o.ToIdentityConfigPtrOutputWithContext(context.Background())
}

func (o IdentityConfigOutput) ToIdentityConfigPtrOutputWithContext(ctx context.Context) IdentityConfigPtrOutput {
	return o.ApplyT(func(v IdentityConfig) *IdentityConfig {
		return &v
	}).(IdentityConfigPtrOutput)
}

// Map of user to service account.
func (o IdentityConfigOutput) UserServiceAccountMapping() pulumi.StringMapOutput {
	return o.ApplyT(func(v IdentityConfig) map[string]string { return v.UserServiceAccountMapping }).(pulumi.StringMapOutput)
}

type IdentityConfigPtrOutput struct{ *pulumi.OutputState }

func (IdentityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityConfig)(nil)).Elem()
}

func (o IdentityConfigPtrOutput) ToIdentityConfigPtrOutput() IdentityConfigPtrOutput {
	return o
}

func (o IdentityConfigPtrOutput) ToIdentityConfigPtrOutputWithContext(ctx context.Context) IdentityConfigPtrOutput {
	return o
}

func (o IdentityConfigPtrOutput) Elem() IdentityConfigOutput {
	return o.ApplyT(func(v *IdentityConfig) IdentityConfig { return *v }).(IdentityConfigOutput)
}

// Map of user to service account.
func (o IdentityConfigPtrOutput) UserServiceAccountMapping() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IdentityConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserServiceAccountMapping
	}).(pulumi.StringMapOutput)
}

// Identity related configuration, including service account based secure multi-tenancy user mappings.
type IdentityConfigResponse struct {
	// Map of user to service account.
	UserServiceAccountMapping map[string]string `pulumi:"userServiceAccountMapping"`
}

// IdentityConfigResponseInput is an input type that accepts IdentityConfigResponseArgs and IdentityConfigResponseOutput values.
// You can construct a concrete instance of `IdentityConfigResponseInput` via:
//
//          IdentityConfigResponseArgs{...}
type IdentityConfigResponseInput interface {
	pulumi.Input

	ToIdentityConfigResponseOutput() IdentityConfigResponseOutput
	ToIdentityConfigResponseOutputWithContext(context.Context) IdentityConfigResponseOutput
}

// Identity related configuration, including service account based secure multi-tenancy user mappings.
type IdentityConfigResponseArgs struct {
	// Map of user to service account.
	UserServiceAccountMapping pulumi.StringMapInput `pulumi:"userServiceAccountMapping"`
}

func (IdentityConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityConfigResponse)(nil)).Elem()
}

func (i IdentityConfigResponseArgs) ToIdentityConfigResponseOutput() IdentityConfigResponseOutput {
	return i.ToIdentityConfigResponseOutputWithContext(context.Background())
}

func (i IdentityConfigResponseArgs) ToIdentityConfigResponseOutputWithContext(ctx context.Context) IdentityConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityConfigResponseOutput)
}

func (i IdentityConfigResponseArgs) ToIdentityConfigResponsePtrOutput() IdentityConfigResponsePtrOutput {
	return i.ToIdentityConfigResponsePtrOutputWithContext(context.Background())
}

func (i IdentityConfigResponseArgs) ToIdentityConfigResponsePtrOutputWithContext(ctx context.Context) IdentityConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityConfigResponseOutput).ToIdentityConfigResponsePtrOutputWithContext(ctx)
}

// IdentityConfigResponsePtrInput is an input type that accepts IdentityConfigResponseArgs, IdentityConfigResponsePtr and IdentityConfigResponsePtrOutput values.
// You can construct a concrete instance of `IdentityConfigResponsePtrInput` via:
//
//          IdentityConfigResponseArgs{...}
//
//  or:
//
//          nil
type IdentityConfigResponsePtrInput interface {
	pulumi.Input

	ToIdentityConfigResponsePtrOutput() IdentityConfigResponsePtrOutput
	ToIdentityConfigResponsePtrOutputWithContext(context.Context) IdentityConfigResponsePtrOutput
}

type identityConfigResponsePtrType IdentityConfigResponseArgs

func IdentityConfigResponsePtr(v *IdentityConfigResponseArgs) IdentityConfigResponsePtrInput {
	return (*identityConfigResponsePtrType)(v)
}

func (*identityConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityConfigResponse)(nil)).Elem()
}

func (i *identityConfigResponsePtrType) ToIdentityConfigResponsePtrOutput() IdentityConfigResponsePtrOutput {
	return i.ToIdentityConfigResponsePtrOutputWithContext(context.Background())
}

func (i *identityConfigResponsePtrType) ToIdentityConfigResponsePtrOutputWithContext(ctx context.Context) IdentityConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityConfigResponsePtrOutput)
}

// Identity related configuration, including service account based secure multi-tenancy user mappings.
type IdentityConfigResponseOutput struct{ *pulumi.OutputState }

func (IdentityConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityConfigResponse)(nil)).Elem()
}

func (o IdentityConfigResponseOutput) ToIdentityConfigResponseOutput() IdentityConfigResponseOutput {
	return o
}

func (o IdentityConfigResponseOutput) ToIdentityConfigResponseOutputWithContext(ctx context.Context) IdentityConfigResponseOutput {
	return o
}

func (o IdentityConfigResponseOutput) ToIdentityConfigResponsePtrOutput() IdentityConfigResponsePtrOutput {
	return o.ToIdentityConfigResponsePtrOutputWithContext(context.Background())
}

func (o IdentityConfigResponseOutput) ToIdentityConfigResponsePtrOutputWithContext(ctx context.Context) IdentityConfigResponsePtrOutput {
	return o.ApplyT(func(v IdentityConfigResponse) *IdentityConfigResponse {
		return &v
	}).(IdentityConfigResponsePtrOutput)
}

// Map of user to service account.
func (o IdentityConfigResponseOutput) UserServiceAccountMapping() pulumi.StringMapOutput {
	return o.ApplyT(func(v IdentityConfigResponse) map[string]string { return v.UserServiceAccountMapping }).(pulumi.StringMapOutput)
}

type IdentityConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityConfigResponse)(nil)).Elem()
}

func (o IdentityConfigResponsePtrOutput) ToIdentityConfigResponsePtrOutput() IdentityConfigResponsePtrOutput {
	return o
}

func (o IdentityConfigResponsePtrOutput) ToIdentityConfigResponsePtrOutputWithContext(ctx context.Context) IdentityConfigResponsePtrOutput {
	return o
}

func (o IdentityConfigResponsePtrOutput) Elem() IdentityConfigResponseOutput {
	return o.ApplyT(func(v *IdentityConfigResponse) IdentityConfigResponse { return *v }).(IdentityConfigResponseOutput)
}

// Map of user to service account.
func (o IdentityConfigResponsePtrOutput) UserServiceAccountMapping() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IdentityConfigResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserServiceAccountMapping
	}).(pulumi.StringMapOutput)
}

// Configuration for the size bounds of an instance group, including its proportional size to other groups.
type InstanceGroupAutoscalingPolicyConfig struct {
	// Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.
	MaxInstances int `pulumi:"maxInstances"`
	// Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
	MinInstances *int `pulumi:"minInstances"`
	// Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.
	Weight *int `pulumi:"weight"`
}

// InstanceGroupAutoscalingPolicyConfigInput is an input type that accepts InstanceGroupAutoscalingPolicyConfigArgs and InstanceGroupAutoscalingPolicyConfigOutput values.
// You can construct a concrete instance of `InstanceGroupAutoscalingPolicyConfigInput` via:
//
//          InstanceGroupAutoscalingPolicyConfigArgs{...}
type InstanceGroupAutoscalingPolicyConfigInput interface {
	pulumi.Input

	ToInstanceGroupAutoscalingPolicyConfigOutput() InstanceGroupAutoscalingPolicyConfigOutput
	ToInstanceGroupAutoscalingPolicyConfigOutputWithContext(context.Context) InstanceGroupAutoscalingPolicyConfigOutput
}

// Configuration for the size bounds of an instance group, including its proportional size to other groups.
type InstanceGroupAutoscalingPolicyConfigArgs struct {
	// Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.
	MaxInstances pulumi.IntInput `pulumi:"maxInstances"`
	// Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
	MinInstances pulumi.IntPtrInput `pulumi:"minInstances"`
	// Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (InstanceGroupAutoscalingPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupAutoscalingPolicyConfig)(nil)).Elem()
}

func (i InstanceGroupAutoscalingPolicyConfigArgs) ToInstanceGroupAutoscalingPolicyConfigOutput() InstanceGroupAutoscalingPolicyConfigOutput {
	return i.ToInstanceGroupAutoscalingPolicyConfigOutputWithContext(context.Background())
}

func (i InstanceGroupAutoscalingPolicyConfigArgs) ToInstanceGroupAutoscalingPolicyConfigOutputWithContext(ctx context.Context) InstanceGroupAutoscalingPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupAutoscalingPolicyConfigOutput)
}

func (i InstanceGroupAutoscalingPolicyConfigArgs) ToInstanceGroupAutoscalingPolicyConfigPtrOutput() InstanceGroupAutoscalingPolicyConfigPtrOutput {
	return i.ToInstanceGroupAutoscalingPolicyConfigPtrOutputWithContext(context.Background())
}

func (i InstanceGroupAutoscalingPolicyConfigArgs) ToInstanceGroupAutoscalingPolicyConfigPtrOutputWithContext(ctx context.Context) InstanceGroupAutoscalingPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupAutoscalingPolicyConfigOutput).ToInstanceGroupAutoscalingPolicyConfigPtrOutputWithContext(ctx)
}

// InstanceGroupAutoscalingPolicyConfigPtrInput is an input type that accepts InstanceGroupAutoscalingPolicyConfigArgs, InstanceGroupAutoscalingPolicyConfigPtr and InstanceGroupAutoscalingPolicyConfigPtrOutput values.
// You can construct a concrete instance of `InstanceGroupAutoscalingPolicyConfigPtrInput` via:
//
//          InstanceGroupAutoscalingPolicyConfigArgs{...}
//
//  or:
//
//          nil
type InstanceGroupAutoscalingPolicyConfigPtrInput interface {
	pulumi.Input

	ToInstanceGroupAutoscalingPolicyConfigPtrOutput() InstanceGroupAutoscalingPolicyConfigPtrOutput
	ToInstanceGroupAutoscalingPolicyConfigPtrOutputWithContext(context.Context) InstanceGroupAutoscalingPolicyConfigPtrOutput
}

type instanceGroupAutoscalingPolicyConfigPtrType InstanceGroupAutoscalingPolicyConfigArgs

func InstanceGroupAutoscalingPolicyConfigPtr(v *InstanceGroupAutoscalingPolicyConfigArgs) InstanceGroupAutoscalingPolicyConfigPtrInput {
	return (*instanceGroupAutoscalingPolicyConfigPtrType)(v)
}

func (*instanceGroupAutoscalingPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupAutoscalingPolicyConfig)(nil)).Elem()
}

func (i *instanceGroupAutoscalingPolicyConfigPtrType) ToInstanceGroupAutoscalingPolicyConfigPtrOutput() InstanceGroupAutoscalingPolicyConfigPtrOutput {
	return i.ToInstanceGroupAutoscalingPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *instanceGroupAutoscalingPolicyConfigPtrType) ToInstanceGroupAutoscalingPolicyConfigPtrOutputWithContext(ctx context.Context) InstanceGroupAutoscalingPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupAutoscalingPolicyConfigPtrOutput)
}

// Configuration for the size bounds of an instance group, including its proportional size to other groups.
type InstanceGroupAutoscalingPolicyConfigOutput struct{ *pulumi.OutputState }

func (InstanceGroupAutoscalingPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupAutoscalingPolicyConfig)(nil)).Elem()
}

func (o InstanceGroupAutoscalingPolicyConfigOutput) ToInstanceGroupAutoscalingPolicyConfigOutput() InstanceGroupAutoscalingPolicyConfigOutput {
	return o
}

func (o InstanceGroupAutoscalingPolicyConfigOutput) ToInstanceGroupAutoscalingPolicyConfigOutputWithContext(ctx context.Context) InstanceGroupAutoscalingPolicyConfigOutput {
	return o
}

func (o InstanceGroupAutoscalingPolicyConfigOutput) ToInstanceGroupAutoscalingPolicyConfigPtrOutput() InstanceGroupAutoscalingPolicyConfigPtrOutput {
	return o.ToInstanceGroupAutoscalingPolicyConfigPtrOutputWithContext(context.Background())
}

func (o InstanceGroupAutoscalingPolicyConfigOutput) ToInstanceGroupAutoscalingPolicyConfigPtrOutputWithContext(ctx context.Context) InstanceGroupAutoscalingPolicyConfigPtrOutput {
	return o.ApplyT(func(v InstanceGroupAutoscalingPolicyConfig) *InstanceGroupAutoscalingPolicyConfig {
		return &v
	}).(InstanceGroupAutoscalingPolicyConfigPtrOutput)
}

// Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.
func (o InstanceGroupAutoscalingPolicyConfigOutput) MaxInstances() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceGroupAutoscalingPolicyConfig) int { return v.MaxInstances }).(pulumi.IntOutput)
}

// Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
func (o InstanceGroupAutoscalingPolicyConfigOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceGroupAutoscalingPolicyConfig) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

// Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.
func (o InstanceGroupAutoscalingPolicyConfigOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceGroupAutoscalingPolicyConfig) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type InstanceGroupAutoscalingPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceGroupAutoscalingPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupAutoscalingPolicyConfig)(nil)).Elem()
}

func (o InstanceGroupAutoscalingPolicyConfigPtrOutput) ToInstanceGroupAutoscalingPolicyConfigPtrOutput() InstanceGroupAutoscalingPolicyConfigPtrOutput {
	return o
}

func (o InstanceGroupAutoscalingPolicyConfigPtrOutput) ToInstanceGroupAutoscalingPolicyConfigPtrOutputWithContext(ctx context.Context) InstanceGroupAutoscalingPolicyConfigPtrOutput {
	return o
}

func (o InstanceGroupAutoscalingPolicyConfigPtrOutput) Elem() InstanceGroupAutoscalingPolicyConfigOutput {
	return o.ApplyT(func(v *InstanceGroupAutoscalingPolicyConfig) InstanceGroupAutoscalingPolicyConfig { return *v }).(InstanceGroupAutoscalingPolicyConfigOutput)
}

// Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.
func (o InstanceGroupAutoscalingPolicyConfigPtrOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceGroupAutoscalingPolicyConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MaxInstances
	}).(pulumi.IntPtrOutput)
}

// Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
func (o InstanceGroupAutoscalingPolicyConfigPtrOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceGroupAutoscalingPolicyConfig) *int {
		if v == nil {
			return nil
		}
		return v.MinInstances
	}).(pulumi.IntPtrOutput)
}

// Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.
func (o InstanceGroupAutoscalingPolicyConfigPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceGroupAutoscalingPolicyConfig) *int {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

// Configuration for the size bounds of an instance group, including its proportional size to other groups.
type InstanceGroupAutoscalingPolicyConfigResponse struct {
	// Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.
	MaxInstances int `pulumi:"maxInstances"`
	// Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
	MinInstances int `pulumi:"minInstances"`
	// Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.
	Weight int `pulumi:"weight"`
}

// InstanceGroupAutoscalingPolicyConfigResponseInput is an input type that accepts InstanceGroupAutoscalingPolicyConfigResponseArgs and InstanceGroupAutoscalingPolicyConfigResponseOutput values.
// You can construct a concrete instance of `InstanceGroupAutoscalingPolicyConfigResponseInput` via:
//
//          InstanceGroupAutoscalingPolicyConfigResponseArgs{...}
type InstanceGroupAutoscalingPolicyConfigResponseInput interface {
	pulumi.Input

	ToInstanceGroupAutoscalingPolicyConfigResponseOutput() InstanceGroupAutoscalingPolicyConfigResponseOutput
	ToInstanceGroupAutoscalingPolicyConfigResponseOutputWithContext(context.Context) InstanceGroupAutoscalingPolicyConfigResponseOutput
}

// Configuration for the size bounds of an instance group, including its proportional size to other groups.
type InstanceGroupAutoscalingPolicyConfigResponseArgs struct {
	// Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.
	MaxInstances pulumi.IntInput `pulumi:"maxInstances"`
	// Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
	MinInstances pulumi.IntInput `pulumi:"minInstances"`
	// Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (InstanceGroupAutoscalingPolicyConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupAutoscalingPolicyConfigResponse)(nil)).Elem()
}

func (i InstanceGroupAutoscalingPolicyConfigResponseArgs) ToInstanceGroupAutoscalingPolicyConfigResponseOutput() InstanceGroupAutoscalingPolicyConfigResponseOutput {
	return i.ToInstanceGroupAutoscalingPolicyConfigResponseOutputWithContext(context.Background())
}

func (i InstanceGroupAutoscalingPolicyConfigResponseArgs) ToInstanceGroupAutoscalingPolicyConfigResponseOutputWithContext(ctx context.Context) InstanceGroupAutoscalingPolicyConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupAutoscalingPolicyConfigResponseOutput)
}

func (i InstanceGroupAutoscalingPolicyConfigResponseArgs) ToInstanceGroupAutoscalingPolicyConfigResponsePtrOutput() InstanceGroupAutoscalingPolicyConfigResponsePtrOutput {
	return i.ToInstanceGroupAutoscalingPolicyConfigResponsePtrOutputWithContext(context.Background())
}

func (i InstanceGroupAutoscalingPolicyConfigResponseArgs) ToInstanceGroupAutoscalingPolicyConfigResponsePtrOutputWithContext(ctx context.Context) InstanceGroupAutoscalingPolicyConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupAutoscalingPolicyConfigResponseOutput).ToInstanceGroupAutoscalingPolicyConfigResponsePtrOutputWithContext(ctx)
}

// InstanceGroupAutoscalingPolicyConfigResponsePtrInput is an input type that accepts InstanceGroupAutoscalingPolicyConfigResponseArgs, InstanceGroupAutoscalingPolicyConfigResponsePtr and InstanceGroupAutoscalingPolicyConfigResponsePtrOutput values.
// You can construct a concrete instance of `InstanceGroupAutoscalingPolicyConfigResponsePtrInput` via:
//
//          InstanceGroupAutoscalingPolicyConfigResponseArgs{...}
//
//  or:
//
//          nil
type InstanceGroupAutoscalingPolicyConfigResponsePtrInput interface {
	pulumi.Input

	ToInstanceGroupAutoscalingPolicyConfigResponsePtrOutput() InstanceGroupAutoscalingPolicyConfigResponsePtrOutput
	ToInstanceGroupAutoscalingPolicyConfigResponsePtrOutputWithContext(context.Context) InstanceGroupAutoscalingPolicyConfigResponsePtrOutput
}

type instanceGroupAutoscalingPolicyConfigResponsePtrType InstanceGroupAutoscalingPolicyConfigResponseArgs

func InstanceGroupAutoscalingPolicyConfigResponsePtr(v *InstanceGroupAutoscalingPolicyConfigResponseArgs) InstanceGroupAutoscalingPolicyConfigResponsePtrInput {
	return (*instanceGroupAutoscalingPolicyConfigResponsePtrType)(v)
}

func (*instanceGroupAutoscalingPolicyConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupAutoscalingPolicyConfigResponse)(nil)).Elem()
}

func (i *instanceGroupAutoscalingPolicyConfigResponsePtrType) ToInstanceGroupAutoscalingPolicyConfigResponsePtrOutput() InstanceGroupAutoscalingPolicyConfigResponsePtrOutput {
	return i.ToInstanceGroupAutoscalingPolicyConfigResponsePtrOutputWithContext(context.Background())
}

func (i *instanceGroupAutoscalingPolicyConfigResponsePtrType) ToInstanceGroupAutoscalingPolicyConfigResponsePtrOutputWithContext(ctx context.Context) InstanceGroupAutoscalingPolicyConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupAutoscalingPolicyConfigResponsePtrOutput)
}

// Configuration for the size bounds of an instance group, including its proportional size to other groups.
type InstanceGroupAutoscalingPolicyConfigResponseOutput struct{ *pulumi.OutputState }

func (InstanceGroupAutoscalingPolicyConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupAutoscalingPolicyConfigResponse)(nil)).Elem()
}

func (o InstanceGroupAutoscalingPolicyConfigResponseOutput) ToInstanceGroupAutoscalingPolicyConfigResponseOutput() InstanceGroupAutoscalingPolicyConfigResponseOutput {
	return o
}

func (o InstanceGroupAutoscalingPolicyConfigResponseOutput) ToInstanceGroupAutoscalingPolicyConfigResponseOutputWithContext(ctx context.Context) InstanceGroupAutoscalingPolicyConfigResponseOutput {
	return o
}

func (o InstanceGroupAutoscalingPolicyConfigResponseOutput) ToInstanceGroupAutoscalingPolicyConfigResponsePtrOutput() InstanceGroupAutoscalingPolicyConfigResponsePtrOutput {
	return o.ToInstanceGroupAutoscalingPolicyConfigResponsePtrOutputWithContext(context.Background())
}

func (o InstanceGroupAutoscalingPolicyConfigResponseOutput) ToInstanceGroupAutoscalingPolicyConfigResponsePtrOutputWithContext(ctx context.Context) InstanceGroupAutoscalingPolicyConfigResponsePtrOutput {
	return o.ApplyT(func(v InstanceGroupAutoscalingPolicyConfigResponse) *InstanceGroupAutoscalingPolicyConfigResponse {
		return &v
	}).(InstanceGroupAutoscalingPolicyConfigResponsePtrOutput)
}

// Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.
func (o InstanceGroupAutoscalingPolicyConfigResponseOutput) MaxInstances() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceGroupAutoscalingPolicyConfigResponse) int { return v.MaxInstances }).(pulumi.IntOutput)
}

// Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
func (o InstanceGroupAutoscalingPolicyConfigResponseOutput) MinInstances() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceGroupAutoscalingPolicyConfigResponse) int { return v.MinInstances }).(pulumi.IntOutput)
}

// Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.
func (o InstanceGroupAutoscalingPolicyConfigResponseOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceGroupAutoscalingPolicyConfigResponse) int { return v.Weight }).(pulumi.IntOutput)
}

type InstanceGroupAutoscalingPolicyConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (InstanceGroupAutoscalingPolicyConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupAutoscalingPolicyConfigResponse)(nil)).Elem()
}

func (o InstanceGroupAutoscalingPolicyConfigResponsePtrOutput) ToInstanceGroupAutoscalingPolicyConfigResponsePtrOutput() InstanceGroupAutoscalingPolicyConfigResponsePtrOutput {
	return o
}

func (o InstanceGroupAutoscalingPolicyConfigResponsePtrOutput) ToInstanceGroupAutoscalingPolicyConfigResponsePtrOutputWithContext(ctx context.Context) InstanceGroupAutoscalingPolicyConfigResponsePtrOutput {
	return o
}

func (o InstanceGroupAutoscalingPolicyConfigResponsePtrOutput) Elem() InstanceGroupAutoscalingPolicyConfigResponseOutput {
	return o.ApplyT(func(v *InstanceGroupAutoscalingPolicyConfigResponse) InstanceGroupAutoscalingPolicyConfigResponse {
		return *v
	}).(InstanceGroupAutoscalingPolicyConfigResponseOutput)
}

// Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.
func (o InstanceGroupAutoscalingPolicyConfigResponsePtrOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceGroupAutoscalingPolicyConfigResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaxInstances
	}).(pulumi.IntPtrOutput)
}

// Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
func (o InstanceGroupAutoscalingPolicyConfigResponsePtrOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceGroupAutoscalingPolicyConfigResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MinInstances
	}).(pulumi.IntPtrOutput)
}

// Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.
func (o InstanceGroupAutoscalingPolicyConfigResponsePtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceGroupAutoscalingPolicyConfigResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Weight
	}).(pulumi.IntPtrOutput)
}

// The config settings for Compute Engine resources in an instance group, such as a master or worker group.
type InstanceGroupConfig struct {
	// Optional. The Compute Engine accelerator configuration for these instances.
	Accelerators []AcceleratorConfig `pulumi:"accelerators"`
	// Optional. Disk option config settings.
	DiskConfig *DiskConfig `pulumi:"diskConfig"`
	// Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
	ImageUri *string `pulumi:"imageUri"`
	// Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
	MachineTypeUri *string `pulumi:"machineTypeUri"`
	// Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
	NumInstances *int `pulumi:"numInstances"`
	// Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
	Preemptibility *InstanceGroupConfigPreemptibility `pulumi:"preemptibility"`
}

// InstanceGroupConfigInput is an input type that accepts InstanceGroupConfigArgs and InstanceGroupConfigOutput values.
// You can construct a concrete instance of `InstanceGroupConfigInput` via:
//
//          InstanceGroupConfigArgs{...}
type InstanceGroupConfigInput interface {
	pulumi.Input

	ToInstanceGroupConfigOutput() InstanceGroupConfigOutput
	ToInstanceGroupConfigOutputWithContext(context.Context) InstanceGroupConfigOutput
}

// The config settings for Compute Engine resources in an instance group, such as a master or worker group.
type InstanceGroupConfigArgs struct {
	// Optional. The Compute Engine accelerator configuration for these instances.
	Accelerators AcceleratorConfigArrayInput `pulumi:"accelerators"`
	// Optional. Disk option config settings.
	DiskConfig DiskConfigPtrInput `pulumi:"diskConfig"`
	// Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
	ImageUri pulumi.StringPtrInput `pulumi:"imageUri"`
	// Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
	MachineTypeUri pulumi.StringPtrInput `pulumi:"machineTypeUri"`
	// Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
	NumInstances pulumi.IntPtrInput `pulumi:"numInstances"`
	// Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
	Preemptibility InstanceGroupConfigPreemptibilityPtrInput `pulumi:"preemptibility"`
}

func (InstanceGroupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupConfig)(nil)).Elem()
}

func (i InstanceGroupConfigArgs) ToInstanceGroupConfigOutput() InstanceGroupConfigOutput {
	return i.ToInstanceGroupConfigOutputWithContext(context.Background())
}

func (i InstanceGroupConfigArgs) ToInstanceGroupConfigOutputWithContext(ctx context.Context) InstanceGroupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupConfigOutput)
}

func (i InstanceGroupConfigArgs) ToInstanceGroupConfigPtrOutput() InstanceGroupConfigPtrOutput {
	return i.ToInstanceGroupConfigPtrOutputWithContext(context.Background())
}

func (i InstanceGroupConfigArgs) ToInstanceGroupConfigPtrOutputWithContext(ctx context.Context) InstanceGroupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupConfigOutput).ToInstanceGroupConfigPtrOutputWithContext(ctx)
}

// InstanceGroupConfigPtrInput is an input type that accepts InstanceGroupConfigArgs, InstanceGroupConfigPtr and InstanceGroupConfigPtrOutput values.
// You can construct a concrete instance of `InstanceGroupConfigPtrInput` via:
//
//          InstanceGroupConfigArgs{...}
//
//  or:
//
//          nil
type InstanceGroupConfigPtrInput interface {
	pulumi.Input

	ToInstanceGroupConfigPtrOutput() InstanceGroupConfigPtrOutput
	ToInstanceGroupConfigPtrOutputWithContext(context.Context) InstanceGroupConfigPtrOutput
}

type instanceGroupConfigPtrType InstanceGroupConfigArgs

func InstanceGroupConfigPtr(v *InstanceGroupConfigArgs) InstanceGroupConfigPtrInput {
	return (*instanceGroupConfigPtrType)(v)
}

func (*instanceGroupConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupConfig)(nil)).Elem()
}

func (i *instanceGroupConfigPtrType) ToInstanceGroupConfigPtrOutput() InstanceGroupConfigPtrOutput {
	return i.ToInstanceGroupConfigPtrOutputWithContext(context.Background())
}

func (i *instanceGroupConfigPtrType) ToInstanceGroupConfigPtrOutputWithContext(ctx context.Context) InstanceGroupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupConfigPtrOutput)
}

// The config settings for Compute Engine resources in an instance group, such as a master or worker group.
type InstanceGroupConfigOutput struct{ *pulumi.OutputState }

func (InstanceGroupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupConfig)(nil)).Elem()
}

func (o InstanceGroupConfigOutput) ToInstanceGroupConfigOutput() InstanceGroupConfigOutput {
	return o
}

func (o InstanceGroupConfigOutput) ToInstanceGroupConfigOutputWithContext(ctx context.Context) InstanceGroupConfigOutput {
	return o
}

func (o InstanceGroupConfigOutput) ToInstanceGroupConfigPtrOutput() InstanceGroupConfigPtrOutput {
	return o.ToInstanceGroupConfigPtrOutputWithContext(context.Background())
}

func (o InstanceGroupConfigOutput) ToInstanceGroupConfigPtrOutputWithContext(ctx context.Context) InstanceGroupConfigPtrOutput {
	return o.ApplyT(func(v InstanceGroupConfig) *InstanceGroupConfig {
		return &v
	}).(InstanceGroupConfigPtrOutput)
}

// Optional. The Compute Engine accelerator configuration for these instances.
func (o InstanceGroupConfigOutput) Accelerators() AcceleratorConfigArrayOutput {
	return o.ApplyT(func(v InstanceGroupConfig) []AcceleratorConfig { return v.Accelerators }).(AcceleratorConfigArrayOutput)
}

// Optional. Disk option config settings.
func (o InstanceGroupConfigOutput) DiskConfig() DiskConfigPtrOutput {
	return o.ApplyT(func(v InstanceGroupConfig) *DiskConfig { return v.DiskConfig }).(DiskConfigPtrOutput)
}

// Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
func (o InstanceGroupConfigOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGroupConfig) *string { return v.ImageUri }).(pulumi.StringPtrOutput)
}

// Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
func (o InstanceGroupConfigOutput) MachineTypeUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGroupConfig) *string { return v.MachineTypeUri }).(pulumi.StringPtrOutput)
}

// Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
func (o InstanceGroupConfigOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceGroupConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
func (o InstanceGroupConfigOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceGroupConfig) *int { return v.NumInstances }).(pulumi.IntPtrOutput)
}

// Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
func (o InstanceGroupConfigOutput) Preemptibility() InstanceGroupConfigPreemptibilityPtrOutput {
	return o.ApplyT(func(v InstanceGroupConfig) *InstanceGroupConfigPreemptibility { return v.Preemptibility }).(InstanceGroupConfigPreemptibilityPtrOutput)
}

type InstanceGroupConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceGroupConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupConfig)(nil)).Elem()
}

func (o InstanceGroupConfigPtrOutput) ToInstanceGroupConfigPtrOutput() InstanceGroupConfigPtrOutput {
	return o
}

func (o InstanceGroupConfigPtrOutput) ToInstanceGroupConfigPtrOutputWithContext(ctx context.Context) InstanceGroupConfigPtrOutput {
	return o
}

func (o InstanceGroupConfigPtrOutput) Elem() InstanceGroupConfigOutput {
	return o.ApplyT(func(v *InstanceGroupConfig) InstanceGroupConfig { return *v }).(InstanceGroupConfigOutput)
}

// Optional. The Compute Engine accelerator configuration for these instances.
func (o InstanceGroupConfigPtrOutput) Accelerators() AcceleratorConfigArrayOutput {
	return o.ApplyT(func(v *InstanceGroupConfig) []AcceleratorConfig {
		if v == nil {
			return nil
		}
		return v.Accelerators
	}).(AcceleratorConfigArrayOutput)
}

// Optional. Disk option config settings.
func (o InstanceGroupConfigPtrOutput) DiskConfig() DiskConfigPtrOutput {
	return o.ApplyT(func(v *InstanceGroupConfig) *DiskConfig {
		if v == nil {
			return nil
		}
		return v.DiskConfig
	}).(DiskConfigPtrOutput)
}

// Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
func (o InstanceGroupConfigPtrOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGroupConfig) *string {
		if v == nil {
			return nil
		}
		return v.ImageUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
func (o InstanceGroupConfigPtrOutput) MachineTypeUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGroupConfig) *string {
		if v == nil {
			return nil
		}
		return v.MachineTypeUri
	}).(pulumi.StringPtrOutput)
}

// Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
func (o InstanceGroupConfigPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGroupConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinCpuPlatform
	}).(pulumi.StringPtrOutput)
}

// Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
func (o InstanceGroupConfigPtrOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceGroupConfig) *int {
		if v == nil {
			return nil
		}
		return v.NumInstances
	}).(pulumi.IntPtrOutput)
}

// Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
func (o InstanceGroupConfigPtrOutput) Preemptibility() InstanceGroupConfigPreemptibilityPtrOutput {
	return o.ApplyT(func(v *InstanceGroupConfig) *InstanceGroupConfigPreemptibility {
		if v == nil {
			return nil
		}
		return v.Preemptibility
	}).(InstanceGroupConfigPreemptibilityPtrOutput)
}

// The config settings for Compute Engine resources in an instance group, such as a master or worker group.
type InstanceGroupConfigResponse struct {
	// Optional. The Compute Engine accelerator configuration for these instances.
	Accelerators []AcceleratorConfigResponse `pulumi:"accelerators"`
	// Optional. Disk option config settings.
	DiskConfig DiskConfigResponse `pulumi:"diskConfig"`
	// Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
	ImageUri string `pulumi:"imageUri"`
	// The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
	InstanceNames []string `pulumi:"instanceNames"`
	// List of references to Compute Engine instances.
	InstanceReferences []InstanceReferenceResponse `pulumi:"instanceReferences"`
	// Specifies that this instance group contains preemptible instances.
	IsPreemptible bool `pulumi:"isPreemptible"`
	// Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
	MachineTypeUri string `pulumi:"machineTypeUri"`
	// The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.
	ManagedGroupConfig ManagedGroupConfigResponse `pulumi:"managedGroupConfig"`
	// Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
	MinCpuPlatform string `pulumi:"minCpuPlatform"`
	// Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
	NumInstances int `pulumi:"numInstances"`
	// Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
	Preemptibility string `pulumi:"preemptibility"`
}

// InstanceGroupConfigResponseInput is an input type that accepts InstanceGroupConfigResponseArgs and InstanceGroupConfigResponseOutput values.
// You can construct a concrete instance of `InstanceGroupConfigResponseInput` via:
//
//          InstanceGroupConfigResponseArgs{...}
type InstanceGroupConfigResponseInput interface {
	pulumi.Input

	ToInstanceGroupConfigResponseOutput() InstanceGroupConfigResponseOutput
	ToInstanceGroupConfigResponseOutputWithContext(context.Context) InstanceGroupConfigResponseOutput
}

// The config settings for Compute Engine resources in an instance group, such as a master or worker group.
type InstanceGroupConfigResponseArgs struct {
	// Optional. The Compute Engine accelerator configuration for these instances.
	Accelerators AcceleratorConfigResponseArrayInput `pulumi:"accelerators"`
	// Optional. Disk option config settings.
	DiskConfig DiskConfigResponseInput `pulumi:"diskConfig"`
	// Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
	ImageUri pulumi.StringInput `pulumi:"imageUri"`
	// The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// List of references to Compute Engine instances.
	InstanceReferences InstanceReferenceResponseArrayInput `pulumi:"instanceReferences"`
	// Specifies that this instance group contains preemptible instances.
	IsPreemptible pulumi.BoolInput `pulumi:"isPreemptible"`
	// Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
	MachineTypeUri pulumi.StringInput `pulumi:"machineTypeUri"`
	// The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.
	ManagedGroupConfig ManagedGroupConfigResponseInput `pulumi:"managedGroupConfig"`
	// Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
	MinCpuPlatform pulumi.StringInput `pulumi:"minCpuPlatform"`
	// Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
	NumInstances pulumi.IntInput `pulumi:"numInstances"`
	// Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
	Preemptibility pulumi.StringInput `pulumi:"preemptibility"`
}

func (InstanceGroupConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupConfigResponse)(nil)).Elem()
}

func (i InstanceGroupConfigResponseArgs) ToInstanceGroupConfigResponseOutput() InstanceGroupConfigResponseOutput {
	return i.ToInstanceGroupConfigResponseOutputWithContext(context.Background())
}

func (i InstanceGroupConfigResponseArgs) ToInstanceGroupConfigResponseOutputWithContext(ctx context.Context) InstanceGroupConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupConfigResponseOutput)
}

func (i InstanceGroupConfigResponseArgs) ToInstanceGroupConfigResponsePtrOutput() InstanceGroupConfigResponsePtrOutput {
	return i.ToInstanceGroupConfigResponsePtrOutputWithContext(context.Background())
}

func (i InstanceGroupConfigResponseArgs) ToInstanceGroupConfigResponsePtrOutputWithContext(ctx context.Context) InstanceGroupConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupConfigResponseOutput).ToInstanceGroupConfigResponsePtrOutputWithContext(ctx)
}

// InstanceGroupConfigResponsePtrInput is an input type that accepts InstanceGroupConfigResponseArgs, InstanceGroupConfigResponsePtr and InstanceGroupConfigResponsePtrOutput values.
// You can construct a concrete instance of `InstanceGroupConfigResponsePtrInput` via:
//
//          InstanceGroupConfigResponseArgs{...}
//
//  or:
//
//          nil
type InstanceGroupConfigResponsePtrInput interface {
	pulumi.Input

	ToInstanceGroupConfigResponsePtrOutput() InstanceGroupConfigResponsePtrOutput
	ToInstanceGroupConfigResponsePtrOutputWithContext(context.Context) InstanceGroupConfigResponsePtrOutput
}

type instanceGroupConfigResponsePtrType InstanceGroupConfigResponseArgs

func InstanceGroupConfigResponsePtr(v *InstanceGroupConfigResponseArgs) InstanceGroupConfigResponsePtrInput {
	return (*instanceGroupConfigResponsePtrType)(v)
}

func (*instanceGroupConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupConfigResponse)(nil)).Elem()
}

func (i *instanceGroupConfigResponsePtrType) ToInstanceGroupConfigResponsePtrOutput() InstanceGroupConfigResponsePtrOutput {
	return i.ToInstanceGroupConfigResponsePtrOutputWithContext(context.Background())
}

func (i *instanceGroupConfigResponsePtrType) ToInstanceGroupConfigResponsePtrOutputWithContext(ctx context.Context) InstanceGroupConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupConfigResponsePtrOutput)
}

// The config settings for Compute Engine resources in an instance group, such as a master or worker group.
type InstanceGroupConfigResponseOutput struct{ *pulumi.OutputState }

func (InstanceGroupConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupConfigResponse)(nil)).Elem()
}

func (o InstanceGroupConfigResponseOutput) ToInstanceGroupConfigResponseOutput() InstanceGroupConfigResponseOutput {
	return o
}

func (o InstanceGroupConfigResponseOutput) ToInstanceGroupConfigResponseOutputWithContext(ctx context.Context) InstanceGroupConfigResponseOutput {
	return o
}

func (o InstanceGroupConfigResponseOutput) ToInstanceGroupConfigResponsePtrOutput() InstanceGroupConfigResponsePtrOutput {
	return o.ToInstanceGroupConfigResponsePtrOutputWithContext(context.Background())
}

func (o InstanceGroupConfigResponseOutput) ToInstanceGroupConfigResponsePtrOutputWithContext(ctx context.Context) InstanceGroupConfigResponsePtrOutput {
	return o.ApplyT(func(v InstanceGroupConfigResponse) *InstanceGroupConfigResponse {
		return &v
	}).(InstanceGroupConfigResponsePtrOutput)
}

// Optional. The Compute Engine accelerator configuration for these instances.
func (o InstanceGroupConfigResponseOutput) Accelerators() AcceleratorConfigResponseArrayOutput {
	return o.ApplyT(func(v InstanceGroupConfigResponse) []AcceleratorConfigResponse { return v.Accelerators }).(AcceleratorConfigResponseArrayOutput)
}

// Optional. Disk option config settings.
func (o InstanceGroupConfigResponseOutput) DiskConfig() DiskConfigResponseOutput {
	return o.ApplyT(func(v InstanceGroupConfigResponse) DiskConfigResponse { return v.DiskConfig }).(DiskConfigResponseOutput)
}

// Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
func (o InstanceGroupConfigResponseOutput) ImageUri() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceGroupConfigResponse) string { return v.ImageUri }).(pulumi.StringOutput)
}

// The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
func (o InstanceGroupConfigResponseOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceGroupConfigResponse) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// List of references to Compute Engine instances.
func (o InstanceGroupConfigResponseOutput) InstanceReferences() InstanceReferenceResponseArrayOutput {
	return o.ApplyT(func(v InstanceGroupConfigResponse) []InstanceReferenceResponse { return v.InstanceReferences }).(InstanceReferenceResponseArrayOutput)
}

// Specifies that this instance group contains preemptible instances.
func (o InstanceGroupConfigResponseOutput) IsPreemptible() pulumi.BoolOutput {
	return o.ApplyT(func(v InstanceGroupConfigResponse) bool { return v.IsPreemptible }).(pulumi.BoolOutput)
}

// Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
func (o InstanceGroupConfigResponseOutput) MachineTypeUri() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceGroupConfigResponse) string { return v.MachineTypeUri }).(pulumi.StringOutput)
}

// The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.
func (o InstanceGroupConfigResponseOutput) ManagedGroupConfig() ManagedGroupConfigResponseOutput {
	return o.ApplyT(func(v InstanceGroupConfigResponse) ManagedGroupConfigResponse { return v.ManagedGroupConfig }).(ManagedGroupConfigResponseOutput)
}

// Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
func (o InstanceGroupConfigResponseOutput) MinCpuPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceGroupConfigResponse) string { return v.MinCpuPlatform }).(pulumi.StringOutput)
}

// Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
func (o InstanceGroupConfigResponseOutput) NumInstances() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceGroupConfigResponse) int { return v.NumInstances }).(pulumi.IntOutput)
}

// Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
func (o InstanceGroupConfigResponseOutput) Preemptibility() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceGroupConfigResponse) string { return v.Preemptibility }).(pulumi.StringOutput)
}

type InstanceGroupConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (InstanceGroupConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupConfigResponse)(nil)).Elem()
}

func (o InstanceGroupConfigResponsePtrOutput) ToInstanceGroupConfigResponsePtrOutput() InstanceGroupConfigResponsePtrOutput {
	return o
}

func (o InstanceGroupConfigResponsePtrOutput) ToInstanceGroupConfigResponsePtrOutputWithContext(ctx context.Context) InstanceGroupConfigResponsePtrOutput {
	return o
}

func (o InstanceGroupConfigResponsePtrOutput) Elem() InstanceGroupConfigResponseOutput {
	return o.ApplyT(func(v *InstanceGroupConfigResponse) InstanceGroupConfigResponse { return *v }).(InstanceGroupConfigResponseOutput)
}

// Optional. The Compute Engine accelerator configuration for these instances.
func (o InstanceGroupConfigResponsePtrOutput) Accelerators() AcceleratorConfigResponseArrayOutput {
	return o.ApplyT(func(v *InstanceGroupConfigResponse) []AcceleratorConfigResponse {
		if v == nil {
			return nil
		}
		return v.Accelerators
	}).(AcceleratorConfigResponseArrayOutput)
}

// Optional. Disk option config settings.
func (o InstanceGroupConfigResponsePtrOutput) DiskConfig() DiskConfigResponsePtrOutput {
	return o.ApplyT(func(v *InstanceGroupConfigResponse) *DiskConfigResponse {
		if v == nil {
			return nil
		}
		return &v.DiskConfig
	}).(DiskConfigResponsePtrOutput)
}

// Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
func (o InstanceGroupConfigResponsePtrOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGroupConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ImageUri
	}).(pulumi.StringPtrOutput)
}

// The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
func (o InstanceGroupConfigResponsePtrOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InstanceGroupConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.InstanceNames
	}).(pulumi.StringArrayOutput)
}

// List of references to Compute Engine instances.
func (o InstanceGroupConfigResponsePtrOutput) InstanceReferences() InstanceReferenceResponseArrayOutput {
	return o.ApplyT(func(v *InstanceGroupConfigResponse) []InstanceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.InstanceReferences
	}).(InstanceReferenceResponseArrayOutput)
}

// Specifies that this instance group contains preemptible instances.
func (o InstanceGroupConfigResponsePtrOutput) IsPreemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceGroupConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPreemptible
	}).(pulumi.BoolPtrOutput)
}

// Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
func (o InstanceGroupConfigResponsePtrOutput) MachineTypeUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGroupConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MachineTypeUri
	}).(pulumi.StringPtrOutput)
}

// The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.
func (o InstanceGroupConfigResponsePtrOutput) ManagedGroupConfig() ManagedGroupConfigResponsePtrOutput {
	return o.ApplyT(func(v *InstanceGroupConfigResponse) *ManagedGroupConfigResponse {
		if v == nil {
			return nil
		}
		return &v.ManagedGroupConfig
	}).(ManagedGroupConfigResponsePtrOutput)
}

// Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
func (o InstanceGroupConfigResponsePtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGroupConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MinCpuPlatform
	}).(pulumi.StringPtrOutput)
}

// Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
func (o InstanceGroupConfigResponsePtrOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceGroupConfigResponse) *int {
		if v == nil {
			return nil
		}
		return &v.NumInstances
	}).(pulumi.IntPtrOutput)
}

// Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
func (o InstanceGroupConfigResponsePtrOutput) Preemptibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGroupConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Preemptibility
	}).(pulumi.StringPtrOutput)
}

// A reference to a Compute Engine instance.
type InstanceReferenceResponse struct {
	// The unique identifier of the Compute Engine instance.
	InstanceId string `pulumi:"instanceId"`
	// The user-friendly name of the Compute Engine instance.
	InstanceName string `pulumi:"instanceName"`
	// The public ECIES key used for sharing data with this instance.
	PublicEciesKey string `pulumi:"publicEciesKey"`
	// The public RSA key used for sharing data with this instance.
	PublicKey string `pulumi:"publicKey"`
}

// InstanceReferenceResponseInput is an input type that accepts InstanceReferenceResponseArgs and InstanceReferenceResponseOutput values.
// You can construct a concrete instance of `InstanceReferenceResponseInput` via:
//
//          InstanceReferenceResponseArgs{...}
type InstanceReferenceResponseInput interface {
	pulumi.Input

	ToInstanceReferenceResponseOutput() InstanceReferenceResponseOutput
	ToInstanceReferenceResponseOutputWithContext(context.Context) InstanceReferenceResponseOutput
}

// A reference to a Compute Engine instance.
type InstanceReferenceResponseArgs struct {
	// The unique identifier of the Compute Engine instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The user-friendly name of the Compute Engine instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The public ECIES key used for sharing data with this instance.
	PublicEciesKey pulumi.StringInput `pulumi:"publicEciesKey"`
	// The public RSA key used for sharing data with this instance.
	PublicKey pulumi.StringInput `pulumi:"publicKey"`
}

func (InstanceReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceReferenceResponse)(nil)).Elem()
}

func (i InstanceReferenceResponseArgs) ToInstanceReferenceResponseOutput() InstanceReferenceResponseOutput {
	return i.ToInstanceReferenceResponseOutputWithContext(context.Background())
}

func (i InstanceReferenceResponseArgs) ToInstanceReferenceResponseOutputWithContext(ctx context.Context) InstanceReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceReferenceResponseOutput)
}

// InstanceReferenceResponseArrayInput is an input type that accepts InstanceReferenceResponseArray and InstanceReferenceResponseArrayOutput values.
// You can construct a concrete instance of `InstanceReferenceResponseArrayInput` via:
//
//          InstanceReferenceResponseArray{ InstanceReferenceResponseArgs{...} }
type InstanceReferenceResponseArrayInput interface {
	pulumi.Input

	ToInstanceReferenceResponseArrayOutput() InstanceReferenceResponseArrayOutput
	ToInstanceReferenceResponseArrayOutputWithContext(context.Context) InstanceReferenceResponseArrayOutput
}

type InstanceReferenceResponseArray []InstanceReferenceResponseInput

func (InstanceReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceReferenceResponse)(nil)).Elem()
}

func (i InstanceReferenceResponseArray) ToInstanceReferenceResponseArrayOutput() InstanceReferenceResponseArrayOutput {
	return i.ToInstanceReferenceResponseArrayOutputWithContext(context.Background())
}

func (i InstanceReferenceResponseArray) ToInstanceReferenceResponseArrayOutputWithContext(ctx context.Context) InstanceReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceReferenceResponseArrayOutput)
}

// A reference to a Compute Engine instance.
type InstanceReferenceResponseOutput struct{ *pulumi.OutputState }

func (InstanceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceReferenceResponse)(nil)).Elem()
}

func (o InstanceReferenceResponseOutput) ToInstanceReferenceResponseOutput() InstanceReferenceResponseOutput {
	return o
}

func (o InstanceReferenceResponseOutput) ToInstanceReferenceResponseOutputWithContext(ctx context.Context) InstanceReferenceResponseOutput {
	return o
}

// The unique identifier of the Compute Engine instance.
func (o InstanceReferenceResponseOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceReferenceResponse) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The user-friendly name of the Compute Engine instance.
func (o InstanceReferenceResponseOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceReferenceResponse) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The public ECIES key used for sharing data with this instance.
func (o InstanceReferenceResponseOutput) PublicEciesKey() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceReferenceResponse) string { return v.PublicEciesKey }).(pulumi.StringOutput)
}

// The public RSA key used for sharing data with this instance.
func (o InstanceReferenceResponseOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceReferenceResponse) string { return v.PublicKey }).(pulumi.StringOutput)
}

type InstanceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (InstanceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceReferenceResponse)(nil)).Elem()
}

func (o InstanceReferenceResponseArrayOutput) ToInstanceReferenceResponseArrayOutput() InstanceReferenceResponseArrayOutput {
	return o
}

func (o InstanceReferenceResponseArrayOutput) ToInstanceReferenceResponseArrayOutputWithContext(ctx context.Context) InstanceReferenceResponseArrayOutput {
	return o
}

func (o InstanceReferenceResponseArrayOutput) Index(i pulumi.IntInput) InstanceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceReferenceResponse {
		return vs[0].([]InstanceReferenceResponse)[vs[1].(int)]
	}).(InstanceReferenceResponseOutput)
}

// Dataproc job config.
type JobPlacement struct {
	// Optional. Cluster labels to identify a cluster where the job will be submitted.
	ClusterLabels map[string]string `pulumi:"clusterLabels"`
	// The name of the cluster where the job will be submitted.
	ClusterName string `pulumi:"clusterName"`
}

// JobPlacementInput is an input type that accepts JobPlacementArgs and JobPlacementOutput values.
// You can construct a concrete instance of `JobPlacementInput` via:
//
//          JobPlacementArgs{...}
type JobPlacementInput interface {
	pulumi.Input

	ToJobPlacementOutput() JobPlacementOutput
	ToJobPlacementOutputWithContext(context.Context) JobPlacementOutput
}

// Dataproc job config.
type JobPlacementArgs struct {
	// Optional. Cluster labels to identify a cluster where the job will be submitted.
	ClusterLabels pulumi.StringMapInput `pulumi:"clusterLabels"`
	// The name of the cluster where the job will be submitted.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
}

func (JobPlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPlacement)(nil)).Elem()
}

func (i JobPlacementArgs) ToJobPlacementOutput() JobPlacementOutput {
	return i.ToJobPlacementOutputWithContext(context.Background())
}

func (i JobPlacementArgs) ToJobPlacementOutputWithContext(ctx context.Context) JobPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPlacementOutput)
}

func (i JobPlacementArgs) ToJobPlacementPtrOutput() JobPlacementPtrOutput {
	return i.ToJobPlacementPtrOutputWithContext(context.Background())
}

func (i JobPlacementArgs) ToJobPlacementPtrOutputWithContext(ctx context.Context) JobPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPlacementOutput).ToJobPlacementPtrOutputWithContext(ctx)
}

// JobPlacementPtrInput is an input type that accepts JobPlacementArgs, JobPlacementPtr and JobPlacementPtrOutput values.
// You can construct a concrete instance of `JobPlacementPtrInput` via:
//
//          JobPlacementArgs{...}
//
//  or:
//
//          nil
type JobPlacementPtrInput interface {
	pulumi.Input

	ToJobPlacementPtrOutput() JobPlacementPtrOutput
	ToJobPlacementPtrOutputWithContext(context.Context) JobPlacementPtrOutput
}

type jobPlacementPtrType JobPlacementArgs

func JobPlacementPtr(v *JobPlacementArgs) JobPlacementPtrInput {
	return (*jobPlacementPtrType)(v)
}

func (*jobPlacementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPlacement)(nil)).Elem()
}

func (i *jobPlacementPtrType) ToJobPlacementPtrOutput() JobPlacementPtrOutput {
	return i.ToJobPlacementPtrOutputWithContext(context.Background())
}

func (i *jobPlacementPtrType) ToJobPlacementPtrOutputWithContext(ctx context.Context) JobPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPlacementPtrOutput)
}

// Dataproc job config.
type JobPlacementOutput struct{ *pulumi.OutputState }

func (JobPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPlacement)(nil)).Elem()
}

func (o JobPlacementOutput) ToJobPlacementOutput() JobPlacementOutput {
	return o
}

func (o JobPlacementOutput) ToJobPlacementOutputWithContext(ctx context.Context) JobPlacementOutput {
	return o
}

func (o JobPlacementOutput) ToJobPlacementPtrOutput() JobPlacementPtrOutput {
	return o.ToJobPlacementPtrOutputWithContext(context.Background())
}

func (o JobPlacementOutput) ToJobPlacementPtrOutputWithContext(ctx context.Context) JobPlacementPtrOutput {
	return o.ApplyT(func(v JobPlacement) *JobPlacement {
		return &v
	}).(JobPlacementPtrOutput)
}

// Optional. Cluster labels to identify a cluster where the job will be submitted.
func (o JobPlacementOutput) ClusterLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPlacement) map[string]string { return v.ClusterLabels }).(pulumi.StringMapOutput)
}

// The name of the cluster where the job will be submitted.
func (o JobPlacementOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v JobPlacement) string { return v.ClusterName }).(pulumi.StringOutput)
}

type JobPlacementPtrOutput struct{ *pulumi.OutputState }

func (JobPlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPlacement)(nil)).Elem()
}

func (o JobPlacementPtrOutput) ToJobPlacementPtrOutput() JobPlacementPtrOutput {
	return o
}

func (o JobPlacementPtrOutput) ToJobPlacementPtrOutputWithContext(ctx context.Context) JobPlacementPtrOutput {
	return o
}

func (o JobPlacementPtrOutput) Elem() JobPlacementOutput {
	return o.ApplyT(func(v *JobPlacement) JobPlacement { return *v }).(JobPlacementOutput)
}

// Optional. Cluster labels to identify a cluster where the job will be submitted.
func (o JobPlacementPtrOutput) ClusterLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *JobPlacement) map[string]string {
		if v == nil {
			return nil
		}
		return v.ClusterLabels
	}).(pulumi.StringMapOutput)
}

// The name of the cluster where the job will be submitted.
func (o JobPlacementPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobPlacement) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// Dataproc job config.
type JobPlacementResponse struct {
	// Optional. Cluster labels to identify a cluster where the job will be submitted.
	ClusterLabels map[string]string `pulumi:"clusterLabels"`
	// The name of the cluster where the job will be submitted.
	ClusterName string `pulumi:"clusterName"`
	// A cluster UUID generated by the Dataproc service when the job is submitted.
	ClusterUuid string `pulumi:"clusterUuid"`
}

// JobPlacementResponseInput is an input type that accepts JobPlacementResponseArgs and JobPlacementResponseOutput values.
// You can construct a concrete instance of `JobPlacementResponseInput` via:
//
//          JobPlacementResponseArgs{...}
type JobPlacementResponseInput interface {
	pulumi.Input

	ToJobPlacementResponseOutput() JobPlacementResponseOutput
	ToJobPlacementResponseOutputWithContext(context.Context) JobPlacementResponseOutput
}

// Dataproc job config.
type JobPlacementResponseArgs struct {
	// Optional. Cluster labels to identify a cluster where the job will be submitted.
	ClusterLabels pulumi.StringMapInput `pulumi:"clusterLabels"`
	// The name of the cluster where the job will be submitted.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// A cluster UUID generated by the Dataproc service when the job is submitted.
	ClusterUuid pulumi.StringInput `pulumi:"clusterUuid"`
}

func (JobPlacementResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPlacementResponse)(nil)).Elem()
}

func (i JobPlacementResponseArgs) ToJobPlacementResponseOutput() JobPlacementResponseOutput {
	return i.ToJobPlacementResponseOutputWithContext(context.Background())
}

func (i JobPlacementResponseArgs) ToJobPlacementResponseOutputWithContext(ctx context.Context) JobPlacementResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPlacementResponseOutput)
}

func (i JobPlacementResponseArgs) ToJobPlacementResponsePtrOutput() JobPlacementResponsePtrOutput {
	return i.ToJobPlacementResponsePtrOutputWithContext(context.Background())
}

func (i JobPlacementResponseArgs) ToJobPlacementResponsePtrOutputWithContext(ctx context.Context) JobPlacementResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPlacementResponseOutput).ToJobPlacementResponsePtrOutputWithContext(ctx)
}

// JobPlacementResponsePtrInput is an input type that accepts JobPlacementResponseArgs, JobPlacementResponsePtr and JobPlacementResponsePtrOutput values.
// You can construct a concrete instance of `JobPlacementResponsePtrInput` via:
//
//          JobPlacementResponseArgs{...}
//
//  or:
//
//          nil
type JobPlacementResponsePtrInput interface {
	pulumi.Input

	ToJobPlacementResponsePtrOutput() JobPlacementResponsePtrOutput
	ToJobPlacementResponsePtrOutputWithContext(context.Context) JobPlacementResponsePtrOutput
}

type jobPlacementResponsePtrType JobPlacementResponseArgs

func JobPlacementResponsePtr(v *JobPlacementResponseArgs) JobPlacementResponsePtrInput {
	return (*jobPlacementResponsePtrType)(v)
}

func (*jobPlacementResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPlacementResponse)(nil)).Elem()
}

func (i *jobPlacementResponsePtrType) ToJobPlacementResponsePtrOutput() JobPlacementResponsePtrOutput {
	return i.ToJobPlacementResponsePtrOutputWithContext(context.Background())
}

func (i *jobPlacementResponsePtrType) ToJobPlacementResponsePtrOutputWithContext(ctx context.Context) JobPlacementResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPlacementResponsePtrOutput)
}

// Dataproc job config.
type JobPlacementResponseOutput struct{ *pulumi.OutputState }

func (JobPlacementResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPlacementResponse)(nil)).Elem()
}

func (o JobPlacementResponseOutput) ToJobPlacementResponseOutput() JobPlacementResponseOutput {
	return o
}

func (o JobPlacementResponseOutput) ToJobPlacementResponseOutputWithContext(ctx context.Context) JobPlacementResponseOutput {
	return o
}

func (o JobPlacementResponseOutput) ToJobPlacementResponsePtrOutput() JobPlacementResponsePtrOutput {
	return o.ToJobPlacementResponsePtrOutputWithContext(context.Background())
}

func (o JobPlacementResponseOutput) ToJobPlacementResponsePtrOutputWithContext(ctx context.Context) JobPlacementResponsePtrOutput {
	return o.ApplyT(func(v JobPlacementResponse) *JobPlacementResponse {
		return &v
	}).(JobPlacementResponsePtrOutput)
}

// Optional. Cluster labels to identify a cluster where the job will be submitted.
func (o JobPlacementResponseOutput) ClusterLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPlacementResponse) map[string]string { return v.ClusterLabels }).(pulumi.StringMapOutput)
}

// The name of the cluster where the job will be submitted.
func (o JobPlacementResponseOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v JobPlacementResponse) string { return v.ClusterName }).(pulumi.StringOutput)
}

// A cluster UUID generated by the Dataproc service when the job is submitted.
func (o JobPlacementResponseOutput) ClusterUuid() pulumi.StringOutput {
	return o.ApplyT(func(v JobPlacementResponse) string { return v.ClusterUuid }).(pulumi.StringOutput)
}

type JobPlacementResponsePtrOutput struct{ *pulumi.OutputState }

func (JobPlacementResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPlacementResponse)(nil)).Elem()
}

func (o JobPlacementResponsePtrOutput) ToJobPlacementResponsePtrOutput() JobPlacementResponsePtrOutput {
	return o
}

func (o JobPlacementResponsePtrOutput) ToJobPlacementResponsePtrOutputWithContext(ctx context.Context) JobPlacementResponsePtrOutput {
	return o
}

func (o JobPlacementResponsePtrOutput) Elem() JobPlacementResponseOutput {
	return o.ApplyT(func(v *JobPlacementResponse) JobPlacementResponse { return *v }).(JobPlacementResponseOutput)
}

// Optional. Cluster labels to identify a cluster where the job will be submitted.
func (o JobPlacementResponsePtrOutput) ClusterLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *JobPlacementResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.ClusterLabels
	}).(pulumi.StringMapOutput)
}

// The name of the cluster where the job will be submitted.
func (o JobPlacementResponsePtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobPlacementResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// A cluster UUID generated by the Dataproc service when the job is submitted.
func (o JobPlacementResponsePtrOutput) ClusterUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobPlacementResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterUuid
	}).(pulumi.StringPtrOutput)
}

// Encapsulates the full scoping used to reference a job.
type JobReference struct {
	// Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.
	JobId *string `pulumi:"jobId"`
	// Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.
	Project *string `pulumi:"project"`
}

// JobReferenceInput is an input type that accepts JobReferenceArgs and JobReferenceOutput values.
// You can construct a concrete instance of `JobReferenceInput` via:
//
//          JobReferenceArgs{...}
type JobReferenceInput interface {
	pulumi.Input

	ToJobReferenceOutput() JobReferenceOutput
	ToJobReferenceOutputWithContext(context.Context) JobReferenceOutput
}

// Encapsulates the full scoping used to reference a job.
type JobReferenceArgs struct {
	// Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.
	JobId pulumi.StringPtrInput `pulumi:"jobId"`
	// Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (JobReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobReference)(nil)).Elem()
}

func (i JobReferenceArgs) ToJobReferenceOutput() JobReferenceOutput {
	return i.ToJobReferenceOutputWithContext(context.Background())
}

func (i JobReferenceArgs) ToJobReferenceOutputWithContext(ctx context.Context) JobReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobReferenceOutput)
}

func (i JobReferenceArgs) ToJobReferencePtrOutput() JobReferencePtrOutput {
	return i.ToJobReferencePtrOutputWithContext(context.Background())
}

func (i JobReferenceArgs) ToJobReferencePtrOutputWithContext(ctx context.Context) JobReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobReferenceOutput).ToJobReferencePtrOutputWithContext(ctx)
}

// JobReferencePtrInput is an input type that accepts JobReferenceArgs, JobReferencePtr and JobReferencePtrOutput values.
// You can construct a concrete instance of `JobReferencePtrInput` via:
//
//          JobReferenceArgs{...}
//
//  or:
//
//          nil
type JobReferencePtrInput interface {
	pulumi.Input

	ToJobReferencePtrOutput() JobReferencePtrOutput
	ToJobReferencePtrOutputWithContext(context.Context) JobReferencePtrOutput
}

type jobReferencePtrType JobReferenceArgs

func JobReferencePtr(v *JobReferenceArgs) JobReferencePtrInput {
	return (*jobReferencePtrType)(v)
}

func (*jobReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobReference)(nil)).Elem()
}

func (i *jobReferencePtrType) ToJobReferencePtrOutput() JobReferencePtrOutput {
	return i.ToJobReferencePtrOutputWithContext(context.Background())
}

func (i *jobReferencePtrType) ToJobReferencePtrOutputWithContext(ctx context.Context) JobReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobReferencePtrOutput)
}

// Encapsulates the full scoping used to reference a job.
type JobReferenceOutput struct{ *pulumi.OutputState }

func (JobReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobReference)(nil)).Elem()
}

func (o JobReferenceOutput) ToJobReferenceOutput() JobReferenceOutput {
	return o
}

func (o JobReferenceOutput) ToJobReferenceOutputWithContext(ctx context.Context) JobReferenceOutput {
	return o
}

func (o JobReferenceOutput) ToJobReferencePtrOutput() JobReferencePtrOutput {
	return o.ToJobReferencePtrOutputWithContext(context.Background())
}

func (o JobReferenceOutput) ToJobReferencePtrOutputWithContext(ctx context.Context) JobReferencePtrOutput {
	return o.ApplyT(func(v JobReference) *JobReference {
		return &v
	}).(JobReferencePtrOutput)
}

// Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.
func (o JobReferenceOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobReference) *string { return v.JobId }).(pulumi.StringPtrOutput)
}

// Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.
func (o JobReferenceOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobReference) *string { return v.Project }).(pulumi.StringPtrOutput)
}

type JobReferencePtrOutput struct{ *pulumi.OutputState }

func (JobReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobReference)(nil)).Elem()
}

func (o JobReferencePtrOutput) ToJobReferencePtrOutput() JobReferencePtrOutput {
	return o
}

func (o JobReferencePtrOutput) ToJobReferencePtrOutputWithContext(ctx context.Context) JobReferencePtrOutput {
	return o
}

func (o JobReferencePtrOutput) Elem() JobReferenceOutput {
	return o.ApplyT(func(v *JobReference) JobReference { return *v }).(JobReferenceOutput)
}

// Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.
func (o JobReferencePtrOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobReference) *string {
		if v == nil {
			return nil
		}
		return v.JobId
	}).(pulumi.StringPtrOutput)
}

// Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.
func (o JobReferencePtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobReference) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

// Encapsulates the full scoping used to reference a job.
type JobReferenceResponse struct {
	// Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.
	JobId string `pulumi:"jobId"`
	// Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.
	Project string `pulumi:"project"`
}

// JobReferenceResponseInput is an input type that accepts JobReferenceResponseArgs and JobReferenceResponseOutput values.
// You can construct a concrete instance of `JobReferenceResponseInput` via:
//
//          JobReferenceResponseArgs{...}
type JobReferenceResponseInput interface {
	pulumi.Input

	ToJobReferenceResponseOutput() JobReferenceResponseOutput
	ToJobReferenceResponseOutputWithContext(context.Context) JobReferenceResponseOutput
}

// Encapsulates the full scoping used to reference a job.
type JobReferenceResponseArgs struct {
	// Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.
	JobId pulumi.StringInput `pulumi:"jobId"`
	// Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.
	Project pulumi.StringInput `pulumi:"project"`
}

func (JobReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobReferenceResponse)(nil)).Elem()
}

func (i JobReferenceResponseArgs) ToJobReferenceResponseOutput() JobReferenceResponseOutput {
	return i.ToJobReferenceResponseOutputWithContext(context.Background())
}

func (i JobReferenceResponseArgs) ToJobReferenceResponseOutputWithContext(ctx context.Context) JobReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobReferenceResponseOutput)
}

func (i JobReferenceResponseArgs) ToJobReferenceResponsePtrOutput() JobReferenceResponsePtrOutput {
	return i.ToJobReferenceResponsePtrOutputWithContext(context.Background())
}

func (i JobReferenceResponseArgs) ToJobReferenceResponsePtrOutputWithContext(ctx context.Context) JobReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobReferenceResponseOutput).ToJobReferenceResponsePtrOutputWithContext(ctx)
}

// JobReferenceResponsePtrInput is an input type that accepts JobReferenceResponseArgs, JobReferenceResponsePtr and JobReferenceResponsePtrOutput values.
// You can construct a concrete instance of `JobReferenceResponsePtrInput` via:
//
//          JobReferenceResponseArgs{...}
//
//  or:
//
//          nil
type JobReferenceResponsePtrInput interface {
	pulumi.Input

	ToJobReferenceResponsePtrOutput() JobReferenceResponsePtrOutput
	ToJobReferenceResponsePtrOutputWithContext(context.Context) JobReferenceResponsePtrOutput
}

type jobReferenceResponsePtrType JobReferenceResponseArgs

func JobReferenceResponsePtr(v *JobReferenceResponseArgs) JobReferenceResponsePtrInput {
	return (*jobReferenceResponsePtrType)(v)
}

func (*jobReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobReferenceResponse)(nil)).Elem()
}

func (i *jobReferenceResponsePtrType) ToJobReferenceResponsePtrOutput() JobReferenceResponsePtrOutput {
	return i.ToJobReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *jobReferenceResponsePtrType) ToJobReferenceResponsePtrOutputWithContext(ctx context.Context) JobReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobReferenceResponsePtrOutput)
}

// Encapsulates the full scoping used to reference a job.
type JobReferenceResponseOutput struct{ *pulumi.OutputState }

func (JobReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobReferenceResponse)(nil)).Elem()
}

func (o JobReferenceResponseOutput) ToJobReferenceResponseOutput() JobReferenceResponseOutput {
	return o
}

func (o JobReferenceResponseOutput) ToJobReferenceResponseOutputWithContext(ctx context.Context) JobReferenceResponseOutput {
	return o
}

func (o JobReferenceResponseOutput) ToJobReferenceResponsePtrOutput() JobReferenceResponsePtrOutput {
	return o.ToJobReferenceResponsePtrOutputWithContext(context.Background())
}

func (o JobReferenceResponseOutput) ToJobReferenceResponsePtrOutputWithContext(ctx context.Context) JobReferenceResponsePtrOutput {
	return o.ApplyT(func(v JobReferenceResponse) *JobReferenceResponse {
		return &v
	}).(JobReferenceResponsePtrOutput)
}

// Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.
func (o JobReferenceResponseOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v JobReferenceResponse) string { return v.JobId }).(pulumi.StringOutput)
}

// Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.
func (o JobReferenceResponseOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v JobReferenceResponse) string { return v.Project }).(pulumi.StringOutput)
}

type JobReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (JobReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobReferenceResponse)(nil)).Elem()
}

func (o JobReferenceResponsePtrOutput) ToJobReferenceResponsePtrOutput() JobReferenceResponsePtrOutput {
	return o
}

func (o JobReferenceResponsePtrOutput) ToJobReferenceResponsePtrOutputWithContext(ctx context.Context) JobReferenceResponsePtrOutput {
	return o
}

func (o JobReferenceResponsePtrOutput) Elem() JobReferenceResponseOutput {
	return o.ApplyT(func(v *JobReferenceResponse) JobReferenceResponse { return *v }).(JobReferenceResponseOutput)
}

// Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.
func (o JobReferenceResponsePtrOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.JobId
	}).(pulumi.StringPtrOutput)
}

// Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.
func (o JobReferenceResponsePtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// Job scheduling options.
type JobScheduling struct {
	// Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed.A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window.Maximum value is 10.
	MaxFailuresPerHour *int `pulumi:"maxFailuresPerHour"`
	// Optional. Maximum number of times in total a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. Maximum value is 240.
	MaxFailuresTotal *int `pulumi:"maxFailuresTotal"`
}

// JobSchedulingInput is an input type that accepts JobSchedulingArgs and JobSchedulingOutput values.
// You can construct a concrete instance of `JobSchedulingInput` via:
//
//          JobSchedulingArgs{...}
type JobSchedulingInput interface {
	pulumi.Input

	ToJobSchedulingOutput() JobSchedulingOutput
	ToJobSchedulingOutputWithContext(context.Context) JobSchedulingOutput
}

// Job scheduling options.
type JobSchedulingArgs struct {
	// Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed.A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window.Maximum value is 10.
	MaxFailuresPerHour pulumi.IntPtrInput `pulumi:"maxFailuresPerHour"`
	// Optional. Maximum number of times in total a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. Maximum value is 240.
	MaxFailuresTotal pulumi.IntPtrInput `pulumi:"maxFailuresTotal"`
}

func (JobSchedulingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduling)(nil)).Elem()
}

func (i JobSchedulingArgs) ToJobSchedulingOutput() JobSchedulingOutput {
	return i.ToJobSchedulingOutputWithContext(context.Background())
}

func (i JobSchedulingArgs) ToJobSchedulingOutputWithContext(ctx context.Context) JobSchedulingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulingOutput)
}

func (i JobSchedulingArgs) ToJobSchedulingPtrOutput() JobSchedulingPtrOutput {
	return i.ToJobSchedulingPtrOutputWithContext(context.Background())
}

func (i JobSchedulingArgs) ToJobSchedulingPtrOutputWithContext(ctx context.Context) JobSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulingOutput).ToJobSchedulingPtrOutputWithContext(ctx)
}

// JobSchedulingPtrInput is an input type that accepts JobSchedulingArgs, JobSchedulingPtr and JobSchedulingPtrOutput values.
// You can construct a concrete instance of `JobSchedulingPtrInput` via:
//
//          JobSchedulingArgs{...}
//
//  or:
//
//          nil
type JobSchedulingPtrInput interface {
	pulumi.Input

	ToJobSchedulingPtrOutput() JobSchedulingPtrOutput
	ToJobSchedulingPtrOutputWithContext(context.Context) JobSchedulingPtrOutput
}

type jobSchedulingPtrType JobSchedulingArgs

func JobSchedulingPtr(v *JobSchedulingArgs) JobSchedulingPtrInput {
	return (*jobSchedulingPtrType)(v)
}

func (*jobSchedulingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduling)(nil)).Elem()
}

func (i *jobSchedulingPtrType) ToJobSchedulingPtrOutput() JobSchedulingPtrOutput {
	return i.ToJobSchedulingPtrOutputWithContext(context.Background())
}

func (i *jobSchedulingPtrType) ToJobSchedulingPtrOutputWithContext(ctx context.Context) JobSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulingPtrOutput)
}

// Job scheduling options.
type JobSchedulingOutput struct{ *pulumi.OutputState }

func (JobSchedulingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduling)(nil)).Elem()
}

func (o JobSchedulingOutput) ToJobSchedulingOutput() JobSchedulingOutput {
	return o
}

func (o JobSchedulingOutput) ToJobSchedulingOutputWithContext(ctx context.Context) JobSchedulingOutput {
	return o
}

func (o JobSchedulingOutput) ToJobSchedulingPtrOutput() JobSchedulingPtrOutput {
	return o.ToJobSchedulingPtrOutputWithContext(context.Background())
}

func (o JobSchedulingOutput) ToJobSchedulingPtrOutputWithContext(ctx context.Context) JobSchedulingPtrOutput {
	return o.ApplyT(func(v JobScheduling) *JobScheduling {
		return &v
	}).(JobSchedulingPtrOutput)
}

// Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed.A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window.Maximum value is 10.
func (o JobSchedulingOutput) MaxFailuresPerHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobScheduling) *int { return v.MaxFailuresPerHour }).(pulumi.IntPtrOutput)
}

// Optional. Maximum number of times in total a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. Maximum value is 240.
func (o JobSchedulingOutput) MaxFailuresTotal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobScheduling) *int { return v.MaxFailuresTotal }).(pulumi.IntPtrOutput)
}

type JobSchedulingPtrOutput struct{ *pulumi.OutputState }

func (JobSchedulingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduling)(nil)).Elem()
}

func (o JobSchedulingPtrOutput) ToJobSchedulingPtrOutput() JobSchedulingPtrOutput {
	return o
}

func (o JobSchedulingPtrOutput) ToJobSchedulingPtrOutputWithContext(ctx context.Context) JobSchedulingPtrOutput {
	return o
}

func (o JobSchedulingPtrOutput) Elem() JobSchedulingOutput {
	return o.ApplyT(func(v *JobScheduling) JobScheduling { return *v }).(JobSchedulingOutput)
}

// Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed.A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window.Maximum value is 10.
func (o JobSchedulingPtrOutput) MaxFailuresPerHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobScheduling) *int {
		if v == nil {
			return nil
		}
		return v.MaxFailuresPerHour
	}).(pulumi.IntPtrOutput)
}

// Optional. Maximum number of times in total a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. Maximum value is 240.
func (o JobSchedulingPtrOutput) MaxFailuresTotal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobScheduling) *int {
		if v == nil {
			return nil
		}
		return v.MaxFailuresTotal
	}).(pulumi.IntPtrOutput)
}

// Job scheduling options.
type JobSchedulingResponse struct {
	// Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed.A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window.Maximum value is 10.
	MaxFailuresPerHour int `pulumi:"maxFailuresPerHour"`
	// Optional. Maximum number of times in total a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. Maximum value is 240.
	MaxFailuresTotal int `pulumi:"maxFailuresTotal"`
}

// JobSchedulingResponseInput is an input type that accepts JobSchedulingResponseArgs and JobSchedulingResponseOutput values.
// You can construct a concrete instance of `JobSchedulingResponseInput` via:
//
//          JobSchedulingResponseArgs{...}
type JobSchedulingResponseInput interface {
	pulumi.Input

	ToJobSchedulingResponseOutput() JobSchedulingResponseOutput
	ToJobSchedulingResponseOutputWithContext(context.Context) JobSchedulingResponseOutput
}

// Job scheduling options.
type JobSchedulingResponseArgs struct {
	// Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed.A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window.Maximum value is 10.
	MaxFailuresPerHour pulumi.IntInput `pulumi:"maxFailuresPerHour"`
	// Optional. Maximum number of times in total a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. Maximum value is 240.
	MaxFailuresTotal pulumi.IntInput `pulumi:"maxFailuresTotal"`
}

func (JobSchedulingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSchedulingResponse)(nil)).Elem()
}

func (i JobSchedulingResponseArgs) ToJobSchedulingResponseOutput() JobSchedulingResponseOutput {
	return i.ToJobSchedulingResponseOutputWithContext(context.Background())
}

func (i JobSchedulingResponseArgs) ToJobSchedulingResponseOutputWithContext(ctx context.Context) JobSchedulingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulingResponseOutput)
}

func (i JobSchedulingResponseArgs) ToJobSchedulingResponsePtrOutput() JobSchedulingResponsePtrOutput {
	return i.ToJobSchedulingResponsePtrOutputWithContext(context.Background())
}

func (i JobSchedulingResponseArgs) ToJobSchedulingResponsePtrOutputWithContext(ctx context.Context) JobSchedulingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulingResponseOutput).ToJobSchedulingResponsePtrOutputWithContext(ctx)
}

// JobSchedulingResponsePtrInput is an input type that accepts JobSchedulingResponseArgs, JobSchedulingResponsePtr and JobSchedulingResponsePtrOutput values.
// You can construct a concrete instance of `JobSchedulingResponsePtrInput` via:
//
//          JobSchedulingResponseArgs{...}
//
//  or:
//
//          nil
type JobSchedulingResponsePtrInput interface {
	pulumi.Input

	ToJobSchedulingResponsePtrOutput() JobSchedulingResponsePtrOutput
	ToJobSchedulingResponsePtrOutputWithContext(context.Context) JobSchedulingResponsePtrOutput
}

type jobSchedulingResponsePtrType JobSchedulingResponseArgs

func JobSchedulingResponsePtr(v *JobSchedulingResponseArgs) JobSchedulingResponsePtrInput {
	return (*jobSchedulingResponsePtrType)(v)
}

func (*jobSchedulingResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSchedulingResponse)(nil)).Elem()
}

func (i *jobSchedulingResponsePtrType) ToJobSchedulingResponsePtrOutput() JobSchedulingResponsePtrOutput {
	return i.ToJobSchedulingResponsePtrOutputWithContext(context.Background())
}

func (i *jobSchedulingResponsePtrType) ToJobSchedulingResponsePtrOutputWithContext(ctx context.Context) JobSchedulingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulingResponsePtrOutput)
}

// Job scheduling options.
type JobSchedulingResponseOutput struct{ *pulumi.OutputState }

func (JobSchedulingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSchedulingResponse)(nil)).Elem()
}

func (o JobSchedulingResponseOutput) ToJobSchedulingResponseOutput() JobSchedulingResponseOutput {
	return o
}

func (o JobSchedulingResponseOutput) ToJobSchedulingResponseOutputWithContext(ctx context.Context) JobSchedulingResponseOutput {
	return o
}

func (o JobSchedulingResponseOutput) ToJobSchedulingResponsePtrOutput() JobSchedulingResponsePtrOutput {
	return o.ToJobSchedulingResponsePtrOutputWithContext(context.Background())
}

func (o JobSchedulingResponseOutput) ToJobSchedulingResponsePtrOutputWithContext(ctx context.Context) JobSchedulingResponsePtrOutput {
	return o.ApplyT(func(v JobSchedulingResponse) *JobSchedulingResponse {
		return &v
	}).(JobSchedulingResponsePtrOutput)
}

// Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed.A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window.Maximum value is 10.
func (o JobSchedulingResponseOutput) MaxFailuresPerHour() pulumi.IntOutput {
	return o.ApplyT(func(v JobSchedulingResponse) int { return v.MaxFailuresPerHour }).(pulumi.IntOutput)
}

// Optional. Maximum number of times in total a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. Maximum value is 240.
func (o JobSchedulingResponseOutput) MaxFailuresTotal() pulumi.IntOutput {
	return o.ApplyT(func(v JobSchedulingResponse) int { return v.MaxFailuresTotal }).(pulumi.IntOutput)
}

type JobSchedulingResponsePtrOutput struct{ *pulumi.OutputState }

func (JobSchedulingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSchedulingResponse)(nil)).Elem()
}

func (o JobSchedulingResponsePtrOutput) ToJobSchedulingResponsePtrOutput() JobSchedulingResponsePtrOutput {
	return o
}

func (o JobSchedulingResponsePtrOutput) ToJobSchedulingResponsePtrOutputWithContext(ctx context.Context) JobSchedulingResponsePtrOutput {
	return o
}

func (o JobSchedulingResponsePtrOutput) Elem() JobSchedulingResponseOutput {
	return o.ApplyT(func(v *JobSchedulingResponse) JobSchedulingResponse { return *v }).(JobSchedulingResponseOutput)
}

// Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed.A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window.Maximum value is 10.
func (o JobSchedulingResponsePtrOutput) MaxFailuresPerHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobSchedulingResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaxFailuresPerHour
	}).(pulumi.IntPtrOutput)
}

// Optional. Maximum number of times in total a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. Maximum value is 240.
func (o JobSchedulingResponsePtrOutput) MaxFailuresTotal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobSchedulingResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaxFailuresTotal
	}).(pulumi.IntPtrOutput)
}

// Dataproc job status.
type JobStatusResponse struct {
	// Optional. Output only. Job state details, such as an error description if the state is ERROR.
	Details string `pulumi:"details"`
	// A state message specifying the overall job state.
	State string `pulumi:"state"`
	// The time when this state was entered.
	StateStartTime string `pulumi:"stateStartTime"`
	// Additional state information, which includes status reported by the agent.
	Substate string `pulumi:"substate"`
}

// JobStatusResponseInput is an input type that accepts JobStatusResponseArgs and JobStatusResponseOutput values.
// You can construct a concrete instance of `JobStatusResponseInput` via:
//
//          JobStatusResponseArgs{...}
type JobStatusResponseInput interface {
	pulumi.Input

	ToJobStatusResponseOutput() JobStatusResponseOutput
	ToJobStatusResponseOutputWithContext(context.Context) JobStatusResponseOutput
}

// Dataproc job status.
type JobStatusResponseArgs struct {
	// Optional. Output only. Job state details, such as an error description if the state is ERROR.
	Details pulumi.StringInput `pulumi:"details"`
	// A state message specifying the overall job state.
	State pulumi.StringInput `pulumi:"state"`
	// The time when this state was entered.
	StateStartTime pulumi.StringInput `pulumi:"stateStartTime"`
	// Additional state information, which includes status reported by the agent.
	Substate pulumi.StringInput `pulumi:"substate"`
}

func (JobStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStatusResponse)(nil)).Elem()
}

func (i JobStatusResponseArgs) ToJobStatusResponseOutput() JobStatusResponseOutput {
	return i.ToJobStatusResponseOutputWithContext(context.Background())
}

func (i JobStatusResponseArgs) ToJobStatusResponseOutputWithContext(ctx context.Context) JobStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStatusResponseOutput)
}

func (i JobStatusResponseArgs) ToJobStatusResponsePtrOutput() JobStatusResponsePtrOutput {
	return i.ToJobStatusResponsePtrOutputWithContext(context.Background())
}

func (i JobStatusResponseArgs) ToJobStatusResponsePtrOutputWithContext(ctx context.Context) JobStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStatusResponseOutput).ToJobStatusResponsePtrOutputWithContext(ctx)
}

// JobStatusResponsePtrInput is an input type that accepts JobStatusResponseArgs, JobStatusResponsePtr and JobStatusResponsePtrOutput values.
// You can construct a concrete instance of `JobStatusResponsePtrInput` via:
//
//          JobStatusResponseArgs{...}
//
//  or:
//
//          nil
type JobStatusResponsePtrInput interface {
	pulumi.Input

	ToJobStatusResponsePtrOutput() JobStatusResponsePtrOutput
	ToJobStatusResponsePtrOutputWithContext(context.Context) JobStatusResponsePtrOutput
}

type jobStatusResponsePtrType JobStatusResponseArgs

func JobStatusResponsePtr(v *JobStatusResponseArgs) JobStatusResponsePtrInput {
	return (*jobStatusResponsePtrType)(v)
}

func (*jobStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStatusResponse)(nil)).Elem()
}

func (i *jobStatusResponsePtrType) ToJobStatusResponsePtrOutput() JobStatusResponsePtrOutput {
	return i.ToJobStatusResponsePtrOutputWithContext(context.Background())
}

func (i *jobStatusResponsePtrType) ToJobStatusResponsePtrOutputWithContext(ctx context.Context) JobStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStatusResponsePtrOutput)
}

// JobStatusResponseArrayInput is an input type that accepts JobStatusResponseArray and JobStatusResponseArrayOutput values.
// You can construct a concrete instance of `JobStatusResponseArrayInput` via:
//
//          JobStatusResponseArray{ JobStatusResponseArgs{...} }
type JobStatusResponseArrayInput interface {
	pulumi.Input

	ToJobStatusResponseArrayOutput() JobStatusResponseArrayOutput
	ToJobStatusResponseArrayOutputWithContext(context.Context) JobStatusResponseArrayOutput
}

type JobStatusResponseArray []JobStatusResponseInput

func (JobStatusResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobStatusResponse)(nil)).Elem()
}

func (i JobStatusResponseArray) ToJobStatusResponseArrayOutput() JobStatusResponseArrayOutput {
	return i.ToJobStatusResponseArrayOutputWithContext(context.Background())
}

func (i JobStatusResponseArray) ToJobStatusResponseArrayOutputWithContext(ctx context.Context) JobStatusResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStatusResponseArrayOutput)
}

// Dataproc job status.
type JobStatusResponseOutput struct{ *pulumi.OutputState }

func (JobStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStatusResponse)(nil)).Elem()
}

func (o JobStatusResponseOutput) ToJobStatusResponseOutput() JobStatusResponseOutput {
	return o
}

func (o JobStatusResponseOutput) ToJobStatusResponseOutputWithContext(ctx context.Context) JobStatusResponseOutput {
	return o
}

func (o JobStatusResponseOutput) ToJobStatusResponsePtrOutput() JobStatusResponsePtrOutput {
	return o.ToJobStatusResponsePtrOutputWithContext(context.Background())
}

func (o JobStatusResponseOutput) ToJobStatusResponsePtrOutputWithContext(ctx context.Context) JobStatusResponsePtrOutput {
	return o.ApplyT(func(v JobStatusResponse) *JobStatusResponse {
		return &v
	}).(JobStatusResponsePtrOutput)
}

// Optional. Output only. Job state details, such as an error description if the state is ERROR.
func (o JobStatusResponseOutput) Details() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatusResponse) string { return v.Details }).(pulumi.StringOutput)
}

// A state message specifying the overall job state.
func (o JobStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

// The time when this state was entered.
func (o JobStatusResponseOutput) StateStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatusResponse) string { return v.StateStartTime }).(pulumi.StringOutput)
}

// Additional state information, which includes status reported by the agent.
func (o JobStatusResponseOutput) Substate() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatusResponse) string { return v.Substate }).(pulumi.StringOutput)
}

type JobStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (JobStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStatusResponse)(nil)).Elem()
}

func (o JobStatusResponsePtrOutput) ToJobStatusResponsePtrOutput() JobStatusResponsePtrOutput {
	return o
}

func (o JobStatusResponsePtrOutput) ToJobStatusResponsePtrOutputWithContext(ctx context.Context) JobStatusResponsePtrOutput {
	return o
}

func (o JobStatusResponsePtrOutput) Elem() JobStatusResponseOutput {
	return o.ApplyT(func(v *JobStatusResponse) JobStatusResponse { return *v }).(JobStatusResponseOutput)
}

// Optional. Output only. Job state details, such as an error description if the state is ERROR.
func (o JobStatusResponsePtrOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Details
	}).(pulumi.StringPtrOutput)
}

// A state message specifying the overall job state.
func (o JobStatusResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// The time when this state was entered.
func (o JobStatusResponsePtrOutput) StateStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StateStartTime
	}).(pulumi.StringPtrOutput)
}

// Additional state information, which includes status reported by the agent.
func (o JobStatusResponsePtrOutput) Substate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Substate
	}).(pulumi.StringPtrOutput)
}

type JobStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (JobStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobStatusResponse)(nil)).Elem()
}

func (o JobStatusResponseArrayOutput) ToJobStatusResponseArrayOutput() JobStatusResponseArrayOutput {
	return o
}

func (o JobStatusResponseArrayOutput) ToJobStatusResponseArrayOutputWithContext(ctx context.Context) JobStatusResponseArrayOutput {
	return o
}

func (o JobStatusResponseArrayOutput) Index(i pulumi.IntInput) JobStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobStatusResponse {
		return vs[0].([]JobStatusResponse)[vs[1].(int)]
	}).(JobStatusResponseOutput)
}

// Specifies Kerberos related configuration.
type KerberosConfig struct {
	// Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustAdminServer *string `pulumi:"crossRealmTrustAdminServer"`
	// Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustKdc *string `pulumi:"crossRealmTrustKdc"`
	// Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
	CrossRealmTrustRealm *string `pulumi:"crossRealmTrustRealm"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
	CrossRealmTrustSharedPasswordUri *string `pulumi:"crossRealmTrustSharedPasswordUri"`
	// Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
	EnableKerberos *bool `pulumi:"enableKerberos"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
	KdcDbKeyUri *string `pulumi:"kdcDbKeyUri"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
	KeyPasswordUri *string `pulumi:"keyPasswordUri"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
	KeystorePasswordUri *string `pulumi:"keystorePasswordUri"`
	// Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	KeystoreUri *string `pulumi:"keystoreUri"`
	// Optional. The uri of the KMS key used to encrypt various sensitive files.
	KmsKeyUri *string `pulumi:"kmsKeyUri"`
	// Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
	Realm *string `pulumi:"realm"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
	RootPrincipalPasswordUri *string `pulumi:"rootPrincipalPasswordUri"`
	// Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
	TgtLifetimeHours *int `pulumi:"tgtLifetimeHours"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
	TruststorePasswordUri *string `pulumi:"truststorePasswordUri"`
	// Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	TruststoreUri *string `pulumi:"truststoreUri"`
}

// KerberosConfigInput is an input type that accepts KerberosConfigArgs and KerberosConfigOutput values.
// You can construct a concrete instance of `KerberosConfigInput` via:
//
//          KerberosConfigArgs{...}
type KerberosConfigInput interface {
	pulumi.Input

	ToKerberosConfigOutput() KerberosConfigOutput
	ToKerberosConfigOutputWithContext(context.Context) KerberosConfigOutput
}

// Specifies Kerberos related configuration.
type KerberosConfigArgs struct {
	// Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustAdminServer pulumi.StringPtrInput `pulumi:"crossRealmTrustAdminServer"`
	// Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustKdc pulumi.StringPtrInput `pulumi:"crossRealmTrustKdc"`
	// Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
	CrossRealmTrustRealm pulumi.StringPtrInput `pulumi:"crossRealmTrustRealm"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
	CrossRealmTrustSharedPasswordUri pulumi.StringPtrInput `pulumi:"crossRealmTrustSharedPasswordUri"`
	// Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
	EnableKerberos pulumi.BoolPtrInput `pulumi:"enableKerberos"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
	KdcDbKeyUri pulumi.StringPtrInput `pulumi:"kdcDbKeyUri"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
	KeyPasswordUri pulumi.StringPtrInput `pulumi:"keyPasswordUri"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
	KeystorePasswordUri pulumi.StringPtrInput `pulumi:"keystorePasswordUri"`
	// Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	KeystoreUri pulumi.StringPtrInput `pulumi:"keystoreUri"`
	// Optional. The uri of the KMS key used to encrypt various sensitive files.
	KmsKeyUri pulumi.StringPtrInput `pulumi:"kmsKeyUri"`
	// Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
	Realm pulumi.StringPtrInput `pulumi:"realm"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
	RootPrincipalPasswordUri pulumi.StringPtrInput `pulumi:"rootPrincipalPasswordUri"`
	// Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
	TgtLifetimeHours pulumi.IntPtrInput `pulumi:"tgtLifetimeHours"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
	TruststorePasswordUri pulumi.StringPtrInput `pulumi:"truststorePasswordUri"`
	// Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	TruststoreUri pulumi.StringPtrInput `pulumi:"truststoreUri"`
}

func (KerberosConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KerberosConfig)(nil)).Elem()
}

func (i KerberosConfigArgs) ToKerberosConfigOutput() KerberosConfigOutput {
	return i.ToKerberosConfigOutputWithContext(context.Background())
}

func (i KerberosConfigArgs) ToKerberosConfigOutputWithContext(ctx context.Context) KerberosConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KerberosConfigOutput)
}

func (i KerberosConfigArgs) ToKerberosConfigPtrOutput() KerberosConfigPtrOutput {
	return i.ToKerberosConfigPtrOutputWithContext(context.Background())
}

func (i KerberosConfigArgs) ToKerberosConfigPtrOutputWithContext(ctx context.Context) KerberosConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KerberosConfigOutput).ToKerberosConfigPtrOutputWithContext(ctx)
}

// KerberosConfigPtrInput is an input type that accepts KerberosConfigArgs, KerberosConfigPtr and KerberosConfigPtrOutput values.
// You can construct a concrete instance of `KerberosConfigPtrInput` via:
//
//          KerberosConfigArgs{...}
//
//  or:
//
//          nil
type KerberosConfigPtrInput interface {
	pulumi.Input

	ToKerberosConfigPtrOutput() KerberosConfigPtrOutput
	ToKerberosConfigPtrOutputWithContext(context.Context) KerberosConfigPtrOutput
}

type kerberosConfigPtrType KerberosConfigArgs

func KerberosConfigPtr(v *KerberosConfigArgs) KerberosConfigPtrInput {
	return (*kerberosConfigPtrType)(v)
}

func (*kerberosConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KerberosConfig)(nil)).Elem()
}

func (i *kerberosConfigPtrType) ToKerberosConfigPtrOutput() KerberosConfigPtrOutput {
	return i.ToKerberosConfigPtrOutputWithContext(context.Background())
}

func (i *kerberosConfigPtrType) ToKerberosConfigPtrOutputWithContext(ctx context.Context) KerberosConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KerberosConfigPtrOutput)
}

// Specifies Kerberos related configuration.
type KerberosConfigOutput struct{ *pulumi.OutputState }

func (KerberosConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KerberosConfig)(nil)).Elem()
}

func (o KerberosConfigOutput) ToKerberosConfigOutput() KerberosConfigOutput {
	return o
}

func (o KerberosConfigOutput) ToKerberosConfigOutputWithContext(ctx context.Context) KerberosConfigOutput {
	return o
}

func (o KerberosConfigOutput) ToKerberosConfigPtrOutput() KerberosConfigPtrOutput {
	return o.ToKerberosConfigPtrOutputWithContext(context.Background())
}

func (o KerberosConfigOutput) ToKerberosConfigPtrOutputWithContext(ctx context.Context) KerberosConfigPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *KerberosConfig {
		return &v
	}).(KerberosConfigPtrOutput)
}

// Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
func (o KerberosConfigOutput) CrossRealmTrustAdminServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.CrossRealmTrustAdminServer }).(pulumi.StringPtrOutput)
}

// Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
func (o KerberosConfigOutput) CrossRealmTrustKdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.CrossRealmTrustKdc }).(pulumi.StringPtrOutput)
}

// Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
func (o KerberosConfigOutput) CrossRealmTrustRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.CrossRealmTrustRealm }).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
func (o KerberosConfigOutput) CrossRealmTrustSharedPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.CrossRealmTrustSharedPasswordUri }).(pulumi.StringPtrOutput)
}

// Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
func (o KerberosConfigOutput) EnableKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *bool { return v.EnableKerberos }).(pulumi.BoolPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
func (o KerberosConfigOutput) KdcDbKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.KdcDbKeyUri }).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
func (o KerberosConfigOutput) KeyPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.KeyPasswordUri }).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
func (o KerberosConfigOutput) KeystorePasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.KeystorePasswordUri }).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
func (o KerberosConfigOutput) KeystoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.KeystoreUri }).(pulumi.StringPtrOutput)
}

// Optional. The uri of the KMS key used to encrypt various sensitive files.
func (o KerberosConfigOutput) KmsKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.KmsKeyUri }).(pulumi.StringPtrOutput)
}

// Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
func (o KerberosConfigOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.Realm }).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
func (o KerberosConfigOutput) RootPrincipalPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.RootPrincipalPasswordUri }).(pulumi.StringPtrOutput)
}

// Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
func (o KerberosConfigOutput) TgtLifetimeHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *int { return v.TgtLifetimeHours }).(pulumi.IntPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
func (o KerberosConfigOutput) TruststorePasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.TruststorePasswordUri }).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
func (o KerberosConfigOutput) TruststoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.TruststoreUri }).(pulumi.StringPtrOutput)
}

type KerberosConfigPtrOutput struct{ *pulumi.OutputState }

func (KerberosConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KerberosConfig)(nil)).Elem()
}

func (o KerberosConfigPtrOutput) ToKerberosConfigPtrOutput() KerberosConfigPtrOutput {
	return o
}

func (o KerberosConfigPtrOutput) ToKerberosConfigPtrOutputWithContext(ctx context.Context) KerberosConfigPtrOutput {
	return o
}

func (o KerberosConfigPtrOutput) Elem() KerberosConfigOutput {
	return o.ApplyT(func(v *KerberosConfig) KerberosConfig { return *v }).(KerberosConfigOutput)
}

// Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
func (o KerberosConfigPtrOutput) CrossRealmTrustAdminServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.CrossRealmTrustAdminServer
	}).(pulumi.StringPtrOutput)
}

// Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
func (o KerberosConfigPtrOutput) CrossRealmTrustKdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.CrossRealmTrustKdc
	}).(pulumi.StringPtrOutput)
}

// Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
func (o KerberosConfigPtrOutput) CrossRealmTrustRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.CrossRealmTrustRealm
	}).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
func (o KerberosConfigPtrOutput) CrossRealmTrustSharedPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.CrossRealmTrustSharedPasswordUri
	}).(pulumi.StringPtrOutput)
}

// Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
func (o KerberosConfigPtrOutput) EnableKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableKerberos
	}).(pulumi.BoolPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
func (o KerberosConfigPtrOutput) KdcDbKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.KdcDbKeyUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
func (o KerberosConfigPtrOutput) KeyPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyPasswordUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
func (o KerberosConfigPtrOutput) KeystorePasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeystorePasswordUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
func (o KerberosConfigPtrOutput) KeystoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeystoreUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The uri of the KMS key used to encrypt various sensitive files.
func (o KerberosConfigPtrOutput) KmsKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
func (o KerberosConfigPtrOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.Realm
	}).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
func (o KerberosConfigPtrOutput) RootPrincipalPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.RootPrincipalPasswordUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
func (o KerberosConfigPtrOutput) TgtLifetimeHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *int {
		if v == nil {
			return nil
		}
		return v.TgtLifetimeHours
	}).(pulumi.IntPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
func (o KerberosConfigPtrOutput) TruststorePasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.TruststorePasswordUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
func (o KerberosConfigPtrOutput) TruststoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.TruststoreUri
	}).(pulumi.StringPtrOutput)
}

// Specifies Kerberos related configuration.
type KerberosConfigResponse struct {
	// Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustAdminServer string `pulumi:"crossRealmTrustAdminServer"`
	// Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustKdc string `pulumi:"crossRealmTrustKdc"`
	// Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
	CrossRealmTrustRealm string `pulumi:"crossRealmTrustRealm"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
	CrossRealmTrustSharedPasswordUri string `pulumi:"crossRealmTrustSharedPasswordUri"`
	// Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
	EnableKerberos bool `pulumi:"enableKerberos"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
	KdcDbKeyUri string `pulumi:"kdcDbKeyUri"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
	KeyPasswordUri string `pulumi:"keyPasswordUri"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
	KeystorePasswordUri string `pulumi:"keystorePasswordUri"`
	// Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	KeystoreUri string `pulumi:"keystoreUri"`
	// Optional. The uri of the KMS key used to encrypt various sensitive files.
	KmsKeyUri string `pulumi:"kmsKeyUri"`
	// Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
	Realm string `pulumi:"realm"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
	RootPrincipalPasswordUri string `pulumi:"rootPrincipalPasswordUri"`
	// Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
	TgtLifetimeHours int `pulumi:"tgtLifetimeHours"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
	TruststorePasswordUri string `pulumi:"truststorePasswordUri"`
	// Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	TruststoreUri string `pulumi:"truststoreUri"`
}

// KerberosConfigResponseInput is an input type that accepts KerberosConfigResponseArgs and KerberosConfigResponseOutput values.
// You can construct a concrete instance of `KerberosConfigResponseInput` via:
//
//          KerberosConfigResponseArgs{...}
type KerberosConfigResponseInput interface {
	pulumi.Input

	ToKerberosConfigResponseOutput() KerberosConfigResponseOutput
	ToKerberosConfigResponseOutputWithContext(context.Context) KerberosConfigResponseOutput
}

// Specifies Kerberos related configuration.
type KerberosConfigResponseArgs struct {
	// Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustAdminServer pulumi.StringInput `pulumi:"crossRealmTrustAdminServer"`
	// Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustKdc pulumi.StringInput `pulumi:"crossRealmTrustKdc"`
	// Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
	CrossRealmTrustRealm pulumi.StringInput `pulumi:"crossRealmTrustRealm"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
	CrossRealmTrustSharedPasswordUri pulumi.StringInput `pulumi:"crossRealmTrustSharedPasswordUri"`
	// Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
	EnableKerberos pulumi.BoolInput `pulumi:"enableKerberos"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
	KdcDbKeyUri pulumi.StringInput `pulumi:"kdcDbKeyUri"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
	KeyPasswordUri pulumi.StringInput `pulumi:"keyPasswordUri"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
	KeystorePasswordUri pulumi.StringInput `pulumi:"keystorePasswordUri"`
	// Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	KeystoreUri pulumi.StringInput `pulumi:"keystoreUri"`
	// Optional. The uri of the KMS key used to encrypt various sensitive files.
	KmsKeyUri pulumi.StringInput `pulumi:"kmsKeyUri"`
	// Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
	Realm pulumi.StringInput `pulumi:"realm"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
	RootPrincipalPasswordUri pulumi.StringInput `pulumi:"rootPrincipalPasswordUri"`
	// Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
	TgtLifetimeHours pulumi.IntInput `pulumi:"tgtLifetimeHours"`
	// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
	TruststorePasswordUri pulumi.StringInput `pulumi:"truststorePasswordUri"`
	// Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	TruststoreUri pulumi.StringInput `pulumi:"truststoreUri"`
}

func (KerberosConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KerberosConfigResponse)(nil)).Elem()
}

func (i KerberosConfigResponseArgs) ToKerberosConfigResponseOutput() KerberosConfigResponseOutput {
	return i.ToKerberosConfigResponseOutputWithContext(context.Background())
}

func (i KerberosConfigResponseArgs) ToKerberosConfigResponseOutputWithContext(ctx context.Context) KerberosConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KerberosConfigResponseOutput)
}

func (i KerberosConfigResponseArgs) ToKerberosConfigResponsePtrOutput() KerberosConfigResponsePtrOutput {
	return i.ToKerberosConfigResponsePtrOutputWithContext(context.Background())
}

func (i KerberosConfigResponseArgs) ToKerberosConfigResponsePtrOutputWithContext(ctx context.Context) KerberosConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KerberosConfigResponseOutput).ToKerberosConfigResponsePtrOutputWithContext(ctx)
}

// KerberosConfigResponsePtrInput is an input type that accepts KerberosConfigResponseArgs, KerberosConfigResponsePtr and KerberosConfigResponsePtrOutput values.
// You can construct a concrete instance of `KerberosConfigResponsePtrInput` via:
//
//          KerberosConfigResponseArgs{...}
//
//  or:
//
//          nil
type KerberosConfigResponsePtrInput interface {
	pulumi.Input

	ToKerberosConfigResponsePtrOutput() KerberosConfigResponsePtrOutput
	ToKerberosConfigResponsePtrOutputWithContext(context.Context) KerberosConfigResponsePtrOutput
}

type kerberosConfigResponsePtrType KerberosConfigResponseArgs

func KerberosConfigResponsePtr(v *KerberosConfigResponseArgs) KerberosConfigResponsePtrInput {
	return (*kerberosConfigResponsePtrType)(v)
}

func (*kerberosConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KerberosConfigResponse)(nil)).Elem()
}

func (i *kerberosConfigResponsePtrType) ToKerberosConfigResponsePtrOutput() KerberosConfigResponsePtrOutput {
	return i.ToKerberosConfigResponsePtrOutputWithContext(context.Background())
}

func (i *kerberosConfigResponsePtrType) ToKerberosConfigResponsePtrOutputWithContext(ctx context.Context) KerberosConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KerberosConfigResponsePtrOutput)
}

// Specifies Kerberos related configuration.
type KerberosConfigResponseOutput struct{ *pulumi.OutputState }

func (KerberosConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KerberosConfigResponse)(nil)).Elem()
}

func (o KerberosConfigResponseOutput) ToKerberosConfigResponseOutput() KerberosConfigResponseOutput {
	return o
}

func (o KerberosConfigResponseOutput) ToKerberosConfigResponseOutputWithContext(ctx context.Context) KerberosConfigResponseOutput {
	return o
}

func (o KerberosConfigResponseOutput) ToKerberosConfigResponsePtrOutput() KerberosConfigResponsePtrOutput {
	return o.ToKerberosConfigResponsePtrOutputWithContext(context.Background())
}

func (o KerberosConfigResponseOutput) ToKerberosConfigResponsePtrOutputWithContext(ctx context.Context) KerberosConfigResponsePtrOutput {
	return o.ApplyT(func(v KerberosConfigResponse) *KerberosConfigResponse {
		return &v
	}).(KerberosConfigResponsePtrOutput)
}

// Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
func (o KerberosConfigResponseOutput) CrossRealmTrustAdminServer() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.CrossRealmTrustAdminServer }).(pulumi.StringOutput)
}

// Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
func (o KerberosConfigResponseOutput) CrossRealmTrustKdc() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.CrossRealmTrustKdc }).(pulumi.StringOutput)
}

// Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
func (o KerberosConfigResponseOutput) CrossRealmTrustRealm() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.CrossRealmTrustRealm }).(pulumi.StringOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
func (o KerberosConfigResponseOutput) CrossRealmTrustSharedPasswordUri() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.CrossRealmTrustSharedPasswordUri }).(pulumi.StringOutput)
}

// Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
func (o KerberosConfigResponseOutput) EnableKerberos() pulumi.BoolOutput {
	return o.ApplyT(func(v KerberosConfigResponse) bool { return v.EnableKerberos }).(pulumi.BoolOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
func (o KerberosConfigResponseOutput) KdcDbKeyUri() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.KdcDbKeyUri }).(pulumi.StringOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
func (o KerberosConfigResponseOutput) KeyPasswordUri() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.KeyPasswordUri }).(pulumi.StringOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
func (o KerberosConfigResponseOutput) KeystorePasswordUri() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.KeystorePasswordUri }).(pulumi.StringOutput)
}

// Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
func (o KerberosConfigResponseOutput) KeystoreUri() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.KeystoreUri }).(pulumi.StringOutput)
}

// Optional. The uri of the KMS key used to encrypt various sensitive files.
func (o KerberosConfigResponseOutput) KmsKeyUri() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.KmsKeyUri }).(pulumi.StringOutput)
}

// Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
func (o KerberosConfigResponseOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.Realm }).(pulumi.StringOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
func (o KerberosConfigResponseOutput) RootPrincipalPasswordUri() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.RootPrincipalPasswordUri }).(pulumi.StringOutput)
}

// Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
func (o KerberosConfigResponseOutput) TgtLifetimeHours() pulumi.IntOutput {
	return o.ApplyT(func(v KerberosConfigResponse) int { return v.TgtLifetimeHours }).(pulumi.IntOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
func (o KerberosConfigResponseOutput) TruststorePasswordUri() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.TruststorePasswordUri }).(pulumi.StringOutput)
}

// Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
func (o KerberosConfigResponseOutput) TruststoreUri() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.TruststoreUri }).(pulumi.StringOutput)
}

type KerberosConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (KerberosConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KerberosConfigResponse)(nil)).Elem()
}

func (o KerberosConfigResponsePtrOutput) ToKerberosConfigResponsePtrOutput() KerberosConfigResponsePtrOutput {
	return o
}

func (o KerberosConfigResponsePtrOutput) ToKerberosConfigResponsePtrOutputWithContext(ctx context.Context) KerberosConfigResponsePtrOutput {
	return o
}

func (o KerberosConfigResponsePtrOutput) Elem() KerberosConfigResponseOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) KerberosConfigResponse { return *v }).(KerberosConfigResponseOutput)
}

// Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
func (o KerberosConfigResponsePtrOutput) CrossRealmTrustAdminServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CrossRealmTrustAdminServer
	}).(pulumi.StringPtrOutput)
}

// Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
func (o KerberosConfigResponsePtrOutput) CrossRealmTrustKdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CrossRealmTrustKdc
	}).(pulumi.StringPtrOutput)
}

// Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
func (o KerberosConfigResponsePtrOutput) CrossRealmTrustRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CrossRealmTrustRealm
	}).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
func (o KerberosConfigResponsePtrOutput) CrossRealmTrustSharedPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CrossRealmTrustSharedPasswordUri
	}).(pulumi.StringPtrOutput)
}

// Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
func (o KerberosConfigResponsePtrOutput) EnableKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableKerberos
	}).(pulumi.BoolPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
func (o KerberosConfigResponsePtrOutput) KdcDbKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KdcDbKeyUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
func (o KerberosConfigResponsePtrOutput) KeyPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyPasswordUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
func (o KerberosConfigResponsePtrOutput) KeystorePasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeystorePasswordUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
func (o KerberosConfigResponsePtrOutput) KeystoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeystoreUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The uri of the KMS key used to encrypt various sensitive files.
func (o KerberosConfigResponsePtrOutput) KmsKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKeyUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
func (o KerberosConfigResponsePtrOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Realm
	}).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
func (o KerberosConfigResponsePtrOutput) RootPrincipalPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RootPrincipalPasswordUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
func (o KerberosConfigResponsePtrOutput) TgtLifetimeHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TgtLifetimeHours
	}).(pulumi.IntPtrOutput)
}

// Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
func (o KerberosConfigResponsePtrOutput) TruststorePasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TruststorePasswordUri
	}).(pulumi.StringPtrOutput)
}

// Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
func (o KerberosConfigResponsePtrOutput) TruststoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TruststoreUri
	}).(pulumi.StringPtrOutput)
}

// Specifies the cluster auto-delete schedule configuration.
type LifecycleConfig struct {
	// Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	AutoDeleteTime *string `pulumi:"autoDeleteTime"`
	// Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	AutoDeleteTtl *string `pulumi:"autoDeleteTtl"`
	// Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	IdleDeleteTtl *string `pulumi:"idleDeleteTtl"`
}

// LifecycleConfigInput is an input type that accepts LifecycleConfigArgs and LifecycleConfigOutput values.
// You can construct a concrete instance of `LifecycleConfigInput` via:
//
//          LifecycleConfigArgs{...}
type LifecycleConfigInput interface {
	pulumi.Input

	ToLifecycleConfigOutput() LifecycleConfigOutput
	ToLifecycleConfigOutputWithContext(context.Context) LifecycleConfigOutput
}

// Specifies the cluster auto-delete schedule configuration.
type LifecycleConfigArgs struct {
	// Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	AutoDeleteTime pulumi.StringPtrInput `pulumi:"autoDeleteTime"`
	// Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	AutoDeleteTtl pulumi.StringPtrInput `pulumi:"autoDeleteTtl"`
	// Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	IdleDeleteTtl pulumi.StringPtrInput `pulumi:"idleDeleteTtl"`
}

func (LifecycleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleConfig)(nil)).Elem()
}

func (i LifecycleConfigArgs) ToLifecycleConfigOutput() LifecycleConfigOutput {
	return i.ToLifecycleConfigOutputWithContext(context.Background())
}

func (i LifecycleConfigArgs) ToLifecycleConfigOutputWithContext(ctx context.Context) LifecycleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleConfigOutput)
}

func (i LifecycleConfigArgs) ToLifecycleConfigPtrOutput() LifecycleConfigPtrOutput {
	return i.ToLifecycleConfigPtrOutputWithContext(context.Background())
}

func (i LifecycleConfigArgs) ToLifecycleConfigPtrOutputWithContext(ctx context.Context) LifecycleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleConfigOutput).ToLifecycleConfigPtrOutputWithContext(ctx)
}

// LifecycleConfigPtrInput is an input type that accepts LifecycleConfigArgs, LifecycleConfigPtr and LifecycleConfigPtrOutput values.
// You can construct a concrete instance of `LifecycleConfigPtrInput` via:
//
//          LifecycleConfigArgs{...}
//
//  or:
//
//          nil
type LifecycleConfigPtrInput interface {
	pulumi.Input

	ToLifecycleConfigPtrOutput() LifecycleConfigPtrOutput
	ToLifecycleConfigPtrOutputWithContext(context.Context) LifecycleConfigPtrOutput
}

type lifecycleConfigPtrType LifecycleConfigArgs

func LifecycleConfigPtr(v *LifecycleConfigArgs) LifecycleConfigPtrInput {
	return (*lifecycleConfigPtrType)(v)
}

func (*lifecycleConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecycleConfig)(nil)).Elem()
}

func (i *lifecycleConfigPtrType) ToLifecycleConfigPtrOutput() LifecycleConfigPtrOutput {
	return i.ToLifecycleConfigPtrOutputWithContext(context.Background())
}

func (i *lifecycleConfigPtrType) ToLifecycleConfigPtrOutputWithContext(ctx context.Context) LifecycleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleConfigPtrOutput)
}

// Specifies the cluster auto-delete schedule configuration.
type LifecycleConfigOutput struct{ *pulumi.OutputState }

func (LifecycleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleConfig)(nil)).Elem()
}

func (o LifecycleConfigOutput) ToLifecycleConfigOutput() LifecycleConfigOutput {
	return o
}

func (o LifecycleConfigOutput) ToLifecycleConfigOutputWithContext(ctx context.Context) LifecycleConfigOutput {
	return o
}

func (o LifecycleConfigOutput) ToLifecycleConfigPtrOutput() LifecycleConfigPtrOutput {
	return o.ToLifecycleConfigPtrOutputWithContext(context.Background())
}

func (o LifecycleConfigOutput) ToLifecycleConfigPtrOutputWithContext(ctx context.Context) LifecycleConfigPtrOutput {
	return o.ApplyT(func(v LifecycleConfig) *LifecycleConfig {
		return &v
	}).(LifecycleConfigPtrOutput)
}

// Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o LifecycleConfigOutput) AutoDeleteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleConfig) *string { return v.AutoDeleteTime }).(pulumi.StringPtrOutput)
}

// Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o LifecycleConfigOutput) AutoDeleteTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleConfig) *string { return v.AutoDeleteTtl }).(pulumi.StringPtrOutput)
}

// Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o LifecycleConfigOutput) IdleDeleteTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecycleConfig) *string { return v.IdleDeleteTtl }).(pulumi.StringPtrOutput)
}

type LifecycleConfigPtrOutput struct{ *pulumi.OutputState }

func (LifecycleConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecycleConfig)(nil)).Elem()
}

func (o LifecycleConfigPtrOutput) ToLifecycleConfigPtrOutput() LifecycleConfigPtrOutput {
	return o
}

func (o LifecycleConfigPtrOutput) ToLifecycleConfigPtrOutputWithContext(ctx context.Context) LifecycleConfigPtrOutput {
	return o
}

func (o LifecycleConfigPtrOutput) Elem() LifecycleConfigOutput {
	return o.ApplyT(func(v *LifecycleConfig) LifecycleConfig { return *v }).(LifecycleConfigOutput)
}

// Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o LifecycleConfigPtrOutput) AutoDeleteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecycleConfig) *string {
		if v == nil {
			return nil
		}
		return v.AutoDeleteTime
	}).(pulumi.StringPtrOutput)
}

// Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o LifecycleConfigPtrOutput) AutoDeleteTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecycleConfig) *string {
		if v == nil {
			return nil
		}
		return v.AutoDeleteTtl
	}).(pulumi.StringPtrOutput)
}

// Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o LifecycleConfigPtrOutput) IdleDeleteTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecycleConfig) *string {
		if v == nil {
			return nil
		}
		return v.IdleDeleteTtl
	}).(pulumi.StringPtrOutput)
}

// Specifies the cluster auto-delete schedule configuration.
type LifecycleConfigResponse struct {
	// Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	AutoDeleteTime string `pulumi:"autoDeleteTime"`
	// Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	AutoDeleteTtl string `pulumi:"autoDeleteTtl"`
	// Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	IdleDeleteTtl string `pulumi:"idleDeleteTtl"`
	// The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	IdleStartTime string `pulumi:"idleStartTime"`
}

// LifecycleConfigResponseInput is an input type that accepts LifecycleConfigResponseArgs and LifecycleConfigResponseOutput values.
// You can construct a concrete instance of `LifecycleConfigResponseInput` via:
//
//          LifecycleConfigResponseArgs{...}
type LifecycleConfigResponseInput interface {
	pulumi.Input

	ToLifecycleConfigResponseOutput() LifecycleConfigResponseOutput
	ToLifecycleConfigResponseOutputWithContext(context.Context) LifecycleConfigResponseOutput
}

// Specifies the cluster auto-delete schedule configuration.
type LifecycleConfigResponseArgs struct {
	// Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	AutoDeleteTime pulumi.StringInput `pulumi:"autoDeleteTime"`
	// Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	AutoDeleteTtl pulumi.StringInput `pulumi:"autoDeleteTtl"`
	// Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	IdleDeleteTtl pulumi.StringInput `pulumi:"idleDeleteTtl"`
	// The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
	IdleStartTime pulumi.StringInput `pulumi:"idleStartTime"`
}

func (LifecycleConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleConfigResponse)(nil)).Elem()
}

func (i LifecycleConfigResponseArgs) ToLifecycleConfigResponseOutput() LifecycleConfigResponseOutput {
	return i.ToLifecycleConfigResponseOutputWithContext(context.Background())
}

func (i LifecycleConfigResponseArgs) ToLifecycleConfigResponseOutputWithContext(ctx context.Context) LifecycleConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleConfigResponseOutput)
}

func (i LifecycleConfigResponseArgs) ToLifecycleConfigResponsePtrOutput() LifecycleConfigResponsePtrOutput {
	return i.ToLifecycleConfigResponsePtrOutputWithContext(context.Background())
}

func (i LifecycleConfigResponseArgs) ToLifecycleConfigResponsePtrOutputWithContext(ctx context.Context) LifecycleConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleConfigResponseOutput).ToLifecycleConfigResponsePtrOutputWithContext(ctx)
}

// LifecycleConfigResponsePtrInput is an input type that accepts LifecycleConfigResponseArgs, LifecycleConfigResponsePtr and LifecycleConfigResponsePtrOutput values.
// You can construct a concrete instance of `LifecycleConfigResponsePtrInput` via:
//
//          LifecycleConfigResponseArgs{...}
//
//  or:
//
//          nil
type LifecycleConfigResponsePtrInput interface {
	pulumi.Input

	ToLifecycleConfigResponsePtrOutput() LifecycleConfigResponsePtrOutput
	ToLifecycleConfigResponsePtrOutputWithContext(context.Context) LifecycleConfigResponsePtrOutput
}

type lifecycleConfigResponsePtrType LifecycleConfigResponseArgs

func LifecycleConfigResponsePtr(v *LifecycleConfigResponseArgs) LifecycleConfigResponsePtrInput {
	return (*lifecycleConfigResponsePtrType)(v)
}

func (*lifecycleConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecycleConfigResponse)(nil)).Elem()
}

func (i *lifecycleConfigResponsePtrType) ToLifecycleConfigResponsePtrOutput() LifecycleConfigResponsePtrOutput {
	return i.ToLifecycleConfigResponsePtrOutputWithContext(context.Background())
}

func (i *lifecycleConfigResponsePtrType) ToLifecycleConfigResponsePtrOutputWithContext(ctx context.Context) LifecycleConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecycleConfigResponsePtrOutput)
}

// Specifies the cluster auto-delete schedule configuration.
type LifecycleConfigResponseOutput struct{ *pulumi.OutputState }

func (LifecycleConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecycleConfigResponse)(nil)).Elem()
}

func (o LifecycleConfigResponseOutput) ToLifecycleConfigResponseOutput() LifecycleConfigResponseOutput {
	return o
}

func (o LifecycleConfigResponseOutput) ToLifecycleConfigResponseOutputWithContext(ctx context.Context) LifecycleConfigResponseOutput {
	return o
}

func (o LifecycleConfigResponseOutput) ToLifecycleConfigResponsePtrOutput() LifecycleConfigResponsePtrOutput {
	return o.ToLifecycleConfigResponsePtrOutputWithContext(context.Background())
}

func (o LifecycleConfigResponseOutput) ToLifecycleConfigResponsePtrOutputWithContext(ctx context.Context) LifecycleConfigResponsePtrOutput {
	return o.ApplyT(func(v LifecycleConfigResponse) *LifecycleConfigResponse {
		return &v
	}).(LifecycleConfigResponsePtrOutput)
}

// Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o LifecycleConfigResponseOutput) AutoDeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v LifecycleConfigResponse) string { return v.AutoDeleteTime }).(pulumi.StringOutput)
}

// Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o LifecycleConfigResponseOutput) AutoDeleteTtl() pulumi.StringOutput {
	return o.ApplyT(func(v LifecycleConfigResponse) string { return v.AutoDeleteTtl }).(pulumi.StringOutput)
}

// Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o LifecycleConfigResponseOutput) IdleDeleteTtl() pulumi.StringOutput {
	return o.ApplyT(func(v LifecycleConfigResponse) string { return v.IdleDeleteTtl }).(pulumi.StringOutput)
}

// The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o LifecycleConfigResponseOutput) IdleStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LifecycleConfigResponse) string { return v.IdleStartTime }).(pulumi.StringOutput)
}

type LifecycleConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (LifecycleConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecycleConfigResponse)(nil)).Elem()
}

func (o LifecycleConfigResponsePtrOutput) ToLifecycleConfigResponsePtrOutput() LifecycleConfigResponsePtrOutput {
	return o
}

func (o LifecycleConfigResponsePtrOutput) ToLifecycleConfigResponsePtrOutputWithContext(ctx context.Context) LifecycleConfigResponsePtrOutput {
	return o
}

func (o LifecycleConfigResponsePtrOutput) Elem() LifecycleConfigResponseOutput {
	return o.ApplyT(func(v *LifecycleConfigResponse) LifecycleConfigResponse { return *v }).(LifecycleConfigResponseOutput)
}

// Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o LifecycleConfigResponsePtrOutput) AutoDeleteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecycleConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AutoDeleteTime
	}).(pulumi.StringPtrOutput)
}

// Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o LifecycleConfigResponsePtrOutput) AutoDeleteTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecycleConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AutoDeleteTtl
	}).(pulumi.StringPtrOutput)
}

// Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o LifecycleConfigResponsePtrOutput) IdleDeleteTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecycleConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IdleDeleteTtl
	}).(pulumi.StringPtrOutput)
}

// The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
func (o LifecycleConfigResponsePtrOutput) IdleStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecycleConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IdleStartTime
	}).(pulumi.StringPtrOutput)
}

// The runtime logging config of the job.
type LoggingConfig struct {
	// The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

// LoggingConfigInput is an input type that accepts LoggingConfigArgs and LoggingConfigOutput values.
// You can construct a concrete instance of `LoggingConfigInput` via:
//
//          LoggingConfigArgs{...}
type LoggingConfigInput interface {
	pulumi.Input

	ToLoggingConfigOutput() LoggingConfigOutput
	ToLoggingConfigOutputWithContext(context.Context) LoggingConfigOutput
}

// The runtime logging config of the job.
type LoggingConfigArgs struct {
	// The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (LoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfig)(nil)).Elem()
}

func (i LoggingConfigArgs) ToLoggingConfigOutput() LoggingConfigOutput {
	return i.ToLoggingConfigOutputWithContext(context.Background())
}

func (i LoggingConfigArgs) ToLoggingConfigOutputWithContext(ctx context.Context) LoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigOutput)
}

func (i LoggingConfigArgs) ToLoggingConfigPtrOutput() LoggingConfigPtrOutput {
	return i.ToLoggingConfigPtrOutputWithContext(context.Background())
}

func (i LoggingConfigArgs) ToLoggingConfigPtrOutputWithContext(ctx context.Context) LoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigOutput).ToLoggingConfigPtrOutputWithContext(ctx)
}

// LoggingConfigPtrInput is an input type that accepts LoggingConfigArgs, LoggingConfigPtr and LoggingConfigPtrOutput values.
// You can construct a concrete instance of `LoggingConfigPtrInput` via:
//
//          LoggingConfigArgs{...}
//
//  or:
//
//          nil
type LoggingConfigPtrInput interface {
	pulumi.Input

	ToLoggingConfigPtrOutput() LoggingConfigPtrOutput
	ToLoggingConfigPtrOutputWithContext(context.Context) LoggingConfigPtrOutput
}

type loggingConfigPtrType LoggingConfigArgs

func LoggingConfigPtr(v *LoggingConfigArgs) LoggingConfigPtrInput {
	return (*loggingConfigPtrType)(v)
}

func (*loggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfig)(nil)).Elem()
}

func (i *loggingConfigPtrType) ToLoggingConfigPtrOutput() LoggingConfigPtrOutput {
	return i.ToLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *loggingConfigPtrType) ToLoggingConfigPtrOutputWithContext(ctx context.Context) LoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigPtrOutput)
}

// The runtime logging config of the job.
type LoggingConfigOutput struct{ *pulumi.OutputState }

func (LoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfig)(nil)).Elem()
}

func (o LoggingConfigOutput) ToLoggingConfigOutput() LoggingConfigOutput {
	return o
}

func (o LoggingConfigOutput) ToLoggingConfigOutputWithContext(ctx context.Context) LoggingConfigOutput {
	return o
}

func (o LoggingConfigOutput) ToLoggingConfigPtrOutput() LoggingConfigPtrOutput {
	return o.ToLoggingConfigPtrOutputWithContext(context.Background())
}

func (o LoggingConfigOutput) ToLoggingConfigPtrOutputWithContext(ctx context.Context) LoggingConfigPtrOutput {
	return o.ApplyT(func(v LoggingConfig) *LoggingConfig {
		return &v
	}).(LoggingConfigPtrOutput)
}

// The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
func (o LoggingConfigOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type LoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfig)(nil)).Elem()
}

func (o LoggingConfigPtrOutput) ToLoggingConfigPtrOutput() LoggingConfigPtrOutput {
	return o
}

func (o LoggingConfigPtrOutput) ToLoggingConfigPtrOutputWithContext(ctx context.Context) LoggingConfigPtrOutput {
	return o
}

func (o LoggingConfigPtrOutput) Elem() LoggingConfigOutput {
	return o.ApplyT(func(v *LoggingConfig) LoggingConfig { return *v }).(LoggingConfigOutput)
}

// The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
func (o LoggingConfigPtrOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LoggingConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.DriverLogLevels
	}).(pulumi.StringMapOutput)
}

// The runtime logging config of the job.
type LoggingConfigResponse struct {
	// The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

// LoggingConfigResponseInput is an input type that accepts LoggingConfigResponseArgs and LoggingConfigResponseOutput values.
// You can construct a concrete instance of `LoggingConfigResponseInput` via:
//
//          LoggingConfigResponseArgs{...}
type LoggingConfigResponseInput interface {
	pulumi.Input

	ToLoggingConfigResponseOutput() LoggingConfigResponseOutput
	ToLoggingConfigResponseOutputWithContext(context.Context) LoggingConfigResponseOutput
}

// The runtime logging config of the job.
type LoggingConfigResponseArgs struct {
	// The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (LoggingConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigResponse)(nil)).Elem()
}

func (i LoggingConfigResponseArgs) ToLoggingConfigResponseOutput() LoggingConfigResponseOutput {
	return i.ToLoggingConfigResponseOutputWithContext(context.Background())
}

func (i LoggingConfigResponseArgs) ToLoggingConfigResponseOutputWithContext(ctx context.Context) LoggingConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigResponseOutput)
}

func (i LoggingConfigResponseArgs) ToLoggingConfigResponsePtrOutput() LoggingConfigResponsePtrOutput {
	return i.ToLoggingConfigResponsePtrOutputWithContext(context.Background())
}

func (i LoggingConfigResponseArgs) ToLoggingConfigResponsePtrOutputWithContext(ctx context.Context) LoggingConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigResponseOutput).ToLoggingConfigResponsePtrOutputWithContext(ctx)
}

// LoggingConfigResponsePtrInput is an input type that accepts LoggingConfigResponseArgs, LoggingConfigResponsePtr and LoggingConfigResponsePtrOutput values.
// You can construct a concrete instance of `LoggingConfigResponsePtrInput` via:
//
//          LoggingConfigResponseArgs{...}
//
//  or:
//
//          nil
type LoggingConfigResponsePtrInput interface {
	pulumi.Input

	ToLoggingConfigResponsePtrOutput() LoggingConfigResponsePtrOutput
	ToLoggingConfigResponsePtrOutputWithContext(context.Context) LoggingConfigResponsePtrOutput
}

type loggingConfigResponsePtrType LoggingConfigResponseArgs

func LoggingConfigResponsePtr(v *LoggingConfigResponseArgs) LoggingConfigResponsePtrInput {
	return (*loggingConfigResponsePtrType)(v)
}

func (*loggingConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigResponse)(nil)).Elem()
}

func (i *loggingConfigResponsePtrType) ToLoggingConfigResponsePtrOutput() LoggingConfigResponsePtrOutput {
	return i.ToLoggingConfigResponsePtrOutputWithContext(context.Background())
}

func (i *loggingConfigResponsePtrType) ToLoggingConfigResponsePtrOutputWithContext(ctx context.Context) LoggingConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigResponsePtrOutput)
}

// The runtime logging config of the job.
type LoggingConfigResponseOutput struct{ *pulumi.OutputState }

func (LoggingConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigResponse)(nil)).Elem()
}

func (o LoggingConfigResponseOutput) ToLoggingConfigResponseOutput() LoggingConfigResponseOutput {
	return o
}

func (o LoggingConfigResponseOutput) ToLoggingConfigResponseOutputWithContext(ctx context.Context) LoggingConfigResponseOutput {
	return o
}

func (o LoggingConfigResponseOutput) ToLoggingConfigResponsePtrOutput() LoggingConfigResponsePtrOutput {
	return o.ToLoggingConfigResponsePtrOutputWithContext(context.Background())
}

func (o LoggingConfigResponseOutput) ToLoggingConfigResponsePtrOutputWithContext(ctx context.Context) LoggingConfigResponsePtrOutput {
	return o.ApplyT(func(v LoggingConfigResponse) *LoggingConfigResponse {
		return &v
	}).(LoggingConfigResponsePtrOutput)
}

// The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
func (o LoggingConfigResponseOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LoggingConfigResponse) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type LoggingConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigResponse)(nil)).Elem()
}

func (o LoggingConfigResponsePtrOutput) ToLoggingConfigResponsePtrOutput() LoggingConfigResponsePtrOutput {
	return o
}

func (o LoggingConfigResponsePtrOutput) ToLoggingConfigResponsePtrOutputWithContext(ctx context.Context) LoggingConfigResponsePtrOutput {
	return o
}

func (o LoggingConfigResponsePtrOutput) Elem() LoggingConfigResponseOutput {
	return o.ApplyT(func(v *LoggingConfigResponse) LoggingConfigResponse { return *v }).(LoggingConfigResponseOutput)
}

// The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'
func (o LoggingConfigResponsePtrOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LoggingConfigResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.DriverLogLevels
	}).(pulumi.StringMapOutput)
}

// Cluster that is managed by the workflow.
type ManagedCluster struct {
	// The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.
	ClusterName string `pulumi:"clusterName"`
	// The cluster configuration.
	Config ClusterConfig `pulumi:"config"`
	// Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.
	Labels map[string]string `pulumi:"labels"`
}

// ManagedClusterInput is an input type that accepts ManagedClusterArgs and ManagedClusterOutput values.
// You can construct a concrete instance of `ManagedClusterInput` via:
//
//          ManagedClusterArgs{...}
type ManagedClusterInput interface {
	pulumi.Input

	ToManagedClusterOutput() ManagedClusterOutput
	ToManagedClusterOutputWithContext(context.Context) ManagedClusterOutput
}

// Cluster that is managed by the workflow.
type ManagedClusterArgs struct {
	// The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The cluster configuration.
	Config ClusterConfigInput `pulumi:"config"`
	// Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (ManagedClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedCluster)(nil)).Elem()
}

func (i ManagedClusterArgs) ToManagedClusterOutput() ManagedClusterOutput {
	return i.ToManagedClusterOutputWithContext(context.Background())
}

func (i ManagedClusterArgs) ToManagedClusterOutputWithContext(ctx context.Context) ManagedClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterOutput)
}

func (i ManagedClusterArgs) ToManagedClusterPtrOutput() ManagedClusterPtrOutput {
	return i.ToManagedClusterPtrOutputWithContext(context.Background())
}

func (i ManagedClusterArgs) ToManagedClusterPtrOutputWithContext(ctx context.Context) ManagedClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterOutput).ToManagedClusterPtrOutputWithContext(ctx)
}

// ManagedClusterPtrInput is an input type that accepts ManagedClusterArgs, ManagedClusterPtr and ManagedClusterPtrOutput values.
// You can construct a concrete instance of `ManagedClusterPtrInput` via:
//
//          ManagedClusterArgs{...}
//
//  or:
//
//          nil
type ManagedClusterPtrInput interface {
	pulumi.Input

	ToManagedClusterPtrOutput() ManagedClusterPtrOutput
	ToManagedClusterPtrOutputWithContext(context.Context) ManagedClusterPtrOutput
}

type managedClusterPtrType ManagedClusterArgs

func ManagedClusterPtr(v *ManagedClusterArgs) ManagedClusterPtrInput {
	return (*managedClusterPtrType)(v)
}

func (*managedClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedCluster)(nil)).Elem()
}

func (i *managedClusterPtrType) ToManagedClusterPtrOutput() ManagedClusterPtrOutput {
	return i.ToManagedClusterPtrOutputWithContext(context.Background())
}

func (i *managedClusterPtrType) ToManagedClusterPtrOutputWithContext(ctx context.Context) ManagedClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPtrOutput)
}

// Cluster that is managed by the workflow.
type ManagedClusterOutput struct{ *pulumi.OutputState }

func (ManagedClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedCluster)(nil)).Elem()
}

func (o ManagedClusterOutput) ToManagedClusterOutput() ManagedClusterOutput {
	return o
}

func (o ManagedClusterOutput) ToManagedClusterOutputWithContext(ctx context.Context) ManagedClusterOutput {
	return o
}

func (o ManagedClusterOutput) ToManagedClusterPtrOutput() ManagedClusterPtrOutput {
	return o.ToManagedClusterPtrOutputWithContext(context.Background())
}

func (o ManagedClusterOutput) ToManagedClusterPtrOutputWithContext(ctx context.Context) ManagedClusterPtrOutput {
	return o.ApplyT(func(v ManagedCluster) *ManagedCluster {
		return &v
	}).(ManagedClusterPtrOutput)
}

// The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.
func (o ManagedClusterOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedCluster) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The cluster configuration.
func (o ManagedClusterOutput) Config() ClusterConfigOutput {
	return o.ApplyT(func(v ManagedCluster) ClusterConfig { return v.Config }).(ClusterConfigOutput)
}

// Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.
func (o ManagedClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedCluster) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type ManagedClusterPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedCluster)(nil)).Elem()
}

func (o ManagedClusterPtrOutput) ToManagedClusterPtrOutput() ManagedClusterPtrOutput {
	return o
}

func (o ManagedClusterPtrOutput) ToManagedClusterPtrOutputWithContext(ctx context.Context) ManagedClusterPtrOutput {
	return o
}

func (o ManagedClusterPtrOutput) Elem() ManagedClusterOutput {
	return o.ApplyT(func(v *ManagedCluster) ManagedCluster { return *v }).(ManagedClusterOutput)
}

// The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.
func (o ManagedClusterPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCluster) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// The cluster configuration.
func (o ManagedClusterPtrOutput) Config() ClusterConfigPtrOutput {
	return o.ApplyT(func(v *ManagedCluster) *ClusterConfig {
		if v == nil {
			return nil
		}
		return &v.Config
	}).(ClusterConfigPtrOutput)
}

// Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.
func (o ManagedClusterPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedCluster) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Cluster that is managed by the workflow.
type ManagedClusterResponse struct {
	// The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.
	ClusterName string `pulumi:"clusterName"`
	// The cluster configuration.
	Config ClusterConfigResponse `pulumi:"config"`
	// Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.
	Labels map[string]string `pulumi:"labels"`
}

// ManagedClusterResponseInput is an input type that accepts ManagedClusterResponseArgs and ManagedClusterResponseOutput values.
// You can construct a concrete instance of `ManagedClusterResponseInput` via:
//
//          ManagedClusterResponseArgs{...}
type ManagedClusterResponseInput interface {
	pulumi.Input

	ToManagedClusterResponseOutput() ManagedClusterResponseOutput
	ToManagedClusterResponseOutputWithContext(context.Context) ManagedClusterResponseOutput
}

// Cluster that is managed by the workflow.
type ManagedClusterResponseArgs struct {
	// The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The cluster configuration.
	Config ClusterConfigResponseInput `pulumi:"config"`
	// Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (ManagedClusterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterResponse)(nil)).Elem()
}

func (i ManagedClusterResponseArgs) ToManagedClusterResponseOutput() ManagedClusterResponseOutput {
	return i.ToManagedClusterResponseOutputWithContext(context.Background())
}

func (i ManagedClusterResponseArgs) ToManagedClusterResponseOutputWithContext(ctx context.Context) ManagedClusterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterResponseOutput)
}

func (i ManagedClusterResponseArgs) ToManagedClusterResponsePtrOutput() ManagedClusterResponsePtrOutput {
	return i.ToManagedClusterResponsePtrOutputWithContext(context.Background())
}

func (i ManagedClusterResponseArgs) ToManagedClusterResponsePtrOutputWithContext(ctx context.Context) ManagedClusterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterResponseOutput).ToManagedClusterResponsePtrOutputWithContext(ctx)
}

// ManagedClusterResponsePtrInput is an input type that accepts ManagedClusterResponseArgs, ManagedClusterResponsePtr and ManagedClusterResponsePtrOutput values.
// You can construct a concrete instance of `ManagedClusterResponsePtrInput` via:
//
//          ManagedClusterResponseArgs{...}
//
//  or:
//
//          nil
type ManagedClusterResponsePtrInput interface {
	pulumi.Input

	ToManagedClusterResponsePtrOutput() ManagedClusterResponsePtrOutput
	ToManagedClusterResponsePtrOutputWithContext(context.Context) ManagedClusterResponsePtrOutput
}

type managedClusterResponsePtrType ManagedClusterResponseArgs

func ManagedClusterResponsePtr(v *ManagedClusterResponseArgs) ManagedClusterResponsePtrInput {
	return (*managedClusterResponsePtrType)(v)
}

func (*managedClusterResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterResponse)(nil)).Elem()
}

func (i *managedClusterResponsePtrType) ToManagedClusterResponsePtrOutput() ManagedClusterResponsePtrOutput {
	return i.ToManagedClusterResponsePtrOutputWithContext(context.Background())
}

func (i *managedClusterResponsePtrType) ToManagedClusterResponsePtrOutputWithContext(ctx context.Context) ManagedClusterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterResponsePtrOutput)
}

// Cluster that is managed by the workflow.
type ManagedClusterResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterResponse)(nil)).Elem()
}

func (o ManagedClusterResponseOutput) ToManagedClusterResponseOutput() ManagedClusterResponseOutput {
	return o
}

func (o ManagedClusterResponseOutput) ToManagedClusterResponseOutputWithContext(ctx context.Context) ManagedClusterResponseOutput {
	return o
}

func (o ManagedClusterResponseOutput) ToManagedClusterResponsePtrOutput() ManagedClusterResponsePtrOutput {
	return o.ToManagedClusterResponsePtrOutputWithContext(context.Background())
}

func (o ManagedClusterResponseOutput) ToManagedClusterResponsePtrOutputWithContext(ctx context.Context) ManagedClusterResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterResponse) *ManagedClusterResponse {
		return &v
	}).(ManagedClusterResponsePtrOutput)
}

// The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.
func (o ManagedClusterResponseOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterResponse) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The cluster configuration.
func (o ManagedClusterResponseOutput) Config() ClusterConfigResponseOutput {
	return o.ApplyT(func(v ManagedClusterResponse) ClusterConfigResponse { return v.Config }).(ClusterConfigResponseOutput)
}

// Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.
func (o ManagedClusterResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterResponse) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type ManagedClusterResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterResponse)(nil)).Elem()
}

func (o ManagedClusterResponsePtrOutput) ToManagedClusterResponsePtrOutput() ManagedClusterResponsePtrOutput {
	return o
}

func (o ManagedClusterResponsePtrOutput) ToManagedClusterResponsePtrOutputWithContext(ctx context.Context) ManagedClusterResponsePtrOutput {
	return o
}

func (o ManagedClusterResponsePtrOutput) Elem() ManagedClusterResponseOutput {
	return o.ApplyT(func(v *ManagedClusterResponse) ManagedClusterResponse { return *v }).(ManagedClusterResponseOutput)
}

// The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.
func (o ManagedClusterResponsePtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// The cluster configuration.
func (o ManagedClusterResponsePtrOutput) Config() ClusterConfigResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterResponse) *ClusterConfigResponse {
		if v == nil {
			return nil
		}
		return &v.Config
	}).(ClusterConfigResponsePtrOutput)
}

// Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.
func (o ManagedClusterResponsePtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedClusterResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Specifies the resources used to actively manage an instance group.
type ManagedGroupConfigResponse struct {
	// The name of the Instance Group Manager for this group.
	InstanceGroupManagerName string `pulumi:"instanceGroupManagerName"`
	// The name of the Instance Template used for the Managed Instance Group.
	InstanceTemplateName string `pulumi:"instanceTemplateName"`
}

// ManagedGroupConfigResponseInput is an input type that accepts ManagedGroupConfigResponseArgs and ManagedGroupConfigResponseOutput values.
// You can construct a concrete instance of `ManagedGroupConfigResponseInput` via:
//
//          ManagedGroupConfigResponseArgs{...}
type ManagedGroupConfigResponseInput interface {
	pulumi.Input

	ToManagedGroupConfigResponseOutput() ManagedGroupConfigResponseOutput
	ToManagedGroupConfigResponseOutputWithContext(context.Context) ManagedGroupConfigResponseOutput
}

// Specifies the resources used to actively manage an instance group.
type ManagedGroupConfigResponseArgs struct {
	// The name of the Instance Group Manager for this group.
	InstanceGroupManagerName pulumi.StringInput `pulumi:"instanceGroupManagerName"`
	// The name of the Instance Template used for the Managed Instance Group.
	InstanceTemplateName pulumi.StringInput `pulumi:"instanceTemplateName"`
}

func (ManagedGroupConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedGroupConfigResponse)(nil)).Elem()
}

func (i ManagedGroupConfigResponseArgs) ToManagedGroupConfigResponseOutput() ManagedGroupConfigResponseOutput {
	return i.ToManagedGroupConfigResponseOutputWithContext(context.Background())
}

func (i ManagedGroupConfigResponseArgs) ToManagedGroupConfigResponseOutputWithContext(ctx context.Context) ManagedGroupConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedGroupConfigResponseOutput)
}

func (i ManagedGroupConfigResponseArgs) ToManagedGroupConfigResponsePtrOutput() ManagedGroupConfigResponsePtrOutput {
	return i.ToManagedGroupConfigResponsePtrOutputWithContext(context.Background())
}

func (i ManagedGroupConfigResponseArgs) ToManagedGroupConfigResponsePtrOutputWithContext(ctx context.Context) ManagedGroupConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedGroupConfigResponseOutput).ToManagedGroupConfigResponsePtrOutputWithContext(ctx)
}

// ManagedGroupConfigResponsePtrInput is an input type that accepts ManagedGroupConfigResponseArgs, ManagedGroupConfigResponsePtr and ManagedGroupConfigResponsePtrOutput values.
// You can construct a concrete instance of `ManagedGroupConfigResponsePtrInput` via:
//
//          ManagedGroupConfigResponseArgs{...}
//
//  or:
//
//          nil
type ManagedGroupConfigResponsePtrInput interface {
	pulumi.Input

	ToManagedGroupConfigResponsePtrOutput() ManagedGroupConfigResponsePtrOutput
	ToManagedGroupConfigResponsePtrOutputWithContext(context.Context) ManagedGroupConfigResponsePtrOutput
}

type managedGroupConfigResponsePtrType ManagedGroupConfigResponseArgs

func ManagedGroupConfigResponsePtr(v *ManagedGroupConfigResponseArgs) ManagedGroupConfigResponsePtrInput {
	return (*managedGroupConfigResponsePtrType)(v)
}

func (*managedGroupConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedGroupConfigResponse)(nil)).Elem()
}

func (i *managedGroupConfigResponsePtrType) ToManagedGroupConfigResponsePtrOutput() ManagedGroupConfigResponsePtrOutput {
	return i.ToManagedGroupConfigResponsePtrOutputWithContext(context.Background())
}

func (i *managedGroupConfigResponsePtrType) ToManagedGroupConfigResponsePtrOutputWithContext(ctx context.Context) ManagedGroupConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedGroupConfigResponsePtrOutput)
}

// Specifies the resources used to actively manage an instance group.
type ManagedGroupConfigResponseOutput struct{ *pulumi.OutputState }

func (ManagedGroupConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedGroupConfigResponse)(nil)).Elem()
}

func (o ManagedGroupConfigResponseOutput) ToManagedGroupConfigResponseOutput() ManagedGroupConfigResponseOutput {
	return o
}

func (o ManagedGroupConfigResponseOutput) ToManagedGroupConfigResponseOutputWithContext(ctx context.Context) ManagedGroupConfigResponseOutput {
	return o
}

func (o ManagedGroupConfigResponseOutput) ToManagedGroupConfigResponsePtrOutput() ManagedGroupConfigResponsePtrOutput {
	return o.ToManagedGroupConfigResponsePtrOutputWithContext(context.Background())
}

func (o ManagedGroupConfigResponseOutput) ToManagedGroupConfigResponsePtrOutputWithContext(ctx context.Context) ManagedGroupConfigResponsePtrOutput {
	return o.ApplyT(func(v ManagedGroupConfigResponse) *ManagedGroupConfigResponse {
		return &v
	}).(ManagedGroupConfigResponsePtrOutput)
}

// The name of the Instance Group Manager for this group.
func (o ManagedGroupConfigResponseOutput) InstanceGroupManagerName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedGroupConfigResponse) string { return v.InstanceGroupManagerName }).(pulumi.StringOutput)
}

// The name of the Instance Template used for the Managed Instance Group.
func (o ManagedGroupConfigResponseOutput) InstanceTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedGroupConfigResponse) string { return v.InstanceTemplateName }).(pulumi.StringOutput)
}

type ManagedGroupConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedGroupConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedGroupConfigResponse)(nil)).Elem()
}

func (o ManagedGroupConfigResponsePtrOutput) ToManagedGroupConfigResponsePtrOutput() ManagedGroupConfigResponsePtrOutput {
	return o
}

func (o ManagedGroupConfigResponsePtrOutput) ToManagedGroupConfigResponsePtrOutputWithContext(ctx context.Context) ManagedGroupConfigResponsePtrOutput {
	return o
}

func (o ManagedGroupConfigResponsePtrOutput) Elem() ManagedGroupConfigResponseOutput {
	return o.ApplyT(func(v *ManagedGroupConfigResponse) ManagedGroupConfigResponse { return *v }).(ManagedGroupConfigResponseOutput)
}

// The name of the Instance Group Manager for this group.
func (o ManagedGroupConfigResponsePtrOutput) InstanceGroupManagerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedGroupConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceGroupManagerName
	}).(pulumi.StringPtrOutput)
}

// The name of the Instance Template used for the Managed Instance Group.
func (o ManagedGroupConfigResponsePtrOutput) InstanceTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedGroupConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceTemplateName
	}).(pulumi.StringPtrOutput)
}

// Specifies a Metastore configuration.
type MetastoreConfig struct {
	// Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]
	DataprocMetastoreService string `pulumi:"dataprocMetastoreService"`
}

// MetastoreConfigInput is an input type that accepts MetastoreConfigArgs and MetastoreConfigOutput values.
// You can construct a concrete instance of `MetastoreConfigInput` via:
//
//          MetastoreConfigArgs{...}
type MetastoreConfigInput interface {
	pulumi.Input

	ToMetastoreConfigOutput() MetastoreConfigOutput
	ToMetastoreConfigOutputWithContext(context.Context) MetastoreConfigOutput
}

// Specifies a Metastore configuration.
type MetastoreConfigArgs struct {
	// Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]
	DataprocMetastoreService pulumi.StringInput `pulumi:"dataprocMetastoreService"`
}

func (MetastoreConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetastoreConfig)(nil)).Elem()
}

func (i MetastoreConfigArgs) ToMetastoreConfigOutput() MetastoreConfigOutput {
	return i.ToMetastoreConfigOutputWithContext(context.Background())
}

func (i MetastoreConfigArgs) ToMetastoreConfigOutputWithContext(ctx context.Context) MetastoreConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetastoreConfigOutput)
}

func (i MetastoreConfigArgs) ToMetastoreConfigPtrOutput() MetastoreConfigPtrOutput {
	return i.ToMetastoreConfigPtrOutputWithContext(context.Background())
}

func (i MetastoreConfigArgs) ToMetastoreConfigPtrOutputWithContext(ctx context.Context) MetastoreConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetastoreConfigOutput).ToMetastoreConfigPtrOutputWithContext(ctx)
}

// MetastoreConfigPtrInput is an input type that accepts MetastoreConfigArgs, MetastoreConfigPtr and MetastoreConfigPtrOutput values.
// You can construct a concrete instance of `MetastoreConfigPtrInput` via:
//
//          MetastoreConfigArgs{...}
//
//  or:
//
//          nil
type MetastoreConfigPtrInput interface {
	pulumi.Input

	ToMetastoreConfigPtrOutput() MetastoreConfigPtrOutput
	ToMetastoreConfigPtrOutputWithContext(context.Context) MetastoreConfigPtrOutput
}

type metastoreConfigPtrType MetastoreConfigArgs

func MetastoreConfigPtr(v *MetastoreConfigArgs) MetastoreConfigPtrInput {
	return (*metastoreConfigPtrType)(v)
}

func (*metastoreConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetastoreConfig)(nil)).Elem()
}

func (i *metastoreConfigPtrType) ToMetastoreConfigPtrOutput() MetastoreConfigPtrOutput {
	return i.ToMetastoreConfigPtrOutputWithContext(context.Background())
}

func (i *metastoreConfigPtrType) ToMetastoreConfigPtrOutputWithContext(ctx context.Context) MetastoreConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetastoreConfigPtrOutput)
}

// Specifies a Metastore configuration.
type MetastoreConfigOutput struct{ *pulumi.OutputState }

func (MetastoreConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetastoreConfig)(nil)).Elem()
}

func (o MetastoreConfigOutput) ToMetastoreConfigOutput() MetastoreConfigOutput {
	return o
}

func (o MetastoreConfigOutput) ToMetastoreConfigOutputWithContext(ctx context.Context) MetastoreConfigOutput {
	return o
}

func (o MetastoreConfigOutput) ToMetastoreConfigPtrOutput() MetastoreConfigPtrOutput {
	return o.ToMetastoreConfigPtrOutputWithContext(context.Background())
}

func (o MetastoreConfigOutput) ToMetastoreConfigPtrOutputWithContext(ctx context.Context) MetastoreConfigPtrOutput {
	return o.ApplyT(func(v MetastoreConfig) *MetastoreConfig {
		return &v
	}).(MetastoreConfigPtrOutput)
}

// Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]
func (o MetastoreConfigOutput) DataprocMetastoreService() pulumi.StringOutput {
	return o.ApplyT(func(v MetastoreConfig) string { return v.DataprocMetastoreService }).(pulumi.StringOutput)
}

type MetastoreConfigPtrOutput struct{ *pulumi.OutputState }

func (MetastoreConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetastoreConfig)(nil)).Elem()
}

func (o MetastoreConfigPtrOutput) ToMetastoreConfigPtrOutput() MetastoreConfigPtrOutput {
	return o
}

func (o MetastoreConfigPtrOutput) ToMetastoreConfigPtrOutputWithContext(ctx context.Context) MetastoreConfigPtrOutput {
	return o
}

func (o MetastoreConfigPtrOutput) Elem() MetastoreConfigOutput {
	return o.ApplyT(func(v *MetastoreConfig) MetastoreConfig { return *v }).(MetastoreConfigOutput)
}

// Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]
func (o MetastoreConfigPtrOutput) DataprocMetastoreService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetastoreConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DataprocMetastoreService
	}).(pulumi.StringPtrOutput)
}

// Specifies a Metastore configuration.
type MetastoreConfigResponse struct {
	// Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]
	DataprocMetastoreService string `pulumi:"dataprocMetastoreService"`
}

// MetastoreConfigResponseInput is an input type that accepts MetastoreConfigResponseArgs and MetastoreConfigResponseOutput values.
// You can construct a concrete instance of `MetastoreConfigResponseInput` via:
//
//          MetastoreConfigResponseArgs{...}
type MetastoreConfigResponseInput interface {
	pulumi.Input

	ToMetastoreConfigResponseOutput() MetastoreConfigResponseOutput
	ToMetastoreConfigResponseOutputWithContext(context.Context) MetastoreConfigResponseOutput
}

// Specifies a Metastore configuration.
type MetastoreConfigResponseArgs struct {
	// Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]
	DataprocMetastoreService pulumi.StringInput `pulumi:"dataprocMetastoreService"`
}

func (MetastoreConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetastoreConfigResponse)(nil)).Elem()
}

func (i MetastoreConfigResponseArgs) ToMetastoreConfigResponseOutput() MetastoreConfigResponseOutput {
	return i.ToMetastoreConfigResponseOutputWithContext(context.Background())
}

func (i MetastoreConfigResponseArgs) ToMetastoreConfigResponseOutputWithContext(ctx context.Context) MetastoreConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetastoreConfigResponseOutput)
}

func (i MetastoreConfigResponseArgs) ToMetastoreConfigResponsePtrOutput() MetastoreConfigResponsePtrOutput {
	return i.ToMetastoreConfigResponsePtrOutputWithContext(context.Background())
}

func (i MetastoreConfigResponseArgs) ToMetastoreConfigResponsePtrOutputWithContext(ctx context.Context) MetastoreConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetastoreConfigResponseOutput).ToMetastoreConfigResponsePtrOutputWithContext(ctx)
}

// MetastoreConfigResponsePtrInput is an input type that accepts MetastoreConfigResponseArgs, MetastoreConfigResponsePtr and MetastoreConfigResponsePtrOutput values.
// You can construct a concrete instance of `MetastoreConfigResponsePtrInput` via:
//
//          MetastoreConfigResponseArgs{...}
//
//  or:
//
//          nil
type MetastoreConfigResponsePtrInput interface {
	pulumi.Input

	ToMetastoreConfigResponsePtrOutput() MetastoreConfigResponsePtrOutput
	ToMetastoreConfigResponsePtrOutputWithContext(context.Context) MetastoreConfigResponsePtrOutput
}

type metastoreConfigResponsePtrType MetastoreConfigResponseArgs

func MetastoreConfigResponsePtr(v *MetastoreConfigResponseArgs) MetastoreConfigResponsePtrInput {
	return (*metastoreConfigResponsePtrType)(v)
}

func (*metastoreConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetastoreConfigResponse)(nil)).Elem()
}

func (i *metastoreConfigResponsePtrType) ToMetastoreConfigResponsePtrOutput() MetastoreConfigResponsePtrOutput {
	return i.ToMetastoreConfigResponsePtrOutputWithContext(context.Background())
}

func (i *metastoreConfigResponsePtrType) ToMetastoreConfigResponsePtrOutputWithContext(ctx context.Context) MetastoreConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetastoreConfigResponsePtrOutput)
}

// Specifies a Metastore configuration.
type MetastoreConfigResponseOutput struct{ *pulumi.OutputState }

func (MetastoreConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetastoreConfigResponse)(nil)).Elem()
}

func (o MetastoreConfigResponseOutput) ToMetastoreConfigResponseOutput() MetastoreConfigResponseOutput {
	return o
}

func (o MetastoreConfigResponseOutput) ToMetastoreConfigResponseOutputWithContext(ctx context.Context) MetastoreConfigResponseOutput {
	return o
}

func (o MetastoreConfigResponseOutput) ToMetastoreConfigResponsePtrOutput() MetastoreConfigResponsePtrOutput {
	return o.ToMetastoreConfigResponsePtrOutputWithContext(context.Background())
}

func (o MetastoreConfigResponseOutput) ToMetastoreConfigResponsePtrOutputWithContext(ctx context.Context) MetastoreConfigResponsePtrOutput {
	return o.ApplyT(func(v MetastoreConfigResponse) *MetastoreConfigResponse {
		return &v
	}).(MetastoreConfigResponsePtrOutput)
}

// Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]
func (o MetastoreConfigResponseOutput) DataprocMetastoreService() pulumi.StringOutput {
	return o.ApplyT(func(v MetastoreConfigResponse) string { return v.DataprocMetastoreService }).(pulumi.StringOutput)
}

type MetastoreConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (MetastoreConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetastoreConfigResponse)(nil)).Elem()
}

func (o MetastoreConfigResponsePtrOutput) ToMetastoreConfigResponsePtrOutput() MetastoreConfigResponsePtrOutput {
	return o
}

func (o MetastoreConfigResponsePtrOutput) ToMetastoreConfigResponsePtrOutputWithContext(ctx context.Context) MetastoreConfigResponsePtrOutput {
	return o
}

func (o MetastoreConfigResponsePtrOutput) Elem() MetastoreConfigResponseOutput {
	return o.ApplyT(func(v *MetastoreConfigResponse) MetastoreConfigResponse { return *v }).(MetastoreConfigResponseOutput)
}

// Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]
func (o MetastoreConfigResponsePtrOutput) DataprocMetastoreService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetastoreConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataprocMetastoreService
	}).(pulumi.StringPtrOutput)
}

// A full, namespace-isolated deployment target for an existing GKE cluster.
type NamespacedGkeDeploymentTarget struct {
	// Optional. A namespace within the GKE cluster to deploy into.
	ClusterNamespace *string `pulumi:"clusterNamespace"`
	// Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
	TargetGkeCluster *string `pulumi:"targetGkeCluster"`
}

// NamespacedGkeDeploymentTargetInput is an input type that accepts NamespacedGkeDeploymentTargetArgs and NamespacedGkeDeploymentTargetOutput values.
// You can construct a concrete instance of `NamespacedGkeDeploymentTargetInput` via:
//
//          NamespacedGkeDeploymentTargetArgs{...}
type NamespacedGkeDeploymentTargetInput interface {
	pulumi.Input

	ToNamespacedGkeDeploymentTargetOutput() NamespacedGkeDeploymentTargetOutput
	ToNamespacedGkeDeploymentTargetOutputWithContext(context.Context) NamespacedGkeDeploymentTargetOutput
}

// A full, namespace-isolated deployment target for an existing GKE cluster.
type NamespacedGkeDeploymentTargetArgs struct {
	// Optional. A namespace within the GKE cluster to deploy into.
	ClusterNamespace pulumi.StringPtrInput `pulumi:"clusterNamespace"`
	// Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
	TargetGkeCluster pulumi.StringPtrInput `pulumi:"targetGkeCluster"`
}

func (NamespacedGkeDeploymentTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacedGkeDeploymentTarget)(nil)).Elem()
}

func (i NamespacedGkeDeploymentTargetArgs) ToNamespacedGkeDeploymentTargetOutput() NamespacedGkeDeploymentTargetOutput {
	return i.ToNamespacedGkeDeploymentTargetOutputWithContext(context.Background())
}

func (i NamespacedGkeDeploymentTargetArgs) ToNamespacedGkeDeploymentTargetOutputWithContext(ctx context.Context) NamespacedGkeDeploymentTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacedGkeDeploymentTargetOutput)
}

func (i NamespacedGkeDeploymentTargetArgs) ToNamespacedGkeDeploymentTargetPtrOutput() NamespacedGkeDeploymentTargetPtrOutput {
	return i.ToNamespacedGkeDeploymentTargetPtrOutputWithContext(context.Background())
}

func (i NamespacedGkeDeploymentTargetArgs) ToNamespacedGkeDeploymentTargetPtrOutputWithContext(ctx context.Context) NamespacedGkeDeploymentTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacedGkeDeploymentTargetOutput).ToNamespacedGkeDeploymentTargetPtrOutputWithContext(ctx)
}

// NamespacedGkeDeploymentTargetPtrInput is an input type that accepts NamespacedGkeDeploymentTargetArgs, NamespacedGkeDeploymentTargetPtr and NamespacedGkeDeploymentTargetPtrOutput values.
// You can construct a concrete instance of `NamespacedGkeDeploymentTargetPtrInput` via:
//
//          NamespacedGkeDeploymentTargetArgs{...}
//
//  or:
//
//          nil
type NamespacedGkeDeploymentTargetPtrInput interface {
	pulumi.Input

	ToNamespacedGkeDeploymentTargetPtrOutput() NamespacedGkeDeploymentTargetPtrOutput
	ToNamespacedGkeDeploymentTargetPtrOutputWithContext(context.Context) NamespacedGkeDeploymentTargetPtrOutput
}

type namespacedGkeDeploymentTargetPtrType NamespacedGkeDeploymentTargetArgs

func NamespacedGkeDeploymentTargetPtr(v *NamespacedGkeDeploymentTargetArgs) NamespacedGkeDeploymentTargetPtrInput {
	return (*namespacedGkeDeploymentTargetPtrType)(v)
}

func (*namespacedGkeDeploymentTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespacedGkeDeploymentTarget)(nil)).Elem()
}

func (i *namespacedGkeDeploymentTargetPtrType) ToNamespacedGkeDeploymentTargetPtrOutput() NamespacedGkeDeploymentTargetPtrOutput {
	return i.ToNamespacedGkeDeploymentTargetPtrOutputWithContext(context.Background())
}

func (i *namespacedGkeDeploymentTargetPtrType) ToNamespacedGkeDeploymentTargetPtrOutputWithContext(ctx context.Context) NamespacedGkeDeploymentTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacedGkeDeploymentTargetPtrOutput)
}

// A full, namespace-isolated deployment target for an existing GKE cluster.
type NamespacedGkeDeploymentTargetOutput struct{ *pulumi.OutputState }

func (NamespacedGkeDeploymentTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacedGkeDeploymentTarget)(nil)).Elem()
}

func (o NamespacedGkeDeploymentTargetOutput) ToNamespacedGkeDeploymentTargetOutput() NamespacedGkeDeploymentTargetOutput {
	return o
}

func (o NamespacedGkeDeploymentTargetOutput) ToNamespacedGkeDeploymentTargetOutputWithContext(ctx context.Context) NamespacedGkeDeploymentTargetOutput {
	return o
}

func (o NamespacedGkeDeploymentTargetOutput) ToNamespacedGkeDeploymentTargetPtrOutput() NamespacedGkeDeploymentTargetPtrOutput {
	return o.ToNamespacedGkeDeploymentTargetPtrOutputWithContext(context.Background())
}

func (o NamespacedGkeDeploymentTargetOutput) ToNamespacedGkeDeploymentTargetPtrOutputWithContext(ctx context.Context) NamespacedGkeDeploymentTargetPtrOutput {
	return o.ApplyT(func(v NamespacedGkeDeploymentTarget) *NamespacedGkeDeploymentTarget {
		return &v
	}).(NamespacedGkeDeploymentTargetPtrOutput)
}

// Optional. A namespace within the GKE cluster to deploy into.
func (o NamespacedGkeDeploymentTargetOutput) ClusterNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespacedGkeDeploymentTarget) *string { return v.ClusterNamespace }).(pulumi.StringPtrOutput)
}

// Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
func (o NamespacedGkeDeploymentTargetOutput) TargetGkeCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespacedGkeDeploymentTarget) *string { return v.TargetGkeCluster }).(pulumi.StringPtrOutput)
}

type NamespacedGkeDeploymentTargetPtrOutput struct{ *pulumi.OutputState }

func (NamespacedGkeDeploymentTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespacedGkeDeploymentTarget)(nil)).Elem()
}

func (o NamespacedGkeDeploymentTargetPtrOutput) ToNamespacedGkeDeploymentTargetPtrOutput() NamespacedGkeDeploymentTargetPtrOutput {
	return o
}

func (o NamespacedGkeDeploymentTargetPtrOutput) ToNamespacedGkeDeploymentTargetPtrOutputWithContext(ctx context.Context) NamespacedGkeDeploymentTargetPtrOutput {
	return o
}

func (o NamespacedGkeDeploymentTargetPtrOutput) Elem() NamespacedGkeDeploymentTargetOutput {
	return o.ApplyT(func(v *NamespacedGkeDeploymentTarget) NamespacedGkeDeploymentTarget { return *v }).(NamespacedGkeDeploymentTargetOutput)
}

// Optional. A namespace within the GKE cluster to deploy into.
func (o NamespacedGkeDeploymentTargetPtrOutput) ClusterNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespacedGkeDeploymentTarget) *string {
		if v == nil {
			return nil
		}
		return v.ClusterNamespace
	}).(pulumi.StringPtrOutput)
}

// Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
func (o NamespacedGkeDeploymentTargetPtrOutput) TargetGkeCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespacedGkeDeploymentTarget) *string {
		if v == nil {
			return nil
		}
		return v.TargetGkeCluster
	}).(pulumi.StringPtrOutput)
}

// A full, namespace-isolated deployment target for an existing GKE cluster.
type NamespacedGkeDeploymentTargetResponse struct {
	// Optional. A namespace within the GKE cluster to deploy into.
	ClusterNamespace string `pulumi:"clusterNamespace"`
	// Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
	TargetGkeCluster string `pulumi:"targetGkeCluster"`
}

// NamespacedGkeDeploymentTargetResponseInput is an input type that accepts NamespacedGkeDeploymentTargetResponseArgs and NamespacedGkeDeploymentTargetResponseOutput values.
// You can construct a concrete instance of `NamespacedGkeDeploymentTargetResponseInput` via:
//
//          NamespacedGkeDeploymentTargetResponseArgs{...}
type NamespacedGkeDeploymentTargetResponseInput interface {
	pulumi.Input

	ToNamespacedGkeDeploymentTargetResponseOutput() NamespacedGkeDeploymentTargetResponseOutput
	ToNamespacedGkeDeploymentTargetResponseOutputWithContext(context.Context) NamespacedGkeDeploymentTargetResponseOutput
}

// A full, namespace-isolated deployment target for an existing GKE cluster.
type NamespacedGkeDeploymentTargetResponseArgs struct {
	// Optional. A namespace within the GKE cluster to deploy into.
	ClusterNamespace pulumi.StringInput `pulumi:"clusterNamespace"`
	// Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
	TargetGkeCluster pulumi.StringInput `pulumi:"targetGkeCluster"`
}

func (NamespacedGkeDeploymentTargetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacedGkeDeploymentTargetResponse)(nil)).Elem()
}

func (i NamespacedGkeDeploymentTargetResponseArgs) ToNamespacedGkeDeploymentTargetResponseOutput() NamespacedGkeDeploymentTargetResponseOutput {
	return i.ToNamespacedGkeDeploymentTargetResponseOutputWithContext(context.Background())
}

func (i NamespacedGkeDeploymentTargetResponseArgs) ToNamespacedGkeDeploymentTargetResponseOutputWithContext(ctx context.Context) NamespacedGkeDeploymentTargetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacedGkeDeploymentTargetResponseOutput)
}

func (i NamespacedGkeDeploymentTargetResponseArgs) ToNamespacedGkeDeploymentTargetResponsePtrOutput() NamespacedGkeDeploymentTargetResponsePtrOutput {
	return i.ToNamespacedGkeDeploymentTargetResponsePtrOutputWithContext(context.Background())
}

func (i NamespacedGkeDeploymentTargetResponseArgs) ToNamespacedGkeDeploymentTargetResponsePtrOutputWithContext(ctx context.Context) NamespacedGkeDeploymentTargetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacedGkeDeploymentTargetResponseOutput).ToNamespacedGkeDeploymentTargetResponsePtrOutputWithContext(ctx)
}

// NamespacedGkeDeploymentTargetResponsePtrInput is an input type that accepts NamespacedGkeDeploymentTargetResponseArgs, NamespacedGkeDeploymentTargetResponsePtr and NamespacedGkeDeploymentTargetResponsePtrOutput values.
// You can construct a concrete instance of `NamespacedGkeDeploymentTargetResponsePtrInput` via:
//
//          NamespacedGkeDeploymentTargetResponseArgs{...}
//
//  or:
//
//          nil
type NamespacedGkeDeploymentTargetResponsePtrInput interface {
	pulumi.Input

	ToNamespacedGkeDeploymentTargetResponsePtrOutput() NamespacedGkeDeploymentTargetResponsePtrOutput
	ToNamespacedGkeDeploymentTargetResponsePtrOutputWithContext(context.Context) NamespacedGkeDeploymentTargetResponsePtrOutput
}

type namespacedGkeDeploymentTargetResponsePtrType NamespacedGkeDeploymentTargetResponseArgs

func NamespacedGkeDeploymentTargetResponsePtr(v *NamespacedGkeDeploymentTargetResponseArgs) NamespacedGkeDeploymentTargetResponsePtrInput {
	return (*namespacedGkeDeploymentTargetResponsePtrType)(v)
}

func (*namespacedGkeDeploymentTargetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespacedGkeDeploymentTargetResponse)(nil)).Elem()
}

func (i *namespacedGkeDeploymentTargetResponsePtrType) ToNamespacedGkeDeploymentTargetResponsePtrOutput() NamespacedGkeDeploymentTargetResponsePtrOutput {
	return i.ToNamespacedGkeDeploymentTargetResponsePtrOutputWithContext(context.Background())
}

func (i *namespacedGkeDeploymentTargetResponsePtrType) ToNamespacedGkeDeploymentTargetResponsePtrOutputWithContext(ctx context.Context) NamespacedGkeDeploymentTargetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacedGkeDeploymentTargetResponsePtrOutput)
}

// A full, namespace-isolated deployment target for an existing GKE cluster.
type NamespacedGkeDeploymentTargetResponseOutput struct{ *pulumi.OutputState }

func (NamespacedGkeDeploymentTargetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacedGkeDeploymentTargetResponse)(nil)).Elem()
}

func (o NamespacedGkeDeploymentTargetResponseOutput) ToNamespacedGkeDeploymentTargetResponseOutput() NamespacedGkeDeploymentTargetResponseOutput {
	return o
}

func (o NamespacedGkeDeploymentTargetResponseOutput) ToNamespacedGkeDeploymentTargetResponseOutputWithContext(ctx context.Context) NamespacedGkeDeploymentTargetResponseOutput {
	return o
}

func (o NamespacedGkeDeploymentTargetResponseOutput) ToNamespacedGkeDeploymentTargetResponsePtrOutput() NamespacedGkeDeploymentTargetResponsePtrOutput {
	return o.ToNamespacedGkeDeploymentTargetResponsePtrOutputWithContext(context.Background())
}

func (o NamespacedGkeDeploymentTargetResponseOutput) ToNamespacedGkeDeploymentTargetResponsePtrOutputWithContext(ctx context.Context) NamespacedGkeDeploymentTargetResponsePtrOutput {
	return o.ApplyT(func(v NamespacedGkeDeploymentTargetResponse) *NamespacedGkeDeploymentTargetResponse {
		return &v
	}).(NamespacedGkeDeploymentTargetResponsePtrOutput)
}

// Optional. A namespace within the GKE cluster to deploy into.
func (o NamespacedGkeDeploymentTargetResponseOutput) ClusterNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v NamespacedGkeDeploymentTargetResponse) string { return v.ClusterNamespace }).(pulumi.StringOutput)
}

// Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
func (o NamespacedGkeDeploymentTargetResponseOutput) TargetGkeCluster() pulumi.StringOutput {
	return o.ApplyT(func(v NamespacedGkeDeploymentTargetResponse) string { return v.TargetGkeCluster }).(pulumi.StringOutput)
}

type NamespacedGkeDeploymentTargetResponsePtrOutput struct{ *pulumi.OutputState }

func (NamespacedGkeDeploymentTargetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespacedGkeDeploymentTargetResponse)(nil)).Elem()
}

func (o NamespacedGkeDeploymentTargetResponsePtrOutput) ToNamespacedGkeDeploymentTargetResponsePtrOutput() NamespacedGkeDeploymentTargetResponsePtrOutput {
	return o
}

func (o NamespacedGkeDeploymentTargetResponsePtrOutput) ToNamespacedGkeDeploymentTargetResponsePtrOutputWithContext(ctx context.Context) NamespacedGkeDeploymentTargetResponsePtrOutput {
	return o
}

func (o NamespacedGkeDeploymentTargetResponsePtrOutput) Elem() NamespacedGkeDeploymentTargetResponseOutput {
	return o.ApplyT(func(v *NamespacedGkeDeploymentTargetResponse) NamespacedGkeDeploymentTargetResponse { return *v }).(NamespacedGkeDeploymentTargetResponseOutput)
}

// Optional. A namespace within the GKE cluster to deploy into.
func (o NamespacedGkeDeploymentTargetResponsePtrOutput) ClusterNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespacedGkeDeploymentTargetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterNamespace
	}).(pulumi.StringPtrOutput)
}

// Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
func (o NamespacedGkeDeploymentTargetResponsePtrOutput) TargetGkeCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespacedGkeDeploymentTargetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetGkeCluster
	}).(pulumi.StringPtrOutput)
}

// Node Group Affinity for clusters using sole-tenant node groups.
type NodeGroupAffinity struct {
	// The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 node-group-1
	NodeGroupUri string `pulumi:"nodeGroupUri"`
}

// NodeGroupAffinityInput is an input type that accepts NodeGroupAffinityArgs and NodeGroupAffinityOutput values.
// You can construct a concrete instance of `NodeGroupAffinityInput` via:
//
//          NodeGroupAffinityArgs{...}
type NodeGroupAffinityInput interface {
	pulumi.Input

	ToNodeGroupAffinityOutput() NodeGroupAffinityOutput
	ToNodeGroupAffinityOutputWithContext(context.Context) NodeGroupAffinityOutput
}

// Node Group Affinity for clusters using sole-tenant node groups.
type NodeGroupAffinityArgs struct {
	// The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 node-group-1
	NodeGroupUri pulumi.StringInput `pulumi:"nodeGroupUri"`
}

func (NodeGroupAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupAffinity)(nil)).Elem()
}

func (i NodeGroupAffinityArgs) ToNodeGroupAffinityOutput() NodeGroupAffinityOutput {
	return i.ToNodeGroupAffinityOutputWithContext(context.Background())
}

func (i NodeGroupAffinityArgs) ToNodeGroupAffinityOutputWithContext(ctx context.Context) NodeGroupAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupAffinityOutput)
}

func (i NodeGroupAffinityArgs) ToNodeGroupAffinityPtrOutput() NodeGroupAffinityPtrOutput {
	return i.ToNodeGroupAffinityPtrOutputWithContext(context.Background())
}

func (i NodeGroupAffinityArgs) ToNodeGroupAffinityPtrOutputWithContext(ctx context.Context) NodeGroupAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupAffinityOutput).ToNodeGroupAffinityPtrOutputWithContext(ctx)
}

// NodeGroupAffinityPtrInput is an input type that accepts NodeGroupAffinityArgs, NodeGroupAffinityPtr and NodeGroupAffinityPtrOutput values.
// You can construct a concrete instance of `NodeGroupAffinityPtrInput` via:
//
//          NodeGroupAffinityArgs{...}
//
//  or:
//
//          nil
type NodeGroupAffinityPtrInput interface {
	pulumi.Input

	ToNodeGroupAffinityPtrOutput() NodeGroupAffinityPtrOutput
	ToNodeGroupAffinityPtrOutputWithContext(context.Context) NodeGroupAffinityPtrOutput
}

type nodeGroupAffinityPtrType NodeGroupAffinityArgs

func NodeGroupAffinityPtr(v *NodeGroupAffinityArgs) NodeGroupAffinityPtrInput {
	return (*nodeGroupAffinityPtrType)(v)
}

func (*nodeGroupAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupAffinity)(nil)).Elem()
}

func (i *nodeGroupAffinityPtrType) ToNodeGroupAffinityPtrOutput() NodeGroupAffinityPtrOutput {
	return i.ToNodeGroupAffinityPtrOutputWithContext(context.Background())
}

func (i *nodeGroupAffinityPtrType) ToNodeGroupAffinityPtrOutputWithContext(ctx context.Context) NodeGroupAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupAffinityPtrOutput)
}

// Node Group Affinity for clusters using sole-tenant node groups.
type NodeGroupAffinityOutput struct{ *pulumi.OutputState }

func (NodeGroupAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupAffinity)(nil)).Elem()
}

func (o NodeGroupAffinityOutput) ToNodeGroupAffinityOutput() NodeGroupAffinityOutput {
	return o
}

func (o NodeGroupAffinityOutput) ToNodeGroupAffinityOutputWithContext(ctx context.Context) NodeGroupAffinityOutput {
	return o
}

func (o NodeGroupAffinityOutput) ToNodeGroupAffinityPtrOutput() NodeGroupAffinityPtrOutput {
	return o.ToNodeGroupAffinityPtrOutputWithContext(context.Background())
}

func (o NodeGroupAffinityOutput) ToNodeGroupAffinityPtrOutputWithContext(ctx context.Context) NodeGroupAffinityPtrOutput {
	return o.ApplyT(func(v NodeGroupAffinity) *NodeGroupAffinity {
		return &v
	}).(NodeGroupAffinityPtrOutput)
}

// The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 node-group-1
func (o NodeGroupAffinityOutput) NodeGroupUri() pulumi.StringOutput {
	return o.ApplyT(func(v NodeGroupAffinity) string { return v.NodeGroupUri }).(pulumi.StringOutput)
}

type NodeGroupAffinityPtrOutput struct{ *pulumi.OutputState }

func (NodeGroupAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupAffinity)(nil)).Elem()
}

func (o NodeGroupAffinityPtrOutput) ToNodeGroupAffinityPtrOutput() NodeGroupAffinityPtrOutput {
	return o
}

func (o NodeGroupAffinityPtrOutput) ToNodeGroupAffinityPtrOutputWithContext(ctx context.Context) NodeGroupAffinityPtrOutput {
	return o
}

func (o NodeGroupAffinityPtrOutput) Elem() NodeGroupAffinityOutput {
	return o.ApplyT(func(v *NodeGroupAffinity) NodeGroupAffinity { return *v }).(NodeGroupAffinityOutput)
}

// The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 node-group-1
func (o NodeGroupAffinityPtrOutput) NodeGroupUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeGroupAffinity) *string {
		if v == nil {
			return nil
		}
		return &v.NodeGroupUri
	}).(pulumi.StringPtrOutput)
}

// Node Group Affinity for clusters using sole-tenant node groups.
type NodeGroupAffinityResponse struct {
	// The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 node-group-1
	NodeGroupUri string `pulumi:"nodeGroupUri"`
}

// NodeGroupAffinityResponseInput is an input type that accepts NodeGroupAffinityResponseArgs and NodeGroupAffinityResponseOutput values.
// You can construct a concrete instance of `NodeGroupAffinityResponseInput` via:
//
//          NodeGroupAffinityResponseArgs{...}
type NodeGroupAffinityResponseInput interface {
	pulumi.Input

	ToNodeGroupAffinityResponseOutput() NodeGroupAffinityResponseOutput
	ToNodeGroupAffinityResponseOutputWithContext(context.Context) NodeGroupAffinityResponseOutput
}

// Node Group Affinity for clusters using sole-tenant node groups.
type NodeGroupAffinityResponseArgs struct {
	// The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 node-group-1
	NodeGroupUri pulumi.StringInput `pulumi:"nodeGroupUri"`
}

func (NodeGroupAffinityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupAffinityResponse)(nil)).Elem()
}

func (i NodeGroupAffinityResponseArgs) ToNodeGroupAffinityResponseOutput() NodeGroupAffinityResponseOutput {
	return i.ToNodeGroupAffinityResponseOutputWithContext(context.Background())
}

func (i NodeGroupAffinityResponseArgs) ToNodeGroupAffinityResponseOutputWithContext(ctx context.Context) NodeGroupAffinityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupAffinityResponseOutput)
}

func (i NodeGroupAffinityResponseArgs) ToNodeGroupAffinityResponsePtrOutput() NodeGroupAffinityResponsePtrOutput {
	return i.ToNodeGroupAffinityResponsePtrOutputWithContext(context.Background())
}

func (i NodeGroupAffinityResponseArgs) ToNodeGroupAffinityResponsePtrOutputWithContext(ctx context.Context) NodeGroupAffinityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupAffinityResponseOutput).ToNodeGroupAffinityResponsePtrOutputWithContext(ctx)
}

// NodeGroupAffinityResponsePtrInput is an input type that accepts NodeGroupAffinityResponseArgs, NodeGroupAffinityResponsePtr and NodeGroupAffinityResponsePtrOutput values.
// You can construct a concrete instance of `NodeGroupAffinityResponsePtrInput` via:
//
//          NodeGroupAffinityResponseArgs{...}
//
//  or:
//
//          nil
type NodeGroupAffinityResponsePtrInput interface {
	pulumi.Input

	ToNodeGroupAffinityResponsePtrOutput() NodeGroupAffinityResponsePtrOutput
	ToNodeGroupAffinityResponsePtrOutputWithContext(context.Context) NodeGroupAffinityResponsePtrOutput
}

type nodeGroupAffinityResponsePtrType NodeGroupAffinityResponseArgs

func NodeGroupAffinityResponsePtr(v *NodeGroupAffinityResponseArgs) NodeGroupAffinityResponsePtrInput {
	return (*nodeGroupAffinityResponsePtrType)(v)
}

func (*nodeGroupAffinityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupAffinityResponse)(nil)).Elem()
}

func (i *nodeGroupAffinityResponsePtrType) ToNodeGroupAffinityResponsePtrOutput() NodeGroupAffinityResponsePtrOutput {
	return i.ToNodeGroupAffinityResponsePtrOutputWithContext(context.Background())
}

func (i *nodeGroupAffinityResponsePtrType) ToNodeGroupAffinityResponsePtrOutputWithContext(ctx context.Context) NodeGroupAffinityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupAffinityResponsePtrOutput)
}

// Node Group Affinity for clusters using sole-tenant node groups.
type NodeGroupAffinityResponseOutput struct{ *pulumi.OutputState }

func (NodeGroupAffinityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupAffinityResponse)(nil)).Elem()
}

func (o NodeGroupAffinityResponseOutput) ToNodeGroupAffinityResponseOutput() NodeGroupAffinityResponseOutput {
	return o
}

func (o NodeGroupAffinityResponseOutput) ToNodeGroupAffinityResponseOutputWithContext(ctx context.Context) NodeGroupAffinityResponseOutput {
	return o
}

func (o NodeGroupAffinityResponseOutput) ToNodeGroupAffinityResponsePtrOutput() NodeGroupAffinityResponsePtrOutput {
	return o.ToNodeGroupAffinityResponsePtrOutputWithContext(context.Background())
}

func (o NodeGroupAffinityResponseOutput) ToNodeGroupAffinityResponsePtrOutputWithContext(ctx context.Context) NodeGroupAffinityResponsePtrOutput {
	return o.ApplyT(func(v NodeGroupAffinityResponse) *NodeGroupAffinityResponse {
		return &v
	}).(NodeGroupAffinityResponsePtrOutput)
}

// The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 node-group-1
func (o NodeGroupAffinityResponseOutput) NodeGroupUri() pulumi.StringOutput {
	return o.ApplyT(func(v NodeGroupAffinityResponse) string { return v.NodeGroupUri }).(pulumi.StringOutput)
}

type NodeGroupAffinityResponsePtrOutput struct{ *pulumi.OutputState }

func (NodeGroupAffinityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupAffinityResponse)(nil)).Elem()
}

func (o NodeGroupAffinityResponsePtrOutput) ToNodeGroupAffinityResponsePtrOutput() NodeGroupAffinityResponsePtrOutput {
	return o
}

func (o NodeGroupAffinityResponsePtrOutput) ToNodeGroupAffinityResponsePtrOutputWithContext(ctx context.Context) NodeGroupAffinityResponsePtrOutput {
	return o
}

func (o NodeGroupAffinityResponsePtrOutput) Elem() NodeGroupAffinityResponseOutput {
	return o.ApplyT(func(v *NodeGroupAffinityResponse) NodeGroupAffinityResponse { return *v }).(NodeGroupAffinityResponseOutput)
}

// The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 node-group-1
func (o NodeGroupAffinityResponsePtrOutput) NodeGroupUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeGroupAffinityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NodeGroupUri
	}).(pulumi.StringPtrOutput)
}

// Specifies an executable to run on a fully configured node and a timeout period for executable completion.
type NodeInitializationAction struct {
	// Cloud Storage URI of executable file.
	ExecutableFile string `pulumi:"executableFile"`
	// Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
	ExecutionTimeout *string `pulumi:"executionTimeout"`
}

// NodeInitializationActionInput is an input type that accepts NodeInitializationActionArgs and NodeInitializationActionOutput values.
// You can construct a concrete instance of `NodeInitializationActionInput` via:
//
//          NodeInitializationActionArgs{...}
type NodeInitializationActionInput interface {
	pulumi.Input

	ToNodeInitializationActionOutput() NodeInitializationActionOutput
	ToNodeInitializationActionOutputWithContext(context.Context) NodeInitializationActionOutput
}

// Specifies an executable to run on a fully configured node and a timeout period for executable completion.
type NodeInitializationActionArgs struct {
	// Cloud Storage URI of executable file.
	ExecutableFile pulumi.StringInput `pulumi:"executableFile"`
	// Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
	ExecutionTimeout pulumi.StringPtrInput `pulumi:"executionTimeout"`
}

func (NodeInitializationActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeInitializationAction)(nil)).Elem()
}

func (i NodeInitializationActionArgs) ToNodeInitializationActionOutput() NodeInitializationActionOutput {
	return i.ToNodeInitializationActionOutputWithContext(context.Background())
}

func (i NodeInitializationActionArgs) ToNodeInitializationActionOutputWithContext(ctx context.Context) NodeInitializationActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeInitializationActionOutput)
}

// NodeInitializationActionArrayInput is an input type that accepts NodeInitializationActionArray and NodeInitializationActionArrayOutput values.
// You can construct a concrete instance of `NodeInitializationActionArrayInput` via:
//
//          NodeInitializationActionArray{ NodeInitializationActionArgs{...} }
type NodeInitializationActionArrayInput interface {
	pulumi.Input

	ToNodeInitializationActionArrayOutput() NodeInitializationActionArrayOutput
	ToNodeInitializationActionArrayOutputWithContext(context.Context) NodeInitializationActionArrayOutput
}

type NodeInitializationActionArray []NodeInitializationActionInput

func (NodeInitializationActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeInitializationAction)(nil)).Elem()
}

func (i NodeInitializationActionArray) ToNodeInitializationActionArrayOutput() NodeInitializationActionArrayOutput {
	return i.ToNodeInitializationActionArrayOutputWithContext(context.Background())
}

func (i NodeInitializationActionArray) ToNodeInitializationActionArrayOutputWithContext(ctx context.Context) NodeInitializationActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeInitializationActionArrayOutput)
}

// Specifies an executable to run on a fully configured node and a timeout period for executable completion.
type NodeInitializationActionOutput struct{ *pulumi.OutputState }

func (NodeInitializationActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeInitializationAction)(nil)).Elem()
}

func (o NodeInitializationActionOutput) ToNodeInitializationActionOutput() NodeInitializationActionOutput {
	return o
}

func (o NodeInitializationActionOutput) ToNodeInitializationActionOutputWithContext(ctx context.Context) NodeInitializationActionOutput {
	return o
}

// Cloud Storage URI of executable file.
func (o NodeInitializationActionOutput) ExecutableFile() pulumi.StringOutput {
	return o.ApplyT(func(v NodeInitializationAction) string { return v.ExecutableFile }).(pulumi.StringOutput)
}

// Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
func (o NodeInitializationActionOutput) ExecutionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeInitializationAction) *string { return v.ExecutionTimeout }).(pulumi.StringPtrOutput)
}

type NodeInitializationActionArrayOutput struct{ *pulumi.OutputState }

func (NodeInitializationActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeInitializationAction)(nil)).Elem()
}

func (o NodeInitializationActionArrayOutput) ToNodeInitializationActionArrayOutput() NodeInitializationActionArrayOutput {
	return o
}

func (o NodeInitializationActionArrayOutput) ToNodeInitializationActionArrayOutputWithContext(ctx context.Context) NodeInitializationActionArrayOutput {
	return o
}

func (o NodeInitializationActionArrayOutput) Index(i pulumi.IntInput) NodeInitializationActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeInitializationAction {
		return vs[0].([]NodeInitializationAction)[vs[1].(int)]
	}).(NodeInitializationActionOutput)
}

// Specifies an executable to run on a fully configured node and a timeout period for executable completion.
type NodeInitializationActionResponse struct {
	// Cloud Storage URI of executable file.
	ExecutableFile string `pulumi:"executableFile"`
	// Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
	ExecutionTimeout string `pulumi:"executionTimeout"`
}

// NodeInitializationActionResponseInput is an input type that accepts NodeInitializationActionResponseArgs and NodeInitializationActionResponseOutput values.
// You can construct a concrete instance of `NodeInitializationActionResponseInput` via:
//
//          NodeInitializationActionResponseArgs{...}
type NodeInitializationActionResponseInput interface {
	pulumi.Input

	ToNodeInitializationActionResponseOutput() NodeInitializationActionResponseOutput
	ToNodeInitializationActionResponseOutputWithContext(context.Context) NodeInitializationActionResponseOutput
}

// Specifies an executable to run on a fully configured node and a timeout period for executable completion.
type NodeInitializationActionResponseArgs struct {
	// Cloud Storage URI of executable file.
	ExecutableFile pulumi.StringInput `pulumi:"executableFile"`
	// Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
	ExecutionTimeout pulumi.StringInput `pulumi:"executionTimeout"`
}

func (NodeInitializationActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeInitializationActionResponse)(nil)).Elem()
}

func (i NodeInitializationActionResponseArgs) ToNodeInitializationActionResponseOutput() NodeInitializationActionResponseOutput {
	return i.ToNodeInitializationActionResponseOutputWithContext(context.Background())
}

func (i NodeInitializationActionResponseArgs) ToNodeInitializationActionResponseOutputWithContext(ctx context.Context) NodeInitializationActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeInitializationActionResponseOutput)
}

// NodeInitializationActionResponseArrayInput is an input type that accepts NodeInitializationActionResponseArray and NodeInitializationActionResponseArrayOutput values.
// You can construct a concrete instance of `NodeInitializationActionResponseArrayInput` via:
//
//          NodeInitializationActionResponseArray{ NodeInitializationActionResponseArgs{...} }
type NodeInitializationActionResponseArrayInput interface {
	pulumi.Input

	ToNodeInitializationActionResponseArrayOutput() NodeInitializationActionResponseArrayOutput
	ToNodeInitializationActionResponseArrayOutputWithContext(context.Context) NodeInitializationActionResponseArrayOutput
}

type NodeInitializationActionResponseArray []NodeInitializationActionResponseInput

func (NodeInitializationActionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeInitializationActionResponse)(nil)).Elem()
}

func (i NodeInitializationActionResponseArray) ToNodeInitializationActionResponseArrayOutput() NodeInitializationActionResponseArrayOutput {
	return i.ToNodeInitializationActionResponseArrayOutputWithContext(context.Background())
}

func (i NodeInitializationActionResponseArray) ToNodeInitializationActionResponseArrayOutputWithContext(ctx context.Context) NodeInitializationActionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeInitializationActionResponseArrayOutput)
}

// Specifies an executable to run on a fully configured node and a timeout period for executable completion.
type NodeInitializationActionResponseOutput struct{ *pulumi.OutputState }

func (NodeInitializationActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeInitializationActionResponse)(nil)).Elem()
}

func (o NodeInitializationActionResponseOutput) ToNodeInitializationActionResponseOutput() NodeInitializationActionResponseOutput {
	return o
}

func (o NodeInitializationActionResponseOutput) ToNodeInitializationActionResponseOutputWithContext(ctx context.Context) NodeInitializationActionResponseOutput {
	return o
}

// Cloud Storage URI of executable file.
func (o NodeInitializationActionResponseOutput) ExecutableFile() pulumi.StringOutput {
	return o.ApplyT(func(v NodeInitializationActionResponse) string { return v.ExecutableFile }).(pulumi.StringOutput)
}

// Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
func (o NodeInitializationActionResponseOutput) ExecutionTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v NodeInitializationActionResponse) string { return v.ExecutionTimeout }).(pulumi.StringOutput)
}

type NodeInitializationActionResponseArrayOutput struct{ *pulumi.OutputState }

func (NodeInitializationActionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeInitializationActionResponse)(nil)).Elem()
}

func (o NodeInitializationActionResponseArrayOutput) ToNodeInitializationActionResponseArrayOutput() NodeInitializationActionResponseArrayOutput {
	return o
}

func (o NodeInitializationActionResponseArrayOutput) ToNodeInitializationActionResponseArrayOutputWithContext(ctx context.Context) NodeInitializationActionResponseArrayOutput {
	return o
}

func (o NodeInitializationActionResponseArrayOutput) Index(i pulumi.IntInput) NodeInitializationActionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeInitializationActionResponse {
		return vs[0].([]NodeInitializationActionResponse)[vs[1].(int)]
	}).(NodeInitializationActionResponseOutput)
}

// A job executed by the workflow.
type OrderedJob struct {
	// Optional. Job is a Hadoop job.
	HadoopJob *HadoopJob `pulumi:"hadoopJob"`
	// Optional. Job is a Hive job.
	HiveJob *HiveJob `pulumi:"hiveJob"`
	// Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given job.
	Labels map[string]string `pulumi:"labels"`
	// Optional. Job is a Pig job.
	PigJob *PigJob `pulumi:"pigJob"`
	// Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
	PrerequisiteStepIds []string `pulumi:"prerequisiteStepIds"`
	// Optional. Job is a Presto job.
	PrestoJob *PrestoJob `pulumi:"prestoJob"`
	// Optional. Job is a PySpark job.
	PysparkJob *PySparkJob `pulumi:"pysparkJob"`
	// Optional. Job scheduling configuration.
	Scheduling *JobScheduling `pulumi:"scheduling"`
	// Optional. Job is a Spark job.
	SparkJob *SparkJob `pulumi:"sparkJob"`
	// Optional. Job is a SparkR job.
	SparkRJob *SparkRJob `pulumi:"sparkRJob"`
	// Optional. Job is a SparkSql job.
	SparkSqlJob *SparkSqlJob `pulumi:"sparkSqlJob"`
	// The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
	StepId string `pulumi:"stepId"`
}

// OrderedJobInput is an input type that accepts OrderedJobArgs and OrderedJobOutput values.
// You can construct a concrete instance of `OrderedJobInput` via:
//
//          OrderedJobArgs{...}
type OrderedJobInput interface {
	pulumi.Input

	ToOrderedJobOutput() OrderedJobOutput
	ToOrderedJobOutputWithContext(context.Context) OrderedJobOutput
}

// A job executed by the workflow.
type OrderedJobArgs struct {
	// Optional. Job is a Hadoop job.
	HadoopJob HadoopJobPtrInput `pulumi:"hadoopJob"`
	// Optional. Job is a Hive job.
	HiveJob HiveJobPtrInput `pulumi:"hiveJob"`
	// Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given job.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Optional. Job is a Pig job.
	PigJob PigJobPtrInput `pulumi:"pigJob"`
	// Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
	PrerequisiteStepIds pulumi.StringArrayInput `pulumi:"prerequisiteStepIds"`
	// Optional. Job is a Presto job.
	PrestoJob PrestoJobPtrInput `pulumi:"prestoJob"`
	// Optional. Job is a PySpark job.
	PysparkJob PySparkJobPtrInput `pulumi:"pysparkJob"`
	// Optional. Job scheduling configuration.
	Scheduling JobSchedulingPtrInput `pulumi:"scheduling"`
	// Optional. Job is a Spark job.
	SparkJob SparkJobPtrInput `pulumi:"sparkJob"`
	// Optional. Job is a SparkR job.
	SparkRJob SparkRJobPtrInput `pulumi:"sparkRJob"`
	// Optional. Job is a SparkSql job.
	SparkSqlJob SparkSqlJobPtrInput `pulumi:"sparkSqlJob"`
	// The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
	StepId pulumi.StringInput `pulumi:"stepId"`
}

func (OrderedJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderedJob)(nil)).Elem()
}

func (i OrderedJobArgs) ToOrderedJobOutput() OrderedJobOutput {
	return i.ToOrderedJobOutputWithContext(context.Background())
}

func (i OrderedJobArgs) ToOrderedJobOutputWithContext(ctx context.Context) OrderedJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderedJobOutput)
}

// OrderedJobArrayInput is an input type that accepts OrderedJobArray and OrderedJobArrayOutput values.
// You can construct a concrete instance of `OrderedJobArrayInput` via:
//
//          OrderedJobArray{ OrderedJobArgs{...} }
type OrderedJobArrayInput interface {
	pulumi.Input

	ToOrderedJobArrayOutput() OrderedJobArrayOutput
	ToOrderedJobArrayOutputWithContext(context.Context) OrderedJobArrayOutput
}

type OrderedJobArray []OrderedJobInput

func (OrderedJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderedJob)(nil)).Elem()
}

func (i OrderedJobArray) ToOrderedJobArrayOutput() OrderedJobArrayOutput {
	return i.ToOrderedJobArrayOutputWithContext(context.Background())
}

func (i OrderedJobArray) ToOrderedJobArrayOutputWithContext(ctx context.Context) OrderedJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderedJobArrayOutput)
}

// A job executed by the workflow.
type OrderedJobOutput struct{ *pulumi.OutputState }

func (OrderedJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderedJob)(nil)).Elem()
}

func (o OrderedJobOutput) ToOrderedJobOutput() OrderedJobOutput {
	return o
}

func (o OrderedJobOutput) ToOrderedJobOutputWithContext(ctx context.Context) OrderedJobOutput {
	return o
}

// Optional. Job is a Hadoop job.
func (o OrderedJobOutput) HadoopJob() HadoopJobPtrOutput {
	return o.ApplyT(func(v OrderedJob) *HadoopJob { return v.HadoopJob }).(HadoopJobPtrOutput)
}

// Optional. Job is a Hive job.
func (o OrderedJobOutput) HiveJob() HiveJobPtrOutput {
	return o.ApplyT(func(v OrderedJob) *HiveJob { return v.HiveJob }).(HiveJobPtrOutput)
}

// Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given job.
func (o OrderedJobOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrderedJob) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Optional. Job is a Pig job.
func (o OrderedJobOutput) PigJob() PigJobPtrOutput {
	return o.ApplyT(func(v OrderedJob) *PigJob { return v.PigJob }).(PigJobPtrOutput)
}

// Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
func (o OrderedJobOutput) PrerequisiteStepIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrderedJob) []string { return v.PrerequisiteStepIds }).(pulumi.StringArrayOutput)
}

// Optional. Job is a Presto job.
func (o OrderedJobOutput) PrestoJob() PrestoJobPtrOutput {
	return o.ApplyT(func(v OrderedJob) *PrestoJob { return v.PrestoJob }).(PrestoJobPtrOutput)
}

// Optional. Job is a PySpark job.
func (o OrderedJobOutput) PysparkJob() PySparkJobPtrOutput {
	return o.ApplyT(func(v OrderedJob) *PySparkJob { return v.PysparkJob }).(PySparkJobPtrOutput)
}

// Optional. Job scheduling configuration.
func (o OrderedJobOutput) Scheduling() JobSchedulingPtrOutput {
	return o.ApplyT(func(v OrderedJob) *JobScheduling { return v.Scheduling }).(JobSchedulingPtrOutput)
}

// Optional. Job is a Spark job.
func (o OrderedJobOutput) SparkJob() SparkJobPtrOutput {
	return o.ApplyT(func(v OrderedJob) *SparkJob { return v.SparkJob }).(SparkJobPtrOutput)
}

// Optional. Job is a SparkR job.
func (o OrderedJobOutput) SparkRJob() SparkRJobPtrOutput {
	return o.ApplyT(func(v OrderedJob) *SparkRJob { return v.SparkRJob }).(SparkRJobPtrOutput)
}

// Optional. Job is a SparkSql job.
func (o OrderedJobOutput) SparkSqlJob() SparkSqlJobPtrOutput {
	return o.ApplyT(func(v OrderedJob) *SparkSqlJob { return v.SparkSqlJob }).(SparkSqlJobPtrOutput)
}

// The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
func (o OrderedJobOutput) StepId() pulumi.StringOutput {
	return o.ApplyT(func(v OrderedJob) string { return v.StepId }).(pulumi.StringOutput)
}

type OrderedJobArrayOutput struct{ *pulumi.OutputState }

func (OrderedJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderedJob)(nil)).Elem()
}

func (o OrderedJobArrayOutput) ToOrderedJobArrayOutput() OrderedJobArrayOutput {
	return o
}

func (o OrderedJobArrayOutput) ToOrderedJobArrayOutputWithContext(ctx context.Context) OrderedJobArrayOutput {
	return o
}

func (o OrderedJobArrayOutput) Index(i pulumi.IntInput) OrderedJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrderedJob {
		return vs[0].([]OrderedJob)[vs[1].(int)]
	}).(OrderedJobOutput)
}

// A job executed by the workflow.
type OrderedJobResponse struct {
	// Optional. Job is a Hadoop job.
	HadoopJob HadoopJobResponse `pulumi:"hadoopJob"`
	// Optional. Job is a Hive job.
	HiveJob HiveJobResponse `pulumi:"hiveJob"`
	// Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given job.
	Labels map[string]string `pulumi:"labels"`
	// Optional. Job is a Pig job.
	PigJob PigJobResponse `pulumi:"pigJob"`
	// Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
	PrerequisiteStepIds []string `pulumi:"prerequisiteStepIds"`
	// Optional. Job is a Presto job.
	PrestoJob PrestoJobResponse `pulumi:"prestoJob"`
	// Optional. Job is a PySpark job.
	PysparkJob PySparkJobResponse `pulumi:"pysparkJob"`
	// Optional. Job scheduling configuration.
	Scheduling JobSchedulingResponse `pulumi:"scheduling"`
	// Optional. Job is a Spark job.
	SparkJob SparkJobResponse `pulumi:"sparkJob"`
	// Optional. Job is a SparkR job.
	SparkRJob SparkRJobResponse `pulumi:"sparkRJob"`
	// Optional. Job is a SparkSql job.
	SparkSqlJob SparkSqlJobResponse `pulumi:"sparkSqlJob"`
	// The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
	StepId string `pulumi:"stepId"`
}

// OrderedJobResponseInput is an input type that accepts OrderedJobResponseArgs and OrderedJobResponseOutput values.
// You can construct a concrete instance of `OrderedJobResponseInput` via:
//
//          OrderedJobResponseArgs{...}
type OrderedJobResponseInput interface {
	pulumi.Input

	ToOrderedJobResponseOutput() OrderedJobResponseOutput
	ToOrderedJobResponseOutputWithContext(context.Context) OrderedJobResponseOutput
}

// A job executed by the workflow.
type OrderedJobResponseArgs struct {
	// Optional. Job is a Hadoop job.
	HadoopJob HadoopJobResponseInput `pulumi:"hadoopJob"`
	// Optional. Job is a Hive job.
	HiveJob HiveJobResponseInput `pulumi:"hiveJob"`
	// Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given job.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Optional. Job is a Pig job.
	PigJob PigJobResponseInput `pulumi:"pigJob"`
	// Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
	PrerequisiteStepIds pulumi.StringArrayInput `pulumi:"prerequisiteStepIds"`
	// Optional. Job is a Presto job.
	PrestoJob PrestoJobResponseInput `pulumi:"prestoJob"`
	// Optional. Job is a PySpark job.
	PysparkJob PySparkJobResponseInput `pulumi:"pysparkJob"`
	// Optional. Job scheduling configuration.
	Scheduling JobSchedulingResponseInput `pulumi:"scheduling"`
	// Optional. Job is a Spark job.
	SparkJob SparkJobResponseInput `pulumi:"sparkJob"`
	// Optional. Job is a SparkR job.
	SparkRJob SparkRJobResponseInput `pulumi:"sparkRJob"`
	// Optional. Job is a SparkSql job.
	SparkSqlJob SparkSqlJobResponseInput `pulumi:"sparkSqlJob"`
	// The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
	StepId pulumi.StringInput `pulumi:"stepId"`
}

func (OrderedJobResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderedJobResponse)(nil)).Elem()
}

func (i OrderedJobResponseArgs) ToOrderedJobResponseOutput() OrderedJobResponseOutput {
	return i.ToOrderedJobResponseOutputWithContext(context.Background())
}

func (i OrderedJobResponseArgs) ToOrderedJobResponseOutputWithContext(ctx context.Context) OrderedJobResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderedJobResponseOutput)
}

// OrderedJobResponseArrayInput is an input type that accepts OrderedJobResponseArray and OrderedJobResponseArrayOutput values.
// You can construct a concrete instance of `OrderedJobResponseArrayInput` via:
//
//          OrderedJobResponseArray{ OrderedJobResponseArgs{...} }
type OrderedJobResponseArrayInput interface {
	pulumi.Input

	ToOrderedJobResponseArrayOutput() OrderedJobResponseArrayOutput
	ToOrderedJobResponseArrayOutputWithContext(context.Context) OrderedJobResponseArrayOutput
}

type OrderedJobResponseArray []OrderedJobResponseInput

func (OrderedJobResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderedJobResponse)(nil)).Elem()
}

func (i OrderedJobResponseArray) ToOrderedJobResponseArrayOutput() OrderedJobResponseArrayOutput {
	return i.ToOrderedJobResponseArrayOutputWithContext(context.Background())
}

func (i OrderedJobResponseArray) ToOrderedJobResponseArrayOutputWithContext(ctx context.Context) OrderedJobResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderedJobResponseArrayOutput)
}

// A job executed by the workflow.
type OrderedJobResponseOutput struct{ *pulumi.OutputState }

func (OrderedJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderedJobResponse)(nil)).Elem()
}

func (o OrderedJobResponseOutput) ToOrderedJobResponseOutput() OrderedJobResponseOutput {
	return o
}

func (o OrderedJobResponseOutput) ToOrderedJobResponseOutputWithContext(ctx context.Context) OrderedJobResponseOutput {
	return o
}

// Optional. Job is a Hadoop job.
func (o OrderedJobResponseOutput) HadoopJob() HadoopJobResponseOutput {
	return o.ApplyT(func(v OrderedJobResponse) HadoopJobResponse { return v.HadoopJob }).(HadoopJobResponseOutput)
}

// Optional. Job is a Hive job.
func (o OrderedJobResponseOutput) HiveJob() HiveJobResponseOutput {
	return o.ApplyT(func(v OrderedJobResponse) HiveJobResponse { return v.HiveJob }).(HiveJobResponseOutput)
}

// Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given job.
func (o OrderedJobResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrderedJobResponse) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Optional. Job is a Pig job.
func (o OrderedJobResponseOutput) PigJob() PigJobResponseOutput {
	return o.ApplyT(func(v OrderedJobResponse) PigJobResponse { return v.PigJob }).(PigJobResponseOutput)
}

// Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
func (o OrderedJobResponseOutput) PrerequisiteStepIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrderedJobResponse) []string { return v.PrerequisiteStepIds }).(pulumi.StringArrayOutput)
}

// Optional. Job is a Presto job.
func (o OrderedJobResponseOutput) PrestoJob() PrestoJobResponseOutput {
	return o.ApplyT(func(v OrderedJobResponse) PrestoJobResponse { return v.PrestoJob }).(PrestoJobResponseOutput)
}

// Optional. Job is a PySpark job.
func (o OrderedJobResponseOutput) PysparkJob() PySparkJobResponseOutput {
	return o.ApplyT(func(v OrderedJobResponse) PySparkJobResponse { return v.PysparkJob }).(PySparkJobResponseOutput)
}

// Optional. Job scheduling configuration.
func (o OrderedJobResponseOutput) Scheduling() JobSchedulingResponseOutput {
	return o.ApplyT(func(v OrderedJobResponse) JobSchedulingResponse { return v.Scheduling }).(JobSchedulingResponseOutput)
}

// Optional. Job is a Spark job.
func (o OrderedJobResponseOutput) SparkJob() SparkJobResponseOutput {
	return o.ApplyT(func(v OrderedJobResponse) SparkJobResponse { return v.SparkJob }).(SparkJobResponseOutput)
}

// Optional. Job is a SparkR job.
func (o OrderedJobResponseOutput) SparkRJob() SparkRJobResponseOutput {
	return o.ApplyT(func(v OrderedJobResponse) SparkRJobResponse { return v.SparkRJob }).(SparkRJobResponseOutput)
}

// Optional. Job is a SparkSql job.
func (o OrderedJobResponseOutput) SparkSqlJob() SparkSqlJobResponseOutput {
	return o.ApplyT(func(v OrderedJobResponse) SparkSqlJobResponse { return v.SparkSqlJob }).(SparkSqlJobResponseOutput)
}

// The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
func (o OrderedJobResponseOutput) StepId() pulumi.StringOutput {
	return o.ApplyT(func(v OrderedJobResponse) string { return v.StepId }).(pulumi.StringOutput)
}

type OrderedJobResponseArrayOutput struct{ *pulumi.OutputState }

func (OrderedJobResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderedJobResponse)(nil)).Elem()
}

func (o OrderedJobResponseArrayOutput) ToOrderedJobResponseArrayOutput() OrderedJobResponseArrayOutput {
	return o
}

func (o OrderedJobResponseArrayOutput) ToOrderedJobResponseArrayOutputWithContext(ctx context.Context) OrderedJobResponseArrayOutput {
	return o
}

func (o OrderedJobResponseArrayOutput) Index(i pulumi.IntInput) OrderedJobResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrderedJobResponse {
		return vs[0].([]OrderedJobResponse)[vs[1].(int)]
	}).(OrderedJobResponseOutput)
}

// Configuration for parameter validation.
type ParameterValidation struct {
	// Validation based on regular expressions.
	Regex *RegexValidation `pulumi:"regex"`
	// Validation based on a list of allowed values.
	Values *ValueValidation `pulumi:"values"`
}

// ParameterValidationInput is an input type that accepts ParameterValidationArgs and ParameterValidationOutput values.
// You can construct a concrete instance of `ParameterValidationInput` via:
//
//          ParameterValidationArgs{...}
type ParameterValidationInput interface {
	pulumi.Input

	ToParameterValidationOutput() ParameterValidationOutput
	ToParameterValidationOutputWithContext(context.Context) ParameterValidationOutput
}

// Configuration for parameter validation.
type ParameterValidationArgs struct {
	// Validation based on regular expressions.
	Regex RegexValidationPtrInput `pulumi:"regex"`
	// Validation based on a list of allowed values.
	Values ValueValidationPtrInput `pulumi:"values"`
}

func (ParameterValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterValidation)(nil)).Elem()
}

func (i ParameterValidationArgs) ToParameterValidationOutput() ParameterValidationOutput {
	return i.ToParameterValidationOutputWithContext(context.Background())
}

func (i ParameterValidationArgs) ToParameterValidationOutputWithContext(ctx context.Context) ParameterValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterValidationOutput)
}

func (i ParameterValidationArgs) ToParameterValidationPtrOutput() ParameterValidationPtrOutput {
	return i.ToParameterValidationPtrOutputWithContext(context.Background())
}

func (i ParameterValidationArgs) ToParameterValidationPtrOutputWithContext(ctx context.Context) ParameterValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterValidationOutput).ToParameterValidationPtrOutputWithContext(ctx)
}

// ParameterValidationPtrInput is an input type that accepts ParameterValidationArgs, ParameterValidationPtr and ParameterValidationPtrOutput values.
// You can construct a concrete instance of `ParameterValidationPtrInput` via:
//
//          ParameterValidationArgs{...}
//
//  or:
//
//          nil
type ParameterValidationPtrInput interface {
	pulumi.Input

	ToParameterValidationPtrOutput() ParameterValidationPtrOutput
	ToParameterValidationPtrOutputWithContext(context.Context) ParameterValidationPtrOutput
}

type parameterValidationPtrType ParameterValidationArgs

func ParameterValidationPtr(v *ParameterValidationArgs) ParameterValidationPtrInput {
	return (*parameterValidationPtrType)(v)
}

func (*parameterValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterValidation)(nil)).Elem()
}

func (i *parameterValidationPtrType) ToParameterValidationPtrOutput() ParameterValidationPtrOutput {
	return i.ToParameterValidationPtrOutputWithContext(context.Background())
}

func (i *parameterValidationPtrType) ToParameterValidationPtrOutputWithContext(ctx context.Context) ParameterValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterValidationPtrOutput)
}

// Configuration for parameter validation.
type ParameterValidationOutput struct{ *pulumi.OutputState }

func (ParameterValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterValidation)(nil)).Elem()
}

func (o ParameterValidationOutput) ToParameterValidationOutput() ParameterValidationOutput {
	return o
}

func (o ParameterValidationOutput) ToParameterValidationOutputWithContext(ctx context.Context) ParameterValidationOutput {
	return o
}

func (o ParameterValidationOutput) ToParameterValidationPtrOutput() ParameterValidationPtrOutput {
	return o.ToParameterValidationPtrOutputWithContext(context.Background())
}

func (o ParameterValidationOutput) ToParameterValidationPtrOutputWithContext(ctx context.Context) ParameterValidationPtrOutput {
	return o.ApplyT(func(v ParameterValidation) *ParameterValidation {
		return &v
	}).(ParameterValidationPtrOutput)
}

// Validation based on regular expressions.
func (o ParameterValidationOutput) Regex() RegexValidationPtrOutput {
	return o.ApplyT(func(v ParameterValidation) *RegexValidation { return v.Regex }).(RegexValidationPtrOutput)
}

// Validation based on a list of allowed values.
func (o ParameterValidationOutput) Values() ValueValidationPtrOutput {
	return o.ApplyT(func(v ParameterValidation) *ValueValidation { return v.Values }).(ValueValidationPtrOutput)
}

type ParameterValidationPtrOutput struct{ *pulumi.OutputState }

func (ParameterValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterValidation)(nil)).Elem()
}

func (o ParameterValidationPtrOutput) ToParameterValidationPtrOutput() ParameterValidationPtrOutput {
	return o
}

func (o ParameterValidationPtrOutput) ToParameterValidationPtrOutputWithContext(ctx context.Context) ParameterValidationPtrOutput {
	return o
}

func (o ParameterValidationPtrOutput) Elem() ParameterValidationOutput {
	return o.ApplyT(func(v *ParameterValidation) ParameterValidation { return *v }).(ParameterValidationOutput)
}

// Validation based on regular expressions.
func (o ParameterValidationPtrOutput) Regex() RegexValidationPtrOutput {
	return o.ApplyT(func(v *ParameterValidation) *RegexValidation {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(RegexValidationPtrOutput)
}

// Validation based on a list of allowed values.
func (o ParameterValidationPtrOutput) Values() ValueValidationPtrOutput {
	return o.ApplyT(func(v *ParameterValidation) *ValueValidation {
		if v == nil {
			return nil
		}
		return v.Values
	}).(ValueValidationPtrOutput)
}

// Configuration for parameter validation.
type ParameterValidationResponse struct {
	// Validation based on regular expressions.
	Regex RegexValidationResponse `pulumi:"regex"`
	// Validation based on a list of allowed values.
	Values ValueValidationResponse `pulumi:"values"`
}

// ParameterValidationResponseInput is an input type that accepts ParameterValidationResponseArgs and ParameterValidationResponseOutput values.
// You can construct a concrete instance of `ParameterValidationResponseInput` via:
//
//          ParameterValidationResponseArgs{...}
type ParameterValidationResponseInput interface {
	pulumi.Input

	ToParameterValidationResponseOutput() ParameterValidationResponseOutput
	ToParameterValidationResponseOutputWithContext(context.Context) ParameterValidationResponseOutput
}

// Configuration for parameter validation.
type ParameterValidationResponseArgs struct {
	// Validation based on regular expressions.
	Regex RegexValidationResponseInput `pulumi:"regex"`
	// Validation based on a list of allowed values.
	Values ValueValidationResponseInput `pulumi:"values"`
}

func (ParameterValidationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterValidationResponse)(nil)).Elem()
}

func (i ParameterValidationResponseArgs) ToParameterValidationResponseOutput() ParameterValidationResponseOutput {
	return i.ToParameterValidationResponseOutputWithContext(context.Background())
}

func (i ParameterValidationResponseArgs) ToParameterValidationResponseOutputWithContext(ctx context.Context) ParameterValidationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterValidationResponseOutput)
}

// Configuration for parameter validation.
type ParameterValidationResponseOutput struct{ *pulumi.OutputState }

func (ParameterValidationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterValidationResponse)(nil)).Elem()
}

func (o ParameterValidationResponseOutput) ToParameterValidationResponseOutput() ParameterValidationResponseOutput {
	return o
}

func (o ParameterValidationResponseOutput) ToParameterValidationResponseOutputWithContext(ctx context.Context) ParameterValidationResponseOutput {
	return o
}

// Validation based on regular expressions.
func (o ParameterValidationResponseOutput) Regex() RegexValidationResponseOutput {
	return o.ApplyT(func(v ParameterValidationResponse) RegexValidationResponse { return v.Regex }).(RegexValidationResponseOutput)
}

// Validation based on a list of allowed values.
func (o ParameterValidationResponseOutput) Values() ValueValidationResponseOutput {
	return o.ApplyT(func(v ParameterValidationResponse) ValueValidationResponse { return v.Values }).(ValueValidationResponseOutput)
}

// A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
type PigJob struct {
	// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
	ContinueOnFailure *bool `pulumi:"continueOnFailure"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
	JarFileUris []string `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig *LoggingConfig `pulumi:"loggingConfig"`
	// Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains the Pig queries.
	QueryFileUri *string `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList *QueryList `pulumi:"queryList"`
	// Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

// PigJobInput is an input type that accepts PigJobArgs and PigJobOutput values.
// You can construct a concrete instance of `PigJobInput` via:
//
//          PigJobArgs{...}
type PigJobInput interface {
	pulumi.Input

	ToPigJobOutput() PigJobOutput
	ToPigJobOutputWithContext(context.Context) PigJobOutput
}

// A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
type PigJobArgs struct {
	// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
	ContinueOnFailure pulumi.BoolPtrInput `pulumi:"continueOnFailure"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigPtrInput `pulumi:"loggingConfig"`
	// Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains the Pig queries.
	QueryFileUri pulumi.StringPtrInput `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList QueryListPtrInput `pulumi:"queryList"`
	// Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (PigJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PigJob)(nil)).Elem()
}

func (i PigJobArgs) ToPigJobOutput() PigJobOutput {
	return i.ToPigJobOutputWithContext(context.Background())
}

func (i PigJobArgs) ToPigJobOutputWithContext(ctx context.Context) PigJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PigJobOutput)
}

func (i PigJobArgs) ToPigJobPtrOutput() PigJobPtrOutput {
	return i.ToPigJobPtrOutputWithContext(context.Background())
}

func (i PigJobArgs) ToPigJobPtrOutputWithContext(ctx context.Context) PigJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PigJobOutput).ToPigJobPtrOutputWithContext(ctx)
}

// PigJobPtrInput is an input type that accepts PigJobArgs, PigJobPtr and PigJobPtrOutput values.
// You can construct a concrete instance of `PigJobPtrInput` via:
//
//          PigJobArgs{...}
//
//  or:
//
//          nil
type PigJobPtrInput interface {
	pulumi.Input

	ToPigJobPtrOutput() PigJobPtrOutput
	ToPigJobPtrOutputWithContext(context.Context) PigJobPtrOutput
}

type pigJobPtrType PigJobArgs

func PigJobPtr(v *PigJobArgs) PigJobPtrInput {
	return (*pigJobPtrType)(v)
}

func (*pigJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PigJob)(nil)).Elem()
}

func (i *pigJobPtrType) ToPigJobPtrOutput() PigJobPtrOutput {
	return i.ToPigJobPtrOutputWithContext(context.Background())
}

func (i *pigJobPtrType) ToPigJobPtrOutputWithContext(ctx context.Context) PigJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PigJobPtrOutput)
}

// A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
type PigJobOutput struct{ *pulumi.OutputState }

func (PigJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PigJob)(nil)).Elem()
}

func (o PigJobOutput) ToPigJobOutput() PigJobOutput {
	return o
}

func (o PigJobOutput) ToPigJobOutputWithContext(ctx context.Context) PigJobOutput {
	return o
}

func (o PigJobOutput) ToPigJobPtrOutput() PigJobPtrOutput {
	return o.ToPigJobPtrOutputWithContext(context.Background())
}

func (o PigJobOutput) ToPigJobPtrOutputWithContext(ctx context.Context) PigJobPtrOutput {
	return o.ApplyT(func(v PigJob) *PigJob {
		return &v
	}).(PigJobPtrOutput)
}

// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
func (o PigJobOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PigJob) *bool { return v.ContinueOnFailure }).(pulumi.BoolPtrOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
func (o PigJobOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PigJob) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o PigJobOutput) LoggingConfig() LoggingConfigPtrOutput {
	return o.ApplyT(func(v PigJob) *LoggingConfig { return v.LoggingConfig }).(LoggingConfigPtrOutput)
}

// Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
func (o PigJobOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v PigJob) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains the Pig queries.
func (o PigJobOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PigJob) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

// A list of queries.
func (o PigJobOutput) QueryList() QueryListPtrOutput {
	return o.ApplyT(func(v PigJob) *QueryList { return v.QueryList }).(QueryListPtrOutput)
}

// Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
func (o PigJobOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v PigJob) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type PigJobPtrOutput struct{ *pulumi.OutputState }

func (PigJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PigJob)(nil)).Elem()
}

func (o PigJobPtrOutput) ToPigJobPtrOutput() PigJobPtrOutput {
	return o
}

func (o PigJobPtrOutput) ToPigJobPtrOutputWithContext(ctx context.Context) PigJobPtrOutput {
	return o
}

func (o PigJobPtrOutput) Elem() PigJobOutput {
	return o.ApplyT(func(v *PigJob) PigJob { return *v }).(PigJobOutput)
}

// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
func (o PigJobPtrOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PigJob) *bool {
		if v == nil {
			return nil
		}
		return v.ContinueOnFailure
	}).(pulumi.BoolPtrOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
func (o PigJobPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PigJob) []string {
		if v == nil {
			return nil
		}
		return v.JarFileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o PigJobPtrOutput) LoggingConfig() LoggingConfigPtrOutput {
	return o.ApplyT(func(v *PigJob) *LoggingConfig {
		if v == nil {
			return nil
		}
		return v.LoggingConfig
	}).(LoggingConfigPtrOutput)
}

// Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
func (o PigJobPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PigJob) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains the Pig queries.
func (o PigJobPtrOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PigJob) *string {
		if v == nil {
			return nil
		}
		return v.QueryFileUri
	}).(pulumi.StringPtrOutput)
}

// A list of queries.
func (o PigJobPtrOutput) QueryList() QueryListPtrOutput {
	return o.ApplyT(func(v *PigJob) *QueryList {
		if v == nil {
			return nil
		}
		return v.QueryList
	}).(QueryListPtrOutput)
}

// Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
func (o PigJobPtrOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PigJob) map[string]string {
		if v == nil {
			return nil
		}
		return v.ScriptVariables
	}).(pulumi.StringMapOutput)
}

// A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
type PigJobResponse struct {
	// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
	ContinueOnFailure bool `pulumi:"continueOnFailure"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
	JarFileUris []string `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigResponse `pulumi:"loggingConfig"`
	// Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains the Pig queries.
	QueryFileUri string `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList QueryListResponse `pulumi:"queryList"`
	// Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

// PigJobResponseInput is an input type that accepts PigJobResponseArgs and PigJobResponseOutput values.
// You can construct a concrete instance of `PigJobResponseInput` via:
//
//          PigJobResponseArgs{...}
type PigJobResponseInput interface {
	pulumi.Input

	ToPigJobResponseOutput() PigJobResponseOutput
	ToPigJobResponseOutputWithContext(context.Context) PigJobResponseOutput
}

// A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
type PigJobResponseArgs struct {
	// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
	ContinueOnFailure pulumi.BoolInput `pulumi:"continueOnFailure"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigResponseInput `pulumi:"loggingConfig"`
	// Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains the Pig queries.
	QueryFileUri pulumi.StringInput `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList QueryListResponseInput `pulumi:"queryList"`
	// Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (PigJobResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PigJobResponse)(nil)).Elem()
}

func (i PigJobResponseArgs) ToPigJobResponseOutput() PigJobResponseOutput {
	return i.ToPigJobResponseOutputWithContext(context.Background())
}

func (i PigJobResponseArgs) ToPigJobResponseOutputWithContext(ctx context.Context) PigJobResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PigJobResponseOutput)
}

func (i PigJobResponseArgs) ToPigJobResponsePtrOutput() PigJobResponsePtrOutput {
	return i.ToPigJobResponsePtrOutputWithContext(context.Background())
}

func (i PigJobResponseArgs) ToPigJobResponsePtrOutputWithContext(ctx context.Context) PigJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PigJobResponseOutput).ToPigJobResponsePtrOutputWithContext(ctx)
}

// PigJobResponsePtrInput is an input type that accepts PigJobResponseArgs, PigJobResponsePtr and PigJobResponsePtrOutput values.
// You can construct a concrete instance of `PigJobResponsePtrInput` via:
//
//          PigJobResponseArgs{...}
//
//  or:
//
//          nil
type PigJobResponsePtrInput interface {
	pulumi.Input

	ToPigJobResponsePtrOutput() PigJobResponsePtrOutput
	ToPigJobResponsePtrOutputWithContext(context.Context) PigJobResponsePtrOutput
}

type pigJobResponsePtrType PigJobResponseArgs

func PigJobResponsePtr(v *PigJobResponseArgs) PigJobResponsePtrInput {
	return (*pigJobResponsePtrType)(v)
}

func (*pigJobResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PigJobResponse)(nil)).Elem()
}

func (i *pigJobResponsePtrType) ToPigJobResponsePtrOutput() PigJobResponsePtrOutput {
	return i.ToPigJobResponsePtrOutputWithContext(context.Background())
}

func (i *pigJobResponsePtrType) ToPigJobResponsePtrOutputWithContext(ctx context.Context) PigJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PigJobResponsePtrOutput)
}

// A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
type PigJobResponseOutput struct{ *pulumi.OutputState }

func (PigJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PigJobResponse)(nil)).Elem()
}

func (o PigJobResponseOutput) ToPigJobResponseOutput() PigJobResponseOutput {
	return o
}

func (o PigJobResponseOutput) ToPigJobResponseOutputWithContext(ctx context.Context) PigJobResponseOutput {
	return o
}

func (o PigJobResponseOutput) ToPigJobResponsePtrOutput() PigJobResponsePtrOutput {
	return o.ToPigJobResponsePtrOutputWithContext(context.Background())
}

func (o PigJobResponseOutput) ToPigJobResponsePtrOutputWithContext(ctx context.Context) PigJobResponsePtrOutput {
	return o.ApplyT(func(v PigJobResponse) *PigJobResponse {
		return &v
	}).(PigJobResponsePtrOutput)
}

// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
func (o PigJobResponseOutput) ContinueOnFailure() pulumi.BoolOutput {
	return o.ApplyT(func(v PigJobResponse) bool { return v.ContinueOnFailure }).(pulumi.BoolOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
func (o PigJobResponseOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PigJobResponse) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o PigJobResponseOutput) LoggingConfig() LoggingConfigResponseOutput {
	return o.ApplyT(func(v PigJobResponse) LoggingConfigResponse { return v.LoggingConfig }).(LoggingConfigResponseOutput)
}

// Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
func (o PigJobResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v PigJobResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains the Pig queries.
func (o PigJobResponseOutput) QueryFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v PigJobResponse) string { return v.QueryFileUri }).(pulumi.StringOutput)
}

// A list of queries.
func (o PigJobResponseOutput) QueryList() QueryListResponseOutput {
	return o.ApplyT(func(v PigJobResponse) QueryListResponse { return v.QueryList }).(QueryListResponseOutput)
}

// Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
func (o PigJobResponseOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v PigJobResponse) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type PigJobResponsePtrOutput struct{ *pulumi.OutputState }

func (PigJobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PigJobResponse)(nil)).Elem()
}

func (o PigJobResponsePtrOutput) ToPigJobResponsePtrOutput() PigJobResponsePtrOutput {
	return o
}

func (o PigJobResponsePtrOutput) ToPigJobResponsePtrOutputWithContext(ctx context.Context) PigJobResponsePtrOutput {
	return o
}

func (o PigJobResponsePtrOutput) Elem() PigJobResponseOutput {
	return o.ApplyT(func(v *PigJobResponse) PigJobResponse { return *v }).(PigJobResponseOutput)
}

// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
func (o PigJobResponsePtrOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PigJobResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ContinueOnFailure
	}).(pulumi.BoolPtrOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
func (o PigJobResponsePtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PigJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.JarFileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o PigJobResponsePtrOutput) LoggingConfig() LoggingConfigResponsePtrOutput {
	return o.ApplyT(func(v *PigJobResponse) *LoggingConfigResponse {
		if v == nil {
			return nil
		}
		return &v.LoggingConfig
	}).(LoggingConfigResponsePtrOutput)
}

// Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
func (o PigJobResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PigJobResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains the Pig queries.
func (o PigJobResponsePtrOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PigJobResponse) *string {
		if v == nil {
			return nil
		}
		return &v.QueryFileUri
	}).(pulumi.StringPtrOutput)
}

// A list of queries.
func (o PigJobResponsePtrOutput) QueryList() QueryListResponsePtrOutput {
	return o.ApplyT(func(v *PigJobResponse) *QueryListResponse {
		if v == nil {
			return nil
		}
		return &v.QueryList
	}).(QueryListResponsePtrOutput)
}

// Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
func (o PigJobResponsePtrOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PigJobResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.ScriptVariables
	}).(pulumi.StringMapOutput)
}

// A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.
type PrestoJob struct {
	// Optional. Presto client tags to attach to this query
	ClientTags []string `pulumi:"clientTags"`
	// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
	ContinueOnFailure *bool `pulumi:"continueOnFailure"`
	// Optional. The runtime log config for job execution.
	LoggingConfig *LoggingConfig `pulumi:"loggingConfig"`
	// Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
	OutputFormat *string `pulumi:"outputFormat"`
	// Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	QueryFileUri *string `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList *QueryList `pulumi:"queryList"`
}

// PrestoJobInput is an input type that accepts PrestoJobArgs and PrestoJobOutput values.
// You can construct a concrete instance of `PrestoJobInput` via:
//
//          PrestoJobArgs{...}
type PrestoJobInput interface {
	pulumi.Input

	ToPrestoJobOutput() PrestoJobOutput
	ToPrestoJobOutputWithContext(context.Context) PrestoJobOutput
}

// A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.
type PrestoJobArgs struct {
	// Optional. Presto client tags to attach to this query
	ClientTags pulumi.StringArrayInput `pulumi:"clientTags"`
	// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
	ContinueOnFailure pulumi.BoolPtrInput `pulumi:"continueOnFailure"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigPtrInput `pulumi:"loggingConfig"`
	// Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
	OutputFormat pulumi.StringPtrInput `pulumi:"outputFormat"`
	// Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	QueryFileUri pulumi.StringPtrInput `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList QueryListPtrInput `pulumi:"queryList"`
}

func (PrestoJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoJob)(nil)).Elem()
}

func (i PrestoJobArgs) ToPrestoJobOutput() PrestoJobOutput {
	return i.ToPrestoJobOutputWithContext(context.Background())
}

func (i PrestoJobArgs) ToPrestoJobOutputWithContext(ctx context.Context) PrestoJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrestoJobOutput)
}

func (i PrestoJobArgs) ToPrestoJobPtrOutput() PrestoJobPtrOutput {
	return i.ToPrestoJobPtrOutputWithContext(context.Background())
}

func (i PrestoJobArgs) ToPrestoJobPtrOutputWithContext(ctx context.Context) PrestoJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrestoJobOutput).ToPrestoJobPtrOutputWithContext(ctx)
}

// PrestoJobPtrInput is an input type that accepts PrestoJobArgs, PrestoJobPtr and PrestoJobPtrOutput values.
// You can construct a concrete instance of `PrestoJobPtrInput` via:
//
//          PrestoJobArgs{...}
//
//  or:
//
//          nil
type PrestoJobPtrInput interface {
	pulumi.Input

	ToPrestoJobPtrOutput() PrestoJobPtrOutput
	ToPrestoJobPtrOutputWithContext(context.Context) PrestoJobPtrOutput
}

type prestoJobPtrType PrestoJobArgs

func PrestoJobPtr(v *PrestoJobArgs) PrestoJobPtrInput {
	return (*prestoJobPtrType)(v)
}

func (*prestoJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrestoJob)(nil)).Elem()
}

func (i *prestoJobPtrType) ToPrestoJobPtrOutput() PrestoJobPtrOutput {
	return i.ToPrestoJobPtrOutputWithContext(context.Background())
}

func (i *prestoJobPtrType) ToPrestoJobPtrOutputWithContext(ctx context.Context) PrestoJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrestoJobPtrOutput)
}

// A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.
type PrestoJobOutput struct{ *pulumi.OutputState }

func (PrestoJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoJob)(nil)).Elem()
}

func (o PrestoJobOutput) ToPrestoJobOutput() PrestoJobOutput {
	return o
}

func (o PrestoJobOutput) ToPrestoJobOutputWithContext(ctx context.Context) PrestoJobOutput {
	return o
}

func (o PrestoJobOutput) ToPrestoJobPtrOutput() PrestoJobPtrOutput {
	return o.ToPrestoJobPtrOutputWithContext(context.Background())
}

func (o PrestoJobOutput) ToPrestoJobPtrOutputWithContext(ctx context.Context) PrestoJobPtrOutput {
	return o.ApplyT(func(v PrestoJob) *PrestoJob {
		return &v
	}).(PrestoJobPtrOutput)
}

// Optional. Presto client tags to attach to this query
func (o PrestoJobOutput) ClientTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrestoJob) []string { return v.ClientTags }).(pulumi.StringArrayOutput)
}

// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
func (o PrestoJobOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrestoJob) *bool { return v.ContinueOnFailure }).(pulumi.BoolPtrOutput)
}

// Optional. The runtime log config for job execution.
func (o PrestoJobOutput) LoggingConfig() LoggingConfigPtrOutput {
	return o.ApplyT(func(v PrestoJob) *LoggingConfig { return v.LoggingConfig }).(LoggingConfigPtrOutput)
}

// Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
func (o PrestoJobOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrestoJob) *string { return v.OutputFormat }).(pulumi.StringPtrOutput)
}

// Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
func (o PrestoJobOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrestoJob) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
func (o PrestoJobOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrestoJob) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

// A list of queries.
func (o PrestoJobOutput) QueryList() QueryListPtrOutput {
	return o.ApplyT(func(v PrestoJob) *QueryList { return v.QueryList }).(QueryListPtrOutput)
}

type PrestoJobPtrOutput struct{ *pulumi.OutputState }

func (PrestoJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrestoJob)(nil)).Elem()
}

func (o PrestoJobPtrOutput) ToPrestoJobPtrOutput() PrestoJobPtrOutput {
	return o
}

func (o PrestoJobPtrOutput) ToPrestoJobPtrOutputWithContext(ctx context.Context) PrestoJobPtrOutput {
	return o
}

func (o PrestoJobPtrOutput) Elem() PrestoJobOutput {
	return o.ApplyT(func(v *PrestoJob) PrestoJob { return *v }).(PrestoJobOutput)
}

// Optional. Presto client tags to attach to this query
func (o PrestoJobPtrOutput) ClientTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrestoJob) []string {
		if v == nil {
			return nil
		}
		return v.ClientTags
	}).(pulumi.StringArrayOutput)
}

// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
func (o PrestoJobPtrOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrestoJob) *bool {
		if v == nil {
			return nil
		}
		return v.ContinueOnFailure
	}).(pulumi.BoolPtrOutput)
}

// Optional. The runtime log config for job execution.
func (o PrestoJobPtrOutput) LoggingConfig() LoggingConfigPtrOutput {
	return o.ApplyT(func(v *PrestoJob) *LoggingConfig {
		if v == nil {
			return nil
		}
		return v.LoggingConfig
	}).(LoggingConfigPtrOutput)
}

// Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
func (o PrestoJobPtrOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrestoJob) *string {
		if v == nil {
			return nil
		}
		return v.OutputFormat
	}).(pulumi.StringPtrOutput)
}

// Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
func (o PrestoJobPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrestoJob) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
func (o PrestoJobPtrOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrestoJob) *string {
		if v == nil {
			return nil
		}
		return v.QueryFileUri
	}).(pulumi.StringPtrOutput)
}

// A list of queries.
func (o PrestoJobPtrOutput) QueryList() QueryListPtrOutput {
	return o.ApplyT(func(v *PrestoJob) *QueryList {
		if v == nil {
			return nil
		}
		return v.QueryList
	}).(QueryListPtrOutput)
}

// A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.
type PrestoJobResponse struct {
	// Optional. Presto client tags to attach to this query
	ClientTags []string `pulumi:"clientTags"`
	// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
	ContinueOnFailure bool `pulumi:"continueOnFailure"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigResponse `pulumi:"loggingConfig"`
	// Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
	OutputFormat string `pulumi:"outputFormat"`
	// Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	QueryFileUri string `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList QueryListResponse `pulumi:"queryList"`
}

// PrestoJobResponseInput is an input type that accepts PrestoJobResponseArgs and PrestoJobResponseOutput values.
// You can construct a concrete instance of `PrestoJobResponseInput` via:
//
//          PrestoJobResponseArgs{...}
type PrestoJobResponseInput interface {
	pulumi.Input

	ToPrestoJobResponseOutput() PrestoJobResponseOutput
	ToPrestoJobResponseOutputWithContext(context.Context) PrestoJobResponseOutput
}

// A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.
type PrestoJobResponseArgs struct {
	// Optional. Presto client tags to attach to this query
	ClientTags pulumi.StringArrayInput `pulumi:"clientTags"`
	// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
	ContinueOnFailure pulumi.BoolInput `pulumi:"continueOnFailure"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigResponseInput `pulumi:"loggingConfig"`
	// Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
	OutputFormat pulumi.StringInput `pulumi:"outputFormat"`
	// Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	QueryFileUri pulumi.StringInput `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList QueryListResponseInput `pulumi:"queryList"`
}

func (PrestoJobResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoJobResponse)(nil)).Elem()
}

func (i PrestoJobResponseArgs) ToPrestoJobResponseOutput() PrestoJobResponseOutput {
	return i.ToPrestoJobResponseOutputWithContext(context.Background())
}

func (i PrestoJobResponseArgs) ToPrestoJobResponseOutputWithContext(ctx context.Context) PrestoJobResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrestoJobResponseOutput)
}

func (i PrestoJobResponseArgs) ToPrestoJobResponsePtrOutput() PrestoJobResponsePtrOutput {
	return i.ToPrestoJobResponsePtrOutputWithContext(context.Background())
}

func (i PrestoJobResponseArgs) ToPrestoJobResponsePtrOutputWithContext(ctx context.Context) PrestoJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrestoJobResponseOutput).ToPrestoJobResponsePtrOutputWithContext(ctx)
}

// PrestoJobResponsePtrInput is an input type that accepts PrestoJobResponseArgs, PrestoJobResponsePtr and PrestoJobResponsePtrOutput values.
// You can construct a concrete instance of `PrestoJobResponsePtrInput` via:
//
//          PrestoJobResponseArgs{...}
//
//  or:
//
//          nil
type PrestoJobResponsePtrInput interface {
	pulumi.Input

	ToPrestoJobResponsePtrOutput() PrestoJobResponsePtrOutput
	ToPrestoJobResponsePtrOutputWithContext(context.Context) PrestoJobResponsePtrOutput
}

type prestoJobResponsePtrType PrestoJobResponseArgs

func PrestoJobResponsePtr(v *PrestoJobResponseArgs) PrestoJobResponsePtrInput {
	return (*prestoJobResponsePtrType)(v)
}

func (*prestoJobResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrestoJobResponse)(nil)).Elem()
}

func (i *prestoJobResponsePtrType) ToPrestoJobResponsePtrOutput() PrestoJobResponsePtrOutput {
	return i.ToPrestoJobResponsePtrOutputWithContext(context.Background())
}

func (i *prestoJobResponsePtrType) ToPrestoJobResponsePtrOutputWithContext(ctx context.Context) PrestoJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrestoJobResponsePtrOutput)
}

// A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.
type PrestoJobResponseOutput struct{ *pulumi.OutputState }

func (PrestoJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrestoJobResponse)(nil)).Elem()
}

func (o PrestoJobResponseOutput) ToPrestoJobResponseOutput() PrestoJobResponseOutput {
	return o
}

func (o PrestoJobResponseOutput) ToPrestoJobResponseOutputWithContext(ctx context.Context) PrestoJobResponseOutput {
	return o
}

func (o PrestoJobResponseOutput) ToPrestoJobResponsePtrOutput() PrestoJobResponsePtrOutput {
	return o.ToPrestoJobResponsePtrOutputWithContext(context.Background())
}

func (o PrestoJobResponseOutput) ToPrestoJobResponsePtrOutputWithContext(ctx context.Context) PrestoJobResponsePtrOutput {
	return o.ApplyT(func(v PrestoJobResponse) *PrestoJobResponse {
		return &v
	}).(PrestoJobResponsePtrOutput)
}

// Optional. Presto client tags to attach to this query
func (o PrestoJobResponseOutput) ClientTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrestoJobResponse) []string { return v.ClientTags }).(pulumi.StringArrayOutput)
}

// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
func (o PrestoJobResponseOutput) ContinueOnFailure() pulumi.BoolOutput {
	return o.ApplyT(func(v PrestoJobResponse) bool { return v.ContinueOnFailure }).(pulumi.BoolOutput)
}

// Optional. The runtime log config for job execution.
func (o PrestoJobResponseOutput) LoggingConfig() LoggingConfigResponseOutput {
	return o.ApplyT(func(v PrestoJobResponse) LoggingConfigResponse { return v.LoggingConfig }).(LoggingConfigResponseOutput)
}

// Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
func (o PrestoJobResponseOutput) OutputFormat() pulumi.StringOutput {
	return o.ApplyT(func(v PrestoJobResponse) string { return v.OutputFormat }).(pulumi.StringOutput)
}

// Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
func (o PrestoJobResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrestoJobResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
func (o PrestoJobResponseOutput) QueryFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v PrestoJobResponse) string { return v.QueryFileUri }).(pulumi.StringOutput)
}

// A list of queries.
func (o PrestoJobResponseOutput) QueryList() QueryListResponseOutput {
	return o.ApplyT(func(v PrestoJobResponse) QueryListResponse { return v.QueryList }).(QueryListResponseOutput)
}

type PrestoJobResponsePtrOutput struct{ *pulumi.OutputState }

func (PrestoJobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrestoJobResponse)(nil)).Elem()
}

func (o PrestoJobResponsePtrOutput) ToPrestoJobResponsePtrOutput() PrestoJobResponsePtrOutput {
	return o
}

func (o PrestoJobResponsePtrOutput) ToPrestoJobResponsePtrOutputWithContext(ctx context.Context) PrestoJobResponsePtrOutput {
	return o
}

func (o PrestoJobResponsePtrOutput) Elem() PrestoJobResponseOutput {
	return o.ApplyT(func(v *PrestoJobResponse) PrestoJobResponse { return *v }).(PrestoJobResponseOutput)
}

// Optional. Presto client tags to attach to this query
func (o PrestoJobResponsePtrOutput) ClientTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrestoJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.ClientTags
	}).(pulumi.StringArrayOutput)
}

// Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
func (o PrestoJobResponsePtrOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrestoJobResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ContinueOnFailure
	}).(pulumi.BoolPtrOutput)
}

// Optional. The runtime log config for job execution.
func (o PrestoJobResponsePtrOutput) LoggingConfig() LoggingConfigResponsePtrOutput {
	return o.ApplyT(func(v *PrestoJobResponse) *LoggingConfigResponse {
		if v == nil {
			return nil
		}
		return &v.LoggingConfig
	}).(LoggingConfigResponsePtrOutput)
}

// Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
func (o PrestoJobResponsePtrOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrestoJobResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OutputFormat
	}).(pulumi.StringPtrOutput)
}

// Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
func (o PrestoJobResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrestoJobResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
func (o PrestoJobResponsePtrOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrestoJobResponse) *string {
		if v == nil {
			return nil
		}
		return &v.QueryFileUri
	}).(pulumi.StringPtrOutput)
}

// A list of queries.
func (o PrestoJobResponsePtrOutput) QueryList() QueryListResponsePtrOutput {
	return o.ApplyT(func(v *PrestoJobResponse) *QueryListResponse {
		if v == nil {
			return nil
		}
		return &v.QueryList
	}).(QueryListResponsePtrOutput)
}

// A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.
type PySparkJob struct {
	// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
	JarFileUris []string `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig *LoggingConfig `pulumi:"loggingConfig"`
	// The HCFS URI of the main Python file to use as the driver. Must be a .py file.
	MainPythonFileUri string `pulumi:"mainPythonFileUri"`
	// Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
	Properties map[string]string `pulumi:"properties"`
	// Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
	PythonFileUris []string `pulumi:"pythonFileUris"`
}

// PySparkJobInput is an input type that accepts PySparkJobArgs and PySparkJobOutput values.
// You can construct a concrete instance of `PySparkJobInput` via:
//
//          PySparkJobArgs{...}
type PySparkJobInput interface {
	pulumi.Input

	ToPySparkJobOutput() PySparkJobOutput
	ToPySparkJobOutputWithContext(context.Context) PySparkJobOutput
}

// A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.
type PySparkJobArgs struct {
	// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigPtrInput `pulumi:"loggingConfig"`
	// The HCFS URI of the main Python file to use as the driver. Must be a .py file.
	MainPythonFileUri pulumi.StringInput `pulumi:"mainPythonFileUri"`
	// Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
	PythonFileUris pulumi.StringArrayInput `pulumi:"pythonFileUris"`
}

func (PySparkJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PySparkJob)(nil)).Elem()
}

func (i PySparkJobArgs) ToPySparkJobOutput() PySparkJobOutput {
	return i.ToPySparkJobOutputWithContext(context.Background())
}

func (i PySparkJobArgs) ToPySparkJobOutputWithContext(ctx context.Context) PySparkJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PySparkJobOutput)
}

func (i PySparkJobArgs) ToPySparkJobPtrOutput() PySparkJobPtrOutput {
	return i.ToPySparkJobPtrOutputWithContext(context.Background())
}

func (i PySparkJobArgs) ToPySparkJobPtrOutputWithContext(ctx context.Context) PySparkJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PySparkJobOutput).ToPySparkJobPtrOutputWithContext(ctx)
}

// PySparkJobPtrInput is an input type that accepts PySparkJobArgs, PySparkJobPtr and PySparkJobPtrOutput values.
// You can construct a concrete instance of `PySparkJobPtrInput` via:
//
//          PySparkJobArgs{...}
//
//  or:
//
//          nil
type PySparkJobPtrInput interface {
	pulumi.Input

	ToPySparkJobPtrOutput() PySparkJobPtrOutput
	ToPySparkJobPtrOutputWithContext(context.Context) PySparkJobPtrOutput
}

type pySparkJobPtrType PySparkJobArgs

func PySparkJobPtr(v *PySparkJobArgs) PySparkJobPtrInput {
	return (*pySparkJobPtrType)(v)
}

func (*pySparkJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PySparkJob)(nil)).Elem()
}

func (i *pySparkJobPtrType) ToPySparkJobPtrOutput() PySparkJobPtrOutput {
	return i.ToPySparkJobPtrOutputWithContext(context.Background())
}

func (i *pySparkJobPtrType) ToPySparkJobPtrOutputWithContext(ctx context.Context) PySparkJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PySparkJobPtrOutput)
}

// A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.
type PySparkJobOutput struct{ *pulumi.OutputState }

func (PySparkJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PySparkJob)(nil)).Elem()
}

func (o PySparkJobOutput) ToPySparkJobOutput() PySparkJobOutput {
	return o
}

func (o PySparkJobOutput) ToPySparkJobOutputWithContext(ctx context.Context) PySparkJobOutput {
	return o
}

func (o PySparkJobOutput) ToPySparkJobPtrOutput() PySparkJobPtrOutput {
	return o.ToPySparkJobPtrOutputWithContext(context.Background())
}

func (o PySparkJobOutput) ToPySparkJobPtrOutputWithContext(ctx context.Context) PySparkJobPtrOutput {
	return o.ApplyT(func(v PySparkJob) *PySparkJob {
		return &v
	}).(PySparkJobPtrOutput)
}

// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o PySparkJobOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PySparkJob) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o PySparkJobOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PySparkJob) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
func (o PySparkJobOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PySparkJob) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
func (o PySparkJobOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PySparkJob) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o PySparkJobOutput) LoggingConfig() LoggingConfigPtrOutput {
	return o.ApplyT(func(v PySparkJob) *LoggingConfig { return v.LoggingConfig }).(LoggingConfigPtrOutput)
}

// The HCFS URI of the main Python file to use as the driver. Must be a .py file.
func (o PySparkJobOutput) MainPythonFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v PySparkJob) string { return v.MainPythonFileUri }).(pulumi.StringOutput)
}

// Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
func (o PySparkJobOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v PySparkJob) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
func (o PySparkJobOutput) PythonFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PySparkJob) []string { return v.PythonFileUris }).(pulumi.StringArrayOutput)
}

type PySparkJobPtrOutput struct{ *pulumi.OutputState }

func (PySparkJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PySparkJob)(nil)).Elem()
}

func (o PySparkJobPtrOutput) ToPySparkJobPtrOutput() PySparkJobPtrOutput {
	return o
}

func (o PySparkJobPtrOutput) ToPySparkJobPtrOutputWithContext(ctx context.Context) PySparkJobPtrOutput {
	return o
}

func (o PySparkJobPtrOutput) Elem() PySparkJobOutput {
	return o.ApplyT(func(v *PySparkJob) PySparkJob { return *v }).(PySparkJobOutput)
}

// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o PySparkJobPtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PySparkJob) []string {
		if v == nil {
			return nil
		}
		return v.ArchiveUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o PySparkJobPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PySparkJob) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
func (o PySparkJobPtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PySparkJob) []string {
		if v == nil {
			return nil
		}
		return v.FileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
func (o PySparkJobPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PySparkJob) []string {
		if v == nil {
			return nil
		}
		return v.JarFileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o PySparkJobPtrOutput) LoggingConfig() LoggingConfigPtrOutput {
	return o.ApplyT(func(v *PySparkJob) *LoggingConfig {
		if v == nil {
			return nil
		}
		return v.LoggingConfig
	}).(LoggingConfigPtrOutput)
}

// The HCFS URI of the main Python file to use as the driver. Must be a .py file.
func (o PySparkJobPtrOutput) MainPythonFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PySparkJob) *string {
		if v == nil {
			return nil
		}
		return &v.MainPythonFileUri
	}).(pulumi.StringPtrOutput)
}

// Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
func (o PySparkJobPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PySparkJob) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
func (o PySparkJobPtrOutput) PythonFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PySparkJob) []string {
		if v == nil {
			return nil
		}
		return v.PythonFileUris
	}).(pulumi.StringArrayOutput)
}

// A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.
type PySparkJobResponse struct {
	// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
	JarFileUris []string `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigResponse `pulumi:"loggingConfig"`
	// The HCFS URI of the main Python file to use as the driver. Must be a .py file.
	MainPythonFileUri string `pulumi:"mainPythonFileUri"`
	// Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
	Properties map[string]string `pulumi:"properties"`
	// Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
	PythonFileUris []string `pulumi:"pythonFileUris"`
}

// PySparkJobResponseInput is an input type that accepts PySparkJobResponseArgs and PySparkJobResponseOutput values.
// You can construct a concrete instance of `PySparkJobResponseInput` via:
//
//          PySparkJobResponseArgs{...}
type PySparkJobResponseInput interface {
	pulumi.Input

	ToPySparkJobResponseOutput() PySparkJobResponseOutput
	ToPySparkJobResponseOutputWithContext(context.Context) PySparkJobResponseOutput
}

// A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.
type PySparkJobResponseArgs struct {
	// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigResponseInput `pulumi:"loggingConfig"`
	// The HCFS URI of the main Python file to use as the driver. Must be a .py file.
	MainPythonFileUri pulumi.StringInput `pulumi:"mainPythonFileUri"`
	// Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
	PythonFileUris pulumi.StringArrayInput `pulumi:"pythonFileUris"`
}

func (PySparkJobResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PySparkJobResponse)(nil)).Elem()
}

func (i PySparkJobResponseArgs) ToPySparkJobResponseOutput() PySparkJobResponseOutput {
	return i.ToPySparkJobResponseOutputWithContext(context.Background())
}

func (i PySparkJobResponseArgs) ToPySparkJobResponseOutputWithContext(ctx context.Context) PySparkJobResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PySparkJobResponseOutput)
}

func (i PySparkJobResponseArgs) ToPySparkJobResponsePtrOutput() PySparkJobResponsePtrOutput {
	return i.ToPySparkJobResponsePtrOutputWithContext(context.Background())
}

func (i PySparkJobResponseArgs) ToPySparkJobResponsePtrOutputWithContext(ctx context.Context) PySparkJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PySparkJobResponseOutput).ToPySparkJobResponsePtrOutputWithContext(ctx)
}

// PySparkJobResponsePtrInput is an input type that accepts PySparkJobResponseArgs, PySparkJobResponsePtr and PySparkJobResponsePtrOutput values.
// You can construct a concrete instance of `PySparkJobResponsePtrInput` via:
//
//          PySparkJobResponseArgs{...}
//
//  or:
//
//          nil
type PySparkJobResponsePtrInput interface {
	pulumi.Input

	ToPySparkJobResponsePtrOutput() PySparkJobResponsePtrOutput
	ToPySparkJobResponsePtrOutputWithContext(context.Context) PySparkJobResponsePtrOutput
}

type pySparkJobResponsePtrType PySparkJobResponseArgs

func PySparkJobResponsePtr(v *PySparkJobResponseArgs) PySparkJobResponsePtrInput {
	return (*pySparkJobResponsePtrType)(v)
}

func (*pySparkJobResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PySparkJobResponse)(nil)).Elem()
}

func (i *pySparkJobResponsePtrType) ToPySparkJobResponsePtrOutput() PySparkJobResponsePtrOutput {
	return i.ToPySparkJobResponsePtrOutputWithContext(context.Background())
}

func (i *pySparkJobResponsePtrType) ToPySparkJobResponsePtrOutputWithContext(ctx context.Context) PySparkJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PySparkJobResponsePtrOutput)
}

// A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.
type PySparkJobResponseOutput struct{ *pulumi.OutputState }

func (PySparkJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PySparkJobResponse)(nil)).Elem()
}

func (o PySparkJobResponseOutput) ToPySparkJobResponseOutput() PySparkJobResponseOutput {
	return o
}

func (o PySparkJobResponseOutput) ToPySparkJobResponseOutputWithContext(ctx context.Context) PySparkJobResponseOutput {
	return o
}

func (o PySparkJobResponseOutput) ToPySparkJobResponsePtrOutput() PySparkJobResponsePtrOutput {
	return o.ToPySparkJobResponsePtrOutputWithContext(context.Background())
}

func (o PySparkJobResponseOutput) ToPySparkJobResponsePtrOutputWithContext(ctx context.Context) PySparkJobResponsePtrOutput {
	return o.ApplyT(func(v PySparkJobResponse) *PySparkJobResponse {
		return &v
	}).(PySparkJobResponsePtrOutput)
}

// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o PySparkJobResponseOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PySparkJobResponse) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o PySparkJobResponseOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PySparkJobResponse) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
func (o PySparkJobResponseOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PySparkJobResponse) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
func (o PySparkJobResponseOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PySparkJobResponse) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o PySparkJobResponseOutput) LoggingConfig() LoggingConfigResponseOutput {
	return o.ApplyT(func(v PySparkJobResponse) LoggingConfigResponse { return v.LoggingConfig }).(LoggingConfigResponseOutput)
}

// The HCFS URI of the main Python file to use as the driver. Must be a .py file.
func (o PySparkJobResponseOutput) MainPythonFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v PySparkJobResponse) string { return v.MainPythonFileUri }).(pulumi.StringOutput)
}

// Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
func (o PySparkJobResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v PySparkJobResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
func (o PySparkJobResponseOutput) PythonFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PySparkJobResponse) []string { return v.PythonFileUris }).(pulumi.StringArrayOutput)
}

type PySparkJobResponsePtrOutput struct{ *pulumi.OutputState }

func (PySparkJobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PySparkJobResponse)(nil)).Elem()
}

func (o PySparkJobResponsePtrOutput) ToPySparkJobResponsePtrOutput() PySparkJobResponsePtrOutput {
	return o
}

func (o PySparkJobResponsePtrOutput) ToPySparkJobResponsePtrOutputWithContext(ctx context.Context) PySparkJobResponsePtrOutput {
	return o
}

func (o PySparkJobResponsePtrOutput) Elem() PySparkJobResponseOutput {
	return o.ApplyT(func(v *PySparkJobResponse) PySparkJobResponse { return *v }).(PySparkJobResponseOutput)
}

// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o PySparkJobResponsePtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PySparkJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.ArchiveUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o PySparkJobResponsePtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PySparkJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
func (o PySparkJobResponsePtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PySparkJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.FileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
func (o PySparkJobResponsePtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PySparkJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.JarFileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o PySparkJobResponsePtrOutput) LoggingConfig() LoggingConfigResponsePtrOutput {
	return o.ApplyT(func(v *PySparkJobResponse) *LoggingConfigResponse {
		if v == nil {
			return nil
		}
		return &v.LoggingConfig
	}).(LoggingConfigResponsePtrOutput)
}

// The HCFS URI of the main Python file to use as the driver. Must be a .py file.
func (o PySparkJobResponsePtrOutput) MainPythonFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PySparkJobResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MainPythonFileUri
	}).(pulumi.StringPtrOutput)
}

// Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
func (o PySparkJobResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PySparkJobResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
func (o PySparkJobResponsePtrOutput) PythonFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PySparkJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.PythonFileUris
	}).(pulumi.StringArrayOutput)
}

// A list of queries to run on a cluster.
type QueryList struct {
	// The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
	Queries []string `pulumi:"queries"`
}

// QueryListInput is an input type that accepts QueryListArgs and QueryListOutput values.
// You can construct a concrete instance of `QueryListInput` via:
//
//          QueryListArgs{...}
type QueryListInput interface {
	pulumi.Input

	ToQueryListOutput() QueryListOutput
	ToQueryListOutputWithContext(context.Context) QueryListOutput
}

// A list of queries to run on a cluster.
type QueryListArgs struct {
	// The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
	Queries pulumi.StringArrayInput `pulumi:"queries"`
}

func (QueryListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryList)(nil)).Elem()
}

func (i QueryListArgs) ToQueryListOutput() QueryListOutput {
	return i.ToQueryListOutputWithContext(context.Background())
}

func (i QueryListArgs) ToQueryListOutputWithContext(ctx context.Context) QueryListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryListOutput)
}

func (i QueryListArgs) ToQueryListPtrOutput() QueryListPtrOutput {
	return i.ToQueryListPtrOutputWithContext(context.Background())
}

func (i QueryListArgs) ToQueryListPtrOutputWithContext(ctx context.Context) QueryListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryListOutput).ToQueryListPtrOutputWithContext(ctx)
}

// QueryListPtrInput is an input type that accepts QueryListArgs, QueryListPtr and QueryListPtrOutput values.
// You can construct a concrete instance of `QueryListPtrInput` via:
//
//          QueryListArgs{...}
//
//  or:
//
//          nil
type QueryListPtrInput interface {
	pulumi.Input

	ToQueryListPtrOutput() QueryListPtrOutput
	ToQueryListPtrOutputWithContext(context.Context) QueryListPtrOutput
}

type queryListPtrType QueryListArgs

func QueryListPtr(v *QueryListArgs) QueryListPtrInput {
	return (*queryListPtrType)(v)
}

func (*queryListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryList)(nil)).Elem()
}

func (i *queryListPtrType) ToQueryListPtrOutput() QueryListPtrOutput {
	return i.ToQueryListPtrOutputWithContext(context.Background())
}

func (i *queryListPtrType) ToQueryListPtrOutputWithContext(ctx context.Context) QueryListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryListPtrOutput)
}

// A list of queries to run on a cluster.
type QueryListOutput struct{ *pulumi.OutputState }

func (QueryListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryList)(nil)).Elem()
}

func (o QueryListOutput) ToQueryListOutput() QueryListOutput {
	return o
}

func (o QueryListOutput) ToQueryListOutputWithContext(ctx context.Context) QueryListOutput {
	return o
}

func (o QueryListOutput) ToQueryListPtrOutput() QueryListPtrOutput {
	return o.ToQueryListPtrOutputWithContext(context.Background())
}

func (o QueryListOutput) ToQueryListPtrOutputWithContext(ctx context.Context) QueryListPtrOutput {
	return o.ApplyT(func(v QueryList) *QueryList {
		return &v
	}).(QueryListPtrOutput)
}

// The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
func (o QueryListOutput) Queries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryList) []string { return v.Queries }).(pulumi.StringArrayOutput)
}

type QueryListPtrOutput struct{ *pulumi.OutputState }

func (QueryListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryList)(nil)).Elem()
}

func (o QueryListPtrOutput) ToQueryListPtrOutput() QueryListPtrOutput {
	return o
}

func (o QueryListPtrOutput) ToQueryListPtrOutputWithContext(ctx context.Context) QueryListPtrOutput {
	return o
}

func (o QueryListPtrOutput) Elem() QueryListOutput {
	return o.ApplyT(func(v *QueryList) QueryList { return *v }).(QueryListOutput)
}

// The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
func (o QueryListPtrOutput) Queries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *QueryList) []string {
		if v == nil {
			return nil
		}
		return v.Queries
	}).(pulumi.StringArrayOutput)
}

// A list of queries to run on a cluster.
type QueryListResponse struct {
	// The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
	Queries []string `pulumi:"queries"`
}

// QueryListResponseInput is an input type that accepts QueryListResponseArgs and QueryListResponseOutput values.
// You can construct a concrete instance of `QueryListResponseInput` via:
//
//          QueryListResponseArgs{...}
type QueryListResponseInput interface {
	pulumi.Input

	ToQueryListResponseOutput() QueryListResponseOutput
	ToQueryListResponseOutputWithContext(context.Context) QueryListResponseOutput
}

// A list of queries to run on a cluster.
type QueryListResponseArgs struct {
	// The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
	Queries pulumi.StringArrayInput `pulumi:"queries"`
}

func (QueryListResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryListResponse)(nil)).Elem()
}

func (i QueryListResponseArgs) ToQueryListResponseOutput() QueryListResponseOutput {
	return i.ToQueryListResponseOutputWithContext(context.Background())
}

func (i QueryListResponseArgs) ToQueryListResponseOutputWithContext(ctx context.Context) QueryListResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryListResponseOutput)
}

func (i QueryListResponseArgs) ToQueryListResponsePtrOutput() QueryListResponsePtrOutput {
	return i.ToQueryListResponsePtrOutputWithContext(context.Background())
}

func (i QueryListResponseArgs) ToQueryListResponsePtrOutputWithContext(ctx context.Context) QueryListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryListResponseOutput).ToQueryListResponsePtrOutputWithContext(ctx)
}

// QueryListResponsePtrInput is an input type that accepts QueryListResponseArgs, QueryListResponsePtr and QueryListResponsePtrOutput values.
// You can construct a concrete instance of `QueryListResponsePtrInput` via:
//
//          QueryListResponseArgs{...}
//
//  or:
//
//          nil
type QueryListResponsePtrInput interface {
	pulumi.Input

	ToQueryListResponsePtrOutput() QueryListResponsePtrOutput
	ToQueryListResponsePtrOutputWithContext(context.Context) QueryListResponsePtrOutput
}

type queryListResponsePtrType QueryListResponseArgs

func QueryListResponsePtr(v *QueryListResponseArgs) QueryListResponsePtrInput {
	return (*queryListResponsePtrType)(v)
}

func (*queryListResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryListResponse)(nil)).Elem()
}

func (i *queryListResponsePtrType) ToQueryListResponsePtrOutput() QueryListResponsePtrOutput {
	return i.ToQueryListResponsePtrOutputWithContext(context.Background())
}

func (i *queryListResponsePtrType) ToQueryListResponsePtrOutputWithContext(ctx context.Context) QueryListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryListResponsePtrOutput)
}

// A list of queries to run on a cluster.
type QueryListResponseOutput struct{ *pulumi.OutputState }

func (QueryListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryListResponse)(nil)).Elem()
}

func (o QueryListResponseOutput) ToQueryListResponseOutput() QueryListResponseOutput {
	return o
}

func (o QueryListResponseOutput) ToQueryListResponseOutputWithContext(ctx context.Context) QueryListResponseOutput {
	return o
}

func (o QueryListResponseOutput) ToQueryListResponsePtrOutput() QueryListResponsePtrOutput {
	return o.ToQueryListResponsePtrOutputWithContext(context.Background())
}

func (o QueryListResponseOutput) ToQueryListResponsePtrOutputWithContext(ctx context.Context) QueryListResponsePtrOutput {
	return o.ApplyT(func(v QueryListResponse) *QueryListResponse {
		return &v
	}).(QueryListResponsePtrOutput)
}

// The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
func (o QueryListResponseOutput) Queries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryListResponse) []string { return v.Queries }).(pulumi.StringArrayOutput)
}

type QueryListResponsePtrOutput struct{ *pulumi.OutputState }

func (QueryListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueryListResponse)(nil)).Elem()
}

func (o QueryListResponsePtrOutput) ToQueryListResponsePtrOutput() QueryListResponsePtrOutput {
	return o
}

func (o QueryListResponsePtrOutput) ToQueryListResponsePtrOutputWithContext(ctx context.Context) QueryListResponsePtrOutput {
	return o
}

func (o QueryListResponsePtrOutput) Elem() QueryListResponseOutput {
	return o.ApplyT(func(v *QueryListResponse) QueryListResponse { return *v }).(QueryListResponseOutput)
}

// The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
func (o QueryListResponsePtrOutput) Queries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *QueryListResponse) []string {
		if v == nil {
			return nil
		}
		return v.Queries
	}).(pulumi.StringArrayOutput)
}

// Validation based on regular expressions.
type RegexValidation struct {
	// RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
	Regexes []string `pulumi:"regexes"`
}

// RegexValidationInput is an input type that accepts RegexValidationArgs and RegexValidationOutput values.
// You can construct a concrete instance of `RegexValidationInput` via:
//
//          RegexValidationArgs{...}
type RegexValidationInput interface {
	pulumi.Input

	ToRegexValidationOutput() RegexValidationOutput
	ToRegexValidationOutputWithContext(context.Context) RegexValidationOutput
}

// Validation based on regular expressions.
type RegexValidationArgs struct {
	// RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
	Regexes pulumi.StringArrayInput `pulumi:"regexes"`
}

func (RegexValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexValidation)(nil)).Elem()
}

func (i RegexValidationArgs) ToRegexValidationOutput() RegexValidationOutput {
	return i.ToRegexValidationOutputWithContext(context.Background())
}

func (i RegexValidationArgs) ToRegexValidationOutputWithContext(ctx context.Context) RegexValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegexValidationOutput)
}

func (i RegexValidationArgs) ToRegexValidationPtrOutput() RegexValidationPtrOutput {
	return i.ToRegexValidationPtrOutputWithContext(context.Background())
}

func (i RegexValidationArgs) ToRegexValidationPtrOutputWithContext(ctx context.Context) RegexValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegexValidationOutput).ToRegexValidationPtrOutputWithContext(ctx)
}

// RegexValidationPtrInput is an input type that accepts RegexValidationArgs, RegexValidationPtr and RegexValidationPtrOutput values.
// You can construct a concrete instance of `RegexValidationPtrInput` via:
//
//          RegexValidationArgs{...}
//
//  or:
//
//          nil
type RegexValidationPtrInput interface {
	pulumi.Input

	ToRegexValidationPtrOutput() RegexValidationPtrOutput
	ToRegexValidationPtrOutputWithContext(context.Context) RegexValidationPtrOutput
}

type regexValidationPtrType RegexValidationArgs

func RegexValidationPtr(v *RegexValidationArgs) RegexValidationPtrInput {
	return (*regexValidationPtrType)(v)
}

func (*regexValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegexValidation)(nil)).Elem()
}

func (i *regexValidationPtrType) ToRegexValidationPtrOutput() RegexValidationPtrOutput {
	return i.ToRegexValidationPtrOutputWithContext(context.Background())
}

func (i *regexValidationPtrType) ToRegexValidationPtrOutputWithContext(ctx context.Context) RegexValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegexValidationPtrOutput)
}

// Validation based on regular expressions.
type RegexValidationOutput struct{ *pulumi.OutputState }

func (RegexValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexValidation)(nil)).Elem()
}

func (o RegexValidationOutput) ToRegexValidationOutput() RegexValidationOutput {
	return o
}

func (o RegexValidationOutput) ToRegexValidationOutputWithContext(ctx context.Context) RegexValidationOutput {
	return o
}

func (o RegexValidationOutput) ToRegexValidationPtrOutput() RegexValidationPtrOutput {
	return o.ToRegexValidationPtrOutputWithContext(context.Background())
}

func (o RegexValidationOutput) ToRegexValidationPtrOutputWithContext(ctx context.Context) RegexValidationPtrOutput {
	return o.ApplyT(func(v RegexValidation) *RegexValidation {
		return &v
	}).(RegexValidationPtrOutput)
}

// RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
func (o RegexValidationOutput) Regexes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RegexValidation) []string { return v.Regexes }).(pulumi.StringArrayOutput)
}

type RegexValidationPtrOutput struct{ *pulumi.OutputState }

func (RegexValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegexValidation)(nil)).Elem()
}

func (o RegexValidationPtrOutput) ToRegexValidationPtrOutput() RegexValidationPtrOutput {
	return o
}

func (o RegexValidationPtrOutput) ToRegexValidationPtrOutputWithContext(ctx context.Context) RegexValidationPtrOutput {
	return o
}

func (o RegexValidationPtrOutput) Elem() RegexValidationOutput {
	return o.ApplyT(func(v *RegexValidation) RegexValidation { return *v }).(RegexValidationOutput)
}

// RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
func (o RegexValidationPtrOutput) Regexes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RegexValidation) []string {
		if v == nil {
			return nil
		}
		return v.Regexes
	}).(pulumi.StringArrayOutput)
}

// Validation based on regular expressions.
type RegexValidationResponse struct {
	// RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
	Regexes []string `pulumi:"regexes"`
}

// RegexValidationResponseInput is an input type that accepts RegexValidationResponseArgs and RegexValidationResponseOutput values.
// You can construct a concrete instance of `RegexValidationResponseInput` via:
//
//          RegexValidationResponseArgs{...}
type RegexValidationResponseInput interface {
	pulumi.Input

	ToRegexValidationResponseOutput() RegexValidationResponseOutput
	ToRegexValidationResponseOutputWithContext(context.Context) RegexValidationResponseOutput
}

// Validation based on regular expressions.
type RegexValidationResponseArgs struct {
	// RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
	Regexes pulumi.StringArrayInput `pulumi:"regexes"`
}

func (RegexValidationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexValidationResponse)(nil)).Elem()
}

func (i RegexValidationResponseArgs) ToRegexValidationResponseOutput() RegexValidationResponseOutput {
	return i.ToRegexValidationResponseOutputWithContext(context.Background())
}

func (i RegexValidationResponseArgs) ToRegexValidationResponseOutputWithContext(ctx context.Context) RegexValidationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegexValidationResponseOutput)
}

// Validation based on regular expressions.
type RegexValidationResponseOutput struct{ *pulumi.OutputState }

func (RegexValidationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexValidationResponse)(nil)).Elem()
}

func (o RegexValidationResponseOutput) ToRegexValidationResponseOutput() RegexValidationResponseOutput {
	return o
}

func (o RegexValidationResponseOutput) ToRegexValidationResponseOutputWithContext(ctx context.Context) RegexValidationResponseOutput {
	return o
}

// RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
func (o RegexValidationResponseOutput) Regexes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RegexValidationResponse) []string { return v.Regexes }).(pulumi.StringArrayOutput)
}

// Reservation Affinity for consuming Zonal reservation.
type ReservationAffinity struct {
	// Optional. Type of reservation to consume
	ConsumeReservationType *ReservationAffinityConsumeReservationType `pulumi:"consumeReservationType"`
	// Optional. Corresponds to the label key of reservation resource.
	Key *string `pulumi:"key"`
	// Optional. Corresponds to the label values of reservation resource.
	Values []string `pulumi:"values"`
}

// ReservationAffinityInput is an input type that accepts ReservationAffinityArgs and ReservationAffinityOutput values.
// You can construct a concrete instance of `ReservationAffinityInput` via:
//
//          ReservationAffinityArgs{...}
type ReservationAffinityInput interface {
	pulumi.Input

	ToReservationAffinityOutput() ReservationAffinityOutput
	ToReservationAffinityOutputWithContext(context.Context) ReservationAffinityOutput
}

// Reservation Affinity for consuming Zonal reservation.
type ReservationAffinityArgs struct {
	// Optional. Type of reservation to consume
	ConsumeReservationType ReservationAffinityConsumeReservationTypePtrInput `pulumi:"consumeReservationType"`
	// Optional. Corresponds to the label key of reservation resource.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Optional. Corresponds to the label values of reservation resource.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ReservationAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservationAffinity)(nil)).Elem()
}

func (i ReservationAffinityArgs) ToReservationAffinityOutput() ReservationAffinityOutput {
	return i.ToReservationAffinityOutputWithContext(context.Background())
}

func (i ReservationAffinityArgs) ToReservationAffinityOutputWithContext(ctx context.Context) ReservationAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservationAffinityOutput)
}

func (i ReservationAffinityArgs) ToReservationAffinityPtrOutput() ReservationAffinityPtrOutput {
	return i.ToReservationAffinityPtrOutputWithContext(context.Background())
}

func (i ReservationAffinityArgs) ToReservationAffinityPtrOutputWithContext(ctx context.Context) ReservationAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservationAffinityOutput).ToReservationAffinityPtrOutputWithContext(ctx)
}

// ReservationAffinityPtrInput is an input type that accepts ReservationAffinityArgs, ReservationAffinityPtr and ReservationAffinityPtrOutput values.
// You can construct a concrete instance of `ReservationAffinityPtrInput` via:
//
//          ReservationAffinityArgs{...}
//
//  or:
//
//          nil
type ReservationAffinityPtrInput interface {
	pulumi.Input

	ToReservationAffinityPtrOutput() ReservationAffinityPtrOutput
	ToReservationAffinityPtrOutputWithContext(context.Context) ReservationAffinityPtrOutput
}

type reservationAffinityPtrType ReservationAffinityArgs

func ReservationAffinityPtr(v *ReservationAffinityArgs) ReservationAffinityPtrInput {
	return (*reservationAffinityPtrType)(v)
}

func (*reservationAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReservationAffinity)(nil)).Elem()
}

func (i *reservationAffinityPtrType) ToReservationAffinityPtrOutput() ReservationAffinityPtrOutput {
	return i.ToReservationAffinityPtrOutputWithContext(context.Background())
}

func (i *reservationAffinityPtrType) ToReservationAffinityPtrOutputWithContext(ctx context.Context) ReservationAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservationAffinityPtrOutput)
}

// Reservation Affinity for consuming Zonal reservation.
type ReservationAffinityOutput struct{ *pulumi.OutputState }

func (ReservationAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservationAffinity)(nil)).Elem()
}

func (o ReservationAffinityOutput) ToReservationAffinityOutput() ReservationAffinityOutput {
	return o
}

func (o ReservationAffinityOutput) ToReservationAffinityOutputWithContext(ctx context.Context) ReservationAffinityOutput {
	return o
}

func (o ReservationAffinityOutput) ToReservationAffinityPtrOutput() ReservationAffinityPtrOutput {
	return o.ToReservationAffinityPtrOutputWithContext(context.Background())
}

func (o ReservationAffinityOutput) ToReservationAffinityPtrOutputWithContext(ctx context.Context) ReservationAffinityPtrOutput {
	return o.ApplyT(func(v ReservationAffinity) *ReservationAffinity {
		return &v
	}).(ReservationAffinityPtrOutput)
}

// Optional. Type of reservation to consume
func (o ReservationAffinityOutput) ConsumeReservationType() ReservationAffinityConsumeReservationTypePtrOutput {
	return o.ApplyT(func(v ReservationAffinity) *ReservationAffinityConsumeReservationType {
		return v.ConsumeReservationType
	}).(ReservationAffinityConsumeReservationTypePtrOutput)
}

// Optional. Corresponds to the label key of reservation resource.
func (o ReservationAffinityOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReservationAffinity) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Optional. Corresponds to the label values of reservation resource.
func (o ReservationAffinityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReservationAffinity) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ReservationAffinityPtrOutput struct{ *pulumi.OutputState }

func (ReservationAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReservationAffinity)(nil)).Elem()
}

func (o ReservationAffinityPtrOutput) ToReservationAffinityPtrOutput() ReservationAffinityPtrOutput {
	return o
}

func (o ReservationAffinityPtrOutput) ToReservationAffinityPtrOutputWithContext(ctx context.Context) ReservationAffinityPtrOutput {
	return o
}

func (o ReservationAffinityPtrOutput) Elem() ReservationAffinityOutput {
	return o.ApplyT(func(v *ReservationAffinity) ReservationAffinity { return *v }).(ReservationAffinityOutput)
}

// Optional. Type of reservation to consume
func (o ReservationAffinityPtrOutput) ConsumeReservationType() ReservationAffinityConsumeReservationTypePtrOutput {
	return o.ApplyT(func(v *ReservationAffinity) *ReservationAffinityConsumeReservationType {
		if v == nil {
			return nil
		}
		return v.ConsumeReservationType
	}).(ReservationAffinityConsumeReservationTypePtrOutput)
}

// Optional. Corresponds to the label key of reservation resource.
func (o ReservationAffinityPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReservationAffinity) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Optional. Corresponds to the label values of reservation resource.
func (o ReservationAffinityPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReservationAffinity) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

// Reservation Affinity for consuming Zonal reservation.
type ReservationAffinityResponse struct {
	// Optional. Type of reservation to consume
	ConsumeReservationType string `pulumi:"consumeReservationType"`
	// Optional. Corresponds to the label key of reservation resource.
	Key string `pulumi:"key"`
	// Optional. Corresponds to the label values of reservation resource.
	Values []string `pulumi:"values"`
}

// ReservationAffinityResponseInput is an input type that accepts ReservationAffinityResponseArgs and ReservationAffinityResponseOutput values.
// You can construct a concrete instance of `ReservationAffinityResponseInput` via:
//
//          ReservationAffinityResponseArgs{...}
type ReservationAffinityResponseInput interface {
	pulumi.Input

	ToReservationAffinityResponseOutput() ReservationAffinityResponseOutput
	ToReservationAffinityResponseOutputWithContext(context.Context) ReservationAffinityResponseOutput
}

// Reservation Affinity for consuming Zonal reservation.
type ReservationAffinityResponseArgs struct {
	// Optional. Type of reservation to consume
	ConsumeReservationType pulumi.StringInput `pulumi:"consumeReservationType"`
	// Optional. Corresponds to the label key of reservation resource.
	Key pulumi.StringInput `pulumi:"key"`
	// Optional. Corresponds to the label values of reservation resource.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ReservationAffinityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservationAffinityResponse)(nil)).Elem()
}

func (i ReservationAffinityResponseArgs) ToReservationAffinityResponseOutput() ReservationAffinityResponseOutput {
	return i.ToReservationAffinityResponseOutputWithContext(context.Background())
}

func (i ReservationAffinityResponseArgs) ToReservationAffinityResponseOutputWithContext(ctx context.Context) ReservationAffinityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservationAffinityResponseOutput)
}

func (i ReservationAffinityResponseArgs) ToReservationAffinityResponsePtrOutput() ReservationAffinityResponsePtrOutput {
	return i.ToReservationAffinityResponsePtrOutputWithContext(context.Background())
}

func (i ReservationAffinityResponseArgs) ToReservationAffinityResponsePtrOutputWithContext(ctx context.Context) ReservationAffinityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservationAffinityResponseOutput).ToReservationAffinityResponsePtrOutputWithContext(ctx)
}

// ReservationAffinityResponsePtrInput is an input type that accepts ReservationAffinityResponseArgs, ReservationAffinityResponsePtr and ReservationAffinityResponsePtrOutput values.
// You can construct a concrete instance of `ReservationAffinityResponsePtrInput` via:
//
//          ReservationAffinityResponseArgs{...}
//
//  or:
//
//          nil
type ReservationAffinityResponsePtrInput interface {
	pulumi.Input

	ToReservationAffinityResponsePtrOutput() ReservationAffinityResponsePtrOutput
	ToReservationAffinityResponsePtrOutputWithContext(context.Context) ReservationAffinityResponsePtrOutput
}

type reservationAffinityResponsePtrType ReservationAffinityResponseArgs

func ReservationAffinityResponsePtr(v *ReservationAffinityResponseArgs) ReservationAffinityResponsePtrInput {
	return (*reservationAffinityResponsePtrType)(v)
}

func (*reservationAffinityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReservationAffinityResponse)(nil)).Elem()
}

func (i *reservationAffinityResponsePtrType) ToReservationAffinityResponsePtrOutput() ReservationAffinityResponsePtrOutput {
	return i.ToReservationAffinityResponsePtrOutputWithContext(context.Background())
}

func (i *reservationAffinityResponsePtrType) ToReservationAffinityResponsePtrOutputWithContext(ctx context.Context) ReservationAffinityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservationAffinityResponsePtrOutput)
}

// Reservation Affinity for consuming Zonal reservation.
type ReservationAffinityResponseOutput struct{ *pulumi.OutputState }

func (ReservationAffinityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservationAffinityResponse)(nil)).Elem()
}

func (o ReservationAffinityResponseOutput) ToReservationAffinityResponseOutput() ReservationAffinityResponseOutput {
	return o
}

func (o ReservationAffinityResponseOutput) ToReservationAffinityResponseOutputWithContext(ctx context.Context) ReservationAffinityResponseOutput {
	return o
}

func (o ReservationAffinityResponseOutput) ToReservationAffinityResponsePtrOutput() ReservationAffinityResponsePtrOutput {
	return o.ToReservationAffinityResponsePtrOutputWithContext(context.Background())
}

func (o ReservationAffinityResponseOutput) ToReservationAffinityResponsePtrOutputWithContext(ctx context.Context) ReservationAffinityResponsePtrOutput {
	return o.ApplyT(func(v ReservationAffinityResponse) *ReservationAffinityResponse {
		return &v
	}).(ReservationAffinityResponsePtrOutput)
}

// Optional. Type of reservation to consume
func (o ReservationAffinityResponseOutput) ConsumeReservationType() pulumi.StringOutput {
	return o.ApplyT(func(v ReservationAffinityResponse) string { return v.ConsumeReservationType }).(pulumi.StringOutput)
}

// Optional. Corresponds to the label key of reservation resource.
func (o ReservationAffinityResponseOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ReservationAffinityResponse) string { return v.Key }).(pulumi.StringOutput)
}

// Optional. Corresponds to the label values of reservation resource.
func (o ReservationAffinityResponseOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReservationAffinityResponse) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ReservationAffinityResponsePtrOutput struct{ *pulumi.OutputState }

func (ReservationAffinityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReservationAffinityResponse)(nil)).Elem()
}

func (o ReservationAffinityResponsePtrOutput) ToReservationAffinityResponsePtrOutput() ReservationAffinityResponsePtrOutput {
	return o
}

func (o ReservationAffinityResponsePtrOutput) ToReservationAffinityResponsePtrOutputWithContext(ctx context.Context) ReservationAffinityResponsePtrOutput {
	return o
}

func (o ReservationAffinityResponsePtrOutput) Elem() ReservationAffinityResponseOutput {
	return o.ApplyT(func(v *ReservationAffinityResponse) ReservationAffinityResponse { return *v }).(ReservationAffinityResponseOutput)
}

// Optional. Type of reservation to consume
func (o ReservationAffinityResponsePtrOutput) ConsumeReservationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReservationAffinityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConsumeReservationType
	}).(pulumi.StringPtrOutput)
}

// Optional. Corresponds to the label key of reservation resource.
func (o ReservationAffinityResponsePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReservationAffinityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Optional. Corresponds to the label values of reservation resource.
func (o ReservationAffinityResponsePtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReservationAffinityResponse) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

// Security related configuration, including encryption, Kerberos, etc.
type SecurityConfig struct {
	// Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.
	IdentityConfig *IdentityConfig `pulumi:"identityConfig"`
	// Optional. Kerberos related configuration.
	KerberosConfig *KerberosConfig `pulumi:"kerberosConfig"`
}

// SecurityConfigInput is an input type that accepts SecurityConfigArgs and SecurityConfigOutput values.
// You can construct a concrete instance of `SecurityConfigInput` via:
//
//          SecurityConfigArgs{...}
type SecurityConfigInput interface {
	pulumi.Input

	ToSecurityConfigOutput() SecurityConfigOutput
	ToSecurityConfigOutputWithContext(context.Context) SecurityConfigOutput
}

// Security related configuration, including encryption, Kerberos, etc.
type SecurityConfigArgs struct {
	// Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.
	IdentityConfig IdentityConfigPtrInput `pulumi:"identityConfig"`
	// Optional. Kerberos related configuration.
	KerberosConfig KerberosConfigPtrInput `pulumi:"kerberosConfig"`
}

func (SecurityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfig)(nil)).Elem()
}

func (i SecurityConfigArgs) ToSecurityConfigOutput() SecurityConfigOutput {
	return i.ToSecurityConfigOutputWithContext(context.Background())
}

func (i SecurityConfigArgs) ToSecurityConfigOutputWithContext(ctx context.Context) SecurityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigOutput)
}

func (i SecurityConfigArgs) ToSecurityConfigPtrOutput() SecurityConfigPtrOutput {
	return i.ToSecurityConfigPtrOutputWithContext(context.Background())
}

func (i SecurityConfigArgs) ToSecurityConfigPtrOutputWithContext(ctx context.Context) SecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigOutput).ToSecurityConfigPtrOutputWithContext(ctx)
}

// SecurityConfigPtrInput is an input type that accepts SecurityConfigArgs, SecurityConfigPtr and SecurityConfigPtrOutput values.
// You can construct a concrete instance of `SecurityConfigPtrInput` via:
//
//          SecurityConfigArgs{...}
//
//  or:
//
//          nil
type SecurityConfigPtrInput interface {
	pulumi.Input

	ToSecurityConfigPtrOutput() SecurityConfigPtrOutput
	ToSecurityConfigPtrOutputWithContext(context.Context) SecurityConfigPtrOutput
}

type securityConfigPtrType SecurityConfigArgs

func SecurityConfigPtr(v *SecurityConfigArgs) SecurityConfigPtrInput {
	return (*securityConfigPtrType)(v)
}

func (*securityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityConfig)(nil)).Elem()
}

func (i *securityConfigPtrType) ToSecurityConfigPtrOutput() SecurityConfigPtrOutput {
	return i.ToSecurityConfigPtrOutputWithContext(context.Background())
}

func (i *securityConfigPtrType) ToSecurityConfigPtrOutputWithContext(ctx context.Context) SecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigPtrOutput)
}

// Security related configuration, including encryption, Kerberos, etc.
type SecurityConfigOutput struct{ *pulumi.OutputState }

func (SecurityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfig)(nil)).Elem()
}

func (o SecurityConfigOutput) ToSecurityConfigOutput() SecurityConfigOutput {
	return o
}

func (o SecurityConfigOutput) ToSecurityConfigOutputWithContext(ctx context.Context) SecurityConfigOutput {
	return o
}

func (o SecurityConfigOutput) ToSecurityConfigPtrOutput() SecurityConfigPtrOutput {
	return o.ToSecurityConfigPtrOutputWithContext(context.Background())
}

func (o SecurityConfigOutput) ToSecurityConfigPtrOutputWithContext(ctx context.Context) SecurityConfigPtrOutput {
	return o.ApplyT(func(v SecurityConfig) *SecurityConfig {
		return &v
	}).(SecurityConfigPtrOutput)
}

// Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.
func (o SecurityConfigOutput) IdentityConfig() IdentityConfigPtrOutput {
	return o.ApplyT(func(v SecurityConfig) *IdentityConfig { return v.IdentityConfig }).(IdentityConfigPtrOutput)
}

// Optional. Kerberos related configuration.
func (o SecurityConfigOutput) KerberosConfig() KerberosConfigPtrOutput {
	return o.ApplyT(func(v SecurityConfig) *KerberosConfig { return v.KerberosConfig }).(KerberosConfigPtrOutput)
}

type SecurityConfigPtrOutput struct{ *pulumi.OutputState }

func (SecurityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityConfig)(nil)).Elem()
}

func (o SecurityConfigPtrOutput) ToSecurityConfigPtrOutput() SecurityConfigPtrOutput {
	return o
}

func (o SecurityConfigPtrOutput) ToSecurityConfigPtrOutputWithContext(ctx context.Context) SecurityConfigPtrOutput {
	return o
}

func (o SecurityConfigPtrOutput) Elem() SecurityConfigOutput {
	return o.ApplyT(func(v *SecurityConfig) SecurityConfig { return *v }).(SecurityConfigOutput)
}

// Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.
func (o SecurityConfigPtrOutput) IdentityConfig() IdentityConfigPtrOutput {
	return o.ApplyT(func(v *SecurityConfig) *IdentityConfig {
		if v == nil {
			return nil
		}
		return v.IdentityConfig
	}).(IdentityConfigPtrOutput)
}

// Optional. Kerberos related configuration.
func (o SecurityConfigPtrOutput) KerberosConfig() KerberosConfigPtrOutput {
	return o.ApplyT(func(v *SecurityConfig) *KerberosConfig {
		if v == nil {
			return nil
		}
		return v.KerberosConfig
	}).(KerberosConfigPtrOutput)
}

// Security related configuration, including encryption, Kerberos, etc.
type SecurityConfigResponse struct {
	// Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.
	IdentityConfig IdentityConfigResponse `pulumi:"identityConfig"`
	// Optional. Kerberos related configuration.
	KerberosConfig KerberosConfigResponse `pulumi:"kerberosConfig"`
}

// SecurityConfigResponseInput is an input type that accepts SecurityConfigResponseArgs and SecurityConfigResponseOutput values.
// You can construct a concrete instance of `SecurityConfigResponseInput` via:
//
//          SecurityConfigResponseArgs{...}
type SecurityConfigResponseInput interface {
	pulumi.Input

	ToSecurityConfigResponseOutput() SecurityConfigResponseOutput
	ToSecurityConfigResponseOutputWithContext(context.Context) SecurityConfigResponseOutput
}

// Security related configuration, including encryption, Kerberos, etc.
type SecurityConfigResponseArgs struct {
	// Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.
	IdentityConfig IdentityConfigResponseInput `pulumi:"identityConfig"`
	// Optional. Kerberos related configuration.
	KerberosConfig KerberosConfigResponseInput `pulumi:"kerberosConfig"`
}

func (SecurityConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigResponse)(nil)).Elem()
}

func (i SecurityConfigResponseArgs) ToSecurityConfigResponseOutput() SecurityConfigResponseOutput {
	return i.ToSecurityConfigResponseOutputWithContext(context.Background())
}

func (i SecurityConfigResponseArgs) ToSecurityConfigResponseOutputWithContext(ctx context.Context) SecurityConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigResponseOutput)
}

func (i SecurityConfigResponseArgs) ToSecurityConfigResponsePtrOutput() SecurityConfigResponsePtrOutput {
	return i.ToSecurityConfigResponsePtrOutputWithContext(context.Background())
}

func (i SecurityConfigResponseArgs) ToSecurityConfigResponsePtrOutputWithContext(ctx context.Context) SecurityConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigResponseOutput).ToSecurityConfigResponsePtrOutputWithContext(ctx)
}

// SecurityConfigResponsePtrInput is an input type that accepts SecurityConfigResponseArgs, SecurityConfigResponsePtr and SecurityConfigResponsePtrOutput values.
// You can construct a concrete instance of `SecurityConfigResponsePtrInput` via:
//
//          SecurityConfigResponseArgs{...}
//
//  or:
//
//          nil
type SecurityConfigResponsePtrInput interface {
	pulumi.Input

	ToSecurityConfigResponsePtrOutput() SecurityConfigResponsePtrOutput
	ToSecurityConfigResponsePtrOutputWithContext(context.Context) SecurityConfigResponsePtrOutput
}

type securityConfigResponsePtrType SecurityConfigResponseArgs

func SecurityConfigResponsePtr(v *SecurityConfigResponseArgs) SecurityConfigResponsePtrInput {
	return (*securityConfigResponsePtrType)(v)
}

func (*securityConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityConfigResponse)(nil)).Elem()
}

func (i *securityConfigResponsePtrType) ToSecurityConfigResponsePtrOutput() SecurityConfigResponsePtrOutput {
	return i.ToSecurityConfigResponsePtrOutputWithContext(context.Background())
}

func (i *securityConfigResponsePtrType) ToSecurityConfigResponsePtrOutputWithContext(ctx context.Context) SecurityConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigResponsePtrOutput)
}

// Security related configuration, including encryption, Kerberos, etc.
type SecurityConfigResponseOutput struct{ *pulumi.OutputState }

func (SecurityConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigResponse)(nil)).Elem()
}

func (o SecurityConfigResponseOutput) ToSecurityConfigResponseOutput() SecurityConfigResponseOutput {
	return o
}

func (o SecurityConfigResponseOutput) ToSecurityConfigResponseOutputWithContext(ctx context.Context) SecurityConfigResponseOutput {
	return o
}

func (o SecurityConfigResponseOutput) ToSecurityConfigResponsePtrOutput() SecurityConfigResponsePtrOutput {
	return o.ToSecurityConfigResponsePtrOutputWithContext(context.Background())
}

func (o SecurityConfigResponseOutput) ToSecurityConfigResponsePtrOutputWithContext(ctx context.Context) SecurityConfigResponsePtrOutput {
	return o.ApplyT(func(v SecurityConfigResponse) *SecurityConfigResponse {
		return &v
	}).(SecurityConfigResponsePtrOutput)
}

// Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.
func (o SecurityConfigResponseOutput) IdentityConfig() IdentityConfigResponseOutput {
	return o.ApplyT(func(v SecurityConfigResponse) IdentityConfigResponse { return v.IdentityConfig }).(IdentityConfigResponseOutput)
}

// Optional. Kerberos related configuration.
func (o SecurityConfigResponseOutput) KerberosConfig() KerberosConfigResponseOutput {
	return o.ApplyT(func(v SecurityConfigResponse) KerberosConfigResponse { return v.KerberosConfig }).(KerberosConfigResponseOutput)
}

type SecurityConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (SecurityConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityConfigResponse)(nil)).Elem()
}

func (o SecurityConfigResponsePtrOutput) ToSecurityConfigResponsePtrOutput() SecurityConfigResponsePtrOutput {
	return o
}

func (o SecurityConfigResponsePtrOutput) ToSecurityConfigResponsePtrOutputWithContext(ctx context.Context) SecurityConfigResponsePtrOutput {
	return o
}

func (o SecurityConfigResponsePtrOutput) Elem() SecurityConfigResponseOutput {
	return o.ApplyT(func(v *SecurityConfigResponse) SecurityConfigResponse { return *v }).(SecurityConfigResponseOutput)
}

// Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.
func (o SecurityConfigResponsePtrOutput) IdentityConfig() IdentityConfigResponsePtrOutput {
	return o.ApplyT(func(v *SecurityConfigResponse) *IdentityConfigResponse {
		if v == nil {
			return nil
		}
		return &v.IdentityConfig
	}).(IdentityConfigResponsePtrOutput)
}

// Optional. Kerberos related configuration.
func (o SecurityConfigResponsePtrOutput) KerberosConfig() KerberosConfigResponsePtrOutput {
	return o.ApplyT(func(v *SecurityConfigResponse) *KerberosConfigResponse {
		if v == nil {
			return nil
		}
		return &v.KerberosConfig
	}).(KerberosConfigResponsePtrOutput)
}

// Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
type ShieldedInstanceConfig struct {
	// Optional. Defines whether instances have integrity monitoring enabled.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Optional. Defines whether instances have Secure Boot enabled.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
	// Optional. Defines whether instances have the vTPM enabled.
	EnableVtpm *bool `pulumi:"enableVtpm"`
}

// ShieldedInstanceConfigInput is an input type that accepts ShieldedInstanceConfigArgs and ShieldedInstanceConfigOutput values.
// You can construct a concrete instance of `ShieldedInstanceConfigInput` via:
//
//          ShieldedInstanceConfigArgs{...}
type ShieldedInstanceConfigInput interface {
	pulumi.Input

	ToShieldedInstanceConfigOutput() ShieldedInstanceConfigOutput
	ToShieldedInstanceConfigOutputWithContext(context.Context) ShieldedInstanceConfigOutput
}

// Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
type ShieldedInstanceConfigArgs struct {
	// Optional. Defines whether instances have integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Optional. Defines whether instances have Secure Boot enabled.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
	// Optional. Defines whether instances have the vTPM enabled.
	EnableVtpm pulumi.BoolPtrInput `pulumi:"enableVtpm"`
}

func (ShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedInstanceConfig)(nil)).Elem()
}

func (i ShieldedInstanceConfigArgs) ToShieldedInstanceConfigOutput() ShieldedInstanceConfigOutput {
	return i.ToShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i ShieldedInstanceConfigArgs) ToShieldedInstanceConfigOutputWithContext(ctx context.Context) ShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedInstanceConfigOutput)
}

func (i ShieldedInstanceConfigArgs) ToShieldedInstanceConfigPtrOutput() ShieldedInstanceConfigPtrOutput {
	return i.ToShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ShieldedInstanceConfigArgs) ToShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedInstanceConfigOutput).ToShieldedInstanceConfigPtrOutputWithContext(ctx)
}

// ShieldedInstanceConfigPtrInput is an input type that accepts ShieldedInstanceConfigArgs, ShieldedInstanceConfigPtr and ShieldedInstanceConfigPtrOutput values.
// You can construct a concrete instance of `ShieldedInstanceConfigPtrInput` via:
//
//          ShieldedInstanceConfigArgs{...}
//
//  or:
//
//          nil
type ShieldedInstanceConfigPtrInput interface {
	pulumi.Input

	ToShieldedInstanceConfigPtrOutput() ShieldedInstanceConfigPtrOutput
	ToShieldedInstanceConfigPtrOutputWithContext(context.Context) ShieldedInstanceConfigPtrOutput
}

type shieldedInstanceConfigPtrType ShieldedInstanceConfigArgs

func ShieldedInstanceConfigPtr(v *ShieldedInstanceConfigArgs) ShieldedInstanceConfigPtrInput {
	return (*shieldedInstanceConfigPtrType)(v)
}

func (*shieldedInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShieldedInstanceConfig)(nil)).Elem()
}

func (i *shieldedInstanceConfigPtrType) ToShieldedInstanceConfigPtrOutput() ShieldedInstanceConfigPtrOutput {
	return i.ToShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *shieldedInstanceConfigPtrType) ToShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedInstanceConfigPtrOutput)
}

// Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
type ShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (ShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedInstanceConfig)(nil)).Elem()
}

func (o ShieldedInstanceConfigOutput) ToShieldedInstanceConfigOutput() ShieldedInstanceConfigOutput {
	return o
}

func (o ShieldedInstanceConfigOutput) ToShieldedInstanceConfigOutputWithContext(ctx context.Context) ShieldedInstanceConfigOutput {
	return o
}

func (o ShieldedInstanceConfigOutput) ToShieldedInstanceConfigPtrOutput() ShieldedInstanceConfigPtrOutput {
	return o.ToShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ShieldedInstanceConfigOutput) ToShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v ShieldedInstanceConfig) *ShieldedInstanceConfig {
		return &v
	}).(ShieldedInstanceConfigPtrOutput)
}

// Optional. Defines whether instances have integrity monitoring enabled.
func (o ShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Optional. Defines whether instances have Secure Boot enabled.
func (o ShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

// Optional. Defines whether instances have the vTPM enabled.
func (o ShieldedInstanceConfigOutput) EnableVtpm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ShieldedInstanceConfig) *bool { return v.EnableVtpm }).(pulumi.BoolPtrOutput)
}

type ShieldedInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ShieldedInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShieldedInstanceConfig)(nil)).Elem()
}

func (o ShieldedInstanceConfigPtrOutput) ToShieldedInstanceConfigPtrOutput() ShieldedInstanceConfigPtrOutput {
	return o
}

func (o ShieldedInstanceConfigPtrOutput) ToShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ShieldedInstanceConfigPtrOutput {
	return o
}

func (o ShieldedInstanceConfigPtrOutput) Elem() ShieldedInstanceConfigOutput {
	return o.ApplyT(func(v *ShieldedInstanceConfig) ShieldedInstanceConfig { return *v }).(ShieldedInstanceConfigOutput)
}

// Optional. Defines whether instances have integrity monitoring enabled.
func (o ShieldedInstanceConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Optional. Defines whether instances have Secure Boot enabled.
func (o ShieldedInstanceConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSecureBoot
	}).(pulumi.BoolPtrOutput)
}

// Optional. Defines whether instances have the vTPM enabled.
func (o ShieldedInstanceConfigPtrOutput) EnableVtpm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVtpm
	}).(pulumi.BoolPtrOutput)
}

// Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
type ShieldedInstanceConfigResponse struct {
	// Optional. Defines whether instances have integrity monitoring enabled.
	EnableIntegrityMonitoring bool `pulumi:"enableIntegrityMonitoring"`
	// Optional. Defines whether instances have Secure Boot enabled.
	EnableSecureBoot bool `pulumi:"enableSecureBoot"`
	// Optional. Defines whether instances have the vTPM enabled.
	EnableVtpm bool `pulumi:"enableVtpm"`
}

// ShieldedInstanceConfigResponseInput is an input type that accepts ShieldedInstanceConfigResponseArgs and ShieldedInstanceConfigResponseOutput values.
// You can construct a concrete instance of `ShieldedInstanceConfigResponseInput` via:
//
//          ShieldedInstanceConfigResponseArgs{...}
type ShieldedInstanceConfigResponseInput interface {
	pulumi.Input

	ToShieldedInstanceConfigResponseOutput() ShieldedInstanceConfigResponseOutput
	ToShieldedInstanceConfigResponseOutputWithContext(context.Context) ShieldedInstanceConfigResponseOutput
}

// Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
type ShieldedInstanceConfigResponseArgs struct {
	// Optional. Defines whether instances have integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolInput `pulumi:"enableIntegrityMonitoring"`
	// Optional. Defines whether instances have Secure Boot enabled.
	EnableSecureBoot pulumi.BoolInput `pulumi:"enableSecureBoot"`
	// Optional. Defines whether instances have the vTPM enabled.
	EnableVtpm pulumi.BoolInput `pulumi:"enableVtpm"`
}

func (ShieldedInstanceConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedInstanceConfigResponse)(nil)).Elem()
}

func (i ShieldedInstanceConfigResponseArgs) ToShieldedInstanceConfigResponseOutput() ShieldedInstanceConfigResponseOutput {
	return i.ToShieldedInstanceConfigResponseOutputWithContext(context.Background())
}

func (i ShieldedInstanceConfigResponseArgs) ToShieldedInstanceConfigResponseOutputWithContext(ctx context.Context) ShieldedInstanceConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedInstanceConfigResponseOutput)
}

func (i ShieldedInstanceConfigResponseArgs) ToShieldedInstanceConfigResponsePtrOutput() ShieldedInstanceConfigResponsePtrOutput {
	return i.ToShieldedInstanceConfigResponsePtrOutputWithContext(context.Background())
}

func (i ShieldedInstanceConfigResponseArgs) ToShieldedInstanceConfigResponsePtrOutputWithContext(ctx context.Context) ShieldedInstanceConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedInstanceConfigResponseOutput).ToShieldedInstanceConfigResponsePtrOutputWithContext(ctx)
}

// ShieldedInstanceConfigResponsePtrInput is an input type that accepts ShieldedInstanceConfigResponseArgs, ShieldedInstanceConfigResponsePtr and ShieldedInstanceConfigResponsePtrOutput values.
// You can construct a concrete instance of `ShieldedInstanceConfigResponsePtrInput` via:
//
//          ShieldedInstanceConfigResponseArgs{...}
//
//  or:
//
//          nil
type ShieldedInstanceConfigResponsePtrInput interface {
	pulumi.Input

	ToShieldedInstanceConfigResponsePtrOutput() ShieldedInstanceConfigResponsePtrOutput
	ToShieldedInstanceConfigResponsePtrOutputWithContext(context.Context) ShieldedInstanceConfigResponsePtrOutput
}

type shieldedInstanceConfigResponsePtrType ShieldedInstanceConfigResponseArgs

func ShieldedInstanceConfigResponsePtr(v *ShieldedInstanceConfigResponseArgs) ShieldedInstanceConfigResponsePtrInput {
	return (*shieldedInstanceConfigResponsePtrType)(v)
}

func (*shieldedInstanceConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShieldedInstanceConfigResponse)(nil)).Elem()
}

func (i *shieldedInstanceConfigResponsePtrType) ToShieldedInstanceConfigResponsePtrOutput() ShieldedInstanceConfigResponsePtrOutput {
	return i.ToShieldedInstanceConfigResponsePtrOutputWithContext(context.Background())
}

func (i *shieldedInstanceConfigResponsePtrType) ToShieldedInstanceConfigResponsePtrOutputWithContext(ctx context.Context) ShieldedInstanceConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedInstanceConfigResponsePtrOutput)
}

// Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
type ShieldedInstanceConfigResponseOutput struct{ *pulumi.OutputState }

func (ShieldedInstanceConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedInstanceConfigResponse)(nil)).Elem()
}

func (o ShieldedInstanceConfigResponseOutput) ToShieldedInstanceConfigResponseOutput() ShieldedInstanceConfigResponseOutput {
	return o
}

func (o ShieldedInstanceConfigResponseOutput) ToShieldedInstanceConfigResponseOutputWithContext(ctx context.Context) ShieldedInstanceConfigResponseOutput {
	return o
}

func (o ShieldedInstanceConfigResponseOutput) ToShieldedInstanceConfigResponsePtrOutput() ShieldedInstanceConfigResponsePtrOutput {
	return o.ToShieldedInstanceConfigResponsePtrOutputWithContext(context.Background())
}

func (o ShieldedInstanceConfigResponseOutput) ToShieldedInstanceConfigResponsePtrOutputWithContext(ctx context.Context) ShieldedInstanceConfigResponsePtrOutput {
	return o.ApplyT(func(v ShieldedInstanceConfigResponse) *ShieldedInstanceConfigResponse {
		return &v
	}).(ShieldedInstanceConfigResponsePtrOutput)
}

// Optional. Defines whether instances have integrity monitoring enabled.
func (o ShieldedInstanceConfigResponseOutput) EnableIntegrityMonitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v ShieldedInstanceConfigResponse) bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolOutput)
}

// Optional. Defines whether instances have Secure Boot enabled.
func (o ShieldedInstanceConfigResponseOutput) EnableSecureBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v ShieldedInstanceConfigResponse) bool { return v.EnableSecureBoot }).(pulumi.BoolOutput)
}

// Optional. Defines whether instances have the vTPM enabled.
func (o ShieldedInstanceConfigResponseOutput) EnableVtpm() pulumi.BoolOutput {
	return o.ApplyT(func(v ShieldedInstanceConfigResponse) bool { return v.EnableVtpm }).(pulumi.BoolOutput)
}

type ShieldedInstanceConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ShieldedInstanceConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShieldedInstanceConfigResponse)(nil)).Elem()
}

func (o ShieldedInstanceConfigResponsePtrOutput) ToShieldedInstanceConfigResponsePtrOutput() ShieldedInstanceConfigResponsePtrOutput {
	return o
}

func (o ShieldedInstanceConfigResponsePtrOutput) ToShieldedInstanceConfigResponsePtrOutputWithContext(ctx context.Context) ShieldedInstanceConfigResponsePtrOutput {
	return o
}

func (o ShieldedInstanceConfigResponsePtrOutput) Elem() ShieldedInstanceConfigResponseOutput {
	return o.ApplyT(func(v *ShieldedInstanceConfigResponse) ShieldedInstanceConfigResponse { return *v }).(ShieldedInstanceConfigResponseOutput)
}

// Optional. Defines whether instances have integrity monitoring enabled.
func (o ShieldedInstanceConfigResponsePtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShieldedInstanceConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Optional. Defines whether instances have Secure Boot enabled.
func (o ShieldedInstanceConfigResponsePtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShieldedInstanceConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableSecureBoot
	}).(pulumi.BoolPtrOutput)
}

// Optional. Defines whether instances have the vTPM enabled.
func (o ShieldedInstanceConfigResponsePtrOutput) EnableVtpm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShieldedInstanceConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableVtpm
	}).(pulumi.BoolPtrOutput)
}

// Specifies the selection and config of software inside the cluster.
type SoftwareConfig struct {
	// Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
	ImageVersion *string `pulumi:"imageVersion"`
	// Optional. The set of components to activate on the cluster.
	OptionalComponents []SoftwareConfigOptionalComponentsItem `pulumi:"optionalComponents"`
	// Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
	Properties map[string]string `pulumi:"properties"`
}

// SoftwareConfigInput is an input type that accepts SoftwareConfigArgs and SoftwareConfigOutput values.
// You can construct a concrete instance of `SoftwareConfigInput` via:
//
//          SoftwareConfigArgs{...}
type SoftwareConfigInput interface {
	pulumi.Input

	ToSoftwareConfigOutput() SoftwareConfigOutput
	ToSoftwareConfigOutputWithContext(context.Context) SoftwareConfigOutput
}

// Specifies the selection and config of software inside the cluster.
type SoftwareConfigArgs struct {
	// Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
	ImageVersion pulumi.StringPtrInput `pulumi:"imageVersion"`
	// Optional. The set of components to activate on the cluster.
	OptionalComponents SoftwareConfigOptionalComponentsItemArrayInput `pulumi:"optionalComponents"`
	// Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (SoftwareConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareConfig)(nil)).Elem()
}

func (i SoftwareConfigArgs) ToSoftwareConfigOutput() SoftwareConfigOutput {
	return i.ToSoftwareConfigOutputWithContext(context.Background())
}

func (i SoftwareConfigArgs) ToSoftwareConfigOutputWithContext(ctx context.Context) SoftwareConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareConfigOutput)
}

func (i SoftwareConfigArgs) ToSoftwareConfigPtrOutput() SoftwareConfigPtrOutput {
	return i.ToSoftwareConfigPtrOutputWithContext(context.Background())
}

func (i SoftwareConfigArgs) ToSoftwareConfigPtrOutputWithContext(ctx context.Context) SoftwareConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareConfigOutput).ToSoftwareConfigPtrOutputWithContext(ctx)
}

// SoftwareConfigPtrInput is an input type that accepts SoftwareConfigArgs, SoftwareConfigPtr and SoftwareConfigPtrOutput values.
// You can construct a concrete instance of `SoftwareConfigPtrInput` via:
//
//          SoftwareConfigArgs{...}
//
//  or:
//
//          nil
type SoftwareConfigPtrInput interface {
	pulumi.Input

	ToSoftwareConfigPtrOutput() SoftwareConfigPtrOutput
	ToSoftwareConfigPtrOutputWithContext(context.Context) SoftwareConfigPtrOutput
}

type softwareConfigPtrType SoftwareConfigArgs

func SoftwareConfigPtr(v *SoftwareConfigArgs) SoftwareConfigPtrInput {
	return (*softwareConfigPtrType)(v)
}

func (*softwareConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareConfig)(nil)).Elem()
}

func (i *softwareConfigPtrType) ToSoftwareConfigPtrOutput() SoftwareConfigPtrOutput {
	return i.ToSoftwareConfigPtrOutputWithContext(context.Background())
}

func (i *softwareConfigPtrType) ToSoftwareConfigPtrOutputWithContext(ctx context.Context) SoftwareConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareConfigPtrOutput)
}

// Specifies the selection and config of software inside the cluster.
type SoftwareConfigOutput struct{ *pulumi.OutputState }

func (SoftwareConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareConfig)(nil)).Elem()
}

func (o SoftwareConfigOutput) ToSoftwareConfigOutput() SoftwareConfigOutput {
	return o
}

func (o SoftwareConfigOutput) ToSoftwareConfigOutputWithContext(ctx context.Context) SoftwareConfigOutput {
	return o
}

func (o SoftwareConfigOutput) ToSoftwareConfigPtrOutput() SoftwareConfigPtrOutput {
	return o.ToSoftwareConfigPtrOutputWithContext(context.Background())
}

func (o SoftwareConfigOutput) ToSoftwareConfigPtrOutputWithContext(ctx context.Context) SoftwareConfigPtrOutput {
	return o.ApplyT(func(v SoftwareConfig) *SoftwareConfig {
		return &v
	}).(SoftwareConfigPtrOutput)
}

// Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
func (o SoftwareConfigOutput) ImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftwareConfig) *string { return v.ImageVersion }).(pulumi.StringPtrOutput)
}

// Optional. The set of components to activate on the cluster.
func (o SoftwareConfigOutput) OptionalComponents() SoftwareConfigOptionalComponentsItemArrayOutput {
	return o.ApplyT(func(v SoftwareConfig) []SoftwareConfigOptionalComponentsItem { return v.OptionalComponents }).(SoftwareConfigOptionalComponentsItemArrayOutput)
}

// Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
func (o SoftwareConfigOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v SoftwareConfig) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type SoftwareConfigPtrOutput struct{ *pulumi.OutputState }

func (SoftwareConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareConfig)(nil)).Elem()
}

func (o SoftwareConfigPtrOutput) ToSoftwareConfigPtrOutput() SoftwareConfigPtrOutput {
	return o
}

func (o SoftwareConfigPtrOutput) ToSoftwareConfigPtrOutputWithContext(ctx context.Context) SoftwareConfigPtrOutput {
	return o
}

func (o SoftwareConfigPtrOutput) Elem() SoftwareConfigOutput {
	return o.ApplyT(func(v *SoftwareConfig) SoftwareConfig { return *v }).(SoftwareConfigOutput)
}

// Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
func (o SoftwareConfigPtrOutput) ImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoftwareConfig) *string {
		if v == nil {
			return nil
		}
		return v.ImageVersion
	}).(pulumi.StringPtrOutput)
}

// Optional. The set of components to activate on the cluster.
func (o SoftwareConfigPtrOutput) OptionalComponents() SoftwareConfigOptionalComponentsItemArrayOutput {
	return o.ApplyT(func(v *SoftwareConfig) []SoftwareConfigOptionalComponentsItem {
		if v == nil {
			return nil
		}
		return v.OptionalComponents
	}).(SoftwareConfigOptionalComponentsItemArrayOutput)
}

// Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
func (o SoftwareConfigPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SoftwareConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Specifies the selection and config of software inside the cluster.
type SoftwareConfigResponse struct {
	// Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
	ImageVersion string `pulumi:"imageVersion"`
	// Optional. The set of components to activate on the cluster.
	OptionalComponents []string `pulumi:"optionalComponents"`
	// Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
	Properties map[string]string `pulumi:"properties"`
}

// SoftwareConfigResponseInput is an input type that accepts SoftwareConfigResponseArgs and SoftwareConfigResponseOutput values.
// You can construct a concrete instance of `SoftwareConfigResponseInput` via:
//
//          SoftwareConfigResponseArgs{...}
type SoftwareConfigResponseInput interface {
	pulumi.Input

	ToSoftwareConfigResponseOutput() SoftwareConfigResponseOutput
	ToSoftwareConfigResponseOutputWithContext(context.Context) SoftwareConfigResponseOutput
}

// Specifies the selection and config of software inside the cluster.
type SoftwareConfigResponseArgs struct {
	// Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
	ImageVersion pulumi.StringInput `pulumi:"imageVersion"`
	// Optional. The set of components to activate on the cluster.
	OptionalComponents pulumi.StringArrayInput `pulumi:"optionalComponents"`
	// Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (SoftwareConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareConfigResponse)(nil)).Elem()
}

func (i SoftwareConfigResponseArgs) ToSoftwareConfigResponseOutput() SoftwareConfigResponseOutput {
	return i.ToSoftwareConfigResponseOutputWithContext(context.Background())
}

func (i SoftwareConfigResponseArgs) ToSoftwareConfigResponseOutputWithContext(ctx context.Context) SoftwareConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareConfigResponseOutput)
}

func (i SoftwareConfigResponseArgs) ToSoftwareConfigResponsePtrOutput() SoftwareConfigResponsePtrOutput {
	return i.ToSoftwareConfigResponsePtrOutputWithContext(context.Background())
}

func (i SoftwareConfigResponseArgs) ToSoftwareConfigResponsePtrOutputWithContext(ctx context.Context) SoftwareConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareConfigResponseOutput).ToSoftwareConfigResponsePtrOutputWithContext(ctx)
}

// SoftwareConfigResponsePtrInput is an input type that accepts SoftwareConfigResponseArgs, SoftwareConfigResponsePtr and SoftwareConfigResponsePtrOutput values.
// You can construct a concrete instance of `SoftwareConfigResponsePtrInput` via:
//
//          SoftwareConfigResponseArgs{...}
//
//  or:
//
//          nil
type SoftwareConfigResponsePtrInput interface {
	pulumi.Input

	ToSoftwareConfigResponsePtrOutput() SoftwareConfigResponsePtrOutput
	ToSoftwareConfigResponsePtrOutputWithContext(context.Context) SoftwareConfigResponsePtrOutput
}

type softwareConfigResponsePtrType SoftwareConfigResponseArgs

func SoftwareConfigResponsePtr(v *SoftwareConfigResponseArgs) SoftwareConfigResponsePtrInput {
	return (*softwareConfigResponsePtrType)(v)
}

func (*softwareConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareConfigResponse)(nil)).Elem()
}

func (i *softwareConfigResponsePtrType) ToSoftwareConfigResponsePtrOutput() SoftwareConfigResponsePtrOutput {
	return i.ToSoftwareConfigResponsePtrOutputWithContext(context.Background())
}

func (i *softwareConfigResponsePtrType) ToSoftwareConfigResponsePtrOutputWithContext(ctx context.Context) SoftwareConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareConfigResponsePtrOutput)
}

// Specifies the selection and config of software inside the cluster.
type SoftwareConfigResponseOutput struct{ *pulumi.OutputState }

func (SoftwareConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareConfigResponse)(nil)).Elem()
}

func (o SoftwareConfigResponseOutput) ToSoftwareConfigResponseOutput() SoftwareConfigResponseOutput {
	return o
}

func (o SoftwareConfigResponseOutput) ToSoftwareConfigResponseOutputWithContext(ctx context.Context) SoftwareConfigResponseOutput {
	return o
}

func (o SoftwareConfigResponseOutput) ToSoftwareConfigResponsePtrOutput() SoftwareConfigResponsePtrOutput {
	return o.ToSoftwareConfigResponsePtrOutputWithContext(context.Background())
}

func (o SoftwareConfigResponseOutput) ToSoftwareConfigResponsePtrOutputWithContext(ctx context.Context) SoftwareConfigResponsePtrOutput {
	return o.ApplyT(func(v SoftwareConfigResponse) *SoftwareConfigResponse {
		return &v
	}).(SoftwareConfigResponsePtrOutput)
}

// Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
func (o SoftwareConfigResponseOutput) ImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v SoftwareConfigResponse) string { return v.ImageVersion }).(pulumi.StringOutput)
}

// Optional. The set of components to activate on the cluster.
func (o SoftwareConfigResponseOutput) OptionalComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SoftwareConfigResponse) []string { return v.OptionalComponents }).(pulumi.StringArrayOutput)
}

// Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
func (o SoftwareConfigResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v SoftwareConfigResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type SoftwareConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (SoftwareConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareConfigResponse)(nil)).Elem()
}

func (o SoftwareConfigResponsePtrOutput) ToSoftwareConfigResponsePtrOutput() SoftwareConfigResponsePtrOutput {
	return o
}

func (o SoftwareConfigResponsePtrOutput) ToSoftwareConfigResponsePtrOutputWithContext(ctx context.Context) SoftwareConfigResponsePtrOutput {
	return o
}

func (o SoftwareConfigResponsePtrOutput) Elem() SoftwareConfigResponseOutput {
	return o.ApplyT(func(v *SoftwareConfigResponse) SoftwareConfigResponse { return *v }).(SoftwareConfigResponseOutput)
}

// Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
func (o SoftwareConfigResponsePtrOutput) ImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoftwareConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ImageVersion
	}).(pulumi.StringPtrOutput)
}

// Optional. The set of components to activate on the cluster.
func (o SoftwareConfigResponsePtrOutput) OptionalComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SoftwareConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.OptionalComponents
	}).(pulumi.StringArrayOutput)
}

// Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
func (o SoftwareConfigResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SoftwareConfigResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// A Dataproc job for running Apache Spark (http://spark.apache.org/) applications on YARN.
type SparkJob struct {
	// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
	JarFileUris []string `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig *LoggingConfig `pulumi:"loggingConfig"`
	// The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
	MainClass *string `pulumi:"mainClass"`
	// The HCFS URI of the jar file that contains the main class.
	MainJarFileUri *string `pulumi:"mainJarFileUri"`
	// Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
	Properties map[string]string `pulumi:"properties"`
}

// SparkJobInput is an input type that accepts SparkJobArgs and SparkJobOutput values.
// You can construct a concrete instance of `SparkJobInput` via:
//
//          SparkJobArgs{...}
type SparkJobInput interface {
	pulumi.Input

	ToSparkJobOutput() SparkJobOutput
	ToSparkJobOutputWithContext(context.Context) SparkJobOutput
}

// A Dataproc job for running Apache Spark (http://spark.apache.org/) applications on YARN.
type SparkJobArgs struct {
	// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigPtrInput `pulumi:"loggingConfig"`
	// The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
	MainClass pulumi.StringPtrInput `pulumi:"mainClass"`
	// The HCFS URI of the jar file that contains the main class.
	MainJarFileUri pulumi.StringPtrInput `pulumi:"mainJarFileUri"`
	// Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (SparkJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkJob)(nil)).Elem()
}

func (i SparkJobArgs) ToSparkJobOutput() SparkJobOutput {
	return i.ToSparkJobOutputWithContext(context.Background())
}

func (i SparkJobArgs) ToSparkJobOutputWithContext(ctx context.Context) SparkJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkJobOutput)
}

func (i SparkJobArgs) ToSparkJobPtrOutput() SparkJobPtrOutput {
	return i.ToSparkJobPtrOutputWithContext(context.Background())
}

func (i SparkJobArgs) ToSparkJobPtrOutputWithContext(ctx context.Context) SparkJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkJobOutput).ToSparkJobPtrOutputWithContext(ctx)
}

// SparkJobPtrInput is an input type that accepts SparkJobArgs, SparkJobPtr and SparkJobPtrOutput values.
// You can construct a concrete instance of `SparkJobPtrInput` via:
//
//          SparkJobArgs{...}
//
//  or:
//
//          nil
type SparkJobPtrInput interface {
	pulumi.Input

	ToSparkJobPtrOutput() SparkJobPtrOutput
	ToSparkJobPtrOutputWithContext(context.Context) SparkJobPtrOutput
}

type sparkJobPtrType SparkJobArgs

func SparkJobPtr(v *SparkJobArgs) SparkJobPtrInput {
	return (*sparkJobPtrType)(v)
}

func (*sparkJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkJob)(nil)).Elem()
}

func (i *sparkJobPtrType) ToSparkJobPtrOutput() SparkJobPtrOutput {
	return i.ToSparkJobPtrOutputWithContext(context.Background())
}

func (i *sparkJobPtrType) ToSparkJobPtrOutputWithContext(ctx context.Context) SparkJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkJobPtrOutput)
}

// A Dataproc job for running Apache Spark (http://spark.apache.org/) applications on YARN.
type SparkJobOutput struct{ *pulumi.OutputState }

func (SparkJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkJob)(nil)).Elem()
}

func (o SparkJobOutput) ToSparkJobOutput() SparkJobOutput {
	return o
}

func (o SparkJobOutput) ToSparkJobOutputWithContext(ctx context.Context) SparkJobOutput {
	return o
}

func (o SparkJobOutput) ToSparkJobPtrOutput() SparkJobPtrOutput {
	return o.ToSparkJobPtrOutputWithContext(context.Background())
}

func (o SparkJobOutput) ToSparkJobPtrOutputWithContext(ctx context.Context) SparkJobPtrOutput {
	return o.ApplyT(func(v SparkJob) *SparkJob {
		return &v
	}).(SparkJobPtrOutput)
}

// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o SparkJobOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkJob) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o SparkJobOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkJob) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
func (o SparkJobOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkJob) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
func (o SparkJobOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkJob) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o SparkJobOutput) LoggingConfig() LoggingConfigPtrOutput {
	return o.ApplyT(func(v SparkJob) *LoggingConfig { return v.LoggingConfig }).(LoggingConfigPtrOutput)
}

// The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
func (o SparkJobOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkJob) *string { return v.MainClass }).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file that contains the main class.
func (o SparkJobOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkJob) *string { return v.MainJarFileUri }).(pulumi.StringPtrOutput)
}

// Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
func (o SparkJobOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v SparkJob) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type SparkJobPtrOutput struct{ *pulumi.OutputState }

func (SparkJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkJob)(nil)).Elem()
}

func (o SparkJobPtrOutput) ToSparkJobPtrOutput() SparkJobPtrOutput {
	return o
}

func (o SparkJobPtrOutput) ToSparkJobPtrOutputWithContext(ctx context.Context) SparkJobPtrOutput {
	return o
}

func (o SparkJobPtrOutput) Elem() SparkJobOutput {
	return o.ApplyT(func(v *SparkJob) SparkJob { return *v }).(SparkJobOutput)
}

// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o SparkJobPtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkJob) []string {
		if v == nil {
			return nil
		}
		return v.ArchiveUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o SparkJobPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkJob) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
func (o SparkJobPtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkJob) []string {
		if v == nil {
			return nil
		}
		return v.FileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
func (o SparkJobPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkJob) []string {
		if v == nil {
			return nil
		}
		return v.JarFileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o SparkJobPtrOutput) LoggingConfig() LoggingConfigPtrOutput {
	return o.ApplyT(func(v *SparkJob) *LoggingConfig {
		if v == nil {
			return nil
		}
		return v.LoggingConfig
	}).(LoggingConfigPtrOutput)
}

// The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
func (o SparkJobPtrOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SparkJob) *string {
		if v == nil {
			return nil
		}
		return v.MainClass
	}).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file that contains the main class.
func (o SparkJobPtrOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SparkJob) *string {
		if v == nil {
			return nil
		}
		return v.MainJarFileUri
	}).(pulumi.StringPtrOutput)
}

// Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
func (o SparkJobPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SparkJob) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// A Dataproc job for running Apache Spark (http://spark.apache.org/) applications on YARN.
type SparkJobResponse struct {
	// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
	JarFileUris []string `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigResponse `pulumi:"loggingConfig"`
	// The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
	MainClass string `pulumi:"mainClass"`
	// The HCFS URI of the jar file that contains the main class.
	MainJarFileUri string `pulumi:"mainJarFileUri"`
	// Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
	Properties map[string]string `pulumi:"properties"`
}

// SparkJobResponseInput is an input type that accepts SparkJobResponseArgs and SparkJobResponseOutput values.
// You can construct a concrete instance of `SparkJobResponseInput` via:
//
//          SparkJobResponseArgs{...}
type SparkJobResponseInput interface {
	pulumi.Input

	ToSparkJobResponseOutput() SparkJobResponseOutput
	ToSparkJobResponseOutputWithContext(context.Context) SparkJobResponseOutput
}

// A Dataproc job for running Apache Spark (http://spark.apache.org/) applications on YARN.
type SparkJobResponseArgs struct {
	// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigResponseInput `pulumi:"loggingConfig"`
	// The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
	MainClass pulumi.StringInput `pulumi:"mainClass"`
	// The HCFS URI of the jar file that contains the main class.
	MainJarFileUri pulumi.StringInput `pulumi:"mainJarFileUri"`
	// Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (SparkJobResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkJobResponse)(nil)).Elem()
}

func (i SparkJobResponseArgs) ToSparkJobResponseOutput() SparkJobResponseOutput {
	return i.ToSparkJobResponseOutputWithContext(context.Background())
}

func (i SparkJobResponseArgs) ToSparkJobResponseOutputWithContext(ctx context.Context) SparkJobResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkJobResponseOutput)
}

func (i SparkJobResponseArgs) ToSparkJobResponsePtrOutput() SparkJobResponsePtrOutput {
	return i.ToSparkJobResponsePtrOutputWithContext(context.Background())
}

func (i SparkJobResponseArgs) ToSparkJobResponsePtrOutputWithContext(ctx context.Context) SparkJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkJobResponseOutput).ToSparkJobResponsePtrOutputWithContext(ctx)
}

// SparkJobResponsePtrInput is an input type that accepts SparkJobResponseArgs, SparkJobResponsePtr and SparkJobResponsePtrOutput values.
// You can construct a concrete instance of `SparkJobResponsePtrInput` via:
//
//          SparkJobResponseArgs{...}
//
//  or:
//
//          nil
type SparkJobResponsePtrInput interface {
	pulumi.Input

	ToSparkJobResponsePtrOutput() SparkJobResponsePtrOutput
	ToSparkJobResponsePtrOutputWithContext(context.Context) SparkJobResponsePtrOutput
}

type sparkJobResponsePtrType SparkJobResponseArgs

func SparkJobResponsePtr(v *SparkJobResponseArgs) SparkJobResponsePtrInput {
	return (*sparkJobResponsePtrType)(v)
}

func (*sparkJobResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkJobResponse)(nil)).Elem()
}

func (i *sparkJobResponsePtrType) ToSparkJobResponsePtrOutput() SparkJobResponsePtrOutput {
	return i.ToSparkJobResponsePtrOutputWithContext(context.Background())
}

func (i *sparkJobResponsePtrType) ToSparkJobResponsePtrOutputWithContext(ctx context.Context) SparkJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkJobResponsePtrOutput)
}

// A Dataproc job for running Apache Spark (http://spark.apache.org/) applications on YARN.
type SparkJobResponseOutput struct{ *pulumi.OutputState }

func (SparkJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkJobResponse)(nil)).Elem()
}

func (o SparkJobResponseOutput) ToSparkJobResponseOutput() SparkJobResponseOutput {
	return o
}

func (o SparkJobResponseOutput) ToSparkJobResponseOutputWithContext(ctx context.Context) SparkJobResponseOutput {
	return o
}

func (o SparkJobResponseOutput) ToSparkJobResponsePtrOutput() SparkJobResponsePtrOutput {
	return o.ToSparkJobResponsePtrOutputWithContext(context.Background())
}

func (o SparkJobResponseOutput) ToSparkJobResponsePtrOutputWithContext(ctx context.Context) SparkJobResponsePtrOutput {
	return o.ApplyT(func(v SparkJobResponse) *SparkJobResponse {
		return &v
	}).(SparkJobResponsePtrOutput)
}

// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o SparkJobResponseOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkJobResponse) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o SparkJobResponseOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkJobResponse) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
func (o SparkJobResponseOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkJobResponse) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
func (o SparkJobResponseOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkJobResponse) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o SparkJobResponseOutput) LoggingConfig() LoggingConfigResponseOutput {
	return o.ApplyT(func(v SparkJobResponse) LoggingConfigResponse { return v.LoggingConfig }).(LoggingConfigResponseOutput)
}

// The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
func (o SparkJobResponseOutput) MainClass() pulumi.StringOutput {
	return o.ApplyT(func(v SparkJobResponse) string { return v.MainClass }).(pulumi.StringOutput)
}

// The HCFS URI of the jar file that contains the main class.
func (o SparkJobResponseOutput) MainJarFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v SparkJobResponse) string { return v.MainJarFileUri }).(pulumi.StringOutput)
}

// Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
func (o SparkJobResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v SparkJobResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type SparkJobResponsePtrOutput struct{ *pulumi.OutputState }

func (SparkJobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkJobResponse)(nil)).Elem()
}

func (o SparkJobResponsePtrOutput) ToSparkJobResponsePtrOutput() SparkJobResponsePtrOutput {
	return o
}

func (o SparkJobResponsePtrOutput) ToSparkJobResponsePtrOutputWithContext(ctx context.Context) SparkJobResponsePtrOutput {
	return o
}

func (o SparkJobResponsePtrOutput) Elem() SparkJobResponseOutput {
	return o.ApplyT(func(v *SparkJobResponse) SparkJobResponse { return *v }).(SparkJobResponseOutput)
}

// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o SparkJobResponsePtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.ArchiveUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o SparkJobResponsePtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
func (o SparkJobResponsePtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.FileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
func (o SparkJobResponsePtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.JarFileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o SparkJobResponsePtrOutput) LoggingConfig() LoggingConfigResponsePtrOutput {
	return o.ApplyT(func(v *SparkJobResponse) *LoggingConfigResponse {
		if v == nil {
			return nil
		}
		return &v.LoggingConfig
	}).(LoggingConfigResponsePtrOutput)
}

// The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
func (o SparkJobResponsePtrOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SparkJobResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MainClass
	}).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file that contains the main class.
func (o SparkJobResponsePtrOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SparkJobResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MainJarFileUri
	}).(pulumi.StringPtrOutput)
}

// Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
func (o SparkJobResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SparkJobResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.
type SparkRJob struct {
	// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig *LoggingConfig `pulumi:"loggingConfig"`
	// The HCFS URI of the main R file to use as the driver. Must be a .R file.
	MainRFileUri string `pulumi:"mainRFileUri"`
	// Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
	Properties map[string]string `pulumi:"properties"`
}

// SparkRJobInput is an input type that accepts SparkRJobArgs and SparkRJobOutput values.
// You can construct a concrete instance of `SparkRJobInput` via:
//
//          SparkRJobArgs{...}
type SparkRJobInput interface {
	pulumi.Input

	ToSparkRJobOutput() SparkRJobOutput
	ToSparkRJobOutputWithContext(context.Context) SparkRJobOutput
}

// A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.
type SparkRJobArgs struct {
	// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigPtrInput `pulumi:"loggingConfig"`
	// The HCFS URI of the main R file to use as the driver. Must be a .R file.
	MainRFileUri pulumi.StringInput `pulumi:"mainRFileUri"`
	// Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (SparkRJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkRJob)(nil)).Elem()
}

func (i SparkRJobArgs) ToSparkRJobOutput() SparkRJobOutput {
	return i.ToSparkRJobOutputWithContext(context.Background())
}

func (i SparkRJobArgs) ToSparkRJobOutputWithContext(ctx context.Context) SparkRJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkRJobOutput)
}

func (i SparkRJobArgs) ToSparkRJobPtrOutput() SparkRJobPtrOutput {
	return i.ToSparkRJobPtrOutputWithContext(context.Background())
}

func (i SparkRJobArgs) ToSparkRJobPtrOutputWithContext(ctx context.Context) SparkRJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkRJobOutput).ToSparkRJobPtrOutputWithContext(ctx)
}

// SparkRJobPtrInput is an input type that accepts SparkRJobArgs, SparkRJobPtr and SparkRJobPtrOutput values.
// You can construct a concrete instance of `SparkRJobPtrInput` via:
//
//          SparkRJobArgs{...}
//
//  or:
//
//          nil
type SparkRJobPtrInput interface {
	pulumi.Input

	ToSparkRJobPtrOutput() SparkRJobPtrOutput
	ToSparkRJobPtrOutputWithContext(context.Context) SparkRJobPtrOutput
}

type sparkRJobPtrType SparkRJobArgs

func SparkRJobPtr(v *SparkRJobArgs) SparkRJobPtrInput {
	return (*sparkRJobPtrType)(v)
}

func (*sparkRJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkRJob)(nil)).Elem()
}

func (i *sparkRJobPtrType) ToSparkRJobPtrOutput() SparkRJobPtrOutput {
	return i.ToSparkRJobPtrOutputWithContext(context.Background())
}

func (i *sparkRJobPtrType) ToSparkRJobPtrOutputWithContext(ctx context.Context) SparkRJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkRJobPtrOutput)
}

// A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.
type SparkRJobOutput struct{ *pulumi.OutputState }

func (SparkRJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkRJob)(nil)).Elem()
}

func (o SparkRJobOutput) ToSparkRJobOutput() SparkRJobOutput {
	return o
}

func (o SparkRJobOutput) ToSparkRJobOutputWithContext(ctx context.Context) SparkRJobOutput {
	return o
}

func (o SparkRJobOutput) ToSparkRJobPtrOutput() SparkRJobPtrOutput {
	return o.ToSparkRJobPtrOutputWithContext(context.Background())
}

func (o SparkRJobOutput) ToSparkRJobPtrOutputWithContext(ctx context.Context) SparkRJobPtrOutput {
	return o.ApplyT(func(v SparkRJob) *SparkRJob {
		return &v
	}).(SparkRJobPtrOutput)
}

// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o SparkRJobOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkRJob) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o SparkRJobOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkRJob) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
func (o SparkRJobOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkRJob) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o SparkRJobOutput) LoggingConfig() LoggingConfigPtrOutput {
	return o.ApplyT(func(v SparkRJob) *LoggingConfig { return v.LoggingConfig }).(LoggingConfigPtrOutput)
}

// The HCFS URI of the main R file to use as the driver. Must be a .R file.
func (o SparkRJobOutput) MainRFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v SparkRJob) string { return v.MainRFileUri }).(pulumi.StringOutput)
}

// Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
func (o SparkRJobOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v SparkRJob) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type SparkRJobPtrOutput struct{ *pulumi.OutputState }

func (SparkRJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkRJob)(nil)).Elem()
}

func (o SparkRJobPtrOutput) ToSparkRJobPtrOutput() SparkRJobPtrOutput {
	return o
}

func (o SparkRJobPtrOutput) ToSparkRJobPtrOutputWithContext(ctx context.Context) SparkRJobPtrOutput {
	return o
}

func (o SparkRJobPtrOutput) Elem() SparkRJobOutput {
	return o.ApplyT(func(v *SparkRJob) SparkRJob { return *v }).(SparkRJobOutput)
}

// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o SparkRJobPtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkRJob) []string {
		if v == nil {
			return nil
		}
		return v.ArchiveUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o SparkRJobPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkRJob) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
func (o SparkRJobPtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkRJob) []string {
		if v == nil {
			return nil
		}
		return v.FileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o SparkRJobPtrOutput) LoggingConfig() LoggingConfigPtrOutput {
	return o.ApplyT(func(v *SparkRJob) *LoggingConfig {
		if v == nil {
			return nil
		}
		return v.LoggingConfig
	}).(LoggingConfigPtrOutput)
}

// The HCFS URI of the main R file to use as the driver. Must be a .R file.
func (o SparkRJobPtrOutput) MainRFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SparkRJob) *string {
		if v == nil {
			return nil
		}
		return &v.MainRFileUri
	}).(pulumi.StringPtrOutput)
}

// Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
func (o SparkRJobPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SparkRJob) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.
type SparkRJobResponse struct {
	// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigResponse `pulumi:"loggingConfig"`
	// The HCFS URI of the main R file to use as the driver. Must be a .R file.
	MainRFileUri string `pulumi:"mainRFileUri"`
	// Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
	Properties map[string]string `pulumi:"properties"`
}

// SparkRJobResponseInput is an input type that accepts SparkRJobResponseArgs and SparkRJobResponseOutput values.
// You can construct a concrete instance of `SparkRJobResponseInput` via:
//
//          SparkRJobResponseArgs{...}
type SparkRJobResponseInput interface {
	pulumi.Input

	ToSparkRJobResponseOutput() SparkRJobResponseOutput
	ToSparkRJobResponseOutputWithContext(context.Context) SparkRJobResponseOutput
}

// A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.
type SparkRJobResponseArgs struct {
	// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigResponseInput `pulumi:"loggingConfig"`
	// The HCFS URI of the main R file to use as the driver. Must be a .R file.
	MainRFileUri pulumi.StringInput `pulumi:"mainRFileUri"`
	// Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (SparkRJobResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkRJobResponse)(nil)).Elem()
}

func (i SparkRJobResponseArgs) ToSparkRJobResponseOutput() SparkRJobResponseOutput {
	return i.ToSparkRJobResponseOutputWithContext(context.Background())
}

func (i SparkRJobResponseArgs) ToSparkRJobResponseOutputWithContext(ctx context.Context) SparkRJobResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkRJobResponseOutput)
}

func (i SparkRJobResponseArgs) ToSparkRJobResponsePtrOutput() SparkRJobResponsePtrOutput {
	return i.ToSparkRJobResponsePtrOutputWithContext(context.Background())
}

func (i SparkRJobResponseArgs) ToSparkRJobResponsePtrOutputWithContext(ctx context.Context) SparkRJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkRJobResponseOutput).ToSparkRJobResponsePtrOutputWithContext(ctx)
}

// SparkRJobResponsePtrInput is an input type that accepts SparkRJobResponseArgs, SparkRJobResponsePtr and SparkRJobResponsePtrOutput values.
// You can construct a concrete instance of `SparkRJobResponsePtrInput` via:
//
//          SparkRJobResponseArgs{...}
//
//  or:
//
//          nil
type SparkRJobResponsePtrInput interface {
	pulumi.Input

	ToSparkRJobResponsePtrOutput() SparkRJobResponsePtrOutput
	ToSparkRJobResponsePtrOutputWithContext(context.Context) SparkRJobResponsePtrOutput
}

type sparkRJobResponsePtrType SparkRJobResponseArgs

func SparkRJobResponsePtr(v *SparkRJobResponseArgs) SparkRJobResponsePtrInput {
	return (*sparkRJobResponsePtrType)(v)
}

func (*sparkRJobResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkRJobResponse)(nil)).Elem()
}

func (i *sparkRJobResponsePtrType) ToSparkRJobResponsePtrOutput() SparkRJobResponsePtrOutput {
	return i.ToSparkRJobResponsePtrOutputWithContext(context.Background())
}

func (i *sparkRJobResponsePtrType) ToSparkRJobResponsePtrOutputWithContext(ctx context.Context) SparkRJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkRJobResponsePtrOutput)
}

// A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.
type SparkRJobResponseOutput struct{ *pulumi.OutputState }

func (SparkRJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkRJobResponse)(nil)).Elem()
}

func (o SparkRJobResponseOutput) ToSparkRJobResponseOutput() SparkRJobResponseOutput {
	return o
}

func (o SparkRJobResponseOutput) ToSparkRJobResponseOutputWithContext(ctx context.Context) SparkRJobResponseOutput {
	return o
}

func (o SparkRJobResponseOutput) ToSparkRJobResponsePtrOutput() SparkRJobResponsePtrOutput {
	return o.ToSparkRJobResponsePtrOutputWithContext(context.Background())
}

func (o SparkRJobResponseOutput) ToSparkRJobResponsePtrOutputWithContext(ctx context.Context) SparkRJobResponsePtrOutput {
	return o.ApplyT(func(v SparkRJobResponse) *SparkRJobResponse {
		return &v
	}).(SparkRJobResponsePtrOutput)
}

// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o SparkRJobResponseOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkRJobResponse) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o SparkRJobResponseOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkRJobResponse) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
func (o SparkRJobResponseOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkRJobResponse) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o SparkRJobResponseOutput) LoggingConfig() LoggingConfigResponseOutput {
	return o.ApplyT(func(v SparkRJobResponse) LoggingConfigResponse { return v.LoggingConfig }).(LoggingConfigResponseOutput)
}

// The HCFS URI of the main R file to use as the driver. Must be a .R file.
func (o SparkRJobResponseOutput) MainRFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v SparkRJobResponse) string { return v.MainRFileUri }).(pulumi.StringOutput)
}

// Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
func (o SparkRJobResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v SparkRJobResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type SparkRJobResponsePtrOutput struct{ *pulumi.OutputState }

func (SparkRJobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkRJobResponse)(nil)).Elem()
}

func (o SparkRJobResponsePtrOutput) ToSparkRJobResponsePtrOutput() SparkRJobResponsePtrOutput {
	return o
}

func (o SparkRJobResponsePtrOutput) ToSparkRJobResponsePtrOutputWithContext(ctx context.Context) SparkRJobResponsePtrOutput {
	return o
}

func (o SparkRJobResponsePtrOutput) Elem() SparkRJobResponseOutput {
	return o.ApplyT(func(v *SparkRJobResponse) SparkRJobResponse { return *v }).(SparkRJobResponseOutput)
}

// Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o SparkRJobResponsePtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkRJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.ArchiveUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o SparkRJobResponsePtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkRJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
func (o SparkRJobResponsePtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkRJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.FileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o SparkRJobResponsePtrOutput) LoggingConfig() LoggingConfigResponsePtrOutput {
	return o.ApplyT(func(v *SparkRJobResponse) *LoggingConfigResponse {
		if v == nil {
			return nil
		}
		return &v.LoggingConfig
	}).(LoggingConfigResponsePtrOutput)
}

// The HCFS URI of the main R file to use as the driver. Must be a .R file.
func (o SparkRJobResponsePtrOutput) MainRFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SparkRJobResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MainRFileUri
	}).(pulumi.StringPtrOutput)
}

// Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
func (o SparkRJobResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SparkRJobResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// A Dataproc job for running Apache Spark SQL (http://spark.apache.org/sql/) queries.
type SparkSqlJob struct {
	// Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris []string `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig *LoggingConfig `pulumi:"loggingConfig"`
	// Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	QueryFileUri *string `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList *QueryList `pulumi:"queryList"`
	// Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

// SparkSqlJobInput is an input type that accepts SparkSqlJobArgs and SparkSqlJobOutput values.
// You can construct a concrete instance of `SparkSqlJobInput` via:
//
//          SparkSqlJobArgs{...}
type SparkSqlJobInput interface {
	pulumi.Input

	ToSparkSqlJobOutput() SparkSqlJobOutput
	ToSparkSqlJobOutputWithContext(context.Context) SparkSqlJobOutput
}

// A Dataproc job for running Apache Spark SQL (http://spark.apache.org/sql/) queries.
type SparkSqlJobArgs struct {
	// Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigPtrInput `pulumi:"loggingConfig"`
	// Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	QueryFileUri pulumi.StringPtrInput `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList QueryListPtrInput `pulumi:"queryList"`
	// Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (SparkSqlJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkSqlJob)(nil)).Elem()
}

func (i SparkSqlJobArgs) ToSparkSqlJobOutput() SparkSqlJobOutput {
	return i.ToSparkSqlJobOutputWithContext(context.Background())
}

func (i SparkSqlJobArgs) ToSparkSqlJobOutputWithContext(ctx context.Context) SparkSqlJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkSqlJobOutput)
}

func (i SparkSqlJobArgs) ToSparkSqlJobPtrOutput() SparkSqlJobPtrOutput {
	return i.ToSparkSqlJobPtrOutputWithContext(context.Background())
}

func (i SparkSqlJobArgs) ToSparkSqlJobPtrOutputWithContext(ctx context.Context) SparkSqlJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkSqlJobOutput).ToSparkSqlJobPtrOutputWithContext(ctx)
}

// SparkSqlJobPtrInput is an input type that accepts SparkSqlJobArgs, SparkSqlJobPtr and SparkSqlJobPtrOutput values.
// You can construct a concrete instance of `SparkSqlJobPtrInput` via:
//
//          SparkSqlJobArgs{...}
//
//  or:
//
//          nil
type SparkSqlJobPtrInput interface {
	pulumi.Input

	ToSparkSqlJobPtrOutput() SparkSqlJobPtrOutput
	ToSparkSqlJobPtrOutputWithContext(context.Context) SparkSqlJobPtrOutput
}

type sparkSqlJobPtrType SparkSqlJobArgs

func SparkSqlJobPtr(v *SparkSqlJobArgs) SparkSqlJobPtrInput {
	return (*sparkSqlJobPtrType)(v)
}

func (*sparkSqlJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkSqlJob)(nil)).Elem()
}

func (i *sparkSqlJobPtrType) ToSparkSqlJobPtrOutput() SparkSqlJobPtrOutput {
	return i.ToSparkSqlJobPtrOutputWithContext(context.Background())
}

func (i *sparkSqlJobPtrType) ToSparkSqlJobPtrOutputWithContext(ctx context.Context) SparkSqlJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkSqlJobPtrOutput)
}

// A Dataproc job for running Apache Spark SQL (http://spark.apache.org/sql/) queries.
type SparkSqlJobOutput struct{ *pulumi.OutputState }

func (SparkSqlJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkSqlJob)(nil)).Elem()
}

func (o SparkSqlJobOutput) ToSparkSqlJobOutput() SparkSqlJobOutput {
	return o
}

func (o SparkSqlJobOutput) ToSparkSqlJobOutputWithContext(ctx context.Context) SparkSqlJobOutput {
	return o
}

func (o SparkSqlJobOutput) ToSparkSqlJobPtrOutput() SparkSqlJobPtrOutput {
	return o.ToSparkSqlJobPtrOutputWithContext(context.Background())
}

func (o SparkSqlJobOutput) ToSparkSqlJobPtrOutputWithContext(ctx context.Context) SparkSqlJobPtrOutput {
	return o.ApplyT(func(v SparkSqlJob) *SparkSqlJob {
		return &v
	}).(SparkSqlJobPtrOutput)
}

// Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o SparkSqlJobOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkSqlJob) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o SparkSqlJobOutput) LoggingConfig() LoggingConfigPtrOutput {
	return o.ApplyT(func(v SparkSqlJob) *LoggingConfig { return v.LoggingConfig }).(LoggingConfigPtrOutput)
}

// Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API may be overwritten.
func (o SparkSqlJobOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v SparkSqlJob) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
func (o SparkSqlJobOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SparkSqlJob) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

// A list of queries.
func (o SparkSqlJobOutput) QueryList() QueryListPtrOutput {
	return o.ApplyT(func(v SparkSqlJob) *QueryList { return v.QueryList }).(QueryListPtrOutput)
}

// Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
func (o SparkSqlJobOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v SparkSqlJob) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type SparkSqlJobPtrOutput struct{ *pulumi.OutputState }

func (SparkSqlJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkSqlJob)(nil)).Elem()
}

func (o SparkSqlJobPtrOutput) ToSparkSqlJobPtrOutput() SparkSqlJobPtrOutput {
	return o
}

func (o SparkSqlJobPtrOutput) ToSparkSqlJobPtrOutputWithContext(ctx context.Context) SparkSqlJobPtrOutput {
	return o
}

func (o SparkSqlJobPtrOutput) Elem() SparkSqlJobOutput {
	return o.ApplyT(func(v *SparkSqlJob) SparkSqlJob { return *v }).(SparkSqlJobOutput)
}

// Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o SparkSqlJobPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkSqlJob) []string {
		if v == nil {
			return nil
		}
		return v.JarFileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o SparkSqlJobPtrOutput) LoggingConfig() LoggingConfigPtrOutput {
	return o.ApplyT(func(v *SparkSqlJob) *LoggingConfig {
		if v == nil {
			return nil
		}
		return v.LoggingConfig
	}).(LoggingConfigPtrOutput)
}

// Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API may be overwritten.
func (o SparkSqlJobPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SparkSqlJob) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
func (o SparkSqlJobPtrOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SparkSqlJob) *string {
		if v == nil {
			return nil
		}
		return v.QueryFileUri
	}).(pulumi.StringPtrOutput)
}

// A list of queries.
func (o SparkSqlJobPtrOutput) QueryList() QueryListPtrOutput {
	return o.ApplyT(func(v *SparkSqlJob) *QueryList {
		if v == nil {
			return nil
		}
		return v.QueryList
	}).(QueryListPtrOutput)
}

// Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
func (o SparkSqlJobPtrOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SparkSqlJob) map[string]string {
		if v == nil {
			return nil
		}
		return v.ScriptVariables
	}).(pulumi.StringMapOutput)
}

// A Dataproc job for running Apache Spark SQL (http://spark.apache.org/sql/) queries.
type SparkSqlJobResponse struct {
	// Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris []string `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigResponse `pulumi:"loggingConfig"`
	// Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	QueryFileUri string `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList QueryListResponse `pulumi:"queryList"`
	// Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

// SparkSqlJobResponseInput is an input type that accepts SparkSqlJobResponseArgs and SparkSqlJobResponseOutput values.
// You can construct a concrete instance of `SparkSqlJobResponseInput` via:
//
//          SparkSqlJobResponseArgs{...}
type SparkSqlJobResponseInput interface {
	pulumi.Input

	ToSparkSqlJobResponseOutput() SparkSqlJobResponseOutput
	ToSparkSqlJobResponseOutputWithContext(context.Context) SparkSqlJobResponseOutput
}

// A Dataproc job for running Apache Spark SQL (http://spark.apache.org/sql/) queries.
type SparkSqlJobResponseArgs struct {
	// Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// Optional. The runtime log config for job execution.
	LoggingConfig LoggingConfigResponseInput `pulumi:"loggingConfig"`
	// Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	QueryFileUri pulumi.StringInput `pulumi:"queryFileUri"`
	// A list of queries.
	QueryList QueryListResponseInput `pulumi:"queryList"`
	// Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (SparkSqlJobResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkSqlJobResponse)(nil)).Elem()
}

func (i SparkSqlJobResponseArgs) ToSparkSqlJobResponseOutput() SparkSqlJobResponseOutput {
	return i.ToSparkSqlJobResponseOutputWithContext(context.Background())
}

func (i SparkSqlJobResponseArgs) ToSparkSqlJobResponseOutputWithContext(ctx context.Context) SparkSqlJobResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkSqlJobResponseOutput)
}

func (i SparkSqlJobResponseArgs) ToSparkSqlJobResponsePtrOutput() SparkSqlJobResponsePtrOutput {
	return i.ToSparkSqlJobResponsePtrOutputWithContext(context.Background())
}

func (i SparkSqlJobResponseArgs) ToSparkSqlJobResponsePtrOutputWithContext(ctx context.Context) SparkSqlJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkSqlJobResponseOutput).ToSparkSqlJobResponsePtrOutputWithContext(ctx)
}

// SparkSqlJobResponsePtrInput is an input type that accepts SparkSqlJobResponseArgs, SparkSqlJobResponsePtr and SparkSqlJobResponsePtrOutput values.
// You can construct a concrete instance of `SparkSqlJobResponsePtrInput` via:
//
//          SparkSqlJobResponseArgs{...}
//
//  or:
//
//          nil
type SparkSqlJobResponsePtrInput interface {
	pulumi.Input

	ToSparkSqlJobResponsePtrOutput() SparkSqlJobResponsePtrOutput
	ToSparkSqlJobResponsePtrOutputWithContext(context.Context) SparkSqlJobResponsePtrOutput
}

type sparkSqlJobResponsePtrType SparkSqlJobResponseArgs

func SparkSqlJobResponsePtr(v *SparkSqlJobResponseArgs) SparkSqlJobResponsePtrInput {
	return (*sparkSqlJobResponsePtrType)(v)
}

func (*sparkSqlJobResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkSqlJobResponse)(nil)).Elem()
}

func (i *sparkSqlJobResponsePtrType) ToSparkSqlJobResponsePtrOutput() SparkSqlJobResponsePtrOutput {
	return i.ToSparkSqlJobResponsePtrOutputWithContext(context.Background())
}

func (i *sparkSqlJobResponsePtrType) ToSparkSqlJobResponsePtrOutputWithContext(ctx context.Context) SparkSqlJobResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkSqlJobResponsePtrOutput)
}

// A Dataproc job for running Apache Spark SQL (http://spark.apache.org/sql/) queries.
type SparkSqlJobResponseOutput struct{ *pulumi.OutputState }

func (SparkSqlJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkSqlJobResponse)(nil)).Elem()
}

func (o SparkSqlJobResponseOutput) ToSparkSqlJobResponseOutput() SparkSqlJobResponseOutput {
	return o
}

func (o SparkSqlJobResponseOutput) ToSparkSqlJobResponseOutputWithContext(ctx context.Context) SparkSqlJobResponseOutput {
	return o
}

func (o SparkSqlJobResponseOutput) ToSparkSqlJobResponsePtrOutput() SparkSqlJobResponsePtrOutput {
	return o.ToSparkSqlJobResponsePtrOutputWithContext(context.Background())
}

func (o SparkSqlJobResponseOutput) ToSparkSqlJobResponsePtrOutputWithContext(ctx context.Context) SparkSqlJobResponsePtrOutput {
	return o.ApplyT(func(v SparkSqlJobResponse) *SparkSqlJobResponse {
		return &v
	}).(SparkSqlJobResponsePtrOutput)
}

// Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o SparkSqlJobResponseOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SparkSqlJobResponse) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o SparkSqlJobResponseOutput) LoggingConfig() LoggingConfigResponseOutput {
	return o.ApplyT(func(v SparkSqlJobResponse) LoggingConfigResponse { return v.LoggingConfig }).(LoggingConfigResponseOutput)
}

// Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API may be overwritten.
func (o SparkSqlJobResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v SparkSqlJobResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
func (o SparkSqlJobResponseOutput) QueryFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v SparkSqlJobResponse) string { return v.QueryFileUri }).(pulumi.StringOutput)
}

// A list of queries.
func (o SparkSqlJobResponseOutput) QueryList() QueryListResponseOutput {
	return o.ApplyT(func(v SparkSqlJobResponse) QueryListResponse { return v.QueryList }).(QueryListResponseOutput)
}

// Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
func (o SparkSqlJobResponseOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v SparkSqlJobResponse) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type SparkSqlJobResponsePtrOutput struct{ *pulumi.OutputState }

func (SparkSqlJobResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkSqlJobResponse)(nil)).Elem()
}

func (o SparkSqlJobResponsePtrOutput) ToSparkSqlJobResponsePtrOutput() SparkSqlJobResponsePtrOutput {
	return o
}

func (o SparkSqlJobResponsePtrOutput) ToSparkSqlJobResponsePtrOutputWithContext(ctx context.Context) SparkSqlJobResponsePtrOutput {
	return o
}

func (o SparkSqlJobResponsePtrOutput) Elem() SparkSqlJobResponseOutput {
	return o.ApplyT(func(v *SparkSqlJobResponse) SparkSqlJobResponse { return *v }).(SparkSqlJobResponseOutput)
}

// Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o SparkSqlJobResponsePtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SparkSqlJobResponse) []string {
		if v == nil {
			return nil
		}
		return v.JarFileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. The runtime log config for job execution.
func (o SparkSqlJobResponsePtrOutput) LoggingConfig() LoggingConfigResponsePtrOutput {
	return o.ApplyT(func(v *SparkSqlJobResponse) *LoggingConfigResponse {
		if v == nil {
			return nil
		}
		return &v.LoggingConfig
	}).(LoggingConfigResponsePtrOutput)
}

// Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API may be overwritten.
func (o SparkSqlJobResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SparkSqlJobResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
func (o SparkSqlJobResponsePtrOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SparkSqlJobResponse) *string {
		if v == nil {
			return nil
		}
		return &v.QueryFileUri
	}).(pulumi.StringPtrOutput)
}

// A list of queries.
func (o SparkSqlJobResponsePtrOutput) QueryList() QueryListResponsePtrOutput {
	return o.ApplyT(func(v *SparkSqlJobResponse) *QueryListResponse {
		if v == nil {
			return nil
		}
		return &v.QueryList
	}).(QueryListResponsePtrOutput)
}

// Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
func (o SparkSqlJobResponsePtrOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SparkSqlJobResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.ScriptVariables
	}).(pulumi.StringMapOutput)
}

// A configurable parameter that replaces one or more fields in the template. Parameterizable fields: - Labels - File uris - Job properties - Job arguments - Script variables - Main class (in HadoopJob and SparkJob) - Zone (in ClusterSelector)
type TemplateParameter struct {
	// Optional. Brief description of the parameter. Must not exceed 1024 characters.
	Description *string `pulumi:"description"`
	// Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax: Values in maps can be referenced by key: labels'key' placement.clusterSelector.clusterLabels'key' placement.managedCluster.labels'key' placement.clusterSelector.clusterLabels'key' jobs'step-id'.labels'key' Jobs in the jobs list can be referenced by step-id: jobs'step-id'.hadoopJob.mainJarFileUri jobs'step-id'.hiveJob.queryFileUri jobs'step-id'.pySparkJob.mainPythonFileUri jobs'step-id'.hadoopJob.jarFileUris0 jobs'step-id'.hadoopJob.archiveUris0 jobs'step-id'.hadoopJob.fileUris0 jobs'step-id'.pySparkJob.pythonFileUris0 Items in repeated fields can be referenced by a zero-based index: jobs'step-id'.sparkJob.args0 Other examples: jobs'step-id'.hadoopJob.properties'key' jobs'step-id'.hadoopJob.args0 jobs'step-id'.hiveJob.scriptVariables'key' jobs'step-id'.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: placement.clusterSelector.clusterLabels jobs'step-id'.sparkJob.args
	Fields []string `pulumi:"fields"`
	// Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.
	Name string `pulumi:"name"`
	// Optional. Validation rules to be applied to this parameter's value.
	Validation *ParameterValidation `pulumi:"validation"`
}

// TemplateParameterInput is an input type that accepts TemplateParameterArgs and TemplateParameterOutput values.
// You can construct a concrete instance of `TemplateParameterInput` via:
//
//          TemplateParameterArgs{...}
type TemplateParameterInput interface {
	pulumi.Input

	ToTemplateParameterOutput() TemplateParameterOutput
	ToTemplateParameterOutputWithContext(context.Context) TemplateParameterOutput
}

// A configurable parameter that replaces one or more fields in the template. Parameterizable fields: - Labels - File uris - Job properties - Job arguments - Script variables - Main class (in HadoopJob and SparkJob) - Zone (in ClusterSelector)
type TemplateParameterArgs struct {
	// Optional. Brief description of the parameter. Must not exceed 1024 characters.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax: Values in maps can be referenced by key: labels'key' placement.clusterSelector.clusterLabels'key' placement.managedCluster.labels'key' placement.clusterSelector.clusterLabels'key' jobs'step-id'.labels'key' Jobs in the jobs list can be referenced by step-id: jobs'step-id'.hadoopJob.mainJarFileUri jobs'step-id'.hiveJob.queryFileUri jobs'step-id'.pySparkJob.mainPythonFileUri jobs'step-id'.hadoopJob.jarFileUris0 jobs'step-id'.hadoopJob.archiveUris0 jobs'step-id'.hadoopJob.fileUris0 jobs'step-id'.pySparkJob.pythonFileUris0 Items in repeated fields can be referenced by a zero-based index: jobs'step-id'.sparkJob.args0 Other examples: jobs'step-id'.hadoopJob.properties'key' jobs'step-id'.hadoopJob.args0 jobs'step-id'.hiveJob.scriptVariables'key' jobs'step-id'.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: placement.clusterSelector.clusterLabels jobs'step-id'.sparkJob.args
	Fields pulumi.StringArrayInput `pulumi:"fields"`
	// Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.
	Name pulumi.StringInput `pulumi:"name"`
	// Optional. Validation rules to be applied to this parameter's value.
	Validation ParameterValidationPtrInput `pulumi:"validation"`
}

func (TemplateParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameter)(nil)).Elem()
}

func (i TemplateParameterArgs) ToTemplateParameterOutput() TemplateParameterOutput {
	return i.ToTemplateParameterOutputWithContext(context.Background())
}

func (i TemplateParameterArgs) ToTemplateParameterOutputWithContext(ctx context.Context) TemplateParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterOutput)
}

// TemplateParameterArrayInput is an input type that accepts TemplateParameterArray and TemplateParameterArrayOutput values.
// You can construct a concrete instance of `TemplateParameterArrayInput` via:
//
//          TemplateParameterArray{ TemplateParameterArgs{...} }
type TemplateParameterArrayInput interface {
	pulumi.Input

	ToTemplateParameterArrayOutput() TemplateParameterArrayOutput
	ToTemplateParameterArrayOutputWithContext(context.Context) TemplateParameterArrayOutput
}

type TemplateParameterArray []TemplateParameterInput

func (TemplateParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateParameter)(nil)).Elem()
}

func (i TemplateParameterArray) ToTemplateParameterArrayOutput() TemplateParameterArrayOutput {
	return i.ToTemplateParameterArrayOutputWithContext(context.Background())
}

func (i TemplateParameterArray) ToTemplateParameterArrayOutputWithContext(ctx context.Context) TemplateParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterArrayOutput)
}

// A configurable parameter that replaces one or more fields in the template. Parameterizable fields: - Labels - File uris - Job properties - Job arguments - Script variables - Main class (in HadoopJob and SparkJob) - Zone (in ClusterSelector)
type TemplateParameterOutput struct{ *pulumi.OutputState }

func (TemplateParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameter)(nil)).Elem()
}

func (o TemplateParameterOutput) ToTemplateParameterOutput() TemplateParameterOutput {
	return o
}

func (o TemplateParameterOutput) ToTemplateParameterOutputWithContext(ctx context.Context) TemplateParameterOutput {
	return o
}

// Optional. Brief description of the parameter. Must not exceed 1024 characters.
func (o TemplateParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax: Values in maps can be referenced by key: labels'key' placement.clusterSelector.clusterLabels'key' placement.managedCluster.labels'key' placement.clusterSelector.clusterLabels'key' jobs'step-id'.labels'key' Jobs in the jobs list can be referenced by step-id: jobs'step-id'.hadoopJob.mainJarFileUri jobs'step-id'.hiveJob.queryFileUri jobs'step-id'.pySparkJob.mainPythonFileUri jobs'step-id'.hadoopJob.jarFileUris0 jobs'step-id'.hadoopJob.archiveUris0 jobs'step-id'.hadoopJob.fileUris0 jobs'step-id'.pySparkJob.pythonFileUris0 Items in repeated fields can be referenced by a zero-based index: jobs'step-id'.sparkJob.args0 Other examples: jobs'step-id'.hadoopJob.properties'key' jobs'step-id'.hadoopJob.args0 jobs'step-id'.hiveJob.scriptVariables'key' jobs'step-id'.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: placement.clusterSelector.clusterLabels jobs'step-id'.sparkJob.args
func (o TemplateParameterOutput) Fields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateParameter) []string { return v.Fields }).(pulumi.StringArrayOutput)
}

// Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.
func (o TemplateParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. Validation rules to be applied to this parameter's value.
func (o TemplateParameterOutput) Validation() ParameterValidationPtrOutput {
	return o.ApplyT(func(v TemplateParameter) *ParameterValidation { return v.Validation }).(ParameterValidationPtrOutput)
}

type TemplateParameterArrayOutput struct{ *pulumi.OutputState }

func (TemplateParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateParameter)(nil)).Elem()
}

func (o TemplateParameterArrayOutput) ToTemplateParameterArrayOutput() TemplateParameterArrayOutput {
	return o
}

func (o TemplateParameterArrayOutput) ToTemplateParameterArrayOutputWithContext(ctx context.Context) TemplateParameterArrayOutput {
	return o
}

func (o TemplateParameterArrayOutput) Index(i pulumi.IntInput) TemplateParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateParameter {
		return vs[0].([]TemplateParameter)[vs[1].(int)]
	}).(TemplateParameterOutput)
}

// A configurable parameter that replaces one or more fields in the template. Parameterizable fields: - Labels - File uris - Job properties - Job arguments - Script variables - Main class (in HadoopJob and SparkJob) - Zone (in ClusterSelector)
type TemplateParameterResponse struct {
	// Optional. Brief description of the parameter. Must not exceed 1024 characters.
	Description string `pulumi:"description"`
	// Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax: Values in maps can be referenced by key: labels'key' placement.clusterSelector.clusterLabels'key' placement.managedCluster.labels'key' placement.clusterSelector.clusterLabels'key' jobs'step-id'.labels'key' Jobs in the jobs list can be referenced by step-id: jobs'step-id'.hadoopJob.mainJarFileUri jobs'step-id'.hiveJob.queryFileUri jobs'step-id'.pySparkJob.mainPythonFileUri jobs'step-id'.hadoopJob.jarFileUris0 jobs'step-id'.hadoopJob.archiveUris0 jobs'step-id'.hadoopJob.fileUris0 jobs'step-id'.pySparkJob.pythonFileUris0 Items in repeated fields can be referenced by a zero-based index: jobs'step-id'.sparkJob.args0 Other examples: jobs'step-id'.hadoopJob.properties'key' jobs'step-id'.hadoopJob.args0 jobs'step-id'.hiveJob.scriptVariables'key' jobs'step-id'.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: placement.clusterSelector.clusterLabels jobs'step-id'.sparkJob.args
	Fields []string `pulumi:"fields"`
	// Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.
	Name string `pulumi:"name"`
	// Optional. Validation rules to be applied to this parameter's value.
	Validation ParameterValidationResponse `pulumi:"validation"`
}

// TemplateParameterResponseInput is an input type that accepts TemplateParameterResponseArgs and TemplateParameterResponseOutput values.
// You can construct a concrete instance of `TemplateParameterResponseInput` via:
//
//          TemplateParameterResponseArgs{...}
type TemplateParameterResponseInput interface {
	pulumi.Input

	ToTemplateParameterResponseOutput() TemplateParameterResponseOutput
	ToTemplateParameterResponseOutputWithContext(context.Context) TemplateParameterResponseOutput
}

// A configurable parameter that replaces one or more fields in the template. Parameterizable fields: - Labels - File uris - Job properties - Job arguments - Script variables - Main class (in HadoopJob and SparkJob) - Zone (in ClusterSelector)
type TemplateParameterResponseArgs struct {
	// Optional. Brief description of the parameter. Must not exceed 1024 characters.
	Description pulumi.StringInput `pulumi:"description"`
	// Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax: Values in maps can be referenced by key: labels'key' placement.clusterSelector.clusterLabels'key' placement.managedCluster.labels'key' placement.clusterSelector.clusterLabels'key' jobs'step-id'.labels'key' Jobs in the jobs list can be referenced by step-id: jobs'step-id'.hadoopJob.mainJarFileUri jobs'step-id'.hiveJob.queryFileUri jobs'step-id'.pySparkJob.mainPythonFileUri jobs'step-id'.hadoopJob.jarFileUris0 jobs'step-id'.hadoopJob.archiveUris0 jobs'step-id'.hadoopJob.fileUris0 jobs'step-id'.pySparkJob.pythonFileUris0 Items in repeated fields can be referenced by a zero-based index: jobs'step-id'.sparkJob.args0 Other examples: jobs'step-id'.hadoopJob.properties'key' jobs'step-id'.hadoopJob.args0 jobs'step-id'.hiveJob.scriptVariables'key' jobs'step-id'.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: placement.clusterSelector.clusterLabels jobs'step-id'.sparkJob.args
	Fields pulumi.StringArrayInput `pulumi:"fields"`
	// Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.
	Name pulumi.StringInput `pulumi:"name"`
	// Optional. Validation rules to be applied to this parameter's value.
	Validation ParameterValidationResponseInput `pulumi:"validation"`
}

func (TemplateParameterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterResponse)(nil)).Elem()
}

func (i TemplateParameterResponseArgs) ToTemplateParameterResponseOutput() TemplateParameterResponseOutput {
	return i.ToTemplateParameterResponseOutputWithContext(context.Background())
}

func (i TemplateParameterResponseArgs) ToTemplateParameterResponseOutputWithContext(ctx context.Context) TemplateParameterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterResponseOutput)
}

// TemplateParameterResponseArrayInput is an input type that accepts TemplateParameterResponseArray and TemplateParameterResponseArrayOutput values.
// You can construct a concrete instance of `TemplateParameterResponseArrayInput` via:
//
//          TemplateParameterResponseArray{ TemplateParameterResponseArgs{...} }
type TemplateParameterResponseArrayInput interface {
	pulumi.Input

	ToTemplateParameterResponseArrayOutput() TemplateParameterResponseArrayOutput
	ToTemplateParameterResponseArrayOutputWithContext(context.Context) TemplateParameterResponseArrayOutput
}

type TemplateParameterResponseArray []TemplateParameterResponseInput

func (TemplateParameterResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateParameterResponse)(nil)).Elem()
}

func (i TemplateParameterResponseArray) ToTemplateParameterResponseArrayOutput() TemplateParameterResponseArrayOutput {
	return i.ToTemplateParameterResponseArrayOutputWithContext(context.Background())
}

func (i TemplateParameterResponseArray) ToTemplateParameterResponseArrayOutputWithContext(ctx context.Context) TemplateParameterResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterResponseArrayOutput)
}

// A configurable parameter that replaces one or more fields in the template. Parameterizable fields: - Labels - File uris - Job properties - Job arguments - Script variables - Main class (in HadoopJob and SparkJob) - Zone (in ClusterSelector)
type TemplateParameterResponseOutput struct{ *pulumi.OutputState }

func (TemplateParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterResponse)(nil)).Elem()
}

func (o TemplateParameterResponseOutput) ToTemplateParameterResponseOutput() TemplateParameterResponseOutput {
	return o
}

func (o TemplateParameterResponseOutput) ToTemplateParameterResponseOutputWithContext(ctx context.Context) TemplateParameterResponseOutput {
	return o
}

// Optional. Brief description of the parameter. Must not exceed 1024 characters.
func (o TemplateParameterResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax: Values in maps can be referenced by key: labels'key' placement.clusterSelector.clusterLabels'key' placement.managedCluster.labels'key' placement.clusterSelector.clusterLabels'key' jobs'step-id'.labels'key' Jobs in the jobs list can be referenced by step-id: jobs'step-id'.hadoopJob.mainJarFileUri jobs'step-id'.hiveJob.queryFileUri jobs'step-id'.pySparkJob.mainPythonFileUri jobs'step-id'.hadoopJob.jarFileUris0 jobs'step-id'.hadoopJob.archiveUris0 jobs'step-id'.hadoopJob.fileUris0 jobs'step-id'.pySparkJob.pythonFileUris0 Items in repeated fields can be referenced by a zero-based index: jobs'step-id'.sparkJob.args0 Other examples: jobs'step-id'.hadoopJob.properties'key' jobs'step-id'.hadoopJob.args0 jobs'step-id'.hiveJob.scriptVariables'key' jobs'step-id'.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: placement.clusterSelector.clusterLabels jobs'step-id'.sparkJob.args
func (o TemplateParameterResponseOutput) Fields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateParameterResponse) []string { return v.Fields }).(pulumi.StringArrayOutput)
}

// Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.
func (o TemplateParameterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. Validation rules to be applied to this parameter's value.
func (o TemplateParameterResponseOutput) Validation() ParameterValidationResponseOutput {
	return o.ApplyT(func(v TemplateParameterResponse) ParameterValidationResponse { return v.Validation }).(ParameterValidationResponseOutput)
}

type TemplateParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (TemplateParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateParameterResponse)(nil)).Elem()
}

func (o TemplateParameterResponseArrayOutput) ToTemplateParameterResponseArrayOutput() TemplateParameterResponseArrayOutput {
	return o
}

func (o TemplateParameterResponseArrayOutput) ToTemplateParameterResponseArrayOutputWithContext(ctx context.Context) TemplateParameterResponseArrayOutput {
	return o
}

func (o TemplateParameterResponseArrayOutput) Index(i pulumi.IntInput) TemplateParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateParameterResponse {
		return vs[0].([]TemplateParameterResponse)[vs[1].(int)]
	}).(TemplateParameterResponseOutput)
}

// Validation based on a list of allowed values.
type ValueValidation struct {
	// List of allowed values for the parameter.
	Values []string `pulumi:"values"`
}

// ValueValidationInput is an input type that accepts ValueValidationArgs and ValueValidationOutput values.
// You can construct a concrete instance of `ValueValidationInput` via:
//
//          ValueValidationArgs{...}
type ValueValidationInput interface {
	pulumi.Input

	ToValueValidationOutput() ValueValidationOutput
	ToValueValidationOutputWithContext(context.Context) ValueValidationOutput
}

// Validation based on a list of allowed values.
type ValueValidationArgs struct {
	// List of allowed values for the parameter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ValueValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValueValidation)(nil)).Elem()
}

func (i ValueValidationArgs) ToValueValidationOutput() ValueValidationOutput {
	return i.ToValueValidationOutputWithContext(context.Background())
}

func (i ValueValidationArgs) ToValueValidationOutputWithContext(ctx context.Context) ValueValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValueValidationOutput)
}

func (i ValueValidationArgs) ToValueValidationPtrOutput() ValueValidationPtrOutput {
	return i.ToValueValidationPtrOutputWithContext(context.Background())
}

func (i ValueValidationArgs) ToValueValidationPtrOutputWithContext(ctx context.Context) ValueValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValueValidationOutput).ToValueValidationPtrOutputWithContext(ctx)
}

// ValueValidationPtrInput is an input type that accepts ValueValidationArgs, ValueValidationPtr and ValueValidationPtrOutput values.
// You can construct a concrete instance of `ValueValidationPtrInput` via:
//
//          ValueValidationArgs{...}
//
//  or:
//
//          nil
type ValueValidationPtrInput interface {
	pulumi.Input

	ToValueValidationPtrOutput() ValueValidationPtrOutput
	ToValueValidationPtrOutputWithContext(context.Context) ValueValidationPtrOutput
}

type valueValidationPtrType ValueValidationArgs

func ValueValidationPtr(v *ValueValidationArgs) ValueValidationPtrInput {
	return (*valueValidationPtrType)(v)
}

func (*valueValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValueValidation)(nil)).Elem()
}

func (i *valueValidationPtrType) ToValueValidationPtrOutput() ValueValidationPtrOutput {
	return i.ToValueValidationPtrOutputWithContext(context.Background())
}

func (i *valueValidationPtrType) ToValueValidationPtrOutputWithContext(ctx context.Context) ValueValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValueValidationPtrOutput)
}

// Validation based on a list of allowed values.
type ValueValidationOutput struct{ *pulumi.OutputState }

func (ValueValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValueValidation)(nil)).Elem()
}

func (o ValueValidationOutput) ToValueValidationOutput() ValueValidationOutput {
	return o
}

func (o ValueValidationOutput) ToValueValidationOutputWithContext(ctx context.Context) ValueValidationOutput {
	return o
}

func (o ValueValidationOutput) ToValueValidationPtrOutput() ValueValidationPtrOutput {
	return o.ToValueValidationPtrOutputWithContext(context.Background())
}

func (o ValueValidationOutput) ToValueValidationPtrOutputWithContext(ctx context.Context) ValueValidationPtrOutput {
	return o.ApplyT(func(v ValueValidation) *ValueValidation {
		return &v
	}).(ValueValidationPtrOutput)
}

// List of allowed values for the parameter.
func (o ValueValidationOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ValueValidation) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ValueValidationPtrOutput struct{ *pulumi.OutputState }

func (ValueValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValueValidation)(nil)).Elem()
}

func (o ValueValidationPtrOutput) ToValueValidationPtrOutput() ValueValidationPtrOutput {
	return o
}

func (o ValueValidationPtrOutput) ToValueValidationPtrOutputWithContext(ctx context.Context) ValueValidationPtrOutput {
	return o
}

func (o ValueValidationPtrOutput) Elem() ValueValidationOutput {
	return o.ApplyT(func(v *ValueValidation) ValueValidation { return *v }).(ValueValidationOutput)
}

// List of allowed values for the parameter.
func (o ValueValidationPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ValueValidation) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

// Validation based on a list of allowed values.
type ValueValidationResponse struct {
	// List of allowed values for the parameter.
	Values []string `pulumi:"values"`
}

// ValueValidationResponseInput is an input type that accepts ValueValidationResponseArgs and ValueValidationResponseOutput values.
// You can construct a concrete instance of `ValueValidationResponseInput` via:
//
//          ValueValidationResponseArgs{...}
type ValueValidationResponseInput interface {
	pulumi.Input

	ToValueValidationResponseOutput() ValueValidationResponseOutput
	ToValueValidationResponseOutputWithContext(context.Context) ValueValidationResponseOutput
}

// Validation based on a list of allowed values.
type ValueValidationResponseArgs struct {
	// List of allowed values for the parameter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ValueValidationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValueValidationResponse)(nil)).Elem()
}

func (i ValueValidationResponseArgs) ToValueValidationResponseOutput() ValueValidationResponseOutput {
	return i.ToValueValidationResponseOutputWithContext(context.Background())
}

func (i ValueValidationResponseArgs) ToValueValidationResponseOutputWithContext(ctx context.Context) ValueValidationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValueValidationResponseOutput)
}

// Validation based on a list of allowed values.
type ValueValidationResponseOutput struct{ *pulumi.OutputState }

func (ValueValidationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValueValidationResponse)(nil)).Elem()
}

func (o ValueValidationResponseOutput) ToValueValidationResponseOutput() ValueValidationResponseOutput {
	return o
}

func (o ValueValidationResponseOutput) ToValueValidationResponseOutputWithContext(ctx context.Context) ValueValidationResponseOutput {
	return o
}

// List of allowed values for the parameter.
func (o ValueValidationResponseOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ValueValidationResponse) []string { return v.Values }).(pulumi.StringArrayOutput)
}

// Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
type WorkflowTemplatePlacement struct {
	// Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
	ClusterSelector *ClusterSelector `pulumi:"clusterSelector"`
	// A cluster that is managed by the workflow.
	ManagedCluster *ManagedCluster `pulumi:"managedCluster"`
}

// WorkflowTemplatePlacementInput is an input type that accepts WorkflowTemplatePlacementArgs and WorkflowTemplatePlacementOutput values.
// You can construct a concrete instance of `WorkflowTemplatePlacementInput` via:
//
//          WorkflowTemplatePlacementArgs{...}
type WorkflowTemplatePlacementInput interface {
	pulumi.Input

	ToWorkflowTemplatePlacementOutput() WorkflowTemplatePlacementOutput
	ToWorkflowTemplatePlacementOutputWithContext(context.Context) WorkflowTemplatePlacementOutput
}

// Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
type WorkflowTemplatePlacementArgs struct {
	// Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
	ClusterSelector ClusterSelectorPtrInput `pulumi:"clusterSelector"`
	// A cluster that is managed by the workflow.
	ManagedCluster ManagedClusterPtrInput `pulumi:"managedCluster"`
}

func (WorkflowTemplatePlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTemplatePlacement)(nil)).Elem()
}

func (i WorkflowTemplatePlacementArgs) ToWorkflowTemplatePlacementOutput() WorkflowTemplatePlacementOutput {
	return i.ToWorkflowTemplatePlacementOutputWithContext(context.Background())
}

func (i WorkflowTemplatePlacementArgs) ToWorkflowTemplatePlacementOutputWithContext(ctx context.Context) WorkflowTemplatePlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTemplatePlacementOutput)
}

func (i WorkflowTemplatePlacementArgs) ToWorkflowTemplatePlacementPtrOutput() WorkflowTemplatePlacementPtrOutput {
	return i.ToWorkflowTemplatePlacementPtrOutputWithContext(context.Background())
}

func (i WorkflowTemplatePlacementArgs) ToWorkflowTemplatePlacementPtrOutputWithContext(ctx context.Context) WorkflowTemplatePlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTemplatePlacementOutput).ToWorkflowTemplatePlacementPtrOutputWithContext(ctx)
}

// WorkflowTemplatePlacementPtrInput is an input type that accepts WorkflowTemplatePlacementArgs, WorkflowTemplatePlacementPtr and WorkflowTemplatePlacementPtrOutput values.
// You can construct a concrete instance of `WorkflowTemplatePlacementPtrInput` via:
//
//          WorkflowTemplatePlacementArgs{...}
//
//  or:
//
//          nil
type WorkflowTemplatePlacementPtrInput interface {
	pulumi.Input

	ToWorkflowTemplatePlacementPtrOutput() WorkflowTemplatePlacementPtrOutput
	ToWorkflowTemplatePlacementPtrOutputWithContext(context.Context) WorkflowTemplatePlacementPtrOutput
}

type workflowTemplatePlacementPtrType WorkflowTemplatePlacementArgs

func WorkflowTemplatePlacementPtr(v *WorkflowTemplatePlacementArgs) WorkflowTemplatePlacementPtrInput {
	return (*workflowTemplatePlacementPtrType)(v)
}

func (*workflowTemplatePlacementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTemplatePlacement)(nil)).Elem()
}

func (i *workflowTemplatePlacementPtrType) ToWorkflowTemplatePlacementPtrOutput() WorkflowTemplatePlacementPtrOutput {
	return i.ToWorkflowTemplatePlacementPtrOutputWithContext(context.Background())
}

func (i *workflowTemplatePlacementPtrType) ToWorkflowTemplatePlacementPtrOutputWithContext(ctx context.Context) WorkflowTemplatePlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTemplatePlacementPtrOutput)
}

// Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
type WorkflowTemplatePlacementOutput struct{ *pulumi.OutputState }

func (WorkflowTemplatePlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTemplatePlacement)(nil)).Elem()
}

func (o WorkflowTemplatePlacementOutput) ToWorkflowTemplatePlacementOutput() WorkflowTemplatePlacementOutput {
	return o
}

func (o WorkflowTemplatePlacementOutput) ToWorkflowTemplatePlacementOutputWithContext(ctx context.Context) WorkflowTemplatePlacementOutput {
	return o
}

func (o WorkflowTemplatePlacementOutput) ToWorkflowTemplatePlacementPtrOutput() WorkflowTemplatePlacementPtrOutput {
	return o.ToWorkflowTemplatePlacementPtrOutputWithContext(context.Background())
}

func (o WorkflowTemplatePlacementOutput) ToWorkflowTemplatePlacementPtrOutputWithContext(ctx context.Context) WorkflowTemplatePlacementPtrOutput {
	return o.ApplyT(func(v WorkflowTemplatePlacement) *WorkflowTemplatePlacement {
		return &v
	}).(WorkflowTemplatePlacementPtrOutput)
}

// Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
func (o WorkflowTemplatePlacementOutput) ClusterSelector() ClusterSelectorPtrOutput {
	return o.ApplyT(func(v WorkflowTemplatePlacement) *ClusterSelector { return v.ClusterSelector }).(ClusterSelectorPtrOutput)
}

// A cluster that is managed by the workflow.
func (o WorkflowTemplatePlacementOutput) ManagedCluster() ManagedClusterPtrOutput {
	return o.ApplyT(func(v WorkflowTemplatePlacement) *ManagedCluster { return v.ManagedCluster }).(ManagedClusterPtrOutput)
}

type WorkflowTemplatePlacementPtrOutput struct{ *pulumi.OutputState }

func (WorkflowTemplatePlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTemplatePlacement)(nil)).Elem()
}

func (o WorkflowTemplatePlacementPtrOutput) ToWorkflowTemplatePlacementPtrOutput() WorkflowTemplatePlacementPtrOutput {
	return o
}

func (o WorkflowTemplatePlacementPtrOutput) ToWorkflowTemplatePlacementPtrOutputWithContext(ctx context.Context) WorkflowTemplatePlacementPtrOutput {
	return o
}

func (o WorkflowTemplatePlacementPtrOutput) Elem() WorkflowTemplatePlacementOutput {
	return o.ApplyT(func(v *WorkflowTemplatePlacement) WorkflowTemplatePlacement { return *v }).(WorkflowTemplatePlacementOutput)
}

// Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
func (o WorkflowTemplatePlacementPtrOutput) ClusterSelector() ClusterSelectorPtrOutput {
	return o.ApplyT(func(v *WorkflowTemplatePlacement) *ClusterSelector {
		if v == nil {
			return nil
		}
		return v.ClusterSelector
	}).(ClusterSelectorPtrOutput)
}

// A cluster that is managed by the workflow.
func (o WorkflowTemplatePlacementPtrOutput) ManagedCluster() ManagedClusterPtrOutput {
	return o.ApplyT(func(v *WorkflowTemplatePlacement) *ManagedCluster {
		if v == nil {
			return nil
		}
		return v.ManagedCluster
	}).(ManagedClusterPtrOutput)
}

// Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
type WorkflowTemplatePlacementResponse struct {
	// Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
	ClusterSelector ClusterSelectorResponse `pulumi:"clusterSelector"`
	// A cluster that is managed by the workflow.
	ManagedCluster ManagedClusterResponse `pulumi:"managedCluster"`
}

// WorkflowTemplatePlacementResponseInput is an input type that accepts WorkflowTemplatePlacementResponseArgs and WorkflowTemplatePlacementResponseOutput values.
// You can construct a concrete instance of `WorkflowTemplatePlacementResponseInput` via:
//
//          WorkflowTemplatePlacementResponseArgs{...}
type WorkflowTemplatePlacementResponseInput interface {
	pulumi.Input

	ToWorkflowTemplatePlacementResponseOutput() WorkflowTemplatePlacementResponseOutput
	ToWorkflowTemplatePlacementResponseOutputWithContext(context.Context) WorkflowTemplatePlacementResponseOutput
}

// Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
type WorkflowTemplatePlacementResponseArgs struct {
	// Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
	ClusterSelector ClusterSelectorResponseInput `pulumi:"clusterSelector"`
	// A cluster that is managed by the workflow.
	ManagedCluster ManagedClusterResponseInput `pulumi:"managedCluster"`
}

func (WorkflowTemplatePlacementResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTemplatePlacementResponse)(nil)).Elem()
}

func (i WorkflowTemplatePlacementResponseArgs) ToWorkflowTemplatePlacementResponseOutput() WorkflowTemplatePlacementResponseOutput {
	return i.ToWorkflowTemplatePlacementResponseOutputWithContext(context.Background())
}

func (i WorkflowTemplatePlacementResponseArgs) ToWorkflowTemplatePlacementResponseOutputWithContext(ctx context.Context) WorkflowTemplatePlacementResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTemplatePlacementResponseOutput)
}

func (i WorkflowTemplatePlacementResponseArgs) ToWorkflowTemplatePlacementResponsePtrOutput() WorkflowTemplatePlacementResponsePtrOutput {
	return i.ToWorkflowTemplatePlacementResponsePtrOutputWithContext(context.Background())
}

func (i WorkflowTemplatePlacementResponseArgs) ToWorkflowTemplatePlacementResponsePtrOutputWithContext(ctx context.Context) WorkflowTemplatePlacementResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTemplatePlacementResponseOutput).ToWorkflowTemplatePlacementResponsePtrOutputWithContext(ctx)
}

// WorkflowTemplatePlacementResponsePtrInput is an input type that accepts WorkflowTemplatePlacementResponseArgs, WorkflowTemplatePlacementResponsePtr and WorkflowTemplatePlacementResponsePtrOutput values.
// You can construct a concrete instance of `WorkflowTemplatePlacementResponsePtrInput` via:
//
//          WorkflowTemplatePlacementResponseArgs{...}
//
//  or:
//
//          nil
type WorkflowTemplatePlacementResponsePtrInput interface {
	pulumi.Input

	ToWorkflowTemplatePlacementResponsePtrOutput() WorkflowTemplatePlacementResponsePtrOutput
	ToWorkflowTemplatePlacementResponsePtrOutputWithContext(context.Context) WorkflowTemplatePlacementResponsePtrOutput
}

type workflowTemplatePlacementResponsePtrType WorkflowTemplatePlacementResponseArgs

func WorkflowTemplatePlacementResponsePtr(v *WorkflowTemplatePlacementResponseArgs) WorkflowTemplatePlacementResponsePtrInput {
	return (*workflowTemplatePlacementResponsePtrType)(v)
}

func (*workflowTemplatePlacementResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTemplatePlacementResponse)(nil)).Elem()
}

func (i *workflowTemplatePlacementResponsePtrType) ToWorkflowTemplatePlacementResponsePtrOutput() WorkflowTemplatePlacementResponsePtrOutput {
	return i.ToWorkflowTemplatePlacementResponsePtrOutputWithContext(context.Background())
}

func (i *workflowTemplatePlacementResponsePtrType) ToWorkflowTemplatePlacementResponsePtrOutputWithContext(ctx context.Context) WorkflowTemplatePlacementResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTemplatePlacementResponsePtrOutput)
}

// Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
type WorkflowTemplatePlacementResponseOutput struct{ *pulumi.OutputState }

func (WorkflowTemplatePlacementResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTemplatePlacementResponse)(nil)).Elem()
}

func (o WorkflowTemplatePlacementResponseOutput) ToWorkflowTemplatePlacementResponseOutput() WorkflowTemplatePlacementResponseOutput {
	return o
}

func (o WorkflowTemplatePlacementResponseOutput) ToWorkflowTemplatePlacementResponseOutputWithContext(ctx context.Context) WorkflowTemplatePlacementResponseOutput {
	return o
}

func (o WorkflowTemplatePlacementResponseOutput) ToWorkflowTemplatePlacementResponsePtrOutput() WorkflowTemplatePlacementResponsePtrOutput {
	return o.ToWorkflowTemplatePlacementResponsePtrOutputWithContext(context.Background())
}

func (o WorkflowTemplatePlacementResponseOutput) ToWorkflowTemplatePlacementResponsePtrOutputWithContext(ctx context.Context) WorkflowTemplatePlacementResponsePtrOutput {
	return o.ApplyT(func(v WorkflowTemplatePlacementResponse) *WorkflowTemplatePlacementResponse {
		return &v
	}).(WorkflowTemplatePlacementResponsePtrOutput)
}

// Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
func (o WorkflowTemplatePlacementResponseOutput) ClusterSelector() ClusterSelectorResponseOutput {
	return o.ApplyT(func(v WorkflowTemplatePlacementResponse) ClusterSelectorResponse { return v.ClusterSelector }).(ClusterSelectorResponseOutput)
}

// A cluster that is managed by the workflow.
func (o WorkflowTemplatePlacementResponseOutput) ManagedCluster() ManagedClusterResponseOutput {
	return o.ApplyT(func(v WorkflowTemplatePlacementResponse) ManagedClusterResponse { return v.ManagedCluster }).(ManagedClusterResponseOutput)
}

type WorkflowTemplatePlacementResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkflowTemplatePlacementResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTemplatePlacementResponse)(nil)).Elem()
}

func (o WorkflowTemplatePlacementResponsePtrOutput) ToWorkflowTemplatePlacementResponsePtrOutput() WorkflowTemplatePlacementResponsePtrOutput {
	return o
}

func (o WorkflowTemplatePlacementResponsePtrOutput) ToWorkflowTemplatePlacementResponsePtrOutputWithContext(ctx context.Context) WorkflowTemplatePlacementResponsePtrOutput {
	return o
}

func (o WorkflowTemplatePlacementResponsePtrOutput) Elem() WorkflowTemplatePlacementResponseOutput {
	return o.ApplyT(func(v *WorkflowTemplatePlacementResponse) WorkflowTemplatePlacementResponse { return *v }).(WorkflowTemplatePlacementResponseOutput)
}

// Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
func (o WorkflowTemplatePlacementResponsePtrOutput) ClusterSelector() ClusterSelectorResponsePtrOutput {
	return o.ApplyT(func(v *WorkflowTemplatePlacementResponse) *ClusterSelectorResponse {
		if v == nil {
			return nil
		}
		return &v.ClusterSelector
	}).(ClusterSelectorResponsePtrOutput)
}

// A cluster that is managed by the workflow.
func (o WorkflowTemplatePlacementResponsePtrOutput) ManagedCluster() ManagedClusterResponsePtrOutput {
	return o.ApplyT(func(v *WorkflowTemplatePlacementResponse) *ManagedClusterResponse {
		if v == nil {
			return nil
		}
		return &v.ManagedCluster
	}).(ManagedClusterResponsePtrOutput)
}

// A YARN application created by a job. Application information is a subset of org.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto.Beta Feature: This report is available for testing purposes only. It may be changed before final release.
type YarnApplicationResponse struct {
	// The application name.
	Name string `pulumi:"name"`
	// The numerical progress of the application, from 1 to 100.
	Progress float64 `pulumi:"progress"`
	// The application state.
	State string `pulumi:"state"`
	// Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.
	TrackingUrl string `pulumi:"trackingUrl"`
}

// YarnApplicationResponseInput is an input type that accepts YarnApplicationResponseArgs and YarnApplicationResponseOutput values.
// You can construct a concrete instance of `YarnApplicationResponseInput` via:
//
//          YarnApplicationResponseArgs{...}
type YarnApplicationResponseInput interface {
	pulumi.Input

	ToYarnApplicationResponseOutput() YarnApplicationResponseOutput
	ToYarnApplicationResponseOutputWithContext(context.Context) YarnApplicationResponseOutput
}

// A YARN application created by a job. Application information is a subset of org.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto.Beta Feature: This report is available for testing purposes only. It may be changed before final release.
type YarnApplicationResponseArgs struct {
	// The application name.
	Name pulumi.StringInput `pulumi:"name"`
	// The numerical progress of the application, from 1 to 100.
	Progress pulumi.Float64Input `pulumi:"progress"`
	// The application state.
	State pulumi.StringInput `pulumi:"state"`
	// Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.
	TrackingUrl pulumi.StringInput `pulumi:"trackingUrl"`
}

func (YarnApplicationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*YarnApplicationResponse)(nil)).Elem()
}

func (i YarnApplicationResponseArgs) ToYarnApplicationResponseOutput() YarnApplicationResponseOutput {
	return i.ToYarnApplicationResponseOutputWithContext(context.Background())
}

func (i YarnApplicationResponseArgs) ToYarnApplicationResponseOutputWithContext(ctx context.Context) YarnApplicationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YarnApplicationResponseOutput)
}

// YarnApplicationResponseArrayInput is an input type that accepts YarnApplicationResponseArray and YarnApplicationResponseArrayOutput values.
// You can construct a concrete instance of `YarnApplicationResponseArrayInput` via:
//
//          YarnApplicationResponseArray{ YarnApplicationResponseArgs{...} }
type YarnApplicationResponseArrayInput interface {
	pulumi.Input

	ToYarnApplicationResponseArrayOutput() YarnApplicationResponseArrayOutput
	ToYarnApplicationResponseArrayOutputWithContext(context.Context) YarnApplicationResponseArrayOutput
}

type YarnApplicationResponseArray []YarnApplicationResponseInput

func (YarnApplicationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]YarnApplicationResponse)(nil)).Elem()
}

func (i YarnApplicationResponseArray) ToYarnApplicationResponseArrayOutput() YarnApplicationResponseArrayOutput {
	return i.ToYarnApplicationResponseArrayOutputWithContext(context.Background())
}

func (i YarnApplicationResponseArray) ToYarnApplicationResponseArrayOutputWithContext(ctx context.Context) YarnApplicationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YarnApplicationResponseArrayOutput)
}

// A YARN application created by a job. Application information is a subset of org.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto.Beta Feature: This report is available for testing purposes only. It may be changed before final release.
type YarnApplicationResponseOutput struct{ *pulumi.OutputState }

func (YarnApplicationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*YarnApplicationResponse)(nil)).Elem()
}

func (o YarnApplicationResponseOutput) ToYarnApplicationResponseOutput() YarnApplicationResponseOutput {
	return o
}

func (o YarnApplicationResponseOutput) ToYarnApplicationResponseOutputWithContext(ctx context.Context) YarnApplicationResponseOutput {
	return o
}

// The application name.
func (o YarnApplicationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v YarnApplicationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The numerical progress of the application, from 1 to 100.
func (o YarnApplicationResponseOutput) Progress() pulumi.Float64Output {
	return o.ApplyT(func(v YarnApplicationResponse) float64 { return v.Progress }).(pulumi.Float64Output)
}

// The application state.
func (o YarnApplicationResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v YarnApplicationResponse) string { return v.State }).(pulumi.StringOutput)
}

// Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.
func (o YarnApplicationResponseOutput) TrackingUrl() pulumi.StringOutput {
	return o.ApplyT(func(v YarnApplicationResponse) string { return v.TrackingUrl }).(pulumi.StringOutput)
}

type YarnApplicationResponseArrayOutput struct{ *pulumi.OutputState }

func (YarnApplicationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]YarnApplicationResponse)(nil)).Elem()
}

func (o YarnApplicationResponseArrayOutput) ToYarnApplicationResponseArrayOutput() YarnApplicationResponseArrayOutput {
	return o
}

func (o YarnApplicationResponseArrayOutput) ToYarnApplicationResponseArrayOutputWithContext(ctx context.Context) YarnApplicationResponseArrayOutput {
	return o
}

func (o YarnApplicationResponseArrayOutput) Index(i pulumi.IntInput) YarnApplicationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) YarnApplicationResponse {
		return vs[0].([]YarnApplicationResponse)[vs[1].(int)]
	}).(YarnApplicationResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AcceleratorConfigOutput{})
	pulumi.RegisterOutputType(AcceleratorConfigArrayOutput{})
	pulumi.RegisterOutputType(AcceleratorConfigResponseOutput{})
	pulumi.RegisterOutputType(AcceleratorConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(AutoscalingConfigOutput{})
	pulumi.RegisterOutputType(AutoscalingConfigPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingConfigResponseOutput{})
	pulumi.RegisterOutputType(AutoscalingConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(BasicAutoscalingAlgorithmOutput{})
	pulumi.RegisterOutputType(BasicAutoscalingAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(BasicAutoscalingAlgorithmResponseOutput{})
	pulumi.RegisterOutputType(BasicAutoscalingAlgorithmResponsePtrOutput{})
	pulumi.RegisterOutputType(BasicYarnAutoscalingConfigOutput{})
	pulumi.RegisterOutputType(BasicYarnAutoscalingConfigPtrOutput{})
	pulumi.RegisterOutputType(BasicYarnAutoscalingConfigResponseOutput{})
	pulumi.RegisterOutputType(BasicYarnAutoscalingConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(BindingOutput{})
	pulumi.RegisterOutputType(BindingArrayOutput{})
	pulumi.RegisterOutputType(BindingResponseOutput{})
	pulumi.RegisterOutputType(BindingResponseArrayOutput{})
	pulumi.RegisterOutputType(ClusterConfigOutput{})
	pulumi.RegisterOutputType(ClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterConfigResponseOutput{})
	pulumi.RegisterOutputType(ClusterConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ClusterMetricsResponseOutput{})
	pulumi.RegisterOutputType(ClusterMetricsResponsePtrOutput{})
	pulumi.RegisterOutputType(ClusterSelectorOutput{})
	pulumi.RegisterOutputType(ClusterSelectorPtrOutput{})
	pulumi.RegisterOutputType(ClusterSelectorResponseOutput{})
	pulumi.RegisterOutputType(ClusterSelectorResponsePtrOutput{})
	pulumi.RegisterOutputType(ClusterStatusResponseOutput{})
	pulumi.RegisterOutputType(ClusterStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(ClusterStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(ConfidentialInstanceConfigOutput{})
	pulumi.RegisterOutputType(ConfidentialInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(ConfidentialInstanceConfigResponseOutput{})
	pulumi.RegisterOutputType(ConfidentialInstanceConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(DiskConfigOutput{})
	pulumi.RegisterOutputType(DiskConfigPtrOutput{})
	pulumi.RegisterOutputType(DiskConfigResponseOutput{})
	pulumi.RegisterOutputType(DiskConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionConfigOutput{})
	pulumi.RegisterOutputType(EncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(EncryptionConfigResponseOutput{})
	pulumi.RegisterOutputType(EncryptionConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigResponseOutput{})
	pulumi.RegisterOutputType(EndpointConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ExprOutput{})
	pulumi.RegisterOutputType(ExprPtrOutput{})
	pulumi.RegisterOutputType(ExprResponseOutput{})
	pulumi.RegisterOutputType(GceClusterConfigOutput{})
	pulumi.RegisterOutputType(GceClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(GceClusterConfigResponseOutput{})
	pulumi.RegisterOutputType(GceClusterConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GkeClusterConfigOutput{})
	pulumi.RegisterOutputType(GkeClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(GkeClusterConfigResponseOutput{})
	pulumi.RegisterOutputType(GkeClusterConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(HadoopJobOutput{})
	pulumi.RegisterOutputType(HadoopJobPtrOutput{})
	pulumi.RegisterOutputType(HadoopJobResponseOutput{})
	pulumi.RegisterOutputType(HadoopJobResponsePtrOutput{})
	pulumi.RegisterOutputType(HiveJobOutput{})
	pulumi.RegisterOutputType(HiveJobPtrOutput{})
	pulumi.RegisterOutputType(HiveJobResponseOutput{})
	pulumi.RegisterOutputType(HiveJobResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityConfigOutput{})
	pulumi.RegisterOutputType(IdentityConfigPtrOutput{})
	pulumi.RegisterOutputType(IdentityConfigResponseOutput{})
	pulumi.RegisterOutputType(IdentityConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(InstanceGroupAutoscalingPolicyConfigOutput{})
	pulumi.RegisterOutputType(InstanceGroupAutoscalingPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceGroupAutoscalingPolicyConfigResponseOutput{})
	pulumi.RegisterOutputType(InstanceGroupAutoscalingPolicyConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(InstanceGroupConfigOutput{})
	pulumi.RegisterOutputType(InstanceGroupConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceGroupConfigResponseOutput{})
	pulumi.RegisterOutputType(InstanceGroupConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(InstanceReferenceResponseOutput{})
	pulumi.RegisterOutputType(InstanceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(JobPlacementOutput{})
	pulumi.RegisterOutputType(JobPlacementPtrOutput{})
	pulumi.RegisterOutputType(JobPlacementResponseOutput{})
	pulumi.RegisterOutputType(JobPlacementResponsePtrOutput{})
	pulumi.RegisterOutputType(JobReferenceOutput{})
	pulumi.RegisterOutputType(JobReferencePtrOutput{})
	pulumi.RegisterOutputType(JobReferenceResponseOutput{})
	pulumi.RegisterOutputType(JobReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(JobSchedulingOutput{})
	pulumi.RegisterOutputType(JobSchedulingPtrOutput{})
	pulumi.RegisterOutputType(JobSchedulingResponseOutput{})
	pulumi.RegisterOutputType(JobSchedulingResponsePtrOutput{})
	pulumi.RegisterOutputType(JobStatusResponseOutput{})
	pulumi.RegisterOutputType(JobStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(JobStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(KerberosConfigOutput{})
	pulumi.RegisterOutputType(KerberosConfigPtrOutput{})
	pulumi.RegisterOutputType(KerberosConfigResponseOutput{})
	pulumi.RegisterOutputType(KerberosConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(LifecycleConfigOutput{})
	pulumi.RegisterOutputType(LifecycleConfigPtrOutput{})
	pulumi.RegisterOutputType(LifecycleConfigResponseOutput{})
	pulumi.RegisterOutputType(LifecycleConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigOutput{})
	pulumi.RegisterOutputType(LoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigResponseOutput{})
	pulumi.RegisterOutputType(LoggingConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterOutput{})
	pulumi.RegisterOutputType(ManagedClusterPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedGroupConfigResponseOutput{})
	pulumi.RegisterOutputType(ManagedGroupConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(MetastoreConfigOutput{})
	pulumi.RegisterOutputType(MetastoreConfigPtrOutput{})
	pulumi.RegisterOutputType(MetastoreConfigResponseOutput{})
	pulumi.RegisterOutputType(MetastoreConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(NamespacedGkeDeploymentTargetOutput{})
	pulumi.RegisterOutputType(NamespacedGkeDeploymentTargetPtrOutput{})
	pulumi.RegisterOutputType(NamespacedGkeDeploymentTargetResponseOutput{})
	pulumi.RegisterOutputType(NamespacedGkeDeploymentTargetResponsePtrOutput{})
	pulumi.RegisterOutputType(NodeGroupAffinityOutput{})
	pulumi.RegisterOutputType(NodeGroupAffinityPtrOutput{})
	pulumi.RegisterOutputType(NodeGroupAffinityResponseOutput{})
	pulumi.RegisterOutputType(NodeGroupAffinityResponsePtrOutput{})
	pulumi.RegisterOutputType(NodeInitializationActionOutput{})
	pulumi.RegisterOutputType(NodeInitializationActionArrayOutput{})
	pulumi.RegisterOutputType(NodeInitializationActionResponseOutput{})
	pulumi.RegisterOutputType(NodeInitializationActionResponseArrayOutput{})
	pulumi.RegisterOutputType(OrderedJobOutput{})
	pulumi.RegisterOutputType(OrderedJobArrayOutput{})
	pulumi.RegisterOutputType(OrderedJobResponseOutput{})
	pulumi.RegisterOutputType(OrderedJobResponseArrayOutput{})
	pulumi.RegisterOutputType(ParameterValidationOutput{})
	pulumi.RegisterOutputType(ParameterValidationPtrOutput{})
	pulumi.RegisterOutputType(ParameterValidationResponseOutput{})
	pulumi.RegisterOutputType(PigJobOutput{})
	pulumi.RegisterOutputType(PigJobPtrOutput{})
	pulumi.RegisterOutputType(PigJobResponseOutput{})
	pulumi.RegisterOutputType(PigJobResponsePtrOutput{})
	pulumi.RegisterOutputType(PrestoJobOutput{})
	pulumi.RegisterOutputType(PrestoJobPtrOutput{})
	pulumi.RegisterOutputType(PrestoJobResponseOutput{})
	pulumi.RegisterOutputType(PrestoJobResponsePtrOutput{})
	pulumi.RegisterOutputType(PySparkJobOutput{})
	pulumi.RegisterOutputType(PySparkJobPtrOutput{})
	pulumi.RegisterOutputType(PySparkJobResponseOutput{})
	pulumi.RegisterOutputType(PySparkJobResponsePtrOutput{})
	pulumi.RegisterOutputType(QueryListOutput{})
	pulumi.RegisterOutputType(QueryListPtrOutput{})
	pulumi.RegisterOutputType(QueryListResponseOutput{})
	pulumi.RegisterOutputType(QueryListResponsePtrOutput{})
	pulumi.RegisterOutputType(RegexValidationOutput{})
	pulumi.RegisterOutputType(RegexValidationPtrOutput{})
	pulumi.RegisterOutputType(RegexValidationResponseOutput{})
	pulumi.RegisterOutputType(ReservationAffinityOutput{})
	pulumi.RegisterOutputType(ReservationAffinityPtrOutput{})
	pulumi.RegisterOutputType(ReservationAffinityResponseOutput{})
	pulumi.RegisterOutputType(ReservationAffinityResponsePtrOutput{})
	pulumi.RegisterOutputType(SecurityConfigOutput{})
	pulumi.RegisterOutputType(SecurityConfigPtrOutput{})
	pulumi.RegisterOutputType(SecurityConfigResponseOutput{})
	pulumi.RegisterOutputType(SecurityConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(ShieldedInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(ShieldedInstanceConfigResponseOutput{})
	pulumi.RegisterOutputType(ShieldedInstanceConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(SoftwareConfigOutput{})
	pulumi.RegisterOutputType(SoftwareConfigPtrOutput{})
	pulumi.RegisterOutputType(SoftwareConfigResponseOutput{})
	pulumi.RegisterOutputType(SoftwareConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(SparkJobOutput{})
	pulumi.RegisterOutputType(SparkJobPtrOutput{})
	pulumi.RegisterOutputType(SparkJobResponseOutput{})
	pulumi.RegisterOutputType(SparkJobResponsePtrOutput{})
	pulumi.RegisterOutputType(SparkRJobOutput{})
	pulumi.RegisterOutputType(SparkRJobPtrOutput{})
	pulumi.RegisterOutputType(SparkRJobResponseOutput{})
	pulumi.RegisterOutputType(SparkRJobResponsePtrOutput{})
	pulumi.RegisterOutputType(SparkSqlJobOutput{})
	pulumi.RegisterOutputType(SparkSqlJobPtrOutput{})
	pulumi.RegisterOutputType(SparkSqlJobResponseOutput{})
	pulumi.RegisterOutputType(SparkSqlJobResponsePtrOutput{})
	pulumi.RegisterOutputType(TemplateParameterOutput{})
	pulumi.RegisterOutputType(TemplateParameterArrayOutput{})
	pulumi.RegisterOutputType(TemplateParameterResponseOutput{})
	pulumi.RegisterOutputType(TemplateParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(ValueValidationOutput{})
	pulumi.RegisterOutputType(ValueValidationPtrOutput{})
	pulumi.RegisterOutputType(ValueValidationResponseOutput{})
	pulumi.RegisterOutputType(WorkflowTemplatePlacementOutput{})
	pulumi.RegisterOutputType(WorkflowTemplatePlacementPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTemplatePlacementResponseOutput{})
	pulumi.RegisterOutputType(WorkflowTemplatePlacementResponsePtrOutput{})
	pulumi.RegisterOutputType(YarnApplicationResponseOutput{})
	pulumi.RegisterOutputType(YarnApplicationResponseArrayOutput{})
}
