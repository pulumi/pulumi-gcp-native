// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets the resource representation for an interactive session.
func LookupSession(ctx *pulumi.Context, args *LookupSessionArgs, opts ...pulumi.InvokeOption) (*LookupSessionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSessionResult
	err := ctx.Invoke("google-native:dataproc/v1:getSession", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSessionArgs struct {
	Location  string  `pulumi:"location"`
	Project   *string `pulumi:"project"`
	SessionId string  `pulumi:"sessionId"`
}

type LookupSessionResult struct {
	// The time when the session was created.
	CreateTime string `pulumi:"createTime"`
	// The email address of the user who created the session.
	Creator string `pulumi:"creator"`
	// Optional. Environment configuration for the session execution.
	EnvironmentConfig EnvironmentConfigResponse `pulumi:"environmentConfig"`
	// Optional. Jupyter session config.
	JupyterSession JupyterConfigResponse `pulumi:"jupyterSession"`
	// Optional. The labels to associate with the session. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.
	Labels map[string]string `pulumi:"labels"`
	// The resource name of the session.
	Name string `pulumi:"name"`
	// Optional. Runtime configuration for the session execution.
	RuntimeConfig RuntimeConfigResponse `pulumi:"runtimeConfig"`
	// Runtime information about session execution.
	RuntimeInfo RuntimeInfoResponse `pulumi:"runtimeInfo"`
	// Optional. The session template used by the session.Only resource names, including project ID and location, are valid.Example: * https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id] * projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id]The template must be in the same project and Dataproc region as the session.
	SessionTemplate string `pulumi:"sessionTemplate"`
	// A state of the session.
	State string `pulumi:"state"`
	// Historical state information for the session.
	StateHistory []SessionStateHistoryResponse `pulumi:"stateHistory"`
	// Session state details, such as the failure description if the state is FAILED.
	StateMessage string `pulumi:"stateMessage"`
	// The time when the session entered the current state.
	StateTime string `pulumi:"stateTime"`
	// Optional. The email address of the user who owns the session.
	User string `pulumi:"user"`
	// A session UUID (Unique Universal Identifier). The service generates this value when it creates the session.
	Uuid string `pulumi:"uuid"`
}

func LookupSessionOutput(ctx *pulumi.Context, args LookupSessionOutputArgs, opts ...pulumi.InvokeOption) LookupSessionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSessionResult, error) {
			args := v.(LookupSessionArgs)
			r, err := LookupSession(ctx, &args, opts...)
			var s LookupSessionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSessionResultOutput)
}

type LookupSessionOutputArgs struct {
	Location  pulumi.StringInput    `pulumi:"location"`
	Project   pulumi.StringPtrInput `pulumi:"project"`
	SessionId pulumi.StringInput    `pulumi:"sessionId"`
}

func (LookupSessionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSessionArgs)(nil)).Elem()
}

type LookupSessionResultOutput struct{ *pulumi.OutputState }

func (LookupSessionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSessionResult)(nil)).Elem()
}

func (o LookupSessionResultOutput) ToLookupSessionResultOutput() LookupSessionResultOutput {
	return o
}

func (o LookupSessionResultOutput) ToLookupSessionResultOutputWithContext(ctx context.Context) LookupSessionResultOutput {
	return o
}

func (o LookupSessionResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSessionResult] {
	return pulumix.Output[LookupSessionResult]{
		OutputState: o.OutputState,
	}
}

// The time when the session was created.
func (o LookupSessionResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The email address of the user who created the session.
func (o LookupSessionResultOutput) Creator() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.Creator }).(pulumi.StringOutput)
}

// Optional. Environment configuration for the session execution.
func (o LookupSessionResultOutput) EnvironmentConfig() EnvironmentConfigResponseOutput {
	return o.ApplyT(func(v LookupSessionResult) EnvironmentConfigResponse { return v.EnvironmentConfig }).(EnvironmentConfigResponseOutput)
}

// Optional. Jupyter session config.
func (o LookupSessionResultOutput) JupyterSession() JupyterConfigResponseOutput {
	return o.ApplyT(func(v LookupSessionResult) JupyterConfigResponse { return v.JupyterSession }).(JupyterConfigResponseOutput)
}

// Optional. The labels to associate with the session. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.
func (o LookupSessionResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSessionResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name of the session.
func (o LookupSessionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. Runtime configuration for the session execution.
func (o LookupSessionResultOutput) RuntimeConfig() RuntimeConfigResponseOutput {
	return o.ApplyT(func(v LookupSessionResult) RuntimeConfigResponse { return v.RuntimeConfig }).(RuntimeConfigResponseOutput)
}

// Runtime information about session execution.
func (o LookupSessionResultOutput) RuntimeInfo() RuntimeInfoResponseOutput {
	return o.ApplyT(func(v LookupSessionResult) RuntimeInfoResponse { return v.RuntimeInfo }).(RuntimeInfoResponseOutput)
}

// Optional. The session template used by the session.Only resource names, including project ID and location, are valid.Example: * https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id] * projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id]The template must be in the same project and Dataproc region as the session.
func (o LookupSessionResultOutput) SessionTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.SessionTemplate }).(pulumi.StringOutput)
}

// A state of the session.
func (o LookupSessionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.State }).(pulumi.StringOutput)
}

// Historical state information for the session.
func (o LookupSessionResultOutput) StateHistory() SessionStateHistoryResponseArrayOutput {
	return o.ApplyT(func(v LookupSessionResult) []SessionStateHistoryResponse { return v.StateHistory }).(SessionStateHistoryResponseArrayOutput)
}

// Session state details, such as the failure description if the state is FAILED.
func (o LookupSessionResultOutput) StateMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.StateMessage }).(pulumi.StringOutput)
}

// The time when the session entered the current state.
func (o LookupSessionResultOutput) StateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.StateTime }).(pulumi.StringOutput)
}

// Optional. The email address of the user who owns the session.
func (o LookupSessionResultOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.User }).(pulumi.StringOutput)
}

// A session UUID (Unique Universal Identifier). The service generates this value when it creates the session.
func (o LookupSessionResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.Uuid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSessionResultOutput{})
}
