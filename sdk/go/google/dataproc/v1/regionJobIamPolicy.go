// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
type RegionJobIamPolicy struct {
	pulumi.CustomResourceState
}

// NewRegionJobIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewRegionJobIamPolicy(ctx *pulumi.Context,
	name string, args *RegionJobIamPolicyArgs, opts ...pulumi.ResourceOption) (*RegionJobIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.JobsId == nil {
		return nil, errors.New("invalid value for required argument 'JobsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	if args.RegionsId == nil {
		return nil, errors.New("invalid value for required argument 'RegionsId'")
	}
	var resource RegionJobIamPolicy
	err := ctx.RegisterResource("google-cloud:dataproc/v1:RegionJobIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegionJobIamPolicy gets an existing RegionJobIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegionJobIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegionJobIamPolicyState, opts ...pulumi.ResourceOption) (*RegionJobIamPolicy, error) {
	var resource RegionJobIamPolicy
	err := ctx.ReadResource("google-cloud:dataproc/v1:RegionJobIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegionJobIamPolicy resources.
type regionJobIamPolicyState struct {
}

type RegionJobIamPolicyState struct {
}

func (RegionJobIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*regionJobIamPolicyState)(nil)).Elem()
}

type regionJobIamPolicyArgs struct {
	JobsId string `pulumi:"jobsId"`
	// REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy     *Policy `pulumi:"policy"`
	ProjectsId string  `pulumi:"projectsId"`
	RegionsId  string  `pulumi:"regionsId"`
}

// The set of arguments for constructing a RegionJobIamPolicy resource.
type RegionJobIamPolicyArgs struct {
	JobsId pulumi.StringInput
	// REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy     PolicyPtrInput
	ProjectsId pulumi.StringInput
	RegionsId  pulumi.StringInput
}

func (RegionJobIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*regionJobIamPolicyArgs)(nil)).Elem()
}

type RegionJobIamPolicyInput interface {
	pulumi.Input

	ToRegionJobIamPolicyOutput() RegionJobIamPolicyOutput
	ToRegionJobIamPolicyOutputWithContext(ctx context.Context) RegionJobIamPolicyOutput
}

func (*RegionJobIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionJobIamPolicy)(nil))
}

func (i *RegionJobIamPolicy) ToRegionJobIamPolicyOutput() RegionJobIamPolicyOutput {
	return i.ToRegionJobIamPolicyOutputWithContext(context.Background())
}

func (i *RegionJobIamPolicy) ToRegionJobIamPolicyOutputWithContext(ctx context.Context) RegionJobIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionJobIamPolicyOutput)
}

type RegionJobIamPolicyOutput struct {
	*pulumi.OutputState
}

func (RegionJobIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionJobIamPolicy)(nil))
}

func (o RegionJobIamPolicyOutput) ToRegionJobIamPolicyOutput() RegionJobIamPolicyOutput {
	return o
}

func (o RegionJobIamPolicyOutput) ToRegionJobIamPolicyOutputWithContext(ctx context.Context) RegionJobIamPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(RegionJobIamPolicyOutput{})
}
