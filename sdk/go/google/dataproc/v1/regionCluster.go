// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata).
type RegionCluster struct {
	pulumi.CustomResourceState

	// Required. The cluster name. Cluster names within a project must be unique. Names of deleted clusters can be reused.
	ClusterName pulumi.StringOutput `pulumi:"clusterName"`
	// A cluster UUID (Unique Universal Identifier). Dataproc generates this value when it creates the cluster.
	ClusterUuid pulumi.StringOutput `pulumi:"clusterUuid"`
	// Required. The cluster config. Note that Dataproc may set default values, and values may change when clusters are updated.
	Config ClusterConfigResponseOutput `pulumi:"config"`
	// Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Contains cluster daemon metrics such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.
	Metrics ClusterMetricsResponseOutput `pulumi:"metrics"`
	// Required. The Google Cloud Platform project ID that the cluster belongs to.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Cluster status.
	Status ClusterStatusResponseOutput `pulumi:"status"`
	// The previous cluster status.
	StatusHistory ClusterStatusResponseArrayOutput `pulumi:"statusHistory"`
}

// NewRegionCluster registers a new resource with the given unique name, arguments, and options.
func NewRegionCluster(ctx *pulumi.Context,
	name string, args *RegionClusterArgs, opts ...pulumi.ResourceOption) (*RegionCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	var resource RegionCluster
	err := ctx.RegisterResource("google-native:dataproc/v1:RegionCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegionCluster gets an existing RegionCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegionCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegionClusterState, opts ...pulumi.ResourceOption) (*RegionCluster, error) {
	var resource RegionCluster
	err := ctx.ReadResource("google-native:dataproc/v1:RegionCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegionCluster resources.
type regionClusterState struct {
	// Required. The cluster name. Cluster names within a project must be unique. Names of deleted clusters can be reused.
	ClusterName *string `pulumi:"clusterName"`
	// A cluster UUID (Unique Universal Identifier). Dataproc generates this value when it creates the cluster.
	ClusterUuid *string `pulumi:"clusterUuid"`
	// Required. The cluster config. Note that Dataproc may set default values, and values may change when clusters are updated.
	Config *ClusterConfigResponse `pulumi:"config"`
	// Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
	Labels map[string]string `pulumi:"labels"`
	// Contains cluster daemon metrics such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.
	Metrics *ClusterMetricsResponse `pulumi:"metrics"`
	// Required. The Google Cloud Platform project ID that the cluster belongs to.
	ProjectId *string `pulumi:"projectId"`
	// Cluster status.
	Status *ClusterStatusResponse `pulumi:"status"`
	// The previous cluster status.
	StatusHistory []ClusterStatusResponse `pulumi:"statusHistory"`
}

type RegionClusterState struct {
	// Required. The cluster name. Cluster names within a project must be unique. Names of deleted clusters can be reused.
	ClusterName pulumi.StringPtrInput
	// A cluster UUID (Unique Universal Identifier). Dataproc generates this value when it creates the cluster.
	ClusterUuid pulumi.StringPtrInput
	// Required. The cluster config. Note that Dataproc may set default values, and values may change when clusters are updated.
	Config ClusterConfigResponsePtrInput
	// Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
	Labels pulumi.StringMapInput
	// Contains cluster daemon metrics such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.
	Metrics ClusterMetricsResponsePtrInput
	// Required. The Google Cloud Platform project ID that the cluster belongs to.
	ProjectId pulumi.StringPtrInput
	// Cluster status.
	Status ClusterStatusResponsePtrInput
	// The previous cluster status.
	StatusHistory ClusterStatusResponseArrayInput
}

func (RegionClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*regionClusterState)(nil)).Elem()
}

type regionClusterArgs struct {
	// Required. The cluster name. Cluster names within a project must be unique. Names of deleted clusters can be reused.
	ClusterName string `pulumi:"clusterName"`
	// Required. The cluster config. Note that Dataproc may set default values, and values may change when clusters are updated.
	Config *ClusterConfig `pulumi:"config"`
	// Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
	Labels map[string]string `pulumi:"labels"`
	// Required. The Google Cloud Platform project ID that the cluster belongs to.
	ProjectId string  `pulumi:"projectId"`
	Region    string  `pulumi:"region"`
	RequestId *string `pulumi:"requestId"`
}

// The set of arguments for constructing a RegionCluster resource.
type RegionClusterArgs struct {
	// Required. The cluster name. Cluster names within a project must be unique. Names of deleted clusters can be reused.
	ClusterName pulumi.StringInput
	// Required. The cluster config. Note that Dataproc may set default values, and values may change when clusters are updated.
	Config ClusterConfigPtrInput
	// Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
	Labels pulumi.StringMapInput
	// Required. The Google Cloud Platform project ID that the cluster belongs to.
	ProjectId pulumi.StringInput
	Region    pulumi.StringInput
	RequestId pulumi.StringPtrInput
}

func (RegionClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*regionClusterArgs)(nil)).Elem()
}

type RegionClusterInput interface {
	pulumi.Input

	ToRegionClusterOutput() RegionClusterOutput
	ToRegionClusterOutputWithContext(ctx context.Context) RegionClusterOutput
}

func (*RegionCluster) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionCluster)(nil))
}

func (i *RegionCluster) ToRegionClusterOutput() RegionClusterOutput {
	return i.ToRegionClusterOutputWithContext(context.Background())
}

func (i *RegionCluster) ToRegionClusterOutputWithContext(ctx context.Context) RegionClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionClusterOutput)
}

type RegionClusterOutput struct {
	*pulumi.OutputState
}

func (RegionClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionCluster)(nil))
}

func (o RegionClusterOutput) ToRegionClusterOutput() RegionClusterOutput {
	return o
}

func (o RegionClusterOutput) ToRegionClusterOutputWithContext(ctx context.Context) RegionClusterOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(RegionClusterOutput{})
}
