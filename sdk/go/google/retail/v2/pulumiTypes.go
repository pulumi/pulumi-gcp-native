// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// An intended audience of the Product for whom it's sold.
type GoogleCloudRetailV2Audience struct {
	// The age groups of the audience. Strongly encouraged to use the standard values: "newborn" (up to 3 months old), "infant" (3–12 months old), "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
	AgeGroups []string `pulumi:"ageGroups"`
	// The genders of the audience. Strongly encouraged to use the standard values: "male", "female", "unisex". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
	Genders []string `pulumi:"genders"`
}

// GoogleCloudRetailV2AudienceInput is an input type that accepts GoogleCloudRetailV2AudienceArgs and GoogleCloudRetailV2AudienceOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2AudienceInput` via:
//
//	GoogleCloudRetailV2AudienceArgs{...}
type GoogleCloudRetailV2AudienceInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2AudienceOutput() GoogleCloudRetailV2AudienceOutput
	ToGoogleCloudRetailV2AudienceOutputWithContext(context.Context) GoogleCloudRetailV2AudienceOutput
}

// An intended audience of the Product for whom it's sold.
type GoogleCloudRetailV2AudienceArgs struct {
	// The age groups of the audience. Strongly encouraged to use the standard values: "newborn" (up to 3 months old), "infant" (3–12 months old), "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
	AgeGroups pulumi.StringArrayInput `pulumi:"ageGroups"`
	// The genders of the audience. Strongly encouraged to use the standard values: "male", "female", "unisex". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
	Genders pulumi.StringArrayInput `pulumi:"genders"`
}

func (GoogleCloudRetailV2AudienceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2Audience)(nil)).Elem()
}

func (i GoogleCloudRetailV2AudienceArgs) ToGoogleCloudRetailV2AudienceOutput() GoogleCloudRetailV2AudienceOutput {
	return i.ToGoogleCloudRetailV2AudienceOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2AudienceArgs) ToGoogleCloudRetailV2AudienceOutputWithContext(ctx context.Context) GoogleCloudRetailV2AudienceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2AudienceOutput)
}

func (i GoogleCloudRetailV2AudienceArgs) ToGoogleCloudRetailV2AudiencePtrOutput() GoogleCloudRetailV2AudiencePtrOutput {
	return i.ToGoogleCloudRetailV2AudiencePtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2AudienceArgs) ToGoogleCloudRetailV2AudiencePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2AudiencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2AudienceOutput).ToGoogleCloudRetailV2AudiencePtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2AudiencePtrInput is an input type that accepts GoogleCloudRetailV2AudienceArgs, GoogleCloudRetailV2AudiencePtr and GoogleCloudRetailV2AudiencePtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2AudiencePtrInput` via:
//
//	        GoogleCloudRetailV2AudienceArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2AudiencePtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2AudiencePtrOutput() GoogleCloudRetailV2AudiencePtrOutput
	ToGoogleCloudRetailV2AudiencePtrOutputWithContext(context.Context) GoogleCloudRetailV2AudiencePtrOutput
}

type googleCloudRetailV2AudiencePtrType GoogleCloudRetailV2AudienceArgs

func GoogleCloudRetailV2AudiencePtr(v *GoogleCloudRetailV2AudienceArgs) GoogleCloudRetailV2AudiencePtrInput {
	return (*googleCloudRetailV2AudiencePtrType)(v)
}

func (*googleCloudRetailV2AudiencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2Audience)(nil)).Elem()
}

func (i *googleCloudRetailV2AudiencePtrType) ToGoogleCloudRetailV2AudiencePtrOutput() GoogleCloudRetailV2AudiencePtrOutput {
	return i.ToGoogleCloudRetailV2AudiencePtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2AudiencePtrType) ToGoogleCloudRetailV2AudiencePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2AudiencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2AudiencePtrOutput)
}

// An intended audience of the Product for whom it's sold.
type GoogleCloudRetailV2AudienceOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2AudienceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2Audience)(nil)).Elem()
}

func (o GoogleCloudRetailV2AudienceOutput) ToGoogleCloudRetailV2AudienceOutput() GoogleCloudRetailV2AudienceOutput {
	return o
}

func (o GoogleCloudRetailV2AudienceOutput) ToGoogleCloudRetailV2AudienceOutputWithContext(ctx context.Context) GoogleCloudRetailV2AudienceOutput {
	return o
}

func (o GoogleCloudRetailV2AudienceOutput) ToGoogleCloudRetailV2AudiencePtrOutput() GoogleCloudRetailV2AudiencePtrOutput {
	return o.ToGoogleCloudRetailV2AudiencePtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2AudienceOutput) ToGoogleCloudRetailV2AudiencePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2AudiencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2Audience) *GoogleCloudRetailV2Audience {
		return &v
	}).(GoogleCloudRetailV2AudiencePtrOutput)
}

// The age groups of the audience. Strongly encouraged to use the standard values: "newborn" (up to 3 months old), "infant" (3–12 months old), "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
func (o GoogleCloudRetailV2AudienceOutput) AgeGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Audience) []string { return v.AgeGroups }).(pulumi.StringArrayOutput)
}

// The genders of the audience. Strongly encouraged to use the standard values: "male", "female", "unisex". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
func (o GoogleCloudRetailV2AudienceOutput) Genders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Audience) []string { return v.Genders }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2AudiencePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2AudiencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2Audience)(nil)).Elem()
}

func (o GoogleCloudRetailV2AudiencePtrOutput) ToGoogleCloudRetailV2AudiencePtrOutput() GoogleCloudRetailV2AudiencePtrOutput {
	return o
}

func (o GoogleCloudRetailV2AudiencePtrOutput) ToGoogleCloudRetailV2AudiencePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2AudiencePtrOutput {
	return o
}

func (o GoogleCloudRetailV2AudiencePtrOutput) Elem() GoogleCloudRetailV2AudienceOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Audience) GoogleCloudRetailV2Audience {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2Audience
		return ret
	}).(GoogleCloudRetailV2AudienceOutput)
}

// The age groups of the audience. Strongly encouraged to use the standard values: "newborn" (up to 3 months old), "infant" (3–12 months old), "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
func (o GoogleCloudRetailV2AudiencePtrOutput) AgeGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Audience) []string {
		if v == nil {
			return nil
		}
		return v.AgeGroups
	}).(pulumi.StringArrayOutput)
}

// The genders of the audience. Strongly encouraged to use the standard values: "male", "female", "unisex". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
func (o GoogleCloudRetailV2AudiencePtrOutput) Genders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Audience) []string {
		if v == nil {
			return nil
		}
		return v.Genders
	}).(pulumi.StringArrayOutput)
}

// An intended audience of the Product for whom it's sold.
type GoogleCloudRetailV2AudienceResponse struct {
	// The age groups of the audience. Strongly encouraged to use the standard values: "newborn" (up to 3 months old), "infant" (3–12 months old), "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
	AgeGroups []string `pulumi:"ageGroups"`
	// The genders of the audience. Strongly encouraged to use the standard values: "male", "female", "unisex". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
	Genders []string `pulumi:"genders"`
}

// An intended audience of the Product for whom it's sold.
type GoogleCloudRetailV2AudienceResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2AudienceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2AudienceResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2AudienceResponseOutput) ToGoogleCloudRetailV2AudienceResponseOutput() GoogleCloudRetailV2AudienceResponseOutput {
	return o
}

func (o GoogleCloudRetailV2AudienceResponseOutput) ToGoogleCloudRetailV2AudienceResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2AudienceResponseOutput {
	return o
}

// The age groups of the audience. Strongly encouraged to use the standard values: "newborn" (up to 3 months old), "infant" (3–12 months old), "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
func (o GoogleCloudRetailV2AudienceResponseOutput) AgeGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2AudienceResponse) []string { return v.AgeGroups }).(pulumi.StringArrayOutput)
}

// The genders of the audience. Strongly encouraged to use the standard values: "male", "female", "unisex". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
func (o GoogleCloudRetailV2AudienceResponseOutput) Genders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2AudienceResponse) []string { return v.Genders }).(pulumi.StringArrayOutput)
}

// The color information of a Product.
type GoogleCloudRetailV2ColorInfo struct {
	// The standard color families. Strongly recommended to use the following standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it is expected to have only 1 color family. May consider using single "Mixed" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
	ColorFamilies []string `pulumi:"colorFamilies"`
	// The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single "Mixed" instead of multiple values. A maximum of 75 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
	Colors []string `pulumi:"colors"`
}

// GoogleCloudRetailV2ColorInfoInput is an input type that accepts GoogleCloudRetailV2ColorInfoArgs and GoogleCloudRetailV2ColorInfoOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ColorInfoInput` via:
//
//	GoogleCloudRetailV2ColorInfoArgs{...}
type GoogleCloudRetailV2ColorInfoInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ColorInfoOutput() GoogleCloudRetailV2ColorInfoOutput
	ToGoogleCloudRetailV2ColorInfoOutputWithContext(context.Context) GoogleCloudRetailV2ColorInfoOutput
}

// The color information of a Product.
type GoogleCloudRetailV2ColorInfoArgs struct {
	// The standard color families. Strongly recommended to use the following standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it is expected to have only 1 color family. May consider using single "Mixed" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
	ColorFamilies pulumi.StringArrayInput `pulumi:"colorFamilies"`
	// The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single "Mixed" instead of multiple values. A maximum of 75 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
	Colors pulumi.StringArrayInput `pulumi:"colors"`
}

func (GoogleCloudRetailV2ColorInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ColorInfo)(nil)).Elem()
}

func (i GoogleCloudRetailV2ColorInfoArgs) ToGoogleCloudRetailV2ColorInfoOutput() GoogleCloudRetailV2ColorInfoOutput {
	return i.ToGoogleCloudRetailV2ColorInfoOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ColorInfoArgs) ToGoogleCloudRetailV2ColorInfoOutputWithContext(ctx context.Context) GoogleCloudRetailV2ColorInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ColorInfoOutput)
}

func (i GoogleCloudRetailV2ColorInfoArgs) ToGoogleCloudRetailV2ColorInfoPtrOutput() GoogleCloudRetailV2ColorInfoPtrOutput {
	return i.ToGoogleCloudRetailV2ColorInfoPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ColorInfoArgs) ToGoogleCloudRetailV2ColorInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ColorInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ColorInfoOutput).ToGoogleCloudRetailV2ColorInfoPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2ColorInfoPtrInput is an input type that accepts GoogleCloudRetailV2ColorInfoArgs, GoogleCloudRetailV2ColorInfoPtr and GoogleCloudRetailV2ColorInfoPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ColorInfoPtrInput` via:
//
//	        GoogleCloudRetailV2ColorInfoArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2ColorInfoPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ColorInfoPtrOutput() GoogleCloudRetailV2ColorInfoPtrOutput
	ToGoogleCloudRetailV2ColorInfoPtrOutputWithContext(context.Context) GoogleCloudRetailV2ColorInfoPtrOutput
}

type googleCloudRetailV2ColorInfoPtrType GoogleCloudRetailV2ColorInfoArgs

func GoogleCloudRetailV2ColorInfoPtr(v *GoogleCloudRetailV2ColorInfoArgs) GoogleCloudRetailV2ColorInfoPtrInput {
	return (*googleCloudRetailV2ColorInfoPtrType)(v)
}

func (*googleCloudRetailV2ColorInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2ColorInfo)(nil)).Elem()
}

func (i *googleCloudRetailV2ColorInfoPtrType) ToGoogleCloudRetailV2ColorInfoPtrOutput() GoogleCloudRetailV2ColorInfoPtrOutput {
	return i.ToGoogleCloudRetailV2ColorInfoPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2ColorInfoPtrType) ToGoogleCloudRetailV2ColorInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ColorInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ColorInfoPtrOutput)
}

// The color information of a Product.
type GoogleCloudRetailV2ColorInfoOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ColorInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ColorInfo)(nil)).Elem()
}

func (o GoogleCloudRetailV2ColorInfoOutput) ToGoogleCloudRetailV2ColorInfoOutput() GoogleCloudRetailV2ColorInfoOutput {
	return o
}

func (o GoogleCloudRetailV2ColorInfoOutput) ToGoogleCloudRetailV2ColorInfoOutputWithContext(ctx context.Context) GoogleCloudRetailV2ColorInfoOutput {
	return o
}

func (o GoogleCloudRetailV2ColorInfoOutput) ToGoogleCloudRetailV2ColorInfoPtrOutput() GoogleCloudRetailV2ColorInfoPtrOutput {
	return o.ToGoogleCloudRetailV2ColorInfoPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2ColorInfoOutput) ToGoogleCloudRetailV2ColorInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ColorInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2ColorInfo) *GoogleCloudRetailV2ColorInfo {
		return &v
	}).(GoogleCloudRetailV2ColorInfoPtrOutput)
}

// The standard color families. Strongly recommended to use the following standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it is expected to have only 1 color family. May consider using single "Mixed" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
func (o GoogleCloudRetailV2ColorInfoOutput) ColorFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ColorInfo) []string { return v.ColorFamilies }).(pulumi.StringArrayOutput)
}

// The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single "Mixed" instead of multiple values. A maximum of 75 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
func (o GoogleCloudRetailV2ColorInfoOutput) Colors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ColorInfo) []string { return v.Colors }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2ColorInfoPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ColorInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2ColorInfo)(nil)).Elem()
}

func (o GoogleCloudRetailV2ColorInfoPtrOutput) ToGoogleCloudRetailV2ColorInfoPtrOutput() GoogleCloudRetailV2ColorInfoPtrOutput {
	return o
}

func (o GoogleCloudRetailV2ColorInfoPtrOutput) ToGoogleCloudRetailV2ColorInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ColorInfoPtrOutput {
	return o
}

func (o GoogleCloudRetailV2ColorInfoPtrOutput) Elem() GoogleCloudRetailV2ColorInfoOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2ColorInfo) GoogleCloudRetailV2ColorInfo {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2ColorInfo
		return ret
	}).(GoogleCloudRetailV2ColorInfoOutput)
}

// The standard color families. Strongly recommended to use the following standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it is expected to have only 1 color family. May consider using single "Mixed" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
func (o GoogleCloudRetailV2ColorInfoPtrOutput) ColorFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2ColorInfo) []string {
		if v == nil {
			return nil
		}
		return v.ColorFamilies
	}).(pulumi.StringArrayOutput)
}

// The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single "Mixed" instead of multiple values. A maximum of 75 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
func (o GoogleCloudRetailV2ColorInfoPtrOutput) Colors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2ColorInfo) []string {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(pulumi.StringArrayOutput)
}

// The color information of a Product.
type GoogleCloudRetailV2ColorInfoResponse struct {
	// The standard color families. Strongly recommended to use the following standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it is expected to have only 1 color family. May consider using single "Mixed" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
	ColorFamilies []string `pulumi:"colorFamilies"`
	// The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single "Mixed" instead of multiple values. A maximum of 75 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
	Colors []string `pulumi:"colors"`
}

// The color information of a Product.
type GoogleCloudRetailV2ColorInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ColorInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ColorInfoResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2ColorInfoResponseOutput) ToGoogleCloudRetailV2ColorInfoResponseOutput() GoogleCloudRetailV2ColorInfoResponseOutput {
	return o
}

func (o GoogleCloudRetailV2ColorInfoResponseOutput) ToGoogleCloudRetailV2ColorInfoResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2ColorInfoResponseOutput {
	return o
}

// The standard color families. Strongly recommended to use the following standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it is expected to have only 1 color family. May consider using single "Mixed" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
func (o GoogleCloudRetailV2ColorInfoResponseOutput) ColorFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ColorInfoResponse) []string { return v.ColorFamilies }).(pulumi.StringArrayOutput)
}

// The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single "Mixed" instead of multiple values. A maximum of 75 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
func (o GoogleCloudRetailV2ColorInfoResponseOutput) Colors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ColorInfoResponse) []string { return v.Colors }).(pulumi.StringArrayOutput)
}

// Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of 'query_terms' or 'products_filter'. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted.
type GoogleCloudRetailV2Condition struct {
	// Range of time(s) specifying when Condition is active. Condition true if any time range matches.
	ActiveTimeRange []GoogleCloudRetailV2ConditionTimeRange `pulumi:"activeTimeRange"`
	// Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;
	PageCategories []string `pulumi:"pageCategories"`
	// A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
	QueryTerms []GoogleCloudRetailV2ConditionQueryTerm `pulumi:"queryTerms"`
}

// GoogleCloudRetailV2ConditionInput is an input type that accepts GoogleCloudRetailV2ConditionArgs and GoogleCloudRetailV2ConditionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ConditionInput` via:
//
//	GoogleCloudRetailV2ConditionArgs{...}
type GoogleCloudRetailV2ConditionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ConditionOutput() GoogleCloudRetailV2ConditionOutput
	ToGoogleCloudRetailV2ConditionOutputWithContext(context.Context) GoogleCloudRetailV2ConditionOutput
}

// Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of 'query_terms' or 'products_filter'. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted.
type GoogleCloudRetailV2ConditionArgs struct {
	// Range of time(s) specifying when Condition is active. Condition true if any time range matches.
	ActiveTimeRange GoogleCloudRetailV2ConditionTimeRangeArrayInput `pulumi:"activeTimeRange"`
	// Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;
	PageCategories pulumi.StringArrayInput `pulumi:"pageCategories"`
	// A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
	QueryTerms GoogleCloudRetailV2ConditionQueryTermArrayInput `pulumi:"queryTerms"`
}

func (GoogleCloudRetailV2ConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2Condition)(nil)).Elem()
}

func (i GoogleCloudRetailV2ConditionArgs) ToGoogleCloudRetailV2ConditionOutput() GoogleCloudRetailV2ConditionOutput {
	return i.ToGoogleCloudRetailV2ConditionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ConditionArgs) ToGoogleCloudRetailV2ConditionOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ConditionOutput)
}

func (i GoogleCloudRetailV2ConditionArgs) ToGoogleCloudRetailV2ConditionPtrOutput() GoogleCloudRetailV2ConditionPtrOutput {
	return i.ToGoogleCloudRetailV2ConditionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ConditionArgs) ToGoogleCloudRetailV2ConditionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ConditionOutput).ToGoogleCloudRetailV2ConditionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2ConditionPtrInput is an input type that accepts GoogleCloudRetailV2ConditionArgs, GoogleCloudRetailV2ConditionPtr and GoogleCloudRetailV2ConditionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ConditionPtrInput` via:
//
//	        GoogleCloudRetailV2ConditionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2ConditionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ConditionPtrOutput() GoogleCloudRetailV2ConditionPtrOutput
	ToGoogleCloudRetailV2ConditionPtrOutputWithContext(context.Context) GoogleCloudRetailV2ConditionPtrOutput
}

type googleCloudRetailV2ConditionPtrType GoogleCloudRetailV2ConditionArgs

func GoogleCloudRetailV2ConditionPtr(v *GoogleCloudRetailV2ConditionArgs) GoogleCloudRetailV2ConditionPtrInput {
	return (*googleCloudRetailV2ConditionPtrType)(v)
}

func (*googleCloudRetailV2ConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2Condition)(nil)).Elem()
}

func (i *googleCloudRetailV2ConditionPtrType) ToGoogleCloudRetailV2ConditionPtrOutput() GoogleCloudRetailV2ConditionPtrOutput {
	return i.ToGoogleCloudRetailV2ConditionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2ConditionPtrType) ToGoogleCloudRetailV2ConditionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ConditionPtrOutput)
}

// Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of 'query_terms' or 'products_filter'. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted.
type GoogleCloudRetailV2ConditionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2Condition)(nil)).Elem()
}

func (o GoogleCloudRetailV2ConditionOutput) ToGoogleCloudRetailV2ConditionOutput() GoogleCloudRetailV2ConditionOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionOutput) ToGoogleCloudRetailV2ConditionOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionOutput) ToGoogleCloudRetailV2ConditionPtrOutput() GoogleCloudRetailV2ConditionPtrOutput {
	return o.ToGoogleCloudRetailV2ConditionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2ConditionOutput) ToGoogleCloudRetailV2ConditionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2Condition) *GoogleCloudRetailV2Condition {
		return &v
	}).(GoogleCloudRetailV2ConditionPtrOutput)
}

// Range of time(s) specifying when Condition is active. Condition true if any time range matches.
func (o GoogleCloudRetailV2ConditionOutput) ActiveTimeRange() GoogleCloudRetailV2ConditionTimeRangeArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Condition) []GoogleCloudRetailV2ConditionTimeRange { return v.ActiveTimeRange }).(GoogleCloudRetailV2ConditionTimeRangeArrayOutput)
}

// Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;
func (o GoogleCloudRetailV2ConditionOutput) PageCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Condition) []string { return v.PageCategories }).(pulumi.StringArrayOutput)
}

// A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
func (o GoogleCloudRetailV2ConditionOutput) QueryTerms() GoogleCloudRetailV2ConditionQueryTermArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Condition) []GoogleCloudRetailV2ConditionQueryTerm { return v.QueryTerms }).(GoogleCloudRetailV2ConditionQueryTermArrayOutput)
}

type GoogleCloudRetailV2ConditionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2Condition)(nil)).Elem()
}

func (o GoogleCloudRetailV2ConditionPtrOutput) ToGoogleCloudRetailV2ConditionPtrOutput() GoogleCloudRetailV2ConditionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionPtrOutput) ToGoogleCloudRetailV2ConditionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionPtrOutput) Elem() GoogleCloudRetailV2ConditionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Condition) GoogleCloudRetailV2Condition {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2Condition
		return ret
	}).(GoogleCloudRetailV2ConditionOutput)
}

// Range of time(s) specifying when Condition is active. Condition true if any time range matches.
func (o GoogleCloudRetailV2ConditionPtrOutput) ActiveTimeRange() GoogleCloudRetailV2ConditionTimeRangeArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Condition) []GoogleCloudRetailV2ConditionTimeRange {
		if v == nil {
			return nil
		}
		return v.ActiveTimeRange
	}).(GoogleCloudRetailV2ConditionTimeRangeArrayOutput)
}

// Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;
func (o GoogleCloudRetailV2ConditionPtrOutput) PageCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Condition) []string {
		if v == nil {
			return nil
		}
		return v.PageCategories
	}).(pulumi.StringArrayOutput)
}

// A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
func (o GoogleCloudRetailV2ConditionPtrOutput) QueryTerms() GoogleCloudRetailV2ConditionQueryTermArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Condition) []GoogleCloudRetailV2ConditionQueryTerm {
		if v == nil {
			return nil
		}
		return v.QueryTerms
	}).(GoogleCloudRetailV2ConditionQueryTermArrayOutput)
}

// Query terms that we want to match on.
type GoogleCloudRetailV2ConditionQueryTerm struct {
	// Whether this is supposed to be a full or partial match.
	FullMatch *bool `pulumi:"fullMatch"`
	// The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. For example, "a b c" is 3 terms and allowed, but " a b c d" is 4 terms and not allowed for a partial match.
	Value *string `pulumi:"value"`
}

// GoogleCloudRetailV2ConditionQueryTermInput is an input type that accepts GoogleCloudRetailV2ConditionQueryTermArgs and GoogleCloudRetailV2ConditionQueryTermOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ConditionQueryTermInput` via:
//
//	GoogleCloudRetailV2ConditionQueryTermArgs{...}
type GoogleCloudRetailV2ConditionQueryTermInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ConditionQueryTermOutput() GoogleCloudRetailV2ConditionQueryTermOutput
	ToGoogleCloudRetailV2ConditionQueryTermOutputWithContext(context.Context) GoogleCloudRetailV2ConditionQueryTermOutput
}

// Query terms that we want to match on.
type GoogleCloudRetailV2ConditionQueryTermArgs struct {
	// Whether this is supposed to be a full or partial match.
	FullMatch pulumi.BoolPtrInput `pulumi:"fullMatch"`
	// The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. For example, "a b c" is 3 terms and allowed, but " a b c d" is 4 terms and not allowed for a partial match.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GoogleCloudRetailV2ConditionQueryTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ConditionQueryTerm)(nil)).Elem()
}

func (i GoogleCloudRetailV2ConditionQueryTermArgs) ToGoogleCloudRetailV2ConditionQueryTermOutput() GoogleCloudRetailV2ConditionQueryTermOutput {
	return i.ToGoogleCloudRetailV2ConditionQueryTermOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ConditionQueryTermArgs) ToGoogleCloudRetailV2ConditionQueryTermOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionQueryTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ConditionQueryTermOutput)
}

// GoogleCloudRetailV2ConditionQueryTermArrayInput is an input type that accepts GoogleCloudRetailV2ConditionQueryTermArray and GoogleCloudRetailV2ConditionQueryTermArrayOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ConditionQueryTermArrayInput` via:
//
//	GoogleCloudRetailV2ConditionQueryTermArray{ GoogleCloudRetailV2ConditionQueryTermArgs{...} }
type GoogleCloudRetailV2ConditionQueryTermArrayInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ConditionQueryTermArrayOutput() GoogleCloudRetailV2ConditionQueryTermArrayOutput
	ToGoogleCloudRetailV2ConditionQueryTermArrayOutputWithContext(context.Context) GoogleCloudRetailV2ConditionQueryTermArrayOutput
}

type GoogleCloudRetailV2ConditionQueryTermArray []GoogleCloudRetailV2ConditionQueryTermInput

func (GoogleCloudRetailV2ConditionQueryTermArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2ConditionQueryTerm)(nil)).Elem()
}

func (i GoogleCloudRetailV2ConditionQueryTermArray) ToGoogleCloudRetailV2ConditionQueryTermArrayOutput() GoogleCloudRetailV2ConditionQueryTermArrayOutput {
	return i.ToGoogleCloudRetailV2ConditionQueryTermArrayOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ConditionQueryTermArray) ToGoogleCloudRetailV2ConditionQueryTermArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionQueryTermArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ConditionQueryTermArrayOutput)
}

// Query terms that we want to match on.
type GoogleCloudRetailV2ConditionQueryTermOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ConditionQueryTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ConditionQueryTerm)(nil)).Elem()
}

func (o GoogleCloudRetailV2ConditionQueryTermOutput) ToGoogleCloudRetailV2ConditionQueryTermOutput() GoogleCloudRetailV2ConditionQueryTermOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionQueryTermOutput) ToGoogleCloudRetailV2ConditionQueryTermOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionQueryTermOutput {
	return o
}

// Whether this is supposed to be a full or partial match.
func (o GoogleCloudRetailV2ConditionQueryTermOutput) FullMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ConditionQueryTerm) *bool { return v.FullMatch }).(pulumi.BoolPtrOutput)
}

// The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. For example, "a b c" is 3 terms and allowed, but " a b c d" is 4 terms and not allowed for a partial match.
func (o GoogleCloudRetailV2ConditionQueryTermOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ConditionQueryTerm) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2ConditionQueryTermArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ConditionQueryTermArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2ConditionQueryTerm)(nil)).Elem()
}

func (o GoogleCloudRetailV2ConditionQueryTermArrayOutput) ToGoogleCloudRetailV2ConditionQueryTermArrayOutput() GoogleCloudRetailV2ConditionQueryTermArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionQueryTermArrayOutput) ToGoogleCloudRetailV2ConditionQueryTermArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionQueryTermArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionQueryTermArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2ConditionQueryTermOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2ConditionQueryTerm {
		return vs[0].([]GoogleCloudRetailV2ConditionQueryTerm)[vs[1].(int)]
	}).(GoogleCloudRetailV2ConditionQueryTermOutput)
}

// Query terms that we want to match on.
type GoogleCloudRetailV2ConditionQueryTermResponse struct {
	// Whether this is supposed to be a full or partial match.
	FullMatch bool `pulumi:"fullMatch"`
	// The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. For example, "a b c" is 3 terms and allowed, but " a b c d" is 4 terms and not allowed for a partial match.
	Value string `pulumi:"value"`
}

// Query terms that we want to match on.
type GoogleCloudRetailV2ConditionQueryTermResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ConditionQueryTermResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ConditionQueryTermResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2ConditionQueryTermResponseOutput) ToGoogleCloudRetailV2ConditionQueryTermResponseOutput() GoogleCloudRetailV2ConditionQueryTermResponseOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionQueryTermResponseOutput) ToGoogleCloudRetailV2ConditionQueryTermResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionQueryTermResponseOutput {
	return o
}

// Whether this is supposed to be a full or partial match.
func (o GoogleCloudRetailV2ConditionQueryTermResponseOutput) FullMatch() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ConditionQueryTermResponse) bool { return v.FullMatch }).(pulumi.BoolOutput)
}

// The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. For example, "a b c" is 3 terms and allowed, but " a b c d" is 4 terms and not allowed for a partial match.
func (o GoogleCloudRetailV2ConditionQueryTermResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ConditionQueryTermResponse) string { return v.Value }).(pulumi.StringOutput)
}

type GoogleCloudRetailV2ConditionQueryTermResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ConditionQueryTermResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2ConditionQueryTermResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2ConditionQueryTermResponseArrayOutput) ToGoogleCloudRetailV2ConditionQueryTermResponseArrayOutput() GoogleCloudRetailV2ConditionQueryTermResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionQueryTermResponseArrayOutput) ToGoogleCloudRetailV2ConditionQueryTermResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionQueryTermResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionQueryTermResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2ConditionQueryTermResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2ConditionQueryTermResponse {
		return vs[0].([]GoogleCloudRetailV2ConditionQueryTermResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2ConditionQueryTermResponseOutput)
}

// Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of 'query_terms' or 'products_filter'. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted.
type GoogleCloudRetailV2ConditionResponse struct {
	// Range of time(s) specifying when Condition is active. Condition true if any time range matches.
	ActiveTimeRange []GoogleCloudRetailV2ConditionTimeRangeResponse `pulumi:"activeTimeRange"`
	// Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;
	PageCategories []string `pulumi:"pageCategories"`
	// A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
	QueryTerms []GoogleCloudRetailV2ConditionQueryTermResponse `pulumi:"queryTerms"`
}

// Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of 'query_terms' or 'products_filter'. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted.
type GoogleCloudRetailV2ConditionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ConditionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2ConditionResponseOutput) ToGoogleCloudRetailV2ConditionResponseOutput() GoogleCloudRetailV2ConditionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionResponseOutput) ToGoogleCloudRetailV2ConditionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionResponseOutput {
	return o
}

// Range of time(s) specifying when Condition is active. Condition true if any time range matches.
func (o GoogleCloudRetailV2ConditionResponseOutput) ActiveTimeRange() GoogleCloudRetailV2ConditionTimeRangeResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ConditionResponse) []GoogleCloudRetailV2ConditionTimeRangeResponse {
		return v.ActiveTimeRange
	}).(GoogleCloudRetailV2ConditionTimeRangeResponseArrayOutput)
}

// Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;
func (o GoogleCloudRetailV2ConditionResponseOutput) PageCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ConditionResponse) []string { return v.PageCategories }).(pulumi.StringArrayOutput)
}

// A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
func (o GoogleCloudRetailV2ConditionResponseOutput) QueryTerms() GoogleCloudRetailV2ConditionQueryTermResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ConditionResponse) []GoogleCloudRetailV2ConditionQueryTermResponse {
		return v.QueryTerms
	}).(GoogleCloudRetailV2ConditionQueryTermResponseArrayOutput)
}

// Used for time-dependent conditions. Example: Want to have rule applied for week long sale.
type GoogleCloudRetailV2ConditionTimeRange struct {
	// End of time range. Range is inclusive.
	EndTime *string `pulumi:"endTime"`
	// Start of time range. Range is inclusive.
	StartTime *string `pulumi:"startTime"`
}

// GoogleCloudRetailV2ConditionTimeRangeInput is an input type that accepts GoogleCloudRetailV2ConditionTimeRangeArgs and GoogleCloudRetailV2ConditionTimeRangeOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ConditionTimeRangeInput` via:
//
//	GoogleCloudRetailV2ConditionTimeRangeArgs{...}
type GoogleCloudRetailV2ConditionTimeRangeInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ConditionTimeRangeOutput() GoogleCloudRetailV2ConditionTimeRangeOutput
	ToGoogleCloudRetailV2ConditionTimeRangeOutputWithContext(context.Context) GoogleCloudRetailV2ConditionTimeRangeOutput
}

// Used for time-dependent conditions. Example: Want to have rule applied for week long sale.
type GoogleCloudRetailV2ConditionTimeRangeArgs struct {
	// End of time range. Range is inclusive.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Start of time range. Range is inclusive.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (GoogleCloudRetailV2ConditionTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ConditionTimeRange)(nil)).Elem()
}

func (i GoogleCloudRetailV2ConditionTimeRangeArgs) ToGoogleCloudRetailV2ConditionTimeRangeOutput() GoogleCloudRetailV2ConditionTimeRangeOutput {
	return i.ToGoogleCloudRetailV2ConditionTimeRangeOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ConditionTimeRangeArgs) ToGoogleCloudRetailV2ConditionTimeRangeOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ConditionTimeRangeOutput)
}

// GoogleCloudRetailV2ConditionTimeRangeArrayInput is an input type that accepts GoogleCloudRetailV2ConditionTimeRangeArray and GoogleCloudRetailV2ConditionTimeRangeArrayOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ConditionTimeRangeArrayInput` via:
//
//	GoogleCloudRetailV2ConditionTimeRangeArray{ GoogleCloudRetailV2ConditionTimeRangeArgs{...} }
type GoogleCloudRetailV2ConditionTimeRangeArrayInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ConditionTimeRangeArrayOutput() GoogleCloudRetailV2ConditionTimeRangeArrayOutput
	ToGoogleCloudRetailV2ConditionTimeRangeArrayOutputWithContext(context.Context) GoogleCloudRetailV2ConditionTimeRangeArrayOutput
}

type GoogleCloudRetailV2ConditionTimeRangeArray []GoogleCloudRetailV2ConditionTimeRangeInput

func (GoogleCloudRetailV2ConditionTimeRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2ConditionTimeRange)(nil)).Elem()
}

func (i GoogleCloudRetailV2ConditionTimeRangeArray) ToGoogleCloudRetailV2ConditionTimeRangeArrayOutput() GoogleCloudRetailV2ConditionTimeRangeArrayOutput {
	return i.ToGoogleCloudRetailV2ConditionTimeRangeArrayOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ConditionTimeRangeArray) ToGoogleCloudRetailV2ConditionTimeRangeArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionTimeRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ConditionTimeRangeArrayOutput)
}

// Used for time-dependent conditions. Example: Want to have rule applied for week long sale.
type GoogleCloudRetailV2ConditionTimeRangeOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ConditionTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ConditionTimeRange)(nil)).Elem()
}

func (o GoogleCloudRetailV2ConditionTimeRangeOutput) ToGoogleCloudRetailV2ConditionTimeRangeOutput() GoogleCloudRetailV2ConditionTimeRangeOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionTimeRangeOutput) ToGoogleCloudRetailV2ConditionTimeRangeOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionTimeRangeOutput {
	return o
}

// End of time range. Range is inclusive.
func (o GoogleCloudRetailV2ConditionTimeRangeOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ConditionTimeRange) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Start of time range. Range is inclusive.
func (o GoogleCloudRetailV2ConditionTimeRangeOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ConditionTimeRange) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2ConditionTimeRangeArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ConditionTimeRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2ConditionTimeRange)(nil)).Elem()
}

func (o GoogleCloudRetailV2ConditionTimeRangeArrayOutput) ToGoogleCloudRetailV2ConditionTimeRangeArrayOutput() GoogleCloudRetailV2ConditionTimeRangeArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionTimeRangeArrayOutput) ToGoogleCloudRetailV2ConditionTimeRangeArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionTimeRangeArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionTimeRangeArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2ConditionTimeRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2ConditionTimeRange {
		return vs[0].([]GoogleCloudRetailV2ConditionTimeRange)[vs[1].(int)]
	}).(GoogleCloudRetailV2ConditionTimeRangeOutput)
}

// Used for time-dependent conditions. Example: Want to have rule applied for week long sale.
type GoogleCloudRetailV2ConditionTimeRangeResponse struct {
	// End of time range. Range is inclusive.
	EndTime string `pulumi:"endTime"`
	// Start of time range. Range is inclusive.
	StartTime string `pulumi:"startTime"`
}

// Used for time-dependent conditions. Example: Want to have rule applied for week long sale.
type GoogleCloudRetailV2ConditionTimeRangeResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ConditionTimeRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ConditionTimeRangeResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2ConditionTimeRangeResponseOutput) ToGoogleCloudRetailV2ConditionTimeRangeResponseOutput() GoogleCloudRetailV2ConditionTimeRangeResponseOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionTimeRangeResponseOutput) ToGoogleCloudRetailV2ConditionTimeRangeResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionTimeRangeResponseOutput {
	return o
}

// End of time range. Range is inclusive.
func (o GoogleCloudRetailV2ConditionTimeRangeResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ConditionTimeRangeResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// Start of time range. Range is inclusive.
func (o GoogleCloudRetailV2ConditionTimeRangeResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ConditionTimeRangeResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

type GoogleCloudRetailV2ConditionTimeRangeResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ConditionTimeRangeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2ConditionTimeRangeResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2ConditionTimeRangeResponseArrayOutput) ToGoogleCloudRetailV2ConditionTimeRangeResponseArrayOutput() GoogleCloudRetailV2ConditionTimeRangeResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionTimeRangeResponseArrayOutput) ToGoogleCloudRetailV2ConditionTimeRangeResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2ConditionTimeRangeResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ConditionTimeRangeResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2ConditionTimeRangeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2ConditionTimeRangeResponse {
		return vs[0].([]GoogleCloudRetailV2ConditionTimeRangeResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2ConditionTimeRangeResponseOutput)
}

// A custom attribute that is not explicitly modeled in Product.
type GoogleCloudRetailV2CustomAttribute struct {
	// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are indexed, so that they can be filtered, faceted or boosted in SearchService.Search. This field is ignored in a UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and SearchRequest.boost_spec for more details.
	Indexable *bool `pulumi:"indexable"`
	// The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
	Numbers []float64 `pulumi:"numbers"`
	// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are searchable by text queries in SearchService.Search. This field is ignored in a UserEvent. Only set if type text is set. Otherwise, a INVALID_ARGUMENT error is returned.
	Searchable *bool `pulumi:"searchable"`
	// The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
	Text []string `pulumi:"text"`
}

// GoogleCloudRetailV2CustomAttributeInput is an input type that accepts GoogleCloudRetailV2CustomAttributeArgs and GoogleCloudRetailV2CustomAttributeOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2CustomAttributeInput` via:
//
//	GoogleCloudRetailV2CustomAttributeArgs{...}
type GoogleCloudRetailV2CustomAttributeInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2CustomAttributeOutput() GoogleCloudRetailV2CustomAttributeOutput
	ToGoogleCloudRetailV2CustomAttributeOutputWithContext(context.Context) GoogleCloudRetailV2CustomAttributeOutput
}

// A custom attribute that is not explicitly modeled in Product.
type GoogleCloudRetailV2CustomAttributeArgs struct {
	// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are indexed, so that they can be filtered, faceted or boosted in SearchService.Search. This field is ignored in a UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and SearchRequest.boost_spec for more details.
	Indexable pulumi.BoolPtrInput `pulumi:"indexable"`
	// The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
	Numbers pulumi.Float64ArrayInput `pulumi:"numbers"`
	// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are searchable by text queries in SearchService.Search. This field is ignored in a UserEvent. Only set if type text is set. Otherwise, a INVALID_ARGUMENT error is returned.
	Searchable pulumi.BoolPtrInput `pulumi:"searchable"`
	// The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
	Text pulumi.StringArrayInput `pulumi:"text"`
}

func (GoogleCloudRetailV2CustomAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2CustomAttribute)(nil)).Elem()
}

func (i GoogleCloudRetailV2CustomAttributeArgs) ToGoogleCloudRetailV2CustomAttributeOutput() GoogleCloudRetailV2CustomAttributeOutput {
	return i.ToGoogleCloudRetailV2CustomAttributeOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2CustomAttributeArgs) ToGoogleCloudRetailV2CustomAttributeOutputWithContext(ctx context.Context) GoogleCloudRetailV2CustomAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2CustomAttributeOutput)
}

// GoogleCloudRetailV2CustomAttributeMapInput is an input type that accepts GoogleCloudRetailV2CustomAttributeMap and GoogleCloudRetailV2CustomAttributeMapOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2CustomAttributeMapInput` via:
//
//	GoogleCloudRetailV2CustomAttributeMap{ "key": GoogleCloudRetailV2CustomAttributeArgs{...} }
type GoogleCloudRetailV2CustomAttributeMapInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2CustomAttributeMapOutput() GoogleCloudRetailV2CustomAttributeMapOutput
	ToGoogleCloudRetailV2CustomAttributeMapOutputWithContext(context.Context) GoogleCloudRetailV2CustomAttributeMapOutput
}

type GoogleCloudRetailV2CustomAttributeMap map[string]GoogleCloudRetailV2CustomAttributeInput

func (GoogleCloudRetailV2CustomAttributeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GoogleCloudRetailV2CustomAttribute)(nil)).Elem()
}

func (i GoogleCloudRetailV2CustomAttributeMap) ToGoogleCloudRetailV2CustomAttributeMapOutput() GoogleCloudRetailV2CustomAttributeMapOutput {
	return i.ToGoogleCloudRetailV2CustomAttributeMapOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2CustomAttributeMap) ToGoogleCloudRetailV2CustomAttributeMapOutputWithContext(ctx context.Context) GoogleCloudRetailV2CustomAttributeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2CustomAttributeMapOutput)
}

// A custom attribute that is not explicitly modeled in Product.
type GoogleCloudRetailV2CustomAttributeOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2CustomAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2CustomAttribute)(nil)).Elem()
}

func (o GoogleCloudRetailV2CustomAttributeOutput) ToGoogleCloudRetailV2CustomAttributeOutput() GoogleCloudRetailV2CustomAttributeOutput {
	return o
}

func (o GoogleCloudRetailV2CustomAttributeOutput) ToGoogleCloudRetailV2CustomAttributeOutputWithContext(ctx context.Context) GoogleCloudRetailV2CustomAttributeOutput {
	return o
}

// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are indexed, so that they can be filtered, faceted or boosted in SearchService.Search. This field is ignored in a UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and SearchRequest.boost_spec for more details.
func (o GoogleCloudRetailV2CustomAttributeOutput) Indexable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2CustomAttribute) *bool { return v.Indexable }).(pulumi.BoolPtrOutput)
}

// The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2CustomAttributeOutput) Numbers() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2CustomAttribute) []float64 { return v.Numbers }).(pulumi.Float64ArrayOutput)
}

// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are searchable by text queries in SearchService.Search. This field is ignored in a UserEvent. Only set if type text is set. Otherwise, a INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2CustomAttributeOutput) Searchable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2CustomAttribute) *bool { return v.Searchable }).(pulumi.BoolPtrOutput)
}

// The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2CustomAttributeOutput) Text() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2CustomAttribute) []string { return v.Text }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2CustomAttributeMapOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2CustomAttributeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GoogleCloudRetailV2CustomAttribute)(nil)).Elem()
}

func (o GoogleCloudRetailV2CustomAttributeMapOutput) ToGoogleCloudRetailV2CustomAttributeMapOutput() GoogleCloudRetailV2CustomAttributeMapOutput {
	return o
}

func (o GoogleCloudRetailV2CustomAttributeMapOutput) ToGoogleCloudRetailV2CustomAttributeMapOutputWithContext(ctx context.Context) GoogleCloudRetailV2CustomAttributeMapOutput {
	return o
}

func (o GoogleCloudRetailV2CustomAttributeMapOutput) MapIndex(k pulumi.StringInput) GoogleCloudRetailV2CustomAttributeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GoogleCloudRetailV2CustomAttribute {
		return vs[0].(map[string]GoogleCloudRetailV2CustomAttribute)[vs[1].(string)]
	}).(GoogleCloudRetailV2CustomAttributeOutput)
}

// A custom attribute that is not explicitly modeled in Product.
type GoogleCloudRetailV2CustomAttributeResponse struct {
	// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are indexed, so that they can be filtered, faceted or boosted in SearchService.Search. This field is ignored in a UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and SearchRequest.boost_spec for more details.
	Indexable bool `pulumi:"indexable"`
	// The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
	Numbers []float64 `pulumi:"numbers"`
	// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are searchable by text queries in SearchService.Search. This field is ignored in a UserEvent. Only set if type text is set. Otherwise, a INVALID_ARGUMENT error is returned.
	Searchable bool `pulumi:"searchable"`
	// The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
	Text []string `pulumi:"text"`
}

// A custom attribute that is not explicitly modeled in Product.
type GoogleCloudRetailV2CustomAttributeResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2CustomAttributeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2CustomAttributeResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2CustomAttributeResponseOutput) ToGoogleCloudRetailV2CustomAttributeResponseOutput() GoogleCloudRetailV2CustomAttributeResponseOutput {
	return o
}

func (o GoogleCloudRetailV2CustomAttributeResponseOutput) ToGoogleCloudRetailV2CustomAttributeResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2CustomAttributeResponseOutput {
	return o
}

// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are indexed, so that they can be filtered, faceted or boosted in SearchService.Search. This field is ignored in a UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and SearchRequest.boost_spec for more details.
func (o GoogleCloudRetailV2CustomAttributeResponseOutput) Indexable() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2CustomAttributeResponse) bool { return v.Indexable }).(pulumi.BoolOutput)
}

// The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2CustomAttributeResponseOutput) Numbers() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2CustomAttributeResponse) []float64 { return v.Numbers }).(pulumi.Float64ArrayOutput)
}

// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are searchable by text queries in SearchService.Search. This field is ignored in a UserEvent. Only set if type text is set. Otherwise, a INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2CustomAttributeResponseOutput) Searchable() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2CustomAttributeResponse) bool { return v.Searchable }).(pulumi.BoolOutput)
}

// The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2CustomAttributeResponseOutput) Text() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2CustomAttributeResponse) []string { return v.Text }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2CustomAttributeResponseMapOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2CustomAttributeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GoogleCloudRetailV2CustomAttributeResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2CustomAttributeResponseMapOutput) ToGoogleCloudRetailV2CustomAttributeResponseMapOutput() GoogleCloudRetailV2CustomAttributeResponseMapOutput {
	return o
}

func (o GoogleCloudRetailV2CustomAttributeResponseMapOutput) ToGoogleCloudRetailV2CustomAttributeResponseMapOutputWithContext(ctx context.Context) GoogleCloudRetailV2CustomAttributeResponseMapOutput {
	return o
}

func (o GoogleCloudRetailV2CustomAttributeResponseMapOutput) MapIndex(k pulumi.StringInput) GoogleCloudRetailV2CustomAttributeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GoogleCloudRetailV2CustomAttributeResponse {
		return vs[0].(map[string]GoogleCloudRetailV2CustomAttributeResponse)[vs[1].(string)]
	}).(GoogleCloudRetailV2CustomAttributeResponseOutput)
}

// Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods.
type GoogleCloudRetailV2FulfillmentInfo struct {
	// The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2". Otherwise, an INVALID_ARGUMENT error is returned.
	PlaceIds []string `pulumi:"placeIds"`
	// The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.
	Type *string `pulumi:"type"`
}

// GoogleCloudRetailV2FulfillmentInfoInput is an input type that accepts GoogleCloudRetailV2FulfillmentInfoArgs and GoogleCloudRetailV2FulfillmentInfoOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2FulfillmentInfoInput` via:
//
//	GoogleCloudRetailV2FulfillmentInfoArgs{...}
type GoogleCloudRetailV2FulfillmentInfoInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2FulfillmentInfoOutput() GoogleCloudRetailV2FulfillmentInfoOutput
	ToGoogleCloudRetailV2FulfillmentInfoOutputWithContext(context.Context) GoogleCloudRetailV2FulfillmentInfoOutput
}

// Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods.
type GoogleCloudRetailV2FulfillmentInfoArgs struct {
	// The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2". Otherwise, an INVALID_ARGUMENT error is returned.
	PlaceIds pulumi.StringArrayInput `pulumi:"placeIds"`
	// The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GoogleCloudRetailV2FulfillmentInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2FulfillmentInfo)(nil)).Elem()
}

func (i GoogleCloudRetailV2FulfillmentInfoArgs) ToGoogleCloudRetailV2FulfillmentInfoOutput() GoogleCloudRetailV2FulfillmentInfoOutput {
	return i.ToGoogleCloudRetailV2FulfillmentInfoOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2FulfillmentInfoArgs) ToGoogleCloudRetailV2FulfillmentInfoOutputWithContext(ctx context.Context) GoogleCloudRetailV2FulfillmentInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2FulfillmentInfoOutput)
}

// GoogleCloudRetailV2FulfillmentInfoArrayInput is an input type that accepts GoogleCloudRetailV2FulfillmentInfoArray and GoogleCloudRetailV2FulfillmentInfoArrayOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2FulfillmentInfoArrayInput` via:
//
//	GoogleCloudRetailV2FulfillmentInfoArray{ GoogleCloudRetailV2FulfillmentInfoArgs{...} }
type GoogleCloudRetailV2FulfillmentInfoArrayInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2FulfillmentInfoArrayOutput() GoogleCloudRetailV2FulfillmentInfoArrayOutput
	ToGoogleCloudRetailV2FulfillmentInfoArrayOutputWithContext(context.Context) GoogleCloudRetailV2FulfillmentInfoArrayOutput
}

type GoogleCloudRetailV2FulfillmentInfoArray []GoogleCloudRetailV2FulfillmentInfoInput

func (GoogleCloudRetailV2FulfillmentInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2FulfillmentInfo)(nil)).Elem()
}

func (i GoogleCloudRetailV2FulfillmentInfoArray) ToGoogleCloudRetailV2FulfillmentInfoArrayOutput() GoogleCloudRetailV2FulfillmentInfoArrayOutput {
	return i.ToGoogleCloudRetailV2FulfillmentInfoArrayOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2FulfillmentInfoArray) ToGoogleCloudRetailV2FulfillmentInfoArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2FulfillmentInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2FulfillmentInfoArrayOutput)
}

// Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods.
type GoogleCloudRetailV2FulfillmentInfoOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2FulfillmentInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2FulfillmentInfo)(nil)).Elem()
}

func (o GoogleCloudRetailV2FulfillmentInfoOutput) ToGoogleCloudRetailV2FulfillmentInfoOutput() GoogleCloudRetailV2FulfillmentInfoOutput {
	return o
}

func (o GoogleCloudRetailV2FulfillmentInfoOutput) ToGoogleCloudRetailV2FulfillmentInfoOutputWithContext(ctx context.Context) GoogleCloudRetailV2FulfillmentInfoOutput {
	return o
}

// The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2". Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2FulfillmentInfoOutput) PlaceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2FulfillmentInfo) []string { return v.PlaceIds }).(pulumi.StringArrayOutput)
}

// The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2FulfillmentInfoOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2FulfillmentInfo) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2FulfillmentInfoArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2FulfillmentInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2FulfillmentInfo)(nil)).Elem()
}

func (o GoogleCloudRetailV2FulfillmentInfoArrayOutput) ToGoogleCloudRetailV2FulfillmentInfoArrayOutput() GoogleCloudRetailV2FulfillmentInfoArrayOutput {
	return o
}

func (o GoogleCloudRetailV2FulfillmentInfoArrayOutput) ToGoogleCloudRetailV2FulfillmentInfoArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2FulfillmentInfoArrayOutput {
	return o
}

func (o GoogleCloudRetailV2FulfillmentInfoArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2FulfillmentInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2FulfillmentInfo {
		return vs[0].([]GoogleCloudRetailV2FulfillmentInfo)[vs[1].(int)]
	}).(GoogleCloudRetailV2FulfillmentInfoOutput)
}

// Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods.
type GoogleCloudRetailV2FulfillmentInfoResponse struct {
	// The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2". Otherwise, an INVALID_ARGUMENT error is returned.
	PlaceIds []string `pulumi:"placeIds"`
	// The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.
	Type string `pulumi:"type"`
}

// Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods.
type GoogleCloudRetailV2FulfillmentInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2FulfillmentInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2FulfillmentInfoResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2FulfillmentInfoResponseOutput) ToGoogleCloudRetailV2FulfillmentInfoResponseOutput() GoogleCloudRetailV2FulfillmentInfoResponseOutput {
	return o
}

func (o GoogleCloudRetailV2FulfillmentInfoResponseOutput) ToGoogleCloudRetailV2FulfillmentInfoResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2FulfillmentInfoResponseOutput {
	return o
}

// The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2". Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2FulfillmentInfoResponseOutput) PlaceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2FulfillmentInfoResponse) []string { return v.PlaceIds }).(pulumi.StringArrayOutput)
}

// The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2FulfillmentInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2FulfillmentInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

type GoogleCloudRetailV2FulfillmentInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2FulfillmentInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2FulfillmentInfoResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2FulfillmentInfoResponseArrayOutput) ToGoogleCloudRetailV2FulfillmentInfoResponseArrayOutput() GoogleCloudRetailV2FulfillmentInfoResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2FulfillmentInfoResponseArrayOutput) ToGoogleCloudRetailV2FulfillmentInfoResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2FulfillmentInfoResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2FulfillmentInfoResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2FulfillmentInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2FulfillmentInfoResponse {
		return vs[0].([]GoogleCloudRetailV2FulfillmentInfoResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2FulfillmentInfoResponseOutput)
}

// Product image. Recommendations AI and Retail Search do not use product images to improve prediction and search results. However, product images can be returned in results, and are shown in prediction or search previews in the console.
type GoogleCloudRetailV2Image struct {
	// Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Height *int `pulumi:"height"`
	// URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
	Uri string `pulumi:"uri"`
	// Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Width *int `pulumi:"width"`
}

// GoogleCloudRetailV2ImageInput is an input type that accepts GoogleCloudRetailV2ImageArgs and GoogleCloudRetailV2ImageOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ImageInput` via:
//
//	GoogleCloudRetailV2ImageArgs{...}
type GoogleCloudRetailV2ImageInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ImageOutput() GoogleCloudRetailV2ImageOutput
	ToGoogleCloudRetailV2ImageOutputWithContext(context.Context) GoogleCloudRetailV2ImageOutput
}

// Product image. Recommendations AI and Retail Search do not use product images to improve prediction and search results. However, product images can be returned in results, and are shown in prediction or search previews in the console.
type GoogleCloudRetailV2ImageArgs struct {
	// Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
	Uri pulumi.StringInput `pulumi:"uri"`
	// Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Width pulumi.IntPtrInput `pulumi:"width"`
}

func (GoogleCloudRetailV2ImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2Image)(nil)).Elem()
}

func (i GoogleCloudRetailV2ImageArgs) ToGoogleCloudRetailV2ImageOutput() GoogleCloudRetailV2ImageOutput {
	return i.ToGoogleCloudRetailV2ImageOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ImageArgs) ToGoogleCloudRetailV2ImageOutputWithContext(ctx context.Context) GoogleCloudRetailV2ImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ImageOutput)
}

// GoogleCloudRetailV2ImageArrayInput is an input type that accepts GoogleCloudRetailV2ImageArray and GoogleCloudRetailV2ImageArrayOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ImageArrayInput` via:
//
//	GoogleCloudRetailV2ImageArray{ GoogleCloudRetailV2ImageArgs{...} }
type GoogleCloudRetailV2ImageArrayInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ImageArrayOutput() GoogleCloudRetailV2ImageArrayOutput
	ToGoogleCloudRetailV2ImageArrayOutputWithContext(context.Context) GoogleCloudRetailV2ImageArrayOutput
}

type GoogleCloudRetailV2ImageArray []GoogleCloudRetailV2ImageInput

func (GoogleCloudRetailV2ImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2Image)(nil)).Elem()
}

func (i GoogleCloudRetailV2ImageArray) ToGoogleCloudRetailV2ImageArrayOutput() GoogleCloudRetailV2ImageArrayOutput {
	return i.ToGoogleCloudRetailV2ImageArrayOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ImageArray) ToGoogleCloudRetailV2ImageArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2ImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ImageArrayOutput)
}

// Product image. Recommendations AI and Retail Search do not use product images to improve prediction and search results. However, product images can be returned in results, and are shown in prediction or search previews in the console.
type GoogleCloudRetailV2ImageOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2Image)(nil)).Elem()
}

func (o GoogleCloudRetailV2ImageOutput) ToGoogleCloudRetailV2ImageOutput() GoogleCloudRetailV2ImageOutput {
	return o
}

func (o GoogleCloudRetailV2ImageOutput) ToGoogleCloudRetailV2ImageOutputWithContext(ctx context.Context) GoogleCloudRetailV2ImageOutput {
	return o
}

// Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2ImageOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Image) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
func (o GoogleCloudRetailV2ImageOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Image) string { return v.Uri }).(pulumi.StringOutput)
}

// Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2ImageOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Image) *int { return v.Width }).(pulumi.IntPtrOutput)
}

type GoogleCloudRetailV2ImageArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2Image)(nil)).Elem()
}

func (o GoogleCloudRetailV2ImageArrayOutput) ToGoogleCloudRetailV2ImageArrayOutput() GoogleCloudRetailV2ImageArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ImageArrayOutput) ToGoogleCloudRetailV2ImageArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2ImageArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ImageArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2ImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2Image {
		return vs[0].([]GoogleCloudRetailV2Image)[vs[1].(int)]
	}).(GoogleCloudRetailV2ImageOutput)
}

// Product image. Recommendations AI and Retail Search do not use product images to improve prediction and search results. However, product images can be returned in results, and are shown in prediction or search previews in the console.
type GoogleCloudRetailV2ImageResponse struct {
	// Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Height int `pulumi:"height"`
	// URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
	Uri string `pulumi:"uri"`
	// Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Width int `pulumi:"width"`
}

// Product image. Recommendations AI and Retail Search do not use product images to improve prediction and search results. However, product images can be returned in results, and are shown in prediction or search previews in the console.
type GoogleCloudRetailV2ImageResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ImageResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2ImageResponseOutput) ToGoogleCloudRetailV2ImageResponseOutput() GoogleCloudRetailV2ImageResponseOutput {
	return o
}

func (o GoogleCloudRetailV2ImageResponseOutput) ToGoogleCloudRetailV2ImageResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2ImageResponseOutput {
	return o
}

// Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2ImageResponseOutput) Height() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ImageResponse) int { return v.Height }).(pulumi.IntOutput)
}

// URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
func (o GoogleCloudRetailV2ImageResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ImageResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2ImageResponseOutput) Width() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ImageResponse) int { return v.Width }).(pulumi.IntOutput)
}

type GoogleCloudRetailV2ImageResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ImageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2ImageResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2ImageResponseArrayOutput) ToGoogleCloudRetailV2ImageResponseArrayOutput() GoogleCloudRetailV2ImageResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ImageResponseArrayOutput) ToGoogleCloudRetailV2ImageResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2ImageResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ImageResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2ImageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2ImageResponse {
		return vs[0].([]GoogleCloudRetailV2ImageResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2ImageResponseOutput)
}

// A floating point interval.
type GoogleCloudRetailV2IntervalResponse struct {
	// Exclusive upper bound.
	ExclusiveMaximum float64 `pulumi:"exclusiveMaximum"`
	// Exclusive lower bound.
	ExclusiveMinimum float64 `pulumi:"exclusiveMinimum"`
	// Inclusive upper bound.
	Maximum float64 `pulumi:"maximum"`
	// Inclusive lower bound.
	Minimum float64 `pulumi:"minimum"`
}

// A floating point interval.
type GoogleCloudRetailV2IntervalResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2IntervalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2IntervalResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2IntervalResponseOutput) ToGoogleCloudRetailV2IntervalResponseOutput() GoogleCloudRetailV2IntervalResponseOutput {
	return o
}

func (o GoogleCloudRetailV2IntervalResponseOutput) ToGoogleCloudRetailV2IntervalResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2IntervalResponseOutput {
	return o
}

// Exclusive upper bound.
func (o GoogleCloudRetailV2IntervalResponseOutput) ExclusiveMaximum() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2IntervalResponse) float64 { return v.ExclusiveMaximum }).(pulumi.Float64Output)
}

// Exclusive lower bound.
func (o GoogleCloudRetailV2IntervalResponseOutput) ExclusiveMinimum() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2IntervalResponse) float64 { return v.ExclusiveMinimum }).(pulumi.Float64Output)
}

// Inclusive upper bound.
func (o GoogleCloudRetailV2IntervalResponseOutput) Maximum() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2IntervalResponse) float64 { return v.Maximum }).(pulumi.Float64Output)
}

// Inclusive lower bound.
func (o GoogleCloudRetailV2IntervalResponseOutput) Minimum() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2IntervalResponse) float64 { return v.Minimum }).(pulumi.Float64Output)
}

// The inventory information at a place (e.g. a store) identified by a place ID.
type GoogleCloudRetailV2LocalInventoryResponse struct {
	// Additional local inventory attributes, for example, store name, promotion tags, etc. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * At most 30 attributes are allowed. * The key must be a UTF-8 encoded string with a length limit of 32 characters. * The key must match the pattern: `a-zA-Z0-9*`. For example, key0LikeThis or KEY_1_LIKE_THIS. * The attribute values must be of the same type (text or number). * Only 1 value is allowed for each attribute. * For text values, the length limit is 256 UTF-8 characters. * The attribute does not support search. The `searchable` field should be unset or set to false. * The max summed total bytes of custom attribute keys and values per product is 5MiB.
	Attributes map[string]GoogleCloudRetailV2CustomAttributeResponse `pulumi:"attributes"`
	// Input only. Supported fulfillment types. Valid fulfillment type values include commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. All the elements must be distinct. Otherwise, an INVALID_ARGUMENT error is returned.
	FulfillmentTypes []string `pulumi:"fulfillmentTypes"`
	// The place ID for the current set of inventory information.
	PlaceId string `pulumi:"placeId"`
	// Product price and cost information. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).
	PriceInfo GoogleCloudRetailV2PriceInfoResponse `pulumi:"priceInfo"`
}

// The inventory information at a place (e.g. a store) identified by a place ID.
type GoogleCloudRetailV2LocalInventoryResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2LocalInventoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2LocalInventoryResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2LocalInventoryResponseOutput) ToGoogleCloudRetailV2LocalInventoryResponseOutput() GoogleCloudRetailV2LocalInventoryResponseOutput {
	return o
}

func (o GoogleCloudRetailV2LocalInventoryResponseOutput) ToGoogleCloudRetailV2LocalInventoryResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2LocalInventoryResponseOutput {
	return o
}

// Additional local inventory attributes, for example, store name, promotion tags, etc. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * At most 30 attributes are allowed. * The key must be a UTF-8 encoded string with a length limit of 32 characters. * The key must match the pattern: `a-zA-Z0-9*`. For example, key0LikeThis or KEY_1_LIKE_THIS. * The attribute values must be of the same type (text or number). * Only 1 value is allowed for each attribute. * For text values, the length limit is 256 UTF-8 characters. * The attribute does not support search. The `searchable` field should be unset or set to false. * The max summed total bytes of custom attribute keys and values per product is 5MiB.
func (o GoogleCloudRetailV2LocalInventoryResponseOutput) Attributes() GoogleCloudRetailV2CustomAttributeResponseMapOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2LocalInventoryResponse) map[string]GoogleCloudRetailV2CustomAttributeResponse {
		return v.Attributes
	}).(GoogleCloudRetailV2CustomAttributeResponseMapOutput)
}

// Input only. Supported fulfillment types. Valid fulfillment type values include commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. All the elements must be distinct. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2LocalInventoryResponseOutput) FulfillmentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2LocalInventoryResponse) []string { return v.FulfillmentTypes }).(pulumi.StringArrayOutput)
}

// The place ID for the current set of inventory information.
func (o GoogleCloudRetailV2LocalInventoryResponseOutput) PlaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2LocalInventoryResponse) string { return v.PlaceId }).(pulumi.StringOutput)
}

// Product price and cost information. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).
func (o GoogleCloudRetailV2LocalInventoryResponseOutput) PriceInfo() GoogleCloudRetailV2PriceInfoResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2LocalInventoryResponse) GoogleCloudRetailV2PriceInfoResponse {
		return v.PriceInfo
	}).(GoogleCloudRetailV2PriceInfoResponseOutput)
}

type GoogleCloudRetailV2LocalInventoryResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2LocalInventoryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2LocalInventoryResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2LocalInventoryResponseArrayOutput) ToGoogleCloudRetailV2LocalInventoryResponseArrayOutput() GoogleCloudRetailV2LocalInventoryResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2LocalInventoryResponseArrayOutput) ToGoogleCloudRetailV2LocalInventoryResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2LocalInventoryResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2LocalInventoryResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2LocalInventoryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2LocalInventoryResponse {
		return vs[0].([]GoogleCloudRetailV2LocalInventoryResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2LocalInventoryResponseOutput)
}

// Additional configs for the frequently-bought-together model type.
type GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig struct {
	// Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the `frequently-bought-together` type. If it isn't specified, it defaults to MULTIPLE_CONTEXT_PRODUCTS.
	ContextProductsType *GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigContextProductsType `pulumi:"contextProductsType"`
}

// GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigInput is an input type that accepts GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigArgs and GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigInput` via:
//
//	GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigArgs{...}
type GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput
	ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutputWithContext(context.Context) GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput
}

// Additional configs for the frequently-bought-together model type.
type GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigArgs struct {
	// Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the `frequently-bought-together` type. If it isn't specified, it defaults to MULTIPLE_CONTEXT_PRODUCTS.
	ContextProductsType GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigContextProductsTypePtrInput `pulumi:"contextProductsType"`
}

func (GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig)(nil)).Elem()
}

func (i GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigArgs) ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput {
	return i.ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigArgs) ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput)
}

func (i GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigArgs) ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return i.ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigArgs) ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput).ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrInput is an input type that accepts GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigArgs, GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtr and GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrInput` via:
//
//	        GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput
	ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(context.Context) GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput
}

type googleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrType GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigArgs

func GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtr(v *GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigArgs) GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrInput {
	return (*googleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrType)(v)
}

func (*googleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig)(nil)).Elem()
}

func (i *googleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrType) ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return i.ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrType) ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput)
}

// Additional configs for the frequently-bought-together model type.
type GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig)(nil)).Elem()
}

func (o GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput) ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput {
	return o
}

func (o GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput) ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput {
	return o
}

func (o GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput) ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return o.ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput) ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig) *GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig {
		return &v
	}).(GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput)
}

// Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the `frequently-bought-together` type. If it isn't specified, it defaults to MULTIPLE_CONTEXT_PRODUCTS.
func (o GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput) ContextProductsType() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigContextProductsTypePtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig) *GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigContextProductsType {
		return v.ContextProductsType
	}).(GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigContextProductsTypePtrOutput)
}

type GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig)(nil)).Elem()
}

func (o GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput) ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return o
}

func (o GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput) ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return o
}

func (o GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput) Elem() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig) GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig
		return ret
	}).(GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput)
}

// Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the `frequently-bought-together` type. If it isn't specified, it defaults to MULTIPLE_CONTEXT_PRODUCTS.
func (o GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput) ContextProductsType() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigContextProductsTypePtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig) *GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigContextProductsType {
		if v == nil {
			return nil
		}
		return v.ContextProductsType
	}).(GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigContextProductsTypePtrOutput)
}

// Additional configs for the frequently-bought-together model type.
type GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponse struct {
	// Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the `frequently-bought-together` type. If it isn't specified, it defaults to MULTIPLE_CONTEXT_PRODUCTS.
	ContextProductsType string `pulumi:"contextProductsType"`
}

// Additional configs for the frequently-bought-together model type.
type GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput) ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput {
	return o
}

func (o GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput) ToGoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput {
	return o
}

// Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the `frequently-bought-together` type. If it isn't specified, it defaults to MULTIPLE_CONTEXT_PRODUCTS.
func (o GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput) ContextProductsType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponse) string {
		return v.ContextProductsType
	}).(pulumi.StringOutput)
}

// Additional model features config.
type GoogleCloudRetailV2ModelModelFeaturesConfig struct {
	// Additional configs for frequently-bought-together models.
	FrequentlyBoughtTogetherConfig *GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig `pulumi:"frequentlyBoughtTogetherConfig"`
}

// GoogleCloudRetailV2ModelModelFeaturesConfigInput is an input type that accepts GoogleCloudRetailV2ModelModelFeaturesConfigArgs and GoogleCloudRetailV2ModelModelFeaturesConfigOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ModelModelFeaturesConfigInput` via:
//
//	GoogleCloudRetailV2ModelModelFeaturesConfigArgs{...}
type GoogleCloudRetailV2ModelModelFeaturesConfigInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ModelModelFeaturesConfigOutput() GoogleCloudRetailV2ModelModelFeaturesConfigOutput
	ToGoogleCloudRetailV2ModelModelFeaturesConfigOutputWithContext(context.Context) GoogleCloudRetailV2ModelModelFeaturesConfigOutput
}

// Additional model features config.
type GoogleCloudRetailV2ModelModelFeaturesConfigArgs struct {
	// Additional configs for frequently-bought-together models.
	FrequentlyBoughtTogetherConfig GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrInput `pulumi:"frequentlyBoughtTogetherConfig"`
}

func (GoogleCloudRetailV2ModelModelFeaturesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ModelModelFeaturesConfig)(nil)).Elem()
}

func (i GoogleCloudRetailV2ModelModelFeaturesConfigArgs) ToGoogleCloudRetailV2ModelModelFeaturesConfigOutput() GoogleCloudRetailV2ModelModelFeaturesConfigOutput {
	return i.ToGoogleCloudRetailV2ModelModelFeaturesConfigOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ModelModelFeaturesConfigArgs) ToGoogleCloudRetailV2ModelModelFeaturesConfigOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelModelFeaturesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ModelModelFeaturesConfigOutput)
}

func (i GoogleCloudRetailV2ModelModelFeaturesConfigArgs) ToGoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput() GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput {
	return i.ToGoogleCloudRetailV2ModelModelFeaturesConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2ModelModelFeaturesConfigArgs) ToGoogleCloudRetailV2ModelModelFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ModelModelFeaturesConfigOutput).ToGoogleCloudRetailV2ModelModelFeaturesConfigPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2ModelModelFeaturesConfigPtrInput is an input type that accepts GoogleCloudRetailV2ModelModelFeaturesConfigArgs, GoogleCloudRetailV2ModelModelFeaturesConfigPtr and GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2ModelModelFeaturesConfigPtrInput` via:
//
//	        GoogleCloudRetailV2ModelModelFeaturesConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2ModelModelFeaturesConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput() GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput
	ToGoogleCloudRetailV2ModelModelFeaturesConfigPtrOutputWithContext(context.Context) GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput
}

type googleCloudRetailV2ModelModelFeaturesConfigPtrType GoogleCloudRetailV2ModelModelFeaturesConfigArgs

func GoogleCloudRetailV2ModelModelFeaturesConfigPtr(v *GoogleCloudRetailV2ModelModelFeaturesConfigArgs) GoogleCloudRetailV2ModelModelFeaturesConfigPtrInput {
	return (*googleCloudRetailV2ModelModelFeaturesConfigPtrType)(v)
}

func (*googleCloudRetailV2ModelModelFeaturesConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2ModelModelFeaturesConfig)(nil)).Elem()
}

func (i *googleCloudRetailV2ModelModelFeaturesConfigPtrType) ToGoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput() GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput {
	return i.ToGoogleCloudRetailV2ModelModelFeaturesConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2ModelModelFeaturesConfigPtrType) ToGoogleCloudRetailV2ModelModelFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput)
}

// Additional model features config.
type GoogleCloudRetailV2ModelModelFeaturesConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ModelModelFeaturesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ModelModelFeaturesConfig)(nil)).Elem()
}

func (o GoogleCloudRetailV2ModelModelFeaturesConfigOutput) ToGoogleCloudRetailV2ModelModelFeaturesConfigOutput() GoogleCloudRetailV2ModelModelFeaturesConfigOutput {
	return o
}

func (o GoogleCloudRetailV2ModelModelFeaturesConfigOutput) ToGoogleCloudRetailV2ModelModelFeaturesConfigOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelModelFeaturesConfigOutput {
	return o
}

func (o GoogleCloudRetailV2ModelModelFeaturesConfigOutput) ToGoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput() GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput {
	return o.ToGoogleCloudRetailV2ModelModelFeaturesConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2ModelModelFeaturesConfigOutput) ToGoogleCloudRetailV2ModelModelFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2ModelModelFeaturesConfig) *GoogleCloudRetailV2ModelModelFeaturesConfig {
		return &v
	}).(GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput)
}

// Additional configs for frequently-bought-together models.
func (o GoogleCloudRetailV2ModelModelFeaturesConfigOutput) FrequentlyBoughtTogetherConfig() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ModelModelFeaturesConfig) *GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig {
		return v.FrequentlyBoughtTogetherConfig
	}).(GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput)
}

type GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2ModelModelFeaturesConfig)(nil)).Elem()
}

func (o GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput) ToGoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput() GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput {
	return o
}

func (o GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput) ToGoogleCloudRetailV2ModelModelFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput {
	return o
}

func (o GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput) Elem() GoogleCloudRetailV2ModelModelFeaturesConfigOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2ModelModelFeaturesConfig) GoogleCloudRetailV2ModelModelFeaturesConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2ModelModelFeaturesConfig
		return ret
	}).(GoogleCloudRetailV2ModelModelFeaturesConfigOutput)
}

// Additional configs for frequently-bought-together models.
func (o GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput) FrequentlyBoughtTogetherConfig() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2ModelModelFeaturesConfig) *GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfig {
		if v == nil {
			return nil
		}
		return v.FrequentlyBoughtTogetherConfig
	}).(GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput)
}

// Additional model features config.
type GoogleCloudRetailV2ModelModelFeaturesConfigResponse struct {
	// Additional configs for frequently-bought-together models.
	FrequentlyBoughtTogetherConfig GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponse `pulumi:"frequentlyBoughtTogetherConfig"`
}

// Additional model features config.
type GoogleCloudRetailV2ModelModelFeaturesConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ModelModelFeaturesConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ModelModelFeaturesConfigResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2ModelModelFeaturesConfigResponseOutput) ToGoogleCloudRetailV2ModelModelFeaturesConfigResponseOutput() GoogleCloudRetailV2ModelModelFeaturesConfigResponseOutput {
	return o
}

func (o GoogleCloudRetailV2ModelModelFeaturesConfigResponseOutput) ToGoogleCloudRetailV2ModelModelFeaturesConfigResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelModelFeaturesConfigResponseOutput {
	return o
}

// Additional configs for frequently-bought-together models.
func (o GoogleCloudRetailV2ModelModelFeaturesConfigResponseOutput) FrequentlyBoughtTogetherConfig() GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ModelModelFeaturesConfigResponse) GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponse {
		return v.FrequentlyBoughtTogetherConfig
	}).(GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput)
}

// Represents an ordered combination of valid serving configs, which can be used for `PAGE_OPTIMIZATION` recommendations.
type GoogleCloudRetailV2ModelServingConfigListResponse struct {
	// Optional. A set of valid serving configs that may be used for `PAGE_OPTIMIZATION`.
	ServingConfigIds []string `pulumi:"servingConfigIds"`
}

// Represents an ordered combination of valid serving configs, which can be used for `PAGE_OPTIMIZATION` recommendations.
type GoogleCloudRetailV2ModelServingConfigListResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ModelServingConfigListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ModelServingConfigListResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2ModelServingConfigListResponseOutput) ToGoogleCloudRetailV2ModelServingConfigListResponseOutput() GoogleCloudRetailV2ModelServingConfigListResponseOutput {
	return o
}

func (o GoogleCloudRetailV2ModelServingConfigListResponseOutput) ToGoogleCloudRetailV2ModelServingConfigListResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelServingConfigListResponseOutput {
	return o
}

// Optional. A set of valid serving configs that may be used for `PAGE_OPTIMIZATION`.
func (o GoogleCloudRetailV2ModelServingConfigListResponseOutput) ServingConfigIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ModelServingConfigListResponse) []string { return v.ServingConfigIds }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2ModelServingConfigListResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ModelServingConfigListResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2ModelServingConfigListResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2ModelServingConfigListResponseArrayOutput) ToGoogleCloudRetailV2ModelServingConfigListResponseArrayOutput() GoogleCloudRetailV2ModelServingConfigListResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ModelServingConfigListResponseArrayOutput) ToGoogleCloudRetailV2ModelServingConfigListResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2ModelServingConfigListResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ModelServingConfigListResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2ModelServingConfigListResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2ModelServingConfigListResponse {
		return vs[0].([]GoogleCloudRetailV2ModelServingConfigListResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2ModelServingConfigListResponseOutput)
}

// The price information of a Product.
type GoogleCloudRetailV2PriceInfo struct {
	// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
	Cost *float64 `pulumi:"cost"`
	// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.
	CurrencyCode *string `pulumi:"currencyCode"`
	// Price of the product without any discount. If zero, by default set to be the price. If set, original_price should be greater than or equal to price, otherwise an INVALID_ARGUMENT error is thrown.
	OriginalPrice *float64 `pulumi:"originalPrice"`
	// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).
	Price *float64 `pulumi:"price"`
	// The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.
	PriceEffectiveTime *string `pulumi:"priceEffectiveTime"`
	// The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.
	PriceExpireTime *string `pulumi:"priceExpireTime"`
}

// GoogleCloudRetailV2PriceInfoInput is an input type that accepts GoogleCloudRetailV2PriceInfoArgs and GoogleCloudRetailV2PriceInfoOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2PriceInfoInput` via:
//
//	GoogleCloudRetailV2PriceInfoArgs{...}
type GoogleCloudRetailV2PriceInfoInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2PriceInfoOutput() GoogleCloudRetailV2PriceInfoOutput
	ToGoogleCloudRetailV2PriceInfoOutputWithContext(context.Context) GoogleCloudRetailV2PriceInfoOutput
}

// The price information of a Product.
type GoogleCloudRetailV2PriceInfoArgs struct {
	// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
	Cost pulumi.Float64PtrInput `pulumi:"cost"`
	// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.
	CurrencyCode pulumi.StringPtrInput `pulumi:"currencyCode"`
	// Price of the product without any discount. If zero, by default set to be the price. If set, original_price should be greater than or equal to price, otherwise an INVALID_ARGUMENT error is thrown.
	OriginalPrice pulumi.Float64PtrInput `pulumi:"originalPrice"`
	// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).
	Price pulumi.Float64PtrInput `pulumi:"price"`
	// The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.
	PriceEffectiveTime pulumi.StringPtrInput `pulumi:"priceEffectiveTime"`
	// The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.
	PriceExpireTime pulumi.StringPtrInput `pulumi:"priceExpireTime"`
}

func (GoogleCloudRetailV2PriceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2PriceInfo)(nil)).Elem()
}

func (i GoogleCloudRetailV2PriceInfoArgs) ToGoogleCloudRetailV2PriceInfoOutput() GoogleCloudRetailV2PriceInfoOutput {
	return i.ToGoogleCloudRetailV2PriceInfoOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2PriceInfoArgs) ToGoogleCloudRetailV2PriceInfoOutputWithContext(ctx context.Context) GoogleCloudRetailV2PriceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2PriceInfoOutput)
}

func (i GoogleCloudRetailV2PriceInfoArgs) ToGoogleCloudRetailV2PriceInfoPtrOutput() GoogleCloudRetailV2PriceInfoPtrOutput {
	return i.ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2PriceInfoArgs) ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2PriceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2PriceInfoOutput).ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2PriceInfoPtrInput is an input type that accepts GoogleCloudRetailV2PriceInfoArgs, GoogleCloudRetailV2PriceInfoPtr and GoogleCloudRetailV2PriceInfoPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2PriceInfoPtrInput` via:
//
//	        GoogleCloudRetailV2PriceInfoArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2PriceInfoPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2PriceInfoPtrOutput() GoogleCloudRetailV2PriceInfoPtrOutput
	ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(context.Context) GoogleCloudRetailV2PriceInfoPtrOutput
}

type googleCloudRetailV2PriceInfoPtrType GoogleCloudRetailV2PriceInfoArgs

func GoogleCloudRetailV2PriceInfoPtr(v *GoogleCloudRetailV2PriceInfoArgs) GoogleCloudRetailV2PriceInfoPtrInput {
	return (*googleCloudRetailV2PriceInfoPtrType)(v)
}

func (*googleCloudRetailV2PriceInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2PriceInfo)(nil)).Elem()
}

func (i *googleCloudRetailV2PriceInfoPtrType) ToGoogleCloudRetailV2PriceInfoPtrOutput() GoogleCloudRetailV2PriceInfoPtrOutput {
	return i.ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2PriceInfoPtrType) ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2PriceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2PriceInfoPtrOutput)
}

// The price information of a Product.
type GoogleCloudRetailV2PriceInfoOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2PriceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2PriceInfo)(nil)).Elem()
}

func (o GoogleCloudRetailV2PriceInfoOutput) ToGoogleCloudRetailV2PriceInfoOutput() GoogleCloudRetailV2PriceInfoOutput {
	return o
}

func (o GoogleCloudRetailV2PriceInfoOutput) ToGoogleCloudRetailV2PriceInfoOutputWithContext(ctx context.Context) GoogleCloudRetailV2PriceInfoOutput {
	return o
}

func (o GoogleCloudRetailV2PriceInfoOutput) ToGoogleCloudRetailV2PriceInfoPtrOutput() GoogleCloudRetailV2PriceInfoPtrOutput {
	return o.ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2PriceInfoOutput) ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2PriceInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2PriceInfo) *GoogleCloudRetailV2PriceInfo {
		return &v
	}).(GoogleCloudRetailV2PriceInfoPtrOutput)
}

// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
func (o GoogleCloudRetailV2PriceInfoOutput) Cost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfo) *float64 { return v.Cost }).(pulumi.Float64PtrOutput)
}

// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.
func (o GoogleCloudRetailV2PriceInfoOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfo) *string { return v.CurrencyCode }).(pulumi.StringPtrOutput)
}

// Price of the product without any discount. If zero, by default set to be the price. If set, original_price should be greater than or equal to price, otherwise an INVALID_ARGUMENT error is thrown.
func (o GoogleCloudRetailV2PriceInfoOutput) OriginalPrice() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfo) *float64 { return v.OriginalPrice }).(pulumi.Float64PtrOutput)
}

// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).
func (o GoogleCloudRetailV2PriceInfoOutput) Price() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfo) *float64 { return v.Price }).(pulumi.Float64PtrOutput)
}

// The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.
func (o GoogleCloudRetailV2PriceInfoOutput) PriceEffectiveTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfo) *string { return v.PriceEffectiveTime }).(pulumi.StringPtrOutput)
}

// The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.
func (o GoogleCloudRetailV2PriceInfoOutput) PriceExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfo) *string { return v.PriceExpireTime }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2PriceInfoPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2PriceInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2PriceInfo)(nil)).Elem()
}

func (o GoogleCloudRetailV2PriceInfoPtrOutput) ToGoogleCloudRetailV2PriceInfoPtrOutput() GoogleCloudRetailV2PriceInfoPtrOutput {
	return o
}

func (o GoogleCloudRetailV2PriceInfoPtrOutput) ToGoogleCloudRetailV2PriceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2PriceInfoPtrOutput {
	return o
}

func (o GoogleCloudRetailV2PriceInfoPtrOutput) Elem() GoogleCloudRetailV2PriceInfoOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2PriceInfo) GoogleCloudRetailV2PriceInfo {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2PriceInfo
		return ret
	}).(GoogleCloudRetailV2PriceInfoOutput)
}

// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
func (o GoogleCloudRetailV2PriceInfoPtrOutput) Cost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2PriceInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.Cost
	}).(pulumi.Float64PtrOutput)
}

// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.
func (o GoogleCloudRetailV2PriceInfoPtrOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2PriceInfo) *string {
		if v == nil {
			return nil
		}
		return v.CurrencyCode
	}).(pulumi.StringPtrOutput)
}

// Price of the product without any discount. If zero, by default set to be the price. If set, original_price should be greater than or equal to price, otherwise an INVALID_ARGUMENT error is thrown.
func (o GoogleCloudRetailV2PriceInfoPtrOutput) OriginalPrice() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2PriceInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.OriginalPrice
	}).(pulumi.Float64PtrOutput)
}

// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).
func (o GoogleCloudRetailV2PriceInfoPtrOutput) Price() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2PriceInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.Price
	}).(pulumi.Float64PtrOutput)
}

// The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.
func (o GoogleCloudRetailV2PriceInfoPtrOutput) PriceEffectiveTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2PriceInfo) *string {
		if v == nil {
			return nil
		}
		return v.PriceEffectiveTime
	}).(pulumi.StringPtrOutput)
}

// The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.
func (o GoogleCloudRetailV2PriceInfoPtrOutput) PriceExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2PriceInfo) *string {
		if v == nil {
			return nil
		}
		return v.PriceExpireTime
	}).(pulumi.StringPtrOutput)
}

// The price range of all variant Product having the same Product.primary_product_id.
type GoogleCloudRetailV2PriceInfoPriceRangeResponse struct {
	// The inclusive Product.pricing_info.original_price internal of all variant Product having the same Product.primary_product_id.
	OriginalPrice GoogleCloudRetailV2IntervalResponse `pulumi:"originalPrice"`
	// The inclusive Product.pricing_info.price interval of all variant Product having the same Product.primary_product_id.
	Price GoogleCloudRetailV2IntervalResponse `pulumi:"price"`
}

// The price range of all variant Product having the same Product.primary_product_id.
type GoogleCloudRetailV2PriceInfoPriceRangeResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2PriceInfoPriceRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2PriceInfoPriceRangeResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2PriceInfoPriceRangeResponseOutput) ToGoogleCloudRetailV2PriceInfoPriceRangeResponseOutput() GoogleCloudRetailV2PriceInfoPriceRangeResponseOutput {
	return o
}

func (o GoogleCloudRetailV2PriceInfoPriceRangeResponseOutput) ToGoogleCloudRetailV2PriceInfoPriceRangeResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2PriceInfoPriceRangeResponseOutput {
	return o
}

// The inclusive Product.pricing_info.original_price internal of all variant Product having the same Product.primary_product_id.
func (o GoogleCloudRetailV2PriceInfoPriceRangeResponseOutput) OriginalPrice() GoogleCloudRetailV2IntervalResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfoPriceRangeResponse) GoogleCloudRetailV2IntervalResponse {
		return v.OriginalPrice
	}).(GoogleCloudRetailV2IntervalResponseOutput)
}

// The inclusive Product.pricing_info.price interval of all variant Product having the same Product.primary_product_id.
func (o GoogleCloudRetailV2PriceInfoPriceRangeResponseOutput) Price() GoogleCloudRetailV2IntervalResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfoPriceRangeResponse) GoogleCloudRetailV2IntervalResponse {
		return v.Price
	}).(GoogleCloudRetailV2IntervalResponseOutput)
}

// The price information of a Product.
type GoogleCloudRetailV2PriceInfoResponse struct {
	// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
	Cost float64 `pulumi:"cost"`
	// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.
	CurrencyCode string `pulumi:"currencyCode"`
	// Price of the product without any discount. If zero, by default set to be the price. If set, original_price should be greater than or equal to price, otherwise an INVALID_ARGUMENT error is thrown.
	OriginalPrice float64 `pulumi:"originalPrice"`
	// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).
	Price float64 `pulumi:"price"`
	// The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.
	PriceEffectiveTime string `pulumi:"priceEffectiveTime"`
	// The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.
	PriceExpireTime string `pulumi:"priceExpireTime"`
	// The price range of all the child Product.Type.VARIANT Products grouped together on the Product.Type.PRIMARY Product. Only populated for Product.Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.
	PriceRange GoogleCloudRetailV2PriceInfoPriceRangeResponse `pulumi:"priceRange"`
}

// The price information of a Product.
type GoogleCloudRetailV2PriceInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2PriceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2PriceInfoResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2PriceInfoResponseOutput) ToGoogleCloudRetailV2PriceInfoResponseOutput() GoogleCloudRetailV2PriceInfoResponseOutput {
	return o
}

func (o GoogleCloudRetailV2PriceInfoResponseOutput) ToGoogleCloudRetailV2PriceInfoResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2PriceInfoResponseOutput {
	return o
}

// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
func (o GoogleCloudRetailV2PriceInfoResponseOutput) Cost() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfoResponse) float64 { return v.Cost }).(pulumi.Float64Output)
}

// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.
func (o GoogleCloudRetailV2PriceInfoResponseOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfoResponse) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

// Price of the product without any discount. If zero, by default set to be the price. If set, original_price should be greater than or equal to price, otherwise an INVALID_ARGUMENT error is thrown.
func (o GoogleCloudRetailV2PriceInfoResponseOutput) OriginalPrice() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfoResponse) float64 { return v.OriginalPrice }).(pulumi.Float64Output)
}

// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).
func (o GoogleCloudRetailV2PriceInfoResponseOutput) Price() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfoResponse) float64 { return v.Price }).(pulumi.Float64Output)
}

// The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.
func (o GoogleCloudRetailV2PriceInfoResponseOutput) PriceEffectiveTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfoResponse) string { return v.PriceEffectiveTime }).(pulumi.StringOutput)
}

// The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.
func (o GoogleCloudRetailV2PriceInfoResponseOutput) PriceExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfoResponse) string { return v.PriceExpireTime }).(pulumi.StringOutput)
}

// The price range of all the child Product.Type.VARIANT Products grouped together on the Product.Type.PRIMARY Product. Only populated for Product.Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.
func (o GoogleCloudRetailV2PriceInfoResponseOutput) PriceRange() GoogleCloudRetailV2PriceInfoPriceRangeResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PriceInfoResponse) GoogleCloudRetailV2PriceInfoPriceRangeResponse {
		return v.PriceRange
	}).(GoogleCloudRetailV2PriceInfoPriceRangeResponseOutput)
}

// Product captures all metadata information of items to be recommended or searched.
type GoogleCloudRetailV2ProductResponse struct {
	// Highly encouraged. Extra product attributes to be included. For example, for products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the attributes here. Features that can take on one of a limited number of possible values. Two types of features can be set are: Textual features. some examples would be the brand/maker of a product, or country of a customer. Numerical features. Some examples would be the height/weight of a product, or age of a customer. For example: `{ "vendor": {"text": ["vendor123", "vendor456"]}, "lengths_cm": {"numbers":[2.3, 15.4]}, "heights_cm": {"numbers":[8.1, 6.4]} }`. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * Max entries count: 200. * The key must be a UTF-8 encoded string with a length limit of 128 characters. * For indexable attribute, the key must match the pattern: `a-zA-Z0-9*`. For example, `key0LikeThis` or `KEY_1_LIKE_THIS`. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a non-empty UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed.
	Attributes map[string]GoogleCloudRetailV2CustomAttributeResponse `pulumi:"attributes"`
	// The target group associated with a given audience (e.g. male, veterans, car owners, musicians, etc.) of the product.
	Audience GoogleCloudRetailV2AudienceResponse `pulumi:"audience"`
	// The online availability of the Product. Default to Availability.IN_STOCK. Corresponding properties: Google Merchant Center property [availability](https://support.google.com/merchants/answer/6324448). Schema.org property [Offer.availability](https://schema.org/availability).
	Availability string `pulumi:"availability"`
	// The available quantity of the item.
	AvailableQuantity int `pulumi:"availableQuantity"`
	// The timestamp when this Product becomes available for SearchService.Search. Note that this is only applicable to Type.PRIMARY and Type.COLLECTION, and ignored for Type.VARIANT.
	AvailableTime string `pulumi:"availableTime"`
	// The brands of the product. A maximum of 30 brands are allowed unless overridden through the Google Cloud console. Each brand must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [brand](https://support.google.com/merchants/answer/6324351). Schema.org property [Product.brand](https://schema.org/brand).
	Brands []string `pulumi:"brands"`
	// Product categories. This field is repeated for supporting one product belonging to several parallel categories. Strongly recommended using the full path for better search / recommendation quality. To represent full path of category, use '>' sign to separate different hierarchies. If '>' is part of the category name, replace it with other character(s). For example, if a shoes product belongs to both ["Shoes & Accessories" -> "Shoes"] and ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it could be represented as: "categories": [ "Shoes & Accessories > Shoes", "Sports & Fitness > Athletic Clothing > Shoes" ] Must be set for Type.PRIMARY Product otherwise an INVALID_ARGUMENT error is returned. At most 250 values are allowed per Product unless overridden via pantheon UI. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property google_product_category. Schema.org property [Product.category] (https://schema.org/category). [mc_google_product_category]: https://support.google.com/merchants/answer/6324436
	Categories []string `pulumi:"categories"`
	// The id of the collection members when type is Type.COLLECTION. Non-existent product ids are allowed. The type of the members must be either Type.PRIMARY or Type.VARIANT otherwise an INVALID_ARGUMENT error is thrown. Should not set it for other types. A maximum of 1000 values are allowed. Otherwise, an INVALID_ARGUMENT error is return.
	CollectionMemberIds []string `pulumi:"collectionMemberIds"`
	// The color of the product. Corresponding properties: Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
	ColorInfo GoogleCloudRetailV2ColorInfoResponse `pulumi:"colorInfo"`
	// The condition of the product. Strongly encouraged to use the standard values: "new", "refurbished", "used". A maximum of 1 value is allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [condition](https://support.google.com/merchants/answer/6324469). Schema.org property [Offer.itemCondition](https://schema.org/itemCondition).
	Conditions []string `pulumi:"conditions"`
	// Product description. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [description](https://support.google.com/merchants/answer/6324468). Schema.org property [Product.description](https://schema.org/description).
	Description string `pulumi:"description"`
	// Note that this field is applied in the following ways: * If the Product is already expired when it is uploaded, this product is not indexed for search. * If the Product is not expired when it is uploaded, only the Type.PRIMARY's and Type.COLLECTION's expireTime is respected, and Type.VARIANT's expireTime is not used. In general, we suggest the users to delete the stale products explicitly, instead of using this field to determine staleness. expire_time must be later than available_time and publish_time, otherwise an INVALID_ARGUMENT error is thrown. Corresponding properties: Google Merchant Center property [expiration_date](https://support.google.com/merchants/answer/6324499).
	ExpireTime string `pulumi:"expireTime"`
	// Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods. All the elements must have distinct FulfillmentInfo.type. Otherwise, an INVALID_ARGUMENT error is returned.
	FulfillmentInfo []GoogleCloudRetailV2FulfillmentInfoResponse `pulumi:"fulfillmentInfo"`
	// The Global Trade Item Number (GTIN) of the product. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. This field must be a Unigram. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [gtin](https://support.google.com/merchants/answer/6324461). Schema.org property [Product.isbn](https://schema.org/isbn), [Product.gtin8](https://schema.org/gtin8), [Product.gtin12](https://schema.org/gtin12), [Product.gtin13](https://schema.org/gtin13), or [Product.gtin14](https://schema.org/gtin14). If the value is not a valid GTIN, an INVALID_ARGUMENT error is returned.
	Gtin string `pulumi:"gtin"`
	// Product images for the product. We highly recommend putting the main image first. A maximum of 300 images are allowed. Corresponding properties: Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
	Images []GoogleCloudRetailV2ImageResponse `pulumi:"images"`
	// Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). For product prediction, this field is ignored and the model automatically detects the text language. The Product can include text in different languages, but duplicating Products to provide text in multiple languages can result in degraded model performance. For product search this field is in use. It defaults to "en-US" if unset.
	LanguageCode string `pulumi:"languageCode"`
	// A list of local inventories specific to different places. This field can be managed by ProductService.AddLocalInventories and ProductService.RemoveLocalInventories APIs if fine-grained, high-volume updates are necessary.
	LocalInventories []GoogleCloudRetailV2LocalInventoryResponse `pulumi:"localInventories"`
	// The material of the product. For example, "leather", "wooden". A maximum of 20 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 200 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [material](https://support.google.com/merchants/answer/6324410). Schema.org property [Product.material](https://schema.org/material).
	Materials []string `pulumi:"materials"`
	// Immutable. Full resource name of the product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
	Name string `pulumi:"name"`
	// The pattern or graphic print of the product. For example, "striped", "polka dot", "paisley". A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [pattern](https://support.google.com/merchants/answer/6324483). Schema.org property [Product.pattern](https://schema.org/pattern).
	Patterns []string `pulumi:"patterns"`
	// Product price and cost information. Corresponding properties: Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).
	PriceInfo GoogleCloudRetailV2PriceInfoResponse `pulumi:"priceInfo"`
	// Variant group identifier. Must be an id, with the same parent branch with this product. Otherwise, an error is thrown. For Type.PRIMARY Products, this field can only be empty or set to the same value as id. For VARIANT Products, this field cannot be empty. A maximum of 2,000 products are allowed to share the same Type.PRIMARY Product. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [item_group_id](https://support.google.com/merchants/answer/6324507). Schema.org property [Product.inProductGroupWithID](https://schema.org/inProductGroupWithID).
	PrimaryProductId string `pulumi:"primaryProductId"`
	// The promotions applied to the product. A maximum of 10 values are allowed per Product. Only Promotion.promotion_id will be used, other fields will be ignored if set.
	Promotions []GoogleCloudRetailV2PromotionResponse `pulumi:"promotions"`
	// The timestamp when the product is published by the retailer for the first time, which indicates the freshness of the products. Note that this field is different from available_time, given it purely describes product freshness regardless of when it is available on search and recommendation.
	PublishTime string `pulumi:"publishTime"`
	// The rating of this product.
	Rating GoogleCloudRetailV2RatingResponse `pulumi:"rating"`
	// Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form "attributes.key" where "key" is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency. This field is deprecated. Use the retrievable site-wide control instead.
	//
	// Deprecated: Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form "attributes.key" where "key" is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency. This field is deprecated. Use the retrievable site-wide control instead.
	RetrievableFields string `pulumi:"retrievableFields"`
	// The size of the product. To represent different size systems or size types, consider using this format: [[[size_system:]size_type:]size_value]. For example, in "US:MENS:M", "US" represents size system; "MENS" represents size type; "M" represents size value. In "GIRLS:27", size system is empty; "GIRLS" represents size type; "27" represents size value. In "32 inches", both size system and size type are empty, while size value is "32 inches". A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [size](https://support.google.com/merchants/answer/6324492), [size_type](https://support.google.com/merchants/answer/6324497), and [size_system](https://support.google.com/merchants/answer/6324502). Schema.org property [Product.size](https://schema.org/size).
	Sizes []string `pulumi:"sizes"`
	// Custom tags associated with the product. At most 250 values are allowed per Product. This value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This tag can be used for filtering recommendation results by passing the tag as part of the PredictRequest.filter. Corresponding properties: Google Merchant Center property [custom_label_0–4](https://support.google.com/merchants/answer/6324473).
	Tags []string `pulumi:"tags"`
	// Product title. This field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [title](https://support.google.com/merchants/answer/6324415). Schema.org property [Product.name](https://schema.org/name).
	Title string `pulumi:"title"`
	// Input only. The TTL (time to live) of the product. Note that this is only applicable to Type.PRIMARY and Type.COLLECTION, and ignored for Type.VARIANT. In general, we suggest the users to delete the stale products explicitly, instead of using this field to determine staleness. If it is set, it must be a non-negative value, and expire_time is set as current timestamp plus ttl. The derived expire_time is returned in the output and ttl is left blank when retrieving the Product. If it is set, the product is not available for SearchService.Search after current timestamp plus ttl. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts.
	Ttl string `pulumi:"ttl"`
	// Immutable. The type of the product. Default to Catalog.product_level_config.ingestion_product_type if unset.
	Type string `pulumi:"type"`
	// Canonical URL directly linking to the product detail page. It is strongly recommended to provide a valid uri for the product, otherwise the service performance could be significantly degraded. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [link](https://support.google.com/merchants/answer/6324416). Schema.org property [Offer.url](https://schema.org/url).
	Uri string `pulumi:"uri"`
	// Product variants grouped together on primary product which share similar product attributes. It's automatically grouped by primary_product_id for all the product variants. Only populated for Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.
	Variants []GoogleCloudRetailV2ProductResponse `pulumi:"variants"`
}

// Product captures all metadata information of items to be recommended or searched.
type GoogleCloudRetailV2ProductResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ProductResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2ProductResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2ProductResponseOutput) ToGoogleCloudRetailV2ProductResponseOutput() GoogleCloudRetailV2ProductResponseOutput {
	return o
}

func (o GoogleCloudRetailV2ProductResponseOutput) ToGoogleCloudRetailV2ProductResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2ProductResponseOutput {
	return o
}

// Highly encouraged. Extra product attributes to be included. For example, for products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the attributes here. Features that can take on one of a limited number of possible values. Two types of features can be set are: Textual features. some examples would be the brand/maker of a product, or country of a customer. Numerical features. Some examples would be the height/weight of a product, or age of a customer. For example: `{ "vendor": {"text": ["vendor123", "vendor456"]}, "lengths_cm": {"numbers":[2.3, 15.4]}, "heights_cm": {"numbers":[8.1, 6.4]} }`. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * Max entries count: 200. * The key must be a UTF-8 encoded string with a length limit of 128 characters. * For indexable attribute, the key must match the pattern: `a-zA-Z0-9*`. For example, `key0LikeThis` or `KEY_1_LIKE_THIS`. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a non-empty UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed.
func (o GoogleCloudRetailV2ProductResponseOutput) Attributes() GoogleCloudRetailV2CustomAttributeResponseMapOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) map[string]GoogleCloudRetailV2CustomAttributeResponse {
		return v.Attributes
	}).(GoogleCloudRetailV2CustomAttributeResponseMapOutput)
}

// The target group associated with a given audience (e.g. male, veterans, car owners, musicians, etc.) of the product.
func (o GoogleCloudRetailV2ProductResponseOutput) Audience() GoogleCloudRetailV2AudienceResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) GoogleCloudRetailV2AudienceResponse { return v.Audience }).(GoogleCloudRetailV2AudienceResponseOutput)
}

// The online availability of the Product. Default to Availability.IN_STOCK. Corresponding properties: Google Merchant Center property [availability](https://support.google.com/merchants/answer/6324448). Schema.org property [Offer.availability](https://schema.org/availability).
func (o GoogleCloudRetailV2ProductResponseOutput) Availability() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) string { return v.Availability }).(pulumi.StringOutput)
}

// The available quantity of the item.
func (o GoogleCloudRetailV2ProductResponseOutput) AvailableQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) int { return v.AvailableQuantity }).(pulumi.IntOutput)
}

// The timestamp when this Product becomes available for SearchService.Search. Note that this is only applicable to Type.PRIMARY and Type.COLLECTION, and ignored for Type.VARIANT.
func (o GoogleCloudRetailV2ProductResponseOutput) AvailableTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) string { return v.AvailableTime }).(pulumi.StringOutput)
}

// The brands of the product. A maximum of 30 brands are allowed unless overridden through the Google Cloud console. Each brand must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [brand](https://support.google.com/merchants/answer/6324351). Schema.org property [Product.brand](https://schema.org/brand).
func (o GoogleCloudRetailV2ProductResponseOutput) Brands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) []string { return v.Brands }).(pulumi.StringArrayOutput)
}

// Product categories. This field is repeated for supporting one product belonging to several parallel categories. Strongly recommended using the full path for better search / recommendation quality. To represent full path of category, use '>' sign to separate different hierarchies. If '>' is part of the category name, replace it with other character(s). For example, if a shoes product belongs to both ["Shoes & Accessories" -> "Shoes"] and ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it could be represented as: "categories": [ "Shoes & Accessories > Shoes", "Sports & Fitness > Athletic Clothing > Shoes" ] Must be set for Type.PRIMARY Product otherwise an INVALID_ARGUMENT error is returned. At most 250 values are allowed per Product unless overridden via pantheon UI. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property google_product_category. Schema.org property [Product.category] (https://schema.org/category). [mc_google_product_category]: https://support.google.com/merchants/answer/6324436
func (o GoogleCloudRetailV2ProductResponseOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) []string { return v.Categories }).(pulumi.StringArrayOutput)
}

// The id of the collection members when type is Type.COLLECTION. Non-existent product ids are allowed. The type of the members must be either Type.PRIMARY or Type.VARIANT otherwise an INVALID_ARGUMENT error is thrown. Should not set it for other types. A maximum of 1000 values are allowed. Otherwise, an INVALID_ARGUMENT error is return.
func (o GoogleCloudRetailV2ProductResponseOutput) CollectionMemberIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) []string { return v.CollectionMemberIds }).(pulumi.StringArrayOutput)
}

// The color of the product. Corresponding properties: Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
func (o GoogleCloudRetailV2ProductResponseOutput) ColorInfo() GoogleCloudRetailV2ColorInfoResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) GoogleCloudRetailV2ColorInfoResponse { return v.ColorInfo }).(GoogleCloudRetailV2ColorInfoResponseOutput)
}

// The condition of the product. Strongly encouraged to use the standard values: "new", "refurbished", "used". A maximum of 1 value is allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [condition](https://support.google.com/merchants/answer/6324469). Schema.org property [Offer.itemCondition](https://schema.org/itemCondition).
func (o GoogleCloudRetailV2ProductResponseOutput) Conditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) []string { return v.Conditions }).(pulumi.StringArrayOutput)
}

// Product description. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [description](https://support.google.com/merchants/answer/6324468). Schema.org property [Product.description](https://schema.org/description).
func (o GoogleCloudRetailV2ProductResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Note that this field is applied in the following ways: * If the Product is already expired when it is uploaded, this product is not indexed for search. * If the Product is not expired when it is uploaded, only the Type.PRIMARY's and Type.COLLECTION's expireTime is respected, and Type.VARIANT's expireTime is not used. In general, we suggest the users to delete the stale products explicitly, instead of using this field to determine staleness. expire_time must be later than available_time and publish_time, otherwise an INVALID_ARGUMENT error is thrown. Corresponding properties: Google Merchant Center property [expiration_date](https://support.google.com/merchants/answer/6324499).
func (o GoogleCloudRetailV2ProductResponseOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods. All the elements must have distinct FulfillmentInfo.type. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2ProductResponseOutput) FulfillmentInfo() GoogleCloudRetailV2FulfillmentInfoResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) []GoogleCloudRetailV2FulfillmentInfoResponse {
		return v.FulfillmentInfo
	}).(GoogleCloudRetailV2FulfillmentInfoResponseArrayOutput)
}

// The Global Trade Item Number (GTIN) of the product. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. This field must be a Unigram. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [gtin](https://support.google.com/merchants/answer/6324461). Schema.org property [Product.isbn](https://schema.org/isbn), [Product.gtin8](https://schema.org/gtin8), [Product.gtin12](https://schema.org/gtin12), [Product.gtin13](https://schema.org/gtin13), or [Product.gtin14](https://schema.org/gtin14). If the value is not a valid GTIN, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2ProductResponseOutput) Gtin() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) string { return v.Gtin }).(pulumi.StringOutput)
}

// Product images for the product. We highly recommend putting the main image first. A maximum of 300 images are allowed. Corresponding properties: Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
func (o GoogleCloudRetailV2ProductResponseOutput) Images() GoogleCloudRetailV2ImageResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) []GoogleCloudRetailV2ImageResponse { return v.Images }).(GoogleCloudRetailV2ImageResponseArrayOutput)
}

// Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). For product prediction, this field is ignored and the model automatically detects the text language. The Product can include text in different languages, but duplicating Products to provide text in multiple languages can result in degraded model performance. For product search this field is in use. It defaults to "en-US" if unset.
func (o GoogleCloudRetailV2ProductResponseOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) string { return v.LanguageCode }).(pulumi.StringOutput)
}

// A list of local inventories specific to different places. This field can be managed by ProductService.AddLocalInventories and ProductService.RemoveLocalInventories APIs if fine-grained, high-volume updates are necessary.
func (o GoogleCloudRetailV2ProductResponseOutput) LocalInventories() GoogleCloudRetailV2LocalInventoryResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) []GoogleCloudRetailV2LocalInventoryResponse {
		return v.LocalInventories
	}).(GoogleCloudRetailV2LocalInventoryResponseArrayOutput)
}

// The material of the product. For example, "leather", "wooden". A maximum of 20 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 200 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [material](https://support.google.com/merchants/answer/6324410). Schema.org property [Product.material](https://schema.org/material).
func (o GoogleCloudRetailV2ProductResponseOutput) Materials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) []string { return v.Materials }).(pulumi.StringArrayOutput)
}

// Immutable. Full resource name of the product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
func (o GoogleCloudRetailV2ProductResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The pattern or graphic print of the product. For example, "striped", "polka dot", "paisley". A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [pattern](https://support.google.com/merchants/answer/6324483). Schema.org property [Product.pattern](https://schema.org/pattern).
func (o GoogleCloudRetailV2ProductResponseOutput) Patterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) []string { return v.Patterns }).(pulumi.StringArrayOutput)
}

// Product price and cost information. Corresponding properties: Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).
func (o GoogleCloudRetailV2ProductResponseOutput) PriceInfo() GoogleCloudRetailV2PriceInfoResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) GoogleCloudRetailV2PriceInfoResponse { return v.PriceInfo }).(GoogleCloudRetailV2PriceInfoResponseOutput)
}

// Variant group identifier. Must be an id, with the same parent branch with this product. Otherwise, an error is thrown. For Type.PRIMARY Products, this field can only be empty or set to the same value as id. For VARIANT Products, this field cannot be empty. A maximum of 2,000 products are allowed to share the same Type.PRIMARY Product. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [item_group_id](https://support.google.com/merchants/answer/6324507). Schema.org property [Product.inProductGroupWithID](https://schema.org/inProductGroupWithID).
func (o GoogleCloudRetailV2ProductResponseOutput) PrimaryProductId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) string { return v.PrimaryProductId }).(pulumi.StringOutput)
}

// The promotions applied to the product. A maximum of 10 values are allowed per Product. Only Promotion.promotion_id will be used, other fields will be ignored if set.
func (o GoogleCloudRetailV2ProductResponseOutput) Promotions() GoogleCloudRetailV2PromotionResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) []GoogleCloudRetailV2PromotionResponse { return v.Promotions }).(GoogleCloudRetailV2PromotionResponseArrayOutput)
}

// The timestamp when the product is published by the retailer for the first time, which indicates the freshness of the products. Note that this field is different from available_time, given it purely describes product freshness regardless of when it is available on search and recommendation.
func (o GoogleCloudRetailV2ProductResponseOutput) PublishTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) string { return v.PublishTime }).(pulumi.StringOutput)
}

// The rating of this product.
func (o GoogleCloudRetailV2ProductResponseOutput) Rating() GoogleCloudRetailV2RatingResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) GoogleCloudRetailV2RatingResponse { return v.Rating }).(GoogleCloudRetailV2RatingResponseOutput)
}

// Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form "attributes.key" where "key" is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency. This field is deprecated. Use the retrievable site-wide control instead.
//
// Deprecated: Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form "attributes.key" where "key" is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency. This field is deprecated. Use the retrievable site-wide control instead.
func (o GoogleCloudRetailV2ProductResponseOutput) RetrievableFields() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) string { return v.RetrievableFields }).(pulumi.StringOutput)
}

// The size of the product. To represent different size systems or size types, consider using this format: [[[size_system:]size_type:]size_value]. For example, in "US:MENS:M", "US" represents size system; "MENS" represents size type; "M" represents size value. In "GIRLS:27", size system is empty; "GIRLS" represents size type; "27" represents size value. In "32 inches", both size system and size type are empty, while size value is "32 inches". A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [size](https://support.google.com/merchants/answer/6324492), [size_type](https://support.google.com/merchants/answer/6324497), and [size_system](https://support.google.com/merchants/answer/6324502). Schema.org property [Product.size](https://schema.org/size).
func (o GoogleCloudRetailV2ProductResponseOutput) Sizes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) []string { return v.Sizes }).(pulumi.StringArrayOutput)
}

// Custom tags associated with the product. At most 250 values are allowed per Product. This value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This tag can be used for filtering recommendation results by passing the tag as part of the PredictRequest.filter. Corresponding properties: Google Merchant Center property [custom_label_0–4](https://support.google.com/merchants/answer/6324473).
func (o GoogleCloudRetailV2ProductResponseOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Product title. This field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [title](https://support.google.com/merchants/answer/6324415). Schema.org property [Product.name](https://schema.org/name).
func (o GoogleCloudRetailV2ProductResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) string { return v.Title }).(pulumi.StringOutput)
}

// Input only. The TTL (time to live) of the product. Note that this is only applicable to Type.PRIMARY and Type.COLLECTION, and ignored for Type.VARIANT. In general, we suggest the users to delete the stale products explicitly, instead of using this field to determine staleness. If it is set, it must be a non-negative value, and expire_time is set as current timestamp plus ttl. The derived expire_time is returned in the output and ttl is left blank when retrieving the Product. If it is set, the product is not available for SearchService.Search after current timestamp plus ttl. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts.
func (o GoogleCloudRetailV2ProductResponseOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) string { return v.Ttl }).(pulumi.StringOutput)
}

// Immutable. The type of the product. Default to Catalog.product_level_config.ingestion_product_type if unset.
func (o GoogleCloudRetailV2ProductResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Canonical URL directly linking to the product detail page. It is strongly recommended to provide a valid uri for the product, otherwise the service performance could be significantly degraded. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [link](https://support.google.com/merchants/answer/6324416). Schema.org property [Offer.url](https://schema.org/url).
func (o GoogleCloudRetailV2ProductResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Product variants grouped together on primary product which share similar product attributes. It's automatically grouped by primary_product_id for all the product variants. Only populated for Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.
func (o GoogleCloudRetailV2ProductResponseOutput) Variants() GoogleCloudRetailV2ProductResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2ProductResponse) []GoogleCloudRetailV2ProductResponse { return v.Variants }).(GoogleCloudRetailV2ProductResponseArrayOutput)
}

type GoogleCloudRetailV2ProductResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2ProductResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2ProductResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2ProductResponseArrayOutput) ToGoogleCloudRetailV2ProductResponseArrayOutput() GoogleCloudRetailV2ProductResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ProductResponseArrayOutput) ToGoogleCloudRetailV2ProductResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2ProductResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2ProductResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2ProductResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2ProductResponse {
		return vs[0].([]GoogleCloudRetailV2ProductResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2ProductResponseOutput)
}

// Promotion specification.
type GoogleCloudRetailV2Promotion struct {
	// Promotion identifier, which is the final component of name. For example, this field is "free_gift", if name is `projects/*/locations/global/catalogs/default_catalog/promotions/free_gift`. The value must be a UTF-8 encoded string with a length limit of 128 characters, and match the pattern: `a-zA-Z*`. For example, id0LikeThis or ID_1_LIKE_THIS. Otherwise, an INVALID_ARGUMENT error is returned. Corresponds to Google Merchant Center property [promotion_id](https://support.google.com/merchants/answer/7050148).
	PromotionId *string `pulumi:"promotionId"`
}

// GoogleCloudRetailV2PromotionInput is an input type that accepts GoogleCloudRetailV2PromotionArgs and GoogleCloudRetailV2PromotionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2PromotionInput` via:
//
//	GoogleCloudRetailV2PromotionArgs{...}
type GoogleCloudRetailV2PromotionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2PromotionOutput() GoogleCloudRetailV2PromotionOutput
	ToGoogleCloudRetailV2PromotionOutputWithContext(context.Context) GoogleCloudRetailV2PromotionOutput
}

// Promotion specification.
type GoogleCloudRetailV2PromotionArgs struct {
	// Promotion identifier, which is the final component of name. For example, this field is "free_gift", if name is `projects/*/locations/global/catalogs/default_catalog/promotions/free_gift`. The value must be a UTF-8 encoded string with a length limit of 128 characters, and match the pattern: `a-zA-Z*`. For example, id0LikeThis or ID_1_LIKE_THIS. Otherwise, an INVALID_ARGUMENT error is returned. Corresponds to Google Merchant Center property [promotion_id](https://support.google.com/merchants/answer/7050148).
	PromotionId pulumi.StringPtrInput `pulumi:"promotionId"`
}

func (GoogleCloudRetailV2PromotionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2Promotion)(nil)).Elem()
}

func (i GoogleCloudRetailV2PromotionArgs) ToGoogleCloudRetailV2PromotionOutput() GoogleCloudRetailV2PromotionOutput {
	return i.ToGoogleCloudRetailV2PromotionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2PromotionArgs) ToGoogleCloudRetailV2PromotionOutputWithContext(ctx context.Context) GoogleCloudRetailV2PromotionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2PromotionOutput)
}

// GoogleCloudRetailV2PromotionArrayInput is an input type that accepts GoogleCloudRetailV2PromotionArray and GoogleCloudRetailV2PromotionArrayOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2PromotionArrayInput` via:
//
//	GoogleCloudRetailV2PromotionArray{ GoogleCloudRetailV2PromotionArgs{...} }
type GoogleCloudRetailV2PromotionArrayInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2PromotionArrayOutput() GoogleCloudRetailV2PromotionArrayOutput
	ToGoogleCloudRetailV2PromotionArrayOutputWithContext(context.Context) GoogleCloudRetailV2PromotionArrayOutput
}

type GoogleCloudRetailV2PromotionArray []GoogleCloudRetailV2PromotionInput

func (GoogleCloudRetailV2PromotionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2Promotion)(nil)).Elem()
}

func (i GoogleCloudRetailV2PromotionArray) ToGoogleCloudRetailV2PromotionArrayOutput() GoogleCloudRetailV2PromotionArrayOutput {
	return i.ToGoogleCloudRetailV2PromotionArrayOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2PromotionArray) ToGoogleCloudRetailV2PromotionArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2PromotionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2PromotionArrayOutput)
}

// Promotion specification.
type GoogleCloudRetailV2PromotionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2PromotionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2Promotion)(nil)).Elem()
}

func (o GoogleCloudRetailV2PromotionOutput) ToGoogleCloudRetailV2PromotionOutput() GoogleCloudRetailV2PromotionOutput {
	return o
}

func (o GoogleCloudRetailV2PromotionOutput) ToGoogleCloudRetailV2PromotionOutputWithContext(ctx context.Context) GoogleCloudRetailV2PromotionOutput {
	return o
}

// Promotion identifier, which is the final component of name. For example, this field is "free_gift", if name is `projects/*/locations/global/catalogs/default_catalog/promotions/free_gift`. The value must be a UTF-8 encoded string with a length limit of 128 characters, and match the pattern: `a-zA-Z*`. For example, id0LikeThis or ID_1_LIKE_THIS. Otherwise, an INVALID_ARGUMENT error is returned. Corresponds to Google Merchant Center property [promotion_id](https://support.google.com/merchants/answer/7050148).
func (o GoogleCloudRetailV2PromotionOutput) PromotionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Promotion) *string { return v.PromotionId }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2PromotionArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2PromotionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2Promotion)(nil)).Elem()
}

func (o GoogleCloudRetailV2PromotionArrayOutput) ToGoogleCloudRetailV2PromotionArrayOutput() GoogleCloudRetailV2PromotionArrayOutput {
	return o
}

func (o GoogleCloudRetailV2PromotionArrayOutput) ToGoogleCloudRetailV2PromotionArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2PromotionArrayOutput {
	return o
}

func (o GoogleCloudRetailV2PromotionArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2PromotionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2Promotion {
		return vs[0].([]GoogleCloudRetailV2Promotion)[vs[1].(int)]
	}).(GoogleCloudRetailV2PromotionOutput)
}

// Promotion specification.
type GoogleCloudRetailV2PromotionResponse struct {
	// Promotion identifier, which is the final component of name. For example, this field is "free_gift", if name is `projects/*/locations/global/catalogs/default_catalog/promotions/free_gift`. The value must be a UTF-8 encoded string with a length limit of 128 characters, and match the pattern: `a-zA-Z*`. For example, id0LikeThis or ID_1_LIKE_THIS. Otherwise, an INVALID_ARGUMENT error is returned. Corresponds to Google Merchant Center property [promotion_id](https://support.google.com/merchants/answer/7050148).
	PromotionId string `pulumi:"promotionId"`
}

// Promotion specification.
type GoogleCloudRetailV2PromotionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2PromotionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2PromotionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2PromotionResponseOutput) ToGoogleCloudRetailV2PromotionResponseOutput() GoogleCloudRetailV2PromotionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2PromotionResponseOutput) ToGoogleCloudRetailV2PromotionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2PromotionResponseOutput {
	return o
}

// Promotion identifier, which is the final component of name. For example, this field is "free_gift", if name is `projects/*/locations/global/catalogs/default_catalog/promotions/free_gift`. The value must be a UTF-8 encoded string with a length limit of 128 characters, and match the pattern: `a-zA-Z*`. For example, id0LikeThis or ID_1_LIKE_THIS. Otherwise, an INVALID_ARGUMENT error is returned. Corresponds to Google Merchant Center property [promotion_id](https://support.google.com/merchants/answer/7050148).
func (o GoogleCloudRetailV2PromotionResponseOutput) PromotionId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2PromotionResponse) string { return v.PromotionId }).(pulumi.StringOutput)
}

type GoogleCloudRetailV2PromotionResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2PromotionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2PromotionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2PromotionResponseArrayOutput) ToGoogleCloudRetailV2PromotionResponseArrayOutput() GoogleCloudRetailV2PromotionResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2PromotionResponseArrayOutput) ToGoogleCloudRetailV2PromotionResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2PromotionResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2PromotionResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2PromotionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2PromotionResponse {
		return vs[0].([]GoogleCloudRetailV2PromotionResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2PromotionResponseOutput)
}

// The rating of a Product.
type GoogleCloudRetailV2Rating struct {
	// The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.
	AverageRating *float64 `pulumi:"averageRating"`
	// The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	RatingCount *int `pulumi:"ratingCount"`
	// List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.
	RatingHistogram []int `pulumi:"ratingHistogram"`
}

// GoogleCloudRetailV2RatingInput is an input type that accepts GoogleCloudRetailV2RatingArgs and GoogleCloudRetailV2RatingOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RatingInput` via:
//
//	GoogleCloudRetailV2RatingArgs{...}
type GoogleCloudRetailV2RatingInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RatingOutput() GoogleCloudRetailV2RatingOutput
	ToGoogleCloudRetailV2RatingOutputWithContext(context.Context) GoogleCloudRetailV2RatingOutput
}

// The rating of a Product.
type GoogleCloudRetailV2RatingArgs struct {
	// The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.
	AverageRating pulumi.Float64PtrInput `pulumi:"averageRating"`
	// The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	RatingCount pulumi.IntPtrInput `pulumi:"ratingCount"`
	// List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.
	RatingHistogram pulumi.IntArrayInput `pulumi:"ratingHistogram"`
}

func (GoogleCloudRetailV2RatingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2Rating)(nil)).Elem()
}

func (i GoogleCloudRetailV2RatingArgs) ToGoogleCloudRetailV2RatingOutput() GoogleCloudRetailV2RatingOutput {
	return i.ToGoogleCloudRetailV2RatingOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RatingArgs) ToGoogleCloudRetailV2RatingOutputWithContext(ctx context.Context) GoogleCloudRetailV2RatingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RatingOutput)
}

func (i GoogleCloudRetailV2RatingArgs) ToGoogleCloudRetailV2RatingPtrOutput() GoogleCloudRetailV2RatingPtrOutput {
	return i.ToGoogleCloudRetailV2RatingPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RatingArgs) ToGoogleCloudRetailV2RatingPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RatingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RatingOutput).ToGoogleCloudRetailV2RatingPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2RatingPtrInput is an input type that accepts GoogleCloudRetailV2RatingArgs, GoogleCloudRetailV2RatingPtr and GoogleCloudRetailV2RatingPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RatingPtrInput` via:
//
//	        GoogleCloudRetailV2RatingArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2RatingPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RatingPtrOutput() GoogleCloudRetailV2RatingPtrOutput
	ToGoogleCloudRetailV2RatingPtrOutputWithContext(context.Context) GoogleCloudRetailV2RatingPtrOutput
}

type googleCloudRetailV2RatingPtrType GoogleCloudRetailV2RatingArgs

func GoogleCloudRetailV2RatingPtr(v *GoogleCloudRetailV2RatingArgs) GoogleCloudRetailV2RatingPtrInput {
	return (*googleCloudRetailV2RatingPtrType)(v)
}

func (*googleCloudRetailV2RatingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2Rating)(nil)).Elem()
}

func (i *googleCloudRetailV2RatingPtrType) ToGoogleCloudRetailV2RatingPtrOutput() GoogleCloudRetailV2RatingPtrOutput {
	return i.ToGoogleCloudRetailV2RatingPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2RatingPtrType) ToGoogleCloudRetailV2RatingPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RatingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RatingPtrOutput)
}

// The rating of a Product.
type GoogleCloudRetailV2RatingOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RatingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2Rating)(nil)).Elem()
}

func (o GoogleCloudRetailV2RatingOutput) ToGoogleCloudRetailV2RatingOutput() GoogleCloudRetailV2RatingOutput {
	return o
}

func (o GoogleCloudRetailV2RatingOutput) ToGoogleCloudRetailV2RatingOutputWithContext(ctx context.Context) GoogleCloudRetailV2RatingOutput {
	return o
}

func (o GoogleCloudRetailV2RatingOutput) ToGoogleCloudRetailV2RatingPtrOutput() GoogleCloudRetailV2RatingPtrOutput {
	return o.ToGoogleCloudRetailV2RatingPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2RatingOutput) ToGoogleCloudRetailV2RatingPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RatingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2Rating) *GoogleCloudRetailV2Rating {
		return &v
	}).(GoogleCloudRetailV2RatingPtrOutput)
}

// The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2RatingOutput) AverageRating() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Rating) *float64 { return v.AverageRating }).(pulumi.Float64PtrOutput)
}

// The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2RatingOutput) RatingCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Rating) *int { return v.RatingCount }).(pulumi.IntPtrOutput)
}

// List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.
func (o GoogleCloudRetailV2RatingOutput) RatingHistogram() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Rating) []int { return v.RatingHistogram }).(pulumi.IntArrayOutput)
}

type GoogleCloudRetailV2RatingPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RatingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2Rating)(nil)).Elem()
}

func (o GoogleCloudRetailV2RatingPtrOutput) ToGoogleCloudRetailV2RatingPtrOutput() GoogleCloudRetailV2RatingPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RatingPtrOutput) ToGoogleCloudRetailV2RatingPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RatingPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RatingPtrOutput) Elem() GoogleCloudRetailV2RatingOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rating) GoogleCloudRetailV2Rating {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2Rating
		return ret
	}).(GoogleCloudRetailV2RatingOutput)
}

// The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2RatingPtrOutput) AverageRating() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rating) *float64 {
		if v == nil {
			return nil
		}
		return v.AverageRating
	}).(pulumi.Float64PtrOutput)
}

// The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2RatingPtrOutput) RatingCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rating) *int {
		if v == nil {
			return nil
		}
		return v.RatingCount
	}).(pulumi.IntPtrOutput)
}

// List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.
func (o GoogleCloudRetailV2RatingPtrOutput) RatingHistogram() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rating) []int {
		if v == nil {
			return nil
		}
		return v.RatingHistogram
	}).(pulumi.IntArrayOutput)
}

// The rating of a Product.
type GoogleCloudRetailV2RatingResponse struct {
	// The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.
	AverageRating float64 `pulumi:"averageRating"`
	// The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	RatingCount int `pulumi:"ratingCount"`
	// List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.
	RatingHistogram []int `pulumi:"ratingHistogram"`
}

// The rating of a Product.
type GoogleCloudRetailV2RatingResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RatingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RatingResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2RatingResponseOutput) ToGoogleCloudRetailV2RatingResponseOutput() GoogleCloudRetailV2RatingResponseOutput {
	return o
}

func (o GoogleCloudRetailV2RatingResponseOutput) ToGoogleCloudRetailV2RatingResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2RatingResponseOutput {
	return o
}

// The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2RatingResponseOutput) AverageRating() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2RatingResponse) float64 { return v.AverageRating }).(pulumi.Float64Output)
}

// The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2RatingResponseOutput) RatingCount() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RatingResponse) int { return v.RatingCount }).(pulumi.IntOutput)
}

// List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.
func (o GoogleCloudRetailV2RatingResponseOutput) RatingHistogram() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RatingResponse) []int { return v.RatingHistogram }).(pulumi.IntArrayOutput)
}

// A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently rules only work for controls with SOLUTION_TYPE_SEARCH.
type GoogleCloudRetailV2Rule struct {
	// A boost action.
	BoostAction *GoogleCloudRetailV2RuleBoostAction `pulumi:"boostAction"`
	// The condition that triggers the rule. If the condition is empty, the rule will always apply.
	Condition GoogleCloudRetailV2Condition `pulumi:"condition"`
	// Prevents term from being associated with other terms.
	DoNotAssociateAction *GoogleCloudRetailV2RuleDoNotAssociateAction `pulumi:"doNotAssociateAction"`
	// Filters results.
	FilterAction *GoogleCloudRetailV2RuleFilterAction `pulumi:"filterAction"`
	// Force returns an attribute as a facet in the request.
	ForceReturnFacetAction *GoogleCloudRetailV2RuleForceReturnFacetAction `pulumi:"forceReturnFacetAction"`
	// Ignores specific terms from query during search.
	IgnoreAction *GoogleCloudRetailV2RuleIgnoreAction `pulumi:"ignoreAction"`
	// Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.
	OnewaySynonymsAction *GoogleCloudRetailV2RuleOnewaySynonymsAction `pulumi:"onewaySynonymsAction"`
	// Redirects a shopper to a specific page.
	RedirectAction *GoogleCloudRetailV2RuleRedirectAction `pulumi:"redirectAction"`
	// Remove an attribute as a facet in the request (if present).
	RemoveFacetAction *GoogleCloudRetailV2RuleRemoveFacetAction `pulumi:"removeFacetAction"`
	// Replaces specific terms in the query.
	ReplacementAction *GoogleCloudRetailV2RuleReplacementAction `pulumi:"replacementAction"`
	// Treats a set of terms as synonyms of one another.
	TwowaySynonymsAction *GoogleCloudRetailV2RuleTwowaySynonymsAction `pulumi:"twowaySynonymsAction"`
}

// GoogleCloudRetailV2RuleInput is an input type that accepts GoogleCloudRetailV2RuleArgs and GoogleCloudRetailV2RuleOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleInput` via:
//
//	GoogleCloudRetailV2RuleArgs{...}
type GoogleCloudRetailV2RuleInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleOutput() GoogleCloudRetailV2RuleOutput
	ToGoogleCloudRetailV2RuleOutputWithContext(context.Context) GoogleCloudRetailV2RuleOutput
}

// A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently rules only work for controls with SOLUTION_TYPE_SEARCH.
type GoogleCloudRetailV2RuleArgs struct {
	// A boost action.
	BoostAction GoogleCloudRetailV2RuleBoostActionPtrInput `pulumi:"boostAction"`
	// The condition that triggers the rule. If the condition is empty, the rule will always apply.
	Condition GoogleCloudRetailV2ConditionInput `pulumi:"condition"`
	// Prevents term from being associated with other terms.
	DoNotAssociateAction GoogleCloudRetailV2RuleDoNotAssociateActionPtrInput `pulumi:"doNotAssociateAction"`
	// Filters results.
	FilterAction GoogleCloudRetailV2RuleFilterActionPtrInput `pulumi:"filterAction"`
	// Force returns an attribute as a facet in the request.
	ForceReturnFacetAction GoogleCloudRetailV2RuleForceReturnFacetActionPtrInput `pulumi:"forceReturnFacetAction"`
	// Ignores specific terms from query during search.
	IgnoreAction GoogleCloudRetailV2RuleIgnoreActionPtrInput `pulumi:"ignoreAction"`
	// Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.
	OnewaySynonymsAction GoogleCloudRetailV2RuleOnewaySynonymsActionPtrInput `pulumi:"onewaySynonymsAction"`
	// Redirects a shopper to a specific page.
	RedirectAction GoogleCloudRetailV2RuleRedirectActionPtrInput `pulumi:"redirectAction"`
	// Remove an attribute as a facet in the request (if present).
	RemoveFacetAction GoogleCloudRetailV2RuleRemoveFacetActionPtrInput `pulumi:"removeFacetAction"`
	// Replaces specific terms in the query.
	ReplacementAction GoogleCloudRetailV2RuleReplacementActionPtrInput `pulumi:"replacementAction"`
	// Treats a set of terms as synonyms of one another.
	TwowaySynonymsAction GoogleCloudRetailV2RuleTwowaySynonymsActionPtrInput `pulumi:"twowaySynonymsAction"`
}

func (GoogleCloudRetailV2RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2Rule)(nil)).Elem()
}

func (i GoogleCloudRetailV2RuleArgs) ToGoogleCloudRetailV2RuleOutput() GoogleCloudRetailV2RuleOutput {
	return i.ToGoogleCloudRetailV2RuleOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleArgs) ToGoogleCloudRetailV2RuleOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleOutput)
}

func (i GoogleCloudRetailV2RuleArgs) ToGoogleCloudRetailV2RulePtrOutput() GoogleCloudRetailV2RulePtrOutput {
	return i.ToGoogleCloudRetailV2RulePtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleArgs) ToGoogleCloudRetailV2RulePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleOutput).ToGoogleCloudRetailV2RulePtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2RulePtrInput is an input type that accepts GoogleCloudRetailV2RuleArgs, GoogleCloudRetailV2RulePtr and GoogleCloudRetailV2RulePtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RulePtrInput` via:
//
//	        GoogleCloudRetailV2RuleArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2RulePtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RulePtrOutput() GoogleCloudRetailV2RulePtrOutput
	ToGoogleCloudRetailV2RulePtrOutputWithContext(context.Context) GoogleCloudRetailV2RulePtrOutput
}

type googleCloudRetailV2RulePtrType GoogleCloudRetailV2RuleArgs

func GoogleCloudRetailV2RulePtr(v *GoogleCloudRetailV2RuleArgs) GoogleCloudRetailV2RulePtrInput {
	return (*googleCloudRetailV2RulePtrType)(v)
}

func (*googleCloudRetailV2RulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2Rule)(nil)).Elem()
}

func (i *googleCloudRetailV2RulePtrType) ToGoogleCloudRetailV2RulePtrOutput() GoogleCloudRetailV2RulePtrOutput {
	return i.ToGoogleCloudRetailV2RulePtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2RulePtrType) ToGoogleCloudRetailV2RulePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RulePtrOutput)
}

// A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently rules only work for controls with SOLUTION_TYPE_SEARCH.
type GoogleCloudRetailV2RuleOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2Rule)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleOutput) ToGoogleCloudRetailV2RuleOutput() GoogleCloudRetailV2RuleOutput {
	return o
}

func (o GoogleCloudRetailV2RuleOutput) ToGoogleCloudRetailV2RuleOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleOutput {
	return o
}

func (o GoogleCloudRetailV2RuleOutput) ToGoogleCloudRetailV2RulePtrOutput() GoogleCloudRetailV2RulePtrOutput {
	return o.ToGoogleCloudRetailV2RulePtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2RuleOutput) ToGoogleCloudRetailV2RulePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2Rule) *GoogleCloudRetailV2Rule {
		return &v
	}).(GoogleCloudRetailV2RulePtrOutput)
}

// A boost action.
func (o GoogleCloudRetailV2RuleOutput) BoostAction() GoogleCloudRetailV2RuleBoostActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleBoostAction { return v.BoostAction }).(GoogleCloudRetailV2RuleBoostActionPtrOutput)
}

// The condition that triggers the rule. If the condition is empty, the rule will always apply.
func (o GoogleCloudRetailV2RuleOutput) Condition() GoogleCloudRetailV2ConditionOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Rule) GoogleCloudRetailV2Condition { return v.Condition }).(GoogleCloudRetailV2ConditionOutput)
}

// Prevents term from being associated with other terms.
func (o GoogleCloudRetailV2RuleOutput) DoNotAssociateAction() GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleDoNotAssociateAction {
		return v.DoNotAssociateAction
	}).(GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput)
}

// Filters results.
func (o GoogleCloudRetailV2RuleOutput) FilterAction() GoogleCloudRetailV2RuleFilterActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleFilterAction { return v.FilterAction }).(GoogleCloudRetailV2RuleFilterActionPtrOutput)
}

// Force returns an attribute as a facet in the request.
func (o GoogleCloudRetailV2RuleOutput) ForceReturnFacetAction() GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleForceReturnFacetAction {
		return v.ForceReturnFacetAction
	}).(GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput)
}

// Ignores specific terms from query during search.
func (o GoogleCloudRetailV2RuleOutput) IgnoreAction() GoogleCloudRetailV2RuleIgnoreActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleIgnoreAction { return v.IgnoreAction }).(GoogleCloudRetailV2RuleIgnoreActionPtrOutput)
}

// Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.
func (o GoogleCloudRetailV2RuleOutput) OnewaySynonymsAction() GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleOnewaySynonymsAction {
		return v.OnewaySynonymsAction
	}).(GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput)
}

// Redirects a shopper to a specific page.
func (o GoogleCloudRetailV2RuleOutput) RedirectAction() GoogleCloudRetailV2RuleRedirectActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleRedirectAction { return v.RedirectAction }).(GoogleCloudRetailV2RuleRedirectActionPtrOutput)
}

// Remove an attribute as a facet in the request (if present).
func (o GoogleCloudRetailV2RuleOutput) RemoveFacetAction() GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleRemoveFacetAction { return v.RemoveFacetAction }).(GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput)
}

// Replaces specific terms in the query.
func (o GoogleCloudRetailV2RuleOutput) ReplacementAction() GoogleCloudRetailV2RuleReplacementActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleReplacementAction { return v.ReplacementAction }).(GoogleCloudRetailV2RuleReplacementActionPtrOutput)
}

// Treats a set of terms as synonyms of one another.
func (o GoogleCloudRetailV2RuleOutput) TwowaySynonymsAction() GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleTwowaySynonymsAction {
		return v.TwowaySynonymsAction
	}).(GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput)
}

type GoogleCloudRetailV2RulePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2Rule)(nil)).Elem()
}

func (o GoogleCloudRetailV2RulePtrOutput) ToGoogleCloudRetailV2RulePtrOutput() GoogleCloudRetailV2RulePtrOutput {
	return o
}

func (o GoogleCloudRetailV2RulePtrOutput) ToGoogleCloudRetailV2RulePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RulePtrOutput {
	return o
}

func (o GoogleCloudRetailV2RulePtrOutput) Elem() GoogleCloudRetailV2RuleOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rule) GoogleCloudRetailV2Rule {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2Rule
		return ret
	}).(GoogleCloudRetailV2RuleOutput)
}

// A boost action.
func (o GoogleCloudRetailV2RulePtrOutput) BoostAction() GoogleCloudRetailV2RuleBoostActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleBoostAction {
		if v == nil {
			return nil
		}
		return v.BoostAction
	}).(GoogleCloudRetailV2RuleBoostActionPtrOutput)
}

// The condition that triggers the rule. If the condition is empty, the rule will always apply.
func (o GoogleCloudRetailV2RulePtrOutput) Condition() GoogleCloudRetailV2ConditionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rule) *GoogleCloudRetailV2Condition {
		if v == nil {
			return nil
		}
		return &v.Condition
	}).(GoogleCloudRetailV2ConditionPtrOutput)
}

// Prevents term from being associated with other terms.
func (o GoogleCloudRetailV2RulePtrOutput) DoNotAssociateAction() GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleDoNotAssociateAction {
		if v == nil {
			return nil
		}
		return v.DoNotAssociateAction
	}).(GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput)
}

// Filters results.
func (o GoogleCloudRetailV2RulePtrOutput) FilterAction() GoogleCloudRetailV2RuleFilterActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleFilterAction {
		if v == nil {
			return nil
		}
		return v.FilterAction
	}).(GoogleCloudRetailV2RuleFilterActionPtrOutput)
}

// Force returns an attribute as a facet in the request.
func (o GoogleCloudRetailV2RulePtrOutput) ForceReturnFacetAction() GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleForceReturnFacetAction {
		if v == nil {
			return nil
		}
		return v.ForceReturnFacetAction
	}).(GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput)
}

// Ignores specific terms from query during search.
func (o GoogleCloudRetailV2RulePtrOutput) IgnoreAction() GoogleCloudRetailV2RuleIgnoreActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleIgnoreAction {
		if v == nil {
			return nil
		}
		return v.IgnoreAction
	}).(GoogleCloudRetailV2RuleIgnoreActionPtrOutput)
}

// Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.
func (o GoogleCloudRetailV2RulePtrOutput) OnewaySynonymsAction() GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleOnewaySynonymsAction {
		if v == nil {
			return nil
		}
		return v.OnewaySynonymsAction
	}).(GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput)
}

// Redirects a shopper to a specific page.
func (o GoogleCloudRetailV2RulePtrOutput) RedirectAction() GoogleCloudRetailV2RuleRedirectActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleRedirectAction {
		if v == nil {
			return nil
		}
		return v.RedirectAction
	}).(GoogleCloudRetailV2RuleRedirectActionPtrOutput)
}

// Remove an attribute as a facet in the request (if present).
func (o GoogleCloudRetailV2RulePtrOutput) RemoveFacetAction() GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleRemoveFacetAction {
		if v == nil {
			return nil
		}
		return v.RemoveFacetAction
	}).(GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput)
}

// Replaces specific terms in the query.
func (o GoogleCloudRetailV2RulePtrOutput) ReplacementAction() GoogleCloudRetailV2RuleReplacementActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleReplacementAction {
		if v == nil {
			return nil
		}
		return v.ReplacementAction
	}).(GoogleCloudRetailV2RuleReplacementActionPtrOutput)
}

// Treats a set of terms as synonyms of one another.
func (o GoogleCloudRetailV2RulePtrOutput) TwowaySynonymsAction() GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2Rule) *GoogleCloudRetailV2RuleTwowaySynonymsAction {
		if v == nil {
			return nil
		}
		return v.TwowaySynonymsAction
	}).(GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput)
}

// A boost action to apply to results matching condition specified above.
type GoogleCloudRetailV2RuleBoostAction struct {
	// Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
	Boost *float64 `pulumi:"boost"`
	// The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
	ProductsFilter *string `pulumi:"productsFilter"`
}

// GoogleCloudRetailV2RuleBoostActionInput is an input type that accepts GoogleCloudRetailV2RuleBoostActionArgs and GoogleCloudRetailV2RuleBoostActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleBoostActionInput` via:
//
//	GoogleCloudRetailV2RuleBoostActionArgs{...}
type GoogleCloudRetailV2RuleBoostActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleBoostActionOutput() GoogleCloudRetailV2RuleBoostActionOutput
	ToGoogleCloudRetailV2RuleBoostActionOutputWithContext(context.Context) GoogleCloudRetailV2RuleBoostActionOutput
}

// A boost action to apply to results matching condition specified above.
type GoogleCloudRetailV2RuleBoostActionArgs struct {
	// Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
	Boost pulumi.Float64PtrInput `pulumi:"boost"`
	// The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
	ProductsFilter pulumi.StringPtrInput `pulumi:"productsFilter"`
}

func (GoogleCloudRetailV2RuleBoostActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleBoostAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2RuleBoostActionArgs) ToGoogleCloudRetailV2RuleBoostActionOutput() GoogleCloudRetailV2RuleBoostActionOutput {
	return i.ToGoogleCloudRetailV2RuleBoostActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleBoostActionArgs) ToGoogleCloudRetailV2RuleBoostActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleBoostActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleBoostActionOutput)
}

func (i GoogleCloudRetailV2RuleBoostActionArgs) ToGoogleCloudRetailV2RuleBoostActionPtrOutput() GoogleCloudRetailV2RuleBoostActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleBoostActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleBoostActionArgs) ToGoogleCloudRetailV2RuleBoostActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleBoostActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleBoostActionOutput).ToGoogleCloudRetailV2RuleBoostActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2RuleBoostActionPtrInput is an input type that accepts GoogleCloudRetailV2RuleBoostActionArgs, GoogleCloudRetailV2RuleBoostActionPtr and GoogleCloudRetailV2RuleBoostActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleBoostActionPtrInput` via:
//
//	        GoogleCloudRetailV2RuleBoostActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2RuleBoostActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleBoostActionPtrOutput() GoogleCloudRetailV2RuleBoostActionPtrOutput
	ToGoogleCloudRetailV2RuleBoostActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2RuleBoostActionPtrOutput
}

type googleCloudRetailV2RuleBoostActionPtrType GoogleCloudRetailV2RuleBoostActionArgs

func GoogleCloudRetailV2RuleBoostActionPtr(v *GoogleCloudRetailV2RuleBoostActionArgs) GoogleCloudRetailV2RuleBoostActionPtrInput {
	return (*googleCloudRetailV2RuleBoostActionPtrType)(v)
}

func (*googleCloudRetailV2RuleBoostActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleBoostAction)(nil)).Elem()
}

func (i *googleCloudRetailV2RuleBoostActionPtrType) ToGoogleCloudRetailV2RuleBoostActionPtrOutput() GoogleCloudRetailV2RuleBoostActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleBoostActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2RuleBoostActionPtrType) ToGoogleCloudRetailV2RuleBoostActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleBoostActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleBoostActionPtrOutput)
}

// A boost action to apply to results matching condition specified above.
type GoogleCloudRetailV2RuleBoostActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleBoostActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleBoostAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleBoostActionOutput) ToGoogleCloudRetailV2RuleBoostActionOutput() GoogleCloudRetailV2RuleBoostActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleBoostActionOutput) ToGoogleCloudRetailV2RuleBoostActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleBoostActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleBoostActionOutput) ToGoogleCloudRetailV2RuleBoostActionPtrOutput() GoogleCloudRetailV2RuleBoostActionPtrOutput {
	return o.ToGoogleCloudRetailV2RuleBoostActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2RuleBoostActionOutput) ToGoogleCloudRetailV2RuleBoostActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleBoostActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2RuleBoostAction) *GoogleCloudRetailV2RuleBoostAction {
		return &v
	}).(GoogleCloudRetailV2RuleBoostActionPtrOutput)
}

// Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
func (o GoogleCloudRetailV2RuleBoostActionOutput) Boost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleBoostAction) *float64 { return v.Boost }).(pulumi.Float64PtrOutput)
}

// The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
func (o GoogleCloudRetailV2RuleBoostActionOutput) ProductsFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleBoostAction) *string { return v.ProductsFilter }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2RuleBoostActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleBoostActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleBoostAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleBoostActionPtrOutput) ToGoogleCloudRetailV2RuleBoostActionPtrOutput() GoogleCloudRetailV2RuleBoostActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleBoostActionPtrOutput) ToGoogleCloudRetailV2RuleBoostActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleBoostActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleBoostActionPtrOutput) Elem() GoogleCloudRetailV2RuleBoostActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleBoostAction) GoogleCloudRetailV2RuleBoostAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2RuleBoostAction
		return ret
	}).(GoogleCloudRetailV2RuleBoostActionOutput)
}

// Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
func (o GoogleCloudRetailV2RuleBoostActionPtrOutput) Boost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleBoostAction) *float64 {
		if v == nil {
			return nil
		}
		return v.Boost
	}).(pulumi.Float64PtrOutput)
}

// The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
func (o GoogleCloudRetailV2RuleBoostActionPtrOutput) ProductsFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleBoostAction) *string {
		if v == nil {
			return nil
		}
		return v.ProductsFilter
	}).(pulumi.StringPtrOutput)
}

// A boost action to apply to results matching condition specified above.
type GoogleCloudRetailV2RuleBoostActionResponse struct {
	// Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
	Boost float64 `pulumi:"boost"`
	// The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
	ProductsFilter string `pulumi:"productsFilter"`
}

// A boost action to apply to results matching condition specified above.
type GoogleCloudRetailV2RuleBoostActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleBoostActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleBoostActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleBoostActionResponseOutput) ToGoogleCloudRetailV2RuleBoostActionResponseOutput() GoogleCloudRetailV2RuleBoostActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2RuleBoostActionResponseOutput) ToGoogleCloudRetailV2RuleBoostActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleBoostActionResponseOutput {
	return o
}

// Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
func (o GoogleCloudRetailV2RuleBoostActionResponseOutput) Boost() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleBoostActionResponse) float64 { return v.Boost }).(pulumi.Float64Output)
}

// The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
func (o GoogleCloudRetailV2RuleBoostActionResponseOutput) ProductsFilter() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleBoostActionResponse) string { return v.ProductsFilter }).(pulumi.StringOutput)
}

// Prevents `query_term` from being associated with specified terms during search. Example: Don't associate "gShoe" and "cheap".
type GoogleCloudRetailV2RuleDoNotAssociateAction struct {
	// Cannot contain duplicates or the query term. Can specify up to 100 terms.
	DoNotAssociateTerms []string `pulumi:"doNotAssociateTerms"`
	// Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
	QueryTerms []string `pulumi:"queryTerms"`
	// Will be [deprecated = true] post migration;
	Terms []string `pulumi:"terms"`
}

// GoogleCloudRetailV2RuleDoNotAssociateActionInput is an input type that accepts GoogleCloudRetailV2RuleDoNotAssociateActionArgs and GoogleCloudRetailV2RuleDoNotAssociateActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleDoNotAssociateActionInput` via:
//
//	GoogleCloudRetailV2RuleDoNotAssociateActionArgs{...}
type GoogleCloudRetailV2RuleDoNotAssociateActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleDoNotAssociateActionOutput() GoogleCloudRetailV2RuleDoNotAssociateActionOutput
	ToGoogleCloudRetailV2RuleDoNotAssociateActionOutputWithContext(context.Context) GoogleCloudRetailV2RuleDoNotAssociateActionOutput
}

// Prevents `query_term` from being associated with specified terms during search. Example: Don't associate "gShoe" and "cheap".
type GoogleCloudRetailV2RuleDoNotAssociateActionArgs struct {
	// Cannot contain duplicates or the query term. Can specify up to 100 terms.
	DoNotAssociateTerms pulumi.StringArrayInput `pulumi:"doNotAssociateTerms"`
	// Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
	QueryTerms pulumi.StringArrayInput `pulumi:"queryTerms"`
	// Will be [deprecated = true] post migration;
	Terms pulumi.StringArrayInput `pulumi:"terms"`
}

func (GoogleCloudRetailV2RuleDoNotAssociateActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleDoNotAssociateAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2RuleDoNotAssociateActionArgs) ToGoogleCloudRetailV2RuleDoNotAssociateActionOutput() GoogleCloudRetailV2RuleDoNotAssociateActionOutput {
	return i.ToGoogleCloudRetailV2RuleDoNotAssociateActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleDoNotAssociateActionArgs) ToGoogleCloudRetailV2RuleDoNotAssociateActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleDoNotAssociateActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleDoNotAssociateActionOutput)
}

func (i GoogleCloudRetailV2RuleDoNotAssociateActionArgs) ToGoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput() GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleDoNotAssociateActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleDoNotAssociateActionArgs) ToGoogleCloudRetailV2RuleDoNotAssociateActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleDoNotAssociateActionOutput).ToGoogleCloudRetailV2RuleDoNotAssociateActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2RuleDoNotAssociateActionPtrInput is an input type that accepts GoogleCloudRetailV2RuleDoNotAssociateActionArgs, GoogleCloudRetailV2RuleDoNotAssociateActionPtr and GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleDoNotAssociateActionPtrInput` via:
//
//	        GoogleCloudRetailV2RuleDoNotAssociateActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2RuleDoNotAssociateActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput() GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput
	ToGoogleCloudRetailV2RuleDoNotAssociateActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput
}

type googleCloudRetailV2RuleDoNotAssociateActionPtrType GoogleCloudRetailV2RuleDoNotAssociateActionArgs

func GoogleCloudRetailV2RuleDoNotAssociateActionPtr(v *GoogleCloudRetailV2RuleDoNotAssociateActionArgs) GoogleCloudRetailV2RuleDoNotAssociateActionPtrInput {
	return (*googleCloudRetailV2RuleDoNotAssociateActionPtrType)(v)
}

func (*googleCloudRetailV2RuleDoNotAssociateActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleDoNotAssociateAction)(nil)).Elem()
}

func (i *googleCloudRetailV2RuleDoNotAssociateActionPtrType) ToGoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput() GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleDoNotAssociateActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2RuleDoNotAssociateActionPtrType) ToGoogleCloudRetailV2RuleDoNotAssociateActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput)
}

// Prevents `query_term` from being associated with specified terms during search. Example: Don't associate "gShoe" and "cheap".
type GoogleCloudRetailV2RuleDoNotAssociateActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleDoNotAssociateActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleDoNotAssociateAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleDoNotAssociateActionOutput) ToGoogleCloudRetailV2RuleDoNotAssociateActionOutput() GoogleCloudRetailV2RuleDoNotAssociateActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleDoNotAssociateActionOutput) ToGoogleCloudRetailV2RuleDoNotAssociateActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleDoNotAssociateActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleDoNotAssociateActionOutput) ToGoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput() GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput {
	return o.ToGoogleCloudRetailV2RuleDoNotAssociateActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2RuleDoNotAssociateActionOutput) ToGoogleCloudRetailV2RuleDoNotAssociateActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2RuleDoNotAssociateAction) *GoogleCloudRetailV2RuleDoNotAssociateAction {
		return &v
	}).(GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput)
}

// Cannot contain duplicates or the query term. Can specify up to 100 terms.
func (o GoogleCloudRetailV2RuleDoNotAssociateActionOutput) DoNotAssociateTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleDoNotAssociateAction) []string { return v.DoNotAssociateTerms }).(pulumi.StringArrayOutput)
}

// Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
func (o GoogleCloudRetailV2RuleDoNotAssociateActionOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleDoNotAssociateAction) []string { return v.QueryTerms }).(pulumi.StringArrayOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2RuleDoNotAssociateActionOutput) Terms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleDoNotAssociateAction) []string { return v.Terms }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleDoNotAssociateAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput) ToGoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput() GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput) ToGoogleCloudRetailV2RuleDoNotAssociateActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput) Elem() GoogleCloudRetailV2RuleDoNotAssociateActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleDoNotAssociateAction) GoogleCloudRetailV2RuleDoNotAssociateAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2RuleDoNotAssociateAction
		return ret
	}).(GoogleCloudRetailV2RuleDoNotAssociateActionOutput)
}

// Cannot contain duplicates or the query term. Can specify up to 100 terms.
func (o GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput) DoNotAssociateTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleDoNotAssociateAction) []string {
		if v == nil {
			return nil
		}
		return v.DoNotAssociateTerms
	}).(pulumi.StringArrayOutput)
}

// Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
func (o GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleDoNotAssociateAction) []string {
		if v == nil {
			return nil
		}
		return v.QueryTerms
	}).(pulumi.StringArrayOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput) Terms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleDoNotAssociateAction) []string {
		if v == nil {
			return nil
		}
		return v.Terms
	}).(pulumi.StringArrayOutput)
}

// Prevents `query_term` from being associated with specified terms during search. Example: Don't associate "gShoe" and "cheap".
type GoogleCloudRetailV2RuleDoNotAssociateActionResponse struct {
	// Cannot contain duplicates or the query term. Can specify up to 100 terms.
	DoNotAssociateTerms []string `pulumi:"doNotAssociateTerms"`
	// Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
	QueryTerms []string `pulumi:"queryTerms"`
	// Will be [deprecated = true] post migration;
	Terms []string `pulumi:"terms"`
}

// Prevents `query_term` from being associated with specified terms during search. Example: Don't associate "gShoe" and "cheap".
type GoogleCloudRetailV2RuleDoNotAssociateActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleDoNotAssociateActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleDoNotAssociateActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleDoNotAssociateActionResponseOutput) ToGoogleCloudRetailV2RuleDoNotAssociateActionResponseOutput() GoogleCloudRetailV2RuleDoNotAssociateActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2RuleDoNotAssociateActionResponseOutput) ToGoogleCloudRetailV2RuleDoNotAssociateActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleDoNotAssociateActionResponseOutput {
	return o
}

// Cannot contain duplicates or the query term. Can specify up to 100 terms.
func (o GoogleCloudRetailV2RuleDoNotAssociateActionResponseOutput) DoNotAssociateTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleDoNotAssociateActionResponse) []string { return v.DoNotAssociateTerms }).(pulumi.StringArrayOutput)
}

// Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
func (o GoogleCloudRetailV2RuleDoNotAssociateActionResponseOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleDoNotAssociateActionResponse) []string { return v.QueryTerms }).(pulumi.StringArrayOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2RuleDoNotAssociateActionResponseOutput) Terms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleDoNotAssociateActionResponse) []string { return v.Terms }).(pulumi.StringArrayOutput)
}

// * Rule Condition: - No Condition.query_terms provided is a global match. - 1 or more Condition.query_terms provided are combined with OR operator. * Action Input: The request query and filter that are applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.
type GoogleCloudRetailV2RuleFilterAction struct {
	// A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. For more information, see [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
	Filter *string `pulumi:"filter"`
}

// GoogleCloudRetailV2RuleFilterActionInput is an input type that accepts GoogleCloudRetailV2RuleFilterActionArgs and GoogleCloudRetailV2RuleFilterActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleFilterActionInput` via:
//
//	GoogleCloudRetailV2RuleFilterActionArgs{...}
type GoogleCloudRetailV2RuleFilterActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleFilterActionOutput() GoogleCloudRetailV2RuleFilterActionOutput
	ToGoogleCloudRetailV2RuleFilterActionOutputWithContext(context.Context) GoogleCloudRetailV2RuleFilterActionOutput
}

// * Rule Condition: - No Condition.query_terms provided is a global match. - 1 or more Condition.query_terms provided are combined with OR operator. * Action Input: The request query and filter that are applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.
type GoogleCloudRetailV2RuleFilterActionArgs struct {
	// A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. For more information, see [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
	Filter pulumi.StringPtrInput `pulumi:"filter"`
}

func (GoogleCloudRetailV2RuleFilterActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleFilterAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2RuleFilterActionArgs) ToGoogleCloudRetailV2RuleFilterActionOutput() GoogleCloudRetailV2RuleFilterActionOutput {
	return i.ToGoogleCloudRetailV2RuleFilterActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleFilterActionArgs) ToGoogleCloudRetailV2RuleFilterActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleFilterActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleFilterActionOutput)
}

func (i GoogleCloudRetailV2RuleFilterActionArgs) ToGoogleCloudRetailV2RuleFilterActionPtrOutput() GoogleCloudRetailV2RuleFilterActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleFilterActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleFilterActionArgs) ToGoogleCloudRetailV2RuleFilterActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleFilterActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleFilterActionOutput).ToGoogleCloudRetailV2RuleFilterActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2RuleFilterActionPtrInput is an input type that accepts GoogleCloudRetailV2RuleFilterActionArgs, GoogleCloudRetailV2RuleFilterActionPtr and GoogleCloudRetailV2RuleFilterActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleFilterActionPtrInput` via:
//
//	        GoogleCloudRetailV2RuleFilterActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2RuleFilterActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleFilterActionPtrOutput() GoogleCloudRetailV2RuleFilterActionPtrOutput
	ToGoogleCloudRetailV2RuleFilterActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2RuleFilterActionPtrOutput
}

type googleCloudRetailV2RuleFilterActionPtrType GoogleCloudRetailV2RuleFilterActionArgs

func GoogleCloudRetailV2RuleFilterActionPtr(v *GoogleCloudRetailV2RuleFilterActionArgs) GoogleCloudRetailV2RuleFilterActionPtrInput {
	return (*googleCloudRetailV2RuleFilterActionPtrType)(v)
}

func (*googleCloudRetailV2RuleFilterActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleFilterAction)(nil)).Elem()
}

func (i *googleCloudRetailV2RuleFilterActionPtrType) ToGoogleCloudRetailV2RuleFilterActionPtrOutput() GoogleCloudRetailV2RuleFilterActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleFilterActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2RuleFilterActionPtrType) ToGoogleCloudRetailV2RuleFilterActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleFilterActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleFilterActionPtrOutput)
}

// * Rule Condition: - No Condition.query_terms provided is a global match. - 1 or more Condition.query_terms provided are combined with OR operator. * Action Input: The request query and filter that are applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.
type GoogleCloudRetailV2RuleFilterActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleFilterActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleFilterAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleFilterActionOutput) ToGoogleCloudRetailV2RuleFilterActionOutput() GoogleCloudRetailV2RuleFilterActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleFilterActionOutput) ToGoogleCloudRetailV2RuleFilterActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleFilterActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleFilterActionOutput) ToGoogleCloudRetailV2RuleFilterActionPtrOutput() GoogleCloudRetailV2RuleFilterActionPtrOutput {
	return o.ToGoogleCloudRetailV2RuleFilterActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2RuleFilterActionOutput) ToGoogleCloudRetailV2RuleFilterActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleFilterActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2RuleFilterAction) *GoogleCloudRetailV2RuleFilterAction {
		return &v
	}).(GoogleCloudRetailV2RuleFilterActionPtrOutput)
}

// A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. For more information, see [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
func (o GoogleCloudRetailV2RuleFilterActionOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleFilterAction) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2RuleFilterActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleFilterActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleFilterAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleFilterActionPtrOutput) ToGoogleCloudRetailV2RuleFilterActionPtrOutput() GoogleCloudRetailV2RuleFilterActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleFilterActionPtrOutput) ToGoogleCloudRetailV2RuleFilterActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleFilterActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleFilterActionPtrOutput) Elem() GoogleCloudRetailV2RuleFilterActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleFilterAction) GoogleCloudRetailV2RuleFilterAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2RuleFilterAction
		return ret
	}).(GoogleCloudRetailV2RuleFilterActionOutput)
}

// A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. For more information, see [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
func (o GoogleCloudRetailV2RuleFilterActionPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleFilterAction) *string {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(pulumi.StringPtrOutput)
}

// * Rule Condition: - No Condition.query_terms provided is a global match. - 1 or more Condition.query_terms provided are combined with OR operator. * Action Input: The request query and filter that are applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.
type GoogleCloudRetailV2RuleFilterActionResponse struct {
	// A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. For more information, see [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
	Filter string `pulumi:"filter"`
}

// * Rule Condition: - No Condition.query_terms provided is a global match. - 1 or more Condition.query_terms provided are combined with OR operator. * Action Input: The request query and filter that are applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.
type GoogleCloudRetailV2RuleFilterActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleFilterActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleFilterActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleFilterActionResponseOutput) ToGoogleCloudRetailV2RuleFilterActionResponseOutput() GoogleCloudRetailV2RuleFilterActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2RuleFilterActionResponseOutput) ToGoogleCloudRetailV2RuleFilterActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleFilterActionResponseOutput {
	return o
}

// A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. For more information, see [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
func (o GoogleCloudRetailV2RuleFilterActionResponseOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleFilterActionResponse) string { return v.Filter }).(pulumi.StringOutput)
}

// Force returns an attribute/facet in the request around a certain position or above. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Inputs: attribute name, position * Action Result: Will force return a facet key around a certain position or above if the condition is satisfied. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes", the ForceReturnFacetAction.FacetPositionAdjustment.attribute_name is "size" and the ForceReturnFacetAction.FacetPositionAdjustment.position is 8. Two cases: a) The facet key "size" is not already in the top 8 slots, then the facet "size" will appear at a position close to 8. b) The facet key "size" in among the top 8 positions in the request, then it will stay at its current rank.
type GoogleCloudRetailV2RuleForceReturnFacetAction struct {
	// Each instance corresponds to a force return attribute for the given condition. There can't be more 3 instances here.
	FacetPositionAdjustments []GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment `pulumi:"facetPositionAdjustments"`
}

// GoogleCloudRetailV2RuleForceReturnFacetActionInput is an input type that accepts GoogleCloudRetailV2RuleForceReturnFacetActionArgs and GoogleCloudRetailV2RuleForceReturnFacetActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleForceReturnFacetActionInput` via:
//
//	GoogleCloudRetailV2RuleForceReturnFacetActionArgs{...}
type GoogleCloudRetailV2RuleForceReturnFacetActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleForceReturnFacetActionOutput() GoogleCloudRetailV2RuleForceReturnFacetActionOutput
	ToGoogleCloudRetailV2RuleForceReturnFacetActionOutputWithContext(context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionOutput
}

// Force returns an attribute/facet in the request around a certain position or above. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Inputs: attribute name, position * Action Result: Will force return a facet key around a certain position or above if the condition is satisfied. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes", the ForceReturnFacetAction.FacetPositionAdjustment.attribute_name is "size" and the ForceReturnFacetAction.FacetPositionAdjustment.position is 8. Two cases: a) The facet key "size" is not already in the top 8 slots, then the facet "size" will appear at a position close to 8. b) The facet key "size" in among the top 8 positions in the request, then it will stay at its current rank.
type GoogleCloudRetailV2RuleForceReturnFacetActionArgs struct {
	// Each instance corresponds to a force return attribute for the given condition. There can't be more 3 instances here.
	FacetPositionAdjustments GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayInput `pulumi:"facetPositionAdjustments"`
}

func (GoogleCloudRetailV2RuleForceReturnFacetActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleForceReturnFacetAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2RuleForceReturnFacetActionArgs) ToGoogleCloudRetailV2RuleForceReturnFacetActionOutput() GoogleCloudRetailV2RuleForceReturnFacetActionOutput {
	return i.ToGoogleCloudRetailV2RuleForceReturnFacetActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleForceReturnFacetActionArgs) ToGoogleCloudRetailV2RuleForceReturnFacetActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleForceReturnFacetActionOutput)
}

func (i GoogleCloudRetailV2RuleForceReturnFacetActionArgs) ToGoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput() GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleForceReturnFacetActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleForceReturnFacetActionArgs) ToGoogleCloudRetailV2RuleForceReturnFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleForceReturnFacetActionOutput).ToGoogleCloudRetailV2RuleForceReturnFacetActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2RuleForceReturnFacetActionPtrInput is an input type that accepts GoogleCloudRetailV2RuleForceReturnFacetActionArgs, GoogleCloudRetailV2RuleForceReturnFacetActionPtr and GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleForceReturnFacetActionPtrInput` via:
//
//	        GoogleCloudRetailV2RuleForceReturnFacetActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2RuleForceReturnFacetActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput() GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput
	ToGoogleCloudRetailV2RuleForceReturnFacetActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput
}

type googleCloudRetailV2RuleForceReturnFacetActionPtrType GoogleCloudRetailV2RuleForceReturnFacetActionArgs

func GoogleCloudRetailV2RuleForceReturnFacetActionPtr(v *GoogleCloudRetailV2RuleForceReturnFacetActionArgs) GoogleCloudRetailV2RuleForceReturnFacetActionPtrInput {
	return (*googleCloudRetailV2RuleForceReturnFacetActionPtrType)(v)
}

func (*googleCloudRetailV2RuleForceReturnFacetActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleForceReturnFacetAction)(nil)).Elem()
}

func (i *googleCloudRetailV2RuleForceReturnFacetActionPtrType) ToGoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput() GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleForceReturnFacetActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2RuleForceReturnFacetActionPtrType) ToGoogleCloudRetailV2RuleForceReturnFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput)
}

// Force returns an attribute/facet in the request around a certain position or above. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Inputs: attribute name, position * Action Result: Will force return a facet key around a certain position or above if the condition is satisfied. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes", the ForceReturnFacetAction.FacetPositionAdjustment.attribute_name is "size" and the ForceReturnFacetAction.FacetPositionAdjustment.position is 8. Two cases: a) The facet key "size" is not already in the top 8 slots, then the facet "size" will appear at a position close to 8. b) The facet key "size" in among the top 8 positions in the request, then it will stay at its current rank.
type GoogleCloudRetailV2RuleForceReturnFacetActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleForceReturnFacetActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleForceReturnFacetAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionOutput() GoogleCloudRetailV2RuleForceReturnFacetActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput() GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput {
	return o.ToGoogleCloudRetailV2RuleForceReturnFacetActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2RuleForceReturnFacetAction) *GoogleCloudRetailV2RuleForceReturnFacetAction {
		return &v
	}).(GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput)
}

// Each instance corresponds to a force return attribute for the given condition. There can't be more 3 instances here.
func (o GoogleCloudRetailV2RuleForceReturnFacetActionOutput) FacetPositionAdjustments() GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleForceReturnFacetAction) []GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment {
		return v.FacetPositionAdjustments
	}).(GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput)
}

type GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleForceReturnFacetAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput() GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput) Elem() GoogleCloudRetailV2RuleForceReturnFacetActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleForceReturnFacetAction) GoogleCloudRetailV2RuleForceReturnFacetAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2RuleForceReturnFacetAction
		return ret
	}).(GoogleCloudRetailV2RuleForceReturnFacetActionOutput)
}

// Each instance corresponds to a force return attribute for the given condition. There can't be more 3 instances here.
func (o GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput) FacetPositionAdjustments() GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleForceReturnFacetAction) []GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment {
		if v == nil {
			return nil
		}
		return v.FacetPositionAdjustments
	}).(GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput)
}

// Each facet position adjustment consists of a single attribute name (i.e. facet key) along with a specified position.
type GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment struct {
	// The attribute name to force return as a facet. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters long.
	AttributeName *string `pulumi:"attributeName"`
	// This is the position in the request as explained above. It should be strictly positive be at most 100.
	Position *int `pulumi:"position"`
}

// GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentInput is an input type that accepts GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArgs and GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentInput` via:
//
//	GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArgs{...}
type GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput() GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput
	ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutputWithContext(context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput
}

// Each facet position adjustment consists of a single attribute name (i.e. facet key) along with a specified position.
type GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArgs struct {
	// The attribute name to force return as a facet. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters long.
	AttributeName pulumi.StringPtrInput `pulumi:"attributeName"`
	// This is the position in the request as explained above. It should be strictly positive be at most 100.
	Position pulumi.IntPtrInput `pulumi:"position"`
}

func (GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment)(nil)).Elem()
}

func (i GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArgs) ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput() GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput {
	return i.ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArgs) ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput)
}

// GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayInput is an input type that accepts GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArray and GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayInput` via:
//
//	GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArray{ GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArgs{...} }
type GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput() GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput
	ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutputWithContext(context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput
}

type GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArray []GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentInput

func (GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment)(nil)).Elem()
}

func (i GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArray) ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput() GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput {
	return i.ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArray) ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput)
}

// Each facet position adjustment consists of a single attribute name (i.e. facet key) along with a specified position.
type GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput() GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput {
	return o
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput {
	return o
}

// The attribute name to force return as a facet. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters long.
func (o GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment) *string {
		return v.AttributeName
	}).(pulumi.StringPtrOutput)
}

// This is the position in the request as explained above. It should be strictly positive be at most 100.
func (o GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput) Position() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment) *int { return v.Position }).(pulumi.IntPtrOutput)
}

type GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput() GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput {
	return o
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput {
	return o
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment {
		return vs[0].([]GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustment)[vs[1].(int)]
	}).(GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput)
}

// Each facet position adjustment consists of a single attribute name (i.e. facet key) along with a specified position.
type GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponse struct {
	// The attribute name to force return as a facet. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters long.
	AttributeName string `pulumi:"attributeName"`
	// This is the position in the request as explained above. It should be strictly positive be at most 100.
	Position int `pulumi:"position"`
}

// Each facet position adjustment consists of a single attribute name (i.e. facet key) along with a specified position.
type GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput() GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput {
	return o
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput {
	return o
}

// The attribute name to force return as a facet. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters long.
func (o GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput) AttributeName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponse) string {
		return v.AttributeName
	}).(pulumi.StringOutput)
}

// This is the position in the request as explained above. It should be strictly positive be at most 100.
func (o GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponse) int {
		return v.Position
	}).(pulumi.IntOutput)
}

type GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput() GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponse {
		return vs[0].([]GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput)
}

// Force returns an attribute/facet in the request around a certain position or above. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Inputs: attribute name, position * Action Result: Will force return a facet key around a certain position or above if the condition is satisfied. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes", the ForceReturnFacetAction.FacetPositionAdjustment.attribute_name is "size" and the ForceReturnFacetAction.FacetPositionAdjustment.position is 8. Two cases: a) The facet key "size" is not already in the top 8 slots, then the facet "size" will appear at a position close to 8. b) The facet key "size" in among the top 8 positions in the request, then it will stay at its current rank.
type GoogleCloudRetailV2RuleForceReturnFacetActionResponse struct {
	// Each instance corresponds to a force return attribute for the given condition. There can't be more 3 instances here.
	FacetPositionAdjustments []GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponse `pulumi:"facetPositionAdjustments"`
}

// Force returns an attribute/facet in the request around a certain position or above. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Inputs: attribute name, position * Action Result: Will force return a facet key around a certain position or above if the condition is satisfied. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes", the ForceReturnFacetAction.FacetPositionAdjustment.attribute_name is "size" and the ForceReturnFacetAction.FacetPositionAdjustment.position is 8. Two cases: a) The facet key "size" is not already in the top 8 slots, then the facet "size" will appear at a position close to 8. b) The facet key "size" in among the top 8 positions in the request, then it will stay at its current rank.
type GoogleCloudRetailV2RuleForceReturnFacetActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleForceReturnFacetActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleForceReturnFacetActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionResponseOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionResponseOutput() GoogleCloudRetailV2RuleForceReturnFacetActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2RuleForceReturnFacetActionResponseOutput) ToGoogleCloudRetailV2RuleForceReturnFacetActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleForceReturnFacetActionResponseOutput {
	return o
}

// Each instance corresponds to a force return attribute for the given condition. There can't be more 3 instances here.
func (o GoogleCloudRetailV2RuleForceReturnFacetActionResponseOutput) FacetPositionAdjustments() GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleForceReturnFacetActionResponse) []GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponse {
		return v.FacetPositionAdjustments
	}).(GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput)
}

// Prevents a term in the query from being used in search. Example: Don't search for "shoddy".
type GoogleCloudRetailV2RuleIgnoreAction struct {
	// Terms to ignore in the search query.
	IgnoreTerms []string `pulumi:"ignoreTerms"`
}

// GoogleCloudRetailV2RuleIgnoreActionInput is an input type that accepts GoogleCloudRetailV2RuleIgnoreActionArgs and GoogleCloudRetailV2RuleIgnoreActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleIgnoreActionInput` via:
//
//	GoogleCloudRetailV2RuleIgnoreActionArgs{...}
type GoogleCloudRetailV2RuleIgnoreActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleIgnoreActionOutput() GoogleCloudRetailV2RuleIgnoreActionOutput
	ToGoogleCloudRetailV2RuleIgnoreActionOutputWithContext(context.Context) GoogleCloudRetailV2RuleIgnoreActionOutput
}

// Prevents a term in the query from being used in search. Example: Don't search for "shoddy".
type GoogleCloudRetailV2RuleIgnoreActionArgs struct {
	// Terms to ignore in the search query.
	IgnoreTerms pulumi.StringArrayInput `pulumi:"ignoreTerms"`
}

func (GoogleCloudRetailV2RuleIgnoreActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleIgnoreAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2RuleIgnoreActionArgs) ToGoogleCloudRetailV2RuleIgnoreActionOutput() GoogleCloudRetailV2RuleIgnoreActionOutput {
	return i.ToGoogleCloudRetailV2RuleIgnoreActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleIgnoreActionArgs) ToGoogleCloudRetailV2RuleIgnoreActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleIgnoreActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleIgnoreActionOutput)
}

func (i GoogleCloudRetailV2RuleIgnoreActionArgs) ToGoogleCloudRetailV2RuleIgnoreActionPtrOutput() GoogleCloudRetailV2RuleIgnoreActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleIgnoreActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleIgnoreActionArgs) ToGoogleCloudRetailV2RuleIgnoreActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleIgnoreActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleIgnoreActionOutput).ToGoogleCloudRetailV2RuleIgnoreActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2RuleIgnoreActionPtrInput is an input type that accepts GoogleCloudRetailV2RuleIgnoreActionArgs, GoogleCloudRetailV2RuleIgnoreActionPtr and GoogleCloudRetailV2RuleIgnoreActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleIgnoreActionPtrInput` via:
//
//	        GoogleCloudRetailV2RuleIgnoreActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2RuleIgnoreActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleIgnoreActionPtrOutput() GoogleCloudRetailV2RuleIgnoreActionPtrOutput
	ToGoogleCloudRetailV2RuleIgnoreActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2RuleIgnoreActionPtrOutput
}

type googleCloudRetailV2RuleIgnoreActionPtrType GoogleCloudRetailV2RuleIgnoreActionArgs

func GoogleCloudRetailV2RuleIgnoreActionPtr(v *GoogleCloudRetailV2RuleIgnoreActionArgs) GoogleCloudRetailV2RuleIgnoreActionPtrInput {
	return (*googleCloudRetailV2RuleIgnoreActionPtrType)(v)
}

func (*googleCloudRetailV2RuleIgnoreActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleIgnoreAction)(nil)).Elem()
}

func (i *googleCloudRetailV2RuleIgnoreActionPtrType) ToGoogleCloudRetailV2RuleIgnoreActionPtrOutput() GoogleCloudRetailV2RuleIgnoreActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleIgnoreActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2RuleIgnoreActionPtrType) ToGoogleCloudRetailV2RuleIgnoreActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleIgnoreActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleIgnoreActionPtrOutput)
}

// Prevents a term in the query from being used in search. Example: Don't search for "shoddy".
type GoogleCloudRetailV2RuleIgnoreActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleIgnoreActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleIgnoreAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleIgnoreActionOutput) ToGoogleCloudRetailV2RuleIgnoreActionOutput() GoogleCloudRetailV2RuleIgnoreActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleIgnoreActionOutput) ToGoogleCloudRetailV2RuleIgnoreActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleIgnoreActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleIgnoreActionOutput) ToGoogleCloudRetailV2RuleIgnoreActionPtrOutput() GoogleCloudRetailV2RuleIgnoreActionPtrOutput {
	return o.ToGoogleCloudRetailV2RuleIgnoreActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2RuleIgnoreActionOutput) ToGoogleCloudRetailV2RuleIgnoreActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleIgnoreActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2RuleIgnoreAction) *GoogleCloudRetailV2RuleIgnoreAction {
		return &v
	}).(GoogleCloudRetailV2RuleIgnoreActionPtrOutput)
}

// Terms to ignore in the search query.
func (o GoogleCloudRetailV2RuleIgnoreActionOutput) IgnoreTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleIgnoreAction) []string { return v.IgnoreTerms }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2RuleIgnoreActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleIgnoreActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleIgnoreAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleIgnoreActionPtrOutput) ToGoogleCloudRetailV2RuleIgnoreActionPtrOutput() GoogleCloudRetailV2RuleIgnoreActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleIgnoreActionPtrOutput) ToGoogleCloudRetailV2RuleIgnoreActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleIgnoreActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleIgnoreActionPtrOutput) Elem() GoogleCloudRetailV2RuleIgnoreActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleIgnoreAction) GoogleCloudRetailV2RuleIgnoreAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2RuleIgnoreAction
		return ret
	}).(GoogleCloudRetailV2RuleIgnoreActionOutput)
}

// Terms to ignore in the search query.
func (o GoogleCloudRetailV2RuleIgnoreActionPtrOutput) IgnoreTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleIgnoreAction) []string {
		if v == nil {
			return nil
		}
		return v.IgnoreTerms
	}).(pulumi.StringArrayOutput)
}

// Prevents a term in the query from being used in search. Example: Don't search for "shoddy".
type GoogleCloudRetailV2RuleIgnoreActionResponse struct {
	// Terms to ignore in the search query.
	IgnoreTerms []string `pulumi:"ignoreTerms"`
}

// Prevents a term in the query from being used in search. Example: Don't search for "shoddy".
type GoogleCloudRetailV2RuleIgnoreActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleIgnoreActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleIgnoreActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleIgnoreActionResponseOutput) ToGoogleCloudRetailV2RuleIgnoreActionResponseOutput() GoogleCloudRetailV2RuleIgnoreActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2RuleIgnoreActionResponseOutput) ToGoogleCloudRetailV2RuleIgnoreActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleIgnoreActionResponseOutput {
	return o
}

// Terms to ignore in the search query.
func (o GoogleCloudRetailV2RuleIgnoreActionResponseOutput) IgnoreTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleIgnoreActionResponse) []string { return v.IgnoreTerms }).(pulumi.StringArrayOutput)
}

// Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. `query_terms` will not be treated as synonyms of each other. Example: "sneakers" will use a synonym of "shoes". "shoes" will not use a synonym of "sneakers".
type GoogleCloudRetailV2RuleOnewaySynonymsAction struct {
	// Will be [deprecated = true] post migration;
	OnewayTerms []string `pulumi:"onewayTerms"`
	// Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.
	QueryTerms []string `pulumi:"queryTerms"`
	// Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.
	Synonyms []string `pulumi:"synonyms"`
}

// GoogleCloudRetailV2RuleOnewaySynonymsActionInput is an input type that accepts GoogleCloudRetailV2RuleOnewaySynonymsActionArgs and GoogleCloudRetailV2RuleOnewaySynonymsActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleOnewaySynonymsActionInput` via:
//
//	GoogleCloudRetailV2RuleOnewaySynonymsActionArgs{...}
type GoogleCloudRetailV2RuleOnewaySynonymsActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleOnewaySynonymsActionOutput() GoogleCloudRetailV2RuleOnewaySynonymsActionOutput
	ToGoogleCloudRetailV2RuleOnewaySynonymsActionOutputWithContext(context.Context) GoogleCloudRetailV2RuleOnewaySynonymsActionOutput
}

// Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. `query_terms` will not be treated as synonyms of each other. Example: "sneakers" will use a synonym of "shoes". "shoes" will not use a synonym of "sneakers".
type GoogleCloudRetailV2RuleOnewaySynonymsActionArgs struct {
	// Will be [deprecated = true] post migration;
	OnewayTerms pulumi.StringArrayInput `pulumi:"onewayTerms"`
	// Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.
	QueryTerms pulumi.StringArrayInput `pulumi:"queryTerms"`
	// Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.
	Synonyms pulumi.StringArrayInput `pulumi:"synonyms"`
}

func (GoogleCloudRetailV2RuleOnewaySynonymsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleOnewaySynonymsAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2RuleOnewaySynonymsActionArgs) ToGoogleCloudRetailV2RuleOnewaySynonymsActionOutput() GoogleCloudRetailV2RuleOnewaySynonymsActionOutput {
	return i.ToGoogleCloudRetailV2RuleOnewaySynonymsActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleOnewaySynonymsActionArgs) ToGoogleCloudRetailV2RuleOnewaySynonymsActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleOnewaySynonymsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleOnewaySynonymsActionOutput)
}

func (i GoogleCloudRetailV2RuleOnewaySynonymsActionArgs) ToGoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput() GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleOnewaySynonymsActionArgs) ToGoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleOnewaySynonymsActionOutput).ToGoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2RuleOnewaySynonymsActionPtrInput is an input type that accepts GoogleCloudRetailV2RuleOnewaySynonymsActionArgs, GoogleCloudRetailV2RuleOnewaySynonymsActionPtr and GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleOnewaySynonymsActionPtrInput` via:
//
//	        GoogleCloudRetailV2RuleOnewaySynonymsActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2RuleOnewaySynonymsActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput() GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput
	ToGoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput
}

type googleCloudRetailV2RuleOnewaySynonymsActionPtrType GoogleCloudRetailV2RuleOnewaySynonymsActionArgs

func GoogleCloudRetailV2RuleOnewaySynonymsActionPtr(v *GoogleCloudRetailV2RuleOnewaySynonymsActionArgs) GoogleCloudRetailV2RuleOnewaySynonymsActionPtrInput {
	return (*googleCloudRetailV2RuleOnewaySynonymsActionPtrType)(v)
}

func (*googleCloudRetailV2RuleOnewaySynonymsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleOnewaySynonymsAction)(nil)).Elem()
}

func (i *googleCloudRetailV2RuleOnewaySynonymsActionPtrType) ToGoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput() GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2RuleOnewaySynonymsActionPtrType) ToGoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput)
}

// Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. `query_terms` will not be treated as synonyms of each other. Example: "sneakers" will use a synonym of "shoes". "shoes" will not use a synonym of "sneakers".
type GoogleCloudRetailV2RuleOnewaySynonymsActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleOnewaySynonymsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleOnewaySynonymsAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleOnewaySynonymsActionOutput) ToGoogleCloudRetailV2RuleOnewaySynonymsActionOutput() GoogleCloudRetailV2RuleOnewaySynonymsActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleOnewaySynonymsActionOutput) ToGoogleCloudRetailV2RuleOnewaySynonymsActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleOnewaySynonymsActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleOnewaySynonymsActionOutput) ToGoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput() GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput {
	return o.ToGoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2RuleOnewaySynonymsActionOutput) ToGoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2RuleOnewaySynonymsAction) *GoogleCloudRetailV2RuleOnewaySynonymsAction {
		return &v
	}).(GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2RuleOnewaySynonymsActionOutput) OnewayTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleOnewaySynonymsAction) []string { return v.OnewayTerms }).(pulumi.StringArrayOutput)
}

// Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.
func (o GoogleCloudRetailV2RuleOnewaySynonymsActionOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleOnewaySynonymsAction) []string { return v.QueryTerms }).(pulumi.StringArrayOutput)
}

// Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.
func (o GoogleCloudRetailV2RuleOnewaySynonymsActionOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleOnewaySynonymsAction) []string { return v.Synonyms }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleOnewaySynonymsAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput) ToGoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput() GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput) ToGoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput) Elem() GoogleCloudRetailV2RuleOnewaySynonymsActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleOnewaySynonymsAction) GoogleCloudRetailV2RuleOnewaySynonymsAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2RuleOnewaySynonymsAction
		return ret
	}).(GoogleCloudRetailV2RuleOnewaySynonymsActionOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput) OnewayTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleOnewaySynonymsAction) []string {
		if v == nil {
			return nil
		}
		return v.OnewayTerms
	}).(pulumi.StringArrayOutput)
}

// Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.
func (o GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleOnewaySynonymsAction) []string {
		if v == nil {
			return nil
		}
		return v.QueryTerms
	}).(pulumi.StringArrayOutput)
}

// Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.
func (o GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleOnewaySynonymsAction) []string {
		if v == nil {
			return nil
		}
		return v.Synonyms
	}).(pulumi.StringArrayOutput)
}

// Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. `query_terms` will not be treated as synonyms of each other. Example: "sneakers" will use a synonym of "shoes". "shoes" will not use a synonym of "sneakers".
type GoogleCloudRetailV2RuleOnewaySynonymsActionResponse struct {
	// Will be [deprecated = true] post migration;
	OnewayTerms []string `pulumi:"onewayTerms"`
	// Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.
	QueryTerms []string `pulumi:"queryTerms"`
	// Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.
	Synonyms []string `pulumi:"synonyms"`
}

// Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. `query_terms` will not be treated as synonyms of each other. Example: "sneakers" will use a synonym of "shoes". "shoes" will not use a synonym of "sneakers".
type GoogleCloudRetailV2RuleOnewaySynonymsActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleOnewaySynonymsActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleOnewaySynonymsActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleOnewaySynonymsActionResponseOutput) ToGoogleCloudRetailV2RuleOnewaySynonymsActionResponseOutput() GoogleCloudRetailV2RuleOnewaySynonymsActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2RuleOnewaySynonymsActionResponseOutput) ToGoogleCloudRetailV2RuleOnewaySynonymsActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleOnewaySynonymsActionResponseOutput {
	return o
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2RuleOnewaySynonymsActionResponseOutput) OnewayTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleOnewaySynonymsActionResponse) []string { return v.OnewayTerms }).(pulumi.StringArrayOutput)
}

// Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.
func (o GoogleCloudRetailV2RuleOnewaySynonymsActionResponseOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleOnewaySynonymsActionResponse) []string { return v.QueryTerms }).(pulumi.StringArrayOutput)
}

// Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.
func (o GoogleCloudRetailV2RuleOnewaySynonymsActionResponseOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleOnewaySynonymsActionResponse) []string { return v.Synonyms }).(pulumi.StringArrayOutput)
}

// Redirects a shopper to a specific page. * Rule Condition: Must specify Condition.query_terms. * Action Input: Request Query * Action Result: Redirects shopper to provided uri.
type GoogleCloudRetailV2RuleRedirectAction struct {
	// URL must have length equal or less than 2000 characters.
	RedirectUri *string `pulumi:"redirectUri"`
}

// GoogleCloudRetailV2RuleRedirectActionInput is an input type that accepts GoogleCloudRetailV2RuleRedirectActionArgs and GoogleCloudRetailV2RuleRedirectActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleRedirectActionInput` via:
//
//	GoogleCloudRetailV2RuleRedirectActionArgs{...}
type GoogleCloudRetailV2RuleRedirectActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleRedirectActionOutput() GoogleCloudRetailV2RuleRedirectActionOutput
	ToGoogleCloudRetailV2RuleRedirectActionOutputWithContext(context.Context) GoogleCloudRetailV2RuleRedirectActionOutput
}

// Redirects a shopper to a specific page. * Rule Condition: Must specify Condition.query_terms. * Action Input: Request Query * Action Result: Redirects shopper to provided uri.
type GoogleCloudRetailV2RuleRedirectActionArgs struct {
	// URL must have length equal or less than 2000 characters.
	RedirectUri pulumi.StringPtrInput `pulumi:"redirectUri"`
}

func (GoogleCloudRetailV2RuleRedirectActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleRedirectAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2RuleRedirectActionArgs) ToGoogleCloudRetailV2RuleRedirectActionOutput() GoogleCloudRetailV2RuleRedirectActionOutput {
	return i.ToGoogleCloudRetailV2RuleRedirectActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleRedirectActionArgs) ToGoogleCloudRetailV2RuleRedirectActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleRedirectActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleRedirectActionOutput)
}

func (i GoogleCloudRetailV2RuleRedirectActionArgs) ToGoogleCloudRetailV2RuleRedirectActionPtrOutput() GoogleCloudRetailV2RuleRedirectActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleRedirectActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleRedirectActionArgs) ToGoogleCloudRetailV2RuleRedirectActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleRedirectActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleRedirectActionOutput).ToGoogleCloudRetailV2RuleRedirectActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2RuleRedirectActionPtrInput is an input type that accepts GoogleCloudRetailV2RuleRedirectActionArgs, GoogleCloudRetailV2RuleRedirectActionPtr and GoogleCloudRetailV2RuleRedirectActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleRedirectActionPtrInput` via:
//
//	        GoogleCloudRetailV2RuleRedirectActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2RuleRedirectActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleRedirectActionPtrOutput() GoogleCloudRetailV2RuleRedirectActionPtrOutput
	ToGoogleCloudRetailV2RuleRedirectActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2RuleRedirectActionPtrOutput
}

type googleCloudRetailV2RuleRedirectActionPtrType GoogleCloudRetailV2RuleRedirectActionArgs

func GoogleCloudRetailV2RuleRedirectActionPtr(v *GoogleCloudRetailV2RuleRedirectActionArgs) GoogleCloudRetailV2RuleRedirectActionPtrInput {
	return (*googleCloudRetailV2RuleRedirectActionPtrType)(v)
}

func (*googleCloudRetailV2RuleRedirectActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleRedirectAction)(nil)).Elem()
}

func (i *googleCloudRetailV2RuleRedirectActionPtrType) ToGoogleCloudRetailV2RuleRedirectActionPtrOutput() GoogleCloudRetailV2RuleRedirectActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleRedirectActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2RuleRedirectActionPtrType) ToGoogleCloudRetailV2RuleRedirectActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleRedirectActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleRedirectActionPtrOutput)
}

// Redirects a shopper to a specific page. * Rule Condition: Must specify Condition.query_terms. * Action Input: Request Query * Action Result: Redirects shopper to provided uri.
type GoogleCloudRetailV2RuleRedirectActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleRedirectActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleRedirectAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleRedirectActionOutput) ToGoogleCloudRetailV2RuleRedirectActionOutput() GoogleCloudRetailV2RuleRedirectActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleRedirectActionOutput) ToGoogleCloudRetailV2RuleRedirectActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleRedirectActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleRedirectActionOutput) ToGoogleCloudRetailV2RuleRedirectActionPtrOutput() GoogleCloudRetailV2RuleRedirectActionPtrOutput {
	return o.ToGoogleCloudRetailV2RuleRedirectActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2RuleRedirectActionOutput) ToGoogleCloudRetailV2RuleRedirectActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleRedirectActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2RuleRedirectAction) *GoogleCloudRetailV2RuleRedirectAction {
		return &v
	}).(GoogleCloudRetailV2RuleRedirectActionPtrOutput)
}

// URL must have length equal or less than 2000 characters.
func (o GoogleCloudRetailV2RuleRedirectActionOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleRedirectAction) *string { return v.RedirectUri }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2RuleRedirectActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleRedirectActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleRedirectAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleRedirectActionPtrOutput) ToGoogleCloudRetailV2RuleRedirectActionPtrOutput() GoogleCloudRetailV2RuleRedirectActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleRedirectActionPtrOutput) ToGoogleCloudRetailV2RuleRedirectActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleRedirectActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleRedirectActionPtrOutput) Elem() GoogleCloudRetailV2RuleRedirectActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleRedirectAction) GoogleCloudRetailV2RuleRedirectAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2RuleRedirectAction
		return ret
	}).(GoogleCloudRetailV2RuleRedirectActionOutput)
}

// URL must have length equal or less than 2000 characters.
func (o GoogleCloudRetailV2RuleRedirectActionPtrOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleRedirectAction) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

// Redirects a shopper to a specific page. * Rule Condition: Must specify Condition.query_terms. * Action Input: Request Query * Action Result: Redirects shopper to provided uri.
type GoogleCloudRetailV2RuleRedirectActionResponse struct {
	// URL must have length equal or less than 2000 characters.
	RedirectUri string `pulumi:"redirectUri"`
}

// Redirects a shopper to a specific page. * Rule Condition: Must specify Condition.query_terms. * Action Input: Request Query * Action Result: Redirects shopper to provided uri.
type GoogleCloudRetailV2RuleRedirectActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleRedirectActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleRedirectActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleRedirectActionResponseOutput) ToGoogleCloudRetailV2RuleRedirectActionResponseOutput() GoogleCloudRetailV2RuleRedirectActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2RuleRedirectActionResponseOutput) ToGoogleCloudRetailV2RuleRedirectActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleRedirectActionResponseOutput {
	return o
}

// URL must have length equal or less than 2000 characters.
func (o GoogleCloudRetailV2RuleRedirectActionResponseOutput) RedirectUri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleRedirectActionResponse) string { return v.RedirectUri }).(pulumi.StringOutput)
}

// Removes an attribute/facet in the request if is present. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Input: attribute name * Action Result: Will remove the attribute (as a facet) from the request if it is present. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes" and the attribute name "size", then facet key "size" will be removed from the request (if it is present).
type GoogleCloudRetailV2RuleRemoveFacetAction struct {
	// The attribute names (i.e. facet keys) to remove from the dynamic facets (if present in the request). There can't be more 3 attribute names. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters.
	AttributeNames []string `pulumi:"attributeNames"`
}

// GoogleCloudRetailV2RuleRemoveFacetActionInput is an input type that accepts GoogleCloudRetailV2RuleRemoveFacetActionArgs and GoogleCloudRetailV2RuleRemoveFacetActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleRemoveFacetActionInput` via:
//
//	GoogleCloudRetailV2RuleRemoveFacetActionArgs{...}
type GoogleCloudRetailV2RuleRemoveFacetActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleRemoveFacetActionOutput() GoogleCloudRetailV2RuleRemoveFacetActionOutput
	ToGoogleCloudRetailV2RuleRemoveFacetActionOutputWithContext(context.Context) GoogleCloudRetailV2RuleRemoveFacetActionOutput
}

// Removes an attribute/facet in the request if is present. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Input: attribute name * Action Result: Will remove the attribute (as a facet) from the request if it is present. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes" and the attribute name "size", then facet key "size" will be removed from the request (if it is present).
type GoogleCloudRetailV2RuleRemoveFacetActionArgs struct {
	// The attribute names (i.e. facet keys) to remove from the dynamic facets (if present in the request). There can't be more 3 attribute names. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters.
	AttributeNames pulumi.StringArrayInput `pulumi:"attributeNames"`
}

func (GoogleCloudRetailV2RuleRemoveFacetActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleRemoveFacetAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2RuleRemoveFacetActionArgs) ToGoogleCloudRetailV2RuleRemoveFacetActionOutput() GoogleCloudRetailV2RuleRemoveFacetActionOutput {
	return i.ToGoogleCloudRetailV2RuleRemoveFacetActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleRemoveFacetActionArgs) ToGoogleCloudRetailV2RuleRemoveFacetActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleRemoveFacetActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleRemoveFacetActionOutput)
}

func (i GoogleCloudRetailV2RuleRemoveFacetActionArgs) ToGoogleCloudRetailV2RuleRemoveFacetActionPtrOutput() GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleRemoveFacetActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleRemoveFacetActionArgs) ToGoogleCloudRetailV2RuleRemoveFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleRemoveFacetActionOutput).ToGoogleCloudRetailV2RuleRemoveFacetActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2RuleRemoveFacetActionPtrInput is an input type that accepts GoogleCloudRetailV2RuleRemoveFacetActionArgs, GoogleCloudRetailV2RuleRemoveFacetActionPtr and GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleRemoveFacetActionPtrInput` via:
//
//	        GoogleCloudRetailV2RuleRemoveFacetActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2RuleRemoveFacetActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleRemoveFacetActionPtrOutput() GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput
	ToGoogleCloudRetailV2RuleRemoveFacetActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput
}

type googleCloudRetailV2RuleRemoveFacetActionPtrType GoogleCloudRetailV2RuleRemoveFacetActionArgs

func GoogleCloudRetailV2RuleRemoveFacetActionPtr(v *GoogleCloudRetailV2RuleRemoveFacetActionArgs) GoogleCloudRetailV2RuleRemoveFacetActionPtrInput {
	return (*googleCloudRetailV2RuleRemoveFacetActionPtrType)(v)
}

func (*googleCloudRetailV2RuleRemoveFacetActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleRemoveFacetAction)(nil)).Elem()
}

func (i *googleCloudRetailV2RuleRemoveFacetActionPtrType) ToGoogleCloudRetailV2RuleRemoveFacetActionPtrOutput() GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleRemoveFacetActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2RuleRemoveFacetActionPtrType) ToGoogleCloudRetailV2RuleRemoveFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput)
}

// Removes an attribute/facet in the request if is present. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Input: attribute name * Action Result: Will remove the attribute (as a facet) from the request if it is present. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes" and the attribute name "size", then facet key "size" will be removed from the request (if it is present).
type GoogleCloudRetailV2RuleRemoveFacetActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleRemoveFacetActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleRemoveFacetAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleRemoveFacetActionOutput) ToGoogleCloudRetailV2RuleRemoveFacetActionOutput() GoogleCloudRetailV2RuleRemoveFacetActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleRemoveFacetActionOutput) ToGoogleCloudRetailV2RuleRemoveFacetActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleRemoveFacetActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleRemoveFacetActionOutput) ToGoogleCloudRetailV2RuleRemoveFacetActionPtrOutput() GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput {
	return o.ToGoogleCloudRetailV2RuleRemoveFacetActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2RuleRemoveFacetActionOutput) ToGoogleCloudRetailV2RuleRemoveFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2RuleRemoveFacetAction) *GoogleCloudRetailV2RuleRemoveFacetAction {
		return &v
	}).(GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput)
}

// The attribute names (i.e. facet keys) to remove from the dynamic facets (if present in the request). There can't be more 3 attribute names. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters.
func (o GoogleCloudRetailV2RuleRemoveFacetActionOutput) AttributeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleRemoveFacetAction) []string { return v.AttributeNames }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleRemoveFacetAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput) ToGoogleCloudRetailV2RuleRemoveFacetActionPtrOutput() GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput) ToGoogleCloudRetailV2RuleRemoveFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput) Elem() GoogleCloudRetailV2RuleRemoveFacetActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleRemoveFacetAction) GoogleCloudRetailV2RuleRemoveFacetAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2RuleRemoveFacetAction
		return ret
	}).(GoogleCloudRetailV2RuleRemoveFacetActionOutput)
}

// The attribute names (i.e. facet keys) to remove from the dynamic facets (if present in the request). There can't be more 3 attribute names. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters.
func (o GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput) AttributeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleRemoveFacetAction) []string {
		if v == nil {
			return nil
		}
		return v.AttributeNames
	}).(pulumi.StringArrayOutput)
}

// Removes an attribute/facet in the request if is present. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Input: attribute name * Action Result: Will remove the attribute (as a facet) from the request if it is present. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes" and the attribute name "size", then facet key "size" will be removed from the request (if it is present).
type GoogleCloudRetailV2RuleRemoveFacetActionResponse struct {
	// The attribute names (i.e. facet keys) to remove from the dynamic facets (if present in the request). There can't be more 3 attribute names. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters.
	AttributeNames []string `pulumi:"attributeNames"`
}

// Removes an attribute/facet in the request if is present. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Input: attribute name * Action Result: Will remove the attribute (as a facet) from the request if it is present. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes" and the attribute name "size", then facet key "size" will be removed from the request (if it is present).
type GoogleCloudRetailV2RuleRemoveFacetActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleRemoveFacetActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleRemoveFacetActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleRemoveFacetActionResponseOutput) ToGoogleCloudRetailV2RuleRemoveFacetActionResponseOutput() GoogleCloudRetailV2RuleRemoveFacetActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2RuleRemoveFacetActionResponseOutput) ToGoogleCloudRetailV2RuleRemoveFacetActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleRemoveFacetActionResponseOutput {
	return o
}

// The attribute names (i.e. facet keys) to remove from the dynamic facets (if present in the request). There can't be more 3 attribute names. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters.
func (o GoogleCloudRetailV2RuleRemoveFacetActionResponseOutput) AttributeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleRemoveFacetActionResponse) []string { return v.AttributeNames }).(pulumi.StringArrayOutput)
}

// Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace "gShoe" with "google shoe".
type GoogleCloudRetailV2RuleReplacementAction struct {
	// Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.
	QueryTerms []string `pulumi:"queryTerms"`
	// Term that will be used for replacement.
	ReplacementTerm *string `pulumi:"replacementTerm"`
	// Will be [deprecated = true] post migration;
	Term *string `pulumi:"term"`
}

// GoogleCloudRetailV2RuleReplacementActionInput is an input type that accepts GoogleCloudRetailV2RuleReplacementActionArgs and GoogleCloudRetailV2RuleReplacementActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleReplacementActionInput` via:
//
//	GoogleCloudRetailV2RuleReplacementActionArgs{...}
type GoogleCloudRetailV2RuleReplacementActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleReplacementActionOutput() GoogleCloudRetailV2RuleReplacementActionOutput
	ToGoogleCloudRetailV2RuleReplacementActionOutputWithContext(context.Context) GoogleCloudRetailV2RuleReplacementActionOutput
}

// Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace "gShoe" with "google shoe".
type GoogleCloudRetailV2RuleReplacementActionArgs struct {
	// Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.
	QueryTerms pulumi.StringArrayInput `pulumi:"queryTerms"`
	// Term that will be used for replacement.
	ReplacementTerm pulumi.StringPtrInput `pulumi:"replacementTerm"`
	// Will be [deprecated = true] post migration;
	Term pulumi.StringPtrInput `pulumi:"term"`
}

func (GoogleCloudRetailV2RuleReplacementActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleReplacementAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2RuleReplacementActionArgs) ToGoogleCloudRetailV2RuleReplacementActionOutput() GoogleCloudRetailV2RuleReplacementActionOutput {
	return i.ToGoogleCloudRetailV2RuleReplacementActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleReplacementActionArgs) ToGoogleCloudRetailV2RuleReplacementActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleReplacementActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleReplacementActionOutput)
}

func (i GoogleCloudRetailV2RuleReplacementActionArgs) ToGoogleCloudRetailV2RuleReplacementActionPtrOutput() GoogleCloudRetailV2RuleReplacementActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleReplacementActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleReplacementActionArgs) ToGoogleCloudRetailV2RuleReplacementActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleReplacementActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleReplacementActionOutput).ToGoogleCloudRetailV2RuleReplacementActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2RuleReplacementActionPtrInput is an input type that accepts GoogleCloudRetailV2RuleReplacementActionArgs, GoogleCloudRetailV2RuleReplacementActionPtr and GoogleCloudRetailV2RuleReplacementActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleReplacementActionPtrInput` via:
//
//	        GoogleCloudRetailV2RuleReplacementActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2RuleReplacementActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleReplacementActionPtrOutput() GoogleCloudRetailV2RuleReplacementActionPtrOutput
	ToGoogleCloudRetailV2RuleReplacementActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2RuleReplacementActionPtrOutput
}

type googleCloudRetailV2RuleReplacementActionPtrType GoogleCloudRetailV2RuleReplacementActionArgs

func GoogleCloudRetailV2RuleReplacementActionPtr(v *GoogleCloudRetailV2RuleReplacementActionArgs) GoogleCloudRetailV2RuleReplacementActionPtrInput {
	return (*googleCloudRetailV2RuleReplacementActionPtrType)(v)
}

func (*googleCloudRetailV2RuleReplacementActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleReplacementAction)(nil)).Elem()
}

func (i *googleCloudRetailV2RuleReplacementActionPtrType) ToGoogleCloudRetailV2RuleReplacementActionPtrOutput() GoogleCloudRetailV2RuleReplacementActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleReplacementActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2RuleReplacementActionPtrType) ToGoogleCloudRetailV2RuleReplacementActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleReplacementActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleReplacementActionPtrOutput)
}

// Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace "gShoe" with "google shoe".
type GoogleCloudRetailV2RuleReplacementActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleReplacementActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleReplacementAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleReplacementActionOutput) ToGoogleCloudRetailV2RuleReplacementActionOutput() GoogleCloudRetailV2RuleReplacementActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleReplacementActionOutput) ToGoogleCloudRetailV2RuleReplacementActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleReplacementActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleReplacementActionOutput) ToGoogleCloudRetailV2RuleReplacementActionPtrOutput() GoogleCloudRetailV2RuleReplacementActionPtrOutput {
	return o.ToGoogleCloudRetailV2RuleReplacementActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2RuleReplacementActionOutput) ToGoogleCloudRetailV2RuleReplacementActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleReplacementActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2RuleReplacementAction) *GoogleCloudRetailV2RuleReplacementAction {
		return &v
	}).(GoogleCloudRetailV2RuleReplacementActionPtrOutput)
}

// Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.
func (o GoogleCloudRetailV2RuleReplacementActionOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleReplacementAction) []string { return v.QueryTerms }).(pulumi.StringArrayOutput)
}

// Term that will be used for replacement.
func (o GoogleCloudRetailV2RuleReplacementActionOutput) ReplacementTerm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleReplacementAction) *string { return v.ReplacementTerm }).(pulumi.StringPtrOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2RuleReplacementActionOutput) Term() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleReplacementAction) *string { return v.Term }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2RuleReplacementActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleReplacementActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleReplacementAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleReplacementActionPtrOutput) ToGoogleCloudRetailV2RuleReplacementActionPtrOutput() GoogleCloudRetailV2RuleReplacementActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleReplacementActionPtrOutput) ToGoogleCloudRetailV2RuleReplacementActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleReplacementActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleReplacementActionPtrOutput) Elem() GoogleCloudRetailV2RuleReplacementActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleReplacementAction) GoogleCloudRetailV2RuleReplacementAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2RuleReplacementAction
		return ret
	}).(GoogleCloudRetailV2RuleReplacementActionOutput)
}

// Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.
func (o GoogleCloudRetailV2RuleReplacementActionPtrOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleReplacementAction) []string {
		if v == nil {
			return nil
		}
		return v.QueryTerms
	}).(pulumi.StringArrayOutput)
}

// Term that will be used for replacement.
func (o GoogleCloudRetailV2RuleReplacementActionPtrOutput) ReplacementTerm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleReplacementAction) *string {
		if v == nil {
			return nil
		}
		return v.ReplacementTerm
	}).(pulumi.StringPtrOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2RuleReplacementActionPtrOutput) Term() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleReplacementAction) *string {
		if v == nil {
			return nil
		}
		return v.Term
	}).(pulumi.StringPtrOutput)
}

// Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace "gShoe" with "google shoe".
type GoogleCloudRetailV2RuleReplacementActionResponse struct {
	// Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.
	QueryTerms []string `pulumi:"queryTerms"`
	// Term that will be used for replacement.
	ReplacementTerm string `pulumi:"replacementTerm"`
	// Will be [deprecated = true] post migration;
	Term string `pulumi:"term"`
}

// Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace "gShoe" with "google shoe".
type GoogleCloudRetailV2RuleReplacementActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleReplacementActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleReplacementActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleReplacementActionResponseOutput) ToGoogleCloudRetailV2RuleReplacementActionResponseOutput() GoogleCloudRetailV2RuleReplacementActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2RuleReplacementActionResponseOutput) ToGoogleCloudRetailV2RuleReplacementActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleReplacementActionResponseOutput {
	return o
}

// Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.
func (o GoogleCloudRetailV2RuleReplacementActionResponseOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleReplacementActionResponse) []string { return v.QueryTerms }).(pulumi.StringArrayOutput)
}

// Term that will be used for replacement.
func (o GoogleCloudRetailV2RuleReplacementActionResponseOutput) ReplacementTerm() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleReplacementActionResponse) string { return v.ReplacementTerm }).(pulumi.StringOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2RuleReplacementActionResponseOutput) Term() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleReplacementActionResponse) string { return v.Term }).(pulumi.StringOutput)
}

// A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently rules only work for controls with SOLUTION_TYPE_SEARCH.
type GoogleCloudRetailV2RuleResponse struct {
	// A boost action.
	BoostAction GoogleCloudRetailV2RuleBoostActionResponse `pulumi:"boostAction"`
	// The condition that triggers the rule. If the condition is empty, the rule will always apply.
	Condition GoogleCloudRetailV2ConditionResponse `pulumi:"condition"`
	// Prevents term from being associated with other terms.
	DoNotAssociateAction GoogleCloudRetailV2RuleDoNotAssociateActionResponse `pulumi:"doNotAssociateAction"`
	// Filters results.
	FilterAction GoogleCloudRetailV2RuleFilterActionResponse `pulumi:"filterAction"`
	// Force returns an attribute as a facet in the request.
	ForceReturnFacetAction GoogleCloudRetailV2RuleForceReturnFacetActionResponse `pulumi:"forceReturnFacetAction"`
	// Ignores specific terms from query during search.
	IgnoreAction GoogleCloudRetailV2RuleIgnoreActionResponse `pulumi:"ignoreAction"`
	// Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.
	OnewaySynonymsAction GoogleCloudRetailV2RuleOnewaySynonymsActionResponse `pulumi:"onewaySynonymsAction"`
	// Redirects a shopper to a specific page.
	RedirectAction GoogleCloudRetailV2RuleRedirectActionResponse `pulumi:"redirectAction"`
	// Remove an attribute as a facet in the request (if present).
	RemoveFacetAction GoogleCloudRetailV2RuleRemoveFacetActionResponse `pulumi:"removeFacetAction"`
	// Replaces specific terms in the query.
	ReplacementAction GoogleCloudRetailV2RuleReplacementActionResponse `pulumi:"replacementAction"`
	// Treats a set of terms as synonyms of one another.
	TwowaySynonymsAction GoogleCloudRetailV2RuleTwowaySynonymsActionResponse `pulumi:"twowaySynonymsAction"`
}

// A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently rules only work for controls with SOLUTION_TYPE_SEARCH.
type GoogleCloudRetailV2RuleResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleResponseOutput) ToGoogleCloudRetailV2RuleResponseOutput() GoogleCloudRetailV2RuleResponseOutput {
	return o
}

func (o GoogleCloudRetailV2RuleResponseOutput) ToGoogleCloudRetailV2RuleResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleResponseOutput {
	return o
}

// A boost action.
func (o GoogleCloudRetailV2RuleResponseOutput) BoostAction() GoogleCloudRetailV2RuleBoostActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleResponse) GoogleCloudRetailV2RuleBoostActionResponse {
		return v.BoostAction
	}).(GoogleCloudRetailV2RuleBoostActionResponseOutput)
}

// The condition that triggers the rule. If the condition is empty, the rule will always apply.
func (o GoogleCloudRetailV2RuleResponseOutput) Condition() GoogleCloudRetailV2ConditionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleResponse) GoogleCloudRetailV2ConditionResponse { return v.Condition }).(GoogleCloudRetailV2ConditionResponseOutput)
}

// Prevents term from being associated with other terms.
func (o GoogleCloudRetailV2RuleResponseOutput) DoNotAssociateAction() GoogleCloudRetailV2RuleDoNotAssociateActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleResponse) GoogleCloudRetailV2RuleDoNotAssociateActionResponse {
		return v.DoNotAssociateAction
	}).(GoogleCloudRetailV2RuleDoNotAssociateActionResponseOutput)
}

// Filters results.
func (o GoogleCloudRetailV2RuleResponseOutput) FilterAction() GoogleCloudRetailV2RuleFilterActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleResponse) GoogleCloudRetailV2RuleFilterActionResponse {
		return v.FilterAction
	}).(GoogleCloudRetailV2RuleFilterActionResponseOutput)
}

// Force returns an attribute as a facet in the request.
func (o GoogleCloudRetailV2RuleResponseOutput) ForceReturnFacetAction() GoogleCloudRetailV2RuleForceReturnFacetActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleResponse) GoogleCloudRetailV2RuleForceReturnFacetActionResponse {
		return v.ForceReturnFacetAction
	}).(GoogleCloudRetailV2RuleForceReturnFacetActionResponseOutput)
}

// Ignores specific terms from query during search.
func (o GoogleCloudRetailV2RuleResponseOutput) IgnoreAction() GoogleCloudRetailV2RuleIgnoreActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleResponse) GoogleCloudRetailV2RuleIgnoreActionResponse {
		return v.IgnoreAction
	}).(GoogleCloudRetailV2RuleIgnoreActionResponseOutput)
}

// Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.
func (o GoogleCloudRetailV2RuleResponseOutput) OnewaySynonymsAction() GoogleCloudRetailV2RuleOnewaySynonymsActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleResponse) GoogleCloudRetailV2RuleOnewaySynonymsActionResponse {
		return v.OnewaySynonymsAction
	}).(GoogleCloudRetailV2RuleOnewaySynonymsActionResponseOutput)
}

// Redirects a shopper to a specific page.
func (o GoogleCloudRetailV2RuleResponseOutput) RedirectAction() GoogleCloudRetailV2RuleRedirectActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleResponse) GoogleCloudRetailV2RuleRedirectActionResponse {
		return v.RedirectAction
	}).(GoogleCloudRetailV2RuleRedirectActionResponseOutput)
}

// Remove an attribute as a facet in the request (if present).
func (o GoogleCloudRetailV2RuleResponseOutput) RemoveFacetAction() GoogleCloudRetailV2RuleRemoveFacetActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleResponse) GoogleCloudRetailV2RuleRemoveFacetActionResponse {
		return v.RemoveFacetAction
	}).(GoogleCloudRetailV2RuleRemoveFacetActionResponseOutput)
}

// Replaces specific terms in the query.
func (o GoogleCloudRetailV2RuleResponseOutput) ReplacementAction() GoogleCloudRetailV2RuleReplacementActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleResponse) GoogleCloudRetailV2RuleReplacementActionResponse {
		return v.ReplacementAction
	}).(GoogleCloudRetailV2RuleReplacementActionResponseOutput)
}

// Treats a set of terms as synonyms of one another.
func (o GoogleCloudRetailV2RuleResponseOutput) TwowaySynonymsAction() GoogleCloudRetailV2RuleTwowaySynonymsActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleResponse) GoogleCloudRetailV2RuleTwowaySynonymsActionResponse {
		return v.TwowaySynonymsAction
	}).(GoogleCloudRetailV2RuleTwowaySynonymsActionResponseOutput)
}

// Creates a set of terms that will be treated as synonyms of each other. Example: synonyms of "sneakers" and "shoes": * "sneakers" will use a synonym of "shoes". * "shoes" will use a synonym of "sneakers".
type GoogleCloudRetailV2RuleTwowaySynonymsAction struct {
	// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.
	Synonyms []string `pulumi:"synonyms"`
}

// GoogleCloudRetailV2RuleTwowaySynonymsActionInput is an input type that accepts GoogleCloudRetailV2RuleTwowaySynonymsActionArgs and GoogleCloudRetailV2RuleTwowaySynonymsActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleTwowaySynonymsActionInput` via:
//
//	GoogleCloudRetailV2RuleTwowaySynonymsActionArgs{...}
type GoogleCloudRetailV2RuleTwowaySynonymsActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleTwowaySynonymsActionOutput() GoogleCloudRetailV2RuleTwowaySynonymsActionOutput
	ToGoogleCloudRetailV2RuleTwowaySynonymsActionOutputWithContext(context.Context) GoogleCloudRetailV2RuleTwowaySynonymsActionOutput
}

// Creates a set of terms that will be treated as synonyms of each other. Example: synonyms of "sneakers" and "shoes": * "sneakers" will use a synonym of "shoes". * "shoes" will use a synonym of "sneakers".
type GoogleCloudRetailV2RuleTwowaySynonymsActionArgs struct {
	// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.
	Synonyms pulumi.StringArrayInput `pulumi:"synonyms"`
}

func (GoogleCloudRetailV2RuleTwowaySynonymsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleTwowaySynonymsAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2RuleTwowaySynonymsActionArgs) ToGoogleCloudRetailV2RuleTwowaySynonymsActionOutput() GoogleCloudRetailV2RuleTwowaySynonymsActionOutput {
	return i.ToGoogleCloudRetailV2RuleTwowaySynonymsActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleTwowaySynonymsActionArgs) ToGoogleCloudRetailV2RuleTwowaySynonymsActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleTwowaySynonymsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleTwowaySynonymsActionOutput)
}

func (i GoogleCloudRetailV2RuleTwowaySynonymsActionArgs) ToGoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput() GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2RuleTwowaySynonymsActionArgs) ToGoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleTwowaySynonymsActionOutput).ToGoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2RuleTwowaySynonymsActionPtrInput is an input type that accepts GoogleCloudRetailV2RuleTwowaySynonymsActionArgs, GoogleCloudRetailV2RuleTwowaySynonymsActionPtr and GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2RuleTwowaySynonymsActionPtrInput` via:
//
//	        GoogleCloudRetailV2RuleTwowaySynonymsActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2RuleTwowaySynonymsActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput() GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput
	ToGoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput
}

type googleCloudRetailV2RuleTwowaySynonymsActionPtrType GoogleCloudRetailV2RuleTwowaySynonymsActionArgs

func GoogleCloudRetailV2RuleTwowaySynonymsActionPtr(v *GoogleCloudRetailV2RuleTwowaySynonymsActionArgs) GoogleCloudRetailV2RuleTwowaySynonymsActionPtrInput {
	return (*googleCloudRetailV2RuleTwowaySynonymsActionPtrType)(v)
}

func (*googleCloudRetailV2RuleTwowaySynonymsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleTwowaySynonymsAction)(nil)).Elem()
}

func (i *googleCloudRetailV2RuleTwowaySynonymsActionPtrType) ToGoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput() GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput {
	return i.ToGoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2RuleTwowaySynonymsActionPtrType) ToGoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput)
}

// Creates a set of terms that will be treated as synonyms of each other. Example: synonyms of "sneakers" and "shoes": * "sneakers" will use a synonym of "shoes". * "shoes" will use a synonym of "sneakers".
type GoogleCloudRetailV2RuleTwowaySynonymsActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleTwowaySynonymsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleTwowaySynonymsAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleTwowaySynonymsActionOutput) ToGoogleCloudRetailV2RuleTwowaySynonymsActionOutput() GoogleCloudRetailV2RuleTwowaySynonymsActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleTwowaySynonymsActionOutput) ToGoogleCloudRetailV2RuleTwowaySynonymsActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleTwowaySynonymsActionOutput {
	return o
}

func (o GoogleCloudRetailV2RuleTwowaySynonymsActionOutput) ToGoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput() GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput {
	return o.ToGoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2RuleTwowaySynonymsActionOutput) ToGoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2RuleTwowaySynonymsAction) *GoogleCloudRetailV2RuleTwowaySynonymsAction {
		return &v
	}).(GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput)
}

// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.
func (o GoogleCloudRetailV2RuleTwowaySynonymsActionOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleTwowaySynonymsAction) []string { return v.Synonyms }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2RuleTwowaySynonymsAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput) ToGoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput() GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput) ToGoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput) Elem() GoogleCloudRetailV2RuleTwowaySynonymsActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleTwowaySynonymsAction) GoogleCloudRetailV2RuleTwowaySynonymsAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2RuleTwowaySynonymsAction
		return ret
	}).(GoogleCloudRetailV2RuleTwowaySynonymsActionOutput)
}

// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.
func (o GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2RuleTwowaySynonymsAction) []string {
		if v == nil {
			return nil
		}
		return v.Synonyms
	}).(pulumi.StringArrayOutput)
}

// Creates a set of terms that will be treated as synonyms of each other. Example: synonyms of "sneakers" and "shoes": * "sneakers" will use a synonym of "shoes". * "shoes" will use a synonym of "sneakers".
type GoogleCloudRetailV2RuleTwowaySynonymsActionResponse struct {
	// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.
	Synonyms []string `pulumi:"synonyms"`
}

// Creates a set of terms that will be treated as synonyms of each other. Example: synonyms of "sneakers" and "shoes": * "sneakers" will use a synonym of "shoes". * "shoes" will use a synonym of "sneakers".
type GoogleCloudRetailV2RuleTwowaySynonymsActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2RuleTwowaySynonymsActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2RuleTwowaySynonymsActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2RuleTwowaySynonymsActionResponseOutput) ToGoogleCloudRetailV2RuleTwowaySynonymsActionResponseOutput() GoogleCloudRetailV2RuleTwowaySynonymsActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2RuleTwowaySynonymsActionResponseOutput) ToGoogleCloudRetailV2RuleTwowaySynonymsActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2RuleTwowaySynonymsActionResponseOutput {
	return o
}

// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.
func (o GoogleCloudRetailV2RuleTwowaySynonymsActionResponseOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2RuleTwowaySynonymsActionResponse) []string { return v.Synonyms }).(pulumi.StringArrayOutput)
}

// The specifications of dynamically generated facets.
type GoogleCloudRetailV2SearchRequestDynamicFacetSpec struct {
	// Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.
	Mode *GoogleCloudRetailV2SearchRequestDynamicFacetSpecMode `pulumi:"mode"`
}

// GoogleCloudRetailV2SearchRequestDynamicFacetSpecInput is an input type that accepts GoogleCloudRetailV2SearchRequestDynamicFacetSpecArgs and GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2SearchRequestDynamicFacetSpecInput` via:
//
//	GoogleCloudRetailV2SearchRequestDynamicFacetSpecArgs{...}
type GoogleCloudRetailV2SearchRequestDynamicFacetSpecInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput() GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput
	ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecOutputWithContext(context.Context) GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput
}

// The specifications of dynamically generated facets.
type GoogleCloudRetailV2SearchRequestDynamicFacetSpecArgs struct {
	// Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.
	Mode GoogleCloudRetailV2SearchRequestDynamicFacetSpecModePtrInput `pulumi:"mode"`
}

func (GoogleCloudRetailV2SearchRequestDynamicFacetSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2SearchRequestDynamicFacetSpec)(nil)).Elem()
}

func (i GoogleCloudRetailV2SearchRequestDynamicFacetSpecArgs) ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput() GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput {
	return i.ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2SearchRequestDynamicFacetSpecArgs) ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecOutputWithContext(ctx context.Context) GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput)
}

func (i GoogleCloudRetailV2SearchRequestDynamicFacetSpecArgs) ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput() GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput {
	return i.ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2SearchRequestDynamicFacetSpecArgs) ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput).ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrInput is an input type that accepts GoogleCloudRetailV2SearchRequestDynamicFacetSpecArgs, GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtr and GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrInput` via:
//
//	        GoogleCloudRetailV2SearchRequestDynamicFacetSpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput() GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput
	ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutputWithContext(context.Context) GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput
}

type googleCloudRetailV2SearchRequestDynamicFacetSpecPtrType GoogleCloudRetailV2SearchRequestDynamicFacetSpecArgs

func GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtr(v *GoogleCloudRetailV2SearchRequestDynamicFacetSpecArgs) GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrInput {
	return (*googleCloudRetailV2SearchRequestDynamicFacetSpecPtrType)(v)
}

func (*googleCloudRetailV2SearchRequestDynamicFacetSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2SearchRequestDynamicFacetSpec)(nil)).Elem()
}

func (i *googleCloudRetailV2SearchRequestDynamicFacetSpecPtrType) ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput() GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput {
	return i.ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2SearchRequestDynamicFacetSpecPtrType) ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput)
}

// The specifications of dynamically generated facets.
type GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2SearchRequestDynamicFacetSpec)(nil)).Elem()
}

func (o GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput) ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput() GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput {
	return o
}

func (o GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput) ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecOutputWithContext(ctx context.Context) GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput {
	return o
}

func (o GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput) ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput() GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput {
	return o.ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput) ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2SearchRequestDynamicFacetSpec) *GoogleCloudRetailV2SearchRequestDynamicFacetSpec {
		return &v
	}).(GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput)
}

// Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.
func (o GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput) Mode() GoogleCloudRetailV2SearchRequestDynamicFacetSpecModePtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2SearchRequestDynamicFacetSpec) *GoogleCloudRetailV2SearchRequestDynamicFacetSpecMode {
		return v.Mode
	}).(GoogleCloudRetailV2SearchRequestDynamicFacetSpecModePtrOutput)
}

type GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2SearchRequestDynamicFacetSpec)(nil)).Elem()
}

func (o GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput) ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput() GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput {
	return o
}

func (o GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput) ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput {
	return o
}

func (o GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput) Elem() GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2SearchRequestDynamicFacetSpec) GoogleCloudRetailV2SearchRequestDynamicFacetSpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2SearchRequestDynamicFacetSpec
		return ret
	}).(GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput)
}

// Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.
func (o GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput) Mode() GoogleCloudRetailV2SearchRequestDynamicFacetSpecModePtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2SearchRequestDynamicFacetSpec) *GoogleCloudRetailV2SearchRequestDynamicFacetSpecMode {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(GoogleCloudRetailV2SearchRequestDynamicFacetSpecModePtrOutput)
}

// The specifications of dynamically generated facets.
type GoogleCloudRetailV2SearchRequestDynamicFacetSpecResponse struct {
	// Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.
	Mode string `pulumi:"mode"`
}

// The specifications of dynamically generated facets.
type GoogleCloudRetailV2SearchRequestDynamicFacetSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2SearchRequestDynamicFacetSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2SearchRequestDynamicFacetSpecResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2SearchRequestDynamicFacetSpecResponseOutput) ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecResponseOutput() GoogleCloudRetailV2SearchRequestDynamicFacetSpecResponseOutput {
	return o
}

func (o GoogleCloudRetailV2SearchRequestDynamicFacetSpecResponseOutput) ToGoogleCloudRetailV2SearchRequestDynamicFacetSpecResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2SearchRequestDynamicFacetSpecResponseOutput {
	return o
}

// Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.
func (o GoogleCloudRetailV2SearchRequestDynamicFacetSpecResponseOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2SearchRequestDynamicFacetSpecResponse) string { return v.Mode }).(pulumi.StringOutput)
}

// The specification for personalization.
type GoogleCloudRetailV2SearchRequestPersonalizationSpec struct {
	// Defaults to Mode.AUTO.
	Mode *GoogleCloudRetailV2SearchRequestPersonalizationSpecMode `pulumi:"mode"`
}

// GoogleCloudRetailV2SearchRequestPersonalizationSpecInput is an input type that accepts GoogleCloudRetailV2SearchRequestPersonalizationSpecArgs and GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2SearchRequestPersonalizationSpecInput` via:
//
//	GoogleCloudRetailV2SearchRequestPersonalizationSpecArgs{...}
type GoogleCloudRetailV2SearchRequestPersonalizationSpecInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2SearchRequestPersonalizationSpecOutput() GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput
	ToGoogleCloudRetailV2SearchRequestPersonalizationSpecOutputWithContext(context.Context) GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput
}

// The specification for personalization.
type GoogleCloudRetailV2SearchRequestPersonalizationSpecArgs struct {
	// Defaults to Mode.AUTO.
	Mode GoogleCloudRetailV2SearchRequestPersonalizationSpecModePtrInput `pulumi:"mode"`
}

func (GoogleCloudRetailV2SearchRequestPersonalizationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2SearchRequestPersonalizationSpec)(nil)).Elem()
}

func (i GoogleCloudRetailV2SearchRequestPersonalizationSpecArgs) ToGoogleCloudRetailV2SearchRequestPersonalizationSpecOutput() GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput {
	return i.ToGoogleCloudRetailV2SearchRequestPersonalizationSpecOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2SearchRequestPersonalizationSpecArgs) ToGoogleCloudRetailV2SearchRequestPersonalizationSpecOutputWithContext(ctx context.Context) GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput)
}

func (i GoogleCloudRetailV2SearchRequestPersonalizationSpecArgs) ToGoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput() GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput {
	return i.ToGoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2SearchRequestPersonalizationSpecArgs) ToGoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput).ToGoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrInput is an input type that accepts GoogleCloudRetailV2SearchRequestPersonalizationSpecArgs, GoogleCloudRetailV2SearchRequestPersonalizationSpecPtr and GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrInput` via:
//
//	        GoogleCloudRetailV2SearchRequestPersonalizationSpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput() GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput
	ToGoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutputWithContext(context.Context) GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput
}

type googleCloudRetailV2SearchRequestPersonalizationSpecPtrType GoogleCloudRetailV2SearchRequestPersonalizationSpecArgs

func GoogleCloudRetailV2SearchRequestPersonalizationSpecPtr(v *GoogleCloudRetailV2SearchRequestPersonalizationSpecArgs) GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrInput {
	return (*googleCloudRetailV2SearchRequestPersonalizationSpecPtrType)(v)
}

func (*googleCloudRetailV2SearchRequestPersonalizationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2SearchRequestPersonalizationSpec)(nil)).Elem()
}

func (i *googleCloudRetailV2SearchRequestPersonalizationSpecPtrType) ToGoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput() GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput {
	return i.ToGoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2SearchRequestPersonalizationSpecPtrType) ToGoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput)
}

// The specification for personalization.
type GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2SearchRequestPersonalizationSpec)(nil)).Elem()
}

func (o GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput) ToGoogleCloudRetailV2SearchRequestPersonalizationSpecOutput() GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput {
	return o
}

func (o GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput) ToGoogleCloudRetailV2SearchRequestPersonalizationSpecOutputWithContext(ctx context.Context) GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput {
	return o
}

func (o GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput) ToGoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput() GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput {
	return o.ToGoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput) ToGoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2SearchRequestPersonalizationSpec) *GoogleCloudRetailV2SearchRequestPersonalizationSpec {
		return &v
	}).(GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput)
}

// Defaults to Mode.AUTO.
func (o GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput) Mode() GoogleCloudRetailV2SearchRequestPersonalizationSpecModePtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2SearchRequestPersonalizationSpec) *GoogleCloudRetailV2SearchRequestPersonalizationSpecMode {
		return v.Mode
	}).(GoogleCloudRetailV2SearchRequestPersonalizationSpecModePtrOutput)
}

type GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2SearchRequestPersonalizationSpec)(nil)).Elem()
}

func (o GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput) ToGoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput() GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput {
	return o
}

func (o GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput) ToGoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput {
	return o
}

func (o GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput) Elem() GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2SearchRequestPersonalizationSpec) GoogleCloudRetailV2SearchRequestPersonalizationSpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2SearchRequestPersonalizationSpec
		return ret
	}).(GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput)
}

// Defaults to Mode.AUTO.
func (o GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput) Mode() GoogleCloudRetailV2SearchRequestPersonalizationSpecModePtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2SearchRequestPersonalizationSpec) *GoogleCloudRetailV2SearchRequestPersonalizationSpecMode {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(GoogleCloudRetailV2SearchRequestPersonalizationSpecModePtrOutput)
}

// The specification for personalization.
type GoogleCloudRetailV2SearchRequestPersonalizationSpecResponse struct {
	// Defaults to Mode.AUTO.
	Mode string `pulumi:"mode"`
}

// The specification for personalization.
type GoogleCloudRetailV2SearchRequestPersonalizationSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2SearchRequestPersonalizationSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2SearchRequestPersonalizationSpecResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2SearchRequestPersonalizationSpecResponseOutput) ToGoogleCloudRetailV2SearchRequestPersonalizationSpecResponseOutput() GoogleCloudRetailV2SearchRequestPersonalizationSpecResponseOutput {
	return o
}

func (o GoogleCloudRetailV2SearchRequestPersonalizationSpecResponseOutput) ToGoogleCloudRetailV2SearchRequestPersonalizationSpecResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2SearchRequestPersonalizationSpecResponseOutput {
	return o
}

// Defaults to Mode.AUTO.
func (o GoogleCloudRetailV2SearchRequestPersonalizationSpecResponseOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2SearchRequestPersonalizationSpecResponse) string { return v.Mode }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2AudienceInput)(nil)).Elem(), GoogleCloudRetailV2AudienceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2AudiencePtrInput)(nil)).Elem(), GoogleCloudRetailV2AudienceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2ColorInfoInput)(nil)).Elem(), GoogleCloudRetailV2ColorInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2ColorInfoPtrInput)(nil)).Elem(), GoogleCloudRetailV2ColorInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2ConditionInput)(nil)).Elem(), GoogleCloudRetailV2ConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2ConditionPtrInput)(nil)).Elem(), GoogleCloudRetailV2ConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2ConditionQueryTermInput)(nil)).Elem(), GoogleCloudRetailV2ConditionQueryTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2ConditionQueryTermArrayInput)(nil)).Elem(), GoogleCloudRetailV2ConditionQueryTermArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2ConditionTimeRangeInput)(nil)).Elem(), GoogleCloudRetailV2ConditionTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2ConditionTimeRangeArrayInput)(nil)).Elem(), GoogleCloudRetailV2ConditionTimeRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2CustomAttributeInput)(nil)).Elem(), GoogleCloudRetailV2CustomAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2CustomAttributeMapInput)(nil)).Elem(), GoogleCloudRetailV2CustomAttributeMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2FulfillmentInfoInput)(nil)).Elem(), GoogleCloudRetailV2FulfillmentInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2FulfillmentInfoArrayInput)(nil)).Elem(), GoogleCloudRetailV2FulfillmentInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2ImageInput)(nil)).Elem(), GoogleCloudRetailV2ImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2ImageArrayInput)(nil)).Elem(), GoogleCloudRetailV2ImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigInput)(nil)).Elem(), GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrInput)(nil)).Elem(), GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2ModelModelFeaturesConfigInput)(nil)).Elem(), GoogleCloudRetailV2ModelModelFeaturesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2ModelModelFeaturesConfigPtrInput)(nil)).Elem(), GoogleCloudRetailV2ModelModelFeaturesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2PriceInfoInput)(nil)).Elem(), GoogleCloudRetailV2PriceInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2PriceInfoPtrInput)(nil)).Elem(), GoogleCloudRetailV2PriceInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2PromotionInput)(nil)).Elem(), GoogleCloudRetailV2PromotionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2PromotionArrayInput)(nil)).Elem(), GoogleCloudRetailV2PromotionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RatingInput)(nil)).Elem(), GoogleCloudRetailV2RatingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RatingPtrInput)(nil)).Elem(), GoogleCloudRetailV2RatingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleInput)(nil)).Elem(), GoogleCloudRetailV2RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RulePtrInput)(nil)).Elem(), GoogleCloudRetailV2RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleBoostActionInput)(nil)).Elem(), GoogleCloudRetailV2RuleBoostActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleBoostActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2RuleBoostActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleDoNotAssociateActionInput)(nil)).Elem(), GoogleCloudRetailV2RuleDoNotAssociateActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleDoNotAssociateActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2RuleDoNotAssociateActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleFilterActionInput)(nil)).Elem(), GoogleCloudRetailV2RuleFilterActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleFilterActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2RuleFilterActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleForceReturnFacetActionInput)(nil)).Elem(), GoogleCloudRetailV2RuleForceReturnFacetActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleForceReturnFacetActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2RuleForceReturnFacetActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentInput)(nil)).Elem(), GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayInput)(nil)).Elem(), GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleIgnoreActionInput)(nil)).Elem(), GoogleCloudRetailV2RuleIgnoreActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleIgnoreActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2RuleIgnoreActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleOnewaySynonymsActionInput)(nil)).Elem(), GoogleCloudRetailV2RuleOnewaySynonymsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleOnewaySynonymsActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2RuleOnewaySynonymsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleRedirectActionInput)(nil)).Elem(), GoogleCloudRetailV2RuleRedirectActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleRedirectActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2RuleRedirectActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleRemoveFacetActionInput)(nil)).Elem(), GoogleCloudRetailV2RuleRemoveFacetActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleRemoveFacetActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2RuleRemoveFacetActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleReplacementActionInput)(nil)).Elem(), GoogleCloudRetailV2RuleReplacementActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleReplacementActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2RuleReplacementActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleTwowaySynonymsActionInput)(nil)).Elem(), GoogleCloudRetailV2RuleTwowaySynonymsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2RuleTwowaySynonymsActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2RuleTwowaySynonymsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2SearchRequestDynamicFacetSpecInput)(nil)).Elem(), GoogleCloudRetailV2SearchRequestDynamicFacetSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrInput)(nil)).Elem(), GoogleCloudRetailV2SearchRequestDynamicFacetSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2SearchRequestPersonalizationSpecInput)(nil)).Elem(), GoogleCloudRetailV2SearchRequestPersonalizationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrInput)(nil)).Elem(), GoogleCloudRetailV2SearchRequestPersonalizationSpecArgs{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2AudienceOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2AudiencePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2AudienceResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ColorInfoOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ColorInfoPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ColorInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ConditionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ConditionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ConditionQueryTermOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ConditionQueryTermArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ConditionQueryTermResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ConditionQueryTermResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ConditionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ConditionTimeRangeOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ConditionTimeRangeArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ConditionTimeRangeResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ConditionTimeRangeResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2CustomAttributeOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2CustomAttributeMapOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2CustomAttributeResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2CustomAttributeResponseMapOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2FulfillmentInfoOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2FulfillmentInfoArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2FulfillmentInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2FulfillmentInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ImageOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ImageArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ImageResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ImageResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2IntervalResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2LocalInventoryResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2LocalInventoryResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ModelModelFeaturesConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ModelModelFeaturesConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ModelModelFeaturesConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ModelServingConfigListResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ModelServingConfigListResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2PriceInfoOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2PriceInfoPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2PriceInfoPriceRangeResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2PriceInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ProductResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2ProductResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2PromotionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2PromotionArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2PromotionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2PromotionResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RatingOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RatingPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RatingResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RulePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleBoostActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleBoostActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleBoostActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleDoNotAssociateActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleDoNotAssociateActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleDoNotAssociateActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleFilterActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleFilterActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleFilterActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleForceReturnFacetActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleForceReturnFacetActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleForceReturnFacetActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleIgnoreActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleIgnoreActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleIgnoreActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleOnewaySynonymsActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleOnewaySynonymsActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleOnewaySynonymsActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleRedirectActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleRedirectActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleRedirectActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleRemoveFacetActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleRemoveFacetActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleRemoveFacetActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleReplacementActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleReplacementActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleReplacementActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleTwowaySynonymsActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleTwowaySynonymsActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2RuleTwowaySynonymsActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2SearchRequestDynamicFacetSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2SearchRequestDynamicFacetSpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2SearchRequestDynamicFacetSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2SearchRequestPersonalizationSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2SearchRequestPersonalizationSpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2SearchRequestPersonalizationSpecResponseOutput{})
}
