// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// An intended audience of the Product for whom it's sold.
type GoogleCloudRetailV2betaAudience struct {
	// The age groups of the audience. Strongly encouraged to use the standard values: "newborn" (up to 3 months old), "infant" (3–12 months old), "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
	AgeGroups []string `pulumi:"ageGroups"`
	// The genders of the audience. Strongly encouraged to use the standard values: "male", "female", "unisex". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
	Genders []string `pulumi:"genders"`
}

// GoogleCloudRetailV2betaAudienceInput is an input type that accepts GoogleCloudRetailV2betaAudienceArgs and GoogleCloudRetailV2betaAudienceOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaAudienceInput` via:
//
//	GoogleCloudRetailV2betaAudienceArgs{...}
type GoogleCloudRetailV2betaAudienceInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaAudienceOutput() GoogleCloudRetailV2betaAudienceOutput
	ToGoogleCloudRetailV2betaAudienceOutputWithContext(context.Context) GoogleCloudRetailV2betaAudienceOutput
}

// An intended audience of the Product for whom it's sold.
type GoogleCloudRetailV2betaAudienceArgs struct {
	// The age groups of the audience. Strongly encouraged to use the standard values: "newborn" (up to 3 months old), "infant" (3–12 months old), "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
	AgeGroups pulumi.StringArrayInput `pulumi:"ageGroups"`
	// The genders of the audience. Strongly encouraged to use the standard values: "male", "female", "unisex". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
	Genders pulumi.StringArrayInput `pulumi:"genders"`
}

func (GoogleCloudRetailV2betaAudienceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaAudience)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaAudienceArgs) ToGoogleCloudRetailV2betaAudienceOutput() GoogleCloudRetailV2betaAudienceOutput {
	return i.ToGoogleCloudRetailV2betaAudienceOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaAudienceArgs) ToGoogleCloudRetailV2betaAudienceOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaAudienceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaAudienceOutput)
}

func (i GoogleCloudRetailV2betaAudienceArgs) ToGoogleCloudRetailV2betaAudiencePtrOutput() GoogleCloudRetailV2betaAudiencePtrOutput {
	return i.ToGoogleCloudRetailV2betaAudiencePtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaAudienceArgs) ToGoogleCloudRetailV2betaAudiencePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaAudiencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaAudienceOutput).ToGoogleCloudRetailV2betaAudiencePtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaAudiencePtrInput is an input type that accepts GoogleCloudRetailV2betaAudienceArgs, GoogleCloudRetailV2betaAudiencePtr and GoogleCloudRetailV2betaAudiencePtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaAudiencePtrInput` via:
//
//	        GoogleCloudRetailV2betaAudienceArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaAudiencePtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaAudiencePtrOutput() GoogleCloudRetailV2betaAudiencePtrOutput
	ToGoogleCloudRetailV2betaAudiencePtrOutputWithContext(context.Context) GoogleCloudRetailV2betaAudiencePtrOutput
}

type googleCloudRetailV2betaAudiencePtrType GoogleCloudRetailV2betaAudienceArgs

func GoogleCloudRetailV2betaAudiencePtr(v *GoogleCloudRetailV2betaAudienceArgs) GoogleCloudRetailV2betaAudiencePtrInput {
	return (*googleCloudRetailV2betaAudiencePtrType)(v)
}

func (*googleCloudRetailV2betaAudiencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaAudience)(nil)).Elem()
}

func (i *googleCloudRetailV2betaAudiencePtrType) ToGoogleCloudRetailV2betaAudiencePtrOutput() GoogleCloudRetailV2betaAudiencePtrOutput {
	return i.ToGoogleCloudRetailV2betaAudiencePtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaAudiencePtrType) ToGoogleCloudRetailV2betaAudiencePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaAudiencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaAudiencePtrOutput)
}

// An intended audience of the Product for whom it's sold.
type GoogleCloudRetailV2betaAudienceOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaAudienceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaAudience)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaAudienceOutput) ToGoogleCloudRetailV2betaAudienceOutput() GoogleCloudRetailV2betaAudienceOutput {
	return o
}

func (o GoogleCloudRetailV2betaAudienceOutput) ToGoogleCloudRetailV2betaAudienceOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaAudienceOutput {
	return o
}

func (o GoogleCloudRetailV2betaAudienceOutput) ToGoogleCloudRetailV2betaAudiencePtrOutput() GoogleCloudRetailV2betaAudiencePtrOutput {
	return o.ToGoogleCloudRetailV2betaAudiencePtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaAudienceOutput) ToGoogleCloudRetailV2betaAudiencePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaAudiencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaAudience) *GoogleCloudRetailV2betaAudience {
		return &v
	}).(GoogleCloudRetailV2betaAudiencePtrOutput)
}

// The age groups of the audience. Strongly encouraged to use the standard values: "newborn" (up to 3 months old), "infant" (3–12 months old), "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
func (o GoogleCloudRetailV2betaAudienceOutput) AgeGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaAudience) []string { return v.AgeGroups }).(pulumi.StringArrayOutput)
}

// The genders of the audience. Strongly encouraged to use the standard values: "male", "female", "unisex". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
func (o GoogleCloudRetailV2betaAudienceOutput) Genders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaAudience) []string { return v.Genders }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2betaAudiencePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaAudiencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaAudience)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaAudiencePtrOutput) ToGoogleCloudRetailV2betaAudiencePtrOutput() GoogleCloudRetailV2betaAudiencePtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaAudiencePtrOutput) ToGoogleCloudRetailV2betaAudiencePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaAudiencePtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaAudiencePtrOutput) Elem() GoogleCloudRetailV2betaAudienceOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaAudience) GoogleCloudRetailV2betaAudience {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaAudience
		return ret
	}).(GoogleCloudRetailV2betaAudienceOutput)
}

// The age groups of the audience. Strongly encouraged to use the standard values: "newborn" (up to 3 months old), "infant" (3–12 months old), "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
func (o GoogleCloudRetailV2betaAudiencePtrOutput) AgeGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaAudience) []string {
		if v == nil {
			return nil
		}
		return v.AgeGroups
	}).(pulumi.StringArrayOutput)
}

// The genders of the audience. Strongly encouraged to use the standard values: "male", "female", "unisex". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
func (o GoogleCloudRetailV2betaAudiencePtrOutput) Genders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaAudience) []string {
		if v == nil {
			return nil
		}
		return v.Genders
	}).(pulumi.StringArrayOutput)
}

// An intended audience of the Product for whom it's sold.
type GoogleCloudRetailV2betaAudienceResponse struct {
	// The age groups of the audience. Strongly encouraged to use the standard values: "newborn" (up to 3 months old), "infant" (3–12 months old), "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
	AgeGroups []string `pulumi:"ageGroups"`
	// The genders of the audience. Strongly encouraged to use the standard values: "male", "female", "unisex". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
	Genders []string `pulumi:"genders"`
}

// An intended audience of the Product for whom it's sold.
type GoogleCloudRetailV2betaAudienceResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaAudienceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaAudienceResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaAudienceResponseOutput) ToGoogleCloudRetailV2betaAudienceResponseOutput() GoogleCloudRetailV2betaAudienceResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaAudienceResponseOutput) ToGoogleCloudRetailV2betaAudienceResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaAudienceResponseOutput {
	return o
}

// The age groups of the audience. Strongly encouraged to use the standard values: "newborn" (up to 3 months old), "infant" (3–12 months old), "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
func (o GoogleCloudRetailV2betaAudienceResponseOutput) AgeGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaAudienceResponse) []string { return v.AgeGroups }).(pulumi.StringArrayOutput)
}

// The genders of the audience. Strongly encouraged to use the standard values: "male", "female", "unisex". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
func (o GoogleCloudRetailV2betaAudienceResponseOutput) Genders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaAudienceResponse) []string { return v.Genders }).(pulumi.StringArrayOutput)
}

// The color information of a Product.
type GoogleCloudRetailV2betaColorInfo struct {
	// The standard color families. Strongly recommended to use the following standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it is expected to have only 1 color family. May consider using single "Mixed" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
	ColorFamilies []string `pulumi:"colorFamilies"`
	// The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single "Mixed" instead of multiple values. A maximum of 75 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
	Colors []string `pulumi:"colors"`
}

// GoogleCloudRetailV2betaColorInfoInput is an input type that accepts GoogleCloudRetailV2betaColorInfoArgs and GoogleCloudRetailV2betaColorInfoOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaColorInfoInput` via:
//
//	GoogleCloudRetailV2betaColorInfoArgs{...}
type GoogleCloudRetailV2betaColorInfoInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaColorInfoOutput() GoogleCloudRetailV2betaColorInfoOutput
	ToGoogleCloudRetailV2betaColorInfoOutputWithContext(context.Context) GoogleCloudRetailV2betaColorInfoOutput
}

// The color information of a Product.
type GoogleCloudRetailV2betaColorInfoArgs struct {
	// The standard color families. Strongly recommended to use the following standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it is expected to have only 1 color family. May consider using single "Mixed" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
	ColorFamilies pulumi.StringArrayInput `pulumi:"colorFamilies"`
	// The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single "Mixed" instead of multiple values. A maximum of 75 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
	Colors pulumi.StringArrayInput `pulumi:"colors"`
}

func (GoogleCloudRetailV2betaColorInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaColorInfo)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaColorInfoArgs) ToGoogleCloudRetailV2betaColorInfoOutput() GoogleCloudRetailV2betaColorInfoOutput {
	return i.ToGoogleCloudRetailV2betaColorInfoOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaColorInfoArgs) ToGoogleCloudRetailV2betaColorInfoOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaColorInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaColorInfoOutput)
}

func (i GoogleCloudRetailV2betaColorInfoArgs) ToGoogleCloudRetailV2betaColorInfoPtrOutput() GoogleCloudRetailV2betaColorInfoPtrOutput {
	return i.ToGoogleCloudRetailV2betaColorInfoPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaColorInfoArgs) ToGoogleCloudRetailV2betaColorInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaColorInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaColorInfoOutput).ToGoogleCloudRetailV2betaColorInfoPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaColorInfoPtrInput is an input type that accepts GoogleCloudRetailV2betaColorInfoArgs, GoogleCloudRetailV2betaColorInfoPtr and GoogleCloudRetailV2betaColorInfoPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaColorInfoPtrInput` via:
//
//	        GoogleCloudRetailV2betaColorInfoArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaColorInfoPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaColorInfoPtrOutput() GoogleCloudRetailV2betaColorInfoPtrOutput
	ToGoogleCloudRetailV2betaColorInfoPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaColorInfoPtrOutput
}

type googleCloudRetailV2betaColorInfoPtrType GoogleCloudRetailV2betaColorInfoArgs

func GoogleCloudRetailV2betaColorInfoPtr(v *GoogleCloudRetailV2betaColorInfoArgs) GoogleCloudRetailV2betaColorInfoPtrInput {
	return (*googleCloudRetailV2betaColorInfoPtrType)(v)
}

func (*googleCloudRetailV2betaColorInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaColorInfo)(nil)).Elem()
}

func (i *googleCloudRetailV2betaColorInfoPtrType) ToGoogleCloudRetailV2betaColorInfoPtrOutput() GoogleCloudRetailV2betaColorInfoPtrOutput {
	return i.ToGoogleCloudRetailV2betaColorInfoPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaColorInfoPtrType) ToGoogleCloudRetailV2betaColorInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaColorInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaColorInfoPtrOutput)
}

// The color information of a Product.
type GoogleCloudRetailV2betaColorInfoOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaColorInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaColorInfo)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaColorInfoOutput) ToGoogleCloudRetailV2betaColorInfoOutput() GoogleCloudRetailV2betaColorInfoOutput {
	return o
}

func (o GoogleCloudRetailV2betaColorInfoOutput) ToGoogleCloudRetailV2betaColorInfoOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaColorInfoOutput {
	return o
}

func (o GoogleCloudRetailV2betaColorInfoOutput) ToGoogleCloudRetailV2betaColorInfoPtrOutput() GoogleCloudRetailV2betaColorInfoPtrOutput {
	return o.ToGoogleCloudRetailV2betaColorInfoPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaColorInfoOutput) ToGoogleCloudRetailV2betaColorInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaColorInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaColorInfo) *GoogleCloudRetailV2betaColorInfo {
		return &v
	}).(GoogleCloudRetailV2betaColorInfoPtrOutput)
}

// The standard color families. Strongly recommended to use the following standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it is expected to have only 1 color family. May consider using single "Mixed" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
func (o GoogleCloudRetailV2betaColorInfoOutput) ColorFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaColorInfo) []string { return v.ColorFamilies }).(pulumi.StringArrayOutput)
}

// The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single "Mixed" instead of multiple values. A maximum of 75 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
func (o GoogleCloudRetailV2betaColorInfoOutput) Colors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaColorInfo) []string { return v.Colors }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2betaColorInfoPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaColorInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaColorInfo)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaColorInfoPtrOutput) ToGoogleCloudRetailV2betaColorInfoPtrOutput() GoogleCloudRetailV2betaColorInfoPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaColorInfoPtrOutput) ToGoogleCloudRetailV2betaColorInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaColorInfoPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaColorInfoPtrOutput) Elem() GoogleCloudRetailV2betaColorInfoOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaColorInfo) GoogleCloudRetailV2betaColorInfo {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaColorInfo
		return ret
	}).(GoogleCloudRetailV2betaColorInfoOutput)
}

// The standard color families. Strongly recommended to use the following standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it is expected to have only 1 color family. May consider using single "Mixed" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
func (o GoogleCloudRetailV2betaColorInfoPtrOutput) ColorFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaColorInfo) []string {
		if v == nil {
			return nil
		}
		return v.ColorFamilies
	}).(pulumi.StringArrayOutput)
}

// The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single "Mixed" instead of multiple values. A maximum of 75 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
func (o GoogleCloudRetailV2betaColorInfoPtrOutput) Colors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaColorInfo) []string {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(pulumi.StringArrayOutput)
}

// The color information of a Product.
type GoogleCloudRetailV2betaColorInfoResponse struct {
	// The standard color families. Strongly recommended to use the following standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it is expected to have only 1 color family. May consider using single "Mixed" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
	ColorFamilies []string `pulumi:"colorFamilies"`
	// The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single "Mixed" instead of multiple values. A maximum of 75 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
	Colors []string `pulumi:"colors"`
}

// The color information of a Product.
type GoogleCloudRetailV2betaColorInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaColorInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaColorInfoResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaColorInfoResponseOutput) ToGoogleCloudRetailV2betaColorInfoResponseOutput() GoogleCloudRetailV2betaColorInfoResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaColorInfoResponseOutput) ToGoogleCloudRetailV2betaColorInfoResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaColorInfoResponseOutput {
	return o
}

// The standard color families. Strongly recommended to use the following standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it is expected to have only 1 color family. May consider using single "Mixed" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
func (o GoogleCloudRetailV2betaColorInfoResponseOutput) ColorFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaColorInfoResponse) []string { return v.ColorFamilies }).(pulumi.StringArrayOutput)
}

// The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single "Mixed" instead of multiple values. A maximum of 75 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
func (o GoogleCloudRetailV2betaColorInfoResponseOutput) Colors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaColorInfoResponse) []string { return v.Colors }).(pulumi.StringArrayOutput)
}

// Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of 'query_terms' or 'products_filter'. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted.
type GoogleCloudRetailV2betaCondition struct {
	// Range of time(s) specifying when Condition is active. Condition true if any time range matches.
	ActiveTimeRange []GoogleCloudRetailV2betaConditionTimeRange `pulumi:"activeTimeRange"`
	// Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;
	PageCategories []string `pulumi:"pageCategories"`
	// A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
	QueryTerms []GoogleCloudRetailV2betaConditionQueryTerm `pulumi:"queryTerms"`
}

// GoogleCloudRetailV2betaConditionInput is an input type that accepts GoogleCloudRetailV2betaConditionArgs and GoogleCloudRetailV2betaConditionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaConditionInput` via:
//
//	GoogleCloudRetailV2betaConditionArgs{...}
type GoogleCloudRetailV2betaConditionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaConditionOutput() GoogleCloudRetailV2betaConditionOutput
	ToGoogleCloudRetailV2betaConditionOutputWithContext(context.Context) GoogleCloudRetailV2betaConditionOutput
}

// Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of 'query_terms' or 'products_filter'. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted.
type GoogleCloudRetailV2betaConditionArgs struct {
	// Range of time(s) specifying when Condition is active. Condition true if any time range matches.
	ActiveTimeRange GoogleCloudRetailV2betaConditionTimeRangeArrayInput `pulumi:"activeTimeRange"`
	// Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;
	PageCategories pulumi.StringArrayInput `pulumi:"pageCategories"`
	// A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
	QueryTerms GoogleCloudRetailV2betaConditionQueryTermArrayInput `pulumi:"queryTerms"`
}

func (GoogleCloudRetailV2betaConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaCondition)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaConditionArgs) ToGoogleCloudRetailV2betaConditionOutput() GoogleCloudRetailV2betaConditionOutput {
	return i.ToGoogleCloudRetailV2betaConditionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaConditionArgs) ToGoogleCloudRetailV2betaConditionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaConditionOutput)
}

func (i GoogleCloudRetailV2betaConditionArgs) ToGoogleCloudRetailV2betaConditionPtrOutput() GoogleCloudRetailV2betaConditionPtrOutput {
	return i.ToGoogleCloudRetailV2betaConditionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaConditionArgs) ToGoogleCloudRetailV2betaConditionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaConditionOutput).ToGoogleCloudRetailV2betaConditionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaConditionPtrInput is an input type that accepts GoogleCloudRetailV2betaConditionArgs, GoogleCloudRetailV2betaConditionPtr and GoogleCloudRetailV2betaConditionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaConditionPtrInput` via:
//
//	        GoogleCloudRetailV2betaConditionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaConditionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaConditionPtrOutput() GoogleCloudRetailV2betaConditionPtrOutput
	ToGoogleCloudRetailV2betaConditionPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaConditionPtrOutput
}

type googleCloudRetailV2betaConditionPtrType GoogleCloudRetailV2betaConditionArgs

func GoogleCloudRetailV2betaConditionPtr(v *GoogleCloudRetailV2betaConditionArgs) GoogleCloudRetailV2betaConditionPtrInput {
	return (*googleCloudRetailV2betaConditionPtrType)(v)
}

func (*googleCloudRetailV2betaConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaCondition)(nil)).Elem()
}

func (i *googleCloudRetailV2betaConditionPtrType) ToGoogleCloudRetailV2betaConditionPtrOutput() GoogleCloudRetailV2betaConditionPtrOutput {
	return i.ToGoogleCloudRetailV2betaConditionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaConditionPtrType) ToGoogleCloudRetailV2betaConditionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaConditionPtrOutput)
}

// Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of 'query_terms' or 'products_filter'. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted.
type GoogleCloudRetailV2betaConditionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaCondition)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaConditionOutput) ToGoogleCloudRetailV2betaConditionOutput() GoogleCloudRetailV2betaConditionOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionOutput) ToGoogleCloudRetailV2betaConditionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionOutput) ToGoogleCloudRetailV2betaConditionPtrOutput() GoogleCloudRetailV2betaConditionPtrOutput {
	return o.ToGoogleCloudRetailV2betaConditionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaConditionOutput) ToGoogleCloudRetailV2betaConditionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaCondition) *GoogleCloudRetailV2betaCondition {
		return &v
	}).(GoogleCloudRetailV2betaConditionPtrOutput)
}

// Range of time(s) specifying when Condition is active. Condition true if any time range matches.
func (o GoogleCloudRetailV2betaConditionOutput) ActiveTimeRange() GoogleCloudRetailV2betaConditionTimeRangeArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaCondition) []GoogleCloudRetailV2betaConditionTimeRange {
		return v.ActiveTimeRange
	}).(GoogleCloudRetailV2betaConditionTimeRangeArrayOutput)
}

// Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;
func (o GoogleCloudRetailV2betaConditionOutput) PageCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaCondition) []string { return v.PageCategories }).(pulumi.StringArrayOutput)
}

// A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
func (o GoogleCloudRetailV2betaConditionOutput) QueryTerms() GoogleCloudRetailV2betaConditionQueryTermArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaCondition) []GoogleCloudRetailV2betaConditionQueryTerm {
		return v.QueryTerms
	}).(GoogleCloudRetailV2betaConditionQueryTermArrayOutput)
}

type GoogleCloudRetailV2betaConditionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaCondition)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaConditionPtrOutput) ToGoogleCloudRetailV2betaConditionPtrOutput() GoogleCloudRetailV2betaConditionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionPtrOutput) ToGoogleCloudRetailV2betaConditionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionPtrOutput) Elem() GoogleCloudRetailV2betaConditionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaCondition) GoogleCloudRetailV2betaCondition {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaCondition
		return ret
	}).(GoogleCloudRetailV2betaConditionOutput)
}

// Range of time(s) specifying when Condition is active. Condition true if any time range matches.
func (o GoogleCloudRetailV2betaConditionPtrOutput) ActiveTimeRange() GoogleCloudRetailV2betaConditionTimeRangeArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaCondition) []GoogleCloudRetailV2betaConditionTimeRange {
		if v == nil {
			return nil
		}
		return v.ActiveTimeRange
	}).(GoogleCloudRetailV2betaConditionTimeRangeArrayOutput)
}

// Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;
func (o GoogleCloudRetailV2betaConditionPtrOutput) PageCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaCondition) []string {
		if v == nil {
			return nil
		}
		return v.PageCategories
	}).(pulumi.StringArrayOutput)
}

// A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
func (o GoogleCloudRetailV2betaConditionPtrOutput) QueryTerms() GoogleCloudRetailV2betaConditionQueryTermArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaCondition) []GoogleCloudRetailV2betaConditionQueryTerm {
		if v == nil {
			return nil
		}
		return v.QueryTerms
	}).(GoogleCloudRetailV2betaConditionQueryTermArrayOutput)
}

// Query terms that we want to match on.
type GoogleCloudRetailV2betaConditionQueryTerm struct {
	// Whether this is supposed to be a full or partial match.
	FullMatch *bool `pulumi:"fullMatch"`
	// The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. For example, "a b c" is 3 terms and allowed, but " a b c d" is 4 terms and not allowed for a partial match.
	Value *string `pulumi:"value"`
}

// GoogleCloudRetailV2betaConditionQueryTermInput is an input type that accepts GoogleCloudRetailV2betaConditionQueryTermArgs and GoogleCloudRetailV2betaConditionQueryTermOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaConditionQueryTermInput` via:
//
//	GoogleCloudRetailV2betaConditionQueryTermArgs{...}
type GoogleCloudRetailV2betaConditionQueryTermInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaConditionQueryTermOutput() GoogleCloudRetailV2betaConditionQueryTermOutput
	ToGoogleCloudRetailV2betaConditionQueryTermOutputWithContext(context.Context) GoogleCloudRetailV2betaConditionQueryTermOutput
}

// Query terms that we want to match on.
type GoogleCloudRetailV2betaConditionQueryTermArgs struct {
	// Whether this is supposed to be a full or partial match.
	FullMatch pulumi.BoolPtrInput `pulumi:"fullMatch"`
	// The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. For example, "a b c" is 3 terms and allowed, but " a b c d" is 4 terms and not allowed for a partial match.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GoogleCloudRetailV2betaConditionQueryTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaConditionQueryTerm)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaConditionQueryTermArgs) ToGoogleCloudRetailV2betaConditionQueryTermOutput() GoogleCloudRetailV2betaConditionQueryTermOutput {
	return i.ToGoogleCloudRetailV2betaConditionQueryTermOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaConditionQueryTermArgs) ToGoogleCloudRetailV2betaConditionQueryTermOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionQueryTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaConditionQueryTermOutput)
}

// GoogleCloudRetailV2betaConditionQueryTermArrayInput is an input type that accepts GoogleCloudRetailV2betaConditionQueryTermArray and GoogleCloudRetailV2betaConditionQueryTermArrayOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaConditionQueryTermArrayInput` via:
//
//	GoogleCloudRetailV2betaConditionQueryTermArray{ GoogleCloudRetailV2betaConditionQueryTermArgs{...} }
type GoogleCloudRetailV2betaConditionQueryTermArrayInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaConditionQueryTermArrayOutput() GoogleCloudRetailV2betaConditionQueryTermArrayOutput
	ToGoogleCloudRetailV2betaConditionQueryTermArrayOutputWithContext(context.Context) GoogleCloudRetailV2betaConditionQueryTermArrayOutput
}

type GoogleCloudRetailV2betaConditionQueryTermArray []GoogleCloudRetailV2betaConditionQueryTermInput

func (GoogleCloudRetailV2betaConditionQueryTermArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaConditionQueryTerm)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaConditionQueryTermArray) ToGoogleCloudRetailV2betaConditionQueryTermArrayOutput() GoogleCloudRetailV2betaConditionQueryTermArrayOutput {
	return i.ToGoogleCloudRetailV2betaConditionQueryTermArrayOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaConditionQueryTermArray) ToGoogleCloudRetailV2betaConditionQueryTermArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionQueryTermArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaConditionQueryTermArrayOutput)
}

// Query terms that we want to match on.
type GoogleCloudRetailV2betaConditionQueryTermOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaConditionQueryTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaConditionQueryTerm)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaConditionQueryTermOutput) ToGoogleCloudRetailV2betaConditionQueryTermOutput() GoogleCloudRetailV2betaConditionQueryTermOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionQueryTermOutput) ToGoogleCloudRetailV2betaConditionQueryTermOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionQueryTermOutput {
	return o
}

// Whether this is supposed to be a full or partial match.
func (o GoogleCloudRetailV2betaConditionQueryTermOutput) FullMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaConditionQueryTerm) *bool { return v.FullMatch }).(pulumi.BoolPtrOutput)
}

// The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. For example, "a b c" is 3 terms and allowed, but " a b c d" is 4 terms and not allowed for a partial match.
func (o GoogleCloudRetailV2betaConditionQueryTermOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaConditionQueryTerm) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2betaConditionQueryTermArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaConditionQueryTermArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaConditionQueryTerm)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaConditionQueryTermArrayOutput) ToGoogleCloudRetailV2betaConditionQueryTermArrayOutput() GoogleCloudRetailV2betaConditionQueryTermArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionQueryTermArrayOutput) ToGoogleCloudRetailV2betaConditionQueryTermArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionQueryTermArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionQueryTermArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaConditionQueryTermOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaConditionQueryTerm {
		return vs[0].([]GoogleCloudRetailV2betaConditionQueryTerm)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaConditionQueryTermOutput)
}

// Query terms that we want to match on.
type GoogleCloudRetailV2betaConditionQueryTermResponse struct {
	// Whether this is supposed to be a full or partial match.
	FullMatch bool `pulumi:"fullMatch"`
	// The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. For example, "a b c" is 3 terms and allowed, but " a b c d" is 4 terms and not allowed for a partial match.
	Value string `pulumi:"value"`
}

// Query terms that we want to match on.
type GoogleCloudRetailV2betaConditionQueryTermResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaConditionQueryTermResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaConditionQueryTermResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaConditionQueryTermResponseOutput) ToGoogleCloudRetailV2betaConditionQueryTermResponseOutput() GoogleCloudRetailV2betaConditionQueryTermResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionQueryTermResponseOutput) ToGoogleCloudRetailV2betaConditionQueryTermResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionQueryTermResponseOutput {
	return o
}

// Whether this is supposed to be a full or partial match.
func (o GoogleCloudRetailV2betaConditionQueryTermResponseOutput) FullMatch() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaConditionQueryTermResponse) bool { return v.FullMatch }).(pulumi.BoolOutput)
}

// The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. For example, "a b c" is 3 terms and allowed, but " a b c d" is 4 terms and not allowed for a partial match.
func (o GoogleCloudRetailV2betaConditionQueryTermResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaConditionQueryTermResponse) string { return v.Value }).(pulumi.StringOutput)
}

type GoogleCloudRetailV2betaConditionQueryTermResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaConditionQueryTermResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaConditionQueryTermResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaConditionQueryTermResponseArrayOutput) ToGoogleCloudRetailV2betaConditionQueryTermResponseArrayOutput() GoogleCloudRetailV2betaConditionQueryTermResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionQueryTermResponseArrayOutput) ToGoogleCloudRetailV2betaConditionQueryTermResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionQueryTermResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionQueryTermResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaConditionQueryTermResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaConditionQueryTermResponse {
		return vs[0].([]GoogleCloudRetailV2betaConditionQueryTermResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaConditionQueryTermResponseOutput)
}

// Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of 'query_terms' or 'products_filter'. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted.
type GoogleCloudRetailV2betaConditionResponse struct {
	// Range of time(s) specifying when Condition is active. Condition true if any time range matches.
	ActiveTimeRange []GoogleCloudRetailV2betaConditionTimeRangeResponse `pulumi:"activeTimeRange"`
	// Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;
	PageCategories []string `pulumi:"pageCategories"`
	// A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
	QueryTerms []GoogleCloudRetailV2betaConditionQueryTermResponse `pulumi:"queryTerms"`
}

// Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of 'query_terms' or 'products_filter'. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted.
type GoogleCloudRetailV2betaConditionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaConditionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaConditionResponseOutput) ToGoogleCloudRetailV2betaConditionResponseOutput() GoogleCloudRetailV2betaConditionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionResponseOutput) ToGoogleCloudRetailV2betaConditionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionResponseOutput {
	return o
}

// Range of time(s) specifying when Condition is active. Condition true if any time range matches.
func (o GoogleCloudRetailV2betaConditionResponseOutput) ActiveTimeRange() GoogleCloudRetailV2betaConditionTimeRangeResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaConditionResponse) []GoogleCloudRetailV2betaConditionTimeRangeResponse {
		return v.ActiveTimeRange
	}).(GoogleCloudRetailV2betaConditionTimeRangeResponseArrayOutput)
}

// Used to support browse uses cases. A list (up to 10 entries) of categories or departments. The format should be the same as UserEvent.page_categories;
func (o GoogleCloudRetailV2betaConditionResponseOutput) PageCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaConditionResponse) []string { return v.PageCategories }).(pulumi.StringArrayOutput)
}

// A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
func (o GoogleCloudRetailV2betaConditionResponseOutput) QueryTerms() GoogleCloudRetailV2betaConditionQueryTermResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaConditionResponse) []GoogleCloudRetailV2betaConditionQueryTermResponse {
		return v.QueryTerms
	}).(GoogleCloudRetailV2betaConditionQueryTermResponseArrayOutput)
}

// Used for time-dependent conditions. Example: Want to have rule applied for week long sale.
type GoogleCloudRetailV2betaConditionTimeRange struct {
	// End of time range. Range is inclusive.
	EndTime *string `pulumi:"endTime"`
	// Start of time range. Range is inclusive.
	StartTime *string `pulumi:"startTime"`
}

// GoogleCloudRetailV2betaConditionTimeRangeInput is an input type that accepts GoogleCloudRetailV2betaConditionTimeRangeArgs and GoogleCloudRetailV2betaConditionTimeRangeOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaConditionTimeRangeInput` via:
//
//	GoogleCloudRetailV2betaConditionTimeRangeArgs{...}
type GoogleCloudRetailV2betaConditionTimeRangeInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaConditionTimeRangeOutput() GoogleCloudRetailV2betaConditionTimeRangeOutput
	ToGoogleCloudRetailV2betaConditionTimeRangeOutputWithContext(context.Context) GoogleCloudRetailV2betaConditionTimeRangeOutput
}

// Used for time-dependent conditions. Example: Want to have rule applied for week long sale.
type GoogleCloudRetailV2betaConditionTimeRangeArgs struct {
	// End of time range. Range is inclusive.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Start of time range. Range is inclusive.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (GoogleCloudRetailV2betaConditionTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaConditionTimeRange)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaConditionTimeRangeArgs) ToGoogleCloudRetailV2betaConditionTimeRangeOutput() GoogleCloudRetailV2betaConditionTimeRangeOutput {
	return i.ToGoogleCloudRetailV2betaConditionTimeRangeOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaConditionTimeRangeArgs) ToGoogleCloudRetailV2betaConditionTimeRangeOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaConditionTimeRangeOutput)
}

// GoogleCloudRetailV2betaConditionTimeRangeArrayInput is an input type that accepts GoogleCloudRetailV2betaConditionTimeRangeArray and GoogleCloudRetailV2betaConditionTimeRangeArrayOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaConditionTimeRangeArrayInput` via:
//
//	GoogleCloudRetailV2betaConditionTimeRangeArray{ GoogleCloudRetailV2betaConditionTimeRangeArgs{...} }
type GoogleCloudRetailV2betaConditionTimeRangeArrayInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaConditionTimeRangeArrayOutput() GoogleCloudRetailV2betaConditionTimeRangeArrayOutput
	ToGoogleCloudRetailV2betaConditionTimeRangeArrayOutputWithContext(context.Context) GoogleCloudRetailV2betaConditionTimeRangeArrayOutput
}

type GoogleCloudRetailV2betaConditionTimeRangeArray []GoogleCloudRetailV2betaConditionTimeRangeInput

func (GoogleCloudRetailV2betaConditionTimeRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaConditionTimeRange)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaConditionTimeRangeArray) ToGoogleCloudRetailV2betaConditionTimeRangeArrayOutput() GoogleCloudRetailV2betaConditionTimeRangeArrayOutput {
	return i.ToGoogleCloudRetailV2betaConditionTimeRangeArrayOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaConditionTimeRangeArray) ToGoogleCloudRetailV2betaConditionTimeRangeArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionTimeRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaConditionTimeRangeArrayOutput)
}

// Used for time-dependent conditions. Example: Want to have rule applied for week long sale.
type GoogleCloudRetailV2betaConditionTimeRangeOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaConditionTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaConditionTimeRange)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaConditionTimeRangeOutput) ToGoogleCloudRetailV2betaConditionTimeRangeOutput() GoogleCloudRetailV2betaConditionTimeRangeOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionTimeRangeOutput) ToGoogleCloudRetailV2betaConditionTimeRangeOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionTimeRangeOutput {
	return o
}

// End of time range. Range is inclusive.
func (o GoogleCloudRetailV2betaConditionTimeRangeOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaConditionTimeRange) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Start of time range. Range is inclusive.
func (o GoogleCloudRetailV2betaConditionTimeRangeOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaConditionTimeRange) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2betaConditionTimeRangeArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaConditionTimeRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaConditionTimeRange)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaConditionTimeRangeArrayOutput) ToGoogleCloudRetailV2betaConditionTimeRangeArrayOutput() GoogleCloudRetailV2betaConditionTimeRangeArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionTimeRangeArrayOutput) ToGoogleCloudRetailV2betaConditionTimeRangeArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionTimeRangeArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionTimeRangeArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaConditionTimeRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaConditionTimeRange {
		return vs[0].([]GoogleCloudRetailV2betaConditionTimeRange)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaConditionTimeRangeOutput)
}

// Used for time-dependent conditions. Example: Want to have rule applied for week long sale.
type GoogleCloudRetailV2betaConditionTimeRangeResponse struct {
	// End of time range. Range is inclusive.
	EndTime string `pulumi:"endTime"`
	// Start of time range. Range is inclusive.
	StartTime string `pulumi:"startTime"`
}

// Used for time-dependent conditions. Example: Want to have rule applied for week long sale.
type GoogleCloudRetailV2betaConditionTimeRangeResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaConditionTimeRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaConditionTimeRangeResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaConditionTimeRangeResponseOutput) ToGoogleCloudRetailV2betaConditionTimeRangeResponseOutput() GoogleCloudRetailV2betaConditionTimeRangeResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionTimeRangeResponseOutput) ToGoogleCloudRetailV2betaConditionTimeRangeResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionTimeRangeResponseOutput {
	return o
}

// End of time range. Range is inclusive.
func (o GoogleCloudRetailV2betaConditionTimeRangeResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaConditionTimeRangeResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// Start of time range. Range is inclusive.
func (o GoogleCloudRetailV2betaConditionTimeRangeResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaConditionTimeRangeResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

type GoogleCloudRetailV2betaConditionTimeRangeResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaConditionTimeRangeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaConditionTimeRangeResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaConditionTimeRangeResponseArrayOutput) ToGoogleCloudRetailV2betaConditionTimeRangeResponseArrayOutput() GoogleCloudRetailV2betaConditionTimeRangeResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionTimeRangeResponseArrayOutput) ToGoogleCloudRetailV2betaConditionTimeRangeResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaConditionTimeRangeResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaConditionTimeRangeResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaConditionTimeRangeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaConditionTimeRangeResponse {
		return vs[0].([]GoogleCloudRetailV2betaConditionTimeRangeResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaConditionTimeRangeResponseOutput)
}

// A custom attribute that is not explicitly modeled in Product.
type GoogleCloudRetailV2betaCustomAttribute struct {
	// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are indexed, so that they can be filtered, faceted or boosted in SearchService.Search. This field is ignored in a UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and SearchRequest.boost_spec for more details.
	Indexable *bool `pulumi:"indexable"`
	// The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
	Numbers []float64 `pulumi:"numbers"`
	// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are searchable by text queries in SearchService.Search. This field is ignored in a UserEvent. Only set if type text is set. Otherwise, a INVALID_ARGUMENT error is returned.
	Searchable *bool `pulumi:"searchable"`
	// The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
	Text []string `pulumi:"text"`
}

// GoogleCloudRetailV2betaCustomAttributeInput is an input type that accepts GoogleCloudRetailV2betaCustomAttributeArgs and GoogleCloudRetailV2betaCustomAttributeOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaCustomAttributeInput` via:
//
//	GoogleCloudRetailV2betaCustomAttributeArgs{...}
type GoogleCloudRetailV2betaCustomAttributeInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaCustomAttributeOutput() GoogleCloudRetailV2betaCustomAttributeOutput
	ToGoogleCloudRetailV2betaCustomAttributeOutputWithContext(context.Context) GoogleCloudRetailV2betaCustomAttributeOutput
}

// A custom attribute that is not explicitly modeled in Product.
type GoogleCloudRetailV2betaCustomAttributeArgs struct {
	// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are indexed, so that they can be filtered, faceted or boosted in SearchService.Search. This field is ignored in a UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and SearchRequest.boost_spec for more details.
	Indexable pulumi.BoolPtrInput `pulumi:"indexable"`
	// The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
	Numbers pulumi.Float64ArrayInput `pulumi:"numbers"`
	// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are searchable by text queries in SearchService.Search. This field is ignored in a UserEvent. Only set if type text is set. Otherwise, a INVALID_ARGUMENT error is returned.
	Searchable pulumi.BoolPtrInput `pulumi:"searchable"`
	// The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
	Text pulumi.StringArrayInput `pulumi:"text"`
}

func (GoogleCloudRetailV2betaCustomAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaCustomAttribute)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaCustomAttributeArgs) ToGoogleCloudRetailV2betaCustomAttributeOutput() GoogleCloudRetailV2betaCustomAttributeOutput {
	return i.ToGoogleCloudRetailV2betaCustomAttributeOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaCustomAttributeArgs) ToGoogleCloudRetailV2betaCustomAttributeOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaCustomAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaCustomAttributeOutput)
}

func (i GoogleCloudRetailV2betaCustomAttributeArgs) ToGoogleCloudRetailV2betaCustomAttributePtrOutput() GoogleCloudRetailV2betaCustomAttributePtrOutput {
	return i.ToGoogleCloudRetailV2betaCustomAttributePtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaCustomAttributeArgs) ToGoogleCloudRetailV2betaCustomAttributePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaCustomAttributePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaCustomAttributeOutput).ToGoogleCloudRetailV2betaCustomAttributePtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaCustomAttributePtrInput is an input type that accepts GoogleCloudRetailV2betaCustomAttributeArgs, GoogleCloudRetailV2betaCustomAttributePtr and GoogleCloudRetailV2betaCustomAttributePtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaCustomAttributePtrInput` via:
//
//	        GoogleCloudRetailV2betaCustomAttributeArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaCustomAttributePtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaCustomAttributePtrOutput() GoogleCloudRetailV2betaCustomAttributePtrOutput
	ToGoogleCloudRetailV2betaCustomAttributePtrOutputWithContext(context.Context) GoogleCloudRetailV2betaCustomAttributePtrOutput
}

type googleCloudRetailV2betaCustomAttributePtrType GoogleCloudRetailV2betaCustomAttributeArgs

func GoogleCloudRetailV2betaCustomAttributePtr(v *GoogleCloudRetailV2betaCustomAttributeArgs) GoogleCloudRetailV2betaCustomAttributePtrInput {
	return (*googleCloudRetailV2betaCustomAttributePtrType)(v)
}

func (*googleCloudRetailV2betaCustomAttributePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaCustomAttribute)(nil)).Elem()
}

func (i *googleCloudRetailV2betaCustomAttributePtrType) ToGoogleCloudRetailV2betaCustomAttributePtrOutput() GoogleCloudRetailV2betaCustomAttributePtrOutput {
	return i.ToGoogleCloudRetailV2betaCustomAttributePtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaCustomAttributePtrType) ToGoogleCloudRetailV2betaCustomAttributePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaCustomAttributePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaCustomAttributePtrOutput)
}

// A custom attribute that is not explicitly modeled in Product.
type GoogleCloudRetailV2betaCustomAttributeOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaCustomAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaCustomAttribute)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaCustomAttributeOutput) ToGoogleCloudRetailV2betaCustomAttributeOutput() GoogleCloudRetailV2betaCustomAttributeOutput {
	return o
}

func (o GoogleCloudRetailV2betaCustomAttributeOutput) ToGoogleCloudRetailV2betaCustomAttributeOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaCustomAttributeOutput {
	return o
}

func (o GoogleCloudRetailV2betaCustomAttributeOutput) ToGoogleCloudRetailV2betaCustomAttributePtrOutput() GoogleCloudRetailV2betaCustomAttributePtrOutput {
	return o.ToGoogleCloudRetailV2betaCustomAttributePtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaCustomAttributeOutput) ToGoogleCloudRetailV2betaCustomAttributePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaCustomAttributePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaCustomAttribute) *GoogleCloudRetailV2betaCustomAttribute {
		return &v
	}).(GoogleCloudRetailV2betaCustomAttributePtrOutput)
}

// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are indexed, so that they can be filtered, faceted or boosted in SearchService.Search. This field is ignored in a UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and SearchRequest.boost_spec for more details.
func (o GoogleCloudRetailV2betaCustomAttributeOutput) Indexable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaCustomAttribute) *bool { return v.Indexable }).(pulumi.BoolPtrOutput)
}

// The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaCustomAttributeOutput) Numbers() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaCustomAttribute) []float64 { return v.Numbers }).(pulumi.Float64ArrayOutput)
}

// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are searchable by text queries in SearchService.Search. This field is ignored in a UserEvent. Only set if type text is set. Otherwise, a INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaCustomAttributeOutput) Searchable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaCustomAttribute) *bool { return v.Searchable }).(pulumi.BoolPtrOutput)
}

// The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaCustomAttributeOutput) Text() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaCustomAttribute) []string { return v.Text }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2betaCustomAttributePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaCustomAttributePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaCustomAttribute)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaCustomAttributePtrOutput) ToGoogleCloudRetailV2betaCustomAttributePtrOutput() GoogleCloudRetailV2betaCustomAttributePtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaCustomAttributePtrOutput) ToGoogleCloudRetailV2betaCustomAttributePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaCustomAttributePtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaCustomAttributePtrOutput) Elem() GoogleCloudRetailV2betaCustomAttributeOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaCustomAttribute) GoogleCloudRetailV2betaCustomAttribute {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaCustomAttribute
		return ret
	}).(GoogleCloudRetailV2betaCustomAttributeOutput)
}

// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are indexed, so that they can be filtered, faceted or boosted in SearchService.Search. This field is ignored in a UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and SearchRequest.boost_spec for more details.
func (o GoogleCloudRetailV2betaCustomAttributePtrOutput) Indexable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaCustomAttribute) *bool {
		if v == nil {
			return nil
		}
		return v.Indexable
	}).(pulumi.BoolPtrOutput)
}

// The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaCustomAttributePtrOutput) Numbers() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaCustomAttribute) []float64 {
		if v == nil {
			return nil
		}
		return v.Numbers
	}).(pulumi.Float64ArrayOutput)
}

// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are searchable by text queries in SearchService.Search. This field is ignored in a UserEvent. Only set if type text is set. Otherwise, a INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaCustomAttributePtrOutput) Searchable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaCustomAttribute) *bool {
		if v == nil {
			return nil
		}
		return v.Searchable
	}).(pulumi.BoolPtrOutput)
}

// The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaCustomAttributePtrOutput) Text() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaCustomAttribute) []string {
		if v == nil {
			return nil
		}
		return v.Text
	}).(pulumi.StringArrayOutput)
}

// A custom attribute that is not explicitly modeled in Product.
type GoogleCloudRetailV2betaCustomAttributeResponse struct {
	// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are indexed, so that they can be filtered, faceted or boosted in SearchService.Search. This field is ignored in a UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and SearchRequest.boost_spec for more details.
	Indexable bool `pulumi:"indexable"`
	// The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
	Numbers []float64 `pulumi:"numbers"`
	// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are searchable by text queries in SearchService.Search. This field is ignored in a UserEvent. Only set if type text is set. Otherwise, a INVALID_ARGUMENT error is returned.
	Searchable bool `pulumi:"searchable"`
	// The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
	Text []string `pulumi:"text"`
}

// A custom attribute that is not explicitly modeled in Product.
type GoogleCloudRetailV2betaCustomAttributeResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaCustomAttributeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaCustomAttributeResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaCustomAttributeResponseOutput) ToGoogleCloudRetailV2betaCustomAttributeResponseOutput() GoogleCloudRetailV2betaCustomAttributeResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaCustomAttributeResponseOutput) ToGoogleCloudRetailV2betaCustomAttributeResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaCustomAttributeResponseOutput {
	return o
}

// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are indexed, so that they can be filtered, faceted or boosted in SearchService.Search. This field is ignored in a UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and SearchRequest.boost_spec for more details.
func (o GoogleCloudRetailV2betaCustomAttributeResponseOutput) Indexable() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaCustomAttributeResponse) bool { return v.Indexable }).(pulumi.BoolOutput)
}

// The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaCustomAttributeResponseOutput) Numbers() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaCustomAttributeResponse) []float64 { return v.Numbers }).(pulumi.Float64ArrayOutput)
}

// This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are searchable by text queries in SearchService.Search. This field is ignored in a UserEvent. Only set if type text is set. Otherwise, a INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaCustomAttributeResponseOutput) Searchable() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaCustomAttributeResponse) bool { return v.Searchable }).(pulumi.BoolOutput)
}

// The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaCustomAttributeResponseOutput) Text() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaCustomAttributeResponse) []string { return v.Text }).(pulumi.StringArrayOutput)
}

// Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods.
type GoogleCloudRetailV2betaFulfillmentInfo struct {
	// The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2". Otherwise, an INVALID_ARGUMENT error is returned.
	PlaceIds []string `pulumi:"placeIds"`
	// The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.
	Type *string `pulumi:"type"`
}

// GoogleCloudRetailV2betaFulfillmentInfoInput is an input type that accepts GoogleCloudRetailV2betaFulfillmentInfoArgs and GoogleCloudRetailV2betaFulfillmentInfoOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaFulfillmentInfoInput` via:
//
//	GoogleCloudRetailV2betaFulfillmentInfoArgs{...}
type GoogleCloudRetailV2betaFulfillmentInfoInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaFulfillmentInfoOutput() GoogleCloudRetailV2betaFulfillmentInfoOutput
	ToGoogleCloudRetailV2betaFulfillmentInfoOutputWithContext(context.Context) GoogleCloudRetailV2betaFulfillmentInfoOutput
}

// Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods.
type GoogleCloudRetailV2betaFulfillmentInfoArgs struct {
	// The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2". Otherwise, an INVALID_ARGUMENT error is returned.
	PlaceIds pulumi.StringArrayInput `pulumi:"placeIds"`
	// The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GoogleCloudRetailV2betaFulfillmentInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaFulfillmentInfo)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaFulfillmentInfoArgs) ToGoogleCloudRetailV2betaFulfillmentInfoOutput() GoogleCloudRetailV2betaFulfillmentInfoOutput {
	return i.ToGoogleCloudRetailV2betaFulfillmentInfoOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaFulfillmentInfoArgs) ToGoogleCloudRetailV2betaFulfillmentInfoOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaFulfillmentInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaFulfillmentInfoOutput)
}

// GoogleCloudRetailV2betaFulfillmentInfoArrayInput is an input type that accepts GoogleCloudRetailV2betaFulfillmentInfoArray and GoogleCloudRetailV2betaFulfillmentInfoArrayOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaFulfillmentInfoArrayInput` via:
//
//	GoogleCloudRetailV2betaFulfillmentInfoArray{ GoogleCloudRetailV2betaFulfillmentInfoArgs{...} }
type GoogleCloudRetailV2betaFulfillmentInfoArrayInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaFulfillmentInfoArrayOutput() GoogleCloudRetailV2betaFulfillmentInfoArrayOutput
	ToGoogleCloudRetailV2betaFulfillmentInfoArrayOutputWithContext(context.Context) GoogleCloudRetailV2betaFulfillmentInfoArrayOutput
}

type GoogleCloudRetailV2betaFulfillmentInfoArray []GoogleCloudRetailV2betaFulfillmentInfoInput

func (GoogleCloudRetailV2betaFulfillmentInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaFulfillmentInfo)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaFulfillmentInfoArray) ToGoogleCloudRetailV2betaFulfillmentInfoArrayOutput() GoogleCloudRetailV2betaFulfillmentInfoArrayOutput {
	return i.ToGoogleCloudRetailV2betaFulfillmentInfoArrayOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaFulfillmentInfoArray) ToGoogleCloudRetailV2betaFulfillmentInfoArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaFulfillmentInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaFulfillmentInfoArrayOutput)
}

// Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods.
type GoogleCloudRetailV2betaFulfillmentInfoOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaFulfillmentInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaFulfillmentInfo)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaFulfillmentInfoOutput) ToGoogleCloudRetailV2betaFulfillmentInfoOutput() GoogleCloudRetailV2betaFulfillmentInfoOutput {
	return o
}

func (o GoogleCloudRetailV2betaFulfillmentInfoOutput) ToGoogleCloudRetailV2betaFulfillmentInfoOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaFulfillmentInfoOutput {
	return o
}

// The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2". Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaFulfillmentInfoOutput) PlaceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaFulfillmentInfo) []string { return v.PlaceIds }).(pulumi.StringArrayOutput)
}

// The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaFulfillmentInfoOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaFulfillmentInfo) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2betaFulfillmentInfoArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaFulfillmentInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaFulfillmentInfo)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaFulfillmentInfoArrayOutput) ToGoogleCloudRetailV2betaFulfillmentInfoArrayOutput() GoogleCloudRetailV2betaFulfillmentInfoArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaFulfillmentInfoArrayOutput) ToGoogleCloudRetailV2betaFulfillmentInfoArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaFulfillmentInfoArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaFulfillmentInfoArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaFulfillmentInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaFulfillmentInfo {
		return vs[0].([]GoogleCloudRetailV2betaFulfillmentInfo)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaFulfillmentInfoOutput)
}

// Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods.
type GoogleCloudRetailV2betaFulfillmentInfoResponse struct {
	// The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2". Otherwise, an INVALID_ARGUMENT error is returned.
	PlaceIds []string `pulumi:"placeIds"`
	// The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.
	Type string `pulumi:"type"`
}

// Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods.
type GoogleCloudRetailV2betaFulfillmentInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaFulfillmentInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaFulfillmentInfoResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaFulfillmentInfoResponseOutput) ToGoogleCloudRetailV2betaFulfillmentInfoResponseOutput() GoogleCloudRetailV2betaFulfillmentInfoResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaFulfillmentInfoResponseOutput) ToGoogleCloudRetailV2betaFulfillmentInfoResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaFulfillmentInfoResponseOutput {
	return o
}

// The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2". Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaFulfillmentInfoResponseOutput) PlaceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaFulfillmentInfoResponse) []string { return v.PlaceIds }).(pulumi.StringArrayOutput)
}

// The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaFulfillmentInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaFulfillmentInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

type GoogleCloudRetailV2betaFulfillmentInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaFulfillmentInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaFulfillmentInfoResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaFulfillmentInfoResponseArrayOutput) ToGoogleCloudRetailV2betaFulfillmentInfoResponseArrayOutput() GoogleCloudRetailV2betaFulfillmentInfoResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaFulfillmentInfoResponseArrayOutput) ToGoogleCloudRetailV2betaFulfillmentInfoResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaFulfillmentInfoResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaFulfillmentInfoResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaFulfillmentInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaFulfillmentInfoResponse {
		return vs[0].([]GoogleCloudRetailV2betaFulfillmentInfoResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaFulfillmentInfoResponseOutput)
}

// Product image. Recommendations AI and Retail Search do not use product images to improve prediction and search results. However, product images can be returned in results, and are shown in prediction or search previews in the console.
type GoogleCloudRetailV2betaImage struct {
	// Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Height *int `pulumi:"height"`
	// URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
	Uri string `pulumi:"uri"`
	// Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Width *int `pulumi:"width"`
}

// GoogleCloudRetailV2betaImageInput is an input type that accepts GoogleCloudRetailV2betaImageArgs and GoogleCloudRetailV2betaImageOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaImageInput` via:
//
//	GoogleCloudRetailV2betaImageArgs{...}
type GoogleCloudRetailV2betaImageInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaImageOutput() GoogleCloudRetailV2betaImageOutput
	ToGoogleCloudRetailV2betaImageOutputWithContext(context.Context) GoogleCloudRetailV2betaImageOutput
}

// Product image. Recommendations AI and Retail Search do not use product images to improve prediction and search results. However, product images can be returned in results, and are shown in prediction or search previews in the console.
type GoogleCloudRetailV2betaImageArgs struct {
	// Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
	Uri pulumi.StringInput `pulumi:"uri"`
	// Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Width pulumi.IntPtrInput `pulumi:"width"`
}

func (GoogleCloudRetailV2betaImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaImage)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaImageArgs) ToGoogleCloudRetailV2betaImageOutput() GoogleCloudRetailV2betaImageOutput {
	return i.ToGoogleCloudRetailV2betaImageOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaImageArgs) ToGoogleCloudRetailV2betaImageOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaImageOutput)
}

// GoogleCloudRetailV2betaImageArrayInput is an input type that accepts GoogleCloudRetailV2betaImageArray and GoogleCloudRetailV2betaImageArrayOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaImageArrayInput` via:
//
//	GoogleCloudRetailV2betaImageArray{ GoogleCloudRetailV2betaImageArgs{...} }
type GoogleCloudRetailV2betaImageArrayInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaImageArrayOutput() GoogleCloudRetailV2betaImageArrayOutput
	ToGoogleCloudRetailV2betaImageArrayOutputWithContext(context.Context) GoogleCloudRetailV2betaImageArrayOutput
}

type GoogleCloudRetailV2betaImageArray []GoogleCloudRetailV2betaImageInput

func (GoogleCloudRetailV2betaImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaImage)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaImageArray) ToGoogleCloudRetailV2betaImageArrayOutput() GoogleCloudRetailV2betaImageArrayOutput {
	return i.ToGoogleCloudRetailV2betaImageArrayOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaImageArray) ToGoogleCloudRetailV2betaImageArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaImageArrayOutput)
}

// Product image. Recommendations AI and Retail Search do not use product images to improve prediction and search results. However, product images can be returned in results, and are shown in prediction or search previews in the console.
type GoogleCloudRetailV2betaImageOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaImage)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaImageOutput) ToGoogleCloudRetailV2betaImageOutput() GoogleCloudRetailV2betaImageOutput {
	return o
}

func (o GoogleCloudRetailV2betaImageOutput) ToGoogleCloudRetailV2betaImageOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaImageOutput {
	return o
}

// Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaImageOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaImage) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
func (o GoogleCloudRetailV2betaImageOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaImage) string { return v.Uri }).(pulumi.StringOutput)
}

// Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaImageOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaImage) *int { return v.Width }).(pulumi.IntPtrOutput)
}

type GoogleCloudRetailV2betaImageArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaImage)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaImageArrayOutput) ToGoogleCloudRetailV2betaImageArrayOutput() GoogleCloudRetailV2betaImageArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaImageArrayOutput) ToGoogleCloudRetailV2betaImageArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaImageArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaImageArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaImage {
		return vs[0].([]GoogleCloudRetailV2betaImage)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaImageOutput)
}

// Product image. Recommendations AI and Retail Search do not use product images to improve prediction and search results. However, product images can be returned in results, and are shown in prediction or search previews in the console.
type GoogleCloudRetailV2betaImageResponse struct {
	// Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Height int `pulumi:"height"`
	// URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
	Uri string `pulumi:"uri"`
	// Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	Width int `pulumi:"width"`
}

// Product image. Recommendations AI and Retail Search do not use product images to improve prediction and search results. However, product images can be returned in results, and are shown in prediction or search previews in the console.
type GoogleCloudRetailV2betaImageResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaImageResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaImageResponseOutput) ToGoogleCloudRetailV2betaImageResponseOutput() GoogleCloudRetailV2betaImageResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaImageResponseOutput) ToGoogleCloudRetailV2betaImageResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaImageResponseOutput {
	return o
}

// Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaImageResponseOutput) Height() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaImageResponse) int { return v.Height }).(pulumi.IntOutput)
}

// URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
func (o GoogleCloudRetailV2betaImageResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaImageResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaImageResponseOutput) Width() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaImageResponse) int { return v.Width }).(pulumi.IntOutput)
}

type GoogleCloudRetailV2betaImageResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaImageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaImageResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaImageResponseArrayOutput) ToGoogleCloudRetailV2betaImageResponseArrayOutput() GoogleCloudRetailV2betaImageResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaImageResponseArrayOutput) ToGoogleCloudRetailV2betaImageResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaImageResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaImageResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaImageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaImageResponse {
		return vs[0].([]GoogleCloudRetailV2betaImageResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaImageResponseOutput)
}

// A floating point interval.
type GoogleCloudRetailV2betaInterval struct {
	// Exclusive upper bound.
	ExclusiveMaximum *float64 `pulumi:"exclusiveMaximum"`
	// Exclusive lower bound.
	ExclusiveMinimum *float64 `pulumi:"exclusiveMinimum"`
	// Inclusive upper bound.
	Maximum *float64 `pulumi:"maximum"`
	// Inclusive lower bound.
	Minimum *float64 `pulumi:"minimum"`
}

// GoogleCloudRetailV2betaIntervalInput is an input type that accepts GoogleCloudRetailV2betaIntervalArgs and GoogleCloudRetailV2betaIntervalOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaIntervalInput` via:
//
//	GoogleCloudRetailV2betaIntervalArgs{...}
type GoogleCloudRetailV2betaIntervalInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaIntervalOutput() GoogleCloudRetailV2betaIntervalOutput
	ToGoogleCloudRetailV2betaIntervalOutputWithContext(context.Context) GoogleCloudRetailV2betaIntervalOutput
}

// A floating point interval.
type GoogleCloudRetailV2betaIntervalArgs struct {
	// Exclusive upper bound.
	ExclusiveMaximum pulumi.Float64PtrInput `pulumi:"exclusiveMaximum"`
	// Exclusive lower bound.
	ExclusiveMinimum pulumi.Float64PtrInput `pulumi:"exclusiveMinimum"`
	// Inclusive upper bound.
	Maximum pulumi.Float64PtrInput `pulumi:"maximum"`
	// Inclusive lower bound.
	Minimum pulumi.Float64PtrInput `pulumi:"minimum"`
}

func (GoogleCloudRetailV2betaIntervalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaInterval)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaIntervalArgs) ToGoogleCloudRetailV2betaIntervalOutput() GoogleCloudRetailV2betaIntervalOutput {
	return i.ToGoogleCloudRetailV2betaIntervalOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaIntervalArgs) ToGoogleCloudRetailV2betaIntervalOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaIntervalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaIntervalOutput)
}

// GoogleCloudRetailV2betaIntervalArrayInput is an input type that accepts GoogleCloudRetailV2betaIntervalArray and GoogleCloudRetailV2betaIntervalArrayOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaIntervalArrayInput` via:
//
//	GoogleCloudRetailV2betaIntervalArray{ GoogleCloudRetailV2betaIntervalArgs{...} }
type GoogleCloudRetailV2betaIntervalArrayInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaIntervalArrayOutput() GoogleCloudRetailV2betaIntervalArrayOutput
	ToGoogleCloudRetailV2betaIntervalArrayOutputWithContext(context.Context) GoogleCloudRetailV2betaIntervalArrayOutput
}

type GoogleCloudRetailV2betaIntervalArray []GoogleCloudRetailV2betaIntervalInput

func (GoogleCloudRetailV2betaIntervalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaInterval)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaIntervalArray) ToGoogleCloudRetailV2betaIntervalArrayOutput() GoogleCloudRetailV2betaIntervalArrayOutput {
	return i.ToGoogleCloudRetailV2betaIntervalArrayOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaIntervalArray) ToGoogleCloudRetailV2betaIntervalArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaIntervalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaIntervalArrayOutput)
}

// A floating point interval.
type GoogleCloudRetailV2betaIntervalOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaInterval)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaIntervalOutput) ToGoogleCloudRetailV2betaIntervalOutput() GoogleCloudRetailV2betaIntervalOutput {
	return o
}

func (o GoogleCloudRetailV2betaIntervalOutput) ToGoogleCloudRetailV2betaIntervalOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaIntervalOutput {
	return o
}

// Exclusive upper bound.
func (o GoogleCloudRetailV2betaIntervalOutput) ExclusiveMaximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaInterval) *float64 { return v.ExclusiveMaximum }).(pulumi.Float64PtrOutput)
}

// Exclusive lower bound.
func (o GoogleCloudRetailV2betaIntervalOutput) ExclusiveMinimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaInterval) *float64 { return v.ExclusiveMinimum }).(pulumi.Float64PtrOutput)
}

// Inclusive upper bound.
func (o GoogleCloudRetailV2betaIntervalOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaInterval) *float64 { return v.Maximum }).(pulumi.Float64PtrOutput)
}

// Inclusive lower bound.
func (o GoogleCloudRetailV2betaIntervalOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaInterval) *float64 { return v.Minimum }).(pulumi.Float64PtrOutput)
}

type GoogleCloudRetailV2betaIntervalArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaIntervalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaInterval)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaIntervalArrayOutput) ToGoogleCloudRetailV2betaIntervalArrayOutput() GoogleCloudRetailV2betaIntervalArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaIntervalArrayOutput) ToGoogleCloudRetailV2betaIntervalArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaIntervalArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaIntervalArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaIntervalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaInterval {
		return vs[0].([]GoogleCloudRetailV2betaInterval)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaIntervalOutput)
}

// A floating point interval.
type GoogleCloudRetailV2betaIntervalResponse struct {
	// Exclusive upper bound.
	ExclusiveMaximum float64 `pulumi:"exclusiveMaximum"`
	// Exclusive lower bound.
	ExclusiveMinimum float64 `pulumi:"exclusiveMinimum"`
	// Inclusive upper bound.
	Maximum float64 `pulumi:"maximum"`
	// Inclusive lower bound.
	Minimum float64 `pulumi:"minimum"`
}

// A floating point interval.
type GoogleCloudRetailV2betaIntervalResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaIntervalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaIntervalResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaIntervalResponseOutput) ToGoogleCloudRetailV2betaIntervalResponseOutput() GoogleCloudRetailV2betaIntervalResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaIntervalResponseOutput) ToGoogleCloudRetailV2betaIntervalResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaIntervalResponseOutput {
	return o
}

// Exclusive upper bound.
func (o GoogleCloudRetailV2betaIntervalResponseOutput) ExclusiveMaximum() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2betaIntervalResponse) float64 { return v.ExclusiveMaximum }).(pulumi.Float64Output)
}

// Exclusive lower bound.
func (o GoogleCloudRetailV2betaIntervalResponseOutput) ExclusiveMinimum() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2betaIntervalResponse) float64 { return v.ExclusiveMinimum }).(pulumi.Float64Output)
}

// Inclusive upper bound.
func (o GoogleCloudRetailV2betaIntervalResponseOutput) Maximum() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2betaIntervalResponse) float64 { return v.Maximum }).(pulumi.Float64Output)
}

// Inclusive lower bound.
func (o GoogleCloudRetailV2betaIntervalResponseOutput) Minimum() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2betaIntervalResponse) float64 { return v.Minimum }).(pulumi.Float64Output)
}

type GoogleCloudRetailV2betaIntervalResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaIntervalResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaIntervalResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaIntervalResponseArrayOutput) ToGoogleCloudRetailV2betaIntervalResponseArrayOutput() GoogleCloudRetailV2betaIntervalResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaIntervalResponseArrayOutput) ToGoogleCloudRetailV2betaIntervalResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaIntervalResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaIntervalResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaIntervalResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaIntervalResponse {
		return vs[0].([]GoogleCloudRetailV2betaIntervalResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaIntervalResponseOutput)
}

// The inventory information at a place (e.g. a store) identified by a place ID.
type GoogleCloudRetailV2betaLocalInventoryResponse struct {
	// Additional local inventory attributes, for example, store name, promotion tags, etc. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * At most 30 attributes are allowed. * The key must be a UTF-8 encoded string with a length limit of 32 characters. * The key must match the pattern: `a-zA-Z0-9*`. For example, key0LikeThis or KEY_1_LIKE_THIS. * The attribute values must be of the same type (text or number). * Only 1 value is allowed for each attribute. * For text values, the length limit is 256 UTF-8 characters. * The attribute does not support search. The `searchable` field should be unset or set to false. * The max summed total bytes of custom attribute keys and values per product is 5MiB.
	Attributes GoogleCloudRetailV2betaCustomAttributeResponse `pulumi:"attributes"`
	// Input only. Supported fulfillment types. Valid fulfillment type values include commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. All the elements must be distinct. Otherwise, an INVALID_ARGUMENT error is returned.
	FulfillmentTypes []string `pulumi:"fulfillmentTypes"`
	// The place ID for the current set of inventory information.
	PlaceId string `pulumi:"placeId"`
	// Product price and cost information. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).
	PriceInfo GoogleCloudRetailV2betaPriceInfoResponse `pulumi:"priceInfo"`
}

// The inventory information at a place (e.g. a store) identified by a place ID.
type GoogleCloudRetailV2betaLocalInventoryResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaLocalInventoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaLocalInventoryResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaLocalInventoryResponseOutput) ToGoogleCloudRetailV2betaLocalInventoryResponseOutput() GoogleCloudRetailV2betaLocalInventoryResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaLocalInventoryResponseOutput) ToGoogleCloudRetailV2betaLocalInventoryResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaLocalInventoryResponseOutput {
	return o
}

// Additional local inventory attributes, for example, store name, promotion tags, etc. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * At most 30 attributes are allowed. * The key must be a UTF-8 encoded string with a length limit of 32 characters. * The key must match the pattern: `a-zA-Z0-9*`. For example, key0LikeThis or KEY_1_LIKE_THIS. * The attribute values must be of the same type (text or number). * Only 1 value is allowed for each attribute. * For text values, the length limit is 256 UTF-8 characters. * The attribute does not support search. The `searchable` field should be unset or set to false. * The max summed total bytes of custom attribute keys and values per product is 5MiB.
func (o GoogleCloudRetailV2betaLocalInventoryResponseOutput) Attributes() GoogleCloudRetailV2betaCustomAttributeResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaLocalInventoryResponse) GoogleCloudRetailV2betaCustomAttributeResponse {
		return v.Attributes
	}).(GoogleCloudRetailV2betaCustomAttributeResponseOutput)
}

// Input only. Supported fulfillment types. Valid fulfillment type values include commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. All the elements must be distinct. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaLocalInventoryResponseOutput) FulfillmentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaLocalInventoryResponse) []string { return v.FulfillmentTypes }).(pulumi.StringArrayOutput)
}

// The place ID for the current set of inventory information.
func (o GoogleCloudRetailV2betaLocalInventoryResponseOutput) PlaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaLocalInventoryResponse) string { return v.PlaceId }).(pulumi.StringOutput)
}

// Product price and cost information. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).
func (o GoogleCloudRetailV2betaLocalInventoryResponseOutput) PriceInfo() GoogleCloudRetailV2betaPriceInfoResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaLocalInventoryResponse) GoogleCloudRetailV2betaPriceInfoResponse {
		return v.PriceInfo
	}).(GoogleCloudRetailV2betaPriceInfoResponseOutput)
}

type GoogleCloudRetailV2betaLocalInventoryResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaLocalInventoryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaLocalInventoryResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaLocalInventoryResponseArrayOutput) ToGoogleCloudRetailV2betaLocalInventoryResponseArrayOutput() GoogleCloudRetailV2betaLocalInventoryResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaLocalInventoryResponseArrayOutput) ToGoogleCloudRetailV2betaLocalInventoryResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaLocalInventoryResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaLocalInventoryResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaLocalInventoryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaLocalInventoryResponse {
		return vs[0].([]GoogleCloudRetailV2betaLocalInventoryResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaLocalInventoryResponseOutput)
}

// Additional configs for the frequently-bought-together model type.
type GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig struct {
	// Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the `frequently-bought-together` type. If it isn't specified, it defaults to MULTIPLE_CONTEXT_PRODUCTS.
	ContextProductsType *GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigContextProductsType `pulumi:"contextProductsType"`
}

// GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigInput is an input type that accepts GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigArgs and GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigInput` via:
//
//	GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigArgs{...}
type GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput
	ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutputWithContext(context.Context) GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput
}

// Additional configs for the frequently-bought-together model type.
type GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigArgs struct {
	// Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the `frequently-bought-together` type. If it isn't specified, it defaults to MULTIPLE_CONTEXT_PRODUCTS.
	ContextProductsType GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigContextProductsTypePtrInput `pulumi:"contextProductsType"`
}

func (GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigArgs) ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput {
	return i.ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigArgs) ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput)
}

func (i GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigArgs) ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return i.ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigArgs) ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput).ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrInput is an input type that accepts GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigArgs, GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtr and GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrInput` via:
//
//	        GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput
	ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput
}

type googleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrType GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigArgs

func GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtr(v *GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigArgs) GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrInput {
	return (*googleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrType)(v)
}

func (*googleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig)(nil)).Elem()
}

func (i *googleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrType) ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return i.ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrType) ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput)
}

// Additional configs for the frequently-bought-together model type.
type GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput) ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput {
	return o
}

func (o GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput) ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput {
	return o
}

func (o GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput) ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return o.ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput) ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig) *GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig {
		return &v
	}).(GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput)
}

// Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the `frequently-bought-together` type. If it isn't specified, it defaults to MULTIPLE_CONTEXT_PRODUCTS.
func (o GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput) ContextProductsType() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigContextProductsTypePtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig) *GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigContextProductsType {
		return v.ContextProductsType
	}).(GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigContextProductsTypePtrOutput)
}

type GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput) ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput) ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput) Elem() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig) GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig
		return ret
	}).(GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput)
}

// Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the `frequently-bought-together` type. If it isn't specified, it defaults to MULTIPLE_CONTEXT_PRODUCTS.
func (o GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput) ContextProductsType() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigContextProductsTypePtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig) *GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigContextProductsType {
		if v == nil {
			return nil
		}
		return v.ContextProductsType
	}).(GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigContextProductsTypePtrOutput)
}

// Additional configs for the frequently-bought-together model type.
type GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponse struct {
	// Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the `frequently-bought-together` type. If it isn't specified, it defaults to MULTIPLE_CONTEXT_PRODUCTS.
	ContextProductsType string `pulumi:"contextProductsType"`
}

// Additional configs for the frequently-bought-together model type.
type GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput) ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput) ToGoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput {
	return o
}

// Optional. Specifies the context of the model when it is used in predict requests. Can only be set for the `frequently-bought-together` type. If it isn't specified, it defaults to MULTIPLE_CONTEXT_PRODUCTS.
func (o GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput) ContextProductsType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponse) string {
		return v.ContextProductsType
	}).(pulumi.StringOutput)
}

// Additional model features config.
type GoogleCloudRetailV2betaModelModelFeaturesConfig struct {
	// Additional configs for frequently-bought-together models.
	FrequentlyBoughtTogetherConfig *GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig `pulumi:"frequentlyBoughtTogetherConfig"`
}

// GoogleCloudRetailV2betaModelModelFeaturesConfigInput is an input type that accepts GoogleCloudRetailV2betaModelModelFeaturesConfigArgs and GoogleCloudRetailV2betaModelModelFeaturesConfigOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaModelModelFeaturesConfigInput` via:
//
//	GoogleCloudRetailV2betaModelModelFeaturesConfigArgs{...}
type GoogleCloudRetailV2betaModelModelFeaturesConfigInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaModelModelFeaturesConfigOutput() GoogleCloudRetailV2betaModelModelFeaturesConfigOutput
	ToGoogleCloudRetailV2betaModelModelFeaturesConfigOutputWithContext(context.Context) GoogleCloudRetailV2betaModelModelFeaturesConfigOutput
}

// Additional model features config.
type GoogleCloudRetailV2betaModelModelFeaturesConfigArgs struct {
	// Additional configs for frequently-bought-together models.
	FrequentlyBoughtTogetherConfig GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrInput `pulumi:"frequentlyBoughtTogetherConfig"`
}

func (GoogleCloudRetailV2betaModelModelFeaturesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaModelModelFeaturesConfig)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaModelModelFeaturesConfigArgs) ToGoogleCloudRetailV2betaModelModelFeaturesConfigOutput() GoogleCloudRetailV2betaModelModelFeaturesConfigOutput {
	return i.ToGoogleCloudRetailV2betaModelModelFeaturesConfigOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaModelModelFeaturesConfigArgs) ToGoogleCloudRetailV2betaModelModelFeaturesConfigOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelModelFeaturesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaModelModelFeaturesConfigOutput)
}

func (i GoogleCloudRetailV2betaModelModelFeaturesConfigArgs) ToGoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput() GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput {
	return i.ToGoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaModelModelFeaturesConfigArgs) ToGoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaModelModelFeaturesConfigOutput).ToGoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaModelModelFeaturesConfigPtrInput is an input type that accepts GoogleCloudRetailV2betaModelModelFeaturesConfigArgs, GoogleCloudRetailV2betaModelModelFeaturesConfigPtr and GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaModelModelFeaturesConfigPtrInput` via:
//
//	        GoogleCloudRetailV2betaModelModelFeaturesConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaModelModelFeaturesConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput() GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput
	ToGoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput
}

type googleCloudRetailV2betaModelModelFeaturesConfigPtrType GoogleCloudRetailV2betaModelModelFeaturesConfigArgs

func GoogleCloudRetailV2betaModelModelFeaturesConfigPtr(v *GoogleCloudRetailV2betaModelModelFeaturesConfigArgs) GoogleCloudRetailV2betaModelModelFeaturesConfigPtrInput {
	return (*googleCloudRetailV2betaModelModelFeaturesConfigPtrType)(v)
}

func (*googleCloudRetailV2betaModelModelFeaturesConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaModelModelFeaturesConfig)(nil)).Elem()
}

func (i *googleCloudRetailV2betaModelModelFeaturesConfigPtrType) ToGoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput() GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput {
	return i.ToGoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaModelModelFeaturesConfigPtrType) ToGoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput)
}

// Additional model features config.
type GoogleCloudRetailV2betaModelModelFeaturesConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaModelModelFeaturesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaModelModelFeaturesConfig)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaModelModelFeaturesConfigOutput) ToGoogleCloudRetailV2betaModelModelFeaturesConfigOutput() GoogleCloudRetailV2betaModelModelFeaturesConfigOutput {
	return o
}

func (o GoogleCloudRetailV2betaModelModelFeaturesConfigOutput) ToGoogleCloudRetailV2betaModelModelFeaturesConfigOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelModelFeaturesConfigOutput {
	return o
}

func (o GoogleCloudRetailV2betaModelModelFeaturesConfigOutput) ToGoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput() GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput {
	return o.ToGoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaModelModelFeaturesConfigOutput) ToGoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaModelModelFeaturesConfig) *GoogleCloudRetailV2betaModelModelFeaturesConfig {
		return &v
	}).(GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput)
}

// Additional configs for frequently-bought-together models.
func (o GoogleCloudRetailV2betaModelModelFeaturesConfigOutput) FrequentlyBoughtTogetherConfig() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaModelModelFeaturesConfig) *GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig {
		return v.FrequentlyBoughtTogetherConfig
	}).(GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput)
}

type GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaModelModelFeaturesConfig)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput) ToGoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput() GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput) ToGoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput) Elem() GoogleCloudRetailV2betaModelModelFeaturesConfigOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaModelModelFeaturesConfig) GoogleCloudRetailV2betaModelModelFeaturesConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaModelModelFeaturesConfig
		return ret
	}).(GoogleCloudRetailV2betaModelModelFeaturesConfigOutput)
}

// Additional configs for frequently-bought-together models.
func (o GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput) FrequentlyBoughtTogetherConfig() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaModelModelFeaturesConfig) *GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfig {
		if v == nil {
			return nil
		}
		return v.FrequentlyBoughtTogetherConfig
	}).(GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput)
}

// Additional model features config.
type GoogleCloudRetailV2betaModelModelFeaturesConfigResponse struct {
	// Additional configs for frequently-bought-together models.
	FrequentlyBoughtTogetherConfig GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponse `pulumi:"frequentlyBoughtTogetherConfig"`
}

// Additional model features config.
type GoogleCloudRetailV2betaModelModelFeaturesConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaModelModelFeaturesConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaModelModelFeaturesConfigResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaModelModelFeaturesConfigResponseOutput) ToGoogleCloudRetailV2betaModelModelFeaturesConfigResponseOutput() GoogleCloudRetailV2betaModelModelFeaturesConfigResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaModelModelFeaturesConfigResponseOutput) ToGoogleCloudRetailV2betaModelModelFeaturesConfigResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelModelFeaturesConfigResponseOutput {
	return o
}

// Additional configs for frequently-bought-together models.
func (o GoogleCloudRetailV2betaModelModelFeaturesConfigResponseOutput) FrequentlyBoughtTogetherConfig() GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaModelModelFeaturesConfigResponse) GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponse {
		return v.FrequentlyBoughtTogetherConfig
	}).(GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput)
}

// Represents an ordered combination of valid serving configs, which can be used for `PAGE_OPTIMIZATION` recommendations.
type GoogleCloudRetailV2betaModelServingConfigListResponse struct {
	// Optional. A set of valid serving configs that may be used for `PAGE_OPTIMIZATION`.
	ServingConfigIds []string `pulumi:"servingConfigIds"`
}

// Represents an ordered combination of valid serving configs, which can be used for `PAGE_OPTIMIZATION` recommendations.
type GoogleCloudRetailV2betaModelServingConfigListResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaModelServingConfigListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaModelServingConfigListResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaModelServingConfigListResponseOutput) ToGoogleCloudRetailV2betaModelServingConfigListResponseOutput() GoogleCloudRetailV2betaModelServingConfigListResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaModelServingConfigListResponseOutput) ToGoogleCloudRetailV2betaModelServingConfigListResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelServingConfigListResponseOutput {
	return o
}

// Optional. A set of valid serving configs that may be used for `PAGE_OPTIMIZATION`.
func (o GoogleCloudRetailV2betaModelServingConfigListResponseOutput) ServingConfigIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaModelServingConfigListResponse) []string { return v.ServingConfigIds }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2betaModelServingConfigListResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaModelServingConfigListResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaModelServingConfigListResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaModelServingConfigListResponseArrayOutput) ToGoogleCloudRetailV2betaModelServingConfigListResponseArrayOutput() GoogleCloudRetailV2betaModelServingConfigListResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaModelServingConfigListResponseArrayOutput) ToGoogleCloudRetailV2betaModelServingConfigListResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaModelServingConfigListResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaModelServingConfigListResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaModelServingConfigListResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaModelServingConfigListResponse {
		return vs[0].([]GoogleCloudRetailV2betaModelServingConfigListResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaModelServingConfigListResponseOutput)
}

// The price information of a Product.
type GoogleCloudRetailV2betaPriceInfo struct {
	// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
	Cost *float64 `pulumi:"cost"`
	// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.
	CurrencyCode *string `pulumi:"currencyCode"`
	// Price of the product without any discount. If zero, by default set to be the price. If set, original_price should be greater than or equal to price, otherwise an INVALID_ARGUMENT error is thrown.
	OriginalPrice *float64 `pulumi:"originalPrice"`
	// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).
	Price *float64 `pulumi:"price"`
	// The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.
	PriceEffectiveTime *string `pulumi:"priceEffectiveTime"`
	// The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.
	PriceExpireTime *string `pulumi:"priceExpireTime"`
}

// GoogleCloudRetailV2betaPriceInfoInput is an input type that accepts GoogleCloudRetailV2betaPriceInfoArgs and GoogleCloudRetailV2betaPriceInfoOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaPriceInfoInput` via:
//
//	GoogleCloudRetailV2betaPriceInfoArgs{...}
type GoogleCloudRetailV2betaPriceInfoInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaPriceInfoOutput() GoogleCloudRetailV2betaPriceInfoOutput
	ToGoogleCloudRetailV2betaPriceInfoOutputWithContext(context.Context) GoogleCloudRetailV2betaPriceInfoOutput
}

// The price information of a Product.
type GoogleCloudRetailV2betaPriceInfoArgs struct {
	// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
	Cost pulumi.Float64PtrInput `pulumi:"cost"`
	// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.
	CurrencyCode pulumi.StringPtrInput `pulumi:"currencyCode"`
	// Price of the product without any discount. If zero, by default set to be the price. If set, original_price should be greater than or equal to price, otherwise an INVALID_ARGUMENT error is thrown.
	OriginalPrice pulumi.Float64PtrInput `pulumi:"originalPrice"`
	// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).
	Price pulumi.Float64PtrInput `pulumi:"price"`
	// The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.
	PriceEffectiveTime pulumi.StringPtrInput `pulumi:"priceEffectiveTime"`
	// The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.
	PriceExpireTime pulumi.StringPtrInput `pulumi:"priceExpireTime"`
}

func (GoogleCloudRetailV2betaPriceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaPriceInfo)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaPriceInfoArgs) ToGoogleCloudRetailV2betaPriceInfoOutput() GoogleCloudRetailV2betaPriceInfoOutput {
	return i.ToGoogleCloudRetailV2betaPriceInfoOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaPriceInfoArgs) ToGoogleCloudRetailV2betaPriceInfoOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaPriceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaPriceInfoOutput)
}

func (i GoogleCloudRetailV2betaPriceInfoArgs) ToGoogleCloudRetailV2betaPriceInfoPtrOutput() GoogleCloudRetailV2betaPriceInfoPtrOutput {
	return i.ToGoogleCloudRetailV2betaPriceInfoPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaPriceInfoArgs) ToGoogleCloudRetailV2betaPriceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaPriceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaPriceInfoOutput).ToGoogleCloudRetailV2betaPriceInfoPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaPriceInfoPtrInput is an input type that accepts GoogleCloudRetailV2betaPriceInfoArgs, GoogleCloudRetailV2betaPriceInfoPtr and GoogleCloudRetailV2betaPriceInfoPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaPriceInfoPtrInput` via:
//
//	        GoogleCloudRetailV2betaPriceInfoArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaPriceInfoPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaPriceInfoPtrOutput() GoogleCloudRetailV2betaPriceInfoPtrOutput
	ToGoogleCloudRetailV2betaPriceInfoPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaPriceInfoPtrOutput
}

type googleCloudRetailV2betaPriceInfoPtrType GoogleCloudRetailV2betaPriceInfoArgs

func GoogleCloudRetailV2betaPriceInfoPtr(v *GoogleCloudRetailV2betaPriceInfoArgs) GoogleCloudRetailV2betaPriceInfoPtrInput {
	return (*googleCloudRetailV2betaPriceInfoPtrType)(v)
}

func (*googleCloudRetailV2betaPriceInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaPriceInfo)(nil)).Elem()
}

func (i *googleCloudRetailV2betaPriceInfoPtrType) ToGoogleCloudRetailV2betaPriceInfoPtrOutput() GoogleCloudRetailV2betaPriceInfoPtrOutput {
	return i.ToGoogleCloudRetailV2betaPriceInfoPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaPriceInfoPtrType) ToGoogleCloudRetailV2betaPriceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaPriceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaPriceInfoPtrOutput)
}

// The price information of a Product.
type GoogleCloudRetailV2betaPriceInfoOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaPriceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaPriceInfo)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaPriceInfoOutput) ToGoogleCloudRetailV2betaPriceInfoOutput() GoogleCloudRetailV2betaPriceInfoOutput {
	return o
}

func (o GoogleCloudRetailV2betaPriceInfoOutput) ToGoogleCloudRetailV2betaPriceInfoOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaPriceInfoOutput {
	return o
}

func (o GoogleCloudRetailV2betaPriceInfoOutput) ToGoogleCloudRetailV2betaPriceInfoPtrOutput() GoogleCloudRetailV2betaPriceInfoPtrOutput {
	return o.ToGoogleCloudRetailV2betaPriceInfoPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaPriceInfoOutput) ToGoogleCloudRetailV2betaPriceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaPriceInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaPriceInfo) *GoogleCloudRetailV2betaPriceInfo {
		return &v
	}).(GoogleCloudRetailV2betaPriceInfoPtrOutput)
}

// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
func (o GoogleCloudRetailV2betaPriceInfoOutput) Cost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfo) *float64 { return v.Cost }).(pulumi.Float64PtrOutput)
}

// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.
func (o GoogleCloudRetailV2betaPriceInfoOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfo) *string { return v.CurrencyCode }).(pulumi.StringPtrOutput)
}

// Price of the product without any discount. If zero, by default set to be the price. If set, original_price should be greater than or equal to price, otherwise an INVALID_ARGUMENT error is thrown.
func (o GoogleCloudRetailV2betaPriceInfoOutput) OriginalPrice() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfo) *float64 { return v.OriginalPrice }).(pulumi.Float64PtrOutput)
}

// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).
func (o GoogleCloudRetailV2betaPriceInfoOutput) Price() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfo) *float64 { return v.Price }).(pulumi.Float64PtrOutput)
}

// The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.
func (o GoogleCloudRetailV2betaPriceInfoOutput) PriceEffectiveTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfo) *string { return v.PriceEffectiveTime }).(pulumi.StringPtrOutput)
}

// The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.
func (o GoogleCloudRetailV2betaPriceInfoOutput) PriceExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfo) *string { return v.PriceExpireTime }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2betaPriceInfoPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaPriceInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaPriceInfo)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaPriceInfoPtrOutput) ToGoogleCloudRetailV2betaPriceInfoPtrOutput() GoogleCloudRetailV2betaPriceInfoPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaPriceInfoPtrOutput) ToGoogleCloudRetailV2betaPriceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaPriceInfoPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaPriceInfoPtrOutput) Elem() GoogleCloudRetailV2betaPriceInfoOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaPriceInfo) GoogleCloudRetailV2betaPriceInfo {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaPriceInfo
		return ret
	}).(GoogleCloudRetailV2betaPriceInfoOutput)
}

// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
func (o GoogleCloudRetailV2betaPriceInfoPtrOutput) Cost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaPriceInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.Cost
	}).(pulumi.Float64PtrOutput)
}

// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.
func (o GoogleCloudRetailV2betaPriceInfoPtrOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaPriceInfo) *string {
		if v == nil {
			return nil
		}
		return v.CurrencyCode
	}).(pulumi.StringPtrOutput)
}

// Price of the product without any discount. If zero, by default set to be the price. If set, original_price should be greater than or equal to price, otherwise an INVALID_ARGUMENT error is thrown.
func (o GoogleCloudRetailV2betaPriceInfoPtrOutput) OriginalPrice() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaPriceInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.OriginalPrice
	}).(pulumi.Float64PtrOutput)
}

// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).
func (o GoogleCloudRetailV2betaPriceInfoPtrOutput) Price() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaPriceInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.Price
	}).(pulumi.Float64PtrOutput)
}

// The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.
func (o GoogleCloudRetailV2betaPriceInfoPtrOutput) PriceEffectiveTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaPriceInfo) *string {
		if v == nil {
			return nil
		}
		return v.PriceEffectiveTime
	}).(pulumi.StringPtrOutput)
}

// The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.
func (o GoogleCloudRetailV2betaPriceInfoPtrOutput) PriceExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaPriceInfo) *string {
		if v == nil {
			return nil
		}
		return v.PriceExpireTime
	}).(pulumi.StringPtrOutput)
}

// The price range of all variant Product having the same Product.primary_product_id.
type GoogleCloudRetailV2betaPriceInfoPriceRangeResponse struct {
	// The inclusive Product.pricing_info.original_price internal of all variant Product having the same Product.primary_product_id.
	OriginalPrice GoogleCloudRetailV2betaIntervalResponse `pulumi:"originalPrice"`
	// The inclusive Product.pricing_info.price interval of all variant Product having the same Product.primary_product_id.
	Price GoogleCloudRetailV2betaIntervalResponse `pulumi:"price"`
}

// The price range of all variant Product having the same Product.primary_product_id.
type GoogleCloudRetailV2betaPriceInfoPriceRangeResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaPriceInfoPriceRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaPriceInfoPriceRangeResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaPriceInfoPriceRangeResponseOutput) ToGoogleCloudRetailV2betaPriceInfoPriceRangeResponseOutput() GoogleCloudRetailV2betaPriceInfoPriceRangeResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaPriceInfoPriceRangeResponseOutput) ToGoogleCloudRetailV2betaPriceInfoPriceRangeResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaPriceInfoPriceRangeResponseOutput {
	return o
}

// The inclusive Product.pricing_info.original_price internal of all variant Product having the same Product.primary_product_id.
func (o GoogleCloudRetailV2betaPriceInfoPriceRangeResponseOutput) OriginalPrice() GoogleCloudRetailV2betaIntervalResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfoPriceRangeResponse) GoogleCloudRetailV2betaIntervalResponse {
		return v.OriginalPrice
	}).(GoogleCloudRetailV2betaIntervalResponseOutput)
}

// The inclusive Product.pricing_info.price interval of all variant Product having the same Product.primary_product_id.
func (o GoogleCloudRetailV2betaPriceInfoPriceRangeResponseOutput) Price() GoogleCloudRetailV2betaIntervalResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfoPriceRangeResponse) GoogleCloudRetailV2betaIntervalResponse {
		return v.Price
	}).(GoogleCloudRetailV2betaIntervalResponseOutput)
}

// The price information of a Product.
type GoogleCloudRetailV2betaPriceInfoResponse struct {
	// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
	Cost float64 `pulumi:"cost"`
	// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.
	CurrencyCode string `pulumi:"currencyCode"`
	// Price of the product without any discount. If zero, by default set to be the price. If set, original_price should be greater than or equal to price, otherwise an INVALID_ARGUMENT error is thrown.
	OriginalPrice float64 `pulumi:"originalPrice"`
	// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).
	Price float64 `pulumi:"price"`
	// The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.
	PriceEffectiveTime string `pulumi:"priceEffectiveTime"`
	// The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.
	PriceExpireTime string `pulumi:"priceExpireTime"`
	// The price range of all the child Product.Type.VARIANT Products grouped together on the Product.Type.PRIMARY Product. Only populated for Product.Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.
	PriceRange GoogleCloudRetailV2betaPriceInfoPriceRangeResponse `pulumi:"priceRange"`
}

// The price information of a Product.
type GoogleCloudRetailV2betaPriceInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaPriceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaPriceInfoResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaPriceInfoResponseOutput) ToGoogleCloudRetailV2betaPriceInfoResponseOutput() GoogleCloudRetailV2betaPriceInfoResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaPriceInfoResponseOutput) ToGoogleCloudRetailV2betaPriceInfoResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaPriceInfoResponseOutput {
	return o
}

// The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
func (o GoogleCloudRetailV2betaPriceInfoResponseOutput) Cost() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfoResponse) float64 { return v.Cost }).(pulumi.Float64Output)
}

// The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.
func (o GoogleCloudRetailV2betaPriceInfoResponseOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfoResponse) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

// Price of the product without any discount. If zero, by default set to be the price. If set, original_price should be greater than or equal to price, otherwise an INVALID_ARGUMENT error is thrown.
func (o GoogleCloudRetailV2betaPriceInfoResponseOutput) OriginalPrice() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfoResponse) float64 { return v.OriginalPrice }).(pulumi.Float64Output)
}

// Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).
func (o GoogleCloudRetailV2betaPriceInfoResponseOutput) Price() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfoResponse) float64 { return v.Price }).(pulumi.Float64Output)
}

// The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.
func (o GoogleCloudRetailV2betaPriceInfoResponseOutput) PriceEffectiveTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfoResponse) string { return v.PriceEffectiveTime }).(pulumi.StringOutput)
}

// The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.
func (o GoogleCloudRetailV2betaPriceInfoResponseOutput) PriceExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfoResponse) string { return v.PriceExpireTime }).(pulumi.StringOutput)
}

// The price range of all the child Product.Type.VARIANT Products grouped together on the Product.Type.PRIMARY Product. Only populated for Product.Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.
func (o GoogleCloudRetailV2betaPriceInfoResponseOutput) PriceRange() GoogleCloudRetailV2betaPriceInfoPriceRangeResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPriceInfoResponse) GoogleCloudRetailV2betaPriceInfoPriceRangeResponse {
		return v.PriceRange
	}).(GoogleCloudRetailV2betaPriceInfoPriceRangeResponseOutput)
}

// Product captures all metadata information of items to be recommended or searched.
type GoogleCloudRetailV2betaProductResponse struct {
	// Highly encouraged. Extra product attributes to be included. For example, for products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the attributes here. Features that can take on one of a limited number of possible values. Two types of features can be set are: Textual features. some examples would be the brand/maker of a product, or country of a customer. Numerical features. Some examples would be the height/weight of a product, or age of a customer. For example: `{ "vendor": {"text": ["vendor123", "vendor456"]}, "lengths_cm": {"numbers":[2.3, 15.4]}, "heights_cm": {"numbers":[8.1, 6.4]} }`. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * Max entries count: 200. * The key must be a UTF-8 encoded string with a length limit of 128 characters. * For indexable attribute, the key must match the pattern: `a-zA-Z0-9*`. For example, `key0LikeThis` or `KEY_1_LIKE_THIS`. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a non-empty UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed.
	Attributes GoogleCloudRetailV2betaCustomAttributeResponse `pulumi:"attributes"`
	// The target group associated with a given audience (e.g. male, veterans, car owners, musicians, etc.) of the product.
	Audience GoogleCloudRetailV2betaAudienceResponse `pulumi:"audience"`
	// The online availability of the Product. Default to Availability.IN_STOCK. Corresponding properties: Google Merchant Center property [availability](https://support.google.com/merchants/answer/6324448). Schema.org property [Offer.availability](https://schema.org/availability).
	Availability string `pulumi:"availability"`
	// The available quantity of the item.
	AvailableQuantity int `pulumi:"availableQuantity"`
	// The timestamp when this Product becomes available for SearchService.Search. Note that this is only applicable to Type.PRIMARY and Type.COLLECTION, and ignored for Type.VARIANT.
	AvailableTime string `pulumi:"availableTime"`
	// The brands of the product. A maximum of 30 brands are allowed unless overridden through the Google Cloud console. Each brand must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [brand](https://support.google.com/merchants/answer/6324351). Schema.org property [Product.brand](https://schema.org/brand).
	Brands []string `pulumi:"brands"`
	// Product categories. This field is repeated for supporting one product belonging to several parallel categories. Strongly recommended using the full path for better search / recommendation quality. To represent full path of category, use '>' sign to separate different hierarchies. If '>' is part of the category name, replace it with other character(s). For example, if a shoes product belongs to both ["Shoes & Accessories" -> "Shoes"] and ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it could be represented as: "categories": [ "Shoes & Accessories > Shoes", "Sports & Fitness > Athletic Clothing > Shoes" ] Must be set for Type.PRIMARY Product otherwise an INVALID_ARGUMENT error is returned. At most 250 values are allowed per Product unless overridden via pantheon UI. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property google_product_category. Schema.org property [Product.category] (https://schema.org/category). [mc_google_product_category]: https://support.google.com/merchants/answer/6324436
	Categories []string `pulumi:"categories"`
	// The id of the collection members when type is Type.COLLECTION. Non-existent product ids are allowed. The type of the members must be either Type.PRIMARY or Type.VARIANT otherwise an INVALID_ARGUMENT error is thrown. Should not set it for other types. A maximum of 1000 values are allowed. Otherwise, an INVALID_ARGUMENT error is return.
	CollectionMemberIds []string `pulumi:"collectionMemberIds"`
	// The color of the product. Corresponding properties: Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
	ColorInfo GoogleCloudRetailV2betaColorInfoResponse `pulumi:"colorInfo"`
	// The condition of the product. Strongly encouraged to use the standard values: "new", "refurbished", "used". A maximum of 1 value is allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [condition](https://support.google.com/merchants/answer/6324469). Schema.org property [Offer.itemCondition](https://schema.org/itemCondition).
	Conditions []string `pulumi:"conditions"`
	// Product description. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [description](https://support.google.com/merchants/answer/6324468). Schema.org property [Product.description](https://schema.org/description).
	Description string `pulumi:"description"`
	// Note that this field is applied in the following ways: * If the Product is already expired when it is uploaded, this product is not indexed for search. * If the Product is not expired when it is uploaded, only the Type.PRIMARY's and Type.COLLECTION's expireTime is respected, and Type.VARIANT's expireTime is not used. In general, we suggest the users to delete the stale products explicitly, instead of using this field to determine staleness. expire_time must be later than available_time and publish_time, otherwise an INVALID_ARGUMENT error is thrown. Corresponding properties: Google Merchant Center property [expiration_date](https://support.google.com/merchants/answer/6324499).
	ExpireTime string `pulumi:"expireTime"`
	// Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods. All the elements must have distinct FulfillmentInfo.type. Otherwise, an INVALID_ARGUMENT error is returned.
	FulfillmentInfo []GoogleCloudRetailV2betaFulfillmentInfoResponse `pulumi:"fulfillmentInfo"`
	// The Global Trade Item Number (GTIN) of the product. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. This field must be a Unigram. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [gtin](https://support.google.com/merchants/answer/6324461). Schema.org property [Product.isbn](https://schema.org/isbn), [Product.gtin8](https://schema.org/gtin8), [Product.gtin12](https://schema.org/gtin12), [Product.gtin13](https://schema.org/gtin13), or [Product.gtin14](https://schema.org/gtin14). If the value is not a valid GTIN, an INVALID_ARGUMENT error is returned.
	Gtin string `pulumi:"gtin"`
	// Product images for the product. We highly recommend putting the main image first. A maximum of 300 images are allowed. Corresponding properties: Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
	Images []GoogleCloudRetailV2betaImageResponse `pulumi:"images"`
	// Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). For product prediction, this field is ignored and the model automatically detects the text language. The Product can include text in different languages, but duplicating Products to provide text in multiple languages can result in degraded model performance. For product search this field is in use. It defaults to "en-US" if unset.
	LanguageCode string `pulumi:"languageCode"`
	// A list of local inventories specific to different places. This field can be managed by ProductService.AddLocalInventories and ProductService.RemoveLocalInventories APIs if fine-grained, high-volume updates are necessary.
	LocalInventories []GoogleCloudRetailV2betaLocalInventoryResponse `pulumi:"localInventories"`
	// The material of the product. For example, "leather", "wooden". A maximum of 20 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 200 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [material](https://support.google.com/merchants/answer/6324410). Schema.org property [Product.material](https://schema.org/material).
	Materials []string `pulumi:"materials"`
	// Immutable. Full resource name of the product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
	Name string `pulumi:"name"`
	// The pattern or graphic print of the product. For example, "striped", "polka dot", "paisley". A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [pattern](https://support.google.com/merchants/answer/6324483). Schema.org property [Product.pattern](https://schema.org/pattern).
	Patterns []string `pulumi:"patterns"`
	// Product price and cost information. Corresponding properties: Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).
	PriceInfo GoogleCloudRetailV2betaPriceInfoResponse `pulumi:"priceInfo"`
	// Variant group identifier. Must be an id, with the same parent branch with this product. Otherwise, an error is thrown. For Type.PRIMARY Products, this field can only be empty or set to the same value as id. For VARIANT Products, this field cannot be empty. A maximum of 2,000 products are allowed to share the same Type.PRIMARY Product. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [item_group_id](https://support.google.com/merchants/answer/6324507). Schema.org property [Product.inProductGroupWithID](https://schema.org/inProductGroupWithID).
	PrimaryProductId string `pulumi:"primaryProductId"`
	// The promotions applied to the product. A maximum of 10 values are allowed per Product. Only Promotion.promotion_id will be used, other fields will be ignored if set.
	Promotions []GoogleCloudRetailV2betaPromotionResponse `pulumi:"promotions"`
	// The timestamp when the product is published by the retailer for the first time, which indicates the freshness of the products. Note that this field is different from available_time, given it purely describes product freshness regardless of when it is available on search and recommendation.
	PublishTime string `pulumi:"publishTime"`
	// The rating of this product.
	Rating GoogleCloudRetailV2betaRatingResponse `pulumi:"rating"`
	// Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form "attributes.key" where "key" is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency. This field is deprecated. Use the retrievable site-wide control instead.
	//
	// Deprecated: Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form "attributes.key" where "key" is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency. This field is deprecated. Use the retrievable site-wide control instead.
	RetrievableFields string `pulumi:"retrievableFields"`
	// The size of the product. To represent different size systems or size types, consider using this format: [[[size_system:]size_type:]size_value]. For example, in "US:MENS:M", "US" represents size system; "MENS" represents size type; "M" represents size value. In "GIRLS:27", size system is empty; "GIRLS" represents size type; "27" represents size value. In "32 inches", both size system and size type are empty, while size value is "32 inches". A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [size](https://support.google.com/merchants/answer/6324492), [size_type](https://support.google.com/merchants/answer/6324497), and [size_system](https://support.google.com/merchants/answer/6324502). Schema.org property [Product.size](https://schema.org/size).
	Sizes []string `pulumi:"sizes"`
	// Custom tags associated with the product. At most 250 values are allowed per Product. This value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This tag can be used for filtering recommendation results by passing the tag as part of the PredictRequest.filter. Corresponding properties: Google Merchant Center property [custom_label_0–4](https://support.google.com/merchants/answer/6324473).
	Tags []string `pulumi:"tags"`
	// Product title. This field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [title](https://support.google.com/merchants/answer/6324415). Schema.org property [Product.name](https://schema.org/name).
	Title string `pulumi:"title"`
	// Input only. The TTL (time to live) of the product. Note that this is only applicable to Type.PRIMARY and Type.COLLECTION, and ignored for Type.VARIANT. In general, we suggest the users to delete the stale products explicitly, instead of using this field to determine staleness. If it is set, it must be a non-negative value, and expire_time is set as current timestamp plus ttl. The derived expire_time is returned in the output and ttl is left blank when retrieving the Product. If it is set, the product is not available for SearchService.Search after current timestamp plus ttl. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts.
	Ttl string `pulumi:"ttl"`
	// Immutable. The type of the product. Default to Catalog.product_level_config.ingestion_product_type if unset.
	Type string `pulumi:"type"`
	// Canonical URL directly linking to the product detail page. It is strongly recommended to provide a valid uri for the product, otherwise the service performance could be significantly degraded. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [link](https://support.google.com/merchants/answer/6324416). Schema.org property [Offer.url](https://schema.org/url).
	Uri string `pulumi:"uri"`
	// Product variants grouped together on primary product which share similar product attributes. It's automatically grouped by primary_product_id for all the product variants. Only populated for Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.
	Variants []GoogleCloudRetailV2betaProductResponse `pulumi:"variants"`
}

// Product captures all metadata information of items to be recommended or searched.
type GoogleCloudRetailV2betaProductResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaProductResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaProductResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaProductResponseOutput) ToGoogleCloudRetailV2betaProductResponseOutput() GoogleCloudRetailV2betaProductResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaProductResponseOutput) ToGoogleCloudRetailV2betaProductResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaProductResponseOutput {
	return o
}

// Highly encouraged. Extra product attributes to be included. For example, for products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the attributes here. Features that can take on one of a limited number of possible values. Two types of features can be set are: Textual features. some examples would be the brand/maker of a product, or country of a customer. Numerical features. Some examples would be the height/weight of a product, or age of a customer. For example: `{ "vendor": {"text": ["vendor123", "vendor456"]}, "lengths_cm": {"numbers":[2.3, 15.4]}, "heights_cm": {"numbers":[8.1, 6.4]} }`. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * Max entries count: 200. * The key must be a UTF-8 encoded string with a length limit of 128 characters. * For indexable attribute, the key must match the pattern: `a-zA-Z0-9*`. For example, `key0LikeThis` or `KEY_1_LIKE_THIS`. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a non-empty UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed.
func (o GoogleCloudRetailV2betaProductResponseOutput) Attributes() GoogleCloudRetailV2betaCustomAttributeResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) GoogleCloudRetailV2betaCustomAttributeResponse {
		return v.Attributes
	}).(GoogleCloudRetailV2betaCustomAttributeResponseOutput)
}

// The target group associated with a given audience (e.g. male, veterans, car owners, musicians, etc.) of the product.
func (o GoogleCloudRetailV2betaProductResponseOutput) Audience() GoogleCloudRetailV2betaAudienceResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) GoogleCloudRetailV2betaAudienceResponse {
		return v.Audience
	}).(GoogleCloudRetailV2betaAudienceResponseOutput)
}

// The online availability of the Product. Default to Availability.IN_STOCK. Corresponding properties: Google Merchant Center property [availability](https://support.google.com/merchants/answer/6324448). Schema.org property [Offer.availability](https://schema.org/availability).
func (o GoogleCloudRetailV2betaProductResponseOutput) Availability() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) string { return v.Availability }).(pulumi.StringOutput)
}

// The available quantity of the item.
func (o GoogleCloudRetailV2betaProductResponseOutput) AvailableQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) int { return v.AvailableQuantity }).(pulumi.IntOutput)
}

// The timestamp when this Product becomes available for SearchService.Search. Note that this is only applicable to Type.PRIMARY and Type.COLLECTION, and ignored for Type.VARIANT.
func (o GoogleCloudRetailV2betaProductResponseOutput) AvailableTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) string { return v.AvailableTime }).(pulumi.StringOutput)
}

// The brands of the product. A maximum of 30 brands are allowed unless overridden through the Google Cloud console. Each brand must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [brand](https://support.google.com/merchants/answer/6324351). Schema.org property [Product.brand](https://schema.org/brand).
func (o GoogleCloudRetailV2betaProductResponseOutput) Brands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) []string { return v.Brands }).(pulumi.StringArrayOutput)
}

// Product categories. This field is repeated for supporting one product belonging to several parallel categories. Strongly recommended using the full path for better search / recommendation quality. To represent full path of category, use '>' sign to separate different hierarchies. If '>' is part of the category name, replace it with other character(s). For example, if a shoes product belongs to both ["Shoes & Accessories" -> "Shoes"] and ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it could be represented as: "categories": [ "Shoes & Accessories > Shoes", "Sports & Fitness > Athletic Clothing > Shoes" ] Must be set for Type.PRIMARY Product otherwise an INVALID_ARGUMENT error is returned. At most 250 values are allowed per Product unless overridden via pantheon UI. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property google_product_category. Schema.org property [Product.category] (https://schema.org/category). [mc_google_product_category]: https://support.google.com/merchants/answer/6324436
func (o GoogleCloudRetailV2betaProductResponseOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) []string { return v.Categories }).(pulumi.StringArrayOutput)
}

// The id of the collection members when type is Type.COLLECTION. Non-existent product ids are allowed. The type of the members must be either Type.PRIMARY or Type.VARIANT otherwise an INVALID_ARGUMENT error is thrown. Should not set it for other types. A maximum of 1000 values are allowed. Otherwise, an INVALID_ARGUMENT error is return.
func (o GoogleCloudRetailV2betaProductResponseOutput) CollectionMemberIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) []string { return v.CollectionMemberIds }).(pulumi.StringArrayOutput)
}

// The color of the product. Corresponding properties: Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
func (o GoogleCloudRetailV2betaProductResponseOutput) ColorInfo() GoogleCloudRetailV2betaColorInfoResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) GoogleCloudRetailV2betaColorInfoResponse {
		return v.ColorInfo
	}).(GoogleCloudRetailV2betaColorInfoResponseOutput)
}

// The condition of the product. Strongly encouraged to use the standard values: "new", "refurbished", "used". A maximum of 1 value is allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [condition](https://support.google.com/merchants/answer/6324469). Schema.org property [Offer.itemCondition](https://schema.org/itemCondition).
func (o GoogleCloudRetailV2betaProductResponseOutput) Conditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) []string { return v.Conditions }).(pulumi.StringArrayOutput)
}

// Product description. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [description](https://support.google.com/merchants/answer/6324468). Schema.org property [Product.description](https://schema.org/description).
func (o GoogleCloudRetailV2betaProductResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Note that this field is applied in the following ways: * If the Product is already expired when it is uploaded, this product is not indexed for search. * If the Product is not expired when it is uploaded, only the Type.PRIMARY's and Type.COLLECTION's expireTime is respected, and Type.VARIANT's expireTime is not used. In general, we suggest the users to delete the stale products explicitly, instead of using this field to determine staleness. expire_time must be later than available_time and publish_time, otherwise an INVALID_ARGUMENT error is thrown. Corresponding properties: Google Merchant Center property [expiration_date](https://support.google.com/merchants/answer/6324499).
func (o GoogleCloudRetailV2betaProductResponseOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods. All the elements must have distinct FulfillmentInfo.type. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaProductResponseOutput) FulfillmentInfo() GoogleCloudRetailV2betaFulfillmentInfoResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) []GoogleCloudRetailV2betaFulfillmentInfoResponse {
		return v.FulfillmentInfo
	}).(GoogleCloudRetailV2betaFulfillmentInfoResponseArrayOutput)
}

// The Global Trade Item Number (GTIN) of the product. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. This field must be a Unigram. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [gtin](https://support.google.com/merchants/answer/6324461). Schema.org property [Product.isbn](https://schema.org/isbn), [Product.gtin8](https://schema.org/gtin8), [Product.gtin12](https://schema.org/gtin12), [Product.gtin13](https://schema.org/gtin13), or [Product.gtin14](https://schema.org/gtin14). If the value is not a valid GTIN, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaProductResponseOutput) Gtin() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) string { return v.Gtin }).(pulumi.StringOutput)
}

// Product images for the product. We highly recommend putting the main image first. A maximum of 300 images are allowed. Corresponding properties: Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
func (o GoogleCloudRetailV2betaProductResponseOutput) Images() GoogleCloudRetailV2betaImageResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) []GoogleCloudRetailV2betaImageResponse { return v.Images }).(GoogleCloudRetailV2betaImageResponseArrayOutput)
}

// Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). For product prediction, this field is ignored and the model automatically detects the text language. The Product can include text in different languages, but duplicating Products to provide text in multiple languages can result in degraded model performance. For product search this field is in use. It defaults to "en-US" if unset.
func (o GoogleCloudRetailV2betaProductResponseOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) string { return v.LanguageCode }).(pulumi.StringOutput)
}

// A list of local inventories specific to different places. This field can be managed by ProductService.AddLocalInventories and ProductService.RemoveLocalInventories APIs if fine-grained, high-volume updates are necessary.
func (o GoogleCloudRetailV2betaProductResponseOutput) LocalInventories() GoogleCloudRetailV2betaLocalInventoryResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) []GoogleCloudRetailV2betaLocalInventoryResponse {
		return v.LocalInventories
	}).(GoogleCloudRetailV2betaLocalInventoryResponseArrayOutput)
}

// The material of the product. For example, "leather", "wooden". A maximum of 20 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 200 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [material](https://support.google.com/merchants/answer/6324410). Schema.org property [Product.material](https://schema.org/material).
func (o GoogleCloudRetailV2betaProductResponseOutput) Materials() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) []string { return v.Materials }).(pulumi.StringArrayOutput)
}

// Immutable. Full resource name of the product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
func (o GoogleCloudRetailV2betaProductResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The pattern or graphic print of the product. For example, "striped", "polka dot", "paisley". A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [pattern](https://support.google.com/merchants/answer/6324483). Schema.org property [Product.pattern](https://schema.org/pattern).
func (o GoogleCloudRetailV2betaProductResponseOutput) Patterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) []string { return v.Patterns }).(pulumi.StringArrayOutput)
}

// Product price and cost information. Corresponding properties: Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).
func (o GoogleCloudRetailV2betaProductResponseOutput) PriceInfo() GoogleCloudRetailV2betaPriceInfoResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) GoogleCloudRetailV2betaPriceInfoResponse {
		return v.PriceInfo
	}).(GoogleCloudRetailV2betaPriceInfoResponseOutput)
}

// Variant group identifier. Must be an id, with the same parent branch with this product. Otherwise, an error is thrown. For Type.PRIMARY Products, this field can only be empty or set to the same value as id. For VARIANT Products, this field cannot be empty. A maximum of 2,000 products are allowed to share the same Type.PRIMARY Product. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [item_group_id](https://support.google.com/merchants/answer/6324507). Schema.org property [Product.inProductGroupWithID](https://schema.org/inProductGroupWithID).
func (o GoogleCloudRetailV2betaProductResponseOutput) PrimaryProductId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) string { return v.PrimaryProductId }).(pulumi.StringOutput)
}

// The promotions applied to the product. A maximum of 10 values are allowed per Product. Only Promotion.promotion_id will be used, other fields will be ignored if set.
func (o GoogleCloudRetailV2betaProductResponseOutput) Promotions() GoogleCloudRetailV2betaPromotionResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) []GoogleCloudRetailV2betaPromotionResponse {
		return v.Promotions
	}).(GoogleCloudRetailV2betaPromotionResponseArrayOutput)
}

// The timestamp when the product is published by the retailer for the first time, which indicates the freshness of the products. Note that this field is different from available_time, given it purely describes product freshness regardless of when it is available on search and recommendation.
func (o GoogleCloudRetailV2betaProductResponseOutput) PublishTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) string { return v.PublishTime }).(pulumi.StringOutput)
}

// The rating of this product.
func (o GoogleCloudRetailV2betaProductResponseOutput) Rating() GoogleCloudRetailV2betaRatingResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) GoogleCloudRetailV2betaRatingResponse { return v.Rating }).(GoogleCloudRetailV2betaRatingResponseOutput)
}

// Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form "attributes.key" where "key" is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency. This field is deprecated. Use the retrievable site-wide control instead.
//
// Deprecated: Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form "attributes.key" where "key" is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency. This field is deprecated. Use the retrievable site-wide control instead.
func (o GoogleCloudRetailV2betaProductResponseOutput) RetrievableFields() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) string { return v.RetrievableFields }).(pulumi.StringOutput)
}

// The size of the product. To represent different size systems or size types, consider using this format: [[[size_system:]size_type:]size_value]. For example, in "US:MENS:M", "US" represents size system; "MENS" represents size type; "M" represents size value. In "GIRLS:27", size system is empty; "GIRLS" represents size type; "27" represents size value. In "32 inches", both size system and size type are empty, while size value is "32 inches". A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [size](https://support.google.com/merchants/answer/6324492), [size_type](https://support.google.com/merchants/answer/6324497), and [size_system](https://support.google.com/merchants/answer/6324502). Schema.org property [Product.size](https://schema.org/size).
func (o GoogleCloudRetailV2betaProductResponseOutput) Sizes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) []string { return v.Sizes }).(pulumi.StringArrayOutput)
}

// Custom tags associated with the product. At most 250 values are allowed per Product. This value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This tag can be used for filtering recommendation results by passing the tag as part of the PredictRequest.filter. Corresponding properties: Google Merchant Center property [custom_label_0–4](https://support.google.com/merchants/answer/6324473).
func (o GoogleCloudRetailV2betaProductResponseOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Product title. This field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [title](https://support.google.com/merchants/answer/6324415). Schema.org property [Product.name](https://schema.org/name).
func (o GoogleCloudRetailV2betaProductResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) string { return v.Title }).(pulumi.StringOutput)
}

// Input only. The TTL (time to live) of the product. Note that this is only applicable to Type.PRIMARY and Type.COLLECTION, and ignored for Type.VARIANT. In general, we suggest the users to delete the stale products explicitly, instead of using this field to determine staleness. If it is set, it must be a non-negative value, and expire_time is set as current timestamp plus ttl. The derived expire_time is returned in the output and ttl is left blank when retrieving the Product. If it is set, the product is not available for SearchService.Search after current timestamp plus ttl. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts.
func (o GoogleCloudRetailV2betaProductResponseOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) string { return v.Ttl }).(pulumi.StringOutput)
}

// Immutable. The type of the product. Default to Catalog.product_level_config.ingestion_product_type if unset.
func (o GoogleCloudRetailV2betaProductResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Canonical URL directly linking to the product detail page. It is strongly recommended to provide a valid uri for the product, otherwise the service performance could be significantly degraded. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [link](https://support.google.com/merchants/answer/6324416). Schema.org property [Offer.url](https://schema.org/url).
func (o GoogleCloudRetailV2betaProductResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Product variants grouped together on primary product which share similar product attributes. It's automatically grouped by primary_product_id for all the product variants. Only populated for Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.
func (o GoogleCloudRetailV2betaProductResponseOutput) Variants() GoogleCloudRetailV2betaProductResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaProductResponse) []GoogleCloudRetailV2betaProductResponse {
		return v.Variants
	}).(GoogleCloudRetailV2betaProductResponseArrayOutput)
}

type GoogleCloudRetailV2betaProductResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaProductResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaProductResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaProductResponseArrayOutput) ToGoogleCloudRetailV2betaProductResponseArrayOutput() GoogleCloudRetailV2betaProductResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaProductResponseArrayOutput) ToGoogleCloudRetailV2betaProductResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaProductResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaProductResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaProductResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaProductResponse {
		return vs[0].([]GoogleCloudRetailV2betaProductResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaProductResponseOutput)
}

// Promotion specification.
type GoogleCloudRetailV2betaPromotion struct {
	// Promotion identifier, which is the final component of name. For example, this field is "free_gift", if name is `projects/*/locations/global/catalogs/default_catalog/promotions/free_gift`. The value must be a UTF-8 encoded string with a length limit of 128 characters, and match the pattern: `a-zA-Z*`. For example, id0LikeThis or ID_1_LIKE_THIS. Otherwise, an INVALID_ARGUMENT error is returned. Corresponds to Google Merchant Center property [promotion_id](https://support.google.com/merchants/answer/7050148).
	PromotionId *string `pulumi:"promotionId"`
}

// GoogleCloudRetailV2betaPromotionInput is an input type that accepts GoogleCloudRetailV2betaPromotionArgs and GoogleCloudRetailV2betaPromotionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaPromotionInput` via:
//
//	GoogleCloudRetailV2betaPromotionArgs{...}
type GoogleCloudRetailV2betaPromotionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaPromotionOutput() GoogleCloudRetailV2betaPromotionOutput
	ToGoogleCloudRetailV2betaPromotionOutputWithContext(context.Context) GoogleCloudRetailV2betaPromotionOutput
}

// Promotion specification.
type GoogleCloudRetailV2betaPromotionArgs struct {
	// Promotion identifier, which is the final component of name. For example, this field is "free_gift", if name is `projects/*/locations/global/catalogs/default_catalog/promotions/free_gift`. The value must be a UTF-8 encoded string with a length limit of 128 characters, and match the pattern: `a-zA-Z*`. For example, id0LikeThis or ID_1_LIKE_THIS. Otherwise, an INVALID_ARGUMENT error is returned. Corresponds to Google Merchant Center property [promotion_id](https://support.google.com/merchants/answer/7050148).
	PromotionId pulumi.StringPtrInput `pulumi:"promotionId"`
}

func (GoogleCloudRetailV2betaPromotionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaPromotion)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaPromotionArgs) ToGoogleCloudRetailV2betaPromotionOutput() GoogleCloudRetailV2betaPromotionOutput {
	return i.ToGoogleCloudRetailV2betaPromotionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaPromotionArgs) ToGoogleCloudRetailV2betaPromotionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaPromotionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaPromotionOutput)
}

// GoogleCloudRetailV2betaPromotionArrayInput is an input type that accepts GoogleCloudRetailV2betaPromotionArray and GoogleCloudRetailV2betaPromotionArrayOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaPromotionArrayInput` via:
//
//	GoogleCloudRetailV2betaPromotionArray{ GoogleCloudRetailV2betaPromotionArgs{...} }
type GoogleCloudRetailV2betaPromotionArrayInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaPromotionArrayOutput() GoogleCloudRetailV2betaPromotionArrayOutput
	ToGoogleCloudRetailV2betaPromotionArrayOutputWithContext(context.Context) GoogleCloudRetailV2betaPromotionArrayOutput
}

type GoogleCloudRetailV2betaPromotionArray []GoogleCloudRetailV2betaPromotionInput

func (GoogleCloudRetailV2betaPromotionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaPromotion)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaPromotionArray) ToGoogleCloudRetailV2betaPromotionArrayOutput() GoogleCloudRetailV2betaPromotionArrayOutput {
	return i.ToGoogleCloudRetailV2betaPromotionArrayOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaPromotionArray) ToGoogleCloudRetailV2betaPromotionArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaPromotionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaPromotionArrayOutput)
}

// Promotion specification.
type GoogleCloudRetailV2betaPromotionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaPromotionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaPromotion)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaPromotionOutput) ToGoogleCloudRetailV2betaPromotionOutput() GoogleCloudRetailV2betaPromotionOutput {
	return o
}

func (o GoogleCloudRetailV2betaPromotionOutput) ToGoogleCloudRetailV2betaPromotionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaPromotionOutput {
	return o
}

// Promotion identifier, which is the final component of name. For example, this field is "free_gift", if name is `projects/*/locations/global/catalogs/default_catalog/promotions/free_gift`. The value must be a UTF-8 encoded string with a length limit of 128 characters, and match the pattern: `a-zA-Z*`. For example, id0LikeThis or ID_1_LIKE_THIS. Otherwise, an INVALID_ARGUMENT error is returned. Corresponds to Google Merchant Center property [promotion_id](https://support.google.com/merchants/answer/7050148).
func (o GoogleCloudRetailV2betaPromotionOutput) PromotionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPromotion) *string { return v.PromotionId }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2betaPromotionArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaPromotionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaPromotion)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaPromotionArrayOutput) ToGoogleCloudRetailV2betaPromotionArrayOutput() GoogleCloudRetailV2betaPromotionArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaPromotionArrayOutput) ToGoogleCloudRetailV2betaPromotionArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaPromotionArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaPromotionArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaPromotionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaPromotion {
		return vs[0].([]GoogleCloudRetailV2betaPromotion)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaPromotionOutput)
}

// Promotion specification.
type GoogleCloudRetailV2betaPromotionResponse struct {
	// Promotion identifier, which is the final component of name. For example, this field is "free_gift", if name is `projects/*/locations/global/catalogs/default_catalog/promotions/free_gift`. The value must be a UTF-8 encoded string with a length limit of 128 characters, and match the pattern: `a-zA-Z*`. For example, id0LikeThis or ID_1_LIKE_THIS. Otherwise, an INVALID_ARGUMENT error is returned. Corresponds to Google Merchant Center property [promotion_id](https://support.google.com/merchants/answer/7050148).
	PromotionId string `pulumi:"promotionId"`
}

// Promotion specification.
type GoogleCloudRetailV2betaPromotionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaPromotionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaPromotionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaPromotionResponseOutput) ToGoogleCloudRetailV2betaPromotionResponseOutput() GoogleCloudRetailV2betaPromotionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaPromotionResponseOutput) ToGoogleCloudRetailV2betaPromotionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaPromotionResponseOutput {
	return o
}

// Promotion identifier, which is the final component of name. For example, this field is "free_gift", if name is `projects/*/locations/global/catalogs/default_catalog/promotions/free_gift`. The value must be a UTF-8 encoded string with a length limit of 128 characters, and match the pattern: `a-zA-Z*`. For example, id0LikeThis or ID_1_LIKE_THIS. Otherwise, an INVALID_ARGUMENT error is returned. Corresponds to Google Merchant Center property [promotion_id](https://support.google.com/merchants/answer/7050148).
func (o GoogleCloudRetailV2betaPromotionResponseOutput) PromotionId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaPromotionResponse) string { return v.PromotionId }).(pulumi.StringOutput)
}

type GoogleCloudRetailV2betaPromotionResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaPromotionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaPromotionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaPromotionResponseArrayOutput) ToGoogleCloudRetailV2betaPromotionResponseArrayOutput() GoogleCloudRetailV2betaPromotionResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaPromotionResponseArrayOutput) ToGoogleCloudRetailV2betaPromotionResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaPromotionResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaPromotionResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaPromotionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaPromotionResponse {
		return vs[0].([]GoogleCloudRetailV2betaPromotionResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaPromotionResponseOutput)
}

// The rating of a Product.
type GoogleCloudRetailV2betaRating struct {
	// The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.
	AverageRating *float64 `pulumi:"averageRating"`
	// The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	RatingCount *int `pulumi:"ratingCount"`
	// List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.
	RatingHistogram []int `pulumi:"ratingHistogram"`
}

// GoogleCloudRetailV2betaRatingInput is an input type that accepts GoogleCloudRetailV2betaRatingArgs and GoogleCloudRetailV2betaRatingOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRatingInput` via:
//
//	GoogleCloudRetailV2betaRatingArgs{...}
type GoogleCloudRetailV2betaRatingInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRatingOutput() GoogleCloudRetailV2betaRatingOutput
	ToGoogleCloudRetailV2betaRatingOutputWithContext(context.Context) GoogleCloudRetailV2betaRatingOutput
}

// The rating of a Product.
type GoogleCloudRetailV2betaRatingArgs struct {
	// The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.
	AverageRating pulumi.Float64PtrInput `pulumi:"averageRating"`
	// The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	RatingCount pulumi.IntPtrInput `pulumi:"ratingCount"`
	// List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.
	RatingHistogram pulumi.IntArrayInput `pulumi:"ratingHistogram"`
}

func (GoogleCloudRetailV2betaRatingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRating)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaRatingArgs) ToGoogleCloudRetailV2betaRatingOutput() GoogleCloudRetailV2betaRatingOutput {
	return i.ToGoogleCloudRetailV2betaRatingOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRatingArgs) ToGoogleCloudRetailV2betaRatingOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRatingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRatingOutput)
}

func (i GoogleCloudRetailV2betaRatingArgs) ToGoogleCloudRetailV2betaRatingPtrOutput() GoogleCloudRetailV2betaRatingPtrOutput {
	return i.ToGoogleCloudRetailV2betaRatingPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRatingArgs) ToGoogleCloudRetailV2betaRatingPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRatingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRatingOutput).ToGoogleCloudRetailV2betaRatingPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaRatingPtrInput is an input type that accepts GoogleCloudRetailV2betaRatingArgs, GoogleCloudRetailV2betaRatingPtr and GoogleCloudRetailV2betaRatingPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRatingPtrInput` via:
//
//	        GoogleCloudRetailV2betaRatingArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaRatingPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRatingPtrOutput() GoogleCloudRetailV2betaRatingPtrOutput
	ToGoogleCloudRetailV2betaRatingPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaRatingPtrOutput
}

type googleCloudRetailV2betaRatingPtrType GoogleCloudRetailV2betaRatingArgs

func GoogleCloudRetailV2betaRatingPtr(v *GoogleCloudRetailV2betaRatingArgs) GoogleCloudRetailV2betaRatingPtrInput {
	return (*googleCloudRetailV2betaRatingPtrType)(v)
}

func (*googleCloudRetailV2betaRatingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRating)(nil)).Elem()
}

func (i *googleCloudRetailV2betaRatingPtrType) ToGoogleCloudRetailV2betaRatingPtrOutput() GoogleCloudRetailV2betaRatingPtrOutput {
	return i.ToGoogleCloudRetailV2betaRatingPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaRatingPtrType) ToGoogleCloudRetailV2betaRatingPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRatingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRatingPtrOutput)
}

// The rating of a Product.
type GoogleCloudRetailV2betaRatingOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRatingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRating)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRatingOutput) ToGoogleCloudRetailV2betaRatingOutput() GoogleCloudRetailV2betaRatingOutput {
	return o
}

func (o GoogleCloudRetailV2betaRatingOutput) ToGoogleCloudRetailV2betaRatingOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRatingOutput {
	return o
}

func (o GoogleCloudRetailV2betaRatingOutput) ToGoogleCloudRetailV2betaRatingPtrOutput() GoogleCloudRetailV2betaRatingPtrOutput {
	return o.ToGoogleCloudRetailV2betaRatingPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaRatingOutput) ToGoogleCloudRetailV2betaRatingPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRatingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaRating) *GoogleCloudRetailV2betaRating {
		return &v
	}).(GoogleCloudRetailV2betaRatingPtrOutput)
}

// The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaRatingOutput) AverageRating() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRating) *float64 { return v.AverageRating }).(pulumi.Float64PtrOutput)
}

// The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaRatingOutput) RatingCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRating) *int { return v.RatingCount }).(pulumi.IntPtrOutput)
}

// List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.
func (o GoogleCloudRetailV2betaRatingOutput) RatingHistogram() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRating) []int { return v.RatingHistogram }).(pulumi.IntArrayOutput)
}

type GoogleCloudRetailV2betaRatingPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRatingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRating)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRatingPtrOutput) ToGoogleCloudRetailV2betaRatingPtrOutput() GoogleCloudRetailV2betaRatingPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRatingPtrOutput) ToGoogleCloudRetailV2betaRatingPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRatingPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRatingPtrOutput) Elem() GoogleCloudRetailV2betaRatingOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRating) GoogleCloudRetailV2betaRating {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaRating
		return ret
	}).(GoogleCloudRetailV2betaRatingOutput)
}

// The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaRatingPtrOutput) AverageRating() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRating) *float64 {
		if v == nil {
			return nil
		}
		return v.AverageRating
	}).(pulumi.Float64PtrOutput)
}

// The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaRatingPtrOutput) RatingCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRating) *int {
		if v == nil {
			return nil
		}
		return v.RatingCount
	}).(pulumi.IntPtrOutput)
}

// List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.
func (o GoogleCloudRetailV2betaRatingPtrOutput) RatingHistogram() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRating) []int {
		if v == nil {
			return nil
		}
		return v.RatingHistogram
	}).(pulumi.IntArrayOutput)
}

// The rating of a Product.
type GoogleCloudRetailV2betaRatingResponse struct {
	// The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.
	AverageRating float64 `pulumi:"averageRating"`
	// The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
	RatingCount int `pulumi:"ratingCount"`
	// List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.
	RatingHistogram []int `pulumi:"ratingHistogram"`
}

// The rating of a Product.
type GoogleCloudRetailV2betaRatingResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRatingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRatingResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRatingResponseOutput) ToGoogleCloudRetailV2betaRatingResponseOutput() GoogleCloudRetailV2betaRatingResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaRatingResponseOutput) ToGoogleCloudRetailV2betaRatingResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRatingResponseOutput {
	return o
}

// The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaRatingResponseOutput) AverageRating() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRatingResponse) float64 { return v.AverageRating }).(pulumi.Float64Output)
}

// The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaRatingResponseOutput) RatingCount() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRatingResponse) int { return v.RatingCount }).(pulumi.IntOutput)
}

// List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.
func (o GoogleCloudRetailV2betaRatingResponseOutput) RatingHistogram() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRatingResponse) []int { return v.RatingHistogram }).(pulumi.IntArrayOutput)
}

// A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently rules only work for controls with SOLUTION_TYPE_SEARCH.
type GoogleCloudRetailV2betaRule struct {
	// A boost action.
	BoostAction *GoogleCloudRetailV2betaRuleBoostAction `pulumi:"boostAction"`
	// The condition that triggers the rule. If the condition is empty, the rule will always apply.
	Condition GoogleCloudRetailV2betaCondition `pulumi:"condition"`
	// Prevents term from being associated with other terms.
	DoNotAssociateAction *GoogleCloudRetailV2betaRuleDoNotAssociateAction `pulumi:"doNotAssociateAction"`
	// Filters results.
	FilterAction *GoogleCloudRetailV2betaRuleFilterAction `pulumi:"filterAction"`
	// Force returns an attribute as a facet in the request.
	ForceReturnFacetAction *GoogleCloudRetailV2betaRuleForceReturnFacetAction `pulumi:"forceReturnFacetAction"`
	// Ignores specific terms from query during search.
	IgnoreAction *GoogleCloudRetailV2betaRuleIgnoreAction `pulumi:"ignoreAction"`
	// Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.
	OnewaySynonymsAction *GoogleCloudRetailV2betaRuleOnewaySynonymsAction `pulumi:"onewaySynonymsAction"`
	// Redirects a shopper to a specific page.
	RedirectAction *GoogleCloudRetailV2betaRuleRedirectAction `pulumi:"redirectAction"`
	// Remove an attribute as a facet in the request (if present).
	RemoveFacetAction *GoogleCloudRetailV2betaRuleRemoveFacetAction `pulumi:"removeFacetAction"`
	// Replaces specific terms in the query.
	ReplacementAction *GoogleCloudRetailV2betaRuleReplacementAction `pulumi:"replacementAction"`
	// Treats a set of terms as synonyms of one another.
	TwowaySynonymsAction *GoogleCloudRetailV2betaRuleTwowaySynonymsAction `pulumi:"twowaySynonymsAction"`
}

// GoogleCloudRetailV2betaRuleInput is an input type that accepts GoogleCloudRetailV2betaRuleArgs and GoogleCloudRetailV2betaRuleOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleInput` via:
//
//	GoogleCloudRetailV2betaRuleArgs{...}
type GoogleCloudRetailV2betaRuleInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleOutput() GoogleCloudRetailV2betaRuleOutput
	ToGoogleCloudRetailV2betaRuleOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleOutput
}

// A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently rules only work for controls with SOLUTION_TYPE_SEARCH.
type GoogleCloudRetailV2betaRuleArgs struct {
	// A boost action.
	BoostAction GoogleCloudRetailV2betaRuleBoostActionPtrInput `pulumi:"boostAction"`
	// The condition that triggers the rule. If the condition is empty, the rule will always apply.
	Condition GoogleCloudRetailV2betaConditionInput `pulumi:"condition"`
	// Prevents term from being associated with other terms.
	DoNotAssociateAction GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrInput `pulumi:"doNotAssociateAction"`
	// Filters results.
	FilterAction GoogleCloudRetailV2betaRuleFilterActionPtrInput `pulumi:"filterAction"`
	// Force returns an attribute as a facet in the request.
	ForceReturnFacetAction GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrInput `pulumi:"forceReturnFacetAction"`
	// Ignores specific terms from query during search.
	IgnoreAction GoogleCloudRetailV2betaRuleIgnoreActionPtrInput `pulumi:"ignoreAction"`
	// Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.
	OnewaySynonymsAction GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrInput `pulumi:"onewaySynonymsAction"`
	// Redirects a shopper to a specific page.
	RedirectAction GoogleCloudRetailV2betaRuleRedirectActionPtrInput `pulumi:"redirectAction"`
	// Remove an attribute as a facet in the request (if present).
	RemoveFacetAction GoogleCloudRetailV2betaRuleRemoveFacetActionPtrInput `pulumi:"removeFacetAction"`
	// Replaces specific terms in the query.
	ReplacementAction GoogleCloudRetailV2betaRuleReplacementActionPtrInput `pulumi:"replacementAction"`
	// Treats a set of terms as synonyms of one another.
	TwowaySynonymsAction GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrInput `pulumi:"twowaySynonymsAction"`
}

func (GoogleCloudRetailV2betaRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRule)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaRuleArgs) ToGoogleCloudRetailV2betaRuleOutput() GoogleCloudRetailV2betaRuleOutput {
	return i.ToGoogleCloudRetailV2betaRuleOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleArgs) ToGoogleCloudRetailV2betaRuleOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleOutput)
}

func (i GoogleCloudRetailV2betaRuleArgs) ToGoogleCloudRetailV2betaRulePtrOutput() GoogleCloudRetailV2betaRulePtrOutput {
	return i.ToGoogleCloudRetailV2betaRulePtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleArgs) ToGoogleCloudRetailV2betaRulePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleOutput).ToGoogleCloudRetailV2betaRulePtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaRulePtrInput is an input type that accepts GoogleCloudRetailV2betaRuleArgs, GoogleCloudRetailV2betaRulePtr and GoogleCloudRetailV2betaRulePtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRulePtrInput` via:
//
//	        GoogleCloudRetailV2betaRuleArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaRulePtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRulePtrOutput() GoogleCloudRetailV2betaRulePtrOutput
	ToGoogleCloudRetailV2betaRulePtrOutputWithContext(context.Context) GoogleCloudRetailV2betaRulePtrOutput
}

type googleCloudRetailV2betaRulePtrType GoogleCloudRetailV2betaRuleArgs

func GoogleCloudRetailV2betaRulePtr(v *GoogleCloudRetailV2betaRuleArgs) GoogleCloudRetailV2betaRulePtrInput {
	return (*googleCloudRetailV2betaRulePtrType)(v)
}

func (*googleCloudRetailV2betaRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRule)(nil)).Elem()
}

func (i *googleCloudRetailV2betaRulePtrType) ToGoogleCloudRetailV2betaRulePtrOutput() GoogleCloudRetailV2betaRulePtrOutput {
	return i.ToGoogleCloudRetailV2betaRulePtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaRulePtrType) ToGoogleCloudRetailV2betaRulePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRulePtrOutput)
}

// A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently rules only work for controls with SOLUTION_TYPE_SEARCH.
type GoogleCloudRetailV2betaRuleOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRule)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleOutput) ToGoogleCloudRetailV2betaRuleOutput() GoogleCloudRetailV2betaRuleOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleOutput) ToGoogleCloudRetailV2betaRuleOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleOutput) ToGoogleCloudRetailV2betaRulePtrOutput() GoogleCloudRetailV2betaRulePtrOutput {
	return o.ToGoogleCloudRetailV2betaRulePtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaRuleOutput) ToGoogleCloudRetailV2betaRulePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRule {
		return &v
	}).(GoogleCloudRetailV2betaRulePtrOutput)
}

// A boost action.
func (o GoogleCloudRetailV2betaRuleOutput) BoostAction() GoogleCloudRetailV2betaRuleBoostActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleBoostAction { return v.BoostAction }).(GoogleCloudRetailV2betaRuleBoostActionPtrOutput)
}

// The condition that triggers the rule. If the condition is empty, the rule will always apply.
func (o GoogleCloudRetailV2betaRuleOutput) Condition() GoogleCloudRetailV2betaConditionOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRule) GoogleCloudRetailV2betaCondition { return v.Condition }).(GoogleCloudRetailV2betaConditionOutput)
}

// Prevents term from being associated with other terms.
func (o GoogleCloudRetailV2betaRuleOutput) DoNotAssociateAction() GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleDoNotAssociateAction {
		return v.DoNotAssociateAction
	}).(GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput)
}

// Filters results.
func (o GoogleCloudRetailV2betaRuleOutput) FilterAction() GoogleCloudRetailV2betaRuleFilterActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleFilterAction { return v.FilterAction }).(GoogleCloudRetailV2betaRuleFilterActionPtrOutput)
}

// Force returns an attribute as a facet in the request.
func (o GoogleCloudRetailV2betaRuleOutput) ForceReturnFacetAction() GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleForceReturnFacetAction {
		return v.ForceReturnFacetAction
	}).(GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput)
}

// Ignores specific terms from query during search.
func (o GoogleCloudRetailV2betaRuleOutput) IgnoreAction() GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleIgnoreAction { return v.IgnoreAction }).(GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput)
}

// Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.
func (o GoogleCloudRetailV2betaRuleOutput) OnewaySynonymsAction() GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleOnewaySynonymsAction {
		return v.OnewaySynonymsAction
	}).(GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput)
}

// Redirects a shopper to a specific page.
func (o GoogleCloudRetailV2betaRuleOutput) RedirectAction() GoogleCloudRetailV2betaRuleRedirectActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleRedirectAction {
		return v.RedirectAction
	}).(GoogleCloudRetailV2betaRuleRedirectActionPtrOutput)
}

// Remove an attribute as a facet in the request (if present).
func (o GoogleCloudRetailV2betaRuleOutput) RemoveFacetAction() GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleRemoveFacetAction {
		return v.RemoveFacetAction
	}).(GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput)
}

// Replaces specific terms in the query.
func (o GoogleCloudRetailV2betaRuleOutput) ReplacementAction() GoogleCloudRetailV2betaRuleReplacementActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleReplacementAction {
		return v.ReplacementAction
	}).(GoogleCloudRetailV2betaRuleReplacementActionPtrOutput)
}

// Treats a set of terms as synonyms of one another.
func (o GoogleCloudRetailV2betaRuleOutput) TwowaySynonymsAction() GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleTwowaySynonymsAction {
		return v.TwowaySynonymsAction
	}).(GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput)
}

type GoogleCloudRetailV2betaRulePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRule)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRulePtrOutput) ToGoogleCloudRetailV2betaRulePtrOutput() GoogleCloudRetailV2betaRulePtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRulePtrOutput) ToGoogleCloudRetailV2betaRulePtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRulePtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRulePtrOutput) Elem() GoogleCloudRetailV2betaRuleOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRule) GoogleCloudRetailV2betaRule {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaRule
		return ret
	}).(GoogleCloudRetailV2betaRuleOutput)
}

// A boost action.
func (o GoogleCloudRetailV2betaRulePtrOutput) BoostAction() GoogleCloudRetailV2betaRuleBoostActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleBoostAction {
		if v == nil {
			return nil
		}
		return v.BoostAction
	}).(GoogleCloudRetailV2betaRuleBoostActionPtrOutput)
}

// The condition that triggers the rule. If the condition is empty, the rule will always apply.
func (o GoogleCloudRetailV2betaRulePtrOutput) Condition() GoogleCloudRetailV2betaConditionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaCondition {
		if v == nil {
			return nil
		}
		return &v.Condition
	}).(GoogleCloudRetailV2betaConditionPtrOutput)
}

// Prevents term from being associated with other terms.
func (o GoogleCloudRetailV2betaRulePtrOutput) DoNotAssociateAction() GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleDoNotAssociateAction {
		if v == nil {
			return nil
		}
		return v.DoNotAssociateAction
	}).(GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput)
}

// Filters results.
func (o GoogleCloudRetailV2betaRulePtrOutput) FilterAction() GoogleCloudRetailV2betaRuleFilterActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleFilterAction {
		if v == nil {
			return nil
		}
		return v.FilterAction
	}).(GoogleCloudRetailV2betaRuleFilterActionPtrOutput)
}

// Force returns an attribute as a facet in the request.
func (o GoogleCloudRetailV2betaRulePtrOutput) ForceReturnFacetAction() GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleForceReturnFacetAction {
		if v == nil {
			return nil
		}
		return v.ForceReturnFacetAction
	}).(GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput)
}

// Ignores specific terms from query during search.
func (o GoogleCloudRetailV2betaRulePtrOutput) IgnoreAction() GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleIgnoreAction {
		if v == nil {
			return nil
		}
		return v.IgnoreAction
	}).(GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput)
}

// Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.
func (o GoogleCloudRetailV2betaRulePtrOutput) OnewaySynonymsAction() GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleOnewaySynonymsAction {
		if v == nil {
			return nil
		}
		return v.OnewaySynonymsAction
	}).(GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput)
}

// Redirects a shopper to a specific page.
func (o GoogleCloudRetailV2betaRulePtrOutput) RedirectAction() GoogleCloudRetailV2betaRuleRedirectActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleRedirectAction {
		if v == nil {
			return nil
		}
		return v.RedirectAction
	}).(GoogleCloudRetailV2betaRuleRedirectActionPtrOutput)
}

// Remove an attribute as a facet in the request (if present).
func (o GoogleCloudRetailV2betaRulePtrOutput) RemoveFacetAction() GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleRemoveFacetAction {
		if v == nil {
			return nil
		}
		return v.RemoveFacetAction
	}).(GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput)
}

// Replaces specific terms in the query.
func (o GoogleCloudRetailV2betaRulePtrOutput) ReplacementAction() GoogleCloudRetailV2betaRuleReplacementActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleReplacementAction {
		if v == nil {
			return nil
		}
		return v.ReplacementAction
	}).(GoogleCloudRetailV2betaRuleReplacementActionPtrOutput)
}

// Treats a set of terms as synonyms of one another.
func (o GoogleCloudRetailV2betaRulePtrOutput) TwowaySynonymsAction() GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRule) *GoogleCloudRetailV2betaRuleTwowaySynonymsAction {
		if v == nil {
			return nil
		}
		return v.TwowaySynonymsAction
	}).(GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput)
}

// A boost action to apply to results matching condition specified above.
type GoogleCloudRetailV2betaRuleBoostAction struct {
	// Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
	Boost *float64 `pulumi:"boost"`
	// The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
	ProductsFilter *string `pulumi:"productsFilter"`
}

// GoogleCloudRetailV2betaRuleBoostActionInput is an input type that accepts GoogleCloudRetailV2betaRuleBoostActionArgs and GoogleCloudRetailV2betaRuleBoostActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleBoostActionInput` via:
//
//	GoogleCloudRetailV2betaRuleBoostActionArgs{...}
type GoogleCloudRetailV2betaRuleBoostActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleBoostActionOutput() GoogleCloudRetailV2betaRuleBoostActionOutput
	ToGoogleCloudRetailV2betaRuleBoostActionOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleBoostActionOutput
}

// A boost action to apply to results matching condition specified above.
type GoogleCloudRetailV2betaRuleBoostActionArgs struct {
	// Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
	Boost pulumi.Float64PtrInput `pulumi:"boost"`
	// The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
	ProductsFilter pulumi.StringPtrInput `pulumi:"productsFilter"`
}

func (GoogleCloudRetailV2betaRuleBoostActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleBoostAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaRuleBoostActionArgs) ToGoogleCloudRetailV2betaRuleBoostActionOutput() GoogleCloudRetailV2betaRuleBoostActionOutput {
	return i.ToGoogleCloudRetailV2betaRuleBoostActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleBoostActionArgs) ToGoogleCloudRetailV2betaRuleBoostActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleBoostActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleBoostActionOutput)
}

func (i GoogleCloudRetailV2betaRuleBoostActionArgs) ToGoogleCloudRetailV2betaRuleBoostActionPtrOutput() GoogleCloudRetailV2betaRuleBoostActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleBoostActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleBoostActionArgs) ToGoogleCloudRetailV2betaRuleBoostActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleBoostActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleBoostActionOutput).ToGoogleCloudRetailV2betaRuleBoostActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaRuleBoostActionPtrInput is an input type that accepts GoogleCloudRetailV2betaRuleBoostActionArgs, GoogleCloudRetailV2betaRuleBoostActionPtr and GoogleCloudRetailV2betaRuleBoostActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleBoostActionPtrInput` via:
//
//	        GoogleCloudRetailV2betaRuleBoostActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaRuleBoostActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleBoostActionPtrOutput() GoogleCloudRetailV2betaRuleBoostActionPtrOutput
	ToGoogleCloudRetailV2betaRuleBoostActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleBoostActionPtrOutput
}

type googleCloudRetailV2betaRuleBoostActionPtrType GoogleCloudRetailV2betaRuleBoostActionArgs

func GoogleCloudRetailV2betaRuleBoostActionPtr(v *GoogleCloudRetailV2betaRuleBoostActionArgs) GoogleCloudRetailV2betaRuleBoostActionPtrInput {
	return (*googleCloudRetailV2betaRuleBoostActionPtrType)(v)
}

func (*googleCloudRetailV2betaRuleBoostActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleBoostAction)(nil)).Elem()
}

func (i *googleCloudRetailV2betaRuleBoostActionPtrType) ToGoogleCloudRetailV2betaRuleBoostActionPtrOutput() GoogleCloudRetailV2betaRuleBoostActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleBoostActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaRuleBoostActionPtrType) ToGoogleCloudRetailV2betaRuleBoostActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleBoostActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleBoostActionPtrOutput)
}

// A boost action to apply to results matching condition specified above.
type GoogleCloudRetailV2betaRuleBoostActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleBoostActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleBoostAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleBoostActionOutput) ToGoogleCloudRetailV2betaRuleBoostActionOutput() GoogleCloudRetailV2betaRuleBoostActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleBoostActionOutput) ToGoogleCloudRetailV2betaRuleBoostActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleBoostActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleBoostActionOutput) ToGoogleCloudRetailV2betaRuleBoostActionPtrOutput() GoogleCloudRetailV2betaRuleBoostActionPtrOutput {
	return o.ToGoogleCloudRetailV2betaRuleBoostActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaRuleBoostActionOutput) ToGoogleCloudRetailV2betaRuleBoostActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleBoostActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaRuleBoostAction) *GoogleCloudRetailV2betaRuleBoostAction {
		return &v
	}).(GoogleCloudRetailV2betaRuleBoostActionPtrOutput)
}

// Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
func (o GoogleCloudRetailV2betaRuleBoostActionOutput) Boost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleBoostAction) *float64 { return v.Boost }).(pulumi.Float64PtrOutput)
}

// The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
func (o GoogleCloudRetailV2betaRuleBoostActionOutput) ProductsFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleBoostAction) *string { return v.ProductsFilter }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2betaRuleBoostActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleBoostActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleBoostAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleBoostActionPtrOutput) ToGoogleCloudRetailV2betaRuleBoostActionPtrOutput() GoogleCloudRetailV2betaRuleBoostActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleBoostActionPtrOutput) ToGoogleCloudRetailV2betaRuleBoostActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleBoostActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleBoostActionPtrOutput) Elem() GoogleCloudRetailV2betaRuleBoostActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleBoostAction) GoogleCloudRetailV2betaRuleBoostAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaRuleBoostAction
		return ret
	}).(GoogleCloudRetailV2betaRuleBoostActionOutput)
}

// Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
func (o GoogleCloudRetailV2betaRuleBoostActionPtrOutput) Boost() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleBoostAction) *float64 {
		if v == nil {
			return nil
		}
		return v.Boost
	}).(pulumi.Float64PtrOutput)
}

// The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
func (o GoogleCloudRetailV2betaRuleBoostActionPtrOutput) ProductsFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleBoostAction) *string {
		if v == nil {
			return nil
		}
		return v.ProductsFilter
	}).(pulumi.StringPtrOutput)
}

// A boost action to apply to results matching condition specified above.
type GoogleCloudRetailV2betaRuleBoostActionResponse struct {
	// Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
	Boost float64 `pulumi:"boost"`
	// The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
	ProductsFilter string `pulumi:"productsFilter"`
}

// A boost action to apply to results matching condition specified above.
type GoogleCloudRetailV2betaRuleBoostActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleBoostActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleBoostActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleBoostActionResponseOutput) ToGoogleCloudRetailV2betaRuleBoostActionResponseOutput() GoogleCloudRetailV2betaRuleBoostActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleBoostActionResponseOutput) ToGoogleCloudRetailV2betaRuleBoostActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleBoostActionResponseOutput {
	return o
}

// Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
func (o GoogleCloudRetailV2betaRuleBoostActionResponseOutput) Boost() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleBoostActionResponse) float64 { return v.Boost }).(pulumi.Float64Output)
}

// The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
func (o GoogleCloudRetailV2betaRuleBoostActionResponseOutput) ProductsFilter() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleBoostActionResponse) string { return v.ProductsFilter }).(pulumi.StringOutput)
}

// Prevents `query_term` from being associated with specified terms during search. Example: Don't associate "gShoe" and "cheap".
type GoogleCloudRetailV2betaRuleDoNotAssociateAction struct {
	// Cannot contain duplicates or the query term. Can specify up to 100 terms.
	DoNotAssociateTerms []string `pulumi:"doNotAssociateTerms"`
	// Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
	QueryTerms []string `pulumi:"queryTerms"`
	// Will be [deprecated = true] post migration;
	Terms []string `pulumi:"terms"`
}

// GoogleCloudRetailV2betaRuleDoNotAssociateActionInput is an input type that accepts GoogleCloudRetailV2betaRuleDoNotAssociateActionArgs and GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleDoNotAssociateActionInput` via:
//
//	GoogleCloudRetailV2betaRuleDoNotAssociateActionArgs{...}
type GoogleCloudRetailV2betaRuleDoNotAssociateActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleDoNotAssociateActionOutput() GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput
	ToGoogleCloudRetailV2betaRuleDoNotAssociateActionOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput
}

// Prevents `query_term` from being associated with specified terms during search. Example: Don't associate "gShoe" and "cheap".
type GoogleCloudRetailV2betaRuleDoNotAssociateActionArgs struct {
	// Cannot contain duplicates or the query term. Can specify up to 100 terms.
	DoNotAssociateTerms pulumi.StringArrayInput `pulumi:"doNotAssociateTerms"`
	// Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
	QueryTerms pulumi.StringArrayInput `pulumi:"queryTerms"`
	// Will be [deprecated = true] post migration;
	Terms pulumi.StringArrayInput `pulumi:"terms"`
}

func (GoogleCloudRetailV2betaRuleDoNotAssociateActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleDoNotAssociateAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaRuleDoNotAssociateActionArgs) ToGoogleCloudRetailV2betaRuleDoNotAssociateActionOutput() GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput {
	return i.ToGoogleCloudRetailV2betaRuleDoNotAssociateActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleDoNotAssociateActionArgs) ToGoogleCloudRetailV2betaRuleDoNotAssociateActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput)
}

func (i GoogleCloudRetailV2betaRuleDoNotAssociateActionArgs) ToGoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput() GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleDoNotAssociateActionArgs) ToGoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput).ToGoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrInput is an input type that accepts GoogleCloudRetailV2betaRuleDoNotAssociateActionArgs, GoogleCloudRetailV2betaRuleDoNotAssociateActionPtr and GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrInput` via:
//
//	        GoogleCloudRetailV2betaRuleDoNotAssociateActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput() GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput
	ToGoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput
}

type googleCloudRetailV2betaRuleDoNotAssociateActionPtrType GoogleCloudRetailV2betaRuleDoNotAssociateActionArgs

func GoogleCloudRetailV2betaRuleDoNotAssociateActionPtr(v *GoogleCloudRetailV2betaRuleDoNotAssociateActionArgs) GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrInput {
	return (*googleCloudRetailV2betaRuleDoNotAssociateActionPtrType)(v)
}

func (*googleCloudRetailV2betaRuleDoNotAssociateActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleDoNotAssociateAction)(nil)).Elem()
}

func (i *googleCloudRetailV2betaRuleDoNotAssociateActionPtrType) ToGoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput() GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaRuleDoNotAssociateActionPtrType) ToGoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput)
}

// Prevents `query_term` from being associated with specified terms during search. Example: Don't associate "gShoe" and "cheap".
type GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleDoNotAssociateAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput) ToGoogleCloudRetailV2betaRuleDoNotAssociateActionOutput() GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput) ToGoogleCloudRetailV2betaRuleDoNotAssociateActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput) ToGoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput() GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput {
	return o.ToGoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput) ToGoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaRuleDoNotAssociateAction) *GoogleCloudRetailV2betaRuleDoNotAssociateAction {
		return &v
	}).(GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput)
}

// Cannot contain duplicates or the query term. Can specify up to 100 terms.
func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput) DoNotAssociateTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleDoNotAssociateAction) []string { return v.DoNotAssociateTerms }).(pulumi.StringArrayOutput)
}

// Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleDoNotAssociateAction) []string { return v.QueryTerms }).(pulumi.StringArrayOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput) Terms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleDoNotAssociateAction) []string { return v.Terms }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleDoNotAssociateAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput) ToGoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput() GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput) ToGoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput) Elem() GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleDoNotAssociateAction) GoogleCloudRetailV2betaRuleDoNotAssociateAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaRuleDoNotAssociateAction
		return ret
	}).(GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput)
}

// Cannot contain duplicates or the query term. Can specify up to 100 terms.
func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput) DoNotAssociateTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleDoNotAssociateAction) []string {
		if v == nil {
			return nil
		}
		return v.DoNotAssociateTerms
	}).(pulumi.StringArrayOutput)
}

// Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleDoNotAssociateAction) []string {
		if v == nil {
			return nil
		}
		return v.QueryTerms
	}).(pulumi.StringArrayOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput) Terms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleDoNotAssociateAction) []string {
		if v == nil {
			return nil
		}
		return v.Terms
	}).(pulumi.StringArrayOutput)
}

// Prevents `query_term` from being associated with specified terms during search. Example: Don't associate "gShoe" and "cheap".
type GoogleCloudRetailV2betaRuleDoNotAssociateActionResponse struct {
	// Cannot contain duplicates or the query term. Can specify up to 100 terms.
	DoNotAssociateTerms []string `pulumi:"doNotAssociateTerms"`
	// Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
	QueryTerms []string `pulumi:"queryTerms"`
	// Will be [deprecated = true] post migration;
	Terms []string `pulumi:"terms"`
}

// Prevents `query_term` from being associated with specified terms during search. Example: Don't associate "gShoe" and "cheap".
type GoogleCloudRetailV2betaRuleDoNotAssociateActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleDoNotAssociateActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleDoNotAssociateActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionResponseOutput) ToGoogleCloudRetailV2betaRuleDoNotAssociateActionResponseOutput() GoogleCloudRetailV2betaRuleDoNotAssociateActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionResponseOutput) ToGoogleCloudRetailV2betaRuleDoNotAssociateActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleDoNotAssociateActionResponseOutput {
	return o
}

// Cannot contain duplicates or the query term. Can specify up to 100 terms.
func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionResponseOutput) DoNotAssociateTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleDoNotAssociateActionResponse) []string { return v.DoNotAssociateTerms }).(pulumi.StringArrayOutput)
}

// Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionResponseOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleDoNotAssociateActionResponse) []string { return v.QueryTerms }).(pulumi.StringArrayOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2betaRuleDoNotAssociateActionResponseOutput) Terms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleDoNotAssociateActionResponse) []string { return v.Terms }).(pulumi.StringArrayOutput)
}

// * Rule Condition: - No Condition.query_terms provided is a global match. - 1 or more Condition.query_terms provided are combined with OR operator. * Action Input: The request query and filter that are applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.
type GoogleCloudRetailV2betaRuleFilterAction struct {
	// A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. For more information, see [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
	Filter *string `pulumi:"filter"`
}

// GoogleCloudRetailV2betaRuleFilterActionInput is an input type that accepts GoogleCloudRetailV2betaRuleFilterActionArgs and GoogleCloudRetailV2betaRuleFilterActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleFilterActionInput` via:
//
//	GoogleCloudRetailV2betaRuleFilterActionArgs{...}
type GoogleCloudRetailV2betaRuleFilterActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleFilterActionOutput() GoogleCloudRetailV2betaRuleFilterActionOutput
	ToGoogleCloudRetailV2betaRuleFilterActionOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleFilterActionOutput
}

// * Rule Condition: - No Condition.query_terms provided is a global match. - 1 or more Condition.query_terms provided are combined with OR operator. * Action Input: The request query and filter that are applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.
type GoogleCloudRetailV2betaRuleFilterActionArgs struct {
	// A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. For more information, see [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
	Filter pulumi.StringPtrInput `pulumi:"filter"`
}

func (GoogleCloudRetailV2betaRuleFilterActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleFilterAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaRuleFilterActionArgs) ToGoogleCloudRetailV2betaRuleFilterActionOutput() GoogleCloudRetailV2betaRuleFilterActionOutput {
	return i.ToGoogleCloudRetailV2betaRuleFilterActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleFilterActionArgs) ToGoogleCloudRetailV2betaRuleFilterActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleFilterActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleFilterActionOutput)
}

func (i GoogleCloudRetailV2betaRuleFilterActionArgs) ToGoogleCloudRetailV2betaRuleFilterActionPtrOutput() GoogleCloudRetailV2betaRuleFilterActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleFilterActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleFilterActionArgs) ToGoogleCloudRetailV2betaRuleFilterActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleFilterActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleFilterActionOutput).ToGoogleCloudRetailV2betaRuleFilterActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaRuleFilterActionPtrInput is an input type that accepts GoogleCloudRetailV2betaRuleFilterActionArgs, GoogleCloudRetailV2betaRuleFilterActionPtr and GoogleCloudRetailV2betaRuleFilterActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleFilterActionPtrInput` via:
//
//	        GoogleCloudRetailV2betaRuleFilterActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaRuleFilterActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleFilterActionPtrOutput() GoogleCloudRetailV2betaRuleFilterActionPtrOutput
	ToGoogleCloudRetailV2betaRuleFilterActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleFilterActionPtrOutput
}

type googleCloudRetailV2betaRuleFilterActionPtrType GoogleCloudRetailV2betaRuleFilterActionArgs

func GoogleCloudRetailV2betaRuleFilterActionPtr(v *GoogleCloudRetailV2betaRuleFilterActionArgs) GoogleCloudRetailV2betaRuleFilterActionPtrInput {
	return (*googleCloudRetailV2betaRuleFilterActionPtrType)(v)
}

func (*googleCloudRetailV2betaRuleFilterActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleFilterAction)(nil)).Elem()
}

func (i *googleCloudRetailV2betaRuleFilterActionPtrType) ToGoogleCloudRetailV2betaRuleFilterActionPtrOutput() GoogleCloudRetailV2betaRuleFilterActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleFilterActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaRuleFilterActionPtrType) ToGoogleCloudRetailV2betaRuleFilterActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleFilterActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleFilterActionPtrOutput)
}

// * Rule Condition: - No Condition.query_terms provided is a global match. - 1 or more Condition.query_terms provided are combined with OR operator. * Action Input: The request query and filter that are applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.
type GoogleCloudRetailV2betaRuleFilterActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleFilterActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleFilterAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleFilterActionOutput) ToGoogleCloudRetailV2betaRuleFilterActionOutput() GoogleCloudRetailV2betaRuleFilterActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleFilterActionOutput) ToGoogleCloudRetailV2betaRuleFilterActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleFilterActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleFilterActionOutput) ToGoogleCloudRetailV2betaRuleFilterActionPtrOutput() GoogleCloudRetailV2betaRuleFilterActionPtrOutput {
	return o.ToGoogleCloudRetailV2betaRuleFilterActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaRuleFilterActionOutput) ToGoogleCloudRetailV2betaRuleFilterActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleFilterActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaRuleFilterAction) *GoogleCloudRetailV2betaRuleFilterAction {
		return &v
	}).(GoogleCloudRetailV2betaRuleFilterActionPtrOutput)
}

// A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. For more information, see [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
func (o GoogleCloudRetailV2betaRuleFilterActionOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleFilterAction) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2betaRuleFilterActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleFilterActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleFilterAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleFilterActionPtrOutput) ToGoogleCloudRetailV2betaRuleFilterActionPtrOutput() GoogleCloudRetailV2betaRuleFilterActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleFilterActionPtrOutput) ToGoogleCloudRetailV2betaRuleFilterActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleFilterActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleFilterActionPtrOutput) Elem() GoogleCloudRetailV2betaRuleFilterActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleFilterAction) GoogleCloudRetailV2betaRuleFilterAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaRuleFilterAction
		return ret
	}).(GoogleCloudRetailV2betaRuleFilterActionOutput)
}

// A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. For more information, see [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
func (o GoogleCloudRetailV2betaRuleFilterActionPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleFilterAction) *string {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(pulumi.StringPtrOutput)
}

// * Rule Condition: - No Condition.query_terms provided is a global match. - 1 or more Condition.query_terms provided are combined with OR operator. * Action Input: The request query and filter that are applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.
type GoogleCloudRetailV2betaRuleFilterActionResponse struct {
	// A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. For more information, see [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
	Filter string `pulumi:"filter"`
}

// * Rule Condition: - No Condition.query_terms provided is a global match. - 1 or more Condition.query_terms provided are combined with OR operator. * Action Input: The request query and filter that are applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.
type GoogleCloudRetailV2betaRuleFilterActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleFilterActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleFilterActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleFilterActionResponseOutput) ToGoogleCloudRetailV2betaRuleFilterActionResponseOutput() GoogleCloudRetailV2betaRuleFilterActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleFilterActionResponseOutput) ToGoogleCloudRetailV2betaRuleFilterActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleFilterActionResponseOutput {
	return o
}

// A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. For more information, see [Filter](/retail/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
func (o GoogleCloudRetailV2betaRuleFilterActionResponseOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleFilterActionResponse) string { return v.Filter }).(pulumi.StringOutput)
}

// Force returns an attribute/facet in the request around a certain position or above. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Inputs: attribute name, position * Action Result: Will force return a facet key around a certain position or above if the condition is satisfied. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes", the ForceReturnFacetAction.FacetPositionAdjustment.attribute_name is "size" and the ForceReturnFacetAction.FacetPositionAdjustment.position is 8. Two cases: a) The facet key "size" is not already in the top 8 slots, then the facet "size" will appear at a position close to 8. b) The facet key "size" in among the top 8 positions in the request, then it will stay at its current rank.
type GoogleCloudRetailV2betaRuleForceReturnFacetAction struct {
	// Each instance corresponds to a force return attribute for the given condition. There can't be more 3 instances here.
	FacetPositionAdjustments []GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment `pulumi:"facetPositionAdjustments"`
}

// GoogleCloudRetailV2betaRuleForceReturnFacetActionInput is an input type that accepts GoogleCloudRetailV2betaRuleForceReturnFacetActionArgs and GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleForceReturnFacetActionInput` via:
//
//	GoogleCloudRetailV2betaRuleForceReturnFacetActionArgs{...}
type GoogleCloudRetailV2betaRuleForceReturnFacetActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleForceReturnFacetActionOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput
	ToGoogleCloudRetailV2betaRuleForceReturnFacetActionOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput
}

// Force returns an attribute/facet in the request around a certain position or above. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Inputs: attribute name, position * Action Result: Will force return a facet key around a certain position or above if the condition is satisfied. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes", the ForceReturnFacetAction.FacetPositionAdjustment.attribute_name is "size" and the ForceReturnFacetAction.FacetPositionAdjustment.position is 8. Two cases: a) The facet key "size" is not already in the top 8 slots, then the facet "size" will appear at a position close to 8. b) The facet key "size" in among the top 8 positions in the request, then it will stay at its current rank.
type GoogleCloudRetailV2betaRuleForceReturnFacetActionArgs struct {
	// Each instance corresponds to a force return attribute for the given condition. There can't be more 3 instances here.
	FacetPositionAdjustments GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayInput `pulumi:"facetPositionAdjustments"`
}

func (GoogleCloudRetailV2betaRuleForceReturnFacetActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleForceReturnFacetAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaRuleForceReturnFacetActionArgs) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput {
	return i.ToGoogleCloudRetailV2betaRuleForceReturnFacetActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleForceReturnFacetActionArgs) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput)
}

func (i GoogleCloudRetailV2betaRuleForceReturnFacetActionArgs) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleForceReturnFacetActionArgs) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput).ToGoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrInput is an input type that accepts GoogleCloudRetailV2betaRuleForceReturnFacetActionArgs, GoogleCloudRetailV2betaRuleForceReturnFacetActionPtr and GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrInput` via:
//
//	        GoogleCloudRetailV2betaRuleForceReturnFacetActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput
	ToGoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput
}

type googleCloudRetailV2betaRuleForceReturnFacetActionPtrType GoogleCloudRetailV2betaRuleForceReturnFacetActionArgs

func GoogleCloudRetailV2betaRuleForceReturnFacetActionPtr(v *GoogleCloudRetailV2betaRuleForceReturnFacetActionArgs) GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrInput {
	return (*googleCloudRetailV2betaRuleForceReturnFacetActionPtrType)(v)
}

func (*googleCloudRetailV2betaRuleForceReturnFacetActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleForceReturnFacetAction)(nil)).Elem()
}

func (i *googleCloudRetailV2betaRuleForceReturnFacetActionPtrType) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaRuleForceReturnFacetActionPtrType) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput)
}

// Force returns an attribute/facet in the request around a certain position or above. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Inputs: attribute name, position * Action Result: Will force return a facet key around a certain position or above if the condition is satisfied. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes", the ForceReturnFacetAction.FacetPositionAdjustment.attribute_name is "size" and the ForceReturnFacetAction.FacetPositionAdjustment.position is 8. Two cases: a) The facet key "size" is not already in the top 8 slots, then the facet "size" will appear at a position close to 8. b) The facet key "size" in among the top 8 positions in the request, then it will stay at its current rank.
type GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleForceReturnFacetAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput {
	return o.ToGoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaRuleForceReturnFacetAction) *GoogleCloudRetailV2betaRuleForceReturnFacetAction {
		return &v
	}).(GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput)
}

// Each instance corresponds to a force return attribute for the given condition. There can't be more 3 instances here.
func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput) FacetPositionAdjustments() GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleForceReturnFacetAction) []GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment {
		return v.FacetPositionAdjustments
	}).(GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput)
}

type GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleForceReturnFacetAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput) Elem() GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleForceReturnFacetAction) GoogleCloudRetailV2betaRuleForceReturnFacetAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaRuleForceReturnFacetAction
		return ret
	}).(GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput)
}

// Each instance corresponds to a force return attribute for the given condition. There can't be more 3 instances here.
func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput) FacetPositionAdjustments() GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleForceReturnFacetAction) []GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment {
		if v == nil {
			return nil
		}
		return v.FacetPositionAdjustments
	}).(GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput)
}

// Each facet position adjustment consists of a single attribute name (i.e. facet key) along with a specified position.
type GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment struct {
	// The attribute name to force return as a facet. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters long.
	AttributeName *string `pulumi:"attributeName"`
	// This is the position in the request as explained above. It should be strictly positive be at most 100.
	Position *int `pulumi:"position"`
}

// GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentInput is an input type that accepts GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArgs and GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentInput` via:
//
//	GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArgs{...}
type GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput
	ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput
}

// Each facet position adjustment consists of a single attribute name (i.e. facet key) along with a specified position.
type GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArgs struct {
	// The attribute name to force return as a facet. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters long.
	AttributeName pulumi.StringPtrInput `pulumi:"attributeName"`
	// This is the position in the request as explained above. It should be strictly positive be at most 100.
	Position pulumi.IntPtrInput `pulumi:"position"`
}

func (GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArgs) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput {
	return i.ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArgs) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput)
}

// GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayInput is an input type that accepts GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArray and GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayInput` via:
//
//	GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArray{ GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArgs{...} }
type GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput
	ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput
}

type GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArray []GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentInput

func (GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArray) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput {
	return i.ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArray) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput)
}

// Each facet position adjustment consists of a single attribute name (i.e. facet key) along with a specified position.
type GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput {
	return o
}

// The attribute name to force return as a facet. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters long.
func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment) *string {
		return v.AttributeName
	}).(pulumi.StringPtrOutput)
}

// This is the position in the request as explained above. It should be strictly positive be at most 100.
func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput) Position() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment) *int {
		return v.Position
	}).(pulumi.IntPtrOutput)
}

type GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment {
		return vs[0].([]GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustment)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput)
}

// Each facet position adjustment consists of a single attribute name (i.e. facet key) along with a specified position.
type GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponse struct {
	// The attribute name to force return as a facet. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters long.
	AttributeName string `pulumi:"attributeName"`
	// This is the position in the request as explained above. It should be strictly positive be at most 100.
	Position int `pulumi:"position"`
}

// Each facet position adjustment consists of a single attribute name (i.e. facet key) along with a specified position.
type GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput {
	return o
}

// The attribute name to force return as a facet. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters long.
func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput) AttributeName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponse) string {
		return v.AttributeName
	}).(pulumi.StringOutput)
}

// This is the position in the request as explained above. It should be strictly positive be at most 100.
func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponse) int {
		return v.Position
	}).(pulumi.IntOutput)
}

type GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponse {
		return vs[0].([]GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponse)[vs[1].(int)]
	}).(GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput)
}

// Force returns an attribute/facet in the request around a certain position or above. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Inputs: attribute name, position * Action Result: Will force return a facet key around a certain position or above if the condition is satisfied. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes", the ForceReturnFacetAction.FacetPositionAdjustment.attribute_name is "size" and the ForceReturnFacetAction.FacetPositionAdjustment.position is 8. Two cases: a) The facet key "size" is not already in the top 8 slots, then the facet "size" will appear at a position close to 8. b) The facet key "size" in among the top 8 positions in the request, then it will stay at its current rank.
type GoogleCloudRetailV2betaRuleForceReturnFacetActionResponse struct {
	// Each instance corresponds to a force return attribute for the given condition. There can't be more 3 instances here.
	FacetPositionAdjustments []GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponse `pulumi:"facetPositionAdjustments"`
}

// Force returns an attribute/facet in the request around a certain position or above. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Inputs: attribute name, position * Action Result: Will force return a facet key around a certain position or above if the condition is satisfied. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes", the ForceReturnFacetAction.FacetPositionAdjustment.attribute_name is "size" and the ForceReturnFacetAction.FacetPositionAdjustment.position is 8. Two cases: a) The facet key "size" is not already in the top 8 slots, then the facet "size" will appear at a position close to 8. b) The facet key "size" in among the top 8 positions in the request, then it will stay at its current rank.
type GoogleCloudRetailV2betaRuleForceReturnFacetActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleForceReturnFacetActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleForceReturnFacetActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionResponseOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionResponseOutput() GoogleCloudRetailV2betaRuleForceReturnFacetActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionResponseOutput) ToGoogleCloudRetailV2betaRuleForceReturnFacetActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleForceReturnFacetActionResponseOutput {
	return o
}

// Each instance corresponds to a force return attribute for the given condition. There can't be more 3 instances here.
func (o GoogleCloudRetailV2betaRuleForceReturnFacetActionResponseOutput) FacetPositionAdjustments() GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleForceReturnFacetActionResponse) []GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponse {
		return v.FacetPositionAdjustments
	}).(GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput)
}

// Prevents a term in the query from being used in search. Example: Don't search for "shoddy".
type GoogleCloudRetailV2betaRuleIgnoreAction struct {
	// Terms to ignore in the search query.
	IgnoreTerms []string `pulumi:"ignoreTerms"`
}

// GoogleCloudRetailV2betaRuleIgnoreActionInput is an input type that accepts GoogleCloudRetailV2betaRuleIgnoreActionArgs and GoogleCloudRetailV2betaRuleIgnoreActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleIgnoreActionInput` via:
//
//	GoogleCloudRetailV2betaRuleIgnoreActionArgs{...}
type GoogleCloudRetailV2betaRuleIgnoreActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleIgnoreActionOutput() GoogleCloudRetailV2betaRuleIgnoreActionOutput
	ToGoogleCloudRetailV2betaRuleIgnoreActionOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleIgnoreActionOutput
}

// Prevents a term in the query from being used in search. Example: Don't search for "shoddy".
type GoogleCloudRetailV2betaRuleIgnoreActionArgs struct {
	// Terms to ignore in the search query.
	IgnoreTerms pulumi.StringArrayInput `pulumi:"ignoreTerms"`
}

func (GoogleCloudRetailV2betaRuleIgnoreActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleIgnoreAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaRuleIgnoreActionArgs) ToGoogleCloudRetailV2betaRuleIgnoreActionOutput() GoogleCloudRetailV2betaRuleIgnoreActionOutput {
	return i.ToGoogleCloudRetailV2betaRuleIgnoreActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleIgnoreActionArgs) ToGoogleCloudRetailV2betaRuleIgnoreActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleIgnoreActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleIgnoreActionOutput)
}

func (i GoogleCloudRetailV2betaRuleIgnoreActionArgs) ToGoogleCloudRetailV2betaRuleIgnoreActionPtrOutput() GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleIgnoreActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleIgnoreActionArgs) ToGoogleCloudRetailV2betaRuleIgnoreActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleIgnoreActionOutput).ToGoogleCloudRetailV2betaRuleIgnoreActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaRuleIgnoreActionPtrInput is an input type that accepts GoogleCloudRetailV2betaRuleIgnoreActionArgs, GoogleCloudRetailV2betaRuleIgnoreActionPtr and GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleIgnoreActionPtrInput` via:
//
//	        GoogleCloudRetailV2betaRuleIgnoreActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaRuleIgnoreActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleIgnoreActionPtrOutput() GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput
	ToGoogleCloudRetailV2betaRuleIgnoreActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput
}

type googleCloudRetailV2betaRuleIgnoreActionPtrType GoogleCloudRetailV2betaRuleIgnoreActionArgs

func GoogleCloudRetailV2betaRuleIgnoreActionPtr(v *GoogleCloudRetailV2betaRuleIgnoreActionArgs) GoogleCloudRetailV2betaRuleIgnoreActionPtrInput {
	return (*googleCloudRetailV2betaRuleIgnoreActionPtrType)(v)
}

func (*googleCloudRetailV2betaRuleIgnoreActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleIgnoreAction)(nil)).Elem()
}

func (i *googleCloudRetailV2betaRuleIgnoreActionPtrType) ToGoogleCloudRetailV2betaRuleIgnoreActionPtrOutput() GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleIgnoreActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaRuleIgnoreActionPtrType) ToGoogleCloudRetailV2betaRuleIgnoreActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput)
}

// Prevents a term in the query from being used in search. Example: Don't search for "shoddy".
type GoogleCloudRetailV2betaRuleIgnoreActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleIgnoreActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleIgnoreAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleIgnoreActionOutput) ToGoogleCloudRetailV2betaRuleIgnoreActionOutput() GoogleCloudRetailV2betaRuleIgnoreActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleIgnoreActionOutput) ToGoogleCloudRetailV2betaRuleIgnoreActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleIgnoreActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleIgnoreActionOutput) ToGoogleCloudRetailV2betaRuleIgnoreActionPtrOutput() GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput {
	return o.ToGoogleCloudRetailV2betaRuleIgnoreActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaRuleIgnoreActionOutput) ToGoogleCloudRetailV2betaRuleIgnoreActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaRuleIgnoreAction) *GoogleCloudRetailV2betaRuleIgnoreAction {
		return &v
	}).(GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput)
}

// Terms to ignore in the search query.
func (o GoogleCloudRetailV2betaRuleIgnoreActionOutput) IgnoreTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleIgnoreAction) []string { return v.IgnoreTerms }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleIgnoreAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput) ToGoogleCloudRetailV2betaRuleIgnoreActionPtrOutput() GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput) ToGoogleCloudRetailV2betaRuleIgnoreActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput) Elem() GoogleCloudRetailV2betaRuleIgnoreActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleIgnoreAction) GoogleCloudRetailV2betaRuleIgnoreAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaRuleIgnoreAction
		return ret
	}).(GoogleCloudRetailV2betaRuleIgnoreActionOutput)
}

// Terms to ignore in the search query.
func (o GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput) IgnoreTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleIgnoreAction) []string {
		if v == nil {
			return nil
		}
		return v.IgnoreTerms
	}).(pulumi.StringArrayOutput)
}

// Prevents a term in the query from being used in search. Example: Don't search for "shoddy".
type GoogleCloudRetailV2betaRuleIgnoreActionResponse struct {
	// Terms to ignore in the search query.
	IgnoreTerms []string `pulumi:"ignoreTerms"`
}

// Prevents a term in the query from being used in search. Example: Don't search for "shoddy".
type GoogleCloudRetailV2betaRuleIgnoreActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleIgnoreActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleIgnoreActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleIgnoreActionResponseOutput) ToGoogleCloudRetailV2betaRuleIgnoreActionResponseOutput() GoogleCloudRetailV2betaRuleIgnoreActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleIgnoreActionResponseOutput) ToGoogleCloudRetailV2betaRuleIgnoreActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleIgnoreActionResponseOutput {
	return o
}

// Terms to ignore in the search query.
func (o GoogleCloudRetailV2betaRuleIgnoreActionResponseOutput) IgnoreTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleIgnoreActionResponse) []string { return v.IgnoreTerms }).(pulumi.StringArrayOutput)
}

// Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. `query_terms` will not be treated as synonyms of each other. Example: "sneakers" will use a synonym of "shoes". "shoes" will not use a synonym of "sneakers".
type GoogleCloudRetailV2betaRuleOnewaySynonymsAction struct {
	// Will be [deprecated = true] post migration;
	OnewayTerms []string `pulumi:"onewayTerms"`
	// Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.
	QueryTerms []string `pulumi:"queryTerms"`
	// Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.
	Synonyms []string `pulumi:"synonyms"`
}

// GoogleCloudRetailV2betaRuleOnewaySynonymsActionInput is an input type that accepts GoogleCloudRetailV2betaRuleOnewaySynonymsActionArgs and GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleOnewaySynonymsActionInput` via:
//
//	GoogleCloudRetailV2betaRuleOnewaySynonymsActionArgs{...}
type GoogleCloudRetailV2betaRuleOnewaySynonymsActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput() GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput
	ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput
}

// Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. `query_terms` will not be treated as synonyms of each other. Example: "sneakers" will use a synonym of "shoes". "shoes" will not use a synonym of "sneakers".
type GoogleCloudRetailV2betaRuleOnewaySynonymsActionArgs struct {
	// Will be [deprecated = true] post migration;
	OnewayTerms pulumi.StringArrayInput `pulumi:"onewayTerms"`
	// Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.
	QueryTerms pulumi.StringArrayInput `pulumi:"queryTerms"`
	// Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.
	Synonyms pulumi.StringArrayInput `pulumi:"synonyms"`
}

func (GoogleCloudRetailV2betaRuleOnewaySynonymsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleOnewaySynonymsAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaRuleOnewaySynonymsActionArgs) ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput() GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput {
	return i.ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleOnewaySynonymsActionArgs) ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput)
}

func (i GoogleCloudRetailV2betaRuleOnewaySynonymsActionArgs) ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput() GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleOnewaySynonymsActionArgs) ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput).ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrInput is an input type that accepts GoogleCloudRetailV2betaRuleOnewaySynonymsActionArgs, GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtr and GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrInput` via:
//
//	        GoogleCloudRetailV2betaRuleOnewaySynonymsActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput() GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput
	ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput
}

type googleCloudRetailV2betaRuleOnewaySynonymsActionPtrType GoogleCloudRetailV2betaRuleOnewaySynonymsActionArgs

func GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtr(v *GoogleCloudRetailV2betaRuleOnewaySynonymsActionArgs) GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrInput {
	return (*googleCloudRetailV2betaRuleOnewaySynonymsActionPtrType)(v)
}

func (*googleCloudRetailV2betaRuleOnewaySynonymsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleOnewaySynonymsAction)(nil)).Elem()
}

func (i *googleCloudRetailV2betaRuleOnewaySynonymsActionPtrType) ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput() GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaRuleOnewaySynonymsActionPtrType) ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput)
}

// Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. `query_terms` will not be treated as synonyms of each other. Example: "sneakers" will use a synonym of "shoes". "shoes" will not use a synonym of "sneakers".
type GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleOnewaySynonymsAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput) ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput() GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput) ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput) ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput() GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput {
	return o.ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput) ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaRuleOnewaySynonymsAction) *GoogleCloudRetailV2betaRuleOnewaySynonymsAction {
		return &v
	}).(GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput) OnewayTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleOnewaySynonymsAction) []string { return v.OnewayTerms }).(pulumi.StringArrayOutput)
}

// Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.
func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleOnewaySynonymsAction) []string { return v.QueryTerms }).(pulumi.StringArrayOutput)
}

// Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.
func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleOnewaySynonymsAction) []string { return v.Synonyms }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleOnewaySynonymsAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput) ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput() GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput) ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput) Elem() GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleOnewaySynonymsAction) GoogleCloudRetailV2betaRuleOnewaySynonymsAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaRuleOnewaySynonymsAction
		return ret
	}).(GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput) OnewayTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleOnewaySynonymsAction) []string {
		if v == nil {
			return nil
		}
		return v.OnewayTerms
	}).(pulumi.StringArrayOutput)
}

// Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.
func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleOnewaySynonymsAction) []string {
		if v == nil {
			return nil
		}
		return v.QueryTerms
	}).(pulumi.StringArrayOutput)
}

// Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.
func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleOnewaySynonymsAction) []string {
		if v == nil {
			return nil
		}
		return v.Synonyms
	}).(pulumi.StringArrayOutput)
}

// Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. `query_terms` will not be treated as synonyms of each other. Example: "sneakers" will use a synonym of "shoes". "shoes" will not use a synonym of "sneakers".
type GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponse struct {
	// Will be [deprecated = true] post migration;
	OnewayTerms []string `pulumi:"onewayTerms"`
	// Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.
	QueryTerms []string `pulumi:"queryTerms"`
	// Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.
	Synonyms []string `pulumi:"synonyms"`
}

// Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. `query_terms` will not be treated as synonyms of each other. Example: "sneakers" will use a synonym of "shoes". "shoes" will not use a synonym of "sneakers".
type GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponseOutput) ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionResponseOutput() GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponseOutput) ToGoogleCloudRetailV2betaRuleOnewaySynonymsActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponseOutput {
	return o
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponseOutput) OnewayTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponse) []string { return v.OnewayTerms }).(pulumi.StringArrayOutput)
}

// Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.
func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponseOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponse) []string { return v.QueryTerms }).(pulumi.StringArrayOutput)
}

// Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.
func (o GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponseOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponse) []string { return v.Synonyms }).(pulumi.StringArrayOutput)
}

// Redirects a shopper to a specific page. * Rule Condition: Must specify Condition.query_terms. * Action Input: Request Query * Action Result: Redirects shopper to provided uri.
type GoogleCloudRetailV2betaRuleRedirectAction struct {
	// URL must have length equal or less than 2000 characters.
	RedirectUri *string `pulumi:"redirectUri"`
}

// GoogleCloudRetailV2betaRuleRedirectActionInput is an input type that accepts GoogleCloudRetailV2betaRuleRedirectActionArgs and GoogleCloudRetailV2betaRuleRedirectActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleRedirectActionInput` via:
//
//	GoogleCloudRetailV2betaRuleRedirectActionArgs{...}
type GoogleCloudRetailV2betaRuleRedirectActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleRedirectActionOutput() GoogleCloudRetailV2betaRuleRedirectActionOutput
	ToGoogleCloudRetailV2betaRuleRedirectActionOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleRedirectActionOutput
}

// Redirects a shopper to a specific page. * Rule Condition: Must specify Condition.query_terms. * Action Input: Request Query * Action Result: Redirects shopper to provided uri.
type GoogleCloudRetailV2betaRuleRedirectActionArgs struct {
	// URL must have length equal or less than 2000 characters.
	RedirectUri pulumi.StringPtrInput `pulumi:"redirectUri"`
}

func (GoogleCloudRetailV2betaRuleRedirectActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleRedirectAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaRuleRedirectActionArgs) ToGoogleCloudRetailV2betaRuleRedirectActionOutput() GoogleCloudRetailV2betaRuleRedirectActionOutput {
	return i.ToGoogleCloudRetailV2betaRuleRedirectActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleRedirectActionArgs) ToGoogleCloudRetailV2betaRuleRedirectActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleRedirectActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleRedirectActionOutput)
}

func (i GoogleCloudRetailV2betaRuleRedirectActionArgs) ToGoogleCloudRetailV2betaRuleRedirectActionPtrOutput() GoogleCloudRetailV2betaRuleRedirectActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleRedirectActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleRedirectActionArgs) ToGoogleCloudRetailV2betaRuleRedirectActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleRedirectActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleRedirectActionOutput).ToGoogleCloudRetailV2betaRuleRedirectActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaRuleRedirectActionPtrInput is an input type that accepts GoogleCloudRetailV2betaRuleRedirectActionArgs, GoogleCloudRetailV2betaRuleRedirectActionPtr and GoogleCloudRetailV2betaRuleRedirectActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleRedirectActionPtrInput` via:
//
//	        GoogleCloudRetailV2betaRuleRedirectActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaRuleRedirectActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleRedirectActionPtrOutput() GoogleCloudRetailV2betaRuleRedirectActionPtrOutput
	ToGoogleCloudRetailV2betaRuleRedirectActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleRedirectActionPtrOutput
}

type googleCloudRetailV2betaRuleRedirectActionPtrType GoogleCloudRetailV2betaRuleRedirectActionArgs

func GoogleCloudRetailV2betaRuleRedirectActionPtr(v *GoogleCloudRetailV2betaRuleRedirectActionArgs) GoogleCloudRetailV2betaRuleRedirectActionPtrInput {
	return (*googleCloudRetailV2betaRuleRedirectActionPtrType)(v)
}

func (*googleCloudRetailV2betaRuleRedirectActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleRedirectAction)(nil)).Elem()
}

func (i *googleCloudRetailV2betaRuleRedirectActionPtrType) ToGoogleCloudRetailV2betaRuleRedirectActionPtrOutput() GoogleCloudRetailV2betaRuleRedirectActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleRedirectActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaRuleRedirectActionPtrType) ToGoogleCloudRetailV2betaRuleRedirectActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleRedirectActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleRedirectActionPtrOutput)
}

// Redirects a shopper to a specific page. * Rule Condition: Must specify Condition.query_terms. * Action Input: Request Query * Action Result: Redirects shopper to provided uri.
type GoogleCloudRetailV2betaRuleRedirectActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleRedirectActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleRedirectAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleRedirectActionOutput) ToGoogleCloudRetailV2betaRuleRedirectActionOutput() GoogleCloudRetailV2betaRuleRedirectActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleRedirectActionOutput) ToGoogleCloudRetailV2betaRuleRedirectActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleRedirectActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleRedirectActionOutput) ToGoogleCloudRetailV2betaRuleRedirectActionPtrOutput() GoogleCloudRetailV2betaRuleRedirectActionPtrOutput {
	return o.ToGoogleCloudRetailV2betaRuleRedirectActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaRuleRedirectActionOutput) ToGoogleCloudRetailV2betaRuleRedirectActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleRedirectActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaRuleRedirectAction) *GoogleCloudRetailV2betaRuleRedirectAction {
		return &v
	}).(GoogleCloudRetailV2betaRuleRedirectActionPtrOutput)
}

// URL must have length equal or less than 2000 characters.
func (o GoogleCloudRetailV2betaRuleRedirectActionOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleRedirectAction) *string { return v.RedirectUri }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2betaRuleRedirectActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleRedirectActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleRedirectAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleRedirectActionPtrOutput) ToGoogleCloudRetailV2betaRuleRedirectActionPtrOutput() GoogleCloudRetailV2betaRuleRedirectActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleRedirectActionPtrOutput) ToGoogleCloudRetailV2betaRuleRedirectActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleRedirectActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleRedirectActionPtrOutput) Elem() GoogleCloudRetailV2betaRuleRedirectActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleRedirectAction) GoogleCloudRetailV2betaRuleRedirectAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaRuleRedirectAction
		return ret
	}).(GoogleCloudRetailV2betaRuleRedirectActionOutput)
}

// URL must have length equal or less than 2000 characters.
func (o GoogleCloudRetailV2betaRuleRedirectActionPtrOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleRedirectAction) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

// Redirects a shopper to a specific page. * Rule Condition: Must specify Condition.query_terms. * Action Input: Request Query * Action Result: Redirects shopper to provided uri.
type GoogleCloudRetailV2betaRuleRedirectActionResponse struct {
	// URL must have length equal or less than 2000 characters.
	RedirectUri string `pulumi:"redirectUri"`
}

// Redirects a shopper to a specific page. * Rule Condition: Must specify Condition.query_terms. * Action Input: Request Query * Action Result: Redirects shopper to provided uri.
type GoogleCloudRetailV2betaRuleRedirectActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleRedirectActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleRedirectActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleRedirectActionResponseOutput) ToGoogleCloudRetailV2betaRuleRedirectActionResponseOutput() GoogleCloudRetailV2betaRuleRedirectActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleRedirectActionResponseOutput) ToGoogleCloudRetailV2betaRuleRedirectActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleRedirectActionResponseOutput {
	return o
}

// URL must have length equal or less than 2000 characters.
func (o GoogleCloudRetailV2betaRuleRedirectActionResponseOutput) RedirectUri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleRedirectActionResponse) string { return v.RedirectUri }).(pulumi.StringOutput)
}

// Removes an attribute/facet in the request if is present. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Input: attribute name * Action Result: Will remove the attribute (as a facet) from the request if it is present. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes" and the attribute name "size", then facet key "size" will be removed from the request (if it is present).
type GoogleCloudRetailV2betaRuleRemoveFacetAction struct {
	// The attribute names (i.e. facet keys) to remove from the dynamic facets (if present in the request). There can't be more 3 attribute names. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters.
	AttributeNames []string `pulumi:"attributeNames"`
}

// GoogleCloudRetailV2betaRuleRemoveFacetActionInput is an input type that accepts GoogleCloudRetailV2betaRuleRemoveFacetActionArgs and GoogleCloudRetailV2betaRuleRemoveFacetActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleRemoveFacetActionInput` via:
//
//	GoogleCloudRetailV2betaRuleRemoveFacetActionArgs{...}
type GoogleCloudRetailV2betaRuleRemoveFacetActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleRemoveFacetActionOutput() GoogleCloudRetailV2betaRuleRemoveFacetActionOutput
	ToGoogleCloudRetailV2betaRuleRemoveFacetActionOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleRemoveFacetActionOutput
}

// Removes an attribute/facet in the request if is present. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Input: attribute name * Action Result: Will remove the attribute (as a facet) from the request if it is present. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes" and the attribute name "size", then facet key "size" will be removed from the request (if it is present).
type GoogleCloudRetailV2betaRuleRemoveFacetActionArgs struct {
	// The attribute names (i.e. facet keys) to remove from the dynamic facets (if present in the request). There can't be more 3 attribute names. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters.
	AttributeNames pulumi.StringArrayInput `pulumi:"attributeNames"`
}

func (GoogleCloudRetailV2betaRuleRemoveFacetActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleRemoveFacetAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaRuleRemoveFacetActionArgs) ToGoogleCloudRetailV2betaRuleRemoveFacetActionOutput() GoogleCloudRetailV2betaRuleRemoveFacetActionOutput {
	return i.ToGoogleCloudRetailV2betaRuleRemoveFacetActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleRemoveFacetActionArgs) ToGoogleCloudRetailV2betaRuleRemoveFacetActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleRemoveFacetActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleRemoveFacetActionOutput)
}

func (i GoogleCloudRetailV2betaRuleRemoveFacetActionArgs) ToGoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput() GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleRemoveFacetActionArgs) ToGoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleRemoveFacetActionOutput).ToGoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaRuleRemoveFacetActionPtrInput is an input type that accepts GoogleCloudRetailV2betaRuleRemoveFacetActionArgs, GoogleCloudRetailV2betaRuleRemoveFacetActionPtr and GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleRemoveFacetActionPtrInput` via:
//
//	        GoogleCloudRetailV2betaRuleRemoveFacetActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaRuleRemoveFacetActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput() GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput
	ToGoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput
}

type googleCloudRetailV2betaRuleRemoveFacetActionPtrType GoogleCloudRetailV2betaRuleRemoveFacetActionArgs

func GoogleCloudRetailV2betaRuleRemoveFacetActionPtr(v *GoogleCloudRetailV2betaRuleRemoveFacetActionArgs) GoogleCloudRetailV2betaRuleRemoveFacetActionPtrInput {
	return (*googleCloudRetailV2betaRuleRemoveFacetActionPtrType)(v)
}

func (*googleCloudRetailV2betaRuleRemoveFacetActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleRemoveFacetAction)(nil)).Elem()
}

func (i *googleCloudRetailV2betaRuleRemoveFacetActionPtrType) ToGoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput() GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaRuleRemoveFacetActionPtrType) ToGoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput)
}

// Removes an attribute/facet in the request if is present. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Input: attribute name * Action Result: Will remove the attribute (as a facet) from the request if it is present. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes" and the attribute name "size", then facet key "size" will be removed from the request (if it is present).
type GoogleCloudRetailV2betaRuleRemoveFacetActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleRemoveFacetActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleRemoveFacetAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleRemoveFacetActionOutput) ToGoogleCloudRetailV2betaRuleRemoveFacetActionOutput() GoogleCloudRetailV2betaRuleRemoveFacetActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleRemoveFacetActionOutput) ToGoogleCloudRetailV2betaRuleRemoveFacetActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleRemoveFacetActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleRemoveFacetActionOutput) ToGoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput() GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput {
	return o.ToGoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaRuleRemoveFacetActionOutput) ToGoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaRuleRemoveFacetAction) *GoogleCloudRetailV2betaRuleRemoveFacetAction {
		return &v
	}).(GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput)
}

// The attribute names (i.e. facet keys) to remove from the dynamic facets (if present in the request). There can't be more 3 attribute names. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters.
func (o GoogleCloudRetailV2betaRuleRemoveFacetActionOutput) AttributeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleRemoveFacetAction) []string { return v.AttributeNames }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleRemoveFacetAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput) ToGoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput() GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput) ToGoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput) Elem() GoogleCloudRetailV2betaRuleRemoveFacetActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleRemoveFacetAction) GoogleCloudRetailV2betaRuleRemoveFacetAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaRuleRemoveFacetAction
		return ret
	}).(GoogleCloudRetailV2betaRuleRemoveFacetActionOutput)
}

// The attribute names (i.e. facet keys) to remove from the dynamic facets (if present in the request). There can't be more 3 attribute names. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters.
func (o GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput) AttributeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleRemoveFacetAction) []string {
		if v == nil {
			return nil
		}
		return v.AttributeNames
	}).(pulumi.StringArrayOutput)
}

// Removes an attribute/facet in the request if is present. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Input: attribute name * Action Result: Will remove the attribute (as a facet) from the request if it is present. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes" and the attribute name "size", then facet key "size" will be removed from the request (if it is present).
type GoogleCloudRetailV2betaRuleRemoveFacetActionResponse struct {
	// The attribute names (i.e. facet keys) to remove from the dynamic facets (if present in the request). There can't be more 3 attribute names. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters.
	AttributeNames []string `pulumi:"attributeNames"`
}

// Removes an attribute/facet in the request if is present. * Rule Condition: Must specify non-empty Condition.query_terms (for search only) or Condition.page_categories (for browse only), but can't specify both. * Action Input: attribute name * Action Result: Will remove the attribute (as a facet) from the request if it is present. Example: Suppose the query is "shoes", the Condition.query_terms is "shoes" and the attribute name "size", then facet key "size" will be removed from the request (if it is present).
type GoogleCloudRetailV2betaRuleRemoveFacetActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleRemoveFacetActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleRemoveFacetActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleRemoveFacetActionResponseOutput) ToGoogleCloudRetailV2betaRuleRemoveFacetActionResponseOutput() GoogleCloudRetailV2betaRuleRemoveFacetActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleRemoveFacetActionResponseOutput) ToGoogleCloudRetailV2betaRuleRemoveFacetActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleRemoveFacetActionResponseOutput {
	return o
}

// The attribute names (i.e. facet keys) to remove from the dynamic facets (if present in the request). There can't be more 3 attribute names. Each attribute name should be a valid attribute name, be non-empty and contain at most 80 characters.
func (o GoogleCloudRetailV2betaRuleRemoveFacetActionResponseOutput) AttributeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleRemoveFacetActionResponse) []string { return v.AttributeNames }).(pulumi.StringArrayOutput)
}

// Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace "gShoe" with "google shoe".
type GoogleCloudRetailV2betaRuleReplacementAction struct {
	// Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.
	QueryTerms []string `pulumi:"queryTerms"`
	// Term that will be used for replacement.
	ReplacementTerm *string `pulumi:"replacementTerm"`
	// Will be [deprecated = true] post migration;
	Term *string `pulumi:"term"`
}

// GoogleCloudRetailV2betaRuleReplacementActionInput is an input type that accepts GoogleCloudRetailV2betaRuleReplacementActionArgs and GoogleCloudRetailV2betaRuleReplacementActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleReplacementActionInput` via:
//
//	GoogleCloudRetailV2betaRuleReplacementActionArgs{...}
type GoogleCloudRetailV2betaRuleReplacementActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleReplacementActionOutput() GoogleCloudRetailV2betaRuleReplacementActionOutput
	ToGoogleCloudRetailV2betaRuleReplacementActionOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleReplacementActionOutput
}

// Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace "gShoe" with "google shoe".
type GoogleCloudRetailV2betaRuleReplacementActionArgs struct {
	// Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.
	QueryTerms pulumi.StringArrayInput `pulumi:"queryTerms"`
	// Term that will be used for replacement.
	ReplacementTerm pulumi.StringPtrInput `pulumi:"replacementTerm"`
	// Will be [deprecated = true] post migration;
	Term pulumi.StringPtrInput `pulumi:"term"`
}

func (GoogleCloudRetailV2betaRuleReplacementActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleReplacementAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaRuleReplacementActionArgs) ToGoogleCloudRetailV2betaRuleReplacementActionOutput() GoogleCloudRetailV2betaRuleReplacementActionOutput {
	return i.ToGoogleCloudRetailV2betaRuleReplacementActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleReplacementActionArgs) ToGoogleCloudRetailV2betaRuleReplacementActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleReplacementActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleReplacementActionOutput)
}

func (i GoogleCloudRetailV2betaRuleReplacementActionArgs) ToGoogleCloudRetailV2betaRuleReplacementActionPtrOutput() GoogleCloudRetailV2betaRuleReplacementActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleReplacementActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleReplacementActionArgs) ToGoogleCloudRetailV2betaRuleReplacementActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleReplacementActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleReplacementActionOutput).ToGoogleCloudRetailV2betaRuleReplacementActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaRuleReplacementActionPtrInput is an input type that accepts GoogleCloudRetailV2betaRuleReplacementActionArgs, GoogleCloudRetailV2betaRuleReplacementActionPtr and GoogleCloudRetailV2betaRuleReplacementActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleReplacementActionPtrInput` via:
//
//	        GoogleCloudRetailV2betaRuleReplacementActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaRuleReplacementActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleReplacementActionPtrOutput() GoogleCloudRetailV2betaRuleReplacementActionPtrOutput
	ToGoogleCloudRetailV2betaRuleReplacementActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleReplacementActionPtrOutput
}

type googleCloudRetailV2betaRuleReplacementActionPtrType GoogleCloudRetailV2betaRuleReplacementActionArgs

func GoogleCloudRetailV2betaRuleReplacementActionPtr(v *GoogleCloudRetailV2betaRuleReplacementActionArgs) GoogleCloudRetailV2betaRuleReplacementActionPtrInput {
	return (*googleCloudRetailV2betaRuleReplacementActionPtrType)(v)
}

func (*googleCloudRetailV2betaRuleReplacementActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleReplacementAction)(nil)).Elem()
}

func (i *googleCloudRetailV2betaRuleReplacementActionPtrType) ToGoogleCloudRetailV2betaRuleReplacementActionPtrOutput() GoogleCloudRetailV2betaRuleReplacementActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleReplacementActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaRuleReplacementActionPtrType) ToGoogleCloudRetailV2betaRuleReplacementActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleReplacementActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleReplacementActionPtrOutput)
}

// Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace "gShoe" with "google shoe".
type GoogleCloudRetailV2betaRuleReplacementActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleReplacementActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleReplacementAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleReplacementActionOutput) ToGoogleCloudRetailV2betaRuleReplacementActionOutput() GoogleCloudRetailV2betaRuleReplacementActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleReplacementActionOutput) ToGoogleCloudRetailV2betaRuleReplacementActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleReplacementActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleReplacementActionOutput) ToGoogleCloudRetailV2betaRuleReplacementActionPtrOutput() GoogleCloudRetailV2betaRuleReplacementActionPtrOutput {
	return o.ToGoogleCloudRetailV2betaRuleReplacementActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaRuleReplacementActionOutput) ToGoogleCloudRetailV2betaRuleReplacementActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleReplacementActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaRuleReplacementAction) *GoogleCloudRetailV2betaRuleReplacementAction {
		return &v
	}).(GoogleCloudRetailV2betaRuleReplacementActionPtrOutput)
}

// Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.
func (o GoogleCloudRetailV2betaRuleReplacementActionOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleReplacementAction) []string { return v.QueryTerms }).(pulumi.StringArrayOutput)
}

// Term that will be used for replacement.
func (o GoogleCloudRetailV2betaRuleReplacementActionOutput) ReplacementTerm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleReplacementAction) *string { return v.ReplacementTerm }).(pulumi.StringPtrOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2betaRuleReplacementActionOutput) Term() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleReplacementAction) *string { return v.Term }).(pulumi.StringPtrOutput)
}

type GoogleCloudRetailV2betaRuleReplacementActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleReplacementActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleReplacementAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleReplacementActionPtrOutput) ToGoogleCloudRetailV2betaRuleReplacementActionPtrOutput() GoogleCloudRetailV2betaRuleReplacementActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleReplacementActionPtrOutput) ToGoogleCloudRetailV2betaRuleReplacementActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleReplacementActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleReplacementActionPtrOutput) Elem() GoogleCloudRetailV2betaRuleReplacementActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleReplacementAction) GoogleCloudRetailV2betaRuleReplacementAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaRuleReplacementAction
		return ret
	}).(GoogleCloudRetailV2betaRuleReplacementActionOutput)
}

// Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.
func (o GoogleCloudRetailV2betaRuleReplacementActionPtrOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleReplacementAction) []string {
		if v == nil {
			return nil
		}
		return v.QueryTerms
	}).(pulumi.StringArrayOutput)
}

// Term that will be used for replacement.
func (o GoogleCloudRetailV2betaRuleReplacementActionPtrOutput) ReplacementTerm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleReplacementAction) *string {
		if v == nil {
			return nil
		}
		return v.ReplacementTerm
	}).(pulumi.StringPtrOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2betaRuleReplacementActionPtrOutput) Term() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleReplacementAction) *string {
		if v == nil {
			return nil
		}
		return v.Term
	}).(pulumi.StringPtrOutput)
}

// Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace "gShoe" with "google shoe".
type GoogleCloudRetailV2betaRuleReplacementActionResponse struct {
	// Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.
	QueryTerms []string `pulumi:"queryTerms"`
	// Term that will be used for replacement.
	ReplacementTerm string `pulumi:"replacementTerm"`
	// Will be [deprecated = true] post migration;
	Term string `pulumi:"term"`
}

// Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace "gShoe" with "google shoe".
type GoogleCloudRetailV2betaRuleReplacementActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleReplacementActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleReplacementActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleReplacementActionResponseOutput) ToGoogleCloudRetailV2betaRuleReplacementActionResponseOutput() GoogleCloudRetailV2betaRuleReplacementActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleReplacementActionResponseOutput) ToGoogleCloudRetailV2betaRuleReplacementActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleReplacementActionResponseOutput {
	return o
}

// Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.
func (o GoogleCloudRetailV2betaRuleReplacementActionResponseOutput) QueryTerms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleReplacementActionResponse) []string { return v.QueryTerms }).(pulumi.StringArrayOutput)
}

// Term that will be used for replacement.
func (o GoogleCloudRetailV2betaRuleReplacementActionResponseOutput) ReplacementTerm() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleReplacementActionResponse) string { return v.ReplacementTerm }).(pulumi.StringOutput)
}

// Will be [deprecated = true] post migration;
func (o GoogleCloudRetailV2betaRuleReplacementActionResponseOutput) Term() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleReplacementActionResponse) string { return v.Term }).(pulumi.StringOutput)
}

// A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently rules only work for controls with SOLUTION_TYPE_SEARCH.
type GoogleCloudRetailV2betaRuleResponse struct {
	// A boost action.
	BoostAction GoogleCloudRetailV2betaRuleBoostActionResponse `pulumi:"boostAction"`
	// The condition that triggers the rule. If the condition is empty, the rule will always apply.
	Condition GoogleCloudRetailV2betaConditionResponse `pulumi:"condition"`
	// Prevents term from being associated with other terms.
	DoNotAssociateAction GoogleCloudRetailV2betaRuleDoNotAssociateActionResponse `pulumi:"doNotAssociateAction"`
	// Filters results.
	FilterAction GoogleCloudRetailV2betaRuleFilterActionResponse `pulumi:"filterAction"`
	// Force returns an attribute as a facet in the request.
	ForceReturnFacetAction GoogleCloudRetailV2betaRuleForceReturnFacetActionResponse `pulumi:"forceReturnFacetAction"`
	// Ignores specific terms from query during search.
	IgnoreAction GoogleCloudRetailV2betaRuleIgnoreActionResponse `pulumi:"ignoreAction"`
	// Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.
	OnewaySynonymsAction GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponse `pulumi:"onewaySynonymsAction"`
	// Redirects a shopper to a specific page.
	RedirectAction GoogleCloudRetailV2betaRuleRedirectActionResponse `pulumi:"redirectAction"`
	// Remove an attribute as a facet in the request (if present).
	RemoveFacetAction GoogleCloudRetailV2betaRuleRemoveFacetActionResponse `pulumi:"removeFacetAction"`
	// Replaces specific terms in the query.
	ReplacementAction GoogleCloudRetailV2betaRuleReplacementActionResponse `pulumi:"replacementAction"`
	// Treats a set of terms as synonyms of one another.
	TwowaySynonymsAction GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponse `pulumi:"twowaySynonymsAction"`
}

// A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently rules only work for controls with SOLUTION_TYPE_SEARCH.
type GoogleCloudRetailV2betaRuleResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleResponseOutput) ToGoogleCloudRetailV2betaRuleResponseOutput() GoogleCloudRetailV2betaRuleResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleResponseOutput) ToGoogleCloudRetailV2betaRuleResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleResponseOutput {
	return o
}

// A boost action.
func (o GoogleCloudRetailV2betaRuleResponseOutput) BoostAction() GoogleCloudRetailV2betaRuleBoostActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleResponse) GoogleCloudRetailV2betaRuleBoostActionResponse {
		return v.BoostAction
	}).(GoogleCloudRetailV2betaRuleBoostActionResponseOutput)
}

// The condition that triggers the rule. If the condition is empty, the rule will always apply.
func (o GoogleCloudRetailV2betaRuleResponseOutput) Condition() GoogleCloudRetailV2betaConditionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleResponse) GoogleCloudRetailV2betaConditionResponse {
		return v.Condition
	}).(GoogleCloudRetailV2betaConditionResponseOutput)
}

// Prevents term from being associated with other terms.
func (o GoogleCloudRetailV2betaRuleResponseOutput) DoNotAssociateAction() GoogleCloudRetailV2betaRuleDoNotAssociateActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleResponse) GoogleCloudRetailV2betaRuleDoNotAssociateActionResponse {
		return v.DoNotAssociateAction
	}).(GoogleCloudRetailV2betaRuleDoNotAssociateActionResponseOutput)
}

// Filters results.
func (o GoogleCloudRetailV2betaRuleResponseOutput) FilterAction() GoogleCloudRetailV2betaRuleFilterActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleResponse) GoogleCloudRetailV2betaRuleFilterActionResponse {
		return v.FilterAction
	}).(GoogleCloudRetailV2betaRuleFilterActionResponseOutput)
}

// Force returns an attribute as a facet in the request.
func (o GoogleCloudRetailV2betaRuleResponseOutput) ForceReturnFacetAction() GoogleCloudRetailV2betaRuleForceReturnFacetActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleResponse) GoogleCloudRetailV2betaRuleForceReturnFacetActionResponse {
		return v.ForceReturnFacetAction
	}).(GoogleCloudRetailV2betaRuleForceReturnFacetActionResponseOutput)
}

// Ignores specific terms from query during search.
func (o GoogleCloudRetailV2betaRuleResponseOutput) IgnoreAction() GoogleCloudRetailV2betaRuleIgnoreActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleResponse) GoogleCloudRetailV2betaRuleIgnoreActionResponse {
		return v.IgnoreAction
	}).(GoogleCloudRetailV2betaRuleIgnoreActionResponseOutput)
}

// Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.
func (o GoogleCloudRetailV2betaRuleResponseOutput) OnewaySynonymsAction() GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleResponse) GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponse {
		return v.OnewaySynonymsAction
	}).(GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponseOutput)
}

// Redirects a shopper to a specific page.
func (o GoogleCloudRetailV2betaRuleResponseOutput) RedirectAction() GoogleCloudRetailV2betaRuleRedirectActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleResponse) GoogleCloudRetailV2betaRuleRedirectActionResponse {
		return v.RedirectAction
	}).(GoogleCloudRetailV2betaRuleRedirectActionResponseOutput)
}

// Remove an attribute as a facet in the request (if present).
func (o GoogleCloudRetailV2betaRuleResponseOutput) RemoveFacetAction() GoogleCloudRetailV2betaRuleRemoveFacetActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleResponse) GoogleCloudRetailV2betaRuleRemoveFacetActionResponse {
		return v.RemoveFacetAction
	}).(GoogleCloudRetailV2betaRuleRemoveFacetActionResponseOutput)
}

// Replaces specific terms in the query.
func (o GoogleCloudRetailV2betaRuleResponseOutput) ReplacementAction() GoogleCloudRetailV2betaRuleReplacementActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleResponse) GoogleCloudRetailV2betaRuleReplacementActionResponse {
		return v.ReplacementAction
	}).(GoogleCloudRetailV2betaRuleReplacementActionResponseOutput)
}

// Treats a set of terms as synonyms of one another.
func (o GoogleCloudRetailV2betaRuleResponseOutput) TwowaySynonymsAction() GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleResponse) GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponse {
		return v.TwowaySynonymsAction
	}).(GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponseOutput)
}

// Creates a set of terms that will be treated as synonyms of each other. Example: synonyms of "sneakers" and "shoes": * "sneakers" will use a synonym of "shoes". * "shoes" will use a synonym of "sneakers".
type GoogleCloudRetailV2betaRuleTwowaySynonymsAction struct {
	// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.
	Synonyms []string `pulumi:"synonyms"`
}

// GoogleCloudRetailV2betaRuleTwowaySynonymsActionInput is an input type that accepts GoogleCloudRetailV2betaRuleTwowaySynonymsActionArgs and GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleTwowaySynonymsActionInput` via:
//
//	GoogleCloudRetailV2betaRuleTwowaySynonymsActionArgs{...}
type GoogleCloudRetailV2betaRuleTwowaySynonymsActionInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput() GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput
	ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput
}

// Creates a set of terms that will be treated as synonyms of each other. Example: synonyms of "sneakers" and "shoes": * "sneakers" will use a synonym of "shoes". * "shoes" will use a synonym of "sneakers".
type GoogleCloudRetailV2betaRuleTwowaySynonymsActionArgs struct {
	// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.
	Synonyms pulumi.StringArrayInput `pulumi:"synonyms"`
}

func (GoogleCloudRetailV2betaRuleTwowaySynonymsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleTwowaySynonymsAction)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaRuleTwowaySynonymsActionArgs) ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput() GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput {
	return i.ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleTwowaySynonymsActionArgs) ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput)
}

func (i GoogleCloudRetailV2betaRuleTwowaySynonymsActionArgs) ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput() GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaRuleTwowaySynonymsActionArgs) ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput).ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrInput is an input type that accepts GoogleCloudRetailV2betaRuleTwowaySynonymsActionArgs, GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtr and GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrInput` via:
//
//	        GoogleCloudRetailV2betaRuleTwowaySynonymsActionArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput() GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput
	ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput
}

type googleCloudRetailV2betaRuleTwowaySynonymsActionPtrType GoogleCloudRetailV2betaRuleTwowaySynonymsActionArgs

func GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtr(v *GoogleCloudRetailV2betaRuleTwowaySynonymsActionArgs) GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrInput {
	return (*googleCloudRetailV2betaRuleTwowaySynonymsActionPtrType)(v)
}

func (*googleCloudRetailV2betaRuleTwowaySynonymsActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleTwowaySynonymsAction)(nil)).Elem()
}

func (i *googleCloudRetailV2betaRuleTwowaySynonymsActionPtrType) ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput() GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput {
	return i.ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaRuleTwowaySynonymsActionPtrType) ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput)
}

// Creates a set of terms that will be treated as synonyms of each other. Example: synonyms of "sneakers" and "shoes": * "sneakers" will use a synonym of "shoes". * "shoes" will use a synonym of "sneakers".
type GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleTwowaySynonymsAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput) ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput() GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput) ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput) ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput() GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput {
	return o.ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput) ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaRuleTwowaySynonymsAction) *GoogleCloudRetailV2betaRuleTwowaySynonymsAction {
		return &v
	}).(GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput)
}

// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.
func (o GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleTwowaySynonymsAction) []string { return v.Synonyms }).(pulumi.StringArrayOutput)
}

type GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaRuleTwowaySynonymsAction)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput) ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput() GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput) ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput) Elem() GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleTwowaySynonymsAction) GoogleCloudRetailV2betaRuleTwowaySynonymsAction {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaRuleTwowaySynonymsAction
		return ret
	}).(GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput)
}

// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.
func (o GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaRuleTwowaySynonymsAction) []string {
		if v == nil {
			return nil
		}
		return v.Synonyms
	}).(pulumi.StringArrayOutput)
}

// Creates a set of terms that will be treated as synonyms of each other. Example: synonyms of "sneakers" and "shoes": * "sneakers" will use a synonym of "shoes". * "shoes" will use a synonym of "sneakers".
type GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponse struct {
	// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.
	Synonyms []string `pulumi:"synonyms"`
}

// Creates a set of terms that will be treated as synonyms of each other. Example: synonyms of "sneakers" and "shoes": * "sneakers" will use a synonym of "shoes". * "shoes" will use a synonym of "sneakers".
type GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponseOutput) ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionResponseOutput() GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponseOutput) ToGoogleCloudRetailV2betaRuleTwowaySynonymsActionResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponseOutput {
	return o
}

// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.
func (o GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponseOutput) Synonyms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponse) []string { return v.Synonyms }).(pulumi.StringArrayOutput)
}

// The specifications of dynamically generated facets.
type GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec struct {
	// Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.
	Mode *GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecMode `pulumi:"mode"`
}

// GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecInput is an input type that accepts GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecArgs and GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecInput` via:
//
//	GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecArgs{...}
type GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput() GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput
	ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutputWithContext(context.Context) GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput
}

// The specifications of dynamically generated facets.
type GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecArgs struct {
	// Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.
	Mode GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecModePtrInput `pulumi:"mode"`
}

func (GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecArgs) ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput() GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput {
	return i.ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecArgs) ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput)
}

func (i GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecArgs) ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput {
	return i.ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecArgs) ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput).ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrInput is an input type that accepts GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecArgs, GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtr and GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrInput` via:
//
//	        GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput
	ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput
}

type googleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrType GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecArgs

func GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtr(v *GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecArgs) GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrInput {
	return (*googleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrType)(v)
}

func (*googleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec)(nil)).Elem()
}

func (i *googleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrType) ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput {
	return i.ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrType) ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput)
}

// The specifications of dynamically generated facets.
type GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput) ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput() GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput) ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput) ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput {
	return o.ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput) ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec) *GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec {
		return &v
	}).(GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput)
}

// Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.
func (o GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput) Mode() GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecModePtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec) *GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecMode {
		return v.Mode
	}).(GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecModePtrOutput)
}

type GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput) ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput) ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput) Elem() GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec) GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec
		return ret
	}).(GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput)
}

// Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.
func (o GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput) Mode() GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecModePtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec) *GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecMode {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecModePtrOutput)
}

// The specifications of dynamically generated facets.
type GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponse struct {
	// Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.
	Mode string `pulumi:"mode"`
}

// The specifications of dynamically generated facets.
type GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponseOutput) ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponseOutput() GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponseOutput) ToGoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponseOutput {
	return o
}

// Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.
func (o GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponseOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponse) string { return v.Mode }).(pulumi.StringOutput)
}

// A facet specification to perform faceted search.
type GoogleCloudRetailV2betaSearchRequestFacetSpec struct {
	// Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined by Google Retail Search. It is ordered together with dynamic facets if dynamic facets is enabled. If set to false, the position of this facet in the response is the same as in the request, and it is ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response is determined by Google Retail Search. Another example, assuming you have the following facets in the request: * "rating", enable_dynamic_position = true * "price", enable_dynamic_position = false * "brands", enable_dynamic_position = false And also you have a dynamic facets enable, which generates a facet "gender". Then, the final order of the facets in the response can be ("price", "brands", "rating", "gender") or ("price", "brands", "gender", "rating") depends on how Google Retail Search orders "gender" and "rating" facets. However, notice that "price" and "brands" are always ranked at first and second position because their enable_dynamic_position values are false.
	EnableDynamicPosition *bool `pulumi:"enableDynamicPosition"`
	// List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 products with the color facet "Red" and 200 products with the color facet "Blue". A query containing the filter "colorFamilies:ANY("Red")" and having "colorFamilies" as FacetKey.key would by default return only "Red" products in the search results, and also return "Red" with count 100 as the only color facet. Although there are also blue products available, "Blue" would not be shown as an available facet value. If "colorFamilies" is listed in "excludedFilterKeys", then the query returns the facet values "Red" with count 100 and "Blue" with count 200, because the "colorFamilies" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only "Red" products. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.
	ExcludedFilterKeys []string `pulumi:"excludedFilterKeys"`
	// The facet key specification.
	FacetKey GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey `pulumi:"facetKey"`
	// Maximum of facet values that should be returned for this facet. If unspecified, defaults to 50. The maximum allowed value is 300. Values above 300 will be coerced to 300. If this field is negative, an INVALID_ARGUMENT is returned.
	Limit *int `pulumi:"limit"`
}

// GoogleCloudRetailV2betaSearchRequestFacetSpecInput is an input type that accepts GoogleCloudRetailV2betaSearchRequestFacetSpecArgs and GoogleCloudRetailV2betaSearchRequestFacetSpecOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaSearchRequestFacetSpecInput` via:
//
//	GoogleCloudRetailV2betaSearchRequestFacetSpecArgs{...}
type GoogleCloudRetailV2betaSearchRequestFacetSpecInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaSearchRequestFacetSpecOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecOutput
	ToGoogleCloudRetailV2betaSearchRequestFacetSpecOutputWithContext(context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecOutput
}

// A facet specification to perform faceted search.
type GoogleCloudRetailV2betaSearchRequestFacetSpecArgs struct {
	// Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined by Google Retail Search. It is ordered together with dynamic facets if dynamic facets is enabled. If set to false, the position of this facet in the response is the same as in the request, and it is ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response is determined by Google Retail Search. Another example, assuming you have the following facets in the request: * "rating", enable_dynamic_position = true * "price", enable_dynamic_position = false * "brands", enable_dynamic_position = false And also you have a dynamic facets enable, which generates a facet "gender". Then, the final order of the facets in the response can be ("price", "brands", "rating", "gender") or ("price", "brands", "gender", "rating") depends on how Google Retail Search orders "gender" and "rating" facets. However, notice that "price" and "brands" are always ranked at first and second position because their enable_dynamic_position values are false.
	EnableDynamicPosition pulumi.BoolPtrInput `pulumi:"enableDynamicPosition"`
	// List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 products with the color facet "Red" and 200 products with the color facet "Blue". A query containing the filter "colorFamilies:ANY("Red")" and having "colorFamilies" as FacetKey.key would by default return only "Red" products in the search results, and also return "Red" with count 100 as the only color facet. Although there are also blue products available, "Blue" would not be shown as an available facet value. If "colorFamilies" is listed in "excludedFilterKeys", then the query returns the facet values "Red" with count 100 and "Blue" with count 200, because the "colorFamilies" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only "Red" products. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.
	ExcludedFilterKeys pulumi.StringArrayInput `pulumi:"excludedFilterKeys"`
	// The facet key specification.
	FacetKey GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyInput `pulumi:"facetKey"`
	// Maximum of facet values that should be returned for this facet. If unspecified, defaults to 50. The maximum allowed value is 300. Values above 300 will be coerced to 300. If this field is negative, an INVALID_ARGUMENT is returned.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
}

func (GoogleCloudRetailV2betaSearchRequestFacetSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestFacetSpec)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaSearchRequestFacetSpecArgs) ToGoogleCloudRetailV2betaSearchRequestFacetSpecOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecOutput {
	return i.ToGoogleCloudRetailV2betaSearchRequestFacetSpecOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaSearchRequestFacetSpecArgs) ToGoogleCloudRetailV2betaSearchRequestFacetSpecOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaSearchRequestFacetSpecOutput)
}

func (i GoogleCloudRetailV2betaSearchRequestFacetSpecArgs) ToGoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput {
	return i.ToGoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaSearchRequestFacetSpecArgs) ToGoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaSearchRequestFacetSpecOutput).ToGoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaSearchRequestFacetSpecPtrInput is an input type that accepts GoogleCloudRetailV2betaSearchRequestFacetSpecArgs, GoogleCloudRetailV2betaSearchRequestFacetSpecPtr and GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaSearchRequestFacetSpecPtrInput` via:
//
//	        GoogleCloudRetailV2betaSearchRequestFacetSpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaSearchRequestFacetSpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput
	ToGoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput
}

type googleCloudRetailV2betaSearchRequestFacetSpecPtrType GoogleCloudRetailV2betaSearchRequestFacetSpecArgs

func GoogleCloudRetailV2betaSearchRequestFacetSpecPtr(v *GoogleCloudRetailV2betaSearchRequestFacetSpecArgs) GoogleCloudRetailV2betaSearchRequestFacetSpecPtrInput {
	return (*googleCloudRetailV2betaSearchRequestFacetSpecPtrType)(v)
}

func (*googleCloudRetailV2betaSearchRequestFacetSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaSearchRequestFacetSpec)(nil)).Elem()
}

func (i *googleCloudRetailV2betaSearchRequestFacetSpecPtrType) ToGoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput {
	return i.ToGoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaSearchRequestFacetSpecPtrType) ToGoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput)
}

// A facet specification to perform faceted search.
type GoogleCloudRetailV2betaSearchRequestFacetSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaSearchRequestFacetSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestFacetSpec)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput {
	return o.ToGoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaSearchRequestFacetSpec) *GoogleCloudRetailV2betaSearchRequestFacetSpec {
		return &v
	}).(GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput)
}

// Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined by Google Retail Search. It is ordered together with dynamic facets if dynamic facets is enabled. If set to false, the position of this facet in the response is the same as in the request, and it is ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response is determined by Google Retail Search. Another example, assuming you have the following facets in the request: * "rating", enable_dynamic_position = true * "price", enable_dynamic_position = false * "brands", enable_dynamic_position = false And also you have a dynamic facets enable, which generates a facet "gender". Then, the final order of the facets in the response can be ("price", "brands", "rating", "gender") or ("price", "brands", "gender", "rating") depends on how Google Retail Search orders "gender" and "rating" facets. However, notice that "price" and "brands" are always ranked at first and second position because their enable_dynamic_position values are false.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecOutput) EnableDynamicPosition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpec) *bool { return v.EnableDynamicPosition }).(pulumi.BoolPtrOutput)
}

// List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 products with the color facet "Red" and 200 products with the color facet "Blue". A query containing the filter "colorFamilies:ANY("Red")" and having "colorFamilies" as FacetKey.key would by default return only "Red" products in the search results, and also return "Red" with count 100 as the only color facet. Although there are also blue products available, "Blue" would not be shown as an available facet value. If "colorFamilies" is listed in "excludedFilterKeys", then the query returns the facet values "Red" with count 100 and "Blue" with count 200, because the "colorFamilies" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only "Red" products. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecOutput) ExcludedFilterKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpec) []string { return v.ExcludedFilterKeys }).(pulumi.StringArrayOutput)
}

// The facet key specification.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecOutput) FacetKey() GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpec) GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey {
		return v.FacetKey
	}).(GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput)
}

// Maximum of facet values that should be returned for this facet. If unspecified, defaults to 50. The maximum allowed value is 300. Values above 300 will be coerced to 300. If this field is negative, an INVALID_ARGUMENT is returned.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpec) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

type GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaSearchRequestFacetSpec)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput) Elem() GoogleCloudRetailV2betaSearchRequestFacetSpecOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpec) GoogleCloudRetailV2betaSearchRequestFacetSpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaSearchRequestFacetSpec
		return ret
	}).(GoogleCloudRetailV2betaSearchRequestFacetSpecOutput)
}

// Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined by Google Retail Search. It is ordered together with dynamic facets if dynamic facets is enabled. If set to false, the position of this facet in the response is the same as in the request, and it is ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response is determined by Google Retail Search. Another example, assuming you have the following facets in the request: * "rating", enable_dynamic_position = true * "price", enable_dynamic_position = false * "brands", enable_dynamic_position = false And also you have a dynamic facets enable, which generates a facet "gender". Then, the final order of the facets in the response can be ("price", "brands", "rating", "gender") or ("price", "brands", "gender", "rating") depends on how Google Retail Search orders "gender" and "rating" facets. However, notice that "price" and "brands" are always ranked at first and second position because their enable_dynamic_position values are false.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput) EnableDynamicPosition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpec) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDynamicPosition
	}).(pulumi.BoolPtrOutput)
}

// List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 products with the color facet "Red" and 200 products with the color facet "Blue". A query containing the filter "colorFamilies:ANY("Red")" and having "colorFamilies" as FacetKey.key would by default return only "Red" products in the search results, and also return "Red" with count 100 as the only color facet. Although there are also blue products available, "Blue" would not be shown as an available facet value. If "colorFamilies" is listed in "excludedFilterKeys", then the query returns the facet values "Red" with count 100 and "Blue" with count 200, because the "colorFamilies" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only "Red" products. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput) ExcludedFilterKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpec) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedFilterKeys
	}).(pulumi.StringArrayOutput)
}

// The facet key specification.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput) FacetKey() GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpec) *GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey {
		if v == nil {
			return nil
		}
		return &v.FacetKey
	}).(GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput)
}

// Maximum of facet values that should be returned for this facet. If unspecified, defaults to 50. The maximum allowed value is 300. Values above 300 will be coerced to 300. If this field is negative, an INVALID_ARGUMENT is returned.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpec) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

// Specifies how a facet is computed.
type GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey struct {
	// True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise.
	CaseInsensitive *bool `pulumi:"caseInsensitive"`
	// Only get facet values that contains the given strings. For example, suppose "categories" has three values "Women > Shoe", "Women > Dress" and "Men > Shoe". If set "contains" to "Shoe", the "categories" facet gives only "Women > Shoe" and "Men > Shoe". Only supported on textual fields. Maximum is 10.
	Contains []string `pulumi:"contains"`
	// Set only if values should be bucketized into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 40. For all numerical facet keys that appear in the list of products from the catalog, the percentiles 0, 10, 30, 50, 70, 90, and 100 are computed from their distribution weekly. If the model assigns a high score to a numerical facet key and its intervals are not specified in the search request, these percentiles become the bounds for its intervals and are returned in the response. If the facet key intervals are specified in the request, then the specified intervals are returned instead.
	Intervals []GoogleCloudRetailV2betaInterval `pulumi:"intervals"`
	// Supported textual and numerical facet keys in Product object, over which the facet values are computed. Facet key is case-sensitive. Allowed facet keys when FacetKey.query is not specified: * textual_field = * "brands" * "categories" * "genders" * "ageGroups" * "availability" * "colorFamilies" * "colors" * "sizes" * "materials" * "patterns" * "conditions" * "attributes.key" * "pickupInStore" * "shipToStore" * "sameDayDelivery" * "nextDayDelivery" * "customFulfillment1" * "customFulfillment2" * "customFulfillment3" * "customFulfillment4" * "customFulfillment5" * "inventory(place_id,attributes.key)" * numerical_field = * "price" * "discount" * "rating" * "ratingCount" * "attributes.key" * "inventory(place_id,price)" * "inventory(place_id,original_price)" * "inventory(place_id,attributes.key)"
	Key string `pulumi:"key"`
	// The order in which SearchResponse.Facet.values are returned. Allowed values are: * "count desc", which means order by SearchResponse.Facet.values.count descending. * "value desc", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals; FulfillmentInfo.place_ids are sorted in the order given by FacetSpec.FacetKey.restricted_values.
	OrderBy *string `pulumi:"orderBy"`
	// Only get facet values that start with the given string prefix. For example, suppose "categories" has three values "Women > Shoe", "Women > Dress" and "Men > Shoe". If set "prefixes" to "Women", the "categories" facet gives only "Women > Shoe" and "Women > Dress". Only supported on textual fields. Maximum is 10.
	Prefixes []string `pulumi:"prefixes"`
	// The query that is used to compute facet for the given facet key. When provided, it overrides the default behavior of facet computation. The query syntax is the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Notice that there is no limitation on FacetKey.key when query is specified. In the response, SearchResponse.Facet.values.value is always "1" and SearchResponse.Facet.values.count is the number of results that match the query. For example, you can set a customized facet for "shipToStore", where FacetKey.key is "customizedShipToStore", and FacetKey.query is "availability: ANY(\"IN_STOCK\") AND shipToStore: ANY(\"123\")". Then the facet counts the products that are both in stock and ship to store "123".
	Query *string `pulumi:"query"`
	// Only get facet for the given restricted values. For example, when using "pickupInStore" as key and set restricted values to ["store123", "store456"], only facets for "store123" and "store456" are returned. Only supported on predefined textual fields, custom textual attributes and fulfillments. Maximum is 20. Must be set for the fulfillment facet keys: * pickupInStore * shipToStore * sameDayDelivery * nextDayDelivery * customFulfillment1 * customFulfillment2 * customFulfillment3 * customFulfillment4 * customFulfillment5
	RestrictedValues []string `pulumi:"restrictedValues"`
	// Returns the min and max value for each numerical facet intervals. Ignored for textual facets.
	ReturnMinMax *bool `pulumi:"returnMinMax"`
}

// GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyInput is an input type that accepts GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs and GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyInput` via:
//
//	GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs{...}
type GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput
	ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutputWithContext(context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput
}

// Specifies how a facet is computed.
type GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs struct {
	// True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise.
	CaseInsensitive pulumi.BoolPtrInput `pulumi:"caseInsensitive"`
	// Only get facet values that contains the given strings. For example, suppose "categories" has three values "Women > Shoe", "Women > Dress" and "Men > Shoe". If set "contains" to "Shoe", the "categories" facet gives only "Women > Shoe" and "Men > Shoe". Only supported on textual fields. Maximum is 10.
	Contains pulumi.StringArrayInput `pulumi:"contains"`
	// Set only if values should be bucketized into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 40. For all numerical facet keys that appear in the list of products from the catalog, the percentiles 0, 10, 30, 50, 70, 90, and 100 are computed from their distribution weekly. If the model assigns a high score to a numerical facet key and its intervals are not specified in the search request, these percentiles become the bounds for its intervals and are returned in the response. If the facet key intervals are specified in the request, then the specified intervals are returned instead.
	Intervals GoogleCloudRetailV2betaIntervalArrayInput `pulumi:"intervals"`
	// Supported textual and numerical facet keys in Product object, over which the facet values are computed. Facet key is case-sensitive. Allowed facet keys when FacetKey.query is not specified: * textual_field = * "brands" * "categories" * "genders" * "ageGroups" * "availability" * "colorFamilies" * "colors" * "sizes" * "materials" * "patterns" * "conditions" * "attributes.key" * "pickupInStore" * "shipToStore" * "sameDayDelivery" * "nextDayDelivery" * "customFulfillment1" * "customFulfillment2" * "customFulfillment3" * "customFulfillment4" * "customFulfillment5" * "inventory(place_id,attributes.key)" * numerical_field = * "price" * "discount" * "rating" * "ratingCount" * "attributes.key" * "inventory(place_id,price)" * "inventory(place_id,original_price)" * "inventory(place_id,attributes.key)"
	Key pulumi.StringInput `pulumi:"key"`
	// The order in which SearchResponse.Facet.values are returned. Allowed values are: * "count desc", which means order by SearchResponse.Facet.values.count descending. * "value desc", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals; FulfillmentInfo.place_ids are sorted in the order given by FacetSpec.FacetKey.restricted_values.
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
	// Only get facet values that start with the given string prefix. For example, suppose "categories" has three values "Women > Shoe", "Women > Dress" and "Men > Shoe". If set "prefixes" to "Women", the "categories" facet gives only "Women > Shoe" and "Women > Dress". Only supported on textual fields. Maximum is 10.
	Prefixes pulumi.StringArrayInput `pulumi:"prefixes"`
	// The query that is used to compute facet for the given facet key. When provided, it overrides the default behavior of facet computation. The query syntax is the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Notice that there is no limitation on FacetKey.key when query is specified. In the response, SearchResponse.Facet.values.value is always "1" and SearchResponse.Facet.values.count is the number of results that match the query. For example, you can set a customized facet for "shipToStore", where FacetKey.key is "customizedShipToStore", and FacetKey.query is "availability: ANY(\"IN_STOCK\") AND shipToStore: ANY(\"123\")". Then the facet counts the products that are both in stock and ship to store "123".
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Only get facet for the given restricted values. For example, when using "pickupInStore" as key and set restricted values to ["store123", "store456"], only facets for "store123" and "store456" are returned. Only supported on predefined textual fields, custom textual attributes and fulfillments. Maximum is 20. Must be set for the fulfillment facet keys: * pickupInStore * shipToStore * sameDayDelivery * nextDayDelivery * customFulfillment1 * customFulfillment2 * customFulfillment3 * customFulfillment4 * customFulfillment5
	RestrictedValues pulumi.StringArrayInput `pulumi:"restrictedValues"`
	// Returns the min and max value for each numerical facet intervals. Ignored for textual facets.
	ReturnMinMax pulumi.BoolPtrInput `pulumi:"returnMinMax"`
}

func (GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs) ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput {
	return i.ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs) ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput)
}

func (i GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs) ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput {
	return i.ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs) ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput).ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrInput is an input type that accepts GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs, GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtr and GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrInput` via:
//
//	        GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput
	ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput
}

type googleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrType GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs

func GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtr(v *GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs) GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrInput {
	return (*googleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrType)(v)
}

func (*googleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey)(nil)).Elem()
}

func (i *googleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrType) ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput {
	return i.ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrType) ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput)
}

// Specifies how a facet is computed.
type GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput {
	return o.ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) *GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey {
		return &v
	}).(GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput)
}

// True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) *bool { return v.CaseInsensitive }).(pulumi.BoolPtrOutput)
}

// Only get facet values that contains the given strings. For example, suppose "categories" has three values "Women > Shoe", "Women > Dress" and "Men > Shoe". If set "contains" to "Shoe", the "categories" facet gives only "Women > Shoe" and "Men > Shoe". Only supported on textual fields. Maximum is 10.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput) Contains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) []string { return v.Contains }).(pulumi.StringArrayOutput)
}

// Set only if values should be bucketized into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 40. For all numerical facet keys that appear in the list of products from the catalog, the percentiles 0, 10, 30, 50, 70, 90, and 100 are computed from their distribution weekly. If the model assigns a high score to a numerical facet key and its intervals are not specified in the search request, these percentiles become the bounds for its intervals and are returned in the response. If the facet key intervals are specified in the request, then the specified intervals are returned instead.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput) Intervals() GoogleCloudRetailV2betaIntervalArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) []GoogleCloudRetailV2betaInterval {
		return v.Intervals
	}).(GoogleCloudRetailV2betaIntervalArrayOutput)
}

// Supported textual and numerical facet keys in Product object, over which the facet values are computed. Facet key is case-sensitive. Allowed facet keys when FacetKey.query is not specified: * textual_field = * "brands" * "categories" * "genders" * "ageGroups" * "availability" * "colorFamilies" * "colors" * "sizes" * "materials" * "patterns" * "conditions" * "attributes.key" * "pickupInStore" * "shipToStore" * "sameDayDelivery" * "nextDayDelivery" * "customFulfillment1" * "customFulfillment2" * "customFulfillment3" * "customFulfillment4" * "customFulfillment5" * "inventory(place_id,attributes.key)" * numerical_field = * "price" * "discount" * "rating" * "ratingCount" * "attributes.key" * "inventory(place_id,price)" * "inventory(place_id,original_price)" * "inventory(place_id,attributes.key)"
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) string { return v.Key }).(pulumi.StringOutput)
}

// The order in which SearchResponse.Facet.values are returned. Allowed values are: * "count desc", which means order by SearchResponse.Facet.values.count descending. * "value desc", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals; FulfillmentInfo.place_ids are sorted in the order given by FacetSpec.FacetKey.restricted_values.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

// Only get facet values that start with the given string prefix. For example, suppose "categories" has three values "Women > Shoe", "Women > Dress" and "Men > Shoe". If set "prefixes" to "Women", the "categories" facet gives only "Women > Shoe" and "Women > Dress". Only supported on textual fields. Maximum is 10.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

// The query that is used to compute facet for the given facet key. When provided, it overrides the default behavior of facet computation. The query syntax is the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Notice that there is no limitation on FacetKey.key when query is specified. In the response, SearchResponse.Facet.values.value is always "1" and SearchResponse.Facet.values.count is the number of results that match the query. For example, you can set a customized facet for "shipToStore", where FacetKey.key is "customizedShipToStore", and FacetKey.query is "availability: ANY(\"IN_STOCK\") AND shipToStore: ANY(\"123\")". Then the facet counts the products that are both in stock and ship to store "123".
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Only get facet for the given restricted values. For example, when using "pickupInStore" as key and set restricted values to ["store123", "store456"], only facets for "store123" and "store456" are returned. Only supported on predefined textual fields, custom textual attributes and fulfillments. Maximum is 20. Must be set for the fulfillment facet keys: * pickupInStore * shipToStore * sameDayDelivery * nextDayDelivery * customFulfillment1 * customFulfillment2 * customFulfillment3 * customFulfillment4 * customFulfillment5
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput) RestrictedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) []string { return v.RestrictedValues }).(pulumi.StringArrayOutput)
}

// Returns the min and max value for each numerical facet intervals. Ignored for textual facets.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput) ReturnMinMax() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) *bool { return v.ReturnMinMax }).(pulumi.BoolPtrOutput)
}

type GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput) Elem() GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey
		return ret
	}).(GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput)
}

// True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) *bool {
		if v == nil {
			return nil
		}
		return v.CaseInsensitive
	}).(pulumi.BoolPtrOutput)
}

// Only get facet values that contains the given strings. For example, suppose "categories" has three values "Women > Shoe", "Women > Dress" and "Men > Shoe". If set "contains" to "Shoe", the "categories" facet gives only "Women > Shoe" and "Men > Shoe". Only supported on textual fields. Maximum is 10.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput) Contains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) []string {
		if v == nil {
			return nil
		}
		return v.Contains
	}).(pulumi.StringArrayOutput)
}

// Set only if values should be bucketized into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 40. For all numerical facet keys that appear in the list of products from the catalog, the percentiles 0, 10, 30, 50, 70, 90, and 100 are computed from their distribution weekly. If the model assigns a high score to a numerical facet key and its intervals are not specified in the search request, these percentiles become the bounds for its intervals and are returned in the response. If the facet key intervals are specified in the request, then the specified intervals are returned instead.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput) Intervals() GoogleCloudRetailV2betaIntervalArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) []GoogleCloudRetailV2betaInterval {
		if v == nil {
			return nil
		}
		return v.Intervals
	}).(GoogleCloudRetailV2betaIntervalArrayOutput)
}

// Supported textual and numerical facet keys in Product object, over which the facet values are computed. Facet key is case-sensitive. Allowed facet keys when FacetKey.query is not specified: * textual_field = * "brands" * "categories" * "genders" * "ageGroups" * "availability" * "colorFamilies" * "colors" * "sizes" * "materials" * "patterns" * "conditions" * "attributes.key" * "pickupInStore" * "shipToStore" * "sameDayDelivery" * "nextDayDelivery" * "customFulfillment1" * "customFulfillment2" * "customFulfillment3" * "customFulfillment4" * "customFulfillment5" * "inventory(place_id,attributes.key)" * numerical_field = * "price" * "discount" * "rating" * "ratingCount" * "attributes.key" * "inventory(place_id,price)" * "inventory(place_id,original_price)" * "inventory(place_id,attributes.key)"
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The order in which SearchResponse.Facet.values are returned. Allowed values are: * "count desc", which means order by SearchResponse.Facet.values.count descending. * "value desc", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals; FulfillmentInfo.place_ids are sorted in the order given by FacetSpec.FacetKey.restricted_values.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) *string {
		if v == nil {
			return nil
		}
		return v.OrderBy
	}).(pulumi.StringPtrOutput)
}

// Only get facet values that start with the given string prefix. For example, suppose "categories" has three values "Women > Shoe", "Women > Dress" and "Men > Shoe". If set "prefixes" to "Women", the "categories" facet gives only "Women > Shoe" and "Women > Dress". Only supported on textual fields. Maximum is 10.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) []string {
		if v == nil {
			return nil
		}
		return v.Prefixes
	}).(pulumi.StringArrayOutput)
}

// The query that is used to compute facet for the given facet key. When provided, it overrides the default behavior of facet computation. The query syntax is the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Notice that there is no limitation on FacetKey.key when query is specified. In the response, SearchResponse.Facet.values.value is always "1" and SearchResponse.Facet.values.count is the number of results that match the query. For example, you can set a customized facet for "shipToStore", where FacetKey.key is "customizedShipToStore", and FacetKey.query is "availability: ANY(\"IN_STOCK\") AND shipToStore: ANY(\"123\")". Then the facet counts the products that are both in stock and ship to store "123".
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// Only get facet for the given restricted values. For example, when using "pickupInStore" as key and set restricted values to ["store123", "store456"], only facets for "store123" and "store456" are returned. Only supported on predefined textual fields, custom textual attributes and fulfillments. Maximum is 20. Must be set for the fulfillment facet keys: * pickupInStore * shipToStore * sameDayDelivery * nextDayDelivery * customFulfillment1 * customFulfillment2 * customFulfillment3 * customFulfillment4 * customFulfillment5
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput) RestrictedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) []string {
		if v == nil {
			return nil
		}
		return v.RestrictedValues
	}).(pulumi.StringArrayOutput)
}

// Returns the min and max value for each numerical facet intervals. Ignored for textual facets.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput) ReturnMinMax() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey) *bool {
		if v == nil {
			return nil
		}
		return v.ReturnMinMax
	}).(pulumi.BoolPtrOutput)
}

// Specifies how a facet is computed.
type GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponse struct {
	// True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise.
	CaseInsensitive bool `pulumi:"caseInsensitive"`
	// Only get facet values that contains the given strings. For example, suppose "categories" has three values "Women > Shoe", "Women > Dress" and "Men > Shoe". If set "contains" to "Shoe", the "categories" facet gives only "Women > Shoe" and "Men > Shoe". Only supported on textual fields. Maximum is 10.
	Contains []string `pulumi:"contains"`
	// Set only if values should be bucketized into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 40. For all numerical facet keys that appear in the list of products from the catalog, the percentiles 0, 10, 30, 50, 70, 90, and 100 are computed from their distribution weekly. If the model assigns a high score to a numerical facet key and its intervals are not specified in the search request, these percentiles become the bounds for its intervals and are returned in the response. If the facet key intervals are specified in the request, then the specified intervals are returned instead.
	Intervals []GoogleCloudRetailV2betaIntervalResponse `pulumi:"intervals"`
	// Supported textual and numerical facet keys in Product object, over which the facet values are computed. Facet key is case-sensitive. Allowed facet keys when FacetKey.query is not specified: * textual_field = * "brands" * "categories" * "genders" * "ageGroups" * "availability" * "colorFamilies" * "colors" * "sizes" * "materials" * "patterns" * "conditions" * "attributes.key" * "pickupInStore" * "shipToStore" * "sameDayDelivery" * "nextDayDelivery" * "customFulfillment1" * "customFulfillment2" * "customFulfillment3" * "customFulfillment4" * "customFulfillment5" * "inventory(place_id,attributes.key)" * numerical_field = * "price" * "discount" * "rating" * "ratingCount" * "attributes.key" * "inventory(place_id,price)" * "inventory(place_id,original_price)" * "inventory(place_id,attributes.key)"
	Key string `pulumi:"key"`
	// The order in which SearchResponse.Facet.values are returned. Allowed values are: * "count desc", which means order by SearchResponse.Facet.values.count descending. * "value desc", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals; FulfillmentInfo.place_ids are sorted in the order given by FacetSpec.FacetKey.restricted_values.
	OrderBy string `pulumi:"orderBy"`
	// Only get facet values that start with the given string prefix. For example, suppose "categories" has three values "Women > Shoe", "Women > Dress" and "Men > Shoe". If set "prefixes" to "Women", the "categories" facet gives only "Women > Shoe" and "Women > Dress". Only supported on textual fields. Maximum is 10.
	Prefixes []string `pulumi:"prefixes"`
	// The query that is used to compute facet for the given facet key. When provided, it overrides the default behavior of facet computation. The query syntax is the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Notice that there is no limitation on FacetKey.key when query is specified. In the response, SearchResponse.Facet.values.value is always "1" and SearchResponse.Facet.values.count is the number of results that match the query. For example, you can set a customized facet for "shipToStore", where FacetKey.key is "customizedShipToStore", and FacetKey.query is "availability: ANY(\"IN_STOCK\") AND shipToStore: ANY(\"123\")". Then the facet counts the products that are both in stock and ship to store "123".
	Query string `pulumi:"query"`
	// Only get facet for the given restricted values. For example, when using "pickupInStore" as key and set restricted values to ["store123", "store456"], only facets for "store123" and "store456" are returned. Only supported on predefined textual fields, custom textual attributes and fulfillments. Maximum is 20. Must be set for the fulfillment facet keys: * pickupInStore * shipToStore * sameDayDelivery * nextDayDelivery * customFulfillment1 * customFulfillment2 * customFulfillment3 * customFulfillment4 * customFulfillment5
	RestrictedValues []string `pulumi:"restrictedValues"`
	// Returns the min and max value for each numerical facet intervals. Ignored for textual facets.
	ReturnMinMax bool `pulumi:"returnMinMax"`
}

// Specifies how a facet is computed.
type GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput {
	return o
}

// True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput) CaseInsensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponse) bool { return v.CaseInsensitive }).(pulumi.BoolOutput)
}

// Only get facet values that contains the given strings. For example, suppose "categories" has three values "Women > Shoe", "Women > Dress" and "Men > Shoe". If set "contains" to "Shoe", the "categories" facet gives only "Women > Shoe" and "Men > Shoe". Only supported on textual fields. Maximum is 10.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput) Contains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponse) []string { return v.Contains }).(pulumi.StringArrayOutput)
}

// Set only if values should be bucketized into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 40. For all numerical facet keys that appear in the list of products from the catalog, the percentiles 0, 10, 30, 50, 70, 90, and 100 are computed from their distribution weekly. If the model assigns a high score to a numerical facet key and its intervals are not specified in the search request, these percentiles become the bounds for its intervals and are returned in the response. If the facet key intervals are specified in the request, then the specified intervals are returned instead.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput) Intervals() GoogleCloudRetailV2betaIntervalResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponse) []GoogleCloudRetailV2betaIntervalResponse {
		return v.Intervals
	}).(GoogleCloudRetailV2betaIntervalResponseArrayOutput)
}

// Supported textual and numerical facet keys in Product object, over which the facet values are computed. Facet key is case-sensitive. Allowed facet keys when FacetKey.query is not specified: * textual_field = * "brands" * "categories" * "genders" * "ageGroups" * "availability" * "colorFamilies" * "colors" * "sizes" * "materials" * "patterns" * "conditions" * "attributes.key" * "pickupInStore" * "shipToStore" * "sameDayDelivery" * "nextDayDelivery" * "customFulfillment1" * "customFulfillment2" * "customFulfillment3" * "customFulfillment4" * "customFulfillment5" * "inventory(place_id,attributes.key)" * numerical_field = * "price" * "discount" * "rating" * "ratingCount" * "attributes.key" * "inventory(place_id,price)" * "inventory(place_id,original_price)" * "inventory(place_id,attributes.key)"
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponse) string { return v.Key }).(pulumi.StringOutput)
}

// The order in which SearchResponse.Facet.values are returned. Allowed values are: * "count desc", which means order by SearchResponse.Facet.values.count descending. * "value desc", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals; FulfillmentInfo.place_ids are sorted in the order given by FacetSpec.FacetKey.restricted_values.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput) OrderBy() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponse) string { return v.OrderBy }).(pulumi.StringOutput)
}

// Only get facet values that start with the given string prefix. For example, suppose "categories" has three values "Women > Shoe", "Women > Dress" and "Men > Shoe". If set "prefixes" to "Women", the "categories" facet gives only "Women > Shoe" and "Women > Dress". Only supported on textual fields. Maximum is 10.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponse) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

// The query that is used to compute facet for the given facet key. When provided, it overrides the default behavior of facet computation. The query syntax is the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Notice that there is no limitation on FacetKey.key when query is specified. In the response, SearchResponse.Facet.values.value is always "1" and SearchResponse.Facet.values.count is the number of results that match the query. For example, you can set a customized facet for "shipToStore", where FacetKey.key is "customizedShipToStore", and FacetKey.query is "availability: ANY(\"IN_STOCK\") AND shipToStore: ANY(\"123\")". Then the facet counts the products that are both in stock and ship to store "123".
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponse) string { return v.Query }).(pulumi.StringOutput)
}

// Only get facet for the given restricted values. For example, when using "pickupInStore" as key and set restricted values to ["store123", "store456"], only facets for "store123" and "store456" are returned. Only supported on predefined textual fields, custom textual attributes and fulfillments. Maximum is 20. Must be set for the fulfillment facet keys: * pickupInStore * shipToStore * sameDayDelivery * nextDayDelivery * customFulfillment1 * customFulfillment2 * customFulfillment3 * customFulfillment4 * customFulfillment5
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput) RestrictedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponse) []string {
		return v.RestrictedValues
	}).(pulumi.StringArrayOutput)
}

// Returns the min and max value for each numerical facet intervals. Ignored for textual facets.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput) ReturnMinMax() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponse) bool { return v.ReturnMinMax }).(pulumi.BoolOutput)
}

// A facet specification to perform faceted search.
type GoogleCloudRetailV2betaSearchRequestFacetSpecResponse struct {
	// Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined by Google Retail Search. It is ordered together with dynamic facets if dynamic facets is enabled. If set to false, the position of this facet in the response is the same as in the request, and it is ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response is determined by Google Retail Search. Another example, assuming you have the following facets in the request: * "rating", enable_dynamic_position = true * "price", enable_dynamic_position = false * "brands", enable_dynamic_position = false And also you have a dynamic facets enable, which generates a facet "gender". Then, the final order of the facets in the response can be ("price", "brands", "rating", "gender") or ("price", "brands", "gender", "rating") depends on how Google Retail Search orders "gender" and "rating" facets. However, notice that "price" and "brands" are always ranked at first and second position because their enable_dynamic_position values are false.
	EnableDynamicPosition bool `pulumi:"enableDynamicPosition"`
	// List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 products with the color facet "Red" and 200 products with the color facet "Blue". A query containing the filter "colorFamilies:ANY("Red")" and having "colorFamilies" as FacetKey.key would by default return only "Red" products in the search results, and also return "Red" with count 100 as the only color facet. Although there are also blue products available, "Blue" would not be shown as an available facet value. If "colorFamilies" is listed in "excludedFilterKeys", then the query returns the facet values "Red" with count 100 and "Blue" with count 200, because the "colorFamilies" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only "Red" products. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.
	ExcludedFilterKeys []string `pulumi:"excludedFilterKeys"`
	// The facet key specification.
	FacetKey GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponse `pulumi:"facetKey"`
	// Maximum of facet values that should be returned for this facet. If unspecified, defaults to 50. The maximum allowed value is 300. Values above 300 will be coerced to 300. If this field is negative, an INVALID_ARGUMENT is returned.
	Limit int `pulumi:"limit"`
}

// A facet specification to perform faceted search.
type GoogleCloudRetailV2betaSearchRequestFacetSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaSearchRequestFacetSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestFacetSpecResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecResponseOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecResponseOutput() GoogleCloudRetailV2betaSearchRequestFacetSpecResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestFacetSpecResponseOutput) ToGoogleCloudRetailV2betaSearchRequestFacetSpecResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestFacetSpecResponseOutput {
	return o
}

// Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined by Google Retail Search. It is ordered together with dynamic facets if dynamic facets is enabled. If set to false, the position of this facet in the response is the same as in the request, and it is ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response is determined by Google Retail Search. Another example, assuming you have the following facets in the request: * "rating", enable_dynamic_position = true * "price", enable_dynamic_position = false * "brands", enable_dynamic_position = false And also you have a dynamic facets enable, which generates a facet "gender". Then, the final order of the facets in the response can be ("price", "brands", "rating", "gender") or ("price", "brands", "gender", "rating") depends on how Google Retail Search orders "gender" and "rating" facets. However, notice that "price" and "brands" are always ranked at first and second position because their enable_dynamic_position values are false.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecResponseOutput) EnableDynamicPosition() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecResponse) bool { return v.EnableDynamicPosition }).(pulumi.BoolOutput)
}

// List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 products with the color facet "Red" and 200 products with the color facet "Blue". A query containing the filter "colorFamilies:ANY("Red")" and having "colorFamilies" as FacetKey.key would by default return only "Red" products in the search results, and also return "Red" with count 100 as the only color facet. Although there are also blue products available, "Blue" would not be shown as an available facet value. If "colorFamilies" is listed in "excludedFilterKeys", then the query returns the facet values "Red" with count 100 and "Blue" with count 200, because the "colorFamilies" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only "Red" products. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecResponseOutput) ExcludedFilterKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecResponse) []string { return v.ExcludedFilterKeys }).(pulumi.StringArrayOutput)
}

// The facet key specification.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecResponseOutput) FacetKey() GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecResponse) GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponse {
		return v.FacetKey
	}).(GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput)
}

// Maximum of facet values that should be returned for this facet. If unspecified, defaults to 50. The maximum allowed value is 300. Values above 300 will be coerced to 300. If this field is negative, an INVALID_ARGUMENT is returned.
func (o GoogleCloudRetailV2betaSearchRequestFacetSpecResponseOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestFacetSpecResponse) int { return v.Limit }).(pulumi.IntOutput)
}

// The specification for personalization.
type GoogleCloudRetailV2betaSearchRequestPersonalizationSpec struct {
	// Defaults to Mode.AUTO.
	Mode *GoogleCloudRetailV2betaSearchRequestPersonalizationSpecMode `pulumi:"mode"`
}

// GoogleCloudRetailV2betaSearchRequestPersonalizationSpecInput is an input type that accepts GoogleCloudRetailV2betaSearchRequestPersonalizationSpecArgs and GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaSearchRequestPersonalizationSpecInput` via:
//
//	GoogleCloudRetailV2betaSearchRequestPersonalizationSpecArgs{...}
type GoogleCloudRetailV2betaSearchRequestPersonalizationSpecInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput() GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput
	ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutputWithContext(context.Context) GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput
}

// The specification for personalization.
type GoogleCloudRetailV2betaSearchRequestPersonalizationSpecArgs struct {
	// Defaults to Mode.AUTO.
	Mode GoogleCloudRetailV2betaSearchRequestPersonalizationSpecModePtrInput `pulumi:"mode"`
}

func (GoogleCloudRetailV2betaSearchRequestPersonalizationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestPersonalizationSpec)(nil)).Elem()
}

func (i GoogleCloudRetailV2betaSearchRequestPersonalizationSpecArgs) ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput() GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput {
	return i.ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaSearchRequestPersonalizationSpecArgs) ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput)
}

func (i GoogleCloudRetailV2betaSearchRequestPersonalizationSpecArgs) ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput {
	return i.ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudRetailV2betaSearchRequestPersonalizationSpecArgs) ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput).ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutputWithContext(ctx)
}

// GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrInput is an input type that accepts GoogleCloudRetailV2betaSearchRequestPersonalizationSpecArgs, GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtr and GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrInput` via:
//
//	        GoogleCloudRetailV2betaSearchRequestPersonalizationSpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput
	ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutputWithContext(context.Context) GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput
}

type googleCloudRetailV2betaSearchRequestPersonalizationSpecPtrType GoogleCloudRetailV2betaSearchRequestPersonalizationSpecArgs

func GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtr(v *GoogleCloudRetailV2betaSearchRequestPersonalizationSpecArgs) GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrInput {
	return (*googleCloudRetailV2betaSearchRequestPersonalizationSpecPtrType)(v)
}

func (*googleCloudRetailV2betaSearchRequestPersonalizationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaSearchRequestPersonalizationSpec)(nil)).Elem()
}

func (i *googleCloudRetailV2betaSearchRequestPersonalizationSpecPtrType) ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput {
	return i.ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudRetailV2betaSearchRequestPersonalizationSpecPtrType) ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput)
}

// The specification for personalization.
type GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestPersonalizationSpec)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput) ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput() GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput) ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput) ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput {
	return o.ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput) ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudRetailV2betaSearchRequestPersonalizationSpec) *GoogleCloudRetailV2betaSearchRequestPersonalizationSpec {
		return &v
	}).(GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput)
}

// Defaults to Mode.AUTO.
func (o GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput) Mode() GoogleCloudRetailV2betaSearchRequestPersonalizationSpecModePtrOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestPersonalizationSpec) *GoogleCloudRetailV2betaSearchRequestPersonalizationSpecMode {
		return v.Mode
	}).(GoogleCloudRetailV2betaSearchRequestPersonalizationSpecModePtrOutput)
}

type GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudRetailV2betaSearchRequestPersonalizationSpec)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput) ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput() GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput) ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput) Elem() GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestPersonalizationSpec) GoogleCloudRetailV2betaSearchRequestPersonalizationSpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudRetailV2betaSearchRequestPersonalizationSpec
		return ret
	}).(GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput)
}

// Defaults to Mode.AUTO.
func (o GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput) Mode() GoogleCloudRetailV2betaSearchRequestPersonalizationSpecModePtrOutput {
	return o.ApplyT(func(v *GoogleCloudRetailV2betaSearchRequestPersonalizationSpec) *GoogleCloudRetailV2betaSearchRequestPersonalizationSpecMode {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(GoogleCloudRetailV2betaSearchRequestPersonalizationSpecModePtrOutput)
}

// The specification for personalization.
type GoogleCloudRetailV2betaSearchRequestPersonalizationSpecResponse struct {
	// Defaults to Mode.AUTO.
	Mode string `pulumi:"mode"`
}

// The specification for personalization.
type GoogleCloudRetailV2betaSearchRequestPersonalizationSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudRetailV2betaSearchRequestPersonalizationSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestPersonalizationSpecResponse)(nil)).Elem()
}

func (o GoogleCloudRetailV2betaSearchRequestPersonalizationSpecResponseOutput) ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecResponseOutput() GoogleCloudRetailV2betaSearchRequestPersonalizationSpecResponseOutput {
	return o
}

func (o GoogleCloudRetailV2betaSearchRequestPersonalizationSpecResponseOutput) ToGoogleCloudRetailV2betaSearchRequestPersonalizationSpecResponseOutputWithContext(ctx context.Context) GoogleCloudRetailV2betaSearchRequestPersonalizationSpecResponseOutput {
	return o
}

// Defaults to Mode.AUTO.
func (o GoogleCloudRetailV2betaSearchRequestPersonalizationSpecResponseOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudRetailV2betaSearchRequestPersonalizationSpecResponse) string { return v.Mode }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaAudienceInput)(nil)).Elem(), GoogleCloudRetailV2betaAudienceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaAudiencePtrInput)(nil)).Elem(), GoogleCloudRetailV2betaAudienceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaColorInfoInput)(nil)).Elem(), GoogleCloudRetailV2betaColorInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaColorInfoPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaColorInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaConditionInput)(nil)).Elem(), GoogleCloudRetailV2betaConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaConditionPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaConditionQueryTermInput)(nil)).Elem(), GoogleCloudRetailV2betaConditionQueryTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaConditionQueryTermArrayInput)(nil)).Elem(), GoogleCloudRetailV2betaConditionQueryTermArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaConditionTimeRangeInput)(nil)).Elem(), GoogleCloudRetailV2betaConditionTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaConditionTimeRangeArrayInput)(nil)).Elem(), GoogleCloudRetailV2betaConditionTimeRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaCustomAttributeInput)(nil)).Elem(), GoogleCloudRetailV2betaCustomAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaCustomAttributePtrInput)(nil)).Elem(), GoogleCloudRetailV2betaCustomAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaFulfillmentInfoInput)(nil)).Elem(), GoogleCloudRetailV2betaFulfillmentInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaFulfillmentInfoArrayInput)(nil)).Elem(), GoogleCloudRetailV2betaFulfillmentInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaImageInput)(nil)).Elem(), GoogleCloudRetailV2betaImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaImageArrayInput)(nil)).Elem(), GoogleCloudRetailV2betaImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaIntervalInput)(nil)).Elem(), GoogleCloudRetailV2betaIntervalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaIntervalArrayInput)(nil)).Elem(), GoogleCloudRetailV2betaIntervalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigInput)(nil)).Elem(), GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaModelModelFeaturesConfigInput)(nil)).Elem(), GoogleCloudRetailV2betaModelModelFeaturesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaModelModelFeaturesConfigPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaModelModelFeaturesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaPriceInfoInput)(nil)).Elem(), GoogleCloudRetailV2betaPriceInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaPriceInfoPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaPriceInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaPromotionInput)(nil)).Elem(), GoogleCloudRetailV2betaPromotionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaPromotionArrayInput)(nil)).Elem(), GoogleCloudRetailV2betaPromotionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRatingInput)(nil)).Elem(), GoogleCloudRetailV2betaRatingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRatingPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaRatingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRulePtrInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleBoostActionInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleBoostActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleBoostActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleBoostActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleDoNotAssociateActionInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleDoNotAssociateActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleDoNotAssociateActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleFilterActionInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleFilterActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleFilterActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleFilterActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleForceReturnFacetActionInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleForceReturnFacetActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleForceReturnFacetActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleIgnoreActionInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleIgnoreActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleIgnoreActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleIgnoreActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleOnewaySynonymsActionInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleOnewaySynonymsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleOnewaySynonymsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleRedirectActionInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleRedirectActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleRedirectActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleRedirectActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleRemoveFacetActionInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleRemoveFacetActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleRemoveFacetActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleRemoveFacetActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleReplacementActionInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleReplacementActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleReplacementActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleReplacementActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleTwowaySynonymsActionInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleTwowaySynonymsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaRuleTwowaySynonymsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecInput)(nil)).Elem(), GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestFacetSpecInput)(nil)).Elem(), GoogleCloudRetailV2betaSearchRequestFacetSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestFacetSpecPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaSearchRequestFacetSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyInput)(nil)).Elem(), GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestPersonalizationSpecInput)(nil)).Elem(), GoogleCloudRetailV2betaSearchRequestPersonalizationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrInput)(nil)).Elem(), GoogleCloudRetailV2betaSearchRequestPersonalizationSpecArgs{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaAudienceOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaAudiencePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaAudienceResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaColorInfoOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaColorInfoPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaColorInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaConditionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaConditionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaConditionQueryTermOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaConditionQueryTermArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaConditionQueryTermResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaConditionQueryTermResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaConditionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaConditionTimeRangeOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaConditionTimeRangeArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaConditionTimeRangeResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaConditionTimeRangeResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaCustomAttributeOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaCustomAttributePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaCustomAttributeResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaFulfillmentInfoOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaFulfillmentInfoArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaFulfillmentInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaFulfillmentInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaImageOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaImageArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaImageResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaImageResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaIntervalOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaIntervalArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaIntervalResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaIntervalResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaLocalInventoryResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaLocalInventoryResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaModelFrequentlyBoughtTogetherFeaturesConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaModelModelFeaturesConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaModelModelFeaturesConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaModelModelFeaturesConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaModelServingConfigListResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaModelServingConfigListResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaPriceInfoOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaPriceInfoPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaPriceInfoPriceRangeResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaPriceInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaProductResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaProductResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaPromotionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaPromotionArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaPromotionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaPromotionResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRatingOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRatingPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRatingResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRulePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleBoostActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleBoostActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleBoostActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleDoNotAssociateActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleDoNotAssociateActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleDoNotAssociateActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleFilterActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleFilterActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleFilterActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleForceReturnFacetActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleForceReturnFacetActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleForceReturnFacetActionFacetPositionAdjustmentResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleForceReturnFacetActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleIgnoreActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleIgnoreActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleIgnoreActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleOnewaySynonymsActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleOnewaySynonymsActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleOnewaySynonymsActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleRedirectActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleRedirectActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleRedirectActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleRemoveFacetActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleRemoveFacetActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleRemoveFacetActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleReplacementActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleReplacementActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleReplacementActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleTwowaySynonymsActionOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleTwowaySynonymsActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaRuleTwowaySynonymsActionResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaSearchRequestFacetSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaSearchRequestFacetSpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaSearchRequestFacetSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaSearchRequestPersonalizationSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaSearchRequestPersonalizationSpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudRetailV2betaSearchRequestPersonalizationSpecResponseOutput{})
}
