// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Atomically updates the ResourceRecordSet collection.
// Auto-naming is currently not supported for this resource.
// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
// on Google Cloud even though it will be deleted from Pulumi state.
type Change struct {
	pulumi.CustomResourceState

	// Which ResourceRecordSets to add?
	Additions ResourceRecordSetResponseArrayOutput `pulumi:"additions"`
	// For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
	ClientOperationId pulumi.StringPtrOutput `pulumi:"clientOperationId"`
	// Which ResourceRecordSets to remove? Must match existing data exactly.
	Deletions ResourceRecordSetResponseArrayOutput `pulumi:"deletions"`
	// If the DNS queries for the zone will be served.
	IsServing   pulumi.BoolOutput   `pulumi:"isServing"`
	Kind        pulumi.StringOutput `pulumi:"kind"`
	ManagedZone pulumi.StringOutput `pulumi:"managedZone"`
	Project     pulumi.StringOutput `pulumi:"project"`
	// The time that this operation was started by the server (output only). This is in RFC3339 text format.
	StartTime pulumi.StringOutput `pulumi:"startTime"`
	// Status of the operation (output only). A status of "done" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewChange registers a new resource with the given unique name, arguments, and options.
func NewChange(ctx *pulumi.Context,
	name string, args *ChangeArgs, opts ...pulumi.ResourceOption) (*Change, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedZone == nil {
		return nil, errors.New("invalid value for required argument 'ManagedZone'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"managedZone",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Change
	err := ctx.RegisterResource("google-native:dns/v1:Change", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetChange gets an existing Change resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetChange(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ChangeState, opts ...pulumi.ResourceOption) (*Change, error) {
	var resource Change
	err := ctx.ReadResource("google-native:dns/v1:Change", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Change resources.
type changeState struct {
}

type ChangeState struct {
}

func (ChangeState) ElementType() reflect.Type {
	return reflect.TypeOf((*changeState)(nil)).Elem()
}

type changeArgs struct {
	// Which ResourceRecordSets to add?
	Additions []ResourceRecordSetType `pulumi:"additions"`
	// For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
	ClientOperationId *string `pulumi:"clientOperationId"`
	// Which ResourceRecordSets to remove? Must match existing data exactly.
	Deletions []ResourceRecordSetType `pulumi:"deletions"`
	// If the DNS queries for the zone will be served.
	IsServing   *bool   `pulumi:"isServing"`
	Kind        *string `pulumi:"kind"`
	ManagedZone string  `pulumi:"managedZone"`
	Project     *string `pulumi:"project"`
}

// The set of arguments for constructing a Change resource.
type ChangeArgs struct {
	// Which ResourceRecordSets to add?
	Additions ResourceRecordSetTypeArrayInput
	// For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
	ClientOperationId pulumi.StringPtrInput
	// Which ResourceRecordSets to remove? Must match existing data exactly.
	Deletions ResourceRecordSetTypeArrayInput
	// If the DNS queries for the zone will be served.
	IsServing   pulumi.BoolPtrInput
	Kind        pulumi.StringPtrInput
	ManagedZone pulumi.StringInput
	Project     pulumi.StringPtrInput
}

func (ChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*changeArgs)(nil)).Elem()
}

type ChangeInput interface {
	pulumi.Input

	ToChangeOutput() ChangeOutput
	ToChangeOutputWithContext(ctx context.Context) ChangeOutput
}

func (*Change) ElementType() reflect.Type {
	return reflect.TypeOf((**Change)(nil)).Elem()
}

func (i *Change) ToChangeOutput() ChangeOutput {
	return i.ToChangeOutputWithContext(context.Background())
}

func (i *Change) ToChangeOutputWithContext(ctx context.Context) ChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChangeOutput)
}

func (i *Change) ToOutput(ctx context.Context) pulumix.Output[*Change] {
	return pulumix.Output[*Change]{
		OutputState: i.ToChangeOutputWithContext(ctx).OutputState,
	}
}

type ChangeOutput struct{ *pulumi.OutputState }

func (ChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Change)(nil)).Elem()
}

func (o ChangeOutput) ToChangeOutput() ChangeOutput {
	return o
}

func (o ChangeOutput) ToChangeOutputWithContext(ctx context.Context) ChangeOutput {
	return o
}

func (o ChangeOutput) ToOutput(ctx context.Context) pulumix.Output[*Change] {
	return pulumix.Output[*Change]{
		OutputState: o.OutputState,
	}
}

// Which ResourceRecordSets to add?
func (o ChangeOutput) Additions() ResourceRecordSetResponseArrayOutput {
	return o.ApplyT(func(v *Change) ResourceRecordSetResponseArrayOutput { return v.Additions }).(ResourceRecordSetResponseArrayOutput)
}

// For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
func (o ChangeOutput) ClientOperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Change) pulumi.StringPtrOutput { return v.ClientOperationId }).(pulumi.StringPtrOutput)
}

// Which ResourceRecordSets to remove? Must match existing data exactly.
func (o ChangeOutput) Deletions() ResourceRecordSetResponseArrayOutput {
	return o.ApplyT(func(v *Change) ResourceRecordSetResponseArrayOutput { return v.Deletions }).(ResourceRecordSetResponseArrayOutput)
}

// If the DNS queries for the zone will be served.
func (o ChangeOutput) IsServing() pulumi.BoolOutput {
	return o.ApplyT(func(v *Change) pulumi.BoolOutput { return v.IsServing }).(pulumi.BoolOutput)
}

func (o ChangeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *Change) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

func (o ChangeOutput) ManagedZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Change) pulumi.StringOutput { return v.ManagedZone }).(pulumi.StringOutput)
}

func (o ChangeOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Change) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The time that this operation was started by the server (output only). This is in RFC3339 text format.
func (o ChangeOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Change) pulumi.StringOutput { return v.StartTime }).(pulumi.StringOutput)
}

// Status of the operation (output only). A status of "done" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.
func (o ChangeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Change) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ChangeInput)(nil)).Elem(), &Change{})
	pulumi.RegisterOutputType(ChangeOutput{})
}
