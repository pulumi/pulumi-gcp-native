// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Fetches the representation of an existing Policy.
func LookupPolicy(ctx *pulumi.Context, args *LookupPolicyArgs, opts ...pulumi.InvokeOption) (*LookupPolicyResult, error) {
	var rv LookupPolicyResult
	err := ctx.Invoke("google-native:dns/v1beta2:getPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPolicyArgs struct {
	ClientOperationId *string `pulumi:"clientOperationId"`
	Policy            string  `pulumi:"policy"`
	Project           string  `pulumi:"project"`
}

type LookupPolicyResult struct {
	// Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.
	AlternativeNameServerConfig PolicyAlternativeNameServerConfigResponse `pulumi:"alternativeNameServerConfig"`
	// A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function.
	Description string `pulumi:"description"`
	// Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy.
	EnableInboundForwarding bool `pulumi:"enableInboundForwarding"`
	// Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set.
	EnableLogging bool   `pulumi:"enableLogging"`
	Kind          string `pulumi:"kind"`
	// User-assigned name for this policy.
	Name string `pulumi:"name"`
	// List of network names specifying networks to which this policy is applied.
	Networks []PolicyNetworkResponse `pulumi:"networks"`
}
