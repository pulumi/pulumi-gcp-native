// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the specified AndroidApp.
func LookupAndroidApp(ctx *pulumi.Context, args *LookupAndroidAppArgs, opts ...pulumi.InvokeOption) (*LookupAndroidAppResult, error) {
	var rv LookupAndroidAppResult
	err := ctx.Invoke("google-native:firebase/v1beta1:getAndroidApp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAndroidAppArgs struct {
	AndroidAppId string  `pulumi:"androidAppId"`
	Project      *string `pulumi:"project"`
}

type LookupAndroidAppResult struct {
	// The key_id of the GCP ApiKey associated with this App. If set must have no restrictions, or only have restrictions that are valid for the associated Firebase App. Cannot be set in create requests, instead an existing valid API Key will be chosen, or if no valid API Keys exist, one will be provisioned for you. Cannot be set to an empty value in update requests.
	ApiKeyId string `pulumi:"apiKeyId"`
	// Immutable. The globally unique, Firebase-assigned identifier for the `AndroidApp`. This identifier should be treated as an opaque token, as the data format is not specified.
	AppId string `pulumi:"appId"`
	// The user-assigned display name for the `AndroidApp`.
	DisplayName string `pulumi:"displayName"`
	// The resource name of the AndroidApp, in the format: projects/ PROJECT_IDENTIFIER/androidApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.androidApps#AndroidApp.FIELDS.app_id)).
	Name string `pulumi:"name"`
	// Immutable. The canonical package name of the Android app as would appear in the Google Play Developer Console.
	PackageName string `pulumi:"packageName"`
	// Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `AndroidApp`.
	Project string `pulumi:"project"`
	// The SHA1 certificate hashes for the AndroidApp.
	Sha1Hashes []string `pulumi:"sha1Hashes"`
	// The SHA256 certificate hashes for the AndroidApp.
	Sha256Hashes []string `pulumi:"sha256Hashes"`
	// The lifecycle state of the App.
	State string `pulumi:"state"`
}

func LookupAndroidAppOutput(ctx *pulumi.Context, args LookupAndroidAppOutputArgs, opts ...pulumi.InvokeOption) LookupAndroidAppResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAndroidAppResult, error) {
			args := v.(LookupAndroidAppArgs)
			r, err := LookupAndroidApp(ctx, &args, opts...)
			var s LookupAndroidAppResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAndroidAppResultOutput)
}

type LookupAndroidAppOutputArgs struct {
	AndroidAppId pulumi.StringInput    `pulumi:"androidAppId"`
	Project      pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupAndroidAppOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAndroidAppArgs)(nil)).Elem()
}

type LookupAndroidAppResultOutput struct{ *pulumi.OutputState }

func (LookupAndroidAppResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAndroidAppResult)(nil)).Elem()
}

func (o LookupAndroidAppResultOutput) ToLookupAndroidAppResultOutput() LookupAndroidAppResultOutput {
	return o
}

func (o LookupAndroidAppResultOutput) ToLookupAndroidAppResultOutputWithContext(ctx context.Context) LookupAndroidAppResultOutput {
	return o
}

// The key_id of the GCP ApiKey associated with this App. If set must have no restrictions, or only have restrictions that are valid for the associated Firebase App. Cannot be set in create requests, instead an existing valid API Key will be chosen, or if no valid API Keys exist, one will be provisioned for you. Cannot be set to an empty value in update requests.
func (o LookupAndroidAppResultOutput) ApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAndroidAppResult) string { return v.ApiKeyId }).(pulumi.StringOutput)
}

// Immutable. The globally unique, Firebase-assigned identifier for the `AndroidApp`. This identifier should be treated as an opaque token, as the data format is not specified.
func (o LookupAndroidAppResultOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAndroidAppResult) string { return v.AppId }).(pulumi.StringOutput)
}

// The user-assigned display name for the `AndroidApp`.
func (o LookupAndroidAppResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAndroidAppResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The resource name of the AndroidApp, in the format: projects/ PROJECT_IDENTIFIER/androidApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.androidApps#AndroidApp.FIELDS.app_id)).
func (o LookupAndroidAppResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAndroidAppResult) string { return v.Name }).(pulumi.StringOutput)
}

// Immutable. The canonical package name of the Android app as would appear in the Google Play Developer Console.
func (o LookupAndroidAppResultOutput) PackageName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAndroidAppResult) string { return v.PackageName }).(pulumi.StringOutput)
}

// Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `AndroidApp`.
func (o LookupAndroidAppResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAndroidAppResult) string { return v.Project }).(pulumi.StringOutput)
}

// The SHA1 certificate hashes for the AndroidApp.
func (o LookupAndroidAppResultOutput) Sha1Hashes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAndroidAppResult) []string { return v.Sha1Hashes }).(pulumi.StringArrayOutput)
}

// The SHA256 certificate hashes for the AndroidApp.
func (o LookupAndroidAppResultOutput) Sha256Hashes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAndroidAppResult) []string { return v.Sha256Hashes }).(pulumi.StringArrayOutput)
}

// The lifecycle state of the App.
func (o LookupAndroidAppResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAndroidAppResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAndroidAppResultOutput{})
}
