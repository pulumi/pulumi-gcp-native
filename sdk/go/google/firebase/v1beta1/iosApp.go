// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Requests the creation of a new IosApp in the specified FirebaseProject. The result of this call is an `Operation` which can be used to track the provisioning process. The `Operation` is automatically deleted after completion, so there is no need to call `DeleteOperation`.
type IosApp struct {
	pulumi.CustomResourceState
}

// NewIosApp registers a new resource with the given unique name, arguments, and options.
func NewIosApp(ctx *pulumi.Context,
	name string, args *IosAppArgs, opts ...pulumi.ResourceOption) (*IosApp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IosAppsId == nil {
		return nil, errors.New("invalid value for required argument 'IosAppsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	var resource IosApp
	err := ctx.RegisterResource("google-cloud:firebase/v1beta1:IosApp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIosApp gets an existing IosApp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIosApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IosAppState, opts ...pulumi.ResourceOption) (*IosApp, error) {
	var resource IosApp
	err := ctx.ReadResource("google-cloud:firebase/v1beta1:IosApp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IosApp resources.
type iosAppState struct {
}

type IosAppState struct {
}

func (IosAppState) ElementType() reflect.Type {
	return reflect.TypeOf((*iosAppState)(nil)).Elem()
}

type iosAppArgs struct {
	// Immutable. The globally unique, Firebase-assigned identifier for the `IosApp`. This identifier should be treated as an opaque token, as the data format is not specified.
	AppId *string `pulumi:"appId"`
	// The automatically generated Apple ID assigned to the iOS app by Apple in the iOS App Store.
	AppStoreId *string `pulumi:"appStoreId"`
	// Immutable. The canonical bundle ID of the iOS app as it would appear in the iOS AppStore.
	BundleId *string `pulumi:"bundleId"`
	// The user-assigned display name for the `IosApp`.
	DisplayName *string `pulumi:"displayName"`
	IosAppsId   string  `pulumi:"iosAppsId"`
	// The resource name of the IosApp, in the format: projects/PROJECT_IDENTIFIER /iosApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.iosApps#IosApp.FIELDS.app_id)).
	Name *string `pulumi:"name"`
	// Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `IosApp`.
	ProjectId  *string `pulumi:"projectId"`
	ProjectsId string  `pulumi:"projectsId"`
}

// The set of arguments for constructing a IosApp resource.
type IosAppArgs struct {
	// Immutable. The globally unique, Firebase-assigned identifier for the `IosApp`. This identifier should be treated as an opaque token, as the data format is not specified.
	AppId pulumi.StringPtrInput
	// The automatically generated Apple ID assigned to the iOS app by Apple in the iOS App Store.
	AppStoreId pulumi.StringPtrInput
	// Immutable. The canonical bundle ID of the iOS app as it would appear in the iOS AppStore.
	BundleId pulumi.StringPtrInput
	// The user-assigned display name for the `IosApp`.
	DisplayName pulumi.StringPtrInput
	IosAppsId   pulumi.StringInput
	// The resource name of the IosApp, in the format: projects/PROJECT_IDENTIFIER /iosApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.iosApps#IosApp.FIELDS.app_id)).
	Name pulumi.StringPtrInput
	// Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `IosApp`.
	ProjectId  pulumi.StringPtrInput
	ProjectsId pulumi.StringInput
}

func (IosAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iosAppArgs)(nil)).Elem()
}

type IosAppInput interface {
	pulumi.Input

	ToIosAppOutput() IosAppOutput
	ToIosAppOutputWithContext(ctx context.Context) IosAppOutput
}

func (*IosApp) ElementType() reflect.Type {
	return reflect.TypeOf((*IosApp)(nil))
}

func (i *IosApp) ToIosAppOutput() IosAppOutput {
	return i.ToIosAppOutputWithContext(context.Background())
}

func (i *IosApp) ToIosAppOutputWithContext(ctx context.Context) IosAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IosAppOutput)
}

type IosAppOutput struct {
	*pulumi.OutputState
}

func (IosAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IosApp)(nil))
}

func (o IosAppOutput) ToIosAppOutput() IosAppOutput {
	return o
}

func (o IosAppOutput) ToIosAppOutputWithContext(ctx context.Context) IosAppOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(IosAppOutput{})
}
