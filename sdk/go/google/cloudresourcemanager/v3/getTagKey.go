// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a TagKey. This method will return `PERMISSION_DENIED` if the key does not exist or the user does not have permission to view it.
func LookupTagKey(ctx *pulumi.Context, args *LookupTagKeyArgs, opts ...pulumi.InvokeOption) (*LookupTagKeyResult, error) {
	var rv LookupTagKeyResult
	err := ctx.Invoke("google-native:cloudresourcemanager/v3:getTagKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTagKeyArgs struct {
	TagKeyId string `pulumi:"tagKeyId"`
}

type LookupTagKeyResult struct {
	// Creation time.
	CreateTime string `pulumi:"createTime"`
	// Optional. User-assigned description of the TagKey. Must not exceed 256 characters. Read-write.
	Description string `pulumi:"description"`
	// Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagKeyRequest for details.
	Etag string `pulumi:"etag"`
	// Immutable. The resource name for a TagKey. Must be in the format `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for the TagKey.
	Name string `pulumi:"name"`
	// Immutable. Namespaced name of the TagKey.
	NamespacedName string `pulumi:"namespacedName"`
	// Immutable. The resource name of the TagKey's parent. A TagKey can be parented by an Organization or a Project. For a TagKey parented by an Organization, its parent must be in the form `organizations/{org_id}`. For a TagKey parented by a Project, its parent can be in the form `projects/{project_id}` or `projects/{project_number}`.
	Parent string `pulumi:"parent"`
	// Optional. A purpose denotes that this Tag is intended for use in policies of a specific policy engine, and will involve that policy engine in management operations involving this Tag. A purpose does not grant a policy engine exclusive rights to the Tag, and it may be referenced by other policy engines. A purpose cannot be changed once set.
	Purpose string `pulumi:"purpose"`
	// Optional. Purpose data corresponds to the policy system that the tag is intended for. See documentation for `Purpose` for formatting of this field. Purpose data cannot be changed once set.
	PurposeData map[string]string `pulumi:"purposeData"`
	// Immutable. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace. The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.
	ShortName string `pulumi:"shortName"`
	// Update time.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupTagKeyOutput(ctx *pulumi.Context, args LookupTagKeyOutputArgs, opts ...pulumi.InvokeOption) LookupTagKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTagKeyResult, error) {
			args := v.(LookupTagKeyArgs)
			r, err := LookupTagKey(ctx, &args, opts...)
			var s LookupTagKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTagKeyResultOutput)
}

type LookupTagKeyOutputArgs struct {
	TagKeyId pulumi.StringInput `pulumi:"tagKeyId"`
}

func (LookupTagKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagKeyArgs)(nil)).Elem()
}

type LookupTagKeyResultOutput struct{ *pulumi.OutputState }

func (LookupTagKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagKeyResult)(nil)).Elem()
}

func (o LookupTagKeyResultOutput) ToLookupTagKeyResultOutput() LookupTagKeyResultOutput {
	return o
}

func (o LookupTagKeyResultOutput) ToLookupTagKeyResultOutputWithContext(ctx context.Context) LookupTagKeyResultOutput {
	return o
}

// Creation time.
func (o LookupTagKeyResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. User-assigned description of the TagKey. Must not exceed 256 characters. Read-write.
func (o LookupTagKeyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagKeyRequest for details.
func (o LookupTagKeyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Immutable. The resource name for a TagKey. Must be in the format `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for the TagKey.
func (o LookupTagKeyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.Name }).(pulumi.StringOutput)
}

// Immutable. Namespaced name of the TagKey.
func (o LookupTagKeyResultOutput) NamespacedName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.NamespacedName }).(pulumi.StringOutput)
}

// Immutable. The resource name of the TagKey's parent. A TagKey can be parented by an Organization or a Project. For a TagKey parented by an Organization, its parent must be in the form `organizations/{org_id}`. For a TagKey parented by a Project, its parent can be in the form `projects/{project_id}` or `projects/{project_number}`.
func (o LookupTagKeyResultOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.Parent }).(pulumi.StringOutput)
}

// Optional. A purpose denotes that this Tag is intended for use in policies of a specific policy engine, and will involve that policy engine in management operations involving this Tag. A purpose does not grant a policy engine exclusive rights to the Tag, and it may be referenced by other policy engines. A purpose cannot be changed once set.
func (o LookupTagKeyResultOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.Purpose }).(pulumi.StringOutput)
}

// Optional. Purpose data corresponds to the policy system that the tag is intended for. See documentation for `Purpose` for formatting of this field. Purpose data cannot be changed once set.
func (o LookupTagKeyResultOutput) PurposeData() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupTagKeyResult) map[string]string { return v.PurposeData }).(pulumi.StringMapOutput)
}

// Immutable. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace. The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.
func (o LookupTagKeyResultOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.ShortName }).(pulumi.StringOutput)
}

// Update time.
func (o LookupTagKeyResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagKeyResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTagKeyResultOutput{})
}
