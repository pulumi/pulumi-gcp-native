// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Sets the access control policy on an organization resource. Replaces any existing policy. The `resource` field should be the organization's resource name, for example: "organizations/123". Authorization requires the IAM permission `resourcemanager.organizations.setIamPolicy` on the specified organization.
type OrganizationIamPolicy struct {
	pulumi.CustomResourceState
}

// NewOrganizationIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewOrganizationIamPolicy(ctx *pulumi.Context,
	name string, args *OrganizationIamPolicyArgs, opts ...pulumi.ResourceOption) (*OrganizationIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationsId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationsId'")
	}
	var resource OrganizationIamPolicy
	err := ctx.RegisterResource("google-cloud:cloudresourcemanager/v3:OrganizationIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationIamPolicy gets an existing OrganizationIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationIamPolicyState, opts ...pulumi.ResourceOption) (*OrganizationIamPolicy, error) {
	var resource OrganizationIamPolicy
	err := ctx.ReadResource("google-cloud:cloudresourcemanager/v3:OrganizationIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationIamPolicy resources.
type organizationIamPolicyState struct {
}

type OrganizationIamPolicyState struct {
}

func (OrganizationIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationIamPolicyState)(nil)).Elem()
}

type organizationIamPolicyArgs struct {
	OrganizationsId string `pulumi:"organizationsId"`
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy *Policy `pulumi:"policy"`
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask *string `pulumi:"updateMask"`
}

// The set of arguments for constructing a OrganizationIamPolicy resource.
type OrganizationIamPolicyArgs struct {
	OrganizationsId pulumi.StringInput
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy PolicyPtrInput
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask pulumi.StringPtrInput
}

func (OrganizationIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationIamPolicyArgs)(nil)).Elem()
}

type OrganizationIamPolicyInput interface {
	pulumi.Input

	ToOrganizationIamPolicyOutput() OrganizationIamPolicyOutput
	ToOrganizationIamPolicyOutputWithContext(ctx context.Context) OrganizationIamPolicyOutput
}

func (*OrganizationIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationIamPolicy)(nil))
}

func (i *OrganizationIamPolicy) ToOrganizationIamPolicyOutput() OrganizationIamPolicyOutput {
	return i.ToOrganizationIamPolicyOutputWithContext(context.Background())
}

func (i *OrganizationIamPolicy) ToOrganizationIamPolicyOutputWithContext(ctx context.Context) OrganizationIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationIamPolicyOutput)
}

type OrganizationIamPolicyOutput struct {
	*pulumi.OutputState
}

func (OrganizationIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationIamPolicy)(nil))
}

func (o OrganizationIamPolicyOutput) ToOrganizationIamPolicyOutput() OrganizationIamPolicyOutput {
	return o
}

func (o OrganizationIamPolicyOutput) ToOrganizationIamPolicyOutputWithContext(ctx context.Context) OrganizationIamPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationIamPolicyOutput{})
}
