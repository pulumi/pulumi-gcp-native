// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a Serverless VPC Access connector. Returns NOT_FOUND if the resource does not exist.
func LookupConnector(ctx *pulumi.Context, args *LookupConnectorArgs, opts ...pulumi.InvokeOption) (*LookupConnectorResult, error) {
	var rv LookupConnectorResult
	err := ctx.Invoke("google-native:vpcaccess/v1:getConnector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConnectorArgs struct {
	ConnectorId string `pulumi:"connectorId"`
	Location    string `pulumi:"location"`
	Project     string `pulumi:"project"`
}

type LookupConnectorResult struct {
	// List of projects using the connector.
	ConnectedProjects []string `pulumi:"connectedProjects"`
	// The range of internal addresses that follows RFC 4632 notation. Example: `10.132.0.0/28`.
	IpCidrRange string `pulumi:"ipCidrRange"`
	// Machine type of VM Instance underlying connector. Default is e2-micro
	MachineType string `pulumi:"machineType"`
	// Maximum value of instances in autoscaling group underlying the connector.
	MaxInstances int `pulumi:"maxInstances"`
	// Maximum throughput of the connector in Mbps. Default is 300, max is 1000.
	MaxThroughput int `pulumi:"maxThroughput"`
	// Minimum value of instances in autoscaling group underlying the connector.
	MinInstances int `pulumi:"minInstances"`
	// Minimum throughput of the connector in Mbps. Default and min is 200.
	MinThroughput int `pulumi:"minThroughput"`
	// The resource name in the format `projects/*/locations/*/connectors/*`.
	Name string `pulumi:"name"`
	// Name of a VPC network.
	Network string `pulumi:"network"`
	// State of the VPC access connector.
	State string `pulumi:"state"`
	// The subnet in which to house the VPC Access Connector.
	Subnet SubnetResponse `pulumi:"subnet"`
}
