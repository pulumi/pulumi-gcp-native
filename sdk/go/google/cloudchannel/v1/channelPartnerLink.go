// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Initiates a channel partner link between a distributor and a reseller, or between resellers in an n-tier reseller channel. Invited partners need to follow the invite_link_uri provided in the response to accept. After accepting the invitation, a link is set up between the two parties. You must be a distributor to call this method. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * ALREADY_EXISTS: The ChannelPartnerLink sent in the request already exists. * NOT_FOUND: No Cloud Identity customer exists for provided domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The new ChannelPartnerLink resource.
// Auto-naming is currently not supported for this resource.
// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
// on Google Cloud even though it will be deleted from Pulumi state.
type ChannelPartnerLink struct {
	pulumi.CustomResourceState

	// Cloud Identity info of the channel partner (IR).
	ChannelPartnerCloudIdentityInfo GoogleCloudChannelV1CloudIdentityInfoResponseOutput `pulumi:"channelPartnerCloudIdentityInfo"`
	// Timestamp of when the channel partner link is created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// URI of the web page where partner accepts the link invitation.
	InviteLinkUri pulumi.StringOutput `pulumi:"inviteLinkUri"`
	// State of the channel partner link.
	LinkState pulumi.StringOutput `pulumi:"linkState"`
	// Resource name for the channel partner link, in the format accounts/{account_id}/channelPartnerLinks/{id}.
	Name pulumi.StringOutput `pulumi:"name"`
	// Public identifier that a customer must use to generate a transfer token to move to this distributor-reseller combination.
	PublicId pulumi.StringOutput `pulumi:"publicId"`
	// Cloud Identity ID of the linked reseller.
	ResellerCloudIdentityId pulumi.StringOutput `pulumi:"resellerCloudIdentityId"`
	// Timestamp of when the channel partner link is updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewChannelPartnerLink registers a new resource with the given unique name, arguments, and options.
func NewChannelPartnerLink(ctx *pulumi.Context,
	name string, args *ChannelPartnerLinkArgs, opts ...pulumi.ResourceOption) (*ChannelPartnerLink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.LinkState == nil {
		return nil, errors.New("invalid value for required argument 'LinkState'")
	}
	if args.ResellerCloudIdentityId == nil {
		return nil, errors.New("invalid value for required argument 'ResellerCloudIdentityId'")
	}
	var resource ChannelPartnerLink
	err := ctx.RegisterResource("google-native:cloudchannel/v1:ChannelPartnerLink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetChannelPartnerLink gets an existing ChannelPartnerLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetChannelPartnerLink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ChannelPartnerLinkState, opts ...pulumi.ResourceOption) (*ChannelPartnerLink, error) {
	var resource ChannelPartnerLink
	err := ctx.ReadResource("google-native:cloudchannel/v1:ChannelPartnerLink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ChannelPartnerLink resources.
type channelPartnerLinkState struct {
}

type ChannelPartnerLinkState struct {
}

func (ChannelPartnerLinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*channelPartnerLinkState)(nil)).Elem()
}

type channelPartnerLinkArgs struct {
	AccountId string `pulumi:"accountId"`
	// State of the channel partner link.
	LinkState ChannelPartnerLinkLinkState `pulumi:"linkState"`
	// Cloud Identity ID of the linked reseller.
	ResellerCloudIdentityId string `pulumi:"resellerCloudIdentityId"`
}

// The set of arguments for constructing a ChannelPartnerLink resource.
type ChannelPartnerLinkArgs struct {
	AccountId pulumi.StringInput
	// State of the channel partner link.
	LinkState ChannelPartnerLinkLinkStateInput
	// Cloud Identity ID of the linked reseller.
	ResellerCloudIdentityId pulumi.StringInput
}

func (ChannelPartnerLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*channelPartnerLinkArgs)(nil)).Elem()
}

type ChannelPartnerLinkInput interface {
	pulumi.Input

	ToChannelPartnerLinkOutput() ChannelPartnerLinkOutput
	ToChannelPartnerLinkOutputWithContext(ctx context.Context) ChannelPartnerLinkOutput
}

func (*ChannelPartnerLink) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelPartnerLink)(nil)).Elem()
}

func (i *ChannelPartnerLink) ToChannelPartnerLinkOutput() ChannelPartnerLinkOutput {
	return i.ToChannelPartnerLinkOutputWithContext(context.Background())
}

func (i *ChannelPartnerLink) ToChannelPartnerLinkOutputWithContext(ctx context.Context) ChannelPartnerLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelPartnerLinkOutput)
}

type ChannelPartnerLinkOutput struct{ *pulumi.OutputState }

func (ChannelPartnerLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelPartnerLink)(nil)).Elem()
}

func (o ChannelPartnerLinkOutput) ToChannelPartnerLinkOutput() ChannelPartnerLinkOutput {
	return o
}

func (o ChannelPartnerLinkOutput) ToChannelPartnerLinkOutputWithContext(ctx context.Context) ChannelPartnerLinkOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelPartnerLinkInput)(nil)).Elem(), &ChannelPartnerLink{})
	pulumi.RegisterOutputType(ChannelPartnerLinkOutput{})
}
