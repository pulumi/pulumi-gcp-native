// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Association links that an entitlement has to other entitlements.
type GoogleCloudChannelV1AssociationInfo struct {
	// The name of the base entitlement, for which this entitlement is an add-on.
	BaseEntitlement *string `pulumi:"baseEntitlement"`
}

// GoogleCloudChannelV1AssociationInfoInput is an input type that accepts GoogleCloudChannelV1AssociationInfoArgs and GoogleCloudChannelV1AssociationInfoOutput values.
// You can construct a concrete instance of `GoogleCloudChannelV1AssociationInfoInput` via:
//
//          GoogleCloudChannelV1AssociationInfoArgs{...}
type GoogleCloudChannelV1AssociationInfoInput interface {
	pulumi.Input

	ToGoogleCloudChannelV1AssociationInfoOutput() GoogleCloudChannelV1AssociationInfoOutput
	ToGoogleCloudChannelV1AssociationInfoOutputWithContext(context.Context) GoogleCloudChannelV1AssociationInfoOutput
}

// Association links that an entitlement has to other entitlements.
type GoogleCloudChannelV1AssociationInfoArgs struct {
	// The name of the base entitlement, for which this entitlement is an add-on.
	BaseEntitlement pulumi.StringPtrInput `pulumi:"baseEntitlement"`
}

func (GoogleCloudChannelV1AssociationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1AssociationInfo)(nil)).Elem()
}

func (i GoogleCloudChannelV1AssociationInfoArgs) ToGoogleCloudChannelV1AssociationInfoOutput() GoogleCloudChannelV1AssociationInfoOutput {
	return i.ToGoogleCloudChannelV1AssociationInfoOutputWithContext(context.Background())
}

func (i GoogleCloudChannelV1AssociationInfoArgs) ToGoogleCloudChannelV1AssociationInfoOutputWithContext(ctx context.Context) GoogleCloudChannelV1AssociationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1AssociationInfoOutput)
}

func (i GoogleCloudChannelV1AssociationInfoArgs) ToGoogleCloudChannelV1AssociationInfoPtrOutput() GoogleCloudChannelV1AssociationInfoPtrOutput {
	return i.ToGoogleCloudChannelV1AssociationInfoPtrOutputWithContext(context.Background())
}

func (i GoogleCloudChannelV1AssociationInfoArgs) ToGoogleCloudChannelV1AssociationInfoPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1AssociationInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1AssociationInfoOutput).ToGoogleCloudChannelV1AssociationInfoPtrOutputWithContext(ctx)
}

// GoogleCloudChannelV1AssociationInfoPtrInput is an input type that accepts GoogleCloudChannelV1AssociationInfoArgs, GoogleCloudChannelV1AssociationInfoPtr and GoogleCloudChannelV1AssociationInfoPtrOutput values.
// You can construct a concrete instance of `GoogleCloudChannelV1AssociationInfoPtrInput` via:
//
//          GoogleCloudChannelV1AssociationInfoArgs{...}
//
//  or:
//
//          nil
type GoogleCloudChannelV1AssociationInfoPtrInput interface {
	pulumi.Input

	ToGoogleCloudChannelV1AssociationInfoPtrOutput() GoogleCloudChannelV1AssociationInfoPtrOutput
	ToGoogleCloudChannelV1AssociationInfoPtrOutputWithContext(context.Context) GoogleCloudChannelV1AssociationInfoPtrOutput
}

type googleCloudChannelV1AssociationInfoPtrType GoogleCloudChannelV1AssociationInfoArgs

func GoogleCloudChannelV1AssociationInfoPtr(v *GoogleCloudChannelV1AssociationInfoArgs) GoogleCloudChannelV1AssociationInfoPtrInput {
	return (*googleCloudChannelV1AssociationInfoPtrType)(v)
}

func (*googleCloudChannelV1AssociationInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudChannelV1AssociationInfo)(nil)).Elem()
}

func (i *googleCloudChannelV1AssociationInfoPtrType) ToGoogleCloudChannelV1AssociationInfoPtrOutput() GoogleCloudChannelV1AssociationInfoPtrOutput {
	return i.ToGoogleCloudChannelV1AssociationInfoPtrOutputWithContext(context.Background())
}

func (i *googleCloudChannelV1AssociationInfoPtrType) ToGoogleCloudChannelV1AssociationInfoPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1AssociationInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1AssociationInfoPtrOutput)
}

// Association links that an entitlement has to other entitlements.
type GoogleCloudChannelV1AssociationInfoOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1AssociationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1AssociationInfo)(nil)).Elem()
}

func (o GoogleCloudChannelV1AssociationInfoOutput) ToGoogleCloudChannelV1AssociationInfoOutput() GoogleCloudChannelV1AssociationInfoOutput {
	return o
}

func (o GoogleCloudChannelV1AssociationInfoOutput) ToGoogleCloudChannelV1AssociationInfoOutputWithContext(ctx context.Context) GoogleCloudChannelV1AssociationInfoOutput {
	return o
}

func (o GoogleCloudChannelV1AssociationInfoOutput) ToGoogleCloudChannelV1AssociationInfoPtrOutput() GoogleCloudChannelV1AssociationInfoPtrOutput {
	return o.ToGoogleCloudChannelV1AssociationInfoPtrOutputWithContext(context.Background())
}

func (o GoogleCloudChannelV1AssociationInfoOutput) ToGoogleCloudChannelV1AssociationInfoPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1AssociationInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudChannelV1AssociationInfo) *GoogleCloudChannelV1AssociationInfo {
		return &v
	}).(GoogleCloudChannelV1AssociationInfoPtrOutput)
}

// The name of the base entitlement, for which this entitlement is an add-on.
func (o GoogleCloudChannelV1AssociationInfoOutput) BaseEntitlement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1AssociationInfo) *string { return v.BaseEntitlement }).(pulumi.StringPtrOutput)
}

type GoogleCloudChannelV1AssociationInfoPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1AssociationInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudChannelV1AssociationInfo)(nil)).Elem()
}

func (o GoogleCloudChannelV1AssociationInfoPtrOutput) ToGoogleCloudChannelV1AssociationInfoPtrOutput() GoogleCloudChannelV1AssociationInfoPtrOutput {
	return o
}

func (o GoogleCloudChannelV1AssociationInfoPtrOutput) ToGoogleCloudChannelV1AssociationInfoPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1AssociationInfoPtrOutput {
	return o
}

func (o GoogleCloudChannelV1AssociationInfoPtrOutput) Elem() GoogleCloudChannelV1AssociationInfoOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1AssociationInfo) GoogleCloudChannelV1AssociationInfo {
		if v != nil {
			return *v
		}
		var ret GoogleCloudChannelV1AssociationInfo
		return ret
	}).(GoogleCloudChannelV1AssociationInfoOutput)
}

// The name of the base entitlement, for which this entitlement is an add-on.
func (o GoogleCloudChannelV1AssociationInfoPtrOutput) BaseEntitlement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1AssociationInfo) *string {
		if v == nil {
			return nil
		}
		return v.BaseEntitlement
	}).(pulumi.StringPtrOutput)
}

// Association links that an entitlement has to other entitlements.
type GoogleCloudChannelV1AssociationInfoResponse struct {
	// The name of the base entitlement, for which this entitlement is an add-on.
	BaseEntitlement string `pulumi:"baseEntitlement"`
}

// Association links that an entitlement has to other entitlements.
type GoogleCloudChannelV1AssociationInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1AssociationInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1AssociationInfoResponse)(nil)).Elem()
}

func (o GoogleCloudChannelV1AssociationInfoResponseOutput) ToGoogleCloudChannelV1AssociationInfoResponseOutput() GoogleCloudChannelV1AssociationInfoResponseOutput {
	return o
}

func (o GoogleCloudChannelV1AssociationInfoResponseOutput) ToGoogleCloudChannelV1AssociationInfoResponseOutputWithContext(ctx context.Context) GoogleCloudChannelV1AssociationInfoResponseOutput {
	return o
}

// The name of the base entitlement, for which this entitlement is an add-on.
func (o GoogleCloudChannelV1AssociationInfoResponseOutput) BaseEntitlement() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1AssociationInfoResponse) string { return v.BaseEntitlement }).(pulumi.StringOutput)
}

// Cloud Identity information for the Cloud Channel Customer.
type GoogleCloudChannelV1CloudIdentityInfoResponse struct {
	// URI of Customer's Admin console dashboard.
	AdminConsoleUri string `pulumi:"adminConsoleUri"`
	// The alternate email.
	AlternateEmail string `pulumi:"alternateEmail"`
	// CustomerType indicates verification type needed for using services.
	CustomerType string `pulumi:"customerType"`
	// Edu information about the customer.
	EduData GoogleCloudChannelV1EduDataResponse `pulumi:"eduData"`
	// Whether the domain is verified. This field is not returned for a Customer's cloud_identity_info resource. Partners can use the domains.get() method of the Workspace SDK's Directory API, or listen to the PRIMARY_DOMAIN_VERIFIED Pub/Sub event in to track domain verification of their resolve Workspace customers.
	IsDomainVerified bool `pulumi:"isDomainVerified"`
	// Language code.
	LanguageCode string `pulumi:"languageCode"`
	// Phone number associated with the Cloud Identity.
	PhoneNumber string `pulumi:"phoneNumber"`
	// The primary domain name.
	PrimaryDomain string `pulumi:"primaryDomain"`
}

// Cloud Identity information for the Cloud Channel Customer.
type GoogleCloudChannelV1CloudIdentityInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1CloudIdentityInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1CloudIdentityInfoResponse)(nil)).Elem()
}

func (o GoogleCloudChannelV1CloudIdentityInfoResponseOutput) ToGoogleCloudChannelV1CloudIdentityInfoResponseOutput() GoogleCloudChannelV1CloudIdentityInfoResponseOutput {
	return o
}

func (o GoogleCloudChannelV1CloudIdentityInfoResponseOutput) ToGoogleCloudChannelV1CloudIdentityInfoResponseOutputWithContext(ctx context.Context) GoogleCloudChannelV1CloudIdentityInfoResponseOutput {
	return o
}

// URI of Customer's Admin console dashboard.
func (o GoogleCloudChannelV1CloudIdentityInfoResponseOutput) AdminConsoleUri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1CloudIdentityInfoResponse) string { return v.AdminConsoleUri }).(pulumi.StringOutput)
}

// The alternate email.
func (o GoogleCloudChannelV1CloudIdentityInfoResponseOutput) AlternateEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1CloudIdentityInfoResponse) string { return v.AlternateEmail }).(pulumi.StringOutput)
}

// CustomerType indicates verification type needed for using services.
func (o GoogleCloudChannelV1CloudIdentityInfoResponseOutput) CustomerType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1CloudIdentityInfoResponse) string { return v.CustomerType }).(pulumi.StringOutput)
}

// Edu information about the customer.
func (o GoogleCloudChannelV1CloudIdentityInfoResponseOutput) EduData() GoogleCloudChannelV1EduDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1CloudIdentityInfoResponse) GoogleCloudChannelV1EduDataResponse {
		return v.EduData
	}).(GoogleCloudChannelV1EduDataResponseOutput)
}

// Whether the domain is verified. This field is not returned for a Customer's cloud_identity_info resource. Partners can use the domains.get() method of the Workspace SDK's Directory API, or listen to the PRIMARY_DOMAIN_VERIFIED Pub/Sub event in to track domain verification of their resolve Workspace customers.
func (o GoogleCloudChannelV1CloudIdentityInfoResponseOutput) IsDomainVerified() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1CloudIdentityInfoResponse) bool { return v.IsDomainVerified }).(pulumi.BoolOutput)
}

// Language code.
func (o GoogleCloudChannelV1CloudIdentityInfoResponseOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1CloudIdentityInfoResponse) string { return v.LanguageCode }).(pulumi.StringOutput)
}

// Phone number associated with the Cloud Identity.
func (o GoogleCloudChannelV1CloudIdentityInfoResponseOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1CloudIdentityInfoResponse) string { return v.PhoneNumber }).(pulumi.StringOutput)
}

// The primary domain name.
func (o GoogleCloudChannelV1CloudIdentityInfoResponseOutput) PrimaryDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1CloudIdentityInfoResponse) string { return v.PrimaryDomain }).(pulumi.StringOutput)
}

// Commitment settings for commitment-based offers.
type GoogleCloudChannelV1CommitmentSettings struct {
	// Optional. Renewal settings applicable for a commitment-based Offer.
	RenewalSettings *GoogleCloudChannelV1RenewalSettings `pulumi:"renewalSettings"`
}

// GoogleCloudChannelV1CommitmentSettingsInput is an input type that accepts GoogleCloudChannelV1CommitmentSettingsArgs and GoogleCloudChannelV1CommitmentSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudChannelV1CommitmentSettingsInput` via:
//
//          GoogleCloudChannelV1CommitmentSettingsArgs{...}
type GoogleCloudChannelV1CommitmentSettingsInput interface {
	pulumi.Input

	ToGoogleCloudChannelV1CommitmentSettingsOutput() GoogleCloudChannelV1CommitmentSettingsOutput
	ToGoogleCloudChannelV1CommitmentSettingsOutputWithContext(context.Context) GoogleCloudChannelV1CommitmentSettingsOutput
}

// Commitment settings for commitment-based offers.
type GoogleCloudChannelV1CommitmentSettingsArgs struct {
	// Optional. Renewal settings applicable for a commitment-based Offer.
	RenewalSettings GoogleCloudChannelV1RenewalSettingsPtrInput `pulumi:"renewalSettings"`
}

func (GoogleCloudChannelV1CommitmentSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1CommitmentSettings)(nil)).Elem()
}

func (i GoogleCloudChannelV1CommitmentSettingsArgs) ToGoogleCloudChannelV1CommitmentSettingsOutput() GoogleCloudChannelV1CommitmentSettingsOutput {
	return i.ToGoogleCloudChannelV1CommitmentSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudChannelV1CommitmentSettingsArgs) ToGoogleCloudChannelV1CommitmentSettingsOutputWithContext(ctx context.Context) GoogleCloudChannelV1CommitmentSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1CommitmentSettingsOutput)
}

func (i GoogleCloudChannelV1CommitmentSettingsArgs) ToGoogleCloudChannelV1CommitmentSettingsPtrOutput() GoogleCloudChannelV1CommitmentSettingsPtrOutput {
	return i.ToGoogleCloudChannelV1CommitmentSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudChannelV1CommitmentSettingsArgs) ToGoogleCloudChannelV1CommitmentSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1CommitmentSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1CommitmentSettingsOutput).ToGoogleCloudChannelV1CommitmentSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudChannelV1CommitmentSettingsPtrInput is an input type that accepts GoogleCloudChannelV1CommitmentSettingsArgs, GoogleCloudChannelV1CommitmentSettingsPtr and GoogleCloudChannelV1CommitmentSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudChannelV1CommitmentSettingsPtrInput` via:
//
//          GoogleCloudChannelV1CommitmentSettingsArgs{...}
//
//  or:
//
//          nil
type GoogleCloudChannelV1CommitmentSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudChannelV1CommitmentSettingsPtrOutput() GoogleCloudChannelV1CommitmentSettingsPtrOutput
	ToGoogleCloudChannelV1CommitmentSettingsPtrOutputWithContext(context.Context) GoogleCloudChannelV1CommitmentSettingsPtrOutput
}

type googleCloudChannelV1CommitmentSettingsPtrType GoogleCloudChannelV1CommitmentSettingsArgs

func GoogleCloudChannelV1CommitmentSettingsPtr(v *GoogleCloudChannelV1CommitmentSettingsArgs) GoogleCloudChannelV1CommitmentSettingsPtrInput {
	return (*googleCloudChannelV1CommitmentSettingsPtrType)(v)
}

func (*googleCloudChannelV1CommitmentSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudChannelV1CommitmentSettings)(nil)).Elem()
}

func (i *googleCloudChannelV1CommitmentSettingsPtrType) ToGoogleCloudChannelV1CommitmentSettingsPtrOutput() GoogleCloudChannelV1CommitmentSettingsPtrOutput {
	return i.ToGoogleCloudChannelV1CommitmentSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudChannelV1CommitmentSettingsPtrType) ToGoogleCloudChannelV1CommitmentSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1CommitmentSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1CommitmentSettingsPtrOutput)
}

// Commitment settings for commitment-based offers.
type GoogleCloudChannelV1CommitmentSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1CommitmentSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1CommitmentSettings)(nil)).Elem()
}

func (o GoogleCloudChannelV1CommitmentSettingsOutput) ToGoogleCloudChannelV1CommitmentSettingsOutput() GoogleCloudChannelV1CommitmentSettingsOutput {
	return o
}

func (o GoogleCloudChannelV1CommitmentSettingsOutput) ToGoogleCloudChannelV1CommitmentSettingsOutputWithContext(ctx context.Context) GoogleCloudChannelV1CommitmentSettingsOutput {
	return o
}

func (o GoogleCloudChannelV1CommitmentSettingsOutput) ToGoogleCloudChannelV1CommitmentSettingsPtrOutput() GoogleCloudChannelV1CommitmentSettingsPtrOutput {
	return o.ToGoogleCloudChannelV1CommitmentSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudChannelV1CommitmentSettingsOutput) ToGoogleCloudChannelV1CommitmentSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1CommitmentSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudChannelV1CommitmentSettings) *GoogleCloudChannelV1CommitmentSettings {
		return &v
	}).(GoogleCloudChannelV1CommitmentSettingsPtrOutput)
}

// Optional. Renewal settings applicable for a commitment-based Offer.
func (o GoogleCloudChannelV1CommitmentSettingsOutput) RenewalSettings() GoogleCloudChannelV1RenewalSettingsPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1CommitmentSettings) *GoogleCloudChannelV1RenewalSettings {
		return v.RenewalSettings
	}).(GoogleCloudChannelV1RenewalSettingsPtrOutput)
}

type GoogleCloudChannelV1CommitmentSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1CommitmentSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudChannelV1CommitmentSettings)(nil)).Elem()
}

func (o GoogleCloudChannelV1CommitmentSettingsPtrOutput) ToGoogleCloudChannelV1CommitmentSettingsPtrOutput() GoogleCloudChannelV1CommitmentSettingsPtrOutput {
	return o
}

func (o GoogleCloudChannelV1CommitmentSettingsPtrOutput) ToGoogleCloudChannelV1CommitmentSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1CommitmentSettingsPtrOutput {
	return o
}

func (o GoogleCloudChannelV1CommitmentSettingsPtrOutput) Elem() GoogleCloudChannelV1CommitmentSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1CommitmentSettings) GoogleCloudChannelV1CommitmentSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudChannelV1CommitmentSettings
		return ret
	}).(GoogleCloudChannelV1CommitmentSettingsOutput)
}

// Optional. Renewal settings applicable for a commitment-based Offer.
func (o GoogleCloudChannelV1CommitmentSettingsPtrOutput) RenewalSettings() GoogleCloudChannelV1RenewalSettingsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1CommitmentSettings) *GoogleCloudChannelV1RenewalSettings {
		if v == nil {
			return nil
		}
		return v.RenewalSettings
	}).(GoogleCloudChannelV1RenewalSettingsPtrOutput)
}

// Commitment settings for commitment-based offers.
type GoogleCloudChannelV1CommitmentSettingsResponse struct {
	// Commitment end timestamp.
	EndTime string `pulumi:"endTime"`
	// Optional. Renewal settings applicable for a commitment-based Offer.
	RenewalSettings GoogleCloudChannelV1RenewalSettingsResponse `pulumi:"renewalSettings"`
	// Commitment start timestamp.
	StartTime string `pulumi:"startTime"`
}

// Commitment settings for commitment-based offers.
type GoogleCloudChannelV1CommitmentSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1CommitmentSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1CommitmentSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudChannelV1CommitmentSettingsResponseOutput) ToGoogleCloudChannelV1CommitmentSettingsResponseOutput() GoogleCloudChannelV1CommitmentSettingsResponseOutput {
	return o
}

func (o GoogleCloudChannelV1CommitmentSettingsResponseOutput) ToGoogleCloudChannelV1CommitmentSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudChannelV1CommitmentSettingsResponseOutput {
	return o
}

// Commitment end timestamp.
func (o GoogleCloudChannelV1CommitmentSettingsResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1CommitmentSettingsResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// Optional. Renewal settings applicable for a commitment-based Offer.
func (o GoogleCloudChannelV1CommitmentSettingsResponseOutput) RenewalSettings() GoogleCloudChannelV1RenewalSettingsResponseOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1CommitmentSettingsResponse) GoogleCloudChannelV1RenewalSettingsResponse {
		return v.RenewalSettings
	}).(GoogleCloudChannelV1RenewalSettingsResponseOutput)
}

// Commitment start timestamp.
func (o GoogleCloudChannelV1CommitmentSettingsResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1CommitmentSettingsResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Contact information for a customer account.
type GoogleCloudChannelV1ContactInfo struct {
	// The customer account's contact email. Required for entitlements that create admin.google.com accounts, and serves as the customer's username for those accounts. Use this email to invite Team customers.
	Email *string `pulumi:"email"`
	// The customer account contact's first name. Optional for Team customers.
	FirstName *string `pulumi:"firstName"`
	// The customer account contact's last name. Optional for Team customers.
	LastName *string `pulumi:"lastName"`
	// The customer account's contact phone number.
	Phone *string `pulumi:"phone"`
	// Optional. The customer account contact's job title.
	Title *string `pulumi:"title"`
}

// GoogleCloudChannelV1ContactInfoInput is an input type that accepts GoogleCloudChannelV1ContactInfoArgs and GoogleCloudChannelV1ContactInfoOutput values.
// You can construct a concrete instance of `GoogleCloudChannelV1ContactInfoInput` via:
//
//          GoogleCloudChannelV1ContactInfoArgs{...}
type GoogleCloudChannelV1ContactInfoInput interface {
	pulumi.Input

	ToGoogleCloudChannelV1ContactInfoOutput() GoogleCloudChannelV1ContactInfoOutput
	ToGoogleCloudChannelV1ContactInfoOutputWithContext(context.Context) GoogleCloudChannelV1ContactInfoOutput
}

// Contact information for a customer account.
type GoogleCloudChannelV1ContactInfoArgs struct {
	// The customer account's contact email. Required for entitlements that create admin.google.com accounts, and serves as the customer's username for those accounts. Use this email to invite Team customers.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The customer account contact's first name. Optional for Team customers.
	FirstName pulumi.StringPtrInput `pulumi:"firstName"`
	// The customer account contact's last name. Optional for Team customers.
	LastName pulumi.StringPtrInput `pulumi:"lastName"`
	// The customer account's contact phone number.
	Phone pulumi.StringPtrInput `pulumi:"phone"`
	// Optional. The customer account contact's job title.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (GoogleCloudChannelV1ContactInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1ContactInfo)(nil)).Elem()
}

func (i GoogleCloudChannelV1ContactInfoArgs) ToGoogleCloudChannelV1ContactInfoOutput() GoogleCloudChannelV1ContactInfoOutput {
	return i.ToGoogleCloudChannelV1ContactInfoOutputWithContext(context.Background())
}

func (i GoogleCloudChannelV1ContactInfoArgs) ToGoogleCloudChannelV1ContactInfoOutputWithContext(ctx context.Context) GoogleCloudChannelV1ContactInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1ContactInfoOutput)
}

func (i GoogleCloudChannelV1ContactInfoArgs) ToGoogleCloudChannelV1ContactInfoPtrOutput() GoogleCloudChannelV1ContactInfoPtrOutput {
	return i.ToGoogleCloudChannelV1ContactInfoPtrOutputWithContext(context.Background())
}

func (i GoogleCloudChannelV1ContactInfoArgs) ToGoogleCloudChannelV1ContactInfoPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1ContactInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1ContactInfoOutput).ToGoogleCloudChannelV1ContactInfoPtrOutputWithContext(ctx)
}

// GoogleCloudChannelV1ContactInfoPtrInput is an input type that accepts GoogleCloudChannelV1ContactInfoArgs, GoogleCloudChannelV1ContactInfoPtr and GoogleCloudChannelV1ContactInfoPtrOutput values.
// You can construct a concrete instance of `GoogleCloudChannelV1ContactInfoPtrInput` via:
//
//          GoogleCloudChannelV1ContactInfoArgs{...}
//
//  or:
//
//          nil
type GoogleCloudChannelV1ContactInfoPtrInput interface {
	pulumi.Input

	ToGoogleCloudChannelV1ContactInfoPtrOutput() GoogleCloudChannelV1ContactInfoPtrOutput
	ToGoogleCloudChannelV1ContactInfoPtrOutputWithContext(context.Context) GoogleCloudChannelV1ContactInfoPtrOutput
}

type googleCloudChannelV1ContactInfoPtrType GoogleCloudChannelV1ContactInfoArgs

func GoogleCloudChannelV1ContactInfoPtr(v *GoogleCloudChannelV1ContactInfoArgs) GoogleCloudChannelV1ContactInfoPtrInput {
	return (*googleCloudChannelV1ContactInfoPtrType)(v)
}

func (*googleCloudChannelV1ContactInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudChannelV1ContactInfo)(nil)).Elem()
}

func (i *googleCloudChannelV1ContactInfoPtrType) ToGoogleCloudChannelV1ContactInfoPtrOutput() GoogleCloudChannelV1ContactInfoPtrOutput {
	return i.ToGoogleCloudChannelV1ContactInfoPtrOutputWithContext(context.Background())
}

func (i *googleCloudChannelV1ContactInfoPtrType) ToGoogleCloudChannelV1ContactInfoPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1ContactInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1ContactInfoPtrOutput)
}

// Contact information for a customer account.
type GoogleCloudChannelV1ContactInfoOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1ContactInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1ContactInfo)(nil)).Elem()
}

func (o GoogleCloudChannelV1ContactInfoOutput) ToGoogleCloudChannelV1ContactInfoOutput() GoogleCloudChannelV1ContactInfoOutput {
	return o
}

func (o GoogleCloudChannelV1ContactInfoOutput) ToGoogleCloudChannelV1ContactInfoOutputWithContext(ctx context.Context) GoogleCloudChannelV1ContactInfoOutput {
	return o
}

func (o GoogleCloudChannelV1ContactInfoOutput) ToGoogleCloudChannelV1ContactInfoPtrOutput() GoogleCloudChannelV1ContactInfoPtrOutput {
	return o.ToGoogleCloudChannelV1ContactInfoPtrOutputWithContext(context.Background())
}

func (o GoogleCloudChannelV1ContactInfoOutput) ToGoogleCloudChannelV1ContactInfoPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1ContactInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudChannelV1ContactInfo) *GoogleCloudChannelV1ContactInfo {
		return &v
	}).(GoogleCloudChannelV1ContactInfoPtrOutput)
}

// The customer account's contact email. Required for entitlements that create admin.google.com accounts, and serves as the customer's username for those accounts. Use this email to invite Team customers.
func (o GoogleCloudChannelV1ContactInfoOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ContactInfo) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The customer account contact's first name. Optional for Team customers.
func (o GoogleCloudChannelV1ContactInfoOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ContactInfo) *string { return v.FirstName }).(pulumi.StringPtrOutput)
}

// The customer account contact's last name. Optional for Team customers.
func (o GoogleCloudChannelV1ContactInfoOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ContactInfo) *string { return v.LastName }).(pulumi.StringPtrOutput)
}

// The customer account's contact phone number.
func (o GoogleCloudChannelV1ContactInfoOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ContactInfo) *string { return v.Phone }).(pulumi.StringPtrOutput)
}

// Optional. The customer account contact's job title.
func (o GoogleCloudChannelV1ContactInfoOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ContactInfo) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type GoogleCloudChannelV1ContactInfoPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1ContactInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudChannelV1ContactInfo)(nil)).Elem()
}

func (o GoogleCloudChannelV1ContactInfoPtrOutput) ToGoogleCloudChannelV1ContactInfoPtrOutput() GoogleCloudChannelV1ContactInfoPtrOutput {
	return o
}

func (o GoogleCloudChannelV1ContactInfoPtrOutput) ToGoogleCloudChannelV1ContactInfoPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1ContactInfoPtrOutput {
	return o
}

func (o GoogleCloudChannelV1ContactInfoPtrOutput) Elem() GoogleCloudChannelV1ContactInfoOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1ContactInfo) GoogleCloudChannelV1ContactInfo {
		if v != nil {
			return *v
		}
		var ret GoogleCloudChannelV1ContactInfo
		return ret
	}).(GoogleCloudChannelV1ContactInfoOutput)
}

// The customer account's contact email. Required for entitlements that create admin.google.com accounts, and serves as the customer's username for those accounts. Use this email to invite Team customers.
func (o GoogleCloudChannelV1ContactInfoPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1ContactInfo) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The customer account contact's first name. Optional for Team customers.
func (o GoogleCloudChannelV1ContactInfoPtrOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1ContactInfo) *string {
		if v == nil {
			return nil
		}
		return v.FirstName
	}).(pulumi.StringPtrOutput)
}

// The customer account contact's last name. Optional for Team customers.
func (o GoogleCloudChannelV1ContactInfoPtrOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1ContactInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastName
	}).(pulumi.StringPtrOutput)
}

// The customer account's contact phone number.
func (o GoogleCloudChannelV1ContactInfoPtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1ContactInfo) *string {
		if v == nil {
			return nil
		}
		return v.Phone
	}).(pulumi.StringPtrOutput)
}

// Optional. The customer account contact's job title.
func (o GoogleCloudChannelV1ContactInfoPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1ContactInfo) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Contact information for a customer account.
type GoogleCloudChannelV1ContactInfoResponse struct {
	// The customer account contact's display name, formatted as a combination of the customer's first and last name.
	DisplayName string `pulumi:"displayName"`
	// The customer account's contact email. Required for entitlements that create admin.google.com accounts, and serves as the customer's username for those accounts. Use this email to invite Team customers.
	Email string `pulumi:"email"`
	// The customer account contact's first name. Optional for Team customers.
	FirstName string `pulumi:"firstName"`
	// The customer account contact's last name. Optional for Team customers.
	LastName string `pulumi:"lastName"`
	// The customer account's contact phone number.
	Phone string `pulumi:"phone"`
	// Optional. The customer account contact's job title.
	Title string `pulumi:"title"`
}

// Contact information for a customer account.
type GoogleCloudChannelV1ContactInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1ContactInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1ContactInfoResponse)(nil)).Elem()
}

func (o GoogleCloudChannelV1ContactInfoResponseOutput) ToGoogleCloudChannelV1ContactInfoResponseOutput() GoogleCloudChannelV1ContactInfoResponseOutput {
	return o
}

func (o GoogleCloudChannelV1ContactInfoResponseOutput) ToGoogleCloudChannelV1ContactInfoResponseOutputWithContext(ctx context.Context) GoogleCloudChannelV1ContactInfoResponseOutput {
	return o
}

// The customer account contact's display name, formatted as a combination of the customer's first and last name.
func (o GoogleCloudChannelV1ContactInfoResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ContactInfoResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The customer account's contact email. Required for entitlements that create admin.google.com accounts, and serves as the customer's username for those accounts. Use this email to invite Team customers.
func (o GoogleCloudChannelV1ContactInfoResponseOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ContactInfoResponse) string { return v.Email }).(pulumi.StringOutput)
}

// The customer account contact's first name. Optional for Team customers.
func (o GoogleCloudChannelV1ContactInfoResponseOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ContactInfoResponse) string { return v.FirstName }).(pulumi.StringOutput)
}

// The customer account contact's last name. Optional for Team customers.
func (o GoogleCloudChannelV1ContactInfoResponseOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ContactInfoResponse) string { return v.LastName }).(pulumi.StringOutput)
}

// The customer account's contact phone number.
func (o GoogleCloudChannelV1ContactInfoResponseOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ContactInfoResponse) string { return v.Phone }).(pulumi.StringOutput)
}

// Optional. The customer account contact's job title.
func (o GoogleCloudChannelV1ContactInfoResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ContactInfoResponse) string { return v.Title }).(pulumi.StringOutput)
}

// Required Edu Attributes
type GoogleCloudChannelV1EduDataResponse struct {
	// Size of the institute.
	InstituteSize string `pulumi:"instituteSize"`
	// Designated institute type of customer.
	InstituteType string `pulumi:"instituteType"`
	// Web address for the edu customer's institution.
	Website string `pulumi:"website"`
}

// Required Edu Attributes
type GoogleCloudChannelV1EduDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1EduDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1EduDataResponse)(nil)).Elem()
}

func (o GoogleCloudChannelV1EduDataResponseOutput) ToGoogleCloudChannelV1EduDataResponseOutput() GoogleCloudChannelV1EduDataResponseOutput {
	return o
}

func (o GoogleCloudChannelV1EduDataResponseOutput) ToGoogleCloudChannelV1EduDataResponseOutputWithContext(ctx context.Context) GoogleCloudChannelV1EduDataResponseOutput {
	return o
}

// Size of the institute.
func (o GoogleCloudChannelV1EduDataResponseOutput) InstituteSize() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1EduDataResponse) string { return v.InstituteSize }).(pulumi.StringOutput)
}

// Designated institute type of customer.
func (o GoogleCloudChannelV1EduDataResponseOutput) InstituteType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1EduDataResponse) string { return v.InstituteType }).(pulumi.StringOutput)
}

// Web address for the edu customer's institution.
func (o GoogleCloudChannelV1EduDataResponseOutput) Website() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1EduDataResponse) string { return v.Website }).(pulumi.StringOutput)
}

// Definition for extended entitlement parameters.
type GoogleCloudChannelV1Parameter struct {
	// Name of the parameter.
	Name *string `pulumi:"name"`
	// Value of the parameter.
	Value *GoogleCloudChannelV1Value `pulumi:"value"`
}

// GoogleCloudChannelV1ParameterInput is an input type that accepts GoogleCloudChannelV1ParameterArgs and GoogleCloudChannelV1ParameterOutput values.
// You can construct a concrete instance of `GoogleCloudChannelV1ParameterInput` via:
//
//          GoogleCloudChannelV1ParameterArgs{...}
type GoogleCloudChannelV1ParameterInput interface {
	pulumi.Input

	ToGoogleCloudChannelV1ParameterOutput() GoogleCloudChannelV1ParameterOutput
	ToGoogleCloudChannelV1ParameterOutputWithContext(context.Context) GoogleCloudChannelV1ParameterOutput
}

// Definition for extended entitlement parameters.
type GoogleCloudChannelV1ParameterArgs struct {
	// Name of the parameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Value of the parameter.
	Value GoogleCloudChannelV1ValuePtrInput `pulumi:"value"`
}

func (GoogleCloudChannelV1ParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1Parameter)(nil)).Elem()
}

func (i GoogleCloudChannelV1ParameterArgs) ToGoogleCloudChannelV1ParameterOutput() GoogleCloudChannelV1ParameterOutput {
	return i.ToGoogleCloudChannelV1ParameterOutputWithContext(context.Background())
}

func (i GoogleCloudChannelV1ParameterArgs) ToGoogleCloudChannelV1ParameterOutputWithContext(ctx context.Context) GoogleCloudChannelV1ParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1ParameterOutput)
}

// GoogleCloudChannelV1ParameterArrayInput is an input type that accepts GoogleCloudChannelV1ParameterArray and GoogleCloudChannelV1ParameterArrayOutput values.
// You can construct a concrete instance of `GoogleCloudChannelV1ParameterArrayInput` via:
//
//          GoogleCloudChannelV1ParameterArray{ GoogleCloudChannelV1ParameterArgs{...} }
type GoogleCloudChannelV1ParameterArrayInput interface {
	pulumi.Input

	ToGoogleCloudChannelV1ParameterArrayOutput() GoogleCloudChannelV1ParameterArrayOutput
	ToGoogleCloudChannelV1ParameterArrayOutputWithContext(context.Context) GoogleCloudChannelV1ParameterArrayOutput
}

type GoogleCloudChannelV1ParameterArray []GoogleCloudChannelV1ParameterInput

func (GoogleCloudChannelV1ParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudChannelV1Parameter)(nil)).Elem()
}

func (i GoogleCloudChannelV1ParameterArray) ToGoogleCloudChannelV1ParameterArrayOutput() GoogleCloudChannelV1ParameterArrayOutput {
	return i.ToGoogleCloudChannelV1ParameterArrayOutputWithContext(context.Background())
}

func (i GoogleCloudChannelV1ParameterArray) ToGoogleCloudChannelV1ParameterArrayOutputWithContext(ctx context.Context) GoogleCloudChannelV1ParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1ParameterArrayOutput)
}

// Definition for extended entitlement parameters.
type GoogleCloudChannelV1ParameterOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1ParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1Parameter)(nil)).Elem()
}

func (o GoogleCloudChannelV1ParameterOutput) ToGoogleCloudChannelV1ParameterOutput() GoogleCloudChannelV1ParameterOutput {
	return o
}

func (o GoogleCloudChannelV1ParameterOutput) ToGoogleCloudChannelV1ParameterOutputWithContext(ctx context.Context) GoogleCloudChannelV1ParameterOutput {
	return o
}

// Name of the parameter.
func (o GoogleCloudChannelV1ParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1Parameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Value of the parameter.
func (o GoogleCloudChannelV1ParameterOutput) Value() GoogleCloudChannelV1ValuePtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1Parameter) *GoogleCloudChannelV1Value { return v.Value }).(GoogleCloudChannelV1ValuePtrOutput)
}

type GoogleCloudChannelV1ParameterArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1ParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudChannelV1Parameter)(nil)).Elem()
}

func (o GoogleCloudChannelV1ParameterArrayOutput) ToGoogleCloudChannelV1ParameterArrayOutput() GoogleCloudChannelV1ParameterArrayOutput {
	return o
}

func (o GoogleCloudChannelV1ParameterArrayOutput) ToGoogleCloudChannelV1ParameterArrayOutputWithContext(ctx context.Context) GoogleCloudChannelV1ParameterArrayOutput {
	return o
}

func (o GoogleCloudChannelV1ParameterArrayOutput) Index(i pulumi.IntInput) GoogleCloudChannelV1ParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudChannelV1Parameter {
		return vs[0].([]GoogleCloudChannelV1Parameter)[vs[1].(int)]
	}).(GoogleCloudChannelV1ParameterOutput)
}

// Definition for extended entitlement parameters.
type GoogleCloudChannelV1ParameterResponse struct {
	// Specifies whether this parameter is allowed to be changed. For example, for a Google Workspace Business Starter entitlement in commitment plan, num_units is editable when entitlement is active.
	Editable bool `pulumi:"editable"`
	// Name of the parameter.
	Name string `pulumi:"name"`
	// Value of the parameter.
	Value GoogleCloudChannelV1ValueResponse `pulumi:"value"`
}

// Definition for extended entitlement parameters.
type GoogleCloudChannelV1ParameterResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1ParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1ParameterResponse)(nil)).Elem()
}

func (o GoogleCloudChannelV1ParameterResponseOutput) ToGoogleCloudChannelV1ParameterResponseOutput() GoogleCloudChannelV1ParameterResponseOutput {
	return o
}

func (o GoogleCloudChannelV1ParameterResponseOutput) ToGoogleCloudChannelV1ParameterResponseOutputWithContext(ctx context.Context) GoogleCloudChannelV1ParameterResponseOutput {
	return o
}

// Specifies whether this parameter is allowed to be changed. For example, for a Google Workspace Business Starter entitlement in commitment plan, num_units is editable when entitlement is active.
func (o GoogleCloudChannelV1ParameterResponseOutput) Editable() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ParameterResponse) bool { return v.Editable }).(pulumi.BoolOutput)
}

// Name of the parameter.
func (o GoogleCloudChannelV1ParameterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ParameterResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GoogleCloudChannelV1ParameterResponseOutput) Value() GoogleCloudChannelV1ValueResponseOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ParameterResponse) GoogleCloudChannelV1ValueResponse { return v.Value }).(GoogleCloudChannelV1ValueResponseOutput)
}

type GoogleCloudChannelV1ParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1ParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudChannelV1ParameterResponse)(nil)).Elem()
}

func (o GoogleCloudChannelV1ParameterResponseArrayOutput) ToGoogleCloudChannelV1ParameterResponseArrayOutput() GoogleCloudChannelV1ParameterResponseArrayOutput {
	return o
}

func (o GoogleCloudChannelV1ParameterResponseArrayOutput) ToGoogleCloudChannelV1ParameterResponseArrayOutputWithContext(ctx context.Context) GoogleCloudChannelV1ParameterResponseArrayOutput {
	return o
}

func (o GoogleCloudChannelV1ParameterResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudChannelV1ParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudChannelV1ParameterResponse {
		return vs[0].([]GoogleCloudChannelV1ParameterResponse)[vs[1].(int)]
	}).(GoogleCloudChannelV1ParameterResponseOutput)
}

// Represents period in days/months/years.
type GoogleCloudChannelV1Period struct {
	// Total duration of Period Type defined.
	Duration *int `pulumi:"duration"`
	// Period Type.
	PeriodType *GoogleCloudChannelV1PeriodPeriodType `pulumi:"periodType"`
}

// GoogleCloudChannelV1PeriodInput is an input type that accepts GoogleCloudChannelV1PeriodArgs and GoogleCloudChannelV1PeriodOutput values.
// You can construct a concrete instance of `GoogleCloudChannelV1PeriodInput` via:
//
//          GoogleCloudChannelV1PeriodArgs{...}
type GoogleCloudChannelV1PeriodInput interface {
	pulumi.Input

	ToGoogleCloudChannelV1PeriodOutput() GoogleCloudChannelV1PeriodOutput
	ToGoogleCloudChannelV1PeriodOutputWithContext(context.Context) GoogleCloudChannelV1PeriodOutput
}

// Represents period in days/months/years.
type GoogleCloudChannelV1PeriodArgs struct {
	// Total duration of Period Type defined.
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	// Period Type.
	PeriodType GoogleCloudChannelV1PeriodPeriodTypePtrInput `pulumi:"periodType"`
}

func (GoogleCloudChannelV1PeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1Period)(nil)).Elem()
}

func (i GoogleCloudChannelV1PeriodArgs) ToGoogleCloudChannelV1PeriodOutput() GoogleCloudChannelV1PeriodOutput {
	return i.ToGoogleCloudChannelV1PeriodOutputWithContext(context.Background())
}

func (i GoogleCloudChannelV1PeriodArgs) ToGoogleCloudChannelV1PeriodOutputWithContext(ctx context.Context) GoogleCloudChannelV1PeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1PeriodOutput)
}

func (i GoogleCloudChannelV1PeriodArgs) ToGoogleCloudChannelV1PeriodPtrOutput() GoogleCloudChannelV1PeriodPtrOutput {
	return i.ToGoogleCloudChannelV1PeriodPtrOutputWithContext(context.Background())
}

func (i GoogleCloudChannelV1PeriodArgs) ToGoogleCloudChannelV1PeriodPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1PeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1PeriodOutput).ToGoogleCloudChannelV1PeriodPtrOutputWithContext(ctx)
}

// GoogleCloudChannelV1PeriodPtrInput is an input type that accepts GoogleCloudChannelV1PeriodArgs, GoogleCloudChannelV1PeriodPtr and GoogleCloudChannelV1PeriodPtrOutput values.
// You can construct a concrete instance of `GoogleCloudChannelV1PeriodPtrInput` via:
//
//          GoogleCloudChannelV1PeriodArgs{...}
//
//  or:
//
//          nil
type GoogleCloudChannelV1PeriodPtrInput interface {
	pulumi.Input

	ToGoogleCloudChannelV1PeriodPtrOutput() GoogleCloudChannelV1PeriodPtrOutput
	ToGoogleCloudChannelV1PeriodPtrOutputWithContext(context.Context) GoogleCloudChannelV1PeriodPtrOutput
}

type googleCloudChannelV1PeriodPtrType GoogleCloudChannelV1PeriodArgs

func GoogleCloudChannelV1PeriodPtr(v *GoogleCloudChannelV1PeriodArgs) GoogleCloudChannelV1PeriodPtrInput {
	return (*googleCloudChannelV1PeriodPtrType)(v)
}

func (*googleCloudChannelV1PeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudChannelV1Period)(nil)).Elem()
}

func (i *googleCloudChannelV1PeriodPtrType) ToGoogleCloudChannelV1PeriodPtrOutput() GoogleCloudChannelV1PeriodPtrOutput {
	return i.ToGoogleCloudChannelV1PeriodPtrOutputWithContext(context.Background())
}

func (i *googleCloudChannelV1PeriodPtrType) ToGoogleCloudChannelV1PeriodPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1PeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1PeriodPtrOutput)
}

// Represents period in days/months/years.
type GoogleCloudChannelV1PeriodOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1PeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1Period)(nil)).Elem()
}

func (o GoogleCloudChannelV1PeriodOutput) ToGoogleCloudChannelV1PeriodOutput() GoogleCloudChannelV1PeriodOutput {
	return o
}

func (o GoogleCloudChannelV1PeriodOutput) ToGoogleCloudChannelV1PeriodOutputWithContext(ctx context.Context) GoogleCloudChannelV1PeriodOutput {
	return o
}

func (o GoogleCloudChannelV1PeriodOutput) ToGoogleCloudChannelV1PeriodPtrOutput() GoogleCloudChannelV1PeriodPtrOutput {
	return o.ToGoogleCloudChannelV1PeriodPtrOutputWithContext(context.Background())
}

func (o GoogleCloudChannelV1PeriodOutput) ToGoogleCloudChannelV1PeriodPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1PeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudChannelV1Period) *GoogleCloudChannelV1Period {
		return &v
	}).(GoogleCloudChannelV1PeriodPtrOutput)
}

// Total duration of Period Type defined.
func (o GoogleCloudChannelV1PeriodOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1Period) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// Period Type.
func (o GoogleCloudChannelV1PeriodOutput) PeriodType() GoogleCloudChannelV1PeriodPeriodTypePtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1Period) *GoogleCloudChannelV1PeriodPeriodType { return v.PeriodType }).(GoogleCloudChannelV1PeriodPeriodTypePtrOutput)
}

type GoogleCloudChannelV1PeriodPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1PeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudChannelV1Period)(nil)).Elem()
}

func (o GoogleCloudChannelV1PeriodPtrOutput) ToGoogleCloudChannelV1PeriodPtrOutput() GoogleCloudChannelV1PeriodPtrOutput {
	return o
}

func (o GoogleCloudChannelV1PeriodPtrOutput) ToGoogleCloudChannelV1PeriodPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1PeriodPtrOutput {
	return o
}

func (o GoogleCloudChannelV1PeriodPtrOutput) Elem() GoogleCloudChannelV1PeriodOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1Period) GoogleCloudChannelV1Period {
		if v != nil {
			return *v
		}
		var ret GoogleCloudChannelV1Period
		return ret
	}).(GoogleCloudChannelV1PeriodOutput)
}

// Total duration of Period Type defined.
func (o GoogleCloudChannelV1PeriodPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1Period) *int {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.IntPtrOutput)
}

// Period Type.
func (o GoogleCloudChannelV1PeriodPtrOutput) PeriodType() GoogleCloudChannelV1PeriodPeriodTypePtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1Period) *GoogleCloudChannelV1PeriodPeriodType {
		if v == nil {
			return nil
		}
		return v.PeriodType
	}).(GoogleCloudChannelV1PeriodPeriodTypePtrOutput)
}

// Represents period in days/months/years.
type GoogleCloudChannelV1PeriodResponse struct {
	// Total duration of Period Type defined.
	Duration int `pulumi:"duration"`
	// Period Type.
	PeriodType string `pulumi:"periodType"`
}

// Represents period in days/months/years.
type GoogleCloudChannelV1PeriodResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1PeriodResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1PeriodResponse)(nil)).Elem()
}

func (o GoogleCloudChannelV1PeriodResponseOutput) ToGoogleCloudChannelV1PeriodResponseOutput() GoogleCloudChannelV1PeriodResponseOutput {
	return o
}

func (o GoogleCloudChannelV1PeriodResponseOutput) ToGoogleCloudChannelV1PeriodResponseOutputWithContext(ctx context.Context) GoogleCloudChannelV1PeriodResponseOutput {
	return o
}

// Total duration of Period Type defined.
func (o GoogleCloudChannelV1PeriodResponseOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1PeriodResponse) int { return v.Duration }).(pulumi.IntOutput)
}

// Period Type.
func (o GoogleCloudChannelV1PeriodResponseOutput) PeriodType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1PeriodResponse) string { return v.PeriodType }).(pulumi.StringOutput)
}

// Service provisioned for an entitlement.
type GoogleCloudChannelV1ProvisionedServiceResponse struct {
	// The product pertaining to the provisioning resource as specified in the Offer.
	ProductId string `pulumi:"productId"`
	// Provisioning ID of the entitlement. For Google Workspace, this is the underlying Subscription ID. For Google Cloud Platform, this is the Billing Account ID of the billing subaccount."
	ProvisioningId string `pulumi:"provisioningId"`
	// The SKU pertaining to the provisioning resource as specified in the Offer.
	SkuId string `pulumi:"skuId"`
}

// Service provisioned for an entitlement.
type GoogleCloudChannelV1ProvisionedServiceResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1ProvisionedServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1ProvisionedServiceResponse)(nil)).Elem()
}

func (o GoogleCloudChannelV1ProvisionedServiceResponseOutput) ToGoogleCloudChannelV1ProvisionedServiceResponseOutput() GoogleCloudChannelV1ProvisionedServiceResponseOutput {
	return o
}

func (o GoogleCloudChannelV1ProvisionedServiceResponseOutput) ToGoogleCloudChannelV1ProvisionedServiceResponseOutputWithContext(ctx context.Context) GoogleCloudChannelV1ProvisionedServiceResponseOutput {
	return o
}

// The product pertaining to the provisioning resource as specified in the Offer.
func (o GoogleCloudChannelV1ProvisionedServiceResponseOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ProvisionedServiceResponse) string { return v.ProductId }).(pulumi.StringOutput)
}

// Provisioning ID of the entitlement. For Google Workspace, this is the underlying Subscription ID. For Google Cloud Platform, this is the Billing Account ID of the billing subaccount."
func (o GoogleCloudChannelV1ProvisionedServiceResponseOutput) ProvisioningId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ProvisionedServiceResponse) string { return v.ProvisioningId }).(pulumi.StringOutput)
}

// The SKU pertaining to the provisioning resource as specified in the Offer.
func (o GoogleCloudChannelV1ProvisionedServiceResponseOutput) SkuId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ProvisionedServiceResponse) string { return v.SkuId }).(pulumi.StringOutput)
}

// Renewal settings for renewable Offers.
type GoogleCloudChannelV1RenewalSettings struct {
	// If false, the plan will be completed at the end date.
	EnableRenewal *bool `pulumi:"enableRenewal"`
	// Describes how frequently the reseller will be billed, such as once per month.
	PaymentCycle *GoogleCloudChannelV1Period `pulumi:"paymentCycle"`
	// Describes how a reseller will be billed.
	PaymentPlan *GoogleCloudChannelV1RenewalSettingsPaymentPlan `pulumi:"paymentPlan"`
	// If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.
	ResizeUnitCount *bool `pulumi:"resizeUnitCount"`
}

// GoogleCloudChannelV1RenewalSettingsInput is an input type that accepts GoogleCloudChannelV1RenewalSettingsArgs and GoogleCloudChannelV1RenewalSettingsOutput values.
// You can construct a concrete instance of `GoogleCloudChannelV1RenewalSettingsInput` via:
//
//          GoogleCloudChannelV1RenewalSettingsArgs{...}
type GoogleCloudChannelV1RenewalSettingsInput interface {
	pulumi.Input

	ToGoogleCloudChannelV1RenewalSettingsOutput() GoogleCloudChannelV1RenewalSettingsOutput
	ToGoogleCloudChannelV1RenewalSettingsOutputWithContext(context.Context) GoogleCloudChannelV1RenewalSettingsOutput
}

// Renewal settings for renewable Offers.
type GoogleCloudChannelV1RenewalSettingsArgs struct {
	// If false, the plan will be completed at the end date.
	EnableRenewal pulumi.BoolPtrInput `pulumi:"enableRenewal"`
	// Describes how frequently the reseller will be billed, such as once per month.
	PaymentCycle GoogleCloudChannelV1PeriodPtrInput `pulumi:"paymentCycle"`
	// Describes how a reseller will be billed.
	PaymentPlan GoogleCloudChannelV1RenewalSettingsPaymentPlanPtrInput `pulumi:"paymentPlan"`
	// If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.
	ResizeUnitCount pulumi.BoolPtrInput `pulumi:"resizeUnitCount"`
}

func (GoogleCloudChannelV1RenewalSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1RenewalSettings)(nil)).Elem()
}

func (i GoogleCloudChannelV1RenewalSettingsArgs) ToGoogleCloudChannelV1RenewalSettingsOutput() GoogleCloudChannelV1RenewalSettingsOutput {
	return i.ToGoogleCloudChannelV1RenewalSettingsOutputWithContext(context.Background())
}

func (i GoogleCloudChannelV1RenewalSettingsArgs) ToGoogleCloudChannelV1RenewalSettingsOutputWithContext(ctx context.Context) GoogleCloudChannelV1RenewalSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1RenewalSettingsOutput)
}

func (i GoogleCloudChannelV1RenewalSettingsArgs) ToGoogleCloudChannelV1RenewalSettingsPtrOutput() GoogleCloudChannelV1RenewalSettingsPtrOutput {
	return i.ToGoogleCloudChannelV1RenewalSettingsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudChannelV1RenewalSettingsArgs) ToGoogleCloudChannelV1RenewalSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1RenewalSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1RenewalSettingsOutput).ToGoogleCloudChannelV1RenewalSettingsPtrOutputWithContext(ctx)
}

// GoogleCloudChannelV1RenewalSettingsPtrInput is an input type that accepts GoogleCloudChannelV1RenewalSettingsArgs, GoogleCloudChannelV1RenewalSettingsPtr and GoogleCloudChannelV1RenewalSettingsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudChannelV1RenewalSettingsPtrInput` via:
//
//          GoogleCloudChannelV1RenewalSettingsArgs{...}
//
//  or:
//
//          nil
type GoogleCloudChannelV1RenewalSettingsPtrInput interface {
	pulumi.Input

	ToGoogleCloudChannelV1RenewalSettingsPtrOutput() GoogleCloudChannelV1RenewalSettingsPtrOutput
	ToGoogleCloudChannelV1RenewalSettingsPtrOutputWithContext(context.Context) GoogleCloudChannelV1RenewalSettingsPtrOutput
}

type googleCloudChannelV1RenewalSettingsPtrType GoogleCloudChannelV1RenewalSettingsArgs

func GoogleCloudChannelV1RenewalSettingsPtr(v *GoogleCloudChannelV1RenewalSettingsArgs) GoogleCloudChannelV1RenewalSettingsPtrInput {
	return (*googleCloudChannelV1RenewalSettingsPtrType)(v)
}

func (*googleCloudChannelV1RenewalSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudChannelV1RenewalSettings)(nil)).Elem()
}

func (i *googleCloudChannelV1RenewalSettingsPtrType) ToGoogleCloudChannelV1RenewalSettingsPtrOutput() GoogleCloudChannelV1RenewalSettingsPtrOutput {
	return i.ToGoogleCloudChannelV1RenewalSettingsPtrOutputWithContext(context.Background())
}

func (i *googleCloudChannelV1RenewalSettingsPtrType) ToGoogleCloudChannelV1RenewalSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1RenewalSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1RenewalSettingsPtrOutput)
}

// Renewal settings for renewable Offers.
type GoogleCloudChannelV1RenewalSettingsOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1RenewalSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1RenewalSettings)(nil)).Elem()
}

func (o GoogleCloudChannelV1RenewalSettingsOutput) ToGoogleCloudChannelV1RenewalSettingsOutput() GoogleCloudChannelV1RenewalSettingsOutput {
	return o
}

func (o GoogleCloudChannelV1RenewalSettingsOutput) ToGoogleCloudChannelV1RenewalSettingsOutputWithContext(ctx context.Context) GoogleCloudChannelV1RenewalSettingsOutput {
	return o
}

func (o GoogleCloudChannelV1RenewalSettingsOutput) ToGoogleCloudChannelV1RenewalSettingsPtrOutput() GoogleCloudChannelV1RenewalSettingsPtrOutput {
	return o.ToGoogleCloudChannelV1RenewalSettingsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudChannelV1RenewalSettingsOutput) ToGoogleCloudChannelV1RenewalSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1RenewalSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudChannelV1RenewalSettings) *GoogleCloudChannelV1RenewalSettings {
		return &v
	}).(GoogleCloudChannelV1RenewalSettingsPtrOutput)
}

// If false, the plan will be completed at the end date.
func (o GoogleCloudChannelV1RenewalSettingsOutput) EnableRenewal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1RenewalSettings) *bool { return v.EnableRenewal }).(pulumi.BoolPtrOutput)
}

// Describes how frequently the reseller will be billed, such as once per month.
func (o GoogleCloudChannelV1RenewalSettingsOutput) PaymentCycle() GoogleCloudChannelV1PeriodPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1RenewalSettings) *GoogleCloudChannelV1Period { return v.PaymentCycle }).(GoogleCloudChannelV1PeriodPtrOutput)
}

// Describes how a reseller will be billed.
func (o GoogleCloudChannelV1RenewalSettingsOutput) PaymentPlan() GoogleCloudChannelV1RenewalSettingsPaymentPlanPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1RenewalSettings) *GoogleCloudChannelV1RenewalSettingsPaymentPlan {
		return v.PaymentPlan
	}).(GoogleCloudChannelV1RenewalSettingsPaymentPlanPtrOutput)
}

// If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.
func (o GoogleCloudChannelV1RenewalSettingsOutput) ResizeUnitCount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1RenewalSettings) *bool { return v.ResizeUnitCount }).(pulumi.BoolPtrOutput)
}

type GoogleCloudChannelV1RenewalSettingsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1RenewalSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudChannelV1RenewalSettings)(nil)).Elem()
}

func (o GoogleCloudChannelV1RenewalSettingsPtrOutput) ToGoogleCloudChannelV1RenewalSettingsPtrOutput() GoogleCloudChannelV1RenewalSettingsPtrOutput {
	return o
}

func (o GoogleCloudChannelV1RenewalSettingsPtrOutput) ToGoogleCloudChannelV1RenewalSettingsPtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1RenewalSettingsPtrOutput {
	return o
}

func (o GoogleCloudChannelV1RenewalSettingsPtrOutput) Elem() GoogleCloudChannelV1RenewalSettingsOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1RenewalSettings) GoogleCloudChannelV1RenewalSettings {
		if v != nil {
			return *v
		}
		var ret GoogleCloudChannelV1RenewalSettings
		return ret
	}).(GoogleCloudChannelV1RenewalSettingsOutput)
}

// If false, the plan will be completed at the end date.
func (o GoogleCloudChannelV1RenewalSettingsPtrOutput) EnableRenewal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1RenewalSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableRenewal
	}).(pulumi.BoolPtrOutput)
}

// Describes how frequently the reseller will be billed, such as once per month.
func (o GoogleCloudChannelV1RenewalSettingsPtrOutput) PaymentCycle() GoogleCloudChannelV1PeriodPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1RenewalSettings) *GoogleCloudChannelV1Period {
		if v == nil {
			return nil
		}
		return v.PaymentCycle
	}).(GoogleCloudChannelV1PeriodPtrOutput)
}

// Describes how a reseller will be billed.
func (o GoogleCloudChannelV1RenewalSettingsPtrOutput) PaymentPlan() GoogleCloudChannelV1RenewalSettingsPaymentPlanPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1RenewalSettings) *GoogleCloudChannelV1RenewalSettingsPaymentPlan {
		if v == nil {
			return nil
		}
		return v.PaymentPlan
	}).(GoogleCloudChannelV1RenewalSettingsPaymentPlanPtrOutput)
}

// If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.
func (o GoogleCloudChannelV1RenewalSettingsPtrOutput) ResizeUnitCount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1RenewalSettings) *bool {
		if v == nil {
			return nil
		}
		return v.ResizeUnitCount
	}).(pulumi.BoolPtrOutput)
}

// Renewal settings for renewable Offers.
type GoogleCloudChannelV1RenewalSettingsResponse struct {
	// If false, the plan will be completed at the end date.
	EnableRenewal bool `pulumi:"enableRenewal"`
	// Describes how frequently the reseller will be billed, such as once per month.
	PaymentCycle GoogleCloudChannelV1PeriodResponse `pulumi:"paymentCycle"`
	// Describes how a reseller will be billed.
	PaymentPlan string `pulumi:"paymentPlan"`
	// If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.
	ResizeUnitCount bool `pulumi:"resizeUnitCount"`
}

// Renewal settings for renewable Offers.
type GoogleCloudChannelV1RenewalSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1RenewalSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1RenewalSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudChannelV1RenewalSettingsResponseOutput) ToGoogleCloudChannelV1RenewalSettingsResponseOutput() GoogleCloudChannelV1RenewalSettingsResponseOutput {
	return o
}

func (o GoogleCloudChannelV1RenewalSettingsResponseOutput) ToGoogleCloudChannelV1RenewalSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudChannelV1RenewalSettingsResponseOutput {
	return o
}

// If false, the plan will be completed at the end date.
func (o GoogleCloudChannelV1RenewalSettingsResponseOutput) EnableRenewal() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1RenewalSettingsResponse) bool { return v.EnableRenewal }).(pulumi.BoolOutput)
}

// Describes how frequently the reseller will be billed, such as once per month.
func (o GoogleCloudChannelV1RenewalSettingsResponseOutput) PaymentCycle() GoogleCloudChannelV1PeriodResponseOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1RenewalSettingsResponse) GoogleCloudChannelV1PeriodResponse {
		return v.PaymentCycle
	}).(GoogleCloudChannelV1PeriodResponseOutput)
}

// Describes how a reseller will be billed.
func (o GoogleCloudChannelV1RenewalSettingsResponseOutput) PaymentPlan() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1RenewalSettingsResponse) string { return v.PaymentPlan }).(pulumi.StringOutput)
}

// If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.
func (o GoogleCloudChannelV1RenewalSettingsResponseOutput) ResizeUnitCount() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1RenewalSettingsResponse) bool { return v.ResizeUnitCount }).(pulumi.BoolOutput)
}

// Settings for trial offers.
type GoogleCloudChannelV1TrialSettingsResponse struct {
	// Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example [Epoch converter](https://www.epochconverter.com).
	EndTime string `pulumi:"endTime"`
	// Determines if the entitlement is in a trial or not: * `true` - The entitlement is in trial. * `false` - The entitlement is not in trial.
	Trial bool `pulumi:"trial"`
}

// Settings for trial offers.
type GoogleCloudChannelV1TrialSettingsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1TrialSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1TrialSettingsResponse)(nil)).Elem()
}

func (o GoogleCloudChannelV1TrialSettingsResponseOutput) ToGoogleCloudChannelV1TrialSettingsResponseOutput() GoogleCloudChannelV1TrialSettingsResponseOutput {
	return o
}

func (o GoogleCloudChannelV1TrialSettingsResponseOutput) ToGoogleCloudChannelV1TrialSettingsResponseOutputWithContext(ctx context.Context) GoogleCloudChannelV1TrialSettingsResponseOutput {
	return o
}

// Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example [Epoch converter](https://www.epochconverter.com).
func (o GoogleCloudChannelV1TrialSettingsResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1TrialSettingsResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// Determines if the entitlement is in a trial or not: * `true` - The entitlement is in trial. * `false` - The entitlement is not in trial.
func (o GoogleCloudChannelV1TrialSettingsResponseOutput) Trial() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1TrialSettingsResponse) bool { return v.Trial }).(pulumi.BoolOutput)
}

// Data type and value of a parameter.
type GoogleCloudChannelV1Value struct {
	// Represents a boolean value.
	BoolValue *bool `pulumi:"boolValue"`
	// Represents a double value.
	DoubleValue *float64 `pulumi:"doubleValue"`
	// Represents an int64 value.
	Int64Value *string `pulumi:"int64Value"`
	// Represents an 'Any' proto value.
	ProtoValue map[string]string `pulumi:"protoValue"`
	// Represents a string value.
	StringValue *string `pulumi:"stringValue"`
}

// GoogleCloudChannelV1ValueInput is an input type that accepts GoogleCloudChannelV1ValueArgs and GoogleCloudChannelV1ValueOutput values.
// You can construct a concrete instance of `GoogleCloudChannelV1ValueInput` via:
//
//          GoogleCloudChannelV1ValueArgs{...}
type GoogleCloudChannelV1ValueInput interface {
	pulumi.Input

	ToGoogleCloudChannelV1ValueOutput() GoogleCloudChannelV1ValueOutput
	ToGoogleCloudChannelV1ValueOutputWithContext(context.Context) GoogleCloudChannelV1ValueOutput
}

// Data type and value of a parameter.
type GoogleCloudChannelV1ValueArgs struct {
	// Represents a boolean value.
	BoolValue pulumi.BoolPtrInput `pulumi:"boolValue"`
	// Represents a double value.
	DoubleValue pulumi.Float64PtrInput `pulumi:"doubleValue"`
	// Represents an int64 value.
	Int64Value pulumi.StringPtrInput `pulumi:"int64Value"`
	// Represents an 'Any' proto value.
	ProtoValue pulumi.StringMapInput `pulumi:"protoValue"`
	// Represents a string value.
	StringValue pulumi.StringPtrInput `pulumi:"stringValue"`
}

func (GoogleCloudChannelV1ValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1Value)(nil)).Elem()
}

func (i GoogleCloudChannelV1ValueArgs) ToGoogleCloudChannelV1ValueOutput() GoogleCloudChannelV1ValueOutput {
	return i.ToGoogleCloudChannelV1ValueOutputWithContext(context.Background())
}

func (i GoogleCloudChannelV1ValueArgs) ToGoogleCloudChannelV1ValueOutputWithContext(ctx context.Context) GoogleCloudChannelV1ValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1ValueOutput)
}

func (i GoogleCloudChannelV1ValueArgs) ToGoogleCloudChannelV1ValuePtrOutput() GoogleCloudChannelV1ValuePtrOutput {
	return i.ToGoogleCloudChannelV1ValuePtrOutputWithContext(context.Background())
}

func (i GoogleCloudChannelV1ValueArgs) ToGoogleCloudChannelV1ValuePtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1ValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1ValueOutput).ToGoogleCloudChannelV1ValuePtrOutputWithContext(ctx)
}

// GoogleCloudChannelV1ValuePtrInput is an input type that accepts GoogleCloudChannelV1ValueArgs, GoogleCloudChannelV1ValuePtr and GoogleCloudChannelV1ValuePtrOutput values.
// You can construct a concrete instance of `GoogleCloudChannelV1ValuePtrInput` via:
//
//          GoogleCloudChannelV1ValueArgs{...}
//
//  or:
//
//          nil
type GoogleCloudChannelV1ValuePtrInput interface {
	pulumi.Input

	ToGoogleCloudChannelV1ValuePtrOutput() GoogleCloudChannelV1ValuePtrOutput
	ToGoogleCloudChannelV1ValuePtrOutputWithContext(context.Context) GoogleCloudChannelV1ValuePtrOutput
}

type googleCloudChannelV1ValuePtrType GoogleCloudChannelV1ValueArgs

func GoogleCloudChannelV1ValuePtr(v *GoogleCloudChannelV1ValueArgs) GoogleCloudChannelV1ValuePtrInput {
	return (*googleCloudChannelV1ValuePtrType)(v)
}

func (*googleCloudChannelV1ValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudChannelV1Value)(nil)).Elem()
}

func (i *googleCloudChannelV1ValuePtrType) ToGoogleCloudChannelV1ValuePtrOutput() GoogleCloudChannelV1ValuePtrOutput {
	return i.ToGoogleCloudChannelV1ValuePtrOutputWithContext(context.Background())
}

func (i *googleCloudChannelV1ValuePtrType) ToGoogleCloudChannelV1ValuePtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1ValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudChannelV1ValuePtrOutput)
}

// Data type and value of a parameter.
type GoogleCloudChannelV1ValueOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1ValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1Value)(nil)).Elem()
}

func (o GoogleCloudChannelV1ValueOutput) ToGoogleCloudChannelV1ValueOutput() GoogleCloudChannelV1ValueOutput {
	return o
}

func (o GoogleCloudChannelV1ValueOutput) ToGoogleCloudChannelV1ValueOutputWithContext(ctx context.Context) GoogleCloudChannelV1ValueOutput {
	return o
}

func (o GoogleCloudChannelV1ValueOutput) ToGoogleCloudChannelV1ValuePtrOutput() GoogleCloudChannelV1ValuePtrOutput {
	return o.ToGoogleCloudChannelV1ValuePtrOutputWithContext(context.Background())
}

func (o GoogleCloudChannelV1ValueOutput) ToGoogleCloudChannelV1ValuePtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1ValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudChannelV1Value) *GoogleCloudChannelV1Value {
		return &v
	}).(GoogleCloudChannelV1ValuePtrOutput)
}

// Represents a boolean value.
func (o GoogleCloudChannelV1ValueOutput) BoolValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1Value) *bool { return v.BoolValue }).(pulumi.BoolPtrOutput)
}

// Represents a double value.
func (o GoogleCloudChannelV1ValueOutput) DoubleValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1Value) *float64 { return v.DoubleValue }).(pulumi.Float64PtrOutput)
}

// Represents an int64 value.
func (o GoogleCloudChannelV1ValueOutput) Int64Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1Value) *string { return v.Int64Value }).(pulumi.StringPtrOutput)
}

// Represents an 'Any' proto value.
func (o GoogleCloudChannelV1ValueOutput) ProtoValue() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1Value) map[string]string { return v.ProtoValue }).(pulumi.StringMapOutput)
}

// Represents a string value.
func (o GoogleCloudChannelV1ValueOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1Value) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

type GoogleCloudChannelV1ValuePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1ValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudChannelV1Value)(nil)).Elem()
}

func (o GoogleCloudChannelV1ValuePtrOutput) ToGoogleCloudChannelV1ValuePtrOutput() GoogleCloudChannelV1ValuePtrOutput {
	return o
}

func (o GoogleCloudChannelV1ValuePtrOutput) ToGoogleCloudChannelV1ValuePtrOutputWithContext(ctx context.Context) GoogleCloudChannelV1ValuePtrOutput {
	return o
}

func (o GoogleCloudChannelV1ValuePtrOutput) Elem() GoogleCloudChannelV1ValueOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1Value) GoogleCloudChannelV1Value {
		if v != nil {
			return *v
		}
		var ret GoogleCloudChannelV1Value
		return ret
	}).(GoogleCloudChannelV1ValueOutput)
}

// Represents a boolean value.
func (o GoogleCloudChannelV1ValuePtrOutput) BoolValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1Value) *bool {
		if v == nil {
			return nil
		}
		return v.BoolValue
	}).(pulumi.BoolPtrOutput)
}

// Represents a double value.
func (o GoogleCloudChannelV1ValuePtrOutput) DoubleValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1Value) *float64 {
		if v == nil {
			return nil
		}
		return v.DoubleValue
	}).(pulumi.Float64PtrOutput)
}

// Represents an int64 value.
func (o GoogleCloudChannelV1ValuePtrOutput) Int64Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1Value) *string {
		if v == nil {
			return nil
		}
		return v.Int64Value
	}).(pulumi.StringPtrOutput)
}

// Represents an 'Any' proto value.
func (o GoogleCloudChannelV1ValuePtrOutput) ProtoValue() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1Value) map[string]string {
		if v == nil {
			return nil
		}
		return v.ProtoValue
	}).(pulumi.StringMapOutput)
}

// Represents a string value.
func (o GoogleCloudChannelV1ValuePtrOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudChannelV1Value) *string {
		if v == nil {
			return nil
		}
		return v.StringValue
	}).(pulumi.StringPtrOutput)
}

// Data type and value of a parameter.
type GoogleCloudChannelV1ValueResponse struct {
	// Represents a boolean value.
	BoolValue bool `pulumi:"boolValue"`
	// Represents a double value.
	DoubleValue float64 `pulumi:"doubleValue"`
	// Represents an int64 value.
	Int64Value string `pulumi:"int64Value"`
	// Represents an 'Any' proto value.
	ProtoValue map[string]string `pulumi:"protoValue"`
	// Represents a string value.
	StringValue string `pulumi:"stringValue"`
}

// Data type and value of a parameter.
type GoogleCloudChannelV1ValueResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudChannelV1ValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudChannelV1ValueResponse)(nil)).Elem()
}

func (o GoogleCloudChannelV1ValueResponseOutput) ToGoogleCloudChannelV1ValueResponseOutput() GoogleCloudChannelV1ValueResponseOutput {
	return o
}

func (o GoogleCloudChannelV1ValueResponseOutput) ToGoogleCloudChannelV1ValueResponseOutputWithContext(ctx context.Context) GoogleCloudChannelV1ValueResponseOutput {
	return o
}

// Represents a boolean value.
func (o GoogleCloudChannelV1ValueResponseOutput) BoolValue() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ValueResponse) bool { return v.BoolValue }).(pulumi.BoolOutput)
}

// Represents a double value.
func (o GoogleCloudChannelV1ValueResponseOutput) DoubleValue() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudChannelV1ValueResponse) float64 { return v.DoubleValue }).(pulumi.Float64Output)
}

// Represents an int64 value.
func (o GoogleCloudChannelV1ValueResponseOutput) Int64Value() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ValueResponse) string { return v.Int64Value }).(pulumi.StringOutput)
}

// Represents an 'Any' proto value.
func (o GoogleCloudChannelV1ValueResponseOutput) ProtoValue() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ValueResponse) map[string]string { return v.ProtoValue }).(pulumi.StringMapOutput)
}

// Represents a string value.
func (o GoogleCloudChannelV1ValueResponseOutput) StringValue() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudChannelV1ValueResponse) string { return v.StringValue }).(pulumi.StringOutput)
}

// Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478
type GoogleTypePostalAddress struct {
	// Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. "Austin, TX"), it is important that the line order is clear. The order of address lines should be "envelope order" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. "ja" for large-to-small ordering and "ja-Latn" or "en" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).
	AddressLines []string `pulumi:"addressLines"`
	// Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. "Barcelona" and not "Catalonia"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.
	AdministrativeArea *string `pulumi:"administrativeArea"`
	// Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: "zh-Hant", "ja", "ja-Latn", "en".
	LanguageCode *string `pulumi:"languageCode"`
	// Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.
	Locality *string `pulumi:"locality"`
	// Optional. The name of the organization at the address.
	Organization *string `pulumi:"organization"`
	// Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).
	PostalCode *string `pulumi:"postalCode"`
	// Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain "care of" information.
	Recipients []string `pulumi:"recipients"`
	// CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland.
	RegionCode string `pulumi:"regionCode"`
	// The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.
	Revision *int `pulumi:"revision"`
	// Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
	SortingCode *string `pulumi:"sortingCode"`
	// Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.
	Sublocality *string `pulumi:"sublocality"`
}

// GoogleTypePostalAddressInput is an input type that accepts GoogleTypePostalAddressArgs and GoogleTypePostalAddressOutput values.
// You can construct a concrete instance of `GoogleTypePostalAddressInput` via:
//
//          GoogleTypePostalAddressArgs{...}
type GoogleTypePostalAddressInput interface {
	pulumi.Input

	ToGoogleTypePostalAddressOutput() GoogleTypePostalAddressOutput
	ToGoogleTypePostalAddressOutputWithContext(context.Context) GoogleTypePostalAddressOutput
}

// Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478
type GoogleTypePostalAddressArgs struct {
	// Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. "Austin, TX"), it is important that the line order is clear. The order of address lines should be "envelope order" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. "ja" for large-to-small ordering and "ja-Latn" or "en" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).
	AddressLines pulumi.StringArrayInput `pulumi:"addressLines"`
	// Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. "Barcelona" and not "Catalonia"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.
	AdministrativeArea pulumi.StringPtrInput `pulumi:"administrativeArea"`
	// Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: "zh-Hant", "ja", "ja-Latn", "en".
	LanguageCode pulumi.StringPtrInput `pulumi:"languageCode"`
	// Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.
	Locality pulumi.StringPtrInput `pulumi:"locality"`
	// Optional. The name of the organization at the address.
	Organization pulumi.StringPtrInput `pulumi:"organization"`
	// Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain "care of" information.
	Recipients pulumi.StringArrayInput `pulumi:"recipients"`
	// CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland.
	RegionCode pulumi.StringInput `pulumi:"regionCode"`
	// The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.
	Revision pulumi.IntPtrInput `pulumi:"revision"`
	// Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
	SortingCode pulumi.StringPtrInput `pulumi:"sortingCode"`
	// Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.
	Sublocality pulumi.StringPtrInput `pulumi:"sublocality"`
}

func (GoogleTypePostalAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypePostalAddress)(nil)).Elem()
}

func (i GoogleTypePostalAddressArgs) ToGoogleTypePostalAddressOutput() GoogleTypePostalAddressOutput {
	return i.ToGoogleTypePostalAddressOutputWithContext(context.Background())
}

func (i GoogleTypePostalAddressArgs) ToGoogleTypePostalAddressOutputWithContext(ctx context.Context) GoogleTypePostalAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypePostalAddressOutput)
}

// Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478
type GoogleTypePostalAddressOutput struct{ *pulumi.OutputState }

func (GoogleTypePostalAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypePostalAddress)(nil)).Elem()
}

func (o GoogleTypePostalAddressOutput) ToGoogleTypePostalAddressOutput() GoogleTypePostalAddressOutput {
	return o
}

func (o GoogleTypePostalAddressOutput) ToGoogleTypePostalAddressOutputWithContext(ctx context.Context) GoogleTypePostalAddressOutput {
	return o
}

// Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. "Austin, TX"), it is important that the line order is clear. The order of address lines should be "envelope order" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. "ja" for large-to-small ordering and "ja-Latn" or "en" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).
func (o GoogleTypePostalAddressOutput) AddressLines() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleTypePostalAddress) []string { return v.AddressLines }).(pulumi.StringArrayOutput)
}

// Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. "Barcelona" and not "Catalonia"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.
func (o GoogleTypePostalAddressOutput) AdministrativeArea() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypePostalAddress) *string { return v.AdministrativeArea }).(pulumi.StringPtrOutput)
}

// Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: "zh-Hant", "ja", "ja-Latn", "en".
func (o GoogleTypePostalAddressOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypePostalAddress) *string { return v.LanguageCode }).(pulumi.StringPtrOutput)
}

// Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.
func (o GoogleTypePostalAddressOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypePostalAddress) *string { return v.Locality }).(pulumi.StringPtrOutput)
}

// Optional. The name of the organization at the address.
func (o GoogleTypePostalAddressOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypePostalAddress) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).
func (o GoogleTypePostalAddressOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypePostalAddress) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain "care of" information.
func (o GoogleTypePostalAddressOutput) Recipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleTypePostalAddress) []string { return v.Recipients }).(pulumi.StringArrayOutput)
}

// CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland.
func (o GoogleTypePostalAddressOutput) RegionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypePostalAddress) string { return v.RegionCode }).(pulumi.StringOutput)
}

// The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.
func (o GoogleTypePostalAddressOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleTypePostalAddress) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

// Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
func (o GoogleTypePostalAddressOutput) SortingCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypePostalAddress) *string { return v.SortingCode }).(pulumi.StringPtrOutput)
}

// Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.
func (o GoogleTypePostalAddressOutput) Sublocality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypePostalAddress) *string { return v.Sublocality }).(pulumi.StringPtrOutput)
}

// Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478
type GoogleTypePostalAddressResponse struct {
	// Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. "Austin, TX"), it is important that the line order is clear. The order of address lines should be "envelope order" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. "ja" for large-to-small ordering and "ja-Latn" or "en" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).
	AddressLines []string `pulumi:"addressLines"`
	// Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. "Barcelona" and not "Catalonia"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.
	AdministrativeArea string `pulumi:"administrativeArea"`
	// Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: "zh-Hant", "ja", "ja-Latn", "en".
	LanguageCode string `pulumi:"languageCode"`
	// Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.
	Locality string `pulumi:"locality"`
	// Optional. The name of the organization at the address.
	Organization string `pulumi:"organization"`
	// Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).
	PostalCode string `pulumi:"postalCode"`
	// Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain "care of" information.
	Recipients []string `pulumi:"recipients"`
	// CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland.
	RegionCode string `pulumi:"regionCode"`
	// The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.
	Revision int `pulumi:"revision"`
	// Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
	SortingCode string `pulumi:"sortingCode"`
	// Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.
	Sublocality string `pulumi:"sublocality"`
}

// Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478
type GoogleTypePostalAddressResponseOutput struct{ *pulumi.OutputState }

func (GoogleTypePostalAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypePostalAddressResponse)(nil)).Elem()
}

func (o GoogleTypePostalAddressResponseOutput) ToGoogleTypePostalAddressResponseOutput() GoogleTypePostalAddressResponseOutput {
	return o
}

func (o GoogleTypePostalAddressResponseOutput) ToGoogleTypePostalAddressResponseOutputWithContext(ctx context.Context) GoogleTypePostalAddressResponseOutput {
	return o
}

// Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. "Austin, TX"), it is important that the line order is clear. The order of address lines should be "envelope order" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. "ja" for large-to-small ordering and "ja-Latn" or "en" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).
func (o GoogleTypePostalAddressResponseOutput) AddressLines() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleTypePostalAddressResponse) []string { return v.AddressLines }).(pulumi.StringArrayOutput)
}

// Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. "Barcelona" and not "Catalonia"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.
func (o GoogleTypePostalAddressResponseOutput) AdministrativeArea() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypePostalAddressResponse) string { return v.AdministrativeArea }).(pulumi.StringOutput)
}

// Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: "zh-Hant", "ja", "ja-Latn", "en".
func (o GoogleTypePostalAddressResponseOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypePostalAddressResponse) string { return v.LanguageCode }).(pulumi.StringOutput)
}

// Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.
func (o GoogleTypePostalAddressResponseOutput) Locality() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypePostalAddressResponse) string { return v.Locality }).(pulumi.StringOutput)
}

// Optional. The name of the organization at the address.
func (o GoogleTypePostalAddressResponseOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypePostalAddressResponse) string { return v.Organization }).(pulumi.StringOutput)
}

// Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).
func (o GoogleTypePostalAddressResponseOutput) PostalCode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypePostalAddressResponse) string { return v.PostalCode }).(pulumi.StringOutput)
}

// Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain "care of" information.
func (o GoogleTypePostalAddressResponseOutput) Recipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleTypePostalAddressResponse) []string { return v.Recipients }).(pulumi.StringArrayOutput)
}

// CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland.
func (o GoogleTypePostalAddressResponseOutput) RegionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypePostalAddressResponse) string { return v.RegionCode }).(pulumi.StringOutput)
}

// The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.
func (o GoogleTypePostalAddressResponseOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypePostalAddressResponse) int { return v.Revision }).(pulumi.IntOutput)
}

// Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
func (o GoogleTypePostalAddressResponseOutput) SortingCode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypePostalAddressResponse) string { return v.SortingCode }).(pulumi.StringOutput)
}

// Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.
func (o GoogleTypePostalAddressResponseOutput) Sublocality() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypePostalAddressResponse) string { return v.Sublocality }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudChannelV1AssociationInfoInput)(nil)).Elem(), GoogleCloudChannelV1AssociationInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudChannelV1AssociationInfoPtrInput)(nil)).Elem(), GoogleCloudChannelV1AssociationInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudChannelV1CommitmentSettingsInput)(nil)).Elem(), GoogleCloudChannelV1CommitmentSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudChannelV1CommitmentSettingsPtrInput)(nil)).Elem(), GoogleCloudChannelV1CommitmentSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudChannelV1ContactInfoInput)(nil)).Elem(), GoogleCloudChannelV1ContactInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudChannelV1ContactInfoPtrInput)(nil)).Elem(), GoogleCloudChannelV1ContactInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudChannelV1ParameterInput)(nil)).Elem(), GoogleCloudChannelV1ParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudChannelV1ParameterArrayInput)(nil)).Elem(), GoogleCloudChannelV1ParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudChannelV1PeriodInput)(nil)).Elem(), GoogleCloudChannelV1PeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudChannelV1PeriodPtrInput)(nil)).Elem(), GoogleCloudChannelV1PeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudChannelV1RenewalSettingsInput)(nil)).Elem(), GoogleCloudChannelV1RenewalSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudChannelV1RenewalSettingsPtrInput)(nil)).Elem(), GoogleCloudChannelV1RenewalSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudChannelV1ValueInput)(nil)).Elem(), GoogleCloudChannelV1ValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudChannelV1ValuePtrInput)(nil)).Elem(), GoogleCloudChannelV1ValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleTypePostalAddressInput)(nil)).Elem(), GoogleTypePostalAddressArgs{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1AssociationInfoOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1AssociationInfoPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1AssociationInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1CloudIdentityInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1CommitmentSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1CommitmentSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1CommitmentSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1ContactInfoOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1ContactInfoPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1ContactInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1EduDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1ParameterOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1ParameterArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1ParameterResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1ParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1PeriodOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1PeriodPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1PeriodResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1ProvisionedServiceResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1RenewalSettingsOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1RenewalSettingsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1RenewalSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1TrialSettingsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1ValueOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1ValuePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudChannelV1ValueResponseOutput{})
	pulumi.RegisterOutputType(GoogleTypePostalAddressOutput{})
	pulumi.RegisterOutputType(GoogleTypePostalAddressResponseOutput{})
}
