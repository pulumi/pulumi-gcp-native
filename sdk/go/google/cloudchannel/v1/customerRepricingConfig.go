// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a CustomerRepricingConfig. Call this method to set modifications for a specific customer's bill. You can only create configs if the RepricingConfig.effective_invoice_month is a future month. If needed, you can create a config for the current month, with some restrictions. When creating a config for a future month, make sure there are no existing configs for that RepricingConfig.effective_invoice_month. The following restrictions are for creating configs in the current month. * This functionality is reserved for recovering from an erroneous config, and should not be used for regular business cases. * The new config will not modify exports used with other configs. Changes to the config may be immediate, but may take up to 24 hours. * There is a limit of ten configs for any RepricingConfig.EntitlementGranularity.entitlement or RepricingConfig.effective_invoice_month. * The contained CustomerRepricingConfig.repricing_config vaule must be different from the value used in the current config for a RepricingConfig.EntitlementGranularity.entitlement. Possible Error Codes: * PERMISSION_DENIED: If the account making the request and the account being queried are different. * INVALID_ARGUMENT: Missing or invalid required parameters in the request. Also displays if the updated config is for the current month or past months. * NOT_FOUND: The CustomerRepricingConfig specified does not exist or is not associated with the given account. * INTERNAL: Any non-user error related to technical issues in the backend. In this case, contact Cloud Channel support. Return Value: If successful, the updated CustomerRepricingConfig resource, otherwise returns an error.
// Auto-naming is currently not supported for this resource.
type CustomerRepricingConfig struct {
	pulumi.CustomResourceState

	AccountId  pulumi.StringOutput `pulumi:"accountId"`
	CustomerId pulumi.StringOutput `pulumi:"customerId"`
	// Resource name of the CustomerRepricingConfig. Format: accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.
	Name pulumi.StringOutput `pulumi:"name"`
	// The configuration for bill modifications made by a reseller before sending it to customers.
	RepricingConfig GoogleCloudChannelV1RepricingConfigResponseOutput `pulumi:"repricingConfig"`
	// Timestamp of an update to the repricing rule. If `update_time` is after RepricingConfig.effective_invoice_month then it indicates this was set mid-month.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewCustomerRepricingConfig registers a new resource with the given unique name, arguments, and options.
func NewCustomerRepricingConfig(ctx *pulumi.Context,
	name string, args *CustomerRepricingConfigArgs, opts ...pulumi.ResourceOption) (*CustomerRepricingConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.CustomerId == nil {
		return nil, errors.New("invalid value for required argument 'CustomerId'")
	}
	if args.RepricingConfig == nil {
		return nil, errors.New("invalid value for required argument 'RepricingConfig'")
	}
	var resource CustomerRepricingConfig
	err := ctx.RegisterResource("google-native:cloudchannel/v1:CustomerRepricingConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomerRepricingConfig gets an existing CustomerRepricingConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomerRepricingConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomerRepricingConfigState, opts ...pulumi.ResourceOption) (*CustomerRepricingConfig, error) {
	var resource CustomerRepricingConfig
	err := ctx.ReadResource("google-native:cloudchannel/v1:CustomerRepricingConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomerRepricingConfig resources.
type customerRepricingConfigState struct {
}

type CustomerRepricingConfigState struct {
}

func (CustomerRepricingConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*customerRepricingConfigState)(nil)).Elem()
}

type customerRepricingConfigArgs struct {
	AccountId  string `pulumi:"accountId"`
	CustomerId string `pulumi:"customerId"`
	// The configuration for bill modifications made by a reseller before sending it to customers.
	RepricingConfig GoogleCloudChannelV1RepricingConfig `pulumi:"repricingConfig"`
}

// The set of arguments for constructing a CustomerRepricingConfig resource.
type CustomerRepricingConfigArgs struct {
	AccountId  pulumi.StringInput
	CustomerId pulumi.StringInput
	// The configuration for bill modifications made by a reseller before sending it to customers.
	RepricingConfig GoogleCloudChannelV1RepricingConfigInput
}

func (CustomerRepricingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customerRepricingConfigArgs)(nil)).Elem()
}

type CustomerRepricingConfigInput interface {
	pulumi.Input

	ToCustomerRepricingConfigOutput() CustomerRepricingConfigOutput
	ToCustomerRepricingConfigOutputWithContext(ctx context.Context) CustomerRepricingConfigOutput
}

func (*CustomerRepricingConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerRepricingConfig)(nil)).Elem()
}

func (i *CustomerRepricingConfig) ToCustomerRepricingConfigOutput() CustomerRepricingConfigOutput {
	return i.ToCustomerRepricingConfigOutputWithContext(context.Background())
}

func (i *CustomerRepricingConfig) ToCustomerRepricingConfigOutputWithContext(ctx context.Context) CustomerRepricingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerRepricingConfigOutput)
}

type CustomerRepricingConfigOutput struct{ *pulumi.OutputState }

func (CustomerRepricingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerRepricingConfig)(nil)).Elem()
}

func (o CustomerRepricingConfigOutput) ToCustomerRepricingConfigOutput() CustomerRepricingConfigOutput {
	return o
}

func (o CustomerRepricingConfigOutput) ToCustomerRepricingConfigOutputWithContext(ctx context.Context) CustomerRepricingConfigOutput {
	return o
}

func (o CustomerRepricingConfigOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomerRepricingConfig) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o CustomerRepricingConfigOutput) CustomerId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomerRepricingConfig) pulumi.StringOutput { return v.CustomerId }).(pulumi.StringOutput)
}

// Resource name of the CustomerRepricingConfig. Format: accounts/{account_id}/customers/{customer_id}/customerRepricingConfigs/{id}.
func (o CustomerRepricingConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomerRepricingConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The configuration for bill modifications made by a reseller before sending it to customers.
func (o CustomerRepricingConfigOutput) RepricingConfig() GoogleCloudChannelV1RepricingConfigResponseOutput {
	return o.ApplyT(func(v *CustomerRepricingConfig) GoogleCloudChannelV1RepricingConfigResponseOutput {
		return v.RepricingConfig
	}).(GoogleCloudChannelV1RepricingConfigResponseOutput)
}

// Timestamp of an update to the repricing rule. If `update_time` is after RepricingConfig.effective_invoice_month then it indicates this was set mid-month.
func (o CustomerRepricingConfigOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomerRepricingConfig) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomerRepricingConfigInput)(nil)).Elem(), &CustomerRepricingConfig{})
	pulumi.RegisterOutputType(CustomerRepricingConfigOutput{})
}
