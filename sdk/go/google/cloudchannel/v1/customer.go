// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new Customer resource under the reseller or distributor account. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: * Required request parameters are missing or invalid. * Domain field value doesn't match the primary email domain. Return value: The newly created Customer resource.
// Auto-naming is currently not supported for this resource.
type Customer struct {
	pulumi.CustomResourceState

	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.
	AlternateEmail pulumi.StringOutput `pulumi:"alternateEmail"`
	// Cloud Identity ID of the customer's channel partner. Populated only if a channel partner exists for this customer.
	ChannelPartnerId     pulumi.StringOutput `pulumi:"channelPartnerId"`
	ChannelPartnerLinkId pulumi.StringOutput `pulumi:"channelPartnerLinkId"`
	// The customer's Cloud Identity ID if the customer has a Cloud Identity resource.
	CloudIdentityId pulumi.StringOutput `pulumi:"cloudIdentityId"`
	// Cloud Identity information for the customer. Populated only if a Cloud Identity account exists for this customer.
	CloudIdentityInfo GoogleCloudChannelV1CloudIdentityInfoResponseOutput `pulumi:"cloudIdentityInfo"`
	// Time when the customer was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The customer's primary domain. Must match the primary contact email's domain.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
	LanguageCode pulumi.StringOutput `pulumi:"languageCode"`
	// Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the organization that the customer entity represents.
	OrgDisplayName pulumi.StringOutput `pulumi:"orgDisplayName"`
	// The organization address for the customer. To enforce US laws and embargoes, we require a region and zip code. You must provide valid addresses for every customer. To set the customer's language, use the Customer-level language code.
	OrgPostalAddress GoogleTypePostalAddressResponseOutput `pulumi:"orgPostalAddress"`
	// Primary contact info.
	PrimaryContactInfo GoogleCloudChannelV1ContactInfoResponseOutput `pulumi:"primaryContactInfo"`
	// Time when the customer was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewCustomer registers a new resource with the given unique name, arguments, and options.
func NewCustomer(ctx *pulumi.Context,
	name string, args *CustomerArgs, opts ...pulumi.ResourceOption) (*Customer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.ChannelPartnerLinkId == nil {
		return nil, errors.New("invalid value for required argument 'ChannelPartnerLinkId'")
	}
	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.OrgDisplayName == nil {
		return nil, errors.New("invalid value for required argument 'OrgDisplayName'")
	}
	if args.OrgPostalAddress == nil {
		return nil, errors.New("invalid value for required argument 'OrgPostalAddress'")
	}
	var resource Customer
	err := ctx.RegisterResource("google-native:cloudchannel/v1:Customer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomer gets an existing Customer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomerState, opts ...pulumi.ResourceOption) (*Customer, error) {
	var resource Customer
	err := ctx.ReadResource("google-native:cloudchannel/v1:Customer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Customer resources.
type customerState struct {
}

type CustomerState struct {
}

func (CustomerState) ElementType() reflect.Type {
	return reflect.TypeOf((*customerState)(nil)).Elem()
}

type customerArgs struct {
	AccountId string `pulumi:"accountId"`
	// Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.
	AlternateEmail *string `pulumi:"alternateEmail"`
	// Cloud Identity ID of the customer's channel partner. Populated only if a channel partner exists for this customer.
	ChannelPartnerId     *string `pulumi:"channelPartnerId"`
	ChannelPartnerLinkId string  `pulumi:"channelPartnerLinkId"`
	// The customer's primary domain. Must match the primary contact email's domain.
	Domain string `pulumi:"domain"`
	// Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
	LanguageCode *string `pulumi:"languageCode"`
	// Name of the organization that the customer entity represents.
	OrgDisplayName string `pulumi:"orgDisplayName"`
	// The organization address for the customer. To enforce US laws and embargoes, we require a region and zip code. You must provide valid addresses for every customer. To set the customer's language, use the Customer-level language code.
	OrgPostalAddress GoogleTypePostalAddress `pulumi:"orgPostalAddress"`
	// Primary contact info.
	PrimaryContactInfo *GoogleCloudChannelV1ContactInfo `pulumi:"primaryContactInfo"`
}

// The set of arguments for constructing a Customer resource.
type CustomerArgs struct {
	AccountId pulumi.StringInput
	// Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.
	AlternateEmail pulumi.StringPtrInput
	// Cloud Identity ID of the customer's channel partner. Populated only if a channel partner exists for this customer.
	ChannelPartnerId     pulumi.StringPtrInput
	ChannelPartnerLinkId pulumi.StringInput
	// The customer's primary domain. Must match the primary contact email's domain.
	Domain pulumi.StringInput
	// Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
	LanguageCode pulumi.StringPtrInput
	// Name of the organization that the customer entity represents.
	OrgDisplayName pulumi.StringInput
	// The organization address for the customer. To enforce US laws and embargoes, we require a region and zip code. You must provide valid addresses for every customer. To set the customer's language, use the Customer-level language code.
	OrgPostalAddress GoogleTypePostalAddressInput
	// Primary contact info.
	PrimaryContactInfo GoogleCloudChannelV1ContactInfoPtrInput
}

func (CustomerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customerArgs)(nil)).Elem()
}

type CustomerInput interface {
	pulumi.Input

	ToCustomerOutput() CustomerOutput
	ToCustomerOutputWithContext(ctx context.Context) CustomerOutput
}

func (*Customer) ElementType() reflect.Type {
	return reflect.TypeOf((**Customer)(nil)).Elem()
}

func (i *Customer) ToCustomerOutput() CustomerOutput {
	return i.ToCustomerOutputWithContext(context.Background())
}

func (i *Customer) ToCustomerOutputWithContext(ctx context.Context) CustomerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerOutput)
}

type CustomerOutput struct{ *pulumi.OutputState }

func (CustomerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Customer)(nil)).Elem()
}

func (o CustomerOutput) ToCustomerOutput() CustomerOutput {
	return o
}

func (o CustomerOutput) ToCustomerOutputWithContext(ctx context.Context) CustomerOutput {
	return o
}

func (o CustomerOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.
func (o CustomerOutput) AlternateEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringOutput { return v.AlternateEmail }).(pulumi.StringOutput)
}

// Cloud Identity ID of the customer's channel partner. Populated only if a channel partner exists for this customer.
func (o CustomerOutput) ChannelPartnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringOutput { return v.ChannelPartnerId }).(pulumi.StringOutput)
}

func (o CustomerOutput) ChannelPartnerLinkId() pulumi.StringOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringOutput { return v.ChannelPartnerLinkId }).(pulumi.StringOutput)
}

// The customer's Cloud Identity ID if the customer has a Cloud Identity resource.
func (o CustomerOutput) CloudIdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringOutput { return v.CloudIdentityId }).(pulumi.StringOutput)
}

// Cloud Identity information for the customer. Populated only if a Cloud Identity account exists for this customer.
func (o CustomerOutput) CloudIdentityInfo() GoogleCloudChannelV1CloudIdentityInfoResponseOutput {
	return o.ApplyT(func(v *Customer) GoogleCloudChannelV1CloudIdentityInfoResponseOutput { return v.CloudIdentityInfo }).(GoogleCloudChannelV1CloudIdentityInfoResponseOutput)
}

// Time when the customer was created.
func (o CustomerOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The customer's primary domain. Must match the primary contact email's domain.
func (o CustomerOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
func (o CustomerOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringOutput { return v.LanguageCode }).(pulumi.StringOutput)
}

// Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}
func (o CustomerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the organization that the customer entity represents.
func (o CustomerOutput) OrgDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringOutput { return v.OrgDisplayName }).(pulumi.StringOutput)
}

// The organization address for the customer. To enforce US laws and embargoes, we require a region and zip code. You must provide valid addresses for every customer. To set the customer's language, use the Customer-level language code.
func (o CustomerOutput) OrgPostalAddress() GoogleTypePostalAddressResponseOutput {
	return o.ApplyT(func(v *Customer) GoogleTypePostalAddressResponseOutput { return v.OrgPostalAddress }).(GoogleTypePostalAddressResponseOutput)
}

// Primary contact info.
func (o CustomerOutput) PrimaryContactInfo() GoogleCloudChannelV1ContactInfoResponseOutput {
	return o.ApplyT(func(v *Customer) GoogleCloudChannelV1ContactInfoResponseOutput { return v.PrimaryContactInfo }).(GoogleCloudChannelV1ContactInfoResponseOutput)
}

// Time when the customer was updated.
func (o CustomerOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Customer) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomerInput)(nil)).Elem(), &Customer{})
	pulumi.RegisterOutputType(CustomerOutput{})
}
