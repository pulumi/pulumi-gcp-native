// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the specified Consent artifact.
func LookupConsentArtifact(ctx *pulumi.Context, args *LookupConsentArtifactArgs, opts ...pulumi.InvokeOption) (*LookupConsentArtifactResult, error) {
	var rv LookupConsentArtifactResult
	err := ctx.Invoke("google-native:healthcare/v1:getConsentArtifact", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConsentArtifactArgs struct {
	ConsentArtifactId string `pulumi:"consentArtifactId"`
	ConsentStoreId    string `pulumi:"consentStoreId"`
	DatasetId         string `pulumi:"datasetId"`
	Location          string `pulumi:"location"`
	Project           string `pulumi:"project"`
}

type LookupConsentArtifactResult struct {
	// Optional. Screenshots, PDFs, or other binary information documenting the user's consent.
	ConsentContentScreenshots []ImageResponse `pulumi:"consentContentScreenshots"`
	// Optional. An string indicating the version of the consent information shown to the user.
	ConsentContentVersion string `pulumi:"consentContentVersion"`
	// Optional. A signature from a guardian.
	GuardianSignature SignatureResponse `pulumi:"guardianSignature"`
	// Optional. Metadata associated with the Consent artifact. For example, the consent locale or user agent version.
	Metadata map[string]string `pulumi:"metadata"`
	// Resource name of the Consent artifact, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`. Cannot be changed after creation.
	Name string `pulumi:"name"`
	// User's UUID provided by the client.
	UserId string `pulumi:"userId"`
	// Optional. User's signature.
	UserSignature SignatureResponse `pulumi:"userSignature"`
	// Optional. A signature from a witness.
	WitnessSignature SignatureResponse `pulumi:"witnessSignature"`
}
