// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Required. The category of the attribute. The value of this field cannot be changed after creation.
type AttributeDefinitionCategory string

const (
	// No category specified. This option is invalid.
	AttributeDefinitionCategoryCategoryUnspecified = AttributeDefinitionCategory("CATEGORY_UNSPECIFIED")
	// Specify this category when this attribute describes the properties of resources. For example, data anonymity or data type.
	AttributeDefinitionCategoryResource = AttributeDefinitionCategory("RESOURCE")
	// Specify this category when this attribute describes the properties of requests. For example, requester's role or requester's organization.
	AttributeDefinitionCategoryRequest = AttributeDefinitionCategory("REQUEST")
)

func (AttributeDefinitionCategory) ElementType() reflect.Type {
	return reflect.TypeOf((*AttributeDefinitionCategory)(nil)).Elem()
}

func (e AttributeDefinitionCategory) ToAttributeDefinitionCategoryOutput() AttributeDefinitionCategoryOutput {
	return pulumi.ToOutput(e).(AttributeDefinitionCategoryOutput)
}

func (e AttributeDefinitionCategory) ToAttributeDefinitionCategoryOutputWithContext(ctx context.Context) AttributeDefinitionCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AttributeDefinitionCategoryOutput)
}

func (e AttributeDefinitionCategory) ToAttributeDefinitionCategoryPtrOutput() AttributeDefinitionCategoryPtrOutput {
	return e.ToAttributeDefinitionCategoryPtrOutputWithContext(context.Background())
}

func (e AttributeDefinitionCategory) ToAttributeDefinitionCategoryPtrOutputWithContext(ctx context.Context) AttributeDefinitionCategoryPtrOutput {
	return AttributeDefinitionCategory(e).ToAttributeDefinitionCategoryOutputWithContext(ctx).ToAttributeDefinitionCategoryPtrOutputWithContext(ctx)
}

func (e AttributeDefinitionCategory) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttributeDefinitionCategory) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttributeDefinitionCategory) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AttributeDefinitionCategory) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AttributeDefinitionCategoryOutput struct{ *pulumi.OutputState }

func (AttributeDefinitionCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttributeDefinitionCategory)(nil)).Elem()
}

func (o AttributeDefinitionCategoryOutput) ToAttributeDefinitionCategoryOutput() AttributeDefinitionCategoryOutput {
	return o
}

func (o AttributeDefinitionCategoryOutput) ToAttributeDefinitionCategoryOutputWithContext(ctx context.Context) AttributeDefinitionCategoryOutput {
	return o
}

func (o AttributeDefinitionCategoryOutput) ToAttributeDefinitionCategoryPtrOutput() AttributeDefinitionCategoryPtrOutput {
	return o.ToAttributeDefinitionCategoryPtrOutputWithContext(context.Background())
}

func (o AttributeDefinitionCategoryOutput) ToAttributeDefinitionCategoryPtrOutputWithContext(ctx context.Context) AttributeDefinitionCategoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttributeDefinitionCategory) *AttributeDefinitionCategory {
		return &v
	}).(AttributeDefinitionCategoryPtrOutput)
}

func (o AttributeDefinitionCategoryOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AttributeDefinitionCategoryOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttributeDefinitionCategory) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AttributeDefinitionCategoryOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttributeDefinitionCategoryOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttributeDefinitionCategory) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AttributeDefinitionCategoryPtrOutput struct{ *pulumi.OutputState }

func (AttributeDefinitionCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttributeDefinitionCategory)(nil)).Elem()
}

func (o AttributeDefinitionCategoryPtrOutput) ToAttributeDefinitionCategoryPtrOutput() AttributeDefinitionCategoryPtrOutput {
	return o
}

func (o AttributeDefinitionCategoryPtrOutput) ToAttributeDefinitionCategoryPtrOutputWithContext(ctx context.Context) AttributeDefinitionCategoryPtrOutput {
	return o
}

func (o AttributeDefinitionCategoryPtrOutput) Elem() AttributeDefinitionCategoryOutput {
	return o.ApplyT(func(v *AttributeDefinitionCategory) AttributeDefinitionCategory {
		if v != nil {
			return *v
		}
		var ret AttributeDefinitionCategory
		return ret
	}).(AttributeDefinitionCategoryOutput)
}

func (o AttributeDefinitionCategoryPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttributeDefinitionCategoryPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AttributeDefinitionCategory) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AttributeDefinitionCategoryInput is an input type that accepts values of the AttributeDefinitionCategory enum
// A concrete instance of `AttributeDefinitionCategoryInput` can be one of the following:
//
//	AttributeDefinitionCategoryCategoryUnspecified
//	AttributeDefinitionCategoryResource
//	AttributeDefinitionCategoryRequest
type AttributeDefinitionCategoryInput interface {
	pulumi.Input

	ToAttributeDefinitionCategoryOutput() AttributeDefinitionCategoryOutput
	ToAttributeDefinitionCategoryOutputWithContext(context.Context) AttributeDefinitionCategoryOutput
}

var attributeDefinitionCategoryPtrType = reflect.TypeOf((**AttributeDefinitionCategory)(nil)).Elem()

type AttributeDefinitionCategoryPtrInput interface {
	pulumi.Input

	ToAttributeDefinitionCategoryPtrOutput() AttributeDefinitionCategoryPtrOutput
	ToAttributeDefinitionCategoryPtrOutputWithContext(context.Context) AttributeDefinitionCategoryPtrOutput
}

type attributeDefinitionCategoryPtr string

func AttributeDefinitionCategoryPtr(v string) AttributeDefinitionCategoryPtrInput {
	return (*attributeDefinitionCategoryPtr)(&v)
}

func (*attributeDefinitionCategoryPtr) ElementType() reflect.Type {
	return attributeDefinitionCategoryPtrType
}

func (in *attributeDefinitionCategoryPtr) ToAttributeDefinitionCategoryPtrOutput() AttributeDefinitionCategoryPtrOutput {
	return pulumi.ToOutput(in).(AttributeDefinitionCategoryPtrOutput)
}

func (in *attributeDefinitionCategoryPtr) ToAttributeDefinitionCategoryPtrOutputWithContext(ctx context.Context) AttributeDefinitionCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AttributeDefinitionCategoryPtrOutput)
}

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts values of the AuditLogConfigLogType enum
// A concrete instance of `AuditLogConfigLogTypeInput` can be one of the following:
//
//	AuditLogConfigLogTypeLogTypeUnspecified
//	AuditLogConfigLogTypeAdminRead
//	AuditLogConfigLogTypeDataWrite
//	AuditLogConfigLogTypeDataRead
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

// Required. Indicates the current state of this Consent.
type ConsentStateEnum string

const (
	// No state specified. Treated as ACTIVE only at the time of resource creation.
	ConsentStateEnumStateUnspecified = ConsentStateEnum("STATE_UNSPECIFIED")
	// The Consent is active and is considered when evaluating a user's consent on resources.
	ConsentStateEnumActive = ConsentStateEnum("ACTIVE")
	// The archived state is currently not being used.
	ConsentStateEnumArchived = ConsentStateEnum("ARCHIVED")
	// A revoked Consent is not considered when evaluating a user's consent on resources.
	ConsentStateEnumRevoked = ConsentStateEnum("REVOKED")
	// A draft Consent is not considered when evaluating a user's consent on resources unless explicitly specified.
	ConsentStateEnumDraft = ConsentStateEnum("DRAFT")
	// When a draft Consent is rejected by a user, it is set to a rejected state. A rejected Consent is not considered when evaluating a user's consent on resources.
	ConsentStateEnumRejected = ConsentStateEnum("REJECTED")
)

func (ConsentStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsentStateEnum)(nil)).Elem()
}

func (e ConsentStateEnum) ToConsentStateEnumOutput() ConsentStateEnumOutput {
	return pulumi.ToOutput(e).(ConsentStateEnumOutput)
}

func (e ConsentStateEnum) ToConsentStateEnumOutputWithContext(ctx context.Context) ConsentStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConsentStateEnumOutput)
}

func (e ConsentStateEnum) ToConsentStateEnumPtrOutput() ConsentStateEnumPtrOutput {
	return e.ToConsentStateEnumPtrOutputWithContext(context.Background())
}

func (e ConsentStateEnum) ToConsentStateEnumPtrOutputWithContext(ctx context.Context) ConsentStateEnumPtrOutput {
	return ConsentStateEnum(e).ToConsentStateEnumOutputWithContext(ctx).ToConsentStateEnumPtrOutputWithContext(ctx)
}

func (e ConsentStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConsentStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConsentStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConsentStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConsentStateEnumOutput struct{ *pulumi.OutputState }

func (ConsentStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsentStateEnum)(nil)).Elem()
}

func (o ConsentStateEnumOutput) ToConsentStateEnumOutput() ConsentStateEnumOutput {
	return o
}

func (o ConsentStateEnumOutput) ToConsentStateEnumOutputWithContext(ctx context.Context) ConsentStateEnumOutput {
	return o
}

func (o ConsentStateEnumOutput) ToConsentStateEnumPtrOutput() ConsentStateEnumPtrOutput {
	return o.ToConsentStateEnumPtrOutputWithContext(context.Background())
}

func (o ConsentStateEnumOutput) ToConsentStateEnumPtrOutputWithContext(ctx context.Context) ConsentStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConsentStateEnum) *ConsentStateEnum {
		return &v
	}).(ConsentStateEnumPtrOutput)
}

func (o ConsentStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConsentStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConsentStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConsentStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConsentStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConsentStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConsentStateEnumPtrOutput struct{ *pulumi.OutputState }

func (ConsentStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsentStateEnum)(nil)).Elem()
}

func (o ConsentStateEnumPtrOutput) ToConsentStateEnumPtrOutput() ConsentStateEnumPtrOutput {
	return o
}

func (o ConsentStateEnumPtrOutput) ToConsentStateEnumPtrOutputWithContext(ctx context.Context) ConsentStateEnumPtrOutput {
	return o
}

func (o ConsentStateEnumPtrOutput) Elem() ConsentStateEnumOutput {
	return o.ApplyT(func(v *ConsentStateEnum) ConsentStateEnum {
		if v != nil {
			return *v
		}
		var ret ConsentStateEnum
		return ret
	}).(ConsentStateEnumOutput)
}

func (o ConsentStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConsentStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConsentStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConsentStateEnumInput is an input type that accepts values of the ConsentStateEnum enum
// A concrete instance of `ConsentStateEnumInput` can be one of the following:
//
//	ConsentStateEnumStateUnspecified
//	ConsentStateEnumActive
//	ConsentStateEnumArchived
//	ConsentStateEnumRevoked
//	ConsentStateEnumDraft
//	ConsentStateEnumRejected
type ConsentStateEnumInput interface {
	pulumi.Input

	ToConsentStateEnumOutput() ConsentStateEnumOutput
	ToConsentStateEnumOutputWithContext(context.Context) ConsentStateEnumOutput
}

var consentStateEnumPtrType = reflect.TypeOf((**ConsentStateEnum)(nil)).Elem()

type ConsentStateEnumPtrInput interface {
	pulumi.Input

	ToConsentStateEnumPtrOutput() ConsentStateEnumPtrOutput
	ToConsentStateEnumPtrOutputWithContext(context.Context) ConsentStateEnumPtrOutput
}

type consentStateEnumPtr string

func ConsentStateEnumPtr(v string) ConsentStateEnumPtrInput {
	return (*consentStateEnumPtr)(&v)
}

func (*consentStateEnumPtr) ElementType() reflect.Type {
	return consentStateEnumPtrType
}

func (in *consentStateEnumPtr) ToConsentStateEnumPtrOutput() ConsentStateEnumPtrOutput {
	return pulumi.ToOutput(in).(ConsentStateEnumPtrOutput)
}

func (in *consentStateEnumPtr) ToConsentStateEnumPtrOutputWithContext(ctx context.Context) ConsentStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConsentStateEnumPtrOutput)
}

// Tag filtering profile that determines which tags to keep/remove.
type DicomConfigFilterProfile string

const (
	// No tag filtration profile provided. Same as KEEP_ALL_PROFILE.
	DicomConfigFilterProfileTagFilterProfileUnspecified = DicomConfigFilterProfile("TAG_FILTER_PROFILE_UNSPECIFIED")
	// Keep only tags required to produce valid DICOM.
	DicomConfigFilterProfileMinimalKeepListProfile = DicomConfigFilterProfile("MINIMAL_KEEP_LIST_PROFILE")
	// Remove tags based on DICOM Standard's Attribute Confidentiality Basic Profile (DICOM Standard Edition 2018e) http://dicom.nema.org/medical/dicom/2018e/output/chtml/part15/chapter_E.html.
	DicomConfigFilterProfileAttributeConfidentialityBasicProfile = DicomConfigFilterProfile("ATTRIBUTE_CONFIDENTIALITY_BASIC_PROFILE")
	// Keep all tags.
	DicomConfigFilterProfileKeepAllProfile = DicomConfigFilterProfile("KEEP_ALL_PROFILE")
	// Inspects within tag contents and replaces sensitive text. The process can be configured using the TextConfig. Applies to all tags with the following Value Representation names: AE, LO, LT, PN, SH, ST, UC, UT, DA, DT, AS
	DicomConfigFilterProfileDeidentifyTagContents = DicomConfigFilterProfile("DEIDENTIFY_TAG_CONTENTS")
)

func (DicomConfigFilterProfile) ElementType() reflect.Type {
	return reflect.TypeOf((*DicomConfigFilterProfile)(nil)).Elem()
}

func (e DicomConfigFilterProfile) ToDicomConfigFilterProfileOutput() DicomConfigFilterProfileOutput {
	return pulumi.ToOutput(e).(DicomConfigFilterProfileOutput)
}

func (e DicomConfigFilterProfile) ToDicomConfigFilterProfileOutputWithContext(ctx context.Context) DicomConfigFilterProfileOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DicomConfigFilterProfileOutput)
}

func (e DicomConfigFilterProfile) ToDicomConfigFilterProfilePtrOutput() DicomConfigFilterProfilePtrOutput {
	return e.ToDicomConfigFilterProfilePtrOutputWithContext(context.Background())
}

func (e DicomConfigFilterProfile) ToDicomConfigFilterProfilePtrOutputWithContext(ctx context.Context) DicomConfigFilterProfilePtrOutput {
	return DicomConfigFilterProfile(e).ToDicomConfigFilterProfileOutputWithContext(ctx).ToDicomConfigFilterProfilePtrOutputWithContext(ctx)
}

func (e DicomConfigFilterProfile) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DicomConfigFilterProfile) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DicomConfigFilterProfile) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DicomConfigFilterProfile) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DicomConfigFilterProfileOutput struct{ *pulumi.OutputState }

func (DicomConfigFilterProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DicomConfigFilterProfile)(nil)).Elem()
}

func (o DicomConfigFilterProfileOutput) ToDicomConfigFilterProfileOutput() DicomConfigFilterProfileOutput {
	return o
}

func (o DicomConfigFilterProfileOutput) ToDicomConfigFilterProfileOutputWithContext(ctx context.Context) DicomConfigFilterProfileOutput {
	return o
}

func (o DicomConfigFilterProfileOutput) ToDicomConfigFilterProfilePtrOutput() DicomConfigFilterProfilePtrOutput {
	return o.ToDicomConfigFilterProfilePtrOutputWithContext(context.Background())
}

func (o DicomConfigFilterProfileOutput) ToDicomConfigFilterProfilePtrOutputWithContext(ctx context.Context) DicomConfigFilterProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DicomConfigFilterProfile) *DicomConfigFilterProfile {
		return &v
	}).(DicomConfigFilterProfilePtrOutput)
}

func (o DicomConfigFilterProfileOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DicomConfigFilterProfileOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DicomConfigFilterProfile) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DicomConfigFilterProfileOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DicomConfigFilterProfileOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DicomConfigFilterProfile) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DicomConfigFilterProfilePtrOutput struct{ *pulumi.OutputState }

func (DicomConfigFilterProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DicomConfigFilterProfile)(nil)).Elem()
}

func (o DicomConfigFilterProfilePtrOutput) ToDicomConfigFilterProfilePtrOutput() DicomConfigFilterProfilePtrOutput {
	return o
}

func (o DicomConfigFilterProfilePtrOutput) ToDicomConfigFilterProfilePtrOutputWithContext(ctx context.Context) DicomConfigFilterProfilePtrOutput {
	return o
}

func (o DicomConfigFilterProfilePtrOutput) Elem() DicomConfigFilterProfileOutput {
	return o.ApplyT(func(v *DicomConfigFilterProfile) DicomConfigFilterProfile {
		if v != nil {
			return *v
		}
		var ret DicomConfigFilterProfile
		return ret
	}).(DicomConfigFilterProfileOutput)
}

func (o DicomConfigFilterProfilePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DicomConfigFilterProfilePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DicomConfigFilterProfile) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DicomConfigFilterProfileInput is an input type that accepts values of the DicomConfigFilterProfile enum
// A concrete instance of `DicomConfigFilterProfileInput` can be one of the following:
//
//	DicomConfigFilterProfileTagFilterProfileUnspecified
//	DicomConfigFilterProfileMinimalKeepListProfile
//	DicomConfigFilterProfileAttributeConfidentialityBasicProfile
//	DicomConfigFilterProfileKeepAllProfile
//	DicomConfigFilterProfileDeidentifyTagContents
type DicomConfigFilterProfileInput interface {
	pulumi.Input

	ToDicomConfigFilterProfileOutput() DicomConfigFilterProfileOutput
	ToDicomConfigFilterProfileOutputWithContext(context.Context) DicomConfigFilterProfileOutput
}

var dicomConfigFilterProfilePtrType = reflect.TypeOf((**DicomConfigFilterProfile)(nil)).Elem()

type DicomConfigFilterProfilePtrInput interface {
	pulumi.Input

	ToDicomConfigFilterProfilePtrOutput() DicomConfigFilterProfilePtrOutput
	ToDicomConfigFilterProfilePtrOutputWithContext(context.Context) DicomConfigFilterProfilePtrOutput
}

type dicomConfigFilterProfilePtr string

func DicomConfigFilterProfilePtr(v string) DicomConfigFilterProfilePtrInput {
	return (*dicomConfigFilterProfilePtr)(&v)
}

func (*dicomConfigFilterProfilePtr) ElementType() reflect.Type {
	return dicomConfigFilterProfilePtrType
}

func (in *dicomConfigFilterProfilePtr) ToDicomConfigFilterProfilePtrOutput() DicomConfigFilterProfilePtrOutput {
	return pulumi.ToOutput(in).(DicomConfigFilterProfilePtrOutput)
}

func (in *dicomConfigFilterProfilePtr) ToDicomConfigFilterProfilePtrOutputWithContext(ctx context.Context) DicomConfigFilterProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DicomConfigFilterProfilePtrOutput)
}

// Enable parsing of references within complex FHIR data types such as Extensions. If this value is set to ENABLED, then features like referential integrity and Bundle reference rewriting apply to all references. If this flag has not been specified the behavior of the FHIR store will not change, references in complex data types will not be parsed. New stores will have this value set to ENABLED after a notification period. Warning: turning on this flag causes processing existing resources to fail if they contain references to non-existent resources.
type FhirStoreComplexDataTypeReferenceParsing string

const (
	// No parsing behavior specified. This is the same as DISABLED for backwards compatibility.
	FhirStoreComplexDataTypeReferenceParsingComplexDataTypeReferenceParsingUnspecified = FhirStoreComplexDataTypeReferenceParsing("COMPLEX_DATA_TYPE_REFERENCE_PARSING_UNSPECIFIED")
	// References in complex data types are ignored.
	FhirStoreComplexDataTypeReferenceParsingDisabled = FhirStoreComplexDataTypeReferenceParsing("DISABLED")
	// References in complex data types are parsed.
	FhirStoreComplexDataTypeReferenceParsingEnabled = FhirStoreComplexDataTypeReferenceParsing("ENABLED")
)

func (FhirStoreComplexDataTypeReferenceParsing) ElementType() reflect.Type {
	return reflect.TypeOf((*FhirStoreComplexDataTypeReferenceParsing)(nil)).Elem()
}

func (e FhirStoreComplexDataTypeReferenceParsing) ToFhirStoreComplexDataTypeReferenceParsingOutput() FhirStoreComplexDataTypeReferenceParsingOutput {
	return pulumi.ToOutput(e).(FhirStoreComplexDataTypeReferenceParsingOutput)
}

func (e FhirStoreComplexDataTypeReferenceParsing) ToFhirStoreComplexDataTypeReferenceParsingOutputWithContext(ctx context.Context) FhirStoreComplexDataTypeReferenceParsingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FhirStoreComplexDataTypeReferenceParsingOutput)
}

func (e FhirStoreComplexDataTypeReferenceParsing) ToFhirStoreComplexDataTypeReferenceParsingPtrOutput() FhirStoreComplexDataTypeReferenceParsingPtrOutput {
	return e.ToFhirStoreComplexDataTypeReferenceParsingPtrOutputWithContext(context.Background())
}

func (e FhirStoreComplexDataTypeReferenceParsing) ToFhirStoreComplexDataTypeReferenceParsingPtrOutputWithContext(ctx context.Context) FhirStoreComplexDataTypeReferenceParsingPtrOutput {
	return FhirStoreComplexDataTypeReferenceParsing(e).ToFhirStoreComplexDataTypeReferenceParsingOutputWithContext(ctx).ToFhirStoreComplexDataTypeReferenceParsingPtrOutputWithContext(ctx)
}

func (e FhirStoreComplexDataTypeReferenceParsing) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FhirStoreComplexDataTypeReferenceParsing) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FhirStoreComplexDataTypeReferenceParsing) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FhirStoreComplexDataTypeReferenceParsing) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FhirStoreComplexDataTypeReferenceParsingOutput struct{ *pulumi.OutputState }

func (FhirStoreComplexDataTypeReferenceParsingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FhirStoreComplexDataTypeReferenceParsing)(nil)).Elem()
}

func (o FhirStoreComplexDataTypeReferenceParsingOutput) ToFhirStoreComplexDataTypeReferenceParsingOutput() FhirStoreComplexDataTypeReferenceParsingOutput {
	return o
}

func (o FhirStoreComplexDataTypeReferenceParsingOutput) ToFhirStoreComplexDataTypeReferenceParsingOutputWithContext(ctx context.Context) FhirStoreComplexDataTypeReferenceParsingOutput {
	return o
}

func (o FhirStoreComplexDataTypeReferenceParsingOutput) ToFhirStoreComplexDataTypeReferenceParsingPtrOutput() FhirStoreComplexDataTypeReferenceParsingPtrOutput {
	return o.ToFhirStoreComplexDataTypeReferenceParsingPtrOutputWithContext(context.Background())
}

func (o FhirStoreComplexDataTypeReferenceParsingOutput) ToFhirStoreComplexDataTypeReferenceParsingPtrOutputWithContext(ctx context.Context) FhirStoreComplexDataTypeReferenceParsingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FhirStoreComplexDataTypeReferenceParsing) *FhirStoreComplexDataTypeReferenceParsing {
		return &v
	}).(FhirStoreComplexDataTypeReferenceParsingPtrOutput)
}

func (o FhirStoreComplexDataTypeReferenceParsingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FhirStoreComplexDataTypeReferenceParsingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FhirStoreComplexDataTypeReferenceParsing) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FhirStoreComplexDataTypeReferenceParsingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FhirStoreComplexDataTypeReferenceParsingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FhirStoreComplexDataTypeReferenceParsing) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FhirStoreComplexDataTypeReferenceParsingPtrOutput struct{ *pulumi.OutputState }

func (FhirStoreComplexDataTypeReferenceParsingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FhirStoreComplexDataTypeReferenceParsing)(nil)).Elem()
}

func (o FhirStoreComplexDataTypeReferenceParsingPtrOutput) ToFhirStoreComplexDataTypeReferenceParsingPtrOutput() FhirStoreComplexDataTypeReferenceParsingPtrOutput {
	return o
}

func (o FhirStoreComplexDataTypeReferenceParsingPtrOutput) ToFhirStoreComplexDataTypeReferenceParsingPtrOutputWithContext(ctx context.Context) FhirStoreComplexDataTypeReferenceParsingPtrOutput {
	return o
}

func (o FhirStoreComplexDataTypeReferenceParsingPtrOutput) Elem() FhirStoreComplexDataTypeReferenceParsingOutput {
	return o.ApplyT(func(v *FhirStoreComplexDataTypeReferenceParsing) FhirStoreComplexDataTypeReferenceParsing {
		if v != nil {
			return *v
		}
		var ret FhirStoreComplexDataTypeReferenceParsing
		return ret
	}).(FhirStoreComplexDataTypeReferenceParsingOutput)
}

func (o FhirStoreComplexDataTypeReferenceParsingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FhirStoreComplexDataTypeReferenceParsingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FhirStoreComplexDataTypeReferenceParsing) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FhirStoreComplexDataTypeReferenceParsingInput is an input type that accepts values of the FhirStoreComplexDataTypeReferenceParsing enum
// A concrete instance of `FhirStoreComplexDataTypeReferenceParsingInput` can be one of the following:
//
//	FhirStoreComplexDataTypeReferenceParsingComplexDataTypeReferenceParsingUnspecified
//	FhirStoreComplexDataTypeReferenceParsingDisabled
//	FhirStoreComplexDataTypeReferenceParsingEnabled
type FhirStoreComplexDataTypeReferenceParsingInput interface {
	pulumi.Input

	ToFhirStoreComplexDataTypeReferenceParsingOutput() FhirStoreComplexDataTypeReferenceParsingOutput
	ToFhirStoreComplexDataTypeReferenceParsingOutputWithContext(context.Context) FhirStoreComplexDataTypeReferenceParsingOutput
}

var fhirStoreComplexDataTypeReferenceParsingPtrType = reflect.TypeOf((**FhirStoreComplexDataTypeReferenceParsing)(nil)).Elem()

type FhirStoreComplexDataTypeReferenceParsingPtrInput interface {
	pulumi.Input

	ToFhirStoreComplexDataTypeReferenceParsingPtrOutput() FhirStoreComplexDataTypeReferenceParsingPtrOutput
	ToFhirStoreComplexDataTypeReferenceParsingPtrOutputWithContext(context.Context) FhirStoreComplexDataTypeReferenceParsingPtrOutput
}

type fhirStoreComplexDataTypeReferenceParsingPtr string

func FhirStoreComplexDataTypeReferenceParsingPtr(v string) FhirStoreComplexDataTypeReferenceParsingPtrInput {
	return (*fhirStoreComplexDataTypeReferenceParsingPtr)(&v)
}

func (*fhirStoreComplexDataTypeReferenceParsingPtr) ElementType() reflect.Type {
	return fhirStoreComplexDataTypeReferenceParsingPtrType
}

func (in *fhirStoreComplexDataTypeReferenceParsingPtr) ToFhirStoreComplexDataTypeReferenceParsingPtrOutput() FhirStoreComplexDataTypeReferenceParsingPtrOutput {
	return pulumi.ToOutput(in).(FhirStoreComplexDataTypeReferenceParsingPtrOutput)
}

func (in *fhirStoreComplexDataTypeReferenceParsingPtr) ToFhirStoreComplexDataTypeReferenceParsingPtrOutputWithContext(ctx context.Context) FhirStoreComplexDataTypeReferenceParsingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FhirStoreComplexDataTypeReferenceParsingPtrOutput)
}

// Immutable. The FHIR specification version that this FHIR store supports natively. This field is immutable after store creation. Requests are rejected if they contain FHIR resources of a different version. Version is required for every FHIR store.
type FhirStoreVersion string

const (
	// Users must specify a version on store creation or an error is returned.
	FhirStoreVersionVersionUnspecified = FhirStoreVersion("VERSION_UNSPECIFIED")
	// Draft Standard for Trial Use, [Release 2](https://www.hl7.org/fhir/DSTU2)
	FhirStoreVersionDstu2 = FhirStoreVersion("DSTU2")
	// Standard for Trial Use, [Release 3](https://www.hl7.org/fhir/STU3)
	FhirStoreVersionStu3 = FhirStoreVersion("STU3")
	// [Release 4](https://www.hl7.org/fhir/R4)
	FhirStoreVersionR4 = FhirStoreVersion("R4")
)

func (FhirStoreVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*FhirStoreVersion)(nil)).Elem()
}

func (e FhirStoreVersion) ToFhirStoreVersionOutput() FhirStoreVersionOutput {
	return pulumi.ToOutput(e).(FhirStoreVersionOutput)
}

func (e FhirStoreVersion) ToFhirStoreVersionOutputWithContext(ctx context.Context) FhirStoreVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FhirStoreVersionOutput)
}

func (e FhirStoreVersion) ToFhirStoreVersionPtrOutput() FhirStoreVersionPtrOutput {
	return e.ToFhirStoreVersionPtrOutputWithContext(context.Background())
}

func (e FhirStoreVersion) ToFhirStoreVersionPtrOutputWithContext(ctx context.Context) FhirStoreVersionPtrOutput {
	return FhirStoreVersion(e).ToFhirStoreVersionOutputWithContext(ctx).ToFhirStoreVersionPtrOutputWithContext(ctx)
}

func (e FhirStoreVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FhirStoreVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FhirStoreVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FhirStoreVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FhirStoreVersionOutput struct{ *pulumi.OutputState }

func (FhirStoreVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FhirStoreVersion)(nil)).Elem()
}

func (o FhirStoreVersionOutput) ToFhirStoreVersionOutput() FhirStoreVersionOutput {
	return o
}

func (o FhirStoreVersionOutput) ToFhirStoreVersionOutputWithContext(ctx context.Context) FhirStoreVersionOutput {
	return o
}

func (o FhirStoreVersionOutput) ToFhirStoreVersionPtrOutput() FhirStoreVersionPtrOutput {
	return o.ToFhirStoreVersionPtrOutputWithContext(context.Background())
}

func (o FhirStoreVersionOutput) ToFhirStoreVersionPtrOutputWithContext(ctx context.Context) FhirStoreVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FhirStoreVersion) *FhirStoreVersion {
		return &v
	}).(FhirStoreVersionPtrOutput)
}

func (o FhirStoreVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FhirStoreVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FhirStoreVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FhirStoreVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FhirStoreVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FhirStoreVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FhirStoreVersionPtrOutput struct{ *pulumi.OutputState }

func (FhirStoreVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FhirStoreVersion)(nil)).Elem()
}

func (o FhirStoreVersionPtrOutput) ToFhirStoreVersionPtrOutput() FhirStoreVersionPtrOutput {
	return o
}

func (o FhirStoreVersionPtrOutput) ToFhirStoreVersionPtrOutputWithContext(ctx context.Context) FhirStoreVersionPtrOutput {
	return o
}

func (o FhirStoreVersionPtrOutput) Elem() FhirStoreVersionOutput {
	return o.ApplyT(func(v *FhirStoreVersion) FhirStoreVersion {
		if v != nil {
			return *v
		}
		var ret FhirStoreVersion
		return ret
	}).(FhirStoreVersionOutput)
}

func (o FhirStoreVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FhirStoreVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FhirStoreVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FhirStoreVersionInput is an input type that accepts values of the FhirStoreVersion enum
// A concrete instance of `FhirStoreVersionInput` can be one of the following:
//
//	FhirStoreVersionVersionUnspecified
//	FhirStoreVersionDstu2
//	FhirStoreVersionStu3
//	FhirStoreVersionR4
type FhirStoreVersionInput interface {
	pulumi.Input

	ToFhirStoreVersionOutput() FhirStoreVersionOutput
	ToFhirStoreVersionOutputWithContext(context.Context) FhirStoreVersionOutput
}

var fhirStoreVersionPtrType = reflect.TypeOf((**FhirStoreVersion)(nil)).Elem()

type FhirStoreVersionPtrInput interface {
	pulumi.Input

	ToFhirStoreVersionPtrOutput() FhirStoreVersionPtrOutput
	ToFhirStoreVersionPtrOutputWithContext(context.Context) FhirStoreVersionPtrOutput
}

type fhirStoreVersionPtr string

func FhirStoreVersionPtr(v string) FhirStoreVersionPtrInput {
	return (*fhirStoreVersionPtr)(&v)
}

func (*fhirStoreVersionPtr) ElementType() reflect.Type {
	return fhirStoreVersionPtrType
}

func (in *fhirStoreVersionPtr) ToFhirStoreVersionPtrOutput() FhirStoreVersionPtrOutput {
	return pulumi.ToOutput(in).(FhirStoreVersionPtrOutput)
}

func (in *fhirStoreVersionPtr) ToFhirStoreVersionPtrOutputWithContext(ctx context.Context) FhirStoreVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FhirStoreVersionPtrOutput)
}

// Deidentify action for one field.
type FieldMetadataAction string

const (
	// No action specified.
	FieldMetadataActionActionUnspecified = FieldMetadataAction("ACTION_UNSPECIFIED")
	// Transform the entire field.
	FieldMetadataActionTransform = FieldMetadataAction("TRANSFORM")
	// Inspect and transform any found PHI.
	FieldMetadataActionInspectAndTransform = FieldMetadataAction("INSPECT_AND_TRANSFORM")
	// Do not transform.
	FieldMetadataActionDoNotTransform = FieldMetadataAction("DO_NOT_TRANSFORM")
)

func (FieldMetadataAction) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldMetadataAction)(nil)).Elem()
}

func (e FieldMetadataAction) ToFieldMetadataActionOutput() FieldMetadataActionOutput {
	return pulumi.ToOutput(e).(FieldMetadataActionOutput)
}

func (e FieldMetadataAction) ToFieldMetadataActionOutputWithContext(ctx context.Context) FieldMetadataActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FieldMetadataActionOutput)
}

func (e FieldMetadataAction) ToFieldMetadataActionPtrOutput() FieldMetadataActionPtrOutput {
	return e.ToFieldMetadataActionPtrOutputWithContext(context.Background())
}

func (e FieldMetadataAction) ToFieldMetadataActionPtrOutputWithContext(ctx context.Context) FieldMetadataActionPtrOutput {
	return FieldMetadataAction(e).ToFieldMetadataActionOutputWithContext(ctx).ToFieldMetadataActionPtrOutputWithContext(ctx)
}

func (e FieldMetadataAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FieldMetadataAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FieldMetadataAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FieldMetadataAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FieldMetadataActionOutput struct{ *pulumi.OutputState }

func (FieldMetadataActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldMetadataAction)(nil)).Elem()
}

func (o FieldMetadataActionOutput) ToFieldMetadataActionOutput() FieldMetadataActionOutput {
	return o
}

func (o FieldMetadataActionOutput) ToFieldMetadataActionOutputWithContext(ctx context.Context) FieldMetadataActionOutput {
	return o
}

func (o FieldMetadataActionOutput) ToFieldMetadataActionPtrOutput() FieldMetadataActionPtrOutput {
	return o.ToFieldMetadataActionPtrOutputWithContext(context.Background())
}

func (o FieldMetadataActionOutput) ToFieldMetadataActionPtrOutputWithContext(ctx context.Context) FieldMetadataActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FieldMetadataAction) *FieldMetadataAction {
		return &v
	}).(FieldMetadataActionPtrOutput)
}

func (o FieldMetadataActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FieldMetadataActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FieldMetadataAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FieldMetadataActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FieldMetadataActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FieldMetadataAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FieldMetadataActionPtrOutput struct{ *pulumi.OutputState }

func (FieldMetadataActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FieldMetadataAction)(nil)).Elem()
}

func (o FieldMetadataActionPtrOutput) ToFieldMetadataActionPtrOutput() FieldMetadataActionPtrOutput {
	return o
}

func (o FieldMetadataActionPtrOutput) ToFieldMetadataActionPtrOutputWithContext(ctx context.Context) FieldMetadataActionPtrOutput {
	return o
}

func (o FieldMetadataActionPtrOutput) Elem() FieldMetadataActionOutput {
	return o.ApplyT(func(v *FieldMetadataAction) FieldMetadataAction {
		if v != nil {
			return *v
		}
		var ret FieldMetadataAction
		return ret
	}).(FieldMetadataActionOutput)
}

func (o FieldMetadataActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FieldMetadataActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FieldMetadataAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FieldMetadataActionInput is an input type that accepts values of the FieldMetadataAction enum
// A concrete instance of `FieldMetadataActionInput` can be one of the following:
//
//	FieldMetadataActionActionUnspecified
//	FieldMetadataActionTransform
//	FieldMetadataActionInspectAndTransform
//	FieldMetadataActionDoNotTransform
type FieldMetadataActionInput interface {
	pulumi.Input

	ToFieldMetadataActionOutput() FieldMetadataActionOutput
	ToFieldMetadataActionOutputWithContext(context.Context) FieldMetadataActionOutput
}

var fieldMetadataActionPtrType = reflect.TypeOf((**FieldMetadataAction)(nil)).Elem()

type FieldMetadataActionPtrInput interface {
	pulumi.Input

	ToFieldMetadataActionPtrOutput() FieldMetadataActionPtrOutput
	ToFieldMetadataActionPtrOutputWithContext(context.Context) FieldMetadataActionPtrOutput
}

type fieldMetadataActionPtr string

func FieldMetadataActionPtr(v string) FieldMetadataActionPtrInput {
	return (*fieldMetadataActionPtr)(&v)
}

func (*fieldMetadataActionPtr) ElementType() reflect.Type {
	return fieldMetadataActionPtrType
}

func (in *fieldMetadataActionPtr) ToFieldMetadataActionPtrOutput() FieldMetadataActionPtrOutput {
	return pulumi.ToOutput(in).(FieldMetadataActionPtrOutput)
}

func (in *fieldMetadataActionPtr) ToFieldMetadataActionPtrOutputWithContext(ctx context.Context) FieldMetadataActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FieldMetadataActionPtrOutput)
}

// Determines whether the existing table in the destination is to be overwritten or appended to. If a write_disposition is specified, the `force` parameter is ignored.
type GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition string

const (
	// Default behavior is the same as WRITE_EMPTY.
	GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionWriteDispositionUnspecified = GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition("WRITE_DISPOSITION_UNSPECIFIED")
	// Only export data if the destination table is empty.
	GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionWriteEmpty = GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition("WRITE_EMPTY")
	// Erase all existing data in the destination table before writing the instances.
	GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionWriteTruncate = GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition("WRITE_TRUNCATE")
	// Append data to the destination table.
	GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionWriteAppend = GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition("WRITE_APPEND")
)

func (GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition)(nil)).Elem()
}

func (e GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition) ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput() GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput {
	return pulumi.ToOutput(e).(GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput)
}

func (e GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition) ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutputWithContext(ctx context.Context) GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput)
}

func (e GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition) ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput() GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput {
	return e.ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutputWithContext(context.Background())
}

func (e GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition) ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutputWithContext(ctx context.Context) GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput {
	return GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition(e).ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutputWithContext(ctx).ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutputWithContext(ctx)
}

func (e GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput struct{ *pulumi.OutputState }

func (GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition)(nil)).Elem()
}

func (o GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput) ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput() GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput {
	return o
}

func (o GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput) ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutputWithContext(ctx context.Context) GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput {
	return o
}

func (o GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput) ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput() GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput {
	return o.ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput) ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutputWithContext(ctx context.Context) GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition) *GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition {
		return &v
	}).(GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput)
}

func (o GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition)(nil)).Elem()
}

func (o GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput) ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput() GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput {
	return o
}

func (o GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput) ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutputWithContext(ctx context.Context) GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput {
	return o
}

func (o GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput) Elem() GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput {
	return o.ApplyT(func(v *GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition) GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition {
		if v != nil {
			return *v
		}
		var ret GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition
		return ret
	}).(GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput)
}

func (o GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionInput is an input type that accepts values of the GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition enum
// A concrete instance of `GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionInput` can be one of the following:
//
//	GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionWriteDispositionUnspecified
//	GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionWriteEmpty
//	GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionWriteTruncate
//	GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionWriteAppend
type GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionInput interface {
	pulumi.Input

	ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput() GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput
	ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutputWithContext(context.Context) GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput
}

var googleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrType = reflect.TypeOf((**GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition)(nil)).Elem()

type GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrInput interface {
	pulumi.Input

	ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput() GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput
	ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutputWithContext(context.Context) GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput
}

type googleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtr string

func GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtr(v string) GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrInput {
	return (*googleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtr)(&v)
}

func (*googleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtr) ElementType() reflect.Type {
	return googleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrType
}

func (in *googleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtr) ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput() GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput {
	return pulumi.ToOutput(in).(GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput)
}

func (in *googleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtr) ToGoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutputWithContext(ctx context.Context) GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput)
}

// Determines if existing data in the destination dataset is overwritten, appended to, or not written if the tables contain data. If a write_disposition is specified, the `force` parameter is ignored.
type GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition string

const (
	// Default behavior is the same as WRITE_EMPTY.
	GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionWriteDispositionUnspecified = GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition("WRITE_DISPOSITION_UNSPECIFIED")
	// Only export data if the destination tables are empty.
	GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionWriteEmpty = GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition("WRITE_EMPTY")
	// Erase all existing data in the destination tables before writing the FHIR resources.
	GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionWriteTruncate = GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition("WRITE_TRUNCATE")
	// Append data to the destination tables.
	GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionWriteAppend = GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition("WRITE_APPEND")
)

func (GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition)(nil)).Elem()
}

func (e GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition) ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput() GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput {
	return pulumi.ToOutput(e).(GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput)
}

func (e GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition) ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutputWithContext(ctx context.Context) GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput)
}

func (e GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition) ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput() GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput {
	return e.ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutputWithContext(context.Background())
}

func (e GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition) ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutputWithContext(ctx context.Context) GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput {
	return GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition(e).ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutputWithContext(ctx).ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutputWithContext(ctx)
}

func (e GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput struct{ *pulumi.OutputState }

func (GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition)(nil)).Elem()
}

func (o GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput) ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput() GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput {
	return o
}

func (o GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput) ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutputWithContext(ctx context.Context) GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput {
	return o
}

func (o GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput) ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput() GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput {
	return o.ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutputWithContext(context.Background())
}

func (o GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput) ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutputWithContext(ctx context.Context) GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition) *GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition {
		return &v
	}).(GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput)
}

func (o GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition)(nil)).Elem()
}

func (o GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput) ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput() GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput {
	return o
}

func (o GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput) ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutputWithContext(ctx context.Context) GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput {
	return o
}

func (o GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput) Elem() GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput {
	return o.ApplyT(func(v *GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition) GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition {
		if v != nil {
			return *v
		}
		var ret GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition
		return ret
	}).(GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput)
}

func (o GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionInput is an input type that accepts values of the GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition enum
// A concrete instance of `GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionInput` can be one of the following:
//
//	GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionWriteDispositionUnspecified
//	GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionWriteEmpty
//	GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionWriteTruncate
//	GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionWriteAppend
type GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionInput interface {
	pulumi.Input

	ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput() GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput
	ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutputWithContext(context.Context) GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput
}

var googleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrType = reflect.TypeOf((**GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition)(nil)).Elem()

type GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrInput interface {
	pulumi.Input

	ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput() GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput
	ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutputWithContext(context.Context) GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput
}

type googleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtr string

func GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtr(v string) GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrInput {
	return (*googleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtr)(&v)
}

func (*googleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtr) ElementType() reflect.Type {
	return googleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrType
}

func (in *googleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtr) ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput() GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput {
	return pulumi.ToOutput(in).(GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput)
}

func (in *googleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtr) ToGoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutputWithContext(ctx context.Context) GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput)
}

// Determines how to redact text from image.
type ImageConfigTextRedactionMode string

const (
	// No text redaction specified. Same as REDACT_NO_TEXT.
	ImageConfigTextRedactionModeTextRedactionModeUnspecified = ImageConfigTextRedactionMode("TEXT_REDACTION_MODE_UNSPECIFIED")
	// Redact all text.
	ImageConfigTextRedactionModeRedactAllText = ImageConfigTextRedactionMode("REDACT_ALL_TEXT")
	// Redact sensitive text. Uses the set of [Default DICOM InfoTypes](https://cloud.google.com/healthcare-api/docs/how-tos/dicom-deidentify#default_dicom_infotypes).
	ImageConfigTextRedactionModeRedactSensitiveText = ImageConfigTextRedactionMode("REDACT_SENSITIVE_TEXT")
	// Do not redact text.
	ImageConfigTextRedactionModeRedactNoText = ImageConfigTextRedactionMode("REDACT_NO_TEXT")
)

func (ImageConfigTextRedactionMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageConfigTextRedactionMode)(nil)).Elem()
}

func (e ImageConfigTextRedactionMode) ToImageConfigTextRedactionModeOutput() ImageConfigTextRedactionModeOutput {
	return pulumi.ToOutput(e).(ImageConfigTextRedactionModeOutput)
}

func (e ImageConfigTextRedactionMode) ToImageConfigTextRedactionModeOutputWithContext(ctx context.Context) ImageConfigTextRedactionModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImageConfigTextRedactionModeOutput)
}

func (e ImageConfigTextRedactionMode) ToImageConfigTextRedactionModePtrOutput() ImageConfigTextRedactionModePtrOutput {
	return e.ToImageConfigTextRedactionModePtrOutputWithContext(context.Background())
}

func (e ImageConfigTextRedactionMode) ToImageConfigTextRedactionModePtrOutputWithContext(ctx context.Context) ImageConfigTextRedactionModePtrOutput {
	return ImageConfigTextRedactionMode(e).ToImageConfigTextRedactionModeOutputWithContext(ctx).ToImageConfigTextRedactionModePtrOutputWithContext(ctx)
}

func (e ImageConfigTextRedactionMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageConfigTextRedactionMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageConfigTextRedactionMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImageConfigTextRedactionMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImageConfigTextRedactionModeOutput struct{ *pulumi.OutputState }

func (ImageConfigTextRedactionModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageConfigTextRedactionMode)(nil)).Elem()
}

func (o ImageConfigTextRedactionModeOutput) ToImageConfigTextRedactionModeOutput() ImageConfigTextRedactionModeOutput {
	return o
}

func (o ImageConfigTextRedactionModeOutput) ToImageConfigTextRedactionModeOutputWithContext(ctx context.Context) ImageConfigTextRedactionModeOutput {
	return o
}

func (o ImageConfigTextRedactionModeOutput) ToImageConfigTextRedactionModePtrOutput() ImageConfigTextRedactionModePtrOutput {
	return o.ToImageConfigTextRedactionModePtrOutputWithContext(context.Background())
}

func (o ImageConfigTextRedactionModeOutput) ToImageConfigTextRedactionModePtrOutputWithContext(ctx context.Context) ImageConfigTextRedactionModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageConfigTextRedactionMode) *ImageConfigTextRedactionMode {
		return &v
	}).(ImageConfigTextRedactionModePtrOutput)
}

func (o ImageConfigTextRedactionModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageConfigTextRedactionModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageConfigTextRedactionMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageConfigTextRedactionModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageConfigTextRedactionModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageConfigTextRedactionMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageConfigTextRedactionModePtrOutput struct{ *pulumi.OutputState }

func (ImageConfigTextRedactionModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageConfigTextRedactionMode)(nil)).Elem()
}

func (o ImageConfigTextRedactionModePtrOutput) ToImageConfigTextRedactionModePtrOutput() ImageConfigTextRedactionModePtrOutput {
	return o
}

func (o ImageConfigTextRedactionModePtrOutput) ToImageConfigTextRedactionModePtrOutputWithContext(ctx context.Context) ImageConfigTextRedactionModePtrOutput {
	return o
}

func (o ImageConfigTextRedactionModePtrOutput) Elem() ImageConfigTextRedactionModeOutput {
	return o.ApplyT(func(v *ImageConfigTextRedactionMode) ImageConfigTextRedactionMode {
		if v != nil {
			return *v
		}
		var ret ImageConfigTextRedactionMode
		return ret
	}).(ImageConfigTextRedactionModeOutput)
}

func (o ImageConfigTextRedactionModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageConfigTextRedactionModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageConfigTextRedactionMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImageConfigTextRedactionModeInput is an input type that accepts values of the ImageConfigTextRedactionMode enum
// A concrete instance of `ImageConfigTextRedactionModeInput` can be one of the following:
//
//	ImageConfigTextRedactionModeTextRedactionModeUnspecified
//	ImageConfigTextRedactionModeRedactAllText
//	ImageConfigTextRedactionModeRedactSensitiveText
//	ImageConfigTextRedactionModeRedactNoText
type ImageConfigTextRedactionModeInput interface {
	pulumi.Input

	ToImageConfigTextRedactionModeOutput() ImageConfigTextRedactionModeOutput
	ToImageConfigTextRedactionModeOutputWithContext(context.Context) ImageConfigTextRedactionModeOutput
}

var imageConfigTextRedactionModePtrType = reflect.TypeOf((**ImageConfigTextRedactionMode)(nil)).Elem()

type ImageConfigTextRedactionModePtrInput interface {
	pulumi.Input

	ToImageConfigTextRedactionModePtrOutput() ImageConfigTextRedactionModePtrOutput
	ToImageConfigTextRedactionModePtrOutputWithContext(context.Context) ImageConfigTextRedactionModePtrOutput
}

type imageConfigTextRedactionModePtr string

func ImageConfigTextRedactionModePtr(v string) ImageConfigTextRedactionModePtrInput {
	return (*imageConfigTextRedactionModePtr)(&v)
}

func (*imageConfigTextRedactionModePtr) ElementType() reflect.Type {
	return imageConfigTextRedactionModePtrType
}

func (in *imageConfigTextRedactionModePtr) ToImageConfigTextRedactionModePtrOutput() ImageConfigTextRedactionModePtrOutput {
	return pulumi.ToOutput(in).(ImageConfigTextRedactionModePtrOutput)
}

func (in *imageConfigTextRedactionModePtr) ToImageConfigTextRedactionModePtrOutputWithContext(ctx context.Context) ImageConfigTextRedactionModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImageConfigTextRedactionModePtrOutput)
}

// Immutable. Determines the version of both the default parser to be used when `schema` is not given, as well as the schematized parser used when `schema` is specified. This field is immutable after HL7v2 store creation.
type ParserConfigVersion string

const (
	// Unspecified parser version, equivalent to V1.
	ParserConfigVersionParserVersionUnspecified = ParserConfigVersion("PARSER_VERSION_UNSPECIFIED")
	// The `parsed_data` includes every given non-empty message field except the Field Separator (MSH-1) field. As a result, the parsed MSH segment starts with the MSH-2 field and the field numbers are off-by-one with respect to the HL7 standard.
	ParserConfigVersionV1 = ParserConfigVersion("V1")
	// The `parsed_data` includes every given non-empty message field.
	ParserConfigVersionV2 = ParserConfigVersion("V2")
	// This version is the same as V2, with the following change. The `parsed_data` contains unescaped escaped field separators, component separators, sub-component separators, repetition separators, escape characters, and truncation characters. If `schema` is specified, the schematized parser uses improved parsing heuristics compared to previous versions.
	ParserConfigVersionV3 = ParserConfigVersion("V3")
)

func (ParserConfigVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*ParserConfigVersion)(nil)).Elem()
}

func (e ParserConfigVersion) ToParserConfigVersionOutput() ParserConfigVersionOutput {
	return pulumi.ToOutput(e).(ParserConfigVersionOutput)
}

func (e ParserConfigVersion) ToParserConfigVersionOutputWithContext(ctx context.Context) ParserConfigVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ParserConfigVersionOutput)
}

func (e ParserConfigVersion) ToParserConfigVersionPtrOutput() ParserConfigVersionPtrOutput {
	return e.ToParserConfigVersionPtrOutputWithContext(context.Background())
}

func (e ParserConfigVersion) ToParserConfigVersionPtrOutputWithContext(ctx context.Context) ParserConfigVersionPtrOutput {
	return ParserConfigVersion(e).ToParserConfigVersionOutputWithContext(ctx).ToParserConfigVersionPtrOutputWithContext(ctx)
}

func (e ParserConfigVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ParserConfigVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ParserConfigVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ParserConfigVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ParserConfigVersionOutput struct{ *pulumi.OutputState }

func (ParserConfigVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParserConfigVersion)(nil)).Elem()
}

func (o ParserConfigVersionOutput) ToParserConfigVersionOutput() ParserConfigVersionOutput {
	return o
}

func (o ParserConfigVersionOutput) ToParserConfigVersionOutputWithContext(ctx context.Context) ParserConfigVersionOutput {
	return o
}

func (o ParserConfigVersionOutput) ToParserConfigVersionPtrOutput() ParserConfigVersionPtrOutput {
	return o.ToParserConfigVersionPtrOutputWithContext(context.Background())
}

func (o ParserConfigVersionOutput) ToParserConfigVersionPtrOutputWithContext(ctx context.Context) ParserConfigVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ParserConfigVersion) *ParserConfigVersion {
		return &v
	}).(ParserConfigVersionPtrOutput)
}

func (o ParserConfigVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ParserConfigVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ParserConfigVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ParserConfigVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ParserConfigVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ParserConfigVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ParserConfigVersionPtrOutput struct{ *pulumi.OutputState }

func (ParserConfigVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParserConfigVersion)(nil)).Elem()
}

func (o ParserConfigVersionPtrOutput) ToParserConfigVersionPtrOutput() ParserConfigVersionPtrOutput {
	return o
}

func (o ParserConfigVersionPtrOutput) ToParserConfigVersionPtrOutputWithContext(ctx context.Context) ParserConfigVersionPtrOutput {
	return o
}

func (o ParserConfigVersionPtrOutput) Elem() ParserConfigVersionOutput {
	return o.ApplyT(func(v *ParserConfigVersion) ParserConfigVersion {
		if v != nil {
			return *v
		}
		var ret ParserConfigVersion
		return ret
	}).(ParserConfigVersionOutput)
}

func (o ParserConfigVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ParserConfigVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ParserConfigVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ParserConfigVersionInput is an input type that accepts values of the ParserConfigVersion enum
// A concrete instance of `ParserConfigVersionInput` can be one of the following:
//
//	ParserConfigVersionParserVersionUnspecified
//	ParserConfigVersionV1
//	ParserConfigVersionV2
//	ParserConfigVersionV3
type ParserConfigVersionInput interface {
	pulumi.Input

	ToParserConfigVersionOutput() ParserConfigVersionOutput
	ToParserConfigVersionOutputWithContext(context.Context) ParserConfigVersionOutput
}

var parserConfigVersionPtrType = reflect.TypeOf((**ParserConfigVersion)(nil)).Elem()

type ParserConfigVersionPtrInput interface {
	pulumi.Input

	ToParserConfigVersionPtrOutput() ParserConfigVersionPtrOutput
	ToParserConfigVersionPtrOutputWithContext(context.Context) ParserConfigVersionPtrOutput
}

type parserConfigVersionPtr string

func ParserConfigVersionPtr(v string) ParserConfigVersionPtrInput {
	return (*parserConfigVersionPtr)(&v)
}

func (*parserConfigVersionPtr) ElementType() reflect.Type {
	return parserConfigVersionPtrType
}

func (in *parserConfigVersionPtr) ToParserConfigVersionPtrOutput() ParserConfigVersionPtrOutput {
	return pulumi.ToOutput(in).(ParserConfigVersionPtrOutput)
}

func (in *parserConfigVersionPtr) ToParserConfigVersionPtrOutputWithContext(ctx context.Context) ParserConfigVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ParserConfigVersionPtrOutput)
}

// Specifies the output schema type. Schema type is required.
type SchemaConfigSchemaType string

const (
	// No schema type specified. This type is unsupported.
	SchemaConfigSchemaTypeSchemaTypeUnspecified = SchemaConfigSchemaType("SCHEMA_TYPE_UNSPECIFIED")
	// Analytics schema defined by the FHIR community. See https://github.com/FHIR/sql-on-fhir/blob/master/sql-on-fhir.md. BigQuery only allows a maximum of 10,000 columns per table. Due to this limitation, the server will not generate schemas for fields of type `Resource`, which can hold any resource type. The affected fields are `Parameters.parameter.resource`, `Bundle.entry.resource`, and `Bundle.entry.response.outcome`. Analytics schema does not gracefully handle extensions with one or more occurrences, anaytics schema also does not handle contained resource.
	SchemaConfigSchemaTypeAnalytics = SchemaConfigSchemaType("ANALYTICS")
	// Analytics V2, similar to schema defined by the FHIR community, with added support for extensions with one or more occurrences and contained resources in stringified JSON. Analytics V2 uses more space in the destination table than Analytics V1. It is generally recommended to use Analytics V2 over Analytics.
	SchemaConfigSchemaTypeAnalyticsV2 = SchemaConfigSchemaType("ANALYTICS_V2")
)

func (SchemaConfigSchemaType) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaConfigSchemaType)(nil)).Elem()
}

func (e SchemaConfigSchemaType) ToSchemaConfigSchemaTypeOutput() SchemaConfigSchemaTypeOutput {
	return pulumi.ToOutput(e).(SchemaConfigSchemaTypeOutput)
}

func (e SchemaConfigSchemaType) ToSchemaConfigSchemaTypeOutputWithContext(ctx context.Context) SchemaConfigSchemaTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchemaConfigSchemaTypeOutput)
}

func (e SchemaConfigSchemaType) ToSchemaConfigSchemaTypePtrOutput() SchemaConfigSchemaTypePtrOutput {
	return e.ToSchemaConfigSchemaTypePtrOutputWithContext(context.Background())
}

func (e SchemaConfigSchemaType) ToSchemaConfigSchemaTypePtrOutputWithContext(ctx context.Context) SchemaConfigSchemaTypePtrOutput {
	return SchemaConfigSchemaType(e).ToSchemaConfigSchemaTypeOutputWithContext(ctx).ToSchemaConfigSchemaTypePtrOutputWithContext(ctx)
}

func (e SchemaConfigSchemaType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaConfigSchemaType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaConfigSchemaType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SchemaConfigSchemaType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchemaConfigSchemaTypeOutput struct{ *pulumi.OutputState }

func (SchemaConfigSchemaTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaConfigSchemaType)(nil)).Elem()
}

func (o SchemaConfigSchemaTypeOutput) ToSchemaConfigSchemaTypeOutput() SchemaConfigSchemaTypeOutput {
	return o
}

func (o SchemaConfigSchemaTypeOutput) ToSchemaConfigSchemaTypeOutputWithContext(ctx context.Context) SchemaConfigSchemaTypeOutput {
	return o
}

func (o SchemaConfigSchemaTypeOutput) ToSchemaConfigSchemaTypePtrOutput() SchemaConfigSchemaTypePtrOutput {
	return o.ToSchemaConfigSchemaTypePtrOutputWithContext(context.Background())
}

func (o SchemaConfigSchemaTypeOutput) ToSchemaConfigSchemaTypePtrOutputWithContext(ctx context.Context) SchemaConfigSchemaTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaConfigSchemaType) *SchemaConfigSchemaType {
		return &v
	}).(SchemaConfigSchemaTypePtrOutput)
}

func (o SchemaConfigSchemaTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchemaConfigSchemaTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaConfigSchemaType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchemaConfigSchemaTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaConfigSchemaTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaConfigSchemaType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchemaConfigSchemaTypePtrOutput struct{ *pulumi.OutputState }

func (SchemaConfigSchemaTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaConfigSchemaType)(nil)).Elem()
}

func (o SchemaConfigSchemaTypePtrOutput) ToSchemaConfigSchemaTypePtrOutput() SchemaConfigSchemaTypePtrOutput {
	return o
}

func (o SchemaConfigSchemaTypePtrOutput) ToSchemaConfigSchemaTypePtrOutputWithContext(ctx context.Context) SchemaConfigSchemaTypePtrOutput {
	return o
}

func (o SchemaConfigSchemaTypePtrOutput) Elem() SchemaConfigSchemaTypeOutput {
	return o.ApplyT(func(v *SchemaConfigSchemaType) SchemaConfigSchemaType {
		if v != nil {
			return *v
		}
		var ret SchemaConfigSchemaType
		return ret
	}).(SchemaConfigSchemaTypeOutput)
}

func (o SchemaConfigSchemaTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaConfigSchemaTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SchemaConfigSchemaType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchemaConfigSchemaTypeInput is an input type that accepts values of the SchemaConfigSchemaType enum
// A concrete instance of `SchemaConfigSchemaTypeInput` can be one of the following:
//
//	SchemaConfigSchemaTypeSchemaTypeUnspecified
//	SchemaConfigSchemaTypeAnalytics
//	SchemaConfigSchemaTypeAnalyticsV2
type SchemaConfigSchemaTypeInput interface {
	pulumi.Input

	ToSchemaConfigSchemaTypeOutput() SchemaConfigSchemaTypeOutput
	ToSchemaConfigSchemaTypeOutputWithContext(context.Context) SchemaConfigSchemaTypeOutput
}

var schemaConfigSchemaTypePtrType = reflect.TypeOf((**SchemaConfigSchemaType)(nil)).Elem()

type SchemaConfigSchemaTypePtrInput interface {
	pulumi.Input

	ToSchemaConfigSchemaTypePtrOutput() SchemaConfigSchemaTypePtrOutput
	ToSchemaConfigSchemaTypePtrOutputWithContext(context.Context) SchemaConfigSchemaTypePtrOutput
}

type schemaConfigSchemaTypePtr string

func SchemaConfigSchemaTypePtr(v string) SchemaConfigSchemaTypePtrInput {
	return (*schemaConfigSchemaTypePtr)(&v)
}

func (*schemaConfigSchemaTypePtr) ElementType() reflect.Type {
	return schemaConfigSchemaTypePtrType
}

func (in *schemaConfigSchemaTypePtr) ToSchemaConfigSchemaTypePtrOutput() SchemaConfigSchemaTypePtrOutput {
	return pulumi.ToOutput(in).(SchemaConfigSchemaTypePtrOutput)
}

func (in *schemaConfigSchemaTypePtr) ToSchemaConfigSchemaTypePtrOutputWithContext(ctx context.Context) SchemaConfigSchemaTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchemaConfigSchemaTypePtrOutput)
}

// Determines how messages that fail to parse are handled.
type SchemaPackageSchematizedParsingType string

const (
	// Unspecified schematized parsing type, equivalent to `SOFT_FAIL`.
	SchemaPackageSchematizedParsingTypeSchematizedParsingTypeUnspecified = SchemaPackageSchematizedParsingType("SCHEMATIZED_PARSING_TYPE_UNSPECIFIED")
	// Messages that fail to parse are still stored and ACKed but a parser error is stored in place of the schematized data.
	SchemaPackageSchematizedParsingTypeSoftFail = SchemaPackageSchematizedParsingType("SOFT_FAIL")
	// Messages that fail to parse are rejected from ingestion/insertion and return an error code.
	SchemaPackageSchematizedParsingTypeHardFail = SchemaPackageSchematizedParsingType("HARD_FAIL")
)

func (SchemaPackageSchematizedParsingType) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaPackageSchematizedParsingType)(nil)).Elem()
}

func (e SchemaPackageSchematizedParsingType) ToSchemaPackageSchematizedParsingTypeOutput() SchemaPackageSchematizedParsingTypeOutput {
	return pulumi.ToOutput(e).(SchemaPackageSchematizedParsingTypeOutput)
}

func (e SchemaPackageSchematizedParsingType) ToSchemaPackageSchematizedParsingTypeOutputWithContext(ctx context.Context) SchemaPackageSchematizedParsingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchemaPackageSchematizedParsingTypeOutput)
}

func (e SchemaPackageSchematizedParsingType) ToSchemaPackageSchematizedParsingTypePtrOutput() SchemaPackageSchematizedParsingTypePtrOutput {
	return e.ToSchemaPackageSchematizedParsingTypePtrOutputWithContext(context.Background())
}

func (e SchemaPackageSchematizedParsingType) ToSchemaPackageSchematizedParsingTypePtrOutputWithContext(ctx context.Context) SchemaPackageSchematizedParsingTypePtrOutput {
	return SchemaPackageSchematizedParsingType(e).ToSchemaPackageSchematizedParsingTypeOutputWithContext(ctx).ToSchemaPackageSchematizedParsingTypePtrOutputWithContext(ctx)
}

func (e SchemaPackageSchematizedParsingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaPackageSchematizedParsingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaPackageSchematizedParsingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SchemaPackageSchematizedParsingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchemaPackageSchematizedParsingTypeOutput struct{ *pulumi.OutputState }

func (SchemaPackageSchematizedParsingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaPackageSchematizedParsingType)(nil)).Elem()
}

func (o SchemaPackageSchematizedParsingTypeOutput) ToSchemaPackageSchematizedParsingTypeOutput() SchemaPackageSchematizedParsingTypeOutput {
	return o
}

func (o SchemaPackageSchematizedParsingTypeOutput) ToSchemaPackageSchematizedParsingTypeOutputWithContext(ctx context.Context) SchemaPackageSchematizedParsingTypeOutput {
	return o
}

func (o SchemaPackageSchematizedParsingTypeOutput) ToSchemaPackageSchematizedParsingTypePtrOutput() SchemaPackageSchematizedParsingTypePtrOutput {
	return o.ToSchemaPackageSchematizedParsingTypePtrOutputWithContext(context.Background())
}

func (o SchemaPackageSchematizedParsingTypeOutput) ToSchemaPackageSchematizedParsingTypePtrOutputWithContext(ctx context.Context) SchemaPackageSchematizedParsingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaPackageSchematizedParsingType) *SchemaPackageSchematizedParsingType {
		return &v
	}).(SchemaPackageSchematizedParsingTypePtrOutput)
}

func (o SchemaPackageSchematizedParsingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchemaPackageSchematizedParsingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaPackageSchematizedParsingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchemaPackageSchematizedParsingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaPackageSchematizedParsingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaPackageSchematizedParsingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchemaPackageSchematizedParsingTypePtrOutput struct{ *pulumi.OutputState }

func (SchemaPackageSchematizedParsingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaPackageSchematizedParsingType)(nil)).Elem()
}

func (o SchemaPackageSchematizedParsingTypePtrOutput) ToSchemaPackageSchematizedParsingTypePtrOutput() SchemaPackageSchematizedParsingTypePtrOutput {
	return o
}

func (o SchemaPackageSchematizedParsingTypePtrOutput) ToSchemaPackageSchematizedParsingTypePtrOutputWithContext(ctx context.Context) SchemaPackageSchematizedParsingTypePtrOutput {
	return o
}

func (o SchemaPackageSchematizedParsingTypePtrOutput) Elem() SchemaPackageSchematizedParsingTypeOutput {
	return o.ApplyT(func(v *SchemaPackageSchematizedParsingType) SchemaPackageSchematizedParsingType {
		if v != nil {
			return *v
		}
		var ret SchemaPackageSchematizedParsingType
		return ret
	}).(SchemaPackageSchematizedParsingTypeOutput)
}

func (o SchemaPackageSchematizedParsingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaPackageSchematizedParsingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SchemaPackageSchematizedParsingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchemaPackageSchematizedParsingTypeInput is an input type that accepts values of the SchemaPackageSchematizedParsingType enum
// A concrete instance of `SchemaPackageSchematizedParsingTypeInput` can be one of the following:
//
//	SchemaPackageSchematizedParsingTypeSchematizedParsingTypeUnspecified
//	SchemaPackageSchematizedParsingTypeSoftFail
//	SchemaPackageSchematizedParsingTypeHardFail
type SchemaPackageSchematizedParsingTypeInput interface {
	pulumi.Input

	ToSchemaPackageSchematizedParsingTypeOutput() SchemaPackageSchematizedParsingTypeOutput
	ToSchemaPackageSchematizedParsingTypeOutputWithContext(context.Context) SchemaPackageSchematizedParsingTypeOutput
}

var schemaPackageSchematizedParsingTypePtrType = reflect.TypeOf((**SchemaPackageSchematizedParsingType)(nil)).Elem()

type SchemaPackageSchematizedParsingTypePtrInput interface {
	pulumi.Input

	ToSchemaPackageSchematizedParsingTypePtrOutput() SchemaPackageSchematizedParsingTypePtrOutput
	ToSchemaPackageSchematizedParsingTypePtrOutputWithContext(context.Context) SchemaPackageSchematizedParsingTypePtrOutput
}

type schemaPackageSchematizedParsingTypePtr string

func SchemaPackageSchematizedParsingTypePtr(v string) SchemaPackageSchematizedParsingTypePtrInput {
	return (*schemaPackageSchematizedParsingTypePtr)(&v)
}

func (*schemaPackageSchematizedParsingTypePtr) ElementType() reflect.Type {
	return schemaPackageSchematizedParsingTypePtrType
}

func (in *schemaPackageSchematizedParsingTypePtr) ToSchemaPackageSchematizedParsingTypePtrOutput() SchemaPackageSchematizedParsingTypePtrOutput {
	return pulumi.ToOutput(in).(SchemaPackageSchematizedParsingTypePtrOutput)
}

func (in *schemaPackageSchematizedParsingTypePtr) ToSchemaPackageSchematizedParsingTypePtrOutputWithContext(ctx context.Context) SchemaPackageSchematizedParsingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchemaPackageSchematizedParsingTypePtrOutput)
}

// Determines how unexpected segments (segments not matched to the schema) are handled.
type SchemaPackageUnexpectedSegmentHandling string

const (
	// Unspecified handling mode, equivalent to FAIL.
	SchemaPackageUnexpectedSegmentHandlingUnexpectedSegmentHandlingModeUnspecified = SchemaPackageUnexpectedSegmentHandling("UNEXPECTED_SEGMENT_HANDLING_MODE_UNSPECIFIED")
	// Unexpected segments fail to parse and return an error.
	SchemaPackageUnexpectedSegmentHandlingFail = SchemaPackageUnexpectedSegmentHandling("FAIL")
	// Unexpected segments do not fail, but are omitted from the output.
	SchemaPackageUnexpectedSegmentHandlingSkip = SchemaPackageUnexpectedSegmentHandling("SKIP")
	// Unexpected segments do not fail, but are parsed in place and added to the current group. If a segment has a type definition, it is used, otherwise it is parsed as VARIES.
	SchemaPackageUnexpectedSegmentHandlingParse = SchemaPackageUnexpectedSegmentHandling("PARSE")
)

func (SchemaPackageUnexpectedSegmentHandling) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaPackageUnexpectedSegmentHandling)(nil)).Elem()
}

func (e SchemaPackageUnexpectedSegmentHandling) ToSchemaPackageUnexpectedSegmentHandlingOutput() SchemaPackageUnexpectedSegmentHandlingOutput {
	return pulumi.ToOutput(e).(SchemaPackageUnexpectedSegmentHandlingOutput)
}

func (e SchemaPackageUnexpectedSegmentHandling) ToSchemaPackageUnexpectedSegmentHandlingOutputWithContext(ctx context.Context) SchemaPackageUnexpectedSegmentHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchemaPackageUnexpectedSegmentHandlingOutput)
}

func (e SchemaPackageUnexpectedSegmentHandling) ToSchemaPackageUnexpectedSegmentHandlingPtrOutput() SchemaPackageUnexpectedSegmentHandlingPtrOutput {
	return e.ToSchemaPackageUnexpectedSegmentHandlingPtrOutputWithContext(context.Background())
}

func (e SchemaPackageUnexpectedSegmentHandling) ToSchemaPackageUnexpectedSegmentHandlingPtrOutputWithContext(ctx context.Context) SchemaPackageUnexpectedSegmentHandlingPtrOutput {
	return SchemaPackageUnexpectedSegmentHandling(e).ToSchemaPackageUnexpectedSegmentHandlingOutputWithContext(ctx).ToSchemaPackageUnexpectedSegmentHandlingPtrOutputWithContext(ctx)
}

func (e SchemaPackageUnexpectedSegmentHandling) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaPackageUnexpectedSegmentHandling) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchemaPackageUnexpectedSegmentHandling) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SchemaPackageUnexpectedSegmentHandling) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchemaPackageUnexpectedSegmentHandlingOutput struct{ *pulumi.OutputState }

func (SchemaPackageUnexpectedSegmentHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaPackageUnexpectedSegmentHandling)(nil)).Elem()
}

func (o SchemaPackageUnexpectedSegmentHandlingOutput) ToSchemaPackageUnexpectedSegmentHandlingOutput() SchemaPackageUnexpectedSegmentHandlingOutput {
	return o
}

func (o SchemaPackageUnexpectedSegmentHandlingOutput) ToSchemaPackageUnexpectedSegmentHandlingOutputWithContext(ctx context.Context) SchemaPackageUnexpectedSegmentHandlingOutput {
	return o
}

func (o SchemaPackageUnexpectedSegmentHandlingOutput) ToSchemaPackageUnexpectedSegmentHandlingPtrOutput() SchemaPackageUnexpectedSegmentHandlingPtrOutput {
	return o.ToSchemaPackageUnexpectedSegmentHandlingPtrOutputWithContext(context.Background())
}

func (o SchemaPackageUnexpectedSegmentHandlingOutput) ToSchemaPackageUnexpectedSegmentHandlingPtrOutputWithContext(ctx context.Context) SchemaPackageUnexpectedSegmentHandlingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaPackageUnexpectedSegmentHandling) *SchemaPackageUnexpectedSegmentHandling {
		return &v
	}).(SchemaPackageUnexpectedSegmentHandlingPtrOutput)
}

func (o SchemaPackageUnexpectedSegmentHandlingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchemaPackageUnexpectedSegmentHandlingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaPackageUnexpectedSegmentHandling) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchemaPackageUnexpectedSegmentHandlingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaPackageUnexpectedSegmentHandlingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchemaPackageUnexpectedSegmentHandling) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchemaPackageUnexpectedSegmentHandlingPtrOutput struct{ *pulumi.OutputState }

func (SchemaPackageUnexpectedSegmentHandlingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaPackageUnexpectedSegmentHandling)(nil)).Elem()
}

func (o SchemaPackageUnexpectedSegmentHandlingPtrOutput) ToSchemaPackageUnexpectedSegmentHandlingPtrOutput() SchemaPackageUnexpectedSegmentHandlingPtrOutput {
	return o
}

func (o SchemaPackageUnexpectedSegmentHandlingPtrOutput) ToSchemaPackageUnexpectedSegmentHandlingPtrOutputWithContext(ctx context.Context) SchemaPackageUnexpectedSegmentHandlingPtrOutput {
	return o
}

func (o SchemaPackageUnexpectedSegmentHandlingPtrOutput) Elem() SchemaPackageUnexpectedSegmentHandlingOutput {
	return o.ApplyT(func(v *SchemaPackageUnexpectedSegmentHandling) SchemaPackageUnexpectedSegmentHandling {
		if v != nil {
			return *v
		}
		var ret SchemaPackageUnexpectedSegmentHandling
		return ret
	}).(SchemaPackageUnexpectedSegmentHandlingOutput)
}

func (o SchemaPackageUnexpectedSegmentHandlingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchemaPackageUnexpectedSegmentHandlingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SchemaPackageUnexpectedSegmentHandling) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchemaPackageUnexpectedSegmentHandlingInput is an input type that accepts values of the SchemaPackageUnexpectedSegmentHandling enum
// A concrete instance of `SchemaPackageUnexpectedSegmentHandlingInput` can be one of the following:
//
//	SchemaPackageUnexpectedSegmentHandlingUnexpectedSegmentHandlingModeUnspecified
//	SchemaPackageUnexpectedSegmentHandlingFail
//	SchemaPackageUnexpectedSegmentHandlingSkip
//	SchemaPackageUnexpectedSegmentHandlingParse
type SchemaPackageUnexpectedSegmentHandlingInput interface {
	pulumi.Input

	ToSchemaPackageUnexpectedSegmentHandlingOutput() SchemaPackageUnexpectedSegmentHandlingOutput
	ToSchemaPackageUnexpectedSegmentHandlingOutputWithContext(context.Context) SchemaPackageUnexpectedSegmentHandlingOutput
}

var schemaPackageUnexpectedSegmentHandlingPtrType = reflect.TypeOf((**SchemaPackageUnexpectedSegmentHandling)(nil)).Elem()

type SchemaPackageUnexpectedSegmentHandlingPtrInput interface {
	pulumi.Input

	ToSchemaPackageUnexpectedSegmentHandlingPtrOutput() SchemaPackageUnexpectedSegmentHandlingPtrOutput
	ToSchemaPackageUnexpectedSegmentHandlingPtrOutputWithContext(context.Context) SchemaPackageUnexpectedSegmentHandlingPtrOutput
}

type schemaPackageUnexpectedSegmentHandlingPtr string

func SchemaPackageUnexpectedSegmentHandlingPtr(v string) SchemaPackageUnexpectedSegmentHandlingPtrInput {
	return (*schemaPackageUnexpectedSegmentHandlingPtr)(&v)
}

func (*schemaPackageUnexpectedSegmentHandlingPtr) ElementType() reflect.Type {
	return schemaPackageUnexpectedSegmentHandlingPtrType
}

func (in *schemaPackageUnexpectedSegmentHandlingPtr) ToSchemaPackageUnexpectedSegmentHandlingPtrOutput() SchemaPackageUnexpectedSegmentHandlingPtrOutput {
	return pulumi.ToOutput(in).(SchemaPackageUnexpectedSegmentHandlingPtrOutput)
}

func (in *schemaPackageUnexpectedSegmentHandlingPtr) ToSchemaPackageUnexpectedSegmentHandlingPtrOutputWithContext(ctx context.Context) SchemaPackageUnexpectedSegmentHandlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchemaPackageUnexpectedSegmentHandlingPtrOutput)
}

// Type of partitioning.
type TimePartitioningType string

const (
	// Default unknown time.
	TimePartitioningTypePartitionTypeUnspecified = TimePartitioningType("PARTITION_TYPE_UNSPECIFIED")
	// Data partitioned by hour.
	TimePartitioningTypeHour = TimePartitioningType("HOUR")
	// Data partitioned by day.
	TimePartitioningTypeDay = TimePartitioningType("DAY")
	// Data partitioned by month.
	TimePartitioningTypeMonth = TimePartitioningType("MONTH")
	// Data partitioned by year.
	TimePartitioningTypeYear = TimePartitioningType("YEAR")
)

func (TimePartitioningType) ElementType() reflect.Type {
	return reflect.TypeOf((*TimePartitioningType)(nil)).Elem()
}

func (e TimePartitioningType) ToTimePartitioningTypeOutput() TimePartitioningTypeOutput {
	return pulumi.ToOutput(e).(TimePartitioningTypeOutput)
}

func (e TimePartitioningType) ToTimePartitioningTypeOutputWithContext(ctx context.Context) TimePartitioningTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TimePartitioningTypeOutput)
}

func (e TimePartitioningType) ToTimePartitioningTypePtrOutput() TimePartitioningTypePtrOutput {
	return e.ToTimePartitioningTypePtrOutputWithContext(context.Background())
}

func (e TimePartitioningType) ToTimePartitioningTypePtrOutputWithContext(ctx context.Context) TimePartitioningTypePtrOutput {
	return TimePartitioningType(e).ToTimePartitioningTypeOutputWithContext(ctx).ToTimePartitioningTypePtrOutputWithContext(ctx)
}

func (e TimePartitioningType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TimePartitioningType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TimePartitioningType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TimePartitioningType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TimePartitioningTypeOutput struct{ *pulumi.OutputState }

func (TimePartitioningTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimePartitioningType)(nil)).Elem()
}

func (o TimePartitioningTypeOutput) ToTimePartitioningTypeOutput() TimePartitioningTypeOutput {
	return o
}

func (o TimePartitioningTypeOutput) ToTimePartitioningTypeOutputWithContext(ctx context.Context) TimePartitioningTypeOutput {
	return o
}

func (o TimePartitioningTypeOutput) ToTimePartitioningTypePtrOutput() TimePartitioningTypePtrOutput {
	return o.ToTimePartitioningTypePtrOutputWithContext(context.Background())
}

func (o TimePartitioningTypeOutput) ToTimePartitioningTypePtrOutputWithContext(ctx context.Context) TimePartitioningTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TimePartitioningType) *TimePartitioningType {
		return &v
	}).(TimePartitioningTypePtrOutput)
}

func (o TimePartitioningTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TimePartitioningTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TimePartitioningType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TimePartitioningTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TimePartitioningTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TimePartitioningType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TimePartitioningTypePtrOutput struct{ *pulumi.OutputState }

func (TimePartitioningTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimePartitioningType)(nil)).Elem()
}

func (o TimePartitioningTypePtrOutput) ToTimePartitioningTypePtrOutput() TimePartitioningTypePtrOutput {
	return o
}

func (o TimePartitioningTypePtrOutput) ToTimePartitioningTypePtrOutputWithContext(ctx context.Context) TimePartitioningTypePtrOutput {
	return o
}

func (o TimePartitioningTypePtrOutput) Elem() TimePartitioningTypeOutput {
	return o.ApplyT(func(v *TimePartitioningType) TimePartitioningType {
		if v != nil {
			return *v
		}
		var ret TimePartitioningType
		return ret
	}).(TimePartitioningTypeOutput)
}

func (o TimePartitioningTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TimePartitioningTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TimePartitioningType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TimePartitioningTypeInput is an input type that accepts values of the TimePartitioningType enum
// A concrete instance of `TimePartitioningTypeInput` can be one of the following:
//
//	TimePartitioningTypePartitionTypeUnspecified
//	TimePartitioningTypeHour
//	TimePartitioningTypeDay
//	TimePartitioningTypeMonth
//	TimePartitioningTypeYear
type TimePartitioningTypeInput interface {
	pulumi.Input

	ToTimePartitioningTypeOutput() TimePartitioningTypeOutput
	ToTimePartitioningTypeOutputWithContext(context.Context) TimePartitioningTypeOutput
}

var timePartitioningTypePtrType = reflect.TypeOf((**TimePartitioningType)(nil)).Elem()

type TimePartitioningTypePtrInput interface {
	pulumi.Input

	ToTimePartitioningTypePtrOutput() TimePartitioningTypePtrOutput
	ToTimePartitioningTypePtrOutputWithContext(context.Context) TimePartitioningTypePtrOutput
}

type timePartitioningTypePtr string

func TimePartitioningTypePtr(v string) TimePartitioningTypePtrInput {
	return (*timePartitioningTypePtr)(&v)
}

func (*timePartitioningTypePtr) ElementType() reflect.Type {
	return timePartitioningTypePtrType
}

func (in *timePartitioningTypePtr) ToTimePartitioningTypePtrOutput() TimePartitioningTypePtrOutput {
	return pulumi.ToOutput(in).(TimePartitioningTypePtrOutput)
}

func (in *timePartitioningTypePtr) ToTimePartitioningTypePtrOutputWithContext(ctx context.Context) TimePartitioningTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TimePartitioningTypePtrOutput)
}

// If this is a primitive type then this field is the type of the primitive For example, STRING. Leave unspecified for composite types.
type TypePrimitive string

const (
	// Not a primitive.
	TypePrimitivePrimitiveUnspecified = TypePrimitive("PRIMITIVE_UNSPECIFIED")
	// String primitive.
	TypePrimitiveString = TypePrimitive("STRING")
	// Element that can have unschematized children.
	TypePrimitiveVaries = TypePrimitive("VARIES")
	// Like STRING, but all delimiters below this element are ignored.
	TypePrimitiveUnescapedString = TypePrimitive("UNESCAPED_STRING")
)

func (TypePrimitive) ElementType() reflect.Type {
	return reflect.TypeOf((*TypePrimitive)(nil)).Elem()
}

func (e TypePrimitive) ToTypePrimitiveOutput() TypePrimitiveOutput {
	return pulumi.ToOutput(e).(TypePrimitiveOutput)
}

func (e TypePrimitive) ToTypePrimitiveOutputWithContext(ctx context.Context) TypePrimitiveOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TypePrimitiveOutput)
}

func (e TypePrimitive) ToTypePrimitivePtrOutput() TypePrimitivePtrOutput {
	return e.ToTypePrimitivePtrOutputWithContext(context.Background())
}

func (e TypePrimitive) ToTypePrimitivePtrOutputWithContext(ctx context.Context) TypePrimitivePtrOutput {
	return TypePrimitive(e).ToTypePrimitiveOutputWithContext(ctx).ToTypePrimitivePtrOutputWithContext(ctx)
}

func (e TypePrimitive) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TypePrimitive) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TypePrimitive) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TypePrimitive) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TypePrimitiveOutput struct{ *pulumi.OutputState }

func (TypePrimitiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypePrimitive)(nil)).Elem()
}

func (o TypePrimitiveOutput) ToTypePrimitiveOutput() TypePrimitiveOutput {
	return o
}

func (o TypePrimitiveOutput) ToTypePrimitiveOutputWithContext(ctx context.Context) TypePrimitiveOutput {
	return o
}

func (o TypePrimitiveOutput) ToTypePrimitivePtrOutput() TypePrimitivePtrOutput {
	return o.ToTypePrimitivePtrOutputWithContext(context.Background())
}

func (o TypePrimitiveOutput) ToTypePrimitivePtrOutputWithContext(ctx context.Context) TypePrimitivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TypePrimitive) *TypePrimitive {
		return &v
	}).(TypePrimitivePtrOutput)
}

func (o TypePrimitiveOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TypePrimitiveOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TypePrimitive) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TypePrimitiveOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TypePrimitiveOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TypePrimitive) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TypePrimitivePtrOutput struct{ *pulumi.OutputState }

func (TypePrimitivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TypePrimitive)(nil)).Elem()
}

func (o TypePrimitivePtrOutput) ToTypePrimitivePtrOutput() TypePrimitivePtrOutput {
	return o
}

func (o TypePrimitivePtrOutput) ToTypePrimitivePtrOutputWithContext(ctx context.Context) TypePrimitivePtrOutput {
	return o
}

func (o TypePrimitivePtrOutput) Elem() TypePrimitiveOutput {
	return o.ApplyT(func(v *TypePrimitive) TypePrimitive {
		if v != nil {
			return *v
		}
		var ret TypePrimitive
		return ret
	}).(TypePrimitiveOutput)
}

func (o TypePrimitivePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TypePrimitivePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TypePrimitive) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TypePrimitiveInput is an input type that accepts values of the TypePrimitive enum
// A concrete instance of `TypePrimitiveInput` can be one of the following:
//
//	TypePrimitivePrimitiveUnspecified
//	TypePrimitiveString
//	TypePrimitiveVaries
//	TypePrimitiveUnescapedString
type TypePrimitiveInput interface {
	pulumi.Input

	ToTypePrimitiveOutput() TypePrimitiveOutput
	ToTypePrimitiveOutputWithContext(context.Context) TypePrimitiveOutput
}

var typePrimitivePtrType = reflect.TypeOf((**TypePrimitive)(nil)).Elem()

type TypePrimitivePtrInput interface {
	pulumi.Input

	ToTypePrimitivePtrOutput() TypePrimitivePtrOutput
	ToTypePrimitivePtrOutputWithContext(context.Context) TypePrimitivePtrOutput
}

type typePrimitivePtr string

func TypePrimitivePtr(v string) TypePrimitivePtrInput {
	return (*typePrimitivePtr)(&v)
}

func (*typePrimitivePtr) ElementType() reflect.Type {
	return typePrimitivePtrType
}

func (in *typePrimitivePtr) ToTypePrimitivePtrOutput() TypePrimitivePtrOutput {
	return pulumi.ToOutput(in).(TypePrimitivePtrOutput)
}

func (in *typePrimitivePtr) ToTypePrimitivePtrOutputWithContext(ctx context.Context) TypePrimitivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TypePrimitivePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AttributeDefinitionCategoryInput)(nil)).Elem(), AttributeDefinitionCategory("CATEGORY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttributeDefinitionCategoryPtrInput)(nil)).Elem(), AttributeDefinitionCategory("CATEGORY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConsentStateEnumInput)(nil)).Elem(), ConsentStateEnum("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConsentStateEnumPtrInput)(nil)).Elem(), ConsentStateEnum("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DicomConfigFilterProfileInput)(nil)).Elem(), DicomConfigFilterProfile("TAG_FILTER_PROFILE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DicomConfigFilterProfilePtrInput)(nil)).Elem(), DicomConfigFilterProfile("TAG_FILTER_PROFILE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FhirStoreComplexDataTypeReferenceParsingInput)(nil)).Elem(), FhirStoreComplexDataTypeReferenceParsing("COMPLEX_DATA_TYPE_REFERENCE_PARSING_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FhirStoreComplexDataTypeReferenceParsingPtrInput)(nil)).Elem(), FhirStoreComplexDataTypeReferenceParsing("COMPLEX_DATA_TYPE_REFERENCE_PARSING_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FhirStoreVersionInput)(nil)).Elem(), FhirStoreVersion("VERSION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FhirStoreVersionPtrInput)(nil)).Elem(), FhirStoreVersion("VERSION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FieldMetadataActionInput)(nil)).Elem(), FieldMetadataAction("ACTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FieldMetadataActionPtrInput)(nil)).Elem(), FieldMetadataAction("ACTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionInput)(nil)).Elem(), GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition("WRITE_DISPOSITION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrInput)(nil)).Elem(), GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDisposition("WRITE_DISPOSITION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionInput)(nil)).Elem(), GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition("WRITE_DISPOSITION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrInput)(nil)).Elem(), GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDisposition("WRITE_DISPOSITION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImageConfigTextRedactionModeInput)(nil)).Elem(), ImageConfigTextRedactionMode("TEXT_REDACTION_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImageConfigTextRedactionModePtrInput)(nil)).Elem(), ImageConfigTextRedactionMode("TEXT_REDACTION_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ParserConfigVersionInput)(nil)).Elem(), ParserConfigVersion("PARSER_VERSION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ParserConfigVersionPtrInput)(nil)).Elem(), ParserConfigVersion("PARSER_VERSION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaConfigSchemaTypeInput)(nil)).Elem(), SchemaConfigSchemaType("SCHEMA_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaConfigSchemaTypePtrInput)(nil)).Elem(), SchemaConfigSchemaType("SCHEMA_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaPackageSchematizedParsingTypeInput)(nil)).Elem(), SchemaPackageSchematizedParsingType("SCHEMATIZED_PARSING_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaPackageSchematizedParsingTypePtrInput)(nil)).Elem(), SchemaPackageSchematizedParsingType("SCHEMATIZED_PARSING_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaPackageUnexpectedSegmentHandlingInput)(nil)).Elem(), SchemaPackageUnexpectedSegmentHandling("UNEXPECTED_SEGMENT_HANDLING_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaPackageUnexpectedSegmentHandlingPtrInput)(nil)).Elem(), SchemaPackageUnexpectedSegmentHandling("UNEXPECTED_SEGMENT_HANDLING_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TimePartitioningTypeInput)(nil)).Elem(), TimePartitioningType("PARTITION_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TimePartitioningTypePtrInput)(nil)).Elem(), TimePartitioningType("PARTITION_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TypePrimitiveInput)(nil)).Elem(), TypePrimitive("PRIMITIVE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TypePrimitivePtrInput)(nil)).Elem(), TypePrimitive("PRIMITIVE_UNSPECIFIED"))
	pulumi.RegisterOutputType(AttributeDefinitionCategoryOutput{})
	pulumi.RegisterOutputType(AttributeDefinitionCategoryPtrOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(ConsentStateEnumOutput{})
	pulumi.RegisterOutputType(ConsentStateEnumPtrOutput{})
	pulumi.RegisterOutputType(DicomConfigFilterProfileOutput{})
	pulumi.RegisterOutputType(DicomConfigFilterProfilePtrOutput{})
	pulumi.RegisterOutputType(FhirStoreComplexDataTypeReferenceParsingOutput{})
	pulumi.RegisterOutputType(FhirStoreComplexDataTypeReferenceParsingPtrOutput{})
	pulumi.RegisterOutputType(FhirStoreVersionOutput{})
	pulumi.RegisterOutputType(FhirStoreVersionPtrOutput{})
	pulumi.RegisterOutputType(FieldMetadataActionOutput{})
	pulumi.RegisterOutputType(FieldMetadataActionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionOutput{})
	pulumi.RegisterOutputType(GoogleCloudHealthcareV1DicomBigQueryDestinationWriteDispositionPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionOutput{})
	pulumi.RegisterOutputType(GoogleCloudHealthcareV1FhirBigQueryDestinationWriteDispositionPtrOutput{})
	pulumi.RegisterOutputType(ImageConfigTextRedactionModeOutput{})
	pulumi.RegisterOutputType(ImageConfigTextRedactionModePtrOutput{})
	pulumi.RegisterOutputType(ParserConfigVersionOutput{})
	pulumi.RegisterOutputType(ParserConfigVersionPtrOutput{})
	pulumi.RegisterOutputType(SchemaConfigSchemaTypeOutput{})
	pulumi.RegisterOutputType(SchemaConfigSchemaTypePtrOutput{})
	pulumi.RegisterOutputType(SchemaPackageSchematizedParsingTypeOutput{})
	pulumi.RegisterOutputType(SchemaPackageSchematizedParsingTypePtrOutput{})
	pulumi.RegisterOutputType(SchemaPackageUnexpectedSegmentHandlingOutput{})
	pulumi.RegisterOutputType(SchemaPackageUnexpectedSegmentHandlingPtrOutput{})
	pulumi.RegisterOutputType(TimePartitioningTypeOutput{})
	pulumi.RegisterOutputType(TimePartitioningTypePtrOutput{})
	pulumi.RegisterOutputType(TypePrimitiveOutput{})
	pulumi.RegisterOutputType(TypePrimitivePtrOutput{})
}
