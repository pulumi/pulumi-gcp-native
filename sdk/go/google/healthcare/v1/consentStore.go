// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new consent store in the parent dataset. Attempting to create a consent store with the same ID as an existing store fails with an ALREADY_EXISTS error.
type ConsentStore struct {
	pulumi.CustomResourceState

	// Required. The ID of the consent store to create. The string must match the following regex: `[\p{L}\p{N}_\-\.]{1,256}`. Cannot be changed after creation.
	ConsentStoreId pulumi.StringOutput `pulumi:"consentStoreId"`
	DatasetId      pulumi.StringOutput `pulumi:"datasetId"`
	// Optional. Default time to live for Consents created in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
	DefaultConsentTtl pulumi.StringOutput `pulumi:"defaultConsentTtl"`
	// Optional. If `true`, UpdateConsent creates the Consent if it does not already exist. If unspecified, defaults to `false`.
	EnableConsentCreateOnUpdate pulumi.BoolOutput `pulumi:"enableConsentCreateOnUpdate"`
	// Optional. User-supplied key-value pairs used to organize consent stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}. Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}. No more than 64 labels can be associated with a given store. For more information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Resource name of the consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after creation.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewConsentStore registers a new resource with the given unique name, arguments, and options.
func NewConsentStore(ctx *pulumi.Context,
	name string, args *ConsentStoreArgs, opts ...pulumi.ResourceOption) (*ConsentStore, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConsentStoreId == nil {
		return nil, errors.New("invalid value for required argument 'ConsentStoreId'")
	}
	if args.DatasetId == nil {
		return nil, errors.New("invalid value for required argument 'DatasetId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"consentStoreId",
		"datasetId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConsentStore
	err := ctx.RegisterResource("google-native:healthcare/v1:ConsentStore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConsentStore gets an existing ConsentStore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConsentStore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConsentStoreState, opts ...pulumi.ResourceOption) (*ConsentStore, error) {
	var resource ConsentStore
	err := ctx.ReadResource("google-native:healthcare/v1:ConsentStore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConsentStore resources.
type consentStoreState struct {
}

type ConsentStoreState struct {
}

func (ConsentStoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*consentStoreState)(nil)).Elem()
}

type consentStoreArgs struct {
	// Required. The ID of the consent store to create. The string must match the following regex: `[\p{L}\p{N}_\-\.]{1,256}`. Cannot be changed after creation.
	ConsentStoreId string `pulumi:"consentStoreId"`
	DatasetId      string `pulumi:"datasetId"`
	// Optional. Default time to live for Consents created in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
	DefaultConsentTtl *string `pulumi:"defaultConsentTtl"`
	// Optional. If `true`, UpdateConsent creates the Consent if it does not already exist. If unspecified, defaults to `false`.
	EnableConsentCreateOnUpdate *bool `pulumi:"enableConsentCreateOnUpdate"`
	// Optional. User-supplied key-value pairs used to organize consent stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}. Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}. No more than 64 labels can be associated with a given store. For more information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// Resource name of the consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after creation.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a ConsentStore resource.
type ConsentStoreArgs struct {
	// Required. The ID of the consent store to create. The string must match the following regex: `[\p{L}\p{N}_\-\.]{1,256}`. Cannot be changed after creation.
	ConsentStoreId pulumi.StringInput
	DatasetId      pulumi.StringInput
	// Optional. Default time to live for Consents created in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
	DefaultConsentTtl pulumi.StringPtrInput
	// Optional. If `true`, UpdateConsent creates the Consent if it does not already exist. If unspecified, defaults to `false`.
	EnableConsentCreateOnUpdate pulumi.BoolPtrInput
	// Optional. User-supplied key-value pairs used to organize consent stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}. Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}. No more than 64 labels can be associated with a given store. For more information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// Resource name of the consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after creation.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
}

func (ConsentStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*consentStoreArgs)(nil)).Elem()
}

type ConsentStoreInput interface {
	pulumi.Input

	ToConsentStoreOutput() ConsentStoreOutput
	ToConsentStoreOutputWithContext(ctx context.Context) ConsentStoreOutput
}

func (*ConsentStore) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsentStore)(nil)).Elem()
}

func (i *ConsentStore) ToConsentStoreOutput() ConsentStoreOutput {
	return i.ToConsentStoreOutputWithContext(context.Background())
}

func (i *ConsentStore) ToConsentStoreOutputWithContext(ctx context.Context) ConsentStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsentStoreOutput)
}

type ConsentStoreOutput struct{ *pulumi.OutputState }

func (ConsentStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsentStore)(nil)).Elem()
}

func (o ConsentStoreOutput) ToConsentStoreOutput() ConsentStoreOutput {
	return o
}

func (o ConsentStoreOutput) ToConsentStoreOutputWithContext(ctx context.Context) ConsentStoreOutput {
	return o
}

// Required. The ID of the consent store to create. The string must match the following regex: `[\p{L}\p{N}_\-\.]{1,256}`. Cannot be changed after creation.
func (o ConsentStoreOutput) ConsentStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConsentStore) pulumi.StringOutput { return v.ConsentStoreId }).(pulumi.StringOutput)
}

func (o ConsentStoreOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConsentStore) pulumi.StringOutput { return v.DatasetId }).(pulumi.StringOutput)
}

// Optional. Default time to live for Consents created in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
func (o ConsentStoreOutput) DefaultConsentTtl() pulumi.StringOutput {
	return o.ApplyT(func(v *ConsentStore) pulumi.StringOutput { return v.DefaultConsentTtl }).(pulumi.StringOutput)
}

// Optional. If `true`, UpdateConsent creates the Consent if it does not already exist. If unspecified, defaults to `false`.
func (o ConsentStoreOutput) EnableConsentCreateOnUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v *ConsentStore) pulumi.BoolOutput { return v.EnableConsentCreateOnUpdate }).(pulumi.BoolOutput)
}

// Optional. User-supplied key-value pairs used to organize consent stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}. Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}. No more than 64 labels can be associated with a given store. For more information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources
func (o ConsentStoreOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConsentStore) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o ConsentStoreOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ConsentStore) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Resource name of the consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after creation.
func (o ConsentStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConsentStore) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ConsentStoreOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ConsentStore) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConsentStoreInput)(nil)).Elem(), &ConsentStore{})
	pulumi.RegisterOutputType(ConsentStoreOutput{})
}
