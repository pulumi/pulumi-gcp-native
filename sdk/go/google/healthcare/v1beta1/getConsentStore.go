// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the specified consent store.
func LookupConsentStore(ctx *pulumi.Context, args *LookupConsentStoreArgs, opts ...pulumi.InvokeOption) (*LookupConsentStoreResult, error) {
	var rv LookupConsentStoreResult
	err := ctx.Invoke("google-native:healthcare/v1beta1:getConsentStore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConsentStoreArgs struct {
	ConsentStoreId string  `pulumi:"consentStoreId"`
	DatasetId      string  `pulumi:"datasetId"`
	Location       string  `pulumi:"location"`
	Project        *string `pulumi:"project"`
}

type LookupConsentStoreResult struct {
	// Optional. Default time to live for Consents created in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
	DefaultConsentTtl string `pulumi:"defaultConsentTtl"`
	// Optional. If `true`, UpdateConsent creates the Consent if it does not already exist. If unspecified, defaults to `false`.
	EnableConsentCreateOnUpdate bool `pulumi:"enableConsentCreateOnUpdate"`
	// Optional. User-supplied key-value pairs used to organize consent stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}. Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}. No more than 64 labels can be associated with a given store. For more information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources
	Labels map[string]string `pulumi:"labels"`
	// Resource name of the consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after creation.
	Name string `pulumi:"name"`
}

func LookupConsentStoreOutput(ctx *pulumi.Context, args LookupConsentStoreOutputArgs, opts ...pulumi.InvokeOption) LookupConsentStoreResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConsentStoreResult, error) {
			args := v.(LookupConsentStoreArgs)
			r, err := LookupConsentStore(ctx, &args, opts...)
			return *r, err
		}).(LookupConsentStoreResultOutput)
}

type LookupConsentStoreOutputArgs struct {
	ConsentStoreId pulumi.StringInput    `pulumi:"consentStoreId"`
	DatasetId      pulumi.StringInput    `pulumi:"datasetId"`
	Location       pulumi.StringInput    `pulumi:"location"`
	Project        pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupConsentStoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConsentStoreArgs)(nil)).Elem()
}

type LookupConsentStoreResultOutput struct{ *pulumi.OutputState }

func (LookupConsentStoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConsentStoreResult)(nil)).Elem()
}

func (o LookupConsentStoreResultOutput) ToLookupConsentStoreResultOutput() LookupConsentStoreResultOutput {
	return o
}

func (o LookupConsentStoreResultOutput) ToLookupConsentStoreResultOutputWithContext(ctx context.Context) LookupConsentStoreResultOutput {
	return o
}

// Optional. Default time to live for Consents created in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
func (o LookupConsentStoreResultOutput) DefaultConsentTtl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConsentStoreResult) string { return v.DefaultConsentTtl }).(pulumi.StringOutput)
}

// Optional. If `true`, UpdateConsent creates the Consent if it does not already exist. If unspecified, defaults to `false`.
func (o LookupConsentStoreResultOutput) EnableConsentCreateOnUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupConsentStoreResult) bool { return v.EnableConsentCreateOnUpdate }).(pulumi.BoolOutput)
}

// Optional. User-supplied key-value pairs used to organize consent stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}. Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}. No more than 64 labels can be associated with a given store. For more information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources
func (o LookupConsentStoreResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConsentStoreResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource name of the consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after creation.
func (o LookupConsentStoreResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConsentStoreResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConsentStoreResultOutput{})
}
