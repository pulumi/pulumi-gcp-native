// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new Consent artifact in the parent consent store.
type DatasetConsentStoreConsentArtifact struct {
	pulumi.CustomResourceState

	// Optional. Screenshots, PDFs, or other binary information documenting the user's consent.
	ConsentContentScreenshots ImageResponseArrayOutput `pulumi:"consentContentScreenshots"`
	// Optional. An string indicating the version of the consent information shown to the user.
	ConsentContentVersion pulumi.StringOutput `pulumi:"consentContentVersion"`
	// Optional. A signature from a guardian.
	GuardianSignature SignatureResponseOutput `pulumi:"guardianSignature"`
	// Optional. Metadata associated with the Consent artifact. For example, the consent locale or user agent version.
	Metadata pulumi.StringMapOutput `pulumi:"metadata"`
	// Resource name of the Consent artifact, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`. Cannot be changed after creation.
	Name pulumi.StringOutput `pulumi:"name"`
	// Required. User's UUID provided by the client.
	UserId pulumi.StringOutput `pulumi:"userId"`
	// Optional. User's signature.
	UserSignature SignatureResponseOutput `pulumi:"userSignature"`
	// Optional. A signature from a witness.
	WitnessSignature SignatureResponseOutput `pulumi:"witnessSignature"`
}

// NewDatasetConsentStoreConsentArtifact registers a new resource with the given unique name, arguments, and options.
func NewDatasetConsentStoreConsentArtifact(ctx *pulumi.Context,
	name string, args *DatasetConsentStoreConsentArtifactArgs, opts ...pulumi.ResourceOption) (*DatasetConsentStoreConsentArtifact, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConsentStoreId == nil {
		return nil, errors.New("invalid value for required argument 'ConsentStoreId'")
	}
	if args.DatasetId == nil {
		return nil, errors.New("invalid value for required argument 'DatasetId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	var resource DatasetConsentStoreConsentArtifact
	err := ctx.RegisterResource("google-native:healthcare/v1beta1:DatasetConsentStoreConsentArtifact", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatasetConsentStoreConsentArtifact gets an existing DatasetConsentStoreConsentArtifact resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatasetConsentStoreConsentArtifact(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatasetConsentStoreConsentArtifactState, opts ...pulumi.ResourceOption) (*DatasetConsentStoreConsentArtifact, error) {
	var resource DatasetConsentStoreConsentArtifact
	err := ctx.ReadResource("google-native:healthcare/v1beta1:DatasetConsentStoreConsentArtifact", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatasetConsentStoreConsentArtifact resources.
type datasetConsentStoreConsentArtifactState struct {
	// Optional. Screenshots, PDFs, or other binary information documenting the user's consent.
	ConsentContentScreenshots []ImageResponse `pulumi:"consentContentScreenshots"`
	// Optional. An string indicating the version of the consent information shown to the user.
	ConsentContentVersion *string `pulumi:"consentContentVersion"`
	// Optional. A signature from a guardian.
	GuardianSignature *SignatureResponse `pulumi:"guardianSignature"`
	// Optional. Metadata associated with the Consent artifact. For example, the consent locale or user agent version.
	Metadata map[string]string `pulumi:"metadata"`
	// Resource name of the Consent artifact, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`. Cannot be changed after creation.
	Name *string `pulumi:"name"`
	// Required. User's UUID provided by the client.
	UserId *string `pulumi:"userId"`
	// Optional. User's signature.
	UserSignature *SignatureResponse `pulumi:"userSignature"`
	// Optional. A signature from a witness.
	WitnessSignature *SignatureResponse `pulumi:"witnessSignature"`
}

type DatasetConsentStoreConsentArtifactState struct {
	// Optional. Screenshots, PDFs, or other binary information documenting the user's consent.
	ConsentContentScreenshots ImageResponseArrayInput
	// Optional. An string indicating the version of the consent information shown to the user.
	ConsentContentVersion pulumi.StringPtrInput
	// Optional. A signature from a guardian.
	GuardianSignature SignatureResponsePtrInput
	// Optional. Metadata associated with the Consent artifact. For example, the consent locale or user agent version.
	Metadata pulumi.StringMapInput
	// Resource name of the Consent artifact, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`. Cannot be changed after creation.
	Name pulumi.StringPtrInput
	// Required. User's UUID provided by the client.
	UserId pulumi.StringPtrInput
	// Optional. User's signature.
	UserSignature SignatureResponsePtrInput
	// Optional. A signature from a witness.
	WitnessSignature SignatureResponsePtrInput
}

func (DatasetConsentStoreConsentArtifactState) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetConsentStoreConsentArtifactState)(nil)).Elem()
}

type datasetConsentStoreConsentArtifactArgs struct {
	// Optional. Screenshots, PDFs, or other binary information documenting the user's consent.
	ConsentContentScreenshots []Image `pulumi:"consentContentScreenshots"`
	// Optional. An string indicating the version of the consent information shown to the user.
	ConsentContentVersion *string `pulumi:"consentContentVersion"`
	ConsentStoreId        string  `pulumi:"consentStoreId"`
	DatasetId             string  `pulumi:"datasetId"`
	// Optional. A signature from a guardian.
	GuardianSignature *Signature `pulumi:"guardianSignature"`
	Location          string     `pulumi:"location"`
	// Optional. Metadata associated with the Consent artifact. For example, the consent locale or user agent version.
	Metadata map[string]string `pulumi:"metadata"`
	// Resource name of the Consent artifact, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`. Cannot be changed after creation.
	Name    *string `pulumi:"name"`
	Project string  `pulumi:"project"`
	// Required. User's UUID provided by the client.
	UserId *string `pulumi:"userId"`
	// Optional. User's signature.
	UserSignature *Signature `pulumi:"userSignature"`
	// Optional. A signature from a witness.
	WitnessSignature *Signature `pulumi:"witnessSignature"`
}

// The set of arguments for constructing a DatasetConsentStoreConsentArtifact resource.
type DatasetConsentStoreConsentArtifactArgs struct {
	// Optional. Screenshots, PDFs, or other binary information documenting the user's consent.
	ConsentContentScreenshots ImageArrayInput
	// Optional. An string indicating the version of the consent information shown to the user.
	ConsentContentVersion pulumi.StringPtrInput
	ConsentStoreId        pulumi.StringInput
	DatasetId             pulumi.StringInput
	// Optional. A signature from a guardian.
	GuardianSignature SignaturePtrInput
	Location          pulumi.StringInput
	// Optional. Metadata associated with the Consent artifact. For example, the consent locale or user agent version.
	Metadata pulumi.StringMapInput
	// Resource name of the Consent artifact, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`. Cannot be changed after creation.
	Name    pulumi.StringPtrInput
	Project pulumi.StringInput
	// Required. User's UUID provided by the client.
	UserId pulumi.StringPtrInput
	// Optional. User's signature.
	UserSignature SignaturePtrInput
	// Optional. A signature from a witness.
	WitnessSignature SignaturePtrInput
}

func (DatasetConsentStoreConsentArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetConsentStoreConsentArtifactArgs)(nil)).Elem()
}

type DatasetConsentStoreConsentArtifactInput interface {
	pulumi.Input

	ToDatasetConsentStoreConsentArtifactOutput() DatasetConsentStoreConsentArtifactOutput
	ToDatasetConsentStoreConsentArtifactOutputWithContext(ctx context.Context) DatasetConsentStoreConsentArtifactOutput
}

func (*DatasetConsentStoreConsentArtifact) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetConsentStoreConsentArtifact)(nil))
}

func (i *DatasetConsentStoreConsentArtifact) ToDatasetConsentStoreConsentArtifactOutput() DatasetConsentStoreConsentArtifactOutput {
	return i.ToDatasetConsentStoreConsentArtifactOutputWithContext(context.Background())
}

func (i *DatasetConsentStoreConsentArtifact) ToDatasetConsentStoreConsentArtifactOutputWithContext(ctx context.Context) DatasetConsentStoreConsentArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetConsentStoreConsentArtifactOutput)
}

type DatasetConsentStoreConsentArtifactOutput struct {
	*pulumi.OutputState
}

func (DatasetConsentStoreConsentArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetConsentStoreConsentArtifact)(nil))
}

func (o DatasetConsentStoreConsentArtifactOutput) ToDatasetConsentStoreConsentArtifactOutput() DatasetConsentStoreConsentArtifactOutput {
	return o
}

func (o DatasetConsentStoreConsentArtifactOutput) ToDatasetConsentStoreConsentArtifactOutputWithContext(ctx context.Context) DatasetConsentStoreConsentArtifactOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DatasetConsentStoreConsentArtifactOutput{})
}
