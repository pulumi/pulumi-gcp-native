// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Parses and stores an HL7v2 message. This method triggers an asynchronous notification to any Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig, if the filtering matches the message. If an MLLP adapter is configured to listen to a Pub/Sub topic, the adapter transmits the message when a notification is received.
type DatasetHl7V2StoreMessage struct {
	pulumi.CustomResourceState
}

// NewDatasetHl7V2StoreMessage registers a new resource with the given unique name, arguments, and options.
func NewDatasetHl7V2StoreMessage(ctx *pulumi.Context,
	name string, args *DatasetHl7V2StoreMessageArgs, opts ...pulumi.ResourceOption) (*DatasetHl7V2StoreMessage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatasetsId == nil {
		return nil, errors.New("invalid value for required argument 'DatasetsId'")
	}
	if args.Hl7V2StoresId == nil {
		return nil, errors.New("invalid value for required argument 'Hl7V2StoresId'")
	}
	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.MessagesId == nil {
		return nil, errors.New("invalid value for required argument 'MessagesId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	var resource DatasetHl7V2StoreMessage
	err := ctx.RegisterResource("google-cloud:healthcare/v1beta1:DatasetHl7V2StoreMessage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatasetHl7V2StoreMessage gets an existing DatasetHl7V2StoreMessage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatasetHl7V2StoreMessage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatasetHl7V2StoreMessageState, opts ...pulumi.ResourceOption) (*DatasetHl7V2StoreMessage, error) {
	var resource DatasetHl7V2StoreMessage
	err := ctx.ReadResource("google-cloud:healthcare/v1beta1:DatasetHl7V2StoreMessage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatasetHl7V2StoreMessage resources.
type datasetHl7V2StoreMessageState struct {
}

type DatasetHl7V2StoreMessageState struct {
}

func (DatasetHl7V2StoreMessageState) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetHl7V2StoreMessageState)(nil)).Elem()
}

type datasetHl7V2StoreMessageArgs struct {
	DatasetsId    string `pulumi:"datasetsId"`
	Hl7V2StoresId string `pulumi:"hl7V2StoresId"`
	LocationsId   string `pulumi:"locationsId"`
	// HL7v2 message.
	Message    *Message `pulumi:"message"`
	MessagesId string   `pulumi:"messagesId"`
	ProjectsId string   `pulumi:"projectsId"`
}

// The set of arguments for constructing a DatasetHl7V2StoreMessage resource.
type DatasetHl7V2StoreMessageArgs struct {
	DatasetsId    pulumi.StringInput
	Hl7V2StoresId pulumi.StringInput
	LocationsId   pulumi.StringInput
	// HL7v2 message.
	Message    MessagePtrInput
	MessagesId pulumi.StringInput
	ProjectsId pulumi.StringInput
}

func (DatasetHl7V2StoreMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetHl7V2StoreMessageArgs)(nil)).Elem()
}

type DatasetHl7V2StoreMessageInput interface {
	pulumi.Input

	ToDatasetHl7V2StoreMessageOutput() DatasetHl7V2StoreMessageOutput
	ToDatasetHl7V2StoreMessageOutputWithContext(ctx context.Context) DatasetHl7V2StoreMessageOutput
}

func (*DatasetHl7V2StoreMessage) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetHl7V2StoreMessage)(nil))
}

func (i *DatasetHl7V2StoreMessage) ToDatasetHl7V2StoreMessageOutput() DatasetHl7V2StoreMessageOutput {
	return i.ToDatasetHl7V2StoreMessageOutputWithContext(context.Background())
}

func (i *DatasetHl7V2StoreMessage) ToDatasetHl7V2StoreMessageOutputWithContext(ctx context.Context) DatasetHl7V2StoreMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetHl7V2StoreMessageOutput)
}

type DatasetHl7V2StoreMessageOutput struct {
	*pulumi.OutputState
}

func (DatasetHl7V2StoreMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetHl7V2StoreMessage)(nil))
}

func (o DatasetHl7V2StoreMessageOutput) ToDatasetHl7V2StoreMessageOutput() DatasetHl7V2StoreMessageOutput {
	return o
}

func (o DatasetHl7V2StoreMessageOutput) ToDatasetHl7V2StoreMessageOutputWithContext(ctx context.Context) DatasetHl7V2StoreMessageOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DatasetHl7V2StoreMessageOutput{})
}
