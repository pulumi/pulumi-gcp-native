// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new consent store in the parent dataset. Attempting to create a consent store with the same ID as an existing store fails with an ALREADY_EXISTS error.
type DatasetConsentStore struct {
	pulumi.CustomResourceState

	// Optional. Default time to live for Consents created in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
	DefaultConsentTtl pulumi.StringOutput `pulumi:"defaultConsentTtl"`
	// Optional. If `true`, UpdateConsent creates the Consent if it does not already exist. If unspecified, defaults to `false`.
	EnableConsentCreateOnUpdate pulumi.BoolOutput `pulumi:"enableConsentCreateOnUpdate"`
	// Optional. User-supplied key-value pairs used to organize consent stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}. Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}. No more than 64 labels can be associated with a given store. For more information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource name of the consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after creation.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewDatasetConsentStore registers a new resource with the given unique name, arguments, and options.
func NewDatasetConsentStore(ctx *pulumi.Context,
	name string, args *DatasetConsentStoreArgs, opts ...pulumi.ResourceOption) (*DatasetConsentStore, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConsentStoreId == nil {
		return nil, errors.New("invalid value for required argument 'ConsentStoreId'")
	}
	if args.DatasetId == nil {
		return nil, errors.New("invalid value for required argument 'DatasetId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	var resource DatasetConsentStore
	err := ctx.RegisterResource("google-native:healthcare/v1beta1:DatasetConsentStore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatasetConsentStore gets an existing DatasetConsentStore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatasetConsentStore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatasetConsentStoreState, opts ...pulumi.ResourceOption) (*DatasetConsentStore, error) {
	var resource DatasetConsentStore
	err := ctx.ReadResource("google-native:healthcare/v1beta1:DatasetConsentStore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatasetConsentStore resources.
type datasetConsentStoreState struct {
	// Optional. Default time to live for Consents created in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
	DefaultConsentTtl *string `pulumi:"defaultConsentTtl"`
	// Optional. If `true`, UpdateConsent creates the Consent if it does not already exist. If unspecified, defaults to `false`.
	EnableConsentCreateOnUpdate *bool `pulumi:"enableConsentCreateOnUpdate"`
	// Optional. User-supplied key-value pairs used to organize consent stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}. Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}. No more than 64 labels can be associated with a given store. For more information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources
	Labels map[string]string `pulumi:"labels"`
	// Resource name of the consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after creation.
	Name *string `pulumi:"name"`
}

type DatasetConsentStoreState struct {
	// Optional. Default time to live for Consents created in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
	DefaultConsentTtl pulumi.StringPtrInput
	// Optional. If `true`, UpdateConsent creates the Consent if it does not already exist. If unspecified, defaults to `false`.
	EnableConsentCreateOnUpdate pulumi.BoolPtrInput
	// Optional. User-supplied key-value pairs used to organize consent stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}. Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}. No more than 64 labels can be associated with a given store. For more information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources
	Labels pulumi.StringMapInput
	// Resource name of the consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after creation.
	Name pulumi.StringPtrInput
}

func (DatasetConsentStoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetConsentStoreState)(nil)).Elem()
}

type datasetConsentStoreArgs struct {
	ConsentStoreId string `pulumi:"consentStoreId"`
	DatasetId      string `pulumi:"datasetId"`
	// Optional. Default time to live for Consents created in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
	DefaultConsentTtl *string `pulumi:"defaultConsentTtl"`
	// Optional. If `true`, UpdateConsent creates the Consent if it does not already exist. If unspecified, defaults to `false`.
	EnableConsentCreateOnUpdate *bool `pulumi:"enableConsentCreateOnUpdate"`
	// Optional. User-supplied key-value pairs used to organize consent stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}. Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}. No more than 64 labels can be associated with a given store. For more information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources
	Labels   map[string]string `pulumi:"labels"`
	Location string            `pulumi:"location"`
	// Resource name of the consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after creation.
	Name    *string `pulumi:"name"`
	Project string  `pulumi:"project"`
}

// The set of arguments for constructing a DatasetConsentStore resource.
type DatasetConsentStoreArgs struct {
	ConsentStoreId pulumi.StringInput
	DatasetId      pulumi.StringInput
	// Optional. Default time to live for Consents created in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
	DefaultConsentTtl pulumi.StringPtrInput
	// Optional. If `true`, UpdateConsent creates the Consent if it does not already exist. If unspecified, defaults to `false`.
	EnableConsentCreateOnUpdate pulumi.BoolPtrInput
	// Optional. User-supplied key-value pairs used to organize consent stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}. Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}. No more than 64 labels can be associated with a given store. For more information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources
	Labels   pulumi.StringMapInput
	Location pulumi.StringInput
	// Resource name of the consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after creation.
	Name    pulumi.StringPtrInput
	Project pulumi.StringInput
}

func (DatasetConsentStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetConsentStoreArgs)(nil)).Elem()
}

type DatasetConsentStoreInput interface {
	pulumi.Input

	ToDatasetConsentStoreOutput() DatasetConsentStoreOutput
	ToDatasetConsentStoreOutputWithContext(ctx context.Context) DatasetConsentStoreOutput
}

func (*DatasetConsentStore) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetConsentStore)(nil))
}

func (i *DatasetConsentStore) ToDatasetConsentStoreOutput() DatasetConsentStoreOutput {
	return i.ToDatasetConsentStoreOutputWithContext(context.Background())
}

func (i *DatasetConsentStore) ToDatasetConsentStoreOutputWithContext(ctx context.Context) DatasetConsentStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetConsentStoreOutput)
}

type DatasetConsentStoreOutput struct {
	*pulumi.OutputState
}

func (DatasetConsentStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetConsentStore)(nil))
}

func (o DatasetConsentStoreOutput) ToDatasetConsentStoreOutput() DatasetConsentStoreOutput {
	return o
}

func (o DatasetConsentStoreOutput) ToDatasetConsentStoreOutputWithContext(ctx context.Context) DatasetConsentStoreOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DatasetConsentStoreOutput{})
}
