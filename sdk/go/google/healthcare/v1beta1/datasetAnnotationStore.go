// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a new Annotation store within the parent dataset.
type DatasetAnnotationStore struct {
	pulumi.CustomResourceState

	// Optional. User-supplied key-value pairs used to organize Annotation stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource name of the Annotation store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewDatasetAnnotationStore registers a new resource with the given unique name, arguments, and options.
func NewDatasetAnnotationStore(ctx *pulumi.Context,
	name string, args *DatasetAnnotationStoreArgs, opts ...pulumi.ResourceOption) (*DatasetAnnotationStore, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AnnotationStoresId == nil {
		return nil, errors.New("invalid value for required argument 'AnnotationStoresId'")
	}
	if args.DatasetsId == nil {
		return nil, errors.New("invalid value for required argument 'DatasetsId'")
	}
	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	var resource DatasetAnnotationStore
	err := ctx.RegisterResource("google-cloud:healthcare/v1beta1:DatasetAnnotationStore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatasetAnnotationStore gets an existing DatasetAnnotationStore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatasetAnnotationStore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatasetAnnotationStoreState, opts ...pulumi.ResourceOption) (*DatasetAnnotationStore, error) {
	var resource DatasetAnnotationStore
	err := ctx.ReadResource("google-cloud:healthcare/v1beta1:DatasetAnnotationStore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatasetAnnotationStore resources.
type datasetAnnotationStoreState struct {
	// Optional. User-supplied key-value pairs used to organize Annotation stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
	Labels map[string]string `pulumi:"labels"`
	// Resource name of the Annotation store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.
	Name *string `pulumi:"name"`
}

type DatasetAnnotationStoreState struct {
	// Optional. User-supplied key-value pairs used to organize Annotation stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
	Labels pulumi.StringMapInput
	// Resource name of the Annotation store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.
	Name pulumi.StringPtrInput
}

func (DatasetAnnotationStoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetAnnotationStoreState)(nil)).Elem()
}

type datasetAnnotationStoreArgs struct {
	AnnotationStoresId string `pulumi:"annotationStoresId"`
	DatasetsId         string `pulumi:"datasetsId"`
	// Optional. User-supplied key-value pairs used to organize Annotation stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
	Labels      map[string]string `pulumi:"labels"`
	LocationsId string            `pulumi:"locationsId"`
	// Resource name of the Annotation store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.
	Name       *string `pulumi:"name"`
	ProjectsId string  `pulumi:"projectsId"`
}

// The set of arguments for constructing a DatasetAnnotationStore resource.
type DatasetAnnotationStoreArgs struct {
	AnnotationStoresId pulumi.StringInput
	DatasetsId         pulumi.StringInput
	// Optional. User-supplied key-value pairs used to organize Annotation stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
	Labels      pulumi.StringMapInput
	LocationsId pulumi.StringInput
	// Resource name of the Annotation store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.
	Name       pulumi.StringPtrInput
	ProjectsId pulumi.StringInput
}

func (DatasetAnnotationStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetAnnotationStoreArgs)(nil)).Elem()
}

type DatasetAnnotationStoreInput interface {
	pulumi.Input

	ToDatasetAnnotationStoreOutput() DatasetAnnotationStoreOutput
	ToDatasetAnnotationStoreOutputWithContext(ctx context.Context) DatasetAnnotationStoreOutput
}

func (*DatasetAnnotationStore) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetAnnotationStore)(nil))
}

func (i *DatasetAnnotationStore) ToDatasetAnnotationStoreOutput() DatasetAnnotationStoreOutput {
	return i.ToDatasetAnnotationStoreOutputWithContext(context.Background())
}

func (i *DatasetAnnotationStore) ToDatasetAnnotationStoreOutputWithContext(ctx context.Context) DatasetAnnotationStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetAnnotationStoreOutput)
}

type DatasetAnnotationStoreOutput struct {
	*pulumi.OutputState
}

func (DatasetAnnotationStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetAnnotationStore)(nil))
}

func (o DatasetAnnotationStoreOutput) ToDatasetAnnotationStoreOutput() DatasetAnnotationStoreOutput {
	return o
}

func (o DatasetAnnotationStoreOutput) ToDatasetAnnotationStoreOutputWithContext(ctx context.Context) DatasetAnnotationStoreOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DatasetAnnotationStoreOutput{})
}
