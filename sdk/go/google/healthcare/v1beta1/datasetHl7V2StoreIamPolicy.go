// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
type DatasetHl7V2StoreIamPolicy struct {
	pulumi.CustomResourceState
}

// NewDatasetHl7V2StoreIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewDatasetHl7V2StoreIamPolicy(ctx *pulumi.Context,
	name string, args *DatasetHl7V2StoreIamPolicyArgs, opts ...pulumi.ResourceOption) (*DatasetHl7V2StoreIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatasetsId == nil {
		return nil, errors.New("invalid value for required argument 'DatasetsId'")
	}
	if args.Hl7V2StoresId == nil {
		return nil, errors.New("invalid value for required argument 'Hl7V2StoresId'")
	}
	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	var resource DatasetHl7V2StoreIamPolicy
	err := ctx.RegisterResource("google-cloud:healthcare/v1beta1:DatasetHl7V2StoreIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatasetHl7V2StoreIamPolicy gets an existing DatasetHl7V2StoreIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatasetHl7V2StoreIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatasetHl7V2StoreIamPolicyState, opts ...pulumi.ResourceOption) (*DatasetHl7V2StoreIamPolicy, error) {
	var resource DatasetHl7V2StoreIamPolicy
	err := ctx.ReadResource("google-cloud:healthcare/v1beta1:DatasetHl7V2StoreIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatasetHl7V2StoreIamPolicy resources.
type datasetHl7V2StoreIamPolicyState struct {
}

type DatasetHl7V2StoreIamPolicyState struct {
}

func (DatasetHl7V2StoreIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetHl7V2StoreIamPolicyState)(nil)).Elem()
}

type datasetHl7V2StoreIamPolicyArgs struct {
	DatasetsId    string `pulumi:"datasetsId"`
	Hl7V2StoresId string `pulumi:"hl7V2StoresId"`
	LocationsId   string `pulumi:"locationsId"`
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy     *Policy `pulumi:"policy"`
	ProjectsId string  `pulumi:"projectsId"`
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask *string `pulumi:"updateMask"`
}

// The set of arguments for constructing a DatasetHl7V2StoreIamPolicy resource.
type DatasetHl7V2StoreIamPolicyArgs struct {
	DatasetsId    pulumi.StringInput
	Hl7V2StoresId pulumi.StringInput
	LocationsId   pulumi.StringInput
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy     PolicyPtrInput
	ProjectsId pulumi.StringInput
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask pulumi.StringPtrInput
}

func (DatasetHl7V2StoreIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetHl7V2StoreIamPolicyArgs)(nil)).Elem()
}

type DatasetHl7V2StoreIamPolicyInput interface {
	pulumi.Input

	ToDatasetHl7V2StoreIamPolicyOutput() DatasetHl7V2StoreIamPolicyOutput
	ToDatasetHl7V2StoreIamPolicyOutputWithContext(ctx context.Context) DatasetHl7V2StoreIamPolicyOutput
}

func (*DatasetHl7V2StoreIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetHl7V2StoreIamPolicy)(nil))
}

func (i *DatasetHl7V2StoreIamPolicy) ToDatasetHl7V2StoreIamPolicyOutput() DatasetHl7V2StoreIamPolicyOutput {
	return i.ToDatasetHl7V2StoreIamPolicyOutputWithContext(context.Background())
}

func (i *DatasetHl7V2StoreIamPolicy) ToDatasetHl7V2StoreIamPolicyOutputWithContext(ctx context.Context) DatasetHl7V2StoreIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetHl7V2StoreIamPolicyOutput)
}

type DatasetHl7V2StoreIamPolicyOutput struct {
	*pulumi.OutputState
}

func (DatasetHl7V2StoreIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetHl7V2StoreIamPolicy)(nil))
}

func (o DatasetHl7V2StoreIamPolicyOutput) ToDatasetHl7V2StoreIamPolicyOutput() DatasetHl7V2StoreIamPolicyOutput {
	return o
}

func (o DatasetHl7V2StoreIamPolicyOutput) ToDatasetHl7V2StoreIamPolicyOutputWithContext(ctx context.Context) DatasetHl7V2StoreIamPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DatasetHl7V2StoreIamPolicyOutput{})
}
