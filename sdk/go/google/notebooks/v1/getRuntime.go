// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single Runtime. The location must be a regional endpoint rather than zonal.
func LookupRuntime(ctx *pulumi.Context, args *LookupRuntimeArgs, opts ...pulumi.InvokeOption) (*LookupRuntimeResult, error) {
	var rv LookupRuntimeResult
	err := ctx.Invoke("google-native:notebooks/v1:getRuntime", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRuntimeArgs struct {
	Location  string `pulumi:"location"`
	Project   string `pulumi:"project"`
	RuntimeId string `pulumi:"runtimeId"`
}

type LookupRuntimeResult struct {
	// The config settings for accessing runtime.
	AccessConfig RuntimeAccessConfigResponse `pulumi:"accessConfig"`
	// Runtime creation time.
	CreateTime string `pulumi:"createTime"`
	// Runtime health_state.
	HealthState string `pulumi:"healthState"`
	// Contains Runtime daemon metrics such as Service status and JupyterLab stats.
	Metrics RuntimeMetricsResponse `pulumi:"metrics"`
	// The resource name of the runtime. Format: `projects/{project}/locations/{location}/runtimes/{runtime}`
	Name string `pulumi:"name"`
	// The config settings for software inside the runtime.
	SoftwareConfig RuntimeSoftwareConfigResponse `pulumi:"softwareConfig"`
	// Runtime state.
	State string `pulumi:"state"`
	// Runtime update time.
	UpdateTime string `pulumi:"updateTime"`
	// Use a Compute Engine VM image to start the managed notebook instance.
	VirtualMachine VirtualMachineResponse `pulumi:"virtualMachine"`
}
