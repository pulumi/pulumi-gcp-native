// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single Environment.
func LookupEnvironment(ctx *pulumi.Context, args *LookupEnvironmentArgs, opts ...pulumi.InvokeOption) (*LookupEnvironmentResult, error) {
	var rv LookupEnvironmentResult
	err := ctx.Invoke("google-native:notebooks/v1:getEnvironment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEnvironmentArgs struct {
	EnvironmentId string  `pulumi:"environmentId"`
	Location      string  `pulumi:"location"`
	Project       *string `pulumi:"project"`
}

type LookupEnvironmentResult struct {
	// Use a container image to start the notebook instance.
	ContainerImage ContainerImageResponse `pulumi:"containerImage"`
	// The time at which this environment was created.
	CreateTime string `pulumi:"createTime"`
	// A brief description of this environment.
	Description string `pulumi:"description"`
	// Display name of this environment for the UI.
	DisplayName string `pulumi:"displayName"`
	// Name of this environment. Format: `projects/{project_id}/locations/{location}/environments/{environment_id}`
	Name string `pulumi:"name"`
	// Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path. Example: `"gs://path-to-file/file-name"`
	PostStartupScript string `pulumi:"postStartupScript"`
	// Use a Compute Engine VM image to start the notebook instance.
	VmImage VmImageResponse `pulumi:"vmImage"`
}
