// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new bare metal admin cluster in a given project and location. The API needs to be combined with creating a bootstrap cluster to work. See: https://cloud.google.com/anthos/clusters/docs/bare-metal/latest/installing/creating-clusters/create-admin-cluster-api#prepare_bootstrap_environment
// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
// on Google Cloud even though it will be deleted from Pulumi state.
type BareMetalAdminCluster struct {
	pulumi.CustomResourceState

	// Annotations on the bare metal admin cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Required. User provided identifier that is used as part of the resource name; must conform to RFC-1034 and additionally restrict to lower-cased letters. This comes out roughly to: /^a-z+[a-z0-9]$/
	BareMetalAdminClusterId pulumi.StringOutput `pulumi:"bareMetalAdminClusterId"`
	// The Anthos clusters on bare metal version for the bare metal admin cluster.
	BareMetalVersion pulumi.StringOutput `pulumi:"bareMetalVersion"`
	// Binary Authorization related configurations.
	BinaryAuthorization BinaryAuthorizationResponseOutput `pulumi:"binaryAuthorization"`
	// Cluster operations configuration.
	ClusterOperations BareMetalAdminClusterOperationsConfigResponseOutput `pulumi:"clusterOperations"`
	// Control plane configuration.
	ControlPlane BareMetalAdminControlPlaneConfigResponseOutput `pulumi:"controlPlane"`
	// The time at which this bare metal admin cluster was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The time at which this bare metal admin cluster was deleted. If the resource is not deleted, this must be empty
	DeleteTime pulumi.StringOutput `pulumi:"deleteTime"`
	// A human readable description of this bare metal admin cluster.
	Description pulumi.StringOutput `pulumi:"description"`
	// The IP address name of bare metal admin cluster's API server.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Fleet configuration for the cluster.
	Fleet FleetResponseOutput `pulumi:"fleet"`
	// Load balancer configuration.
	LoadBalancer BareMetalAdminLoadBalancerConfigResponseOutput `pulumi:"loadBalancer"`
	// The object name of the bare metal cluster custom resource. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the ID in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. All users should use this name to access their cluster using gkectl or kubectl and should expect to see the local name when viewing admin cluster controller logs.
	LocalName pulumi.StringOutput `pulumi:"localName"`
	Location  pulumi.StringOutput `pulumi:"location"`
	// Maintenance configuration.
	MaintenanceConfig BareMetalAdminMaintenanceConfigResponseOutput `pulumi:"maintenanceConfig"`
	// MaintenanceStatus representing state of maintenance.
	MaintenanceStatus BareMetalAdminMaintenanceStatusResponseOutput `pulumi:"maintenanceStatus"`
	// Immutable. The bare metal admin cluster resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Network configuration.
	NetworkConfig BareMetalAdminNetworkConfigResponseOutput `pulumi:"networkConfig"`
	// Node access related configurations.
	NodeAccessConfig BareMetalAdminNodeAccessConfigResponseOutput `pulumi:"nodeAccessConfig"`
	// Workload node configuration.
	NodeConfig BareMetalAdminWorkloadNodeConfigResponseOutput `pulumi:"nodeConfig"`
	// OS environment related configurations.
	OsEnvironmentConfig BareMetalAdminOsEnvironmentConfigResponseOutput `pulumi:"osEnvironmentConfig"`
	Project             pulumi.StringOutput                             `pulumi:"project"`
	// Proxy configuration.
	Proxy BareMetalAdminProxyConfigResponseOutput `pulumi:"proxy"`
	// If set, there are currently changes in flight to the bare metal Admin Cluster.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// Security related configuration.
	SecurityConfig BareMetalAdminSecurityConfigResponseOutput `pulumi:"securityConfig"`
	// The current state of the bare metal admin cluster.
	State pulumi.StringOutput `pulumi:"state"`
	// ResourceStatus representing detailed cluster status.
	Status ResourceStatusResponseOutput `pulumi:"status"`
	// Storage configuration.
	Storage BareMetalAdminStorageConfigResponseOutput `pulumi:"storage"`
	// The unique identifier of the bare metal admin cluster.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The time at which this bare metal admin cluster was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// ValidationCheck representing the result of the preflight check.
	ValidationCheck ValidationCheckResponseOutput `pulumi:"validationCheck"`
}

// NewBareMetalAdminCluster registers a new resource with the given unique name, arguments, and options.
func NewBareMetalAdminCluster(ctx *pulumi.Context,
	name string, args *BareMetalAdminClusterArgs, opts ...pulumi.ResourceOption) (*BareMetalAdminCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BareMetalAdminClusterId == nil {
		return nil, errors.New("invalid value for required argument 'BareMetalAdminClusterId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"bareMetalAdminClusterId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BareMetalAdminCluster
	err := ctx.RegisterResource("google-native:gkeonprem/v1:BareMetalAdminCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBareMetalAdminCluster gets an existing BareMetalAdminCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBareMetalAdminCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BareMetalAdminClusterState, opts ...pulumi.ResourceOption) (*BareMetalAdminCluster, error) {
	var resource BareMetalAdminCluster
	err := ctx.ReadResource("google-native:gkeonprem/v1:BareMetalAdminCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BareMetalAdminCluster resources.
type bareMetalAdminClusterState struct {
}

type BareMetalAdminClusterState struct {
}

func (BareMetalAdminClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*bareMetalAdminClusterState)(nil)).Elem()
}

type bareMetalAdminClusterArgs struct {
	// Annotations on the bare metal admin cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	Annotations map[string]string `pulumi:"annotations"`
	// Required. User provided identifier that is used as part of the resource name; must conform to RFC-1034 and additionally restrict to lower-cased letters. This comes out roughly to: /^a-z+[a-z0-9]$/
	BareMetalAdminClusterId string `pulumi:"bareMetalAdminClusterId"`
	// The Anthos clusters on bare metal version for the bare metal admin cluster.
	BareMetalVersion *string `pulumi:"bareMetalVersion"`
	// Binary Authorization related configurations.
	BinaryAuthorization *BinaryAuthorization `pulumi:"binaryAuthorization"`
	// Cluster operations configuration.
	ClusterOperations *BareMetalAdminClusterOperationsConfig `pulumi:"clusterOperations"`
	// Control plane configuration.
	ControlPlane *BareMetalAdminControlPlaneConfig `pulumi:"controlPlane"`
	// A human readable description of this bare metal admin cluster.
	Description *string `pulumi:"description"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
	Etag *string `pulumi:"etag"`
	// Load balancer configuration.
	LoadBalancer *BareMetalAdminLoadBalancerConfig `pulumi:"loadBalancer"`
	Location     *string                           `pulumi:"location"`
	// Maintenance configuration.
	MaintenanceConfig *BareMetalAdminMaintenanceConfig `pulumi:"maintenanceConfig"`
	// Immutable. The bare metal admin cluster resource name.
	Name *string `pulumi:"name"`
	// Network configuration.
	NetworkConfig *BareMetalAdminNetworkConfig `pulumi:"networkConfig"`
	// Node access related configurations.
	NodeAccessConfig *BareMetalAdminNodeAccessConfig `pulumi:"nodeAccessConfig"`
	// Workload node configuration.
	NodeConfig *BareMetalAdminWorkloadNodeConfig `pulumi:"nodeConfig"`
	// OS environment related configurations.
	OsEnvironmentConfig *BareMetalAdminOsEnvironmentConfig `pulumi:"osEnvironmentConfig"`
	Project             *string                            `pulumi:"project"`
	// Proxy configuration.
	Proxy *BareMetalAdminProxyConfig `pulumi:"proxy"`
	// Security related configuration.
	SecurityConfig *BareMetalAdminSecurityConfig `pulumi:"securityConfig"`
	// Storage configuration.
	Storage *BareMetalAdminStorageConfig `pulumi:"storage"`
}

// The set of arguments for constructing a BareMetalAdminCluster resource.
type BareMetalAdminClusterArgs struct {
	// Annotations on the bare metal admin cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	Annotations pulumi.StringMapInput
	// Required. User provided identifier that is used as part of the resource name; must conform to RFC-1034 and additionally restrict to lower-cased letters. This comes out roughly to: /^a-z+[a-z0-9]$/
	BareMetalAdminClusterId pulumi.StringInput
	// The Anthos clusters on bare metal version for the bare metal admin cluster.
	BareMetalVersion pulumi.StringPtrInput
	// Binary Authorization related configurations.
	BinaryAuthorization BinaryAuthorizationPtrInput
	// Cluster operations configuration.
	ClusterOperations BareMetalAdminClusterOperationsConfigPtrInput
	// Control plane configuration.
	ControlPlane BareMetalAdminControlPlaneConfigPtrInput
	// A human readable description of this bare metal admin cluster.
	Description pulumi.StringPtrInput
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
	Etag pulumi.StringPtrInput
	// Load balancer configuration.
	LoadBalancer BareMetalAdminLoadBalancerConfigPtrInput
	Location     pulumi.StringPtrInput
	// Maintenance configuration.
	MaintenanceConfig BareMetalAdminMaintenanceConfigPtrInput
	// Immutable. The bare metal admin cluster resource name.
	Name pulumi.StringPtrInput
	// Network configuration.
	NetworkConfig BareMetalAdminNetworkConfigPtrInput
	// Node access related configurations.
	NodeAccessConfig BareMetalAdminNodeAccessConfigPtrInput
	// Workload node configuration.
	NodeConfig BareMetalAdminWorkloadNodeConfigPtrInput
	// OS environment related configurations.
	OsEnvironmentConfig BareMetalAdminOsEnvironmentConfigPtrInput
	Project             pulumi.StringPtrInput
	// Proxy configuration.
	Proxy BareMetalAdminProxyConfigPtrInput
	// Security related configuration.
	SecurityConfig BareMetalAdminSecurityConfigPtrInput
	// Storage configuration.
	Storage BareMetalAdminStorageConfigPtrInput
}

func (BareMetalAdminClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bareMetalAdminClusterArgs)(nil)).Elem()
}

type BareMetalAdminClusterInput interface {
	pulumi.Input

	ToBareMetalAdminClusterOutput() BareMetalAdminClusterOutput
	ToBareMetalAdminClusterOutputWithContext(ctx context.Context) BareMetalAdminClusterOutput
}

func (*BareMetalAdminCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminCluster)(nil)).Elem()
}

func (i *BareMetalAdminCluster) ToBareMetalAdminClusterOutput() BareMetalAdminClusterOutput {
	return i.ToBareMetalAdminClusterOutputWithContext(context.Background())
}

func (i *BareMetalAdminCluster) ToBareMetalAdminClusterOutputWithContext(ctx context.Context) BareMetalAdminClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalAdminClusterOutput)
}

type BareMetalAdminClusterOutput struct{ *pulumi.OutputState }

func (BareMetalAdminClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalAdminCluster)(nil)).Elem()
}

func (o BareMetalAdminClusterOutput) ToBareMetalAdminClusterOutput() BareMetalAdminClusterOutput {
	return o
}

func (o BareMetalAdminClusterOutput) ToBareMetalAdminClusterOutputWithContext(ctx context.Context) BareMetalAdminClusterOutput {
	return o
}

// Annotations on the bare metal admin cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
func (o BareMetalAdminClusterOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Required. User provided identifier that is used as part of the resource name; must conform to RFC-1034 and additionally restrict to lower-cased letters. This comes out roughly to: /^a-z+[a-z0-9]$/
func (o BareMetalAdminClusterOutput) BareMetalAdminClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.BareMetalAdminClusterId }).(pulumi.StringOutput)
}

// The Anthos clusters on bare metal version for the bare metal admin cluster.
func (o BareMetalAdminClusterOutput) BareMetalVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.BareMetalVersion }).(pulumi.StringOutput)
}

// Binary Authorization related configurations.
func (o BareMetalAdminClusterOutput) BinaryAuthorization() BinaryAuthorizationResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BinaryAuthorizationResponseOutput { return v.BinaryAuthorization }).(BinaryAuthorizationResponseOutput)
}

// Cluster operations configuration.
func (o BareMetalAdminClusterOutput) ClusterOperations() BareMetalAdminClusterOperationsConfigResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminClusterOperationsConfigResponseOutput {
		return v.ClusterOperations
	}).(BareMetalAdminClusterOperationsConfigResponseOutput)
}

// Control plane configuration.
func (o BareMetalAdminClusterOutput) ControlPlane() BareMetalAdminControlPlaneConfigResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminControlPlaneConfigResponseOutput { return v.ControlPlane }).(BareMetalAdminControlPlaneConfigResponseOutput)
}

// The time at which this bare metal admin cluster was created.
func (o BareMetalAdminClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The time at which this bare metal admin cluster was deleted. If the resource is not deleted, this must be empty
func (o BareMetalAdminClusterOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

// A human readable description of this bare metal admin cluster.
func (o BareMetalAdminClusterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The IP address name of bare metal admin cluster's API server.
func (o BareMetalAdminClusterOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
func (o BareMetalAdminClusterOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Fleet configuration for the cluster.
func (o BareMetalAdminClusterOutput) Fleet() FleetResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) FleetResponseOutput { return v.Fleet }).(FleetResponseOutput)
}

// Load balancer configuration.
func (o BareMetalAdminClusterOutput) LoadBalancer() BareMetalAdminLoadBalancerConfigResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminLoadBalancerConfigResponseOutput { return v.LoadBalancer }).(BareMetalAdminLoadBalancerConfigResponseOutput)
}

// The object name of the bare metal cluster custom resource. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the ID in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. All users should use this name to access their cluster using gkectl or kubectl and should expect to see the local name when viewing admin cluster controller logs.
func (o BareMetalAdminClusterOutput) LocalName() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.LocalName }).(pulumi.StringOutput)
}

func (o BareMetalAdminClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Maintenance configuration.
func (o BareMetalAdminClusterOutput) MaintenanceConfig() BareMetalAdminMaintenanceConfigResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminMaintenanceConfigResponseOutput {
		return v.MaintenanceConfig
	}).(BareMetalAdminMaintenanceConfigResponseOutput)
}

// MaintenanceStatus representing state of maintenance.
func (o BareMetalAdminClusterOutput) MaintenanceStatus() BareMetalAdminMaintenanceStatusResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminMaintenanceStatusResponseOutput {
		return v.MaintenanceStatus
	}).(BareMetalAdminMaintenanceStatusResponseOutput)
}

// Immutable. The bare metal admin cluster resource name.
func (o BareMetalAdminClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network configuration.
func (o BareMetalAdminClusterOutput) NetworkConfig() BareMetalAdminNetworkConfigResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminNetworkConfigResponseOutput { return v.NetworkConfig }).(BareMetalAdminNetworkConfigResponseOutput)
}

// Node access related configurations.
func (o BareMetalAdminClusterOutput) NodeAccessConfig() BareMetalAdminNodeAccessConfigResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminNodeAccessConfigResponseOutput { return v.NodeAccessConfig }).(BareMetalAdminNodeAccessConfigResponseOutput)
}

// Workload node configuration.
func (o BareMetalAdminClusterOutput) NodeConfig() BareMetalAdminWorkloadNodeConfigResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminWorkloadNodeConfigResponseOutput { return v.NodeConfig }).(BareMetalAdminWorkloadNodeConfigResponseOutput)
}

// OS environment related configurations.
func (o BareMetalAdminClusterOutput) OsEnvironmentConfig() BareMetalAdminOsEnvironmentConfigResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminOsEnvironmentConfigResponseOutput {
		return v.OsEnvironmentConfig
	}).(BareMetalAdminOsEnvironmentConfigResponseOutput)
}

func (o BareMetalAdminClusterOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Proxy configuration.
func (o BareMetalAdminClusterOutput) Proxy() BareMetalAdminProxyConfigResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminProxyConfigResponseOutput { return v.Proxy }).(BareMetalAdminProxyConfigResponseOutput)
}

// If set, there are currently changes in flight to the bare metal Admin Cluster.
func (o BareMetalAdminClusterOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// Security related configuration.
func (o BareMetalAdminClusterOutput) SecurityConfig() BareMetalAdminSecurityConfigResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminSecurityConfigResponseOutput { return v.SecurityConfig }).(BareMetalAdminSecurityConfigResponseOutput)
}

// The current state of the bare metal admin cluster.
func (o BareMetalAdminClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// ResourceStatus representing detailed cluster status.
func (o BareMetalAdminClusterOutput) Status() ResourceStatusResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) ResourceStatusResponseOutput { return v.Status }).(ResourceStatusResponseOutput)
}

// Storage configuration.
func (o BareMetalAdminClusterOutput) Storage() BareMetalAdminStorageConfigResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) BareMetalAdminStorageConfigResponseOutput { return v.Storage }).(BareMetalAdminStorageConfigResponseOutput)
}

// The unique identifier of the bare metal admin cluster.
func (o BareMetalAdminClusterOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The time at which this bare metal admin cluster was last updated.
func (o BareMetalAdminClusterOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// ValidationCheck representing the result of the preflight check.
func (o BareMetalAdminClusterOutput) ValidationCheck() ValidationCheckResponseOutput {
	return o.ApplyT(func(v *BareMetalAdminCluster) ValidationCheckResponseOutput { return v.ValidationCheck }).(ValidationCheckResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalAdminClusterInput)(nil)).Elem(), &BareMetalAdminCluster{})
	pulumi.RegisterOutputType(BareMetalAdminClusterOutput{})
}
