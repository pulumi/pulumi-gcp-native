// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new bare metal node pool in a given project, location and Bare Metal cluster.
type BareMetalNodePool struct {
	pulumi.CustomResourceState

	// Annotations on the bare metal node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	Annotations        pulumi.StringMapOutput `pulumi:"annotations"`
	BareMetalClusterId pulumi.StringOutput    `pulumi:"bareMetalClusterId"`
	// The ID to use for the node pool, which will become the final component of the node pool's resource name. This value must be up to 63 characters, and valid characters are /a-z-/. The value must not be permitted to be a UUID (or UUID-like: anything matching /^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$/i).
	BareMetalNodePoolId pulumi.StringPtrOutput `pulumi:"bareMetalNodePoolId"`
	// The time at which this bare metal node pool was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The time at which this bare metal node pool was deleted. If the resource is not deleted, this must be empty
	DeleteTime pulumi.StringOutput `pulumi:"deleteTime"`
	// The display name for the bare metal node pool.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
	Etag     pulumi.StringOutput `pulumi:"etag"`
	Location pulumi.StringOutput `pulumi:"location"`
	// Immutable. The bare metal node pool resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Node pool configuration.
	NodePoolConfig BareMetalNodePoolConfigResponseOutput `pulumi:"nodePoolConfig"`
	Project        pulumi.StringOutput                   `pulumi:"project"`
	// If set, there are currently changes in flight to the bare metal node pool.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// The current state of the bare metal node pool.
	State pulumi.StringOutput `pulumi:"state"`
	// ResourceStatus representing the detailed node pool status.
	Status ResourceStatusResponseOutput `pulumi:"status"`
	// The unique identifier of the bare metal node pool.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The time at which this bare metal node pool was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The worker node pool upgrade policy.
	UpgradePolicy BareMetalNodePoolUpgradePolicyResponseOutput `pulumi:"upgradePolicy"`
}

// NewBareMetalNodePool registers a new resource with the given unique name, arguments, and options.
func NewBareMetalNodePool(ctx *pulumi.Context,
	name string, args *BareMetalNodePoolArgs, opts ...pulumi.ResourceOption) (*BareMetalNodePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BareMetalClusterId == nil {
		return nil, errors.New("invalid value for required argument 'BareMetalClusterId'")
	}
	if args.NodePoolConfig == nil {
		return nil, errors.New("invalid value for required argument 'NodePoolConfig'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"bareMetalClusterId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BareMetalNodePool
	err := ctx.RegisterResource("google-native:gkeonprem/v1:BareMetalNodePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBareMetalNodePool gets an existing BareMetalNodePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBareMetalNodePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BareMetalNodePoolState, opts ...pulumi.ResourceOption) (*BareMetalNodePool, error) {
	var resource BareMetalNodePool
	err := ctx.ReadResource("google-native:gkeonprem/v1:BareMetalNodePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BareMetalNodePool resources.
type bareMetalNodePoolState struct {
}

type BareMetalNodePoolState struct {
}

func (BareMetalNodePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*bareMetalNodePoolState)(nil)).Elem()
}

type bareMetalNodePoolArgs struct {
	// Annotations on the bare metal node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	Annotations        map[string]string `pulumi:"annotations"`
	BareMetalClusterId string            `pulumi:"bareMetalClusterId"`
	// The ID to use for the node pool, which will become the final component of the node pool's resource name. This value must be up to 63 characters, and valid characters are /a-z-/. The value must not be permitted to be a UUID (or UUID-like: anything matching /^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$/i).
	BareMetalNodePoolId *string `pulumi:"bareMetalNodePoolId"`
	// The display name for the bare metal node pool.
	DisplayName *string `pulumi:"displayName"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
	Etag     *string `pulumi:"etag"`
	Location *string `pulumi:"location"`
	// Immutable. The bare metal node pool resource name.
	Name *string `pulumi:"name"`
	// Node pool configuration.
	NodePoolConfig BareMetalNodePoolConfig `pulumi:"nodePoolConfig"`
	Project        *string                 `pulumi:"project"`
	// The worker node pool upgrade policy.
	UpgradePolicy *BareMetalNodePoolUpgradePolicy `pulumi:"upgradePolicy"`
}

// The set of arguments for constructing a BareMetalNodePool resource.
type BareMetalNodePoolArgs struct {
	// Annotations on the bare metal node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	Annotations        pulumi.StringMapInput
	BareMetalClusterId pulumi.StringInput
	// The ID to use for the node pool, which will become the final component of the node pool's resource name. This value must be up to 63 characters, and valid characters are /a-z-/. The value must not be permitted to be a UUID (or UUID-like: anything matching /^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$/i).
	BareMetalNodePoolId pulumi.StringPtrInput
	// The display name for the bare metal node pool.
	DisplayName pulumi.StringPtrInput
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
	Etag     pulumi.StringPtrInput
	Location pulumi.StringPtrInput
	// Immutable. The bare metal node pool resource name.
	Name pulumi.StringPtrInput
	// Node pool configuration.
	NodePoolConfig BareMetalNodePoolConfigInput
	Project        pulumi.StringPtrInput
	// The worker node pool upgrade policy.
	UpgradePolicy BareMetalNodePoolUpgradePolicyPtrInput
}

func (BareMetalNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bareMetalNodePoolArgs)(nil)).Elem()
}

type BareMetalNodePoolInput interface {
	pulumi.Input

	ToBareMetalNodePoolOutput() BareMetalNodePoolOutput
	ToBareMetalNodePoolOutputWithContext(ctx context.Context) BareMetalNodePoolOutput
}

func (*BareMetalNodePool) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalNodePool)(nil)).Elem()
}

func (i *BareMetalNodePool) ToBareMetalNodePoolOutput() BareMetalNodePoolOutput {
	return i.ToBareMetalNodePoolOutputWithContext(context.Background())
}

func (i *BareMetalNodePool) ToBareMetalNodePoolOutputWithContext(ctx context.Context) BareMetalNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BareMetalNodePoolOutput)
}

func (i *BareMetalNodePool) ToOutput(ctx context.Context) pulumix.Output[*BareMetalNodePool] {
	return pulumix.Output[*BareMetalNodePool]{
		OutputState: i.ToBareMetalNodePoolOutputWithContext(ctx).OutputState,
	}
}

type BareMetalNodePoolOutput struct{ *pulumi.OutputState }

func (BareMetalNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BareMetalNodePool)(nil)).Elem()
}

func (o BareMetalNodePoolOutput) ToBareMetalNodePoolOutput() BareMetalNodePoolOutput {
	return o
}

func (o BareMetalNodePoolOutput) ToBareMetalNodePoolOutputWithContext(ctx context.Context) BareMetalNodePoolOutput {
	return o
}

func (o BareMetalNodePoolOutput) ToOutput(ctx context.Context) pulumix.Output[*BareMetalNodePool] {
	return pulumix.Output[*BareMetalNodePool]{
		OutputState: o.OutputState,
	}
}

// Annotations on the bare metal node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
func (o BareMetalNodePoolOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BareMetalNodePool) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o BareMetalNodePoolOutput) BareMetalClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalNodePool) pulumi.StringOutput { return v.BareMetalClusterId }).(pulumi.StringOutput)
}

// The ID to use for the node pool, which will become the final component of the node pool's resource name. This value must be up to 63 characters, and valid characters are /a-z-/. The value must not be permitted to be a UUID (or UUID-like: anything matching /^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$/i).
func (o BareMetalNodePoolOutput) BareMetalNodePoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BareMetalNodePool) pulumi.StringPtrOutput { return v.BareMetalNodePoolId }).(pulumi.StringPtrOutput)
}

// The time at which this bare metal node pool was created.
func (o BareMetalNodePoolOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalNodePool) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The time at which this bare metal node pool was deleted. If the resource is not deleted, this must be empty
func (o BareMetalNodePoolOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalNodePool) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

// The display name for the bare metal node pool.
func (o BareMetalNodePoolOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalNodePool) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
func (o BareMetalNodePoolOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalNodePool) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BareMetalNodePoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalNodePool) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Immutable. The bare metal node pool resource name.
func (o BareMetalNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalNodePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Node pool configuration.
func (o BareMetalNodePoolOutput) NodePoolConfig() BareMetalNodePoolConfigResponseOutput {
	return o.ApplyT(func(v *BareMetalNodePool) BareMetalNodePoolConfigResponseOutput { return v.NodePoolConfig }).(BareMetalNodePoolConfigResponseOutput)
}

func (o BareMetalNodePoolOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalNodePool) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// If set, there are currently changes in flight to the bare metal node pool.
func (o BareMetalNodePoolOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *BareMetalNodePool) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// The current state of the bare metal node pool.
func (o BareMetalNodePoolOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalNodePool) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// ResourceStatus representing the detailed node pool status.
func (o BareMetalNodePoolOutput) Status() ResourceStatusResponseOutput {
	return o.ApplyT(func(v *BareMetalNodePool) ResourceStatusResponseOutput { return v.Status }).(ResourceStatusResponseOutput)
}

// The unique identifier of the bare metal node pool.
func (o BareMetalNodePoolOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalNodePool) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The time at which this bare metal node pool was last updated.
func (o BareMetalNodePoolOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BareMetalNodePool) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The worker node pool upgrade policy.
func (o BareMetalNodePoolOutput) UpgradePolicy() BareMetalNodePoolUpgradePolicyResponseOutput {
	return o.ApplyT(func(v *BareMetalNodePool) BareMetalNodePoolUpgradePolicyResponseOutput { return v.UpgradePolicy }).(BareMetalNodePoolUpgradePolicyResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BareMetalNodePoolInput)(nil)).Elem(), &BareMetalNodePool{})
	pulumi.RegisterOutputType(BareMetalNodePoolOutput{})
}
