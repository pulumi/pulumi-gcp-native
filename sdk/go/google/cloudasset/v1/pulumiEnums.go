// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Asset content type. If not specified, no content but the asset name and type will be returned.
type FeedContentType string

const (
	// Unspecified content type.
	FeedContentTypeContentTypeUnspecified = FeedContentType("CONTENT_TYPE_UNSPECIFIED")
	// Resource metadata.
	FeedContentTypeResource = FeedContentType("RESOURCE")
	// The actual IAM policy set on a resource.
	FeedContentTypeIamPolicy = FeedContentType("IAM_POLICY")
	// The organization policy set on an asset.
	FeedContentTypeOrgPolicy = FeedContentType("ORG_POLICY")
	// The Access Context Manager policy set on an asset.
	FeedContentTypeAccessPolicy = FeedContentType("ACCESS_POLICY")
	// The runtime OS Inventory information.
	FeedContentTypeOsInventory = FeedContentType("OS_INVENTORY")
	// The related resources.
	FeedContentTypeRelationship = FeedContentType("RELATIONSHIP")
)

func (FeedContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*FeedContentType)(nil)).Elem()
}

func (e FeedContentType) ToFeedContentTypeOutput() FeedContentTypeOutput {
	return pulumi.ToOutput(e).(FeedContentTypeOutput)
}

func (e FeedContentType) ToFeedContentTypeOutputWithContext(ctx context.Context) FeedContentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FeedContentTypeOutput)
}

func (e FeedContentType) ToFeedContentTypePtrOutput() FeedContentTypePtrOutput {
	return e.ToFeedContentTypePtrOutputWithContext(context.Background())
}

func (e FeedContentType) ToFeedContentTypePtrOutputWithContext(ctx context.Context) FeedContentTypePtrOutput {
	return FeedContentType(e).ToFeedContentTypeOutputWithContext(ctx).ToFeedContentTypePtrOutputWithContext(ctx)
}

func (e FeedContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FeedContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FeedContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FeedContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FeedContentTypeOutput struct{ *pulumi.OutputState }

func (FeedContentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeedContentType)(nil)).Elem()
}

func (o FeedContentTypeOutput) ToFeedContentTypeOutput() FeedContentTypeOutput {
	return o
}

func (o FeedContentTypeOutput) ToFeedContentTypeOutputWithContext(ctx context.Context) FeedContentTypeOutput {
	return o
}

func (o FeedContentTypeOutput) ToFeedContentTypePtrOutput() FeedContentTypePtrOutput {
	return o.ToFeedContentTypePtrOutputWithContext(context.Background())
}

func (o FeedContentTypeOutput) ToFeedContentTypePtrOutputWithContext(ctx context.Context) FeedContentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeedContentType) *FeedContentType {
		return &v
	}).(FeedContentTypePtrOutput)
}

func (o FeedContentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FeedContentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FeedContentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FeedContentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FeedContentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FeedContentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FeedContentTypePtrOutput struct{ *pulumi.OutputState }

func (FeedContentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeedContentType)(nil)).Elem()
}

func (o FeedContentTypePtrOutput) ToFeedContentTypePtrOutput() FeedContentTypePtrOutput {
	return o
}

func (o FeedContentTypePtrOutput) ToFeedContentTypePtrOutputWithContext(ctx context.Context) FeedContentTypePtrOutput {
	return o
}

func (o FeedContentTypePtrOutput) Elem() FeedContentTypeOutput {
	return o.ApplyT(func(v *FeedContentType) FeedContentType {
		if v != nil {
			return *v
		}
		var ret FeedContentType
		return ret
	}).(FeedContentTypeOutput)
}

func (o FeedContentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FeedContentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FeedContentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FeedContentTypeInput is an input type that accepts FeedContentTypeArgs and FeedContentTypeOutput values.
// You can construct a concrete instance of `FeedContentTypeInput` via:
//
//	FeedContentTypeArgs{...}
type FeedContentTypeInput interface {
	pulumi.Input

	ToFeedContentTypeOutput() FeedContentTypeOutput
	ToFeedContentTypeOutputWithContext(context.Context) FeedContentTypeOutput
}

var feedContentTypePtrType = reflect.TypeOf((**FeedContentType)(nil)).Elem()

type FeedContentTypePtrInput interface {
	pulumi.Input

	ToFeedContentTypePtrOutput() FeedContentTypePtrOutput
	ToFeedContentTypePtrOutputWithContext(context.Context) FeedContentTypePtrOutput
}

type feedContentTypePtr string

func FeedContentTypePtr(v string) FeedContentTypePtrInput {
	return (*feedContentTypePtr)(&v)
}

func (*feedContentTypePtr) ElementType() reflect.Type {
	return feedContentTypePtrType
}

func (in *feedContentTypePtr) ToFeedContentTypePtrOutput() FeedContentTypePtrOutput {
	return pulumi.ToOutput(in).(FeedContentTypePtrOutput)
}

func (in *feedContentTypePtr) ToFeedContentTypePtrOutputWithContext(ctx context.Context) FeedContentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FeedContentTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FeedContentTypeInput)(nil)).Elem(), FeedContentType("CONTENT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FeedContentTypePtrInput)(nil)).Elem(), FeedContentType("CONTENT_TYPE_UNSPECIFIED"))
	pulumi.RegisterOutputType(FeedContentTypeOutput{})
	pulumi.RegisterOutputType(FeedContentTypePtrOutput{})
}
