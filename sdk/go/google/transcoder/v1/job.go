// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a job in the specified region.
type Job struct {
	pulumi.CustomResourceState

	// The processing priority of a batch job. This field can only be set for batch mode jobs. The default value is 0. This value cannot be negative. Higher values correspond to higher priorities for the job.
	BatchModePriority pulumi.IntOutput `pulumi:"batchModePriority"`
	// The configuration for this job.
	Config JobConfigResponseOutput `pulumi:"config"`
	// The time the job was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The time the transcoding finished.
	EndTime pulumi.StringOutput `pulumi:"endTime"`
	// An error object that describes the reason for the failure. This property is always present when ProcessingState is `FAILED`.
	Error StatusResponseOutput `pulumi:"error"`
	// Input only. Specify the `input_uri` to populate empty `uri` fields in each element of `Job.config.inputs` or `JobTemplate.config.inputs` when using template. URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`). See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).
	InputUri pulumi.StringOutput `pulumi:"inputUri"`
	// The labels associated with this job. You can use these to organize and group your jobs.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// The processing mode of the job. The default is `PROCESSING_MODE_INTERACTIVE`.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// The resource name of the job. Format: `projects/{project_number}/locations/{location}/jobs/{job}`
	Name pulumi.StringOutput `pulumi:"name"`
	// Optional. The optimization strategy of the job. The default is `AUTODETECT`.
	Optimization pulumi.StringOutput `pulumi:"optimization"`
	// Input only. Specify the `output_uri` to populate an empty `Job.config.output.uri` or `JobTemplate.config.output.uri` when using template. URI for the output file(s). For example, `gs://my-bucket/outputs/`. See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).
	OutputUri pulumi.StringOutput `pulumi:"outputUri"`
	Project   pulumi.StringOutput `pulumi:"project"`
	// The time the transcoding started.
	StartTime pulumi.StringOutput `pulumi:"startTime"`
	// The current state of the job.
	State pulumi.StringOutput `pulumi:"state"`
	// Input only. Specify the `template_id` to use for populating `Job.config`. The default is `preset/web-hd`, which is the only supported preset. User defined JobTemplate: `{job_template_id}`
	TemplateId pulumi.StringOutput `pulumi:"templateId"`
	// Job time to live value in days, which will be effective after job completion. Job should be deleted automatically after the given TTL. Enter a value between 1 and 90. The default is 30.
	TtlAfterCompletionDays pulumi.IntOutput `pulumi:"ttlAfterCompletionDays"`
}

// NewJob registers a new resource with the given unique name, arguments, and options.
func NewJob(ctx *pulumi.Context,
	name string, args *JobArgs, opts ...pulumi.ResourceOption) (*Job, error) {
	if args == nil {
		args = &JobArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Job
	err := ctx.RegisterResource("google-native:transcoder/v1:Job", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJob gets an existing Job resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobState, opts ...pulumi.ResourceOption) (*Job, error) {
	var resource Job
	err := ctx.ReadResource("google-native:transcoder/v1:Job", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Job resources.
type jobState struct {
}

type JobState struct {
}

func (JobState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobState)(nil)).Elem()
}

type jobArgs struct {
	// The processing priority of a batch job. This field can only be set for batch mode jobs. The default value is 0. This value cannot be negative. Higher values correspond to higher priorities for the job.
	BatchModePriority *int `pulumi:"batchModePriority"`
	// The configuration for this job.
	Config *JobConfig `pulumi:"config"`
	// Input only. Specify the `input_uri` to populate empty `uri` fields in each element of `Job.config.inputs` or `JobTemplate.config.inputs` when using template. URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`). See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).
	InputUri *string `pulumi:"inputUri"`
	// The labels associated with this job. You can use these to organize and group your jobs.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// The processing mode of the job. The default is `PROCESSING_MODE_INTERACTIVE`.
	Mode *JobMode `pulumi:"mode"`
	// The resource name of the job. Format: `projects/{project_number}/locations/{location}/jobs/{job}`
	Name *string `pulumi:"name"`
	// Optional. The optimization strategy of the job. The default is `AUTODETECT`.
	Optimization *JobOptimization `pulumi:"optimization"`
	// Input only. Specify the `output_uri` to populate an empty `Job.config.output.uri` or `JobTemplate.config.output.uri` when using template. URI for the output file(s). For example, `gs://my-bucket/outputs/`. See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).
	OutputUri *string `pulumi:"outputUri"`
	Project   *string `pulumi:"project"`
	// Input only. Specify the `template_id` to use for populating `Job.config`. The default is `preset/web-hd`, which is the only supported preset. User defined JobTemplate: `{job_template_id}`
	TemplateId *string `pulumi:"templateId"`
	// Job time to live value in days, which will be effective after job completion. Job should be deleted automatically after the given TTL. Enter a value between 1 and 90. The default is 30.
	TtlAfterCompletionDays *int `pulumi:"ttlAfterCompletionDays"`
}

// The set of arguments for constructing a Job resource.
type JobArgs struct {
	// The processing priority of a batch job. This field can only be set for batch mode jobs. The default value is 0. This value cannot be negative. Higher values correspond to higher priorities for the job.
	BatchModePriority pulumi.IntPtrInput
	// The configuration for this job.
	Config JobConfigPtrInput
	// Input only. Specify the `input_uri` to populate empty `uri` fields in each element of `Job.config.inputs` or `JobTemplate.config.inputs` when using template. URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`). See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).
	InputUri pulumi.StringPtrInput
	// The labels associated with this job. You can use these to organize and group your jobs.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// The processing mode of the job. The default is `PROCESSING_MODE_INTERACTIVE`.
	Mode JobModePtrInput
	// The resource name of the job. Format: `projects/{project_number}/locations/{location}/jobs/{job}`
	Name pulumi.StringPtrInput
	// Optional. The optimization strategy of the job. The default is `AUTODETECT`.
	Optimization JobOptimizationPtrInput
	// Input only. Specify the `output_uri` to populate an empty `Job.config.output.uri` or `JobTemplate.config.output.uri` when using template. URI for the output file(s). For example, `gs://my-bucket/outputs/`. See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).
	OutputUri pulumi.StringPtrInput
	Project   pulumi.StringPtrInput
	// Input only. Specify the `template_id` to use for populating `Job.config`. The default is `preset/web-hd`, which is the only supported preset. User defined JobTemplate: `{job_template_id}`
	TemplateId pulumi.StringPtrInput
	// Job time to live value in days, which will be effective after job completion. Job should be deleted automatically after the given TTL. Enter a value between 1 and 90. The default is 30.
	TtlAfterCompletionDays pulumi.IntPtrInput
}

func (JobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobArgs)(nil)).Elem()
}

type JobInput interface {
	pulumi.Input

	ToJobOutput() JobOutput
	ToJobOutputWithContext(ctx context.Context) JobOutput
}

func (*Job) ElementType() reflect.Type {
	return reflect.TypeOf((**Job)(nil)).Elem()
}

func (i *Job) ToJobOutput() JobOutput {
	return i.ToJobOutputWithContext(context.Background())
}

func (i *Job) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobOutput)
}

type JobOutput struct{ *pulumi.OutputState }

func (JobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Job)(nil)).Elem()
}

func (o JobOutput) ToJobOutput() JobOutput {
	return o
}

func (o JobOutput) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return o
}

// The processing priority of a batch job. This field can only be set for batch mode jobs. The default value is 0. This value cannot be negative. Higher values correspond to higher priorities for the job.
func (o JobOutput) BatchModePriority() pulumi.IntOutput {
	return o.ApplyT(func(v *Job) pulumi.IntOutput { return v.BatchModePriority }).(pulumi.IntOutput)
}

// The configuration for this job.
func (o JobOutput) Config() JobConfigResponseOutput {
	return o.ApplyT(func(v *Job) JobConfigResponseOutput { return v.Config }).(JobConfigResponseOutput)
}

// The time the job was created.
func (o JobOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The time the transcoding finished.
func (o JobOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.EndTime }).(pulumi.StringOutput)
}

// An error object that describes the reason for the failure. This property is always present when ProcessingState is `FAILED`.
func (o JobOutput) Error() StatusResponseOutput {
	return o.ApplyT(func(v *Job) StatusResponseOutput { return v.Error }).(StatusResponseOutput)
}

// Input only. Specify the `input_uri` to populate empty `uri` fields in each element of `Job.config.inputs` or `JobTemplate.config.inputs` when using template. URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`). See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).
func (o JobOutput) InputUri() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.InputUri }).(pulumi.StringOutput)
}

// The labels associated with this job. You can use these to organize and group your jobs.
func (o JobOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Job) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o JobOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The processing mode of the job. The default is `PROCESSING_MODE_INTERACTIVE`.
func (o JobOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

// The resource name of the job. Format: `projects/{project_number}/locations/{location}/jobs/{job}`
func (o JobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional. The optimization strategy of the job. The default is `AUTODETECT`.
func (o JobOutput) Optimization() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Optimization }).(pulumi.StringOutput)
}

// Input only. Specify the `output_uri` to populate an empty `Job.config.output.uri` or `JobTemplate.config.output.uri` when using template. URI for the output file(s). For example, `gs://my-bucket/outputs/`. See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).
func (o JobOutput) OutputUri() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.OutputUri }).(pulumi.StringOutput)
}

func (o JobOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The time the transcoding started.
func (o JobOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.StartTime }).(pulumi.StringOutput)
}

// The current state of the job.
func (o JobOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Input only. Specify the `template_id` to use for populating `Job.config`. The default is `preset/web-hd`, which is the only supported preset. User defined JobTemplate: `{job_template_id}`
func (o JobOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.TemplateId }).(pulumi.StringOutput)
}

// Job time to live value in days, which will be effective after job completion. Job should be deleted automatically after the given TTL. Enter a value between 1 and 90. The default is 30.
func (o JobOutput) TtlAfterCompletionDays() pulumi.IntOutput {
	return o.ApplyT(func(v *Job) pulumi.IntOutput { return v.TtlAfterCompletionDays }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JobInput)(nil)).Elem(), &Job{})
	pulumi.RegisterOutputType(JobOutput{})
}
