// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the job template data.
func LookupJobTemplate(ctx *pulumi.Context, args *LookupJobTemplateArgs, opts ...pulumi.InvokeOption) (*LookupJobTemplateResult, error) {
	var rv LookupJobTemplateResult
	err := ctx.Invoke("google-native:transcoder/v1:getJobTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupJobTemplateArgs struct {
	JobTemplateId string  `pulumi:"jobTemplateId"`
	Location      string  `pulumi:"location"`
	Project       *string `pulumi:"project"`
}

type LookupJobTemplateResult struct {
	// The configuration for this template.
	Config JobConfigResponse `pulumi:"config"`
	// The resource name of the job template. Format: `projects/{project_number}/locations/{location}/jobTemplates/{job_template}`
	Name string `pulumi:"name"`
}

func LookupJobTemplateOutput(ctx *pulumi.Context, args LookupJobTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupJobTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupJobTemplateResult, error) {
			args := v.(LookupJobTemplateArgs)
			r, err := LookupJobTemplate(ctx, &args, opts...)
			var s LookupJobTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupJobTemplateResultOutput)
}

type LookupJobTemplateOutputArgs struct {
	JobTemplateId pulumi.StringInput    `pulumi:"jobTemplateId"`
	Location      pulumi.StringInput    `pulumi:"location"`
	Project       pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupJobTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobTemplateArgs)(nil)).Elem()
}

type LookupJobTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupJobTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobTemplateResult)(nil)).Elem()
}

func (o LookupJobTemplateResultOutput) ToLookupJobTemplateResultOutput() LookupJobTemplateResultOutput {
	return o
}

func (o LookupJobTemplateResultOutput) ToLookupJobTemplateResultOutputWithContext(ctx context.Context) LookupJobTemplateResultOutput {
	return o
}

// The configuration for this template.
func (o LookupJobTemplateResultOutput) Config() JobConfigResponseOutput {
	return o.ApplyT(func(v LookupJobTemplateResult) JobConfigResponse { return v.Config }).(JobConfigResponseOutput)
}

// The resource name of the job template. Format: `projects/{project_number}/locations/{location}/jobTemplates/{job_template}`
func (o LookupJobTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupJobTemplateResultOutput{})
}
