// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates an authorized orgs desc. The long-running operation from this RPC has a successful status after the authorized orgs desc propagates to long-lasting storage. If a authorized orgs desc contains errors, an error response is returned for the first error encountered. The name of this `AuthorizedOrgsDesc` will be assigned during creation.
type AuthorizedOrgsDesc struct {
	pulumi.CustomResourceState

	AccessPolicyId pulumi.StringOutput `pulumi:"accessPolicyId"`
	// The asset type of this authorized orgs desc. Valid values are `ASSET_TYPE_DEVICE`, and `ASSET_TYPE_CREDENTIAL_STRENGTH`.
	AssetType pulumi.StringOutput `pulumi:"assetType"`
	// The direction of the authorization relationship between this organization and the organizations listed in the `orgs` field. The valid values for this field include the following: `AUTHORIZATION_DIRECTION_FROM`: Allows this organization to evaluate traffic in the organizations listed in the `orgs` field. `AUTHORIZATION_DIRECTION_TO`: Allows the organizations listed in the `orgs` field to evaluate the traffic in this organization. For the authorization relationship to take effect, all of the organizations must authorize and specify the appropriate relationship direction. For example, if organization A authorized organization B and C to evaluate its traffic, by specifying `AUTHORIZATION_DIRECTION_TO` as the authorization direction, organizations B and C must specify `AUTHORIZATION_DIRECTION_FROM` as the authorization direction in their `AuthorizedOrgsDesc` resource.
	AuthorizationDirection pulumi.StringOutput `pulumi:"authorizationDirection"`
	// A granular control type for authorization levels. Valid value is `AUTHORIZATION_TYPE_TRUST`.
	AuthorizationType pulumi.StringOutput `pulumi:"authorizationType"`
	// Resource name for the `AuthorizedOrgsDesc`. Format: `accessPolicies/{access_policy}/authorizedOrgsDescs/{authorized_orgs_desc}`. The `authorized_orgs_desc` component must begin with a letter, followed by alphanumeric characters or `_`. After you create an `AuthorizedOrgsDesc`, you cannot change its `name`.
	Name pulumi.StringOutput `pulumi:"name"`
	// The list of organization ids in this AuthorizedOrgsDesc. Format: `organizations/` Example: `organizations/123456`
	Orgs pulumi.StringArrayOutput `pulumi:"orgs"`
}

// NewAuthorizedOrgsDesc registers a new resource with the given unique name, arguments, and options.
func NewAuthorizedOrgsDesc(ctx *pulumi.Context,
	name string, args *AuthorizedOrgsDescArgs, opts ...pulumi.ResourceOption) (*AuthorizedOrgsDesc, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'AccessPolicyId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"accessPolicyId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AuthorizedOrgsDesc
	err := ctx.RegisterResource("google-native:accesscontextmanager/v1:AuthorizedOrgsDesc", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorizedOrgsDesc gets an existing AuthorizedOrgsDesc resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorizedOrgsDesc(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizedOrgsDescState, opts ...pulumi.ResourceOption) (*AuthorizedOrgsDesc, error) {
	var resource AuthorizedOrgsDesc
	err := ctx.ReadResource("google-native:accesscontextmanager/v1:AuthorizedOrgsDesc", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthorizedOrgsDesc resources.
type authorizedOrgsDescState struct {
}

type AuthorizedOrgsDescState struct {
}

func (AuthorizedOrgsDescState) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizedOrgsDescState)(nil)).Elem()
}

type authorizedOrgsDescArgs struct {
	AccessPolicyId string `pulumi:"accessPolicyId"`
	// The asset type of this authorized orgs desc. Valid values are `ASSET_TYPE_DEVICE`, and `ASSET_TYPE_CREDENTIAL_STRENGTH`.
	AssetType *AuthorizedOrgsDescAssetType `pulumi:"assetType"`
	// The direction of the authorization relationship between this organization and the organizations listed in the `orgs` field. The valid values for this field include the following: `AUTHORIZATION_DIRECTION_FROM`: Allows this organization to evaluate traffic in the organizations listed in the `orgs` field. `AUTHORIZATION_DIRECTION_TO`: Allows the organizations listed in the `orgs` field to evaluate the traffic in this organization. For the authorization relationship to take effect, all of the organizations must authorize and specify the appropriate relationship direction. For example, if organization A authorized organization B and C to evaluate its traffic, by specifying `AUTHORIZATION_DIRECTION_TO` as the authorization direction, organizations B and C must specify `AUTHORIZATION_DIRECTION_FROM` as the authorization direction in their `AuthorizedOrgsDesc` resource.
	AuthorizationDirection *AuthorizedOrgsDescAuthorizationDirection `pulumi:"authorizationDirection"`
	// A granular control type for authorization levels. Valid value is `AUTHORIZATION_TYPE_TRUST`.
	AuthorizationType *AuthorizedOrgsDescAuthorizationType `pulumi:"authorizationType"`
	// Resource name for the `AuthorizedOrgsDesc`. Format: `accessPolicies/{access_policy}/authorizedOrgsDescs/{authorized_orgs_desc}`. The `authorized_orgs_desc` component must begin with a letter, followed by alphanumeric characters or `_`. After you create an `AuthorizedOrgsDesc`, you cannot change its `name`.
	Name *string `pulumi:"name"`
	// The list of organization ids in this AuthorizedOrgsDesc. Format: `organizations/` Example: `organizations/123456`
	Orgs []string `pulumi:"orgs"`
}

// The set of arguments for constructing a AuthorizedOrgsDesc resource.
type AuthorizedOrgsDescArgs struct {
	AccessPolicyId pulumi.StringInput
	// The asset type of this authorized orgs desc. Valid values are `ASSET_TYPE_DEVICE`, and `ASSET_TYPE_CREDENTIAL_STRENGTH`.
	AssetType AuthorizedOrgsDescAssetTypePtrInput
	// The direction of the authorization relationship between this organization and the organizations listed in the `orgs` field. The valid values for this field include the following: `AUTHORIZATION_DIRECTION_FROM`: Allows this organization to evaluate traffic in the organizations listed in the `orgs` field. `AUTHORIZATION_DIRECTION_TO`: Allows the organizations listed in the `orgs` field to evaluate the traffic in this organization. For the authorization relationship to take effect, all of the organizations must authorize and specify the appropriate relationship direction. For example, if organization A authorized organization B and C to evaluate its traffic, by specifying `AUTHORIZATION_DIRECTION_TO` as the authorization direction, organizations B and C must specify `AUTHORIZATION_DIRECTION_FROM` as the authorization direction in their `AuthorizedOrgsDesc` resource.
	AuthorizationDirection AuthorizedOrgsDescAuthorizationDirectionPtrInput
	// A granular control type for authorization levels. Valid value is `AUTHORIZATION_TYPE_TRUST`.
	AuthorizationType AuthorizedOrgsDescAuthorizationTypePtrInput
	// Resource name for the `AuthorizedOrgsDesc`. Format: `accessPolicies/{access_policy}/authorizedOrgsDescs/{authorized_orgs_desc}`. The `authorized_orgs_desc` component must begin with a letter, followed by alphanumeric characters or `_`. After you create an `AuthorizedOrgsDesc`, you cannot change its `name`.
	Name pulumi.StringPtrInput
	// The list of organization ids in this AuthorizedOrgsDesc. Format: `organizations/` Example: `organizations/123456`
	Orgs pulumi.StringArrayInput
}

func (AuthorizedOrgsDescArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizedOrgsDescArgs)(nil)).Elem()
}

type AuthorizedOrgsDescInput interface {
	pulumi.Input

	ToAuthorizedOrgsDescOutput() AuthorizedOrgsDescOutput
	ToAuthorizedOrgsDescOutputWithContext(ctx context.Context) AuthorizedOrgsDescOutput
}

func (*AuthorizedOrgsDesc) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizedOrgsDesc)(nil)).Elem()
}

func (i *AuthorizedOrgsDesc) ToAuthorizedOrgsDescOutput() AuthorizedOrgsDescOutput {
	return i.ToAuthorizedOrgsDescOutputWithContext(context.Background())
}

func (i *AuthorizedOrgsDesc) ToAuthorizedOrgsDescOutputWithContext(ctx context.Context) AuthorizedOrgsDescOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizedOrgsDescOutput)
}

func (i *AuthorizedOrgsDesc) ToOutput(ctx context.Context) pulumix.Output[*AuthorizedOrgsDesc] {
	return pulumix.Output[*AuthorizedOrgsDesc]{
		OutputState: i.ToAuthorizedOrgsDescOutputWithContext(ctx).OutputState,
	}
}

type AuthorizedOrgsDescOutput struct{ *pulumi.OutputState }

func (AuthorizedOrgsDescOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizedOrgsDesc)(nil)).Elem()
}

func (o AuthorizedOrgsDescOutput) ToAuthorizedOrgsDescOutput() AuthorizedOrgsDescOutput {
	return o
}

func (o AuthorizedOrgsDescOutput) ToAuthorizedOrgsDescOutputWithContext(ctx context.Context) AuthorizedOrgsDescOutput {
	return o
}

func (o AuthorizedOrgsDescOutput) ToOutput(ctx context.Context) pulumix.Output[*AuthorizedOrgsDesc] {
	return pulumix.Output[*AuthorizedOrgsDesc]{
		OutputState: o.OutputState,
	}
}

func (o AuthorizedOrgsDescOutput) AccessPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizedOrgsDesc) pulumi.StringOutput { return v.AccessPolicyId }).(pulumi.StringOutput)
}

// The asset type of this authorized orgs desc. Valid values are `ASSET_TYPE_DEVICE`, and `ASSET_TYPE_CREDENTIAL_STRENGTH`.
func (o AuthorizedOrgsDescOutput) AssetType() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizedOrgsDesc) pulumi.StringOutput { return v.AssetType }).(pulumi.StringOutput)
}

// The direction of the authorization relationship between this organization and the organizations listed in the `orgs` field. The valid values for this field include the following: `AUTHORIZATION_DIRECTION_FROM`: Allows this organization to evaluate traffic in the organizations listed in the `orgs` field. `AUTHORIZATION_DIRECTION_TO`: Allows the organizations listed in the `orgs` field to evaluate the traffic in this organization. For the authorization relationship to take effect, all of the organizations must authorize and specify the appropriate relationship direction. For example, if organization A authorized organization B and C to evaluate its traffic, by specifying `AUTHORIZATION_DIRECTION_TO` as the authorization direction, organizations B and C must specify `AUTHORIZATION_DIRECTION_FROM` as the authorization direction in their `AuthorizedOrgsDesc` resource.
func (o AuthorizedOrgsDescOutput) AuthorizationDirection() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizedOrgsDesc) pulumi.StringOutput { return v.AuthorizationDirection }).(pulumi.StringOutput)
}

// A granular control type for authorization levels. Valid value is `AUTHORIZATION_TYPE_TRUST`.
func (o AuthorizedOrgsDescOutput) AuthorizationType() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizedOrgsDesc) pulumi.StringOutput { return v.AuthorizationType }).(pulumi.StringOutput)
}

// Resource name for the `AuthorizedOrgsDesc`. Format: `accessPolicies/{access_policy}/authorizedOrgsDescs/{authorized_orgs_desc}`. The `authorized_orgs_desc` component must begin with a letter, followed by alphanumeric characters or `_`. After you create an `AuthorizedOrgsDesc`, you cannot change its `name`.
func (o AuthorizedOrgsDescOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizedOrgsDesc) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The list of organization ids in this AuthorizedOrgsDesc. Format: `organizations/` Example: `organizations/123456`
func (o AuthorizedOrgsDescOutput) Orgs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizedOrgsDesc) pulumi.StringArrayOutput { return v.Orgs }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizedOrgsDescInput)(nil)).Elem(), &AuthorizedOrgsDesc{})
	pulumi.RegisterOutputType(AuthorizedOrgsDescOutput{})
}
