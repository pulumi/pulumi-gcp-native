// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an access level. The long-running operation from this RPC has a successful status after the access level propagates to long-lasting storage. If access levels contain errors, an error response is returned for the first error encountered.
type AccessLevel struct {
	pulumi.CustomResourceState

	AccessPolicyId pulumi.StringOutput `pulumi:"accessPolicyId"`
	// A `BasicLevel` composed of `Conditions`.
	Basic BasicLevelResponseOutput `pulumi:"basic"`
	// A `CustomLevel` written in the Common Expression Language.
	Custom CustomLevelResponseOutput `pulumi:"custom"`
	// Description of the `AccessLevel` and its use. Does not affect behavior.
	Description pulumi.StringOutput `pulumi:"description"`
	// Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{access_policy}/accessLevels/{access_level}`. The maximum length of the `access_level` component is 50 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// Human readable title. Must be unique within the Policy.
	Title pulumi.StringOutput `pulumi:"title"`
}

// NewAccessLevel registers a new resource with the given unique name, arguments, and options.
func NewAccessLevel(ctx *pulumi.Context,
	name string, args *AccessLevelArgs, opts ...pulumi.ResourceOption) (*AccessLevel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'AccessPolicyId'")
	}
	var resource AccessLevel
	err := ctx.RegisterResource("google-native:accesscontextmanager/v1:AccessLevel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessLevel gets an existing AccessLevel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessLevel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessLevelState, opts ...pulumi.ResourceOption) (*AccessLevel, error) {
	var resource AccessLevel
	err := ctx.ReadResource("google-native:accesscontextmanager/v1:AccessLevel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessLevel resources.
type accessLevelState struct {
}

type AccessLevelState struct {
}

func (AccessLevelState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessLevelState)(nil)).Elem()
}

type accessLevelArgs struct {
	AccessPolicyId string `pulumi:"accessPolicyId"`
	// A `BasicLevel` composed of `Conditions`.
	Basic *BasicLevel `pulumi:"basic"`
	// A `CustomLevel` written in the Common Expression Language.
	Custom *CustomLevel `pulumi:"custom"`
	// Description of the `AccessLevel` and its use. Does not affect behavior.
	Description *string `pulumi:"description"`
	// Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{access_policy}/accessLevels/{access_level}`. The maximum length of the `access_level` component is 50 characters.
	Name *string `pulumi:"name"`
	// Human readable title. Must be unique within the Policy.
	Title *string `pulumi:"title"`
}

// The set of arguments for constructing a AccessLevel resource.
type AccessLevelArgs struct {
	AccessPolicyId pulumi.StringInput
	// A `BasicLevel` composed of `Conditions`.
	Basic BasicLevelPtrInput
	// A `CustomLevel` written in the Common Expression Language.
	Custom CustomLevelPtrInput
	// Description of the `AccessLevel` and its use. Does not affect behavior.
	Description pulumi.StringPtrInput
	// Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{access_policy}/accessLevels/{access_level}`. The maximum length of the `access_level` component is 50 characters.
	Name pulumi.StringPtrInput
	// Human readable title. Must be unique within the Policy.
	Title pulumi.StringPtrInput
}

func (AccessLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessLevelArgs)(nil)).Elem()
}

type AccessLevelInput interface {
	pulumi.Input

	ToAccessLevelOutput() AccessLevelOutput
	ToAccessLevelOutputWithContext(ctx context.Context) AccessLevelOutput
}

func (*AccessLevel) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessLevel)(nil)).Elem()
}

func (i *AccessLevel) ToAccessLevelOutput() AccessLevelOutput {
	return i.ToAccessLevelOutputWithContext(context.Background())
}

func (i *AccessLevel) ToAccessLevelOutputWithContext(ctx context.Context) AccessLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelOutput)
}

type AccessLevelOutput struct{ *pulumi.OutputState }

func (AccessLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessLevel)(nil)).Elem()
}

func (o AccessLevelOutput) ToAccessLevelOutput() AccessLevelOutput {
	return o
}

func (o AccessLevelOutput) ToAccessLevelOutputWithContext(ctx context.Context) AccessLevelOutput {
	return o
}

func (o AccessLevelOutput) AccessPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessLevel) pulumi.StringOutput { return v.AccessPolicyId }).(pulumi.StringOutput)
}

// A `BasicLevel` composed of `Conditions`.
func (o AccessLevelOutput) Basic() BasicLevelResponseOutput {
	return o.ApplyT(func(v *AccessLevel) BasicLevelResponseOutput { return v.Basic }).(BasicLevelResponseOutput)
}

// A `CustomLevel` written in the Common Expression Language.
func (o AccessLevelOutput) Custom() CustomLevelResponseOutput {
	return o.ApplyT(func(v *AccessLevel) CustomLevelResponseOutput { return v.Custom }).(CustomLevelResponseOutput)
}

// Description of the `AccessLevel` and its use. Does not affect behavior.
func (o AccessLevelOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessLevel) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{access_policy}/accessLevels/{access_level}`. The maximum length of the `access_level` component is 50 characters.
func (o AccessLevelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessLevel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Human readable title. Must be unique within the Policy.
func (o AccessLevelOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessLevel) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessLevelInput)(nil)).Elem(), &AccessLevel{})
	pulumi.RegisterOutputType(AccessLevelOutput{})
}
