// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts AuditLogConfigLogTypeArgs and AuditLogConfigLogTypeOutput values.
// You can construct a concrete instance of `AuditLogConfigLogTypeInput` via:
//
//          AuditLogConfigLogTypeArgs{...}
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

// How the `conditions` list should be combined to determine if a request is granted this `AccessLevel`. If AND is used, each `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. If OR is used, at least one `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. Default behavior is AND.
type BasicLevelCombiningFunction string

const (
	// All `Conditions` must be true for the `BasicLevel` to be true.
	BasicLevelCombiningFunctionAnd = BasicLevelCombiningFunction("AND")
	// If at least one `Condition` is true, then the `BasicLevel` is true.
	BasicLevelCombiningFunctionOr = BasicLevelCombiningFunction("OR")
)

func (BasicLevelCombiningFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicLevelCombiningFunction)(nil)).Elem()
}

func (e BasicLevelCombiningFunction) ToBasicLevelCombiningFunctionOutput() BasicLevelCombiningFunctionOutput {
	return pulumi.ToOutput(e).(BasicLevelCombiningFunctionOutput)
}

func (e BasicLevelCombiningFunction) ToBasicLevelCombiningFunctionOutputWithContext(ctx context.Context) BasicLevelCombiningFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BasicLevelCombiningFunctionOutput)
}

func (e BasicLevelCombiningFunction) ToBasicLevelCombiningFunctionPtrOutput() BasicLevelCombiningFunctionPtrOutput {
	return e.ToBasicLevelCombiningFunctionPtrOutputWithContext(context.Background())
}

func (e BasicLevelCombiningFunction) ToBasicLevelCombiningFunctionPtrOutputWithContext(ctx context.Context) BasicLevelCombiningFunctionPtrOutput {
	return BasicLevelCombiningFunction(e).ToBasicLevelCombiningFunctionOutputWithContext(ctx).ToBasicLevelCombiningFunctionPtrOutputWithContext(ctx)
}

func (e BasicLevelCombiningFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BasicLevelCombiningFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BasicLevelCombiningFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BasicLevelCombiningFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BasicLevelCombiningFunctionOutput struct{ *pulumi.OutputState }

func (BasicLevelCombiningFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicLevelCombiningFunction)(nil)).Elem()
}

func (o BasicLevelCombiningFunctionOutput) ToBasicLevelCombiningFunctionOutput() BasicLevelCombiningFunctionOutput {
	return o
}

func (o BasicLevelCombiningFunctionOutput) ToBasicLevelCombiningFunctionOutputWithContext(ctx context.Context) BasicLevelCombiningFunctionOutput {
	return o
}

func (o BasicLevelCombiningFunctionOutput) ToBasicLevelCombiningFunctionPtrOutput() BasicLevelCombiningFunctionPtrOutput {
	return o.ToBasicLevelCombiningFunctionPtrOutputWithContext(context.Background())
}

func (o BasicLevelCombiningFunctionOutput) ToBasicLevelCombiningFunctionPtrOutputWithContext(ctx context.Context) BasicLevelCombiningFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BasicLevelCombiningFunction) *BasicLevelCombiningFunction {
		return &v
	}).(BasicLevelCombiningFunctionPtrOutput)
}

func (o BasicLevelCombiningFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BasicLevelCombiningFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BasicLevelCombiningFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BasicLevelCombiningFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BasicLevelCombiningFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BasicLevelCombiningFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BasicLevelCombiningFunctionPtrOutput struct{ *pulumi.OutputState }

func (BasicLevelCombiningFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BasicLevelCombiningFunction)(nil)).Elem()
}

func (o BasicLevelCombiningFunctionPtrOutput) ToBasicLevelCombiningFunctionPtrOutput() BasicLevelCombiningFunctionPtrOutput {
	return o
}

func (o BasicLevelCombiningFunctionPtrOutput) ToBasicLevelCombiningFunctionPtrOutputWithContext(ctx context.Context) BasicLevelCombiningFunctionPtrOutput {
	return o
}

func (o BasicLevelCombiningFunctionPtrOutput) Elem() BasicLevelCombiningFunctionOutput {
	return o.ApplyT(func(v *BasicLevelCombiningFunction) BasicLevelCombiningFunction {
		if v != nil {
			return *v
		}
		var ret BasicLevelCombiningFunction
		return ret
	}).(BasicLevelCombiningFunctionOutput)
}

func (o BasicLevelCombiningFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BasicLevelCombiningFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BasicLevelCombiningFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BasicLevelCombiningFunctionInput is an input type that accepts BasicLevelCombiningFunctionArgs and BasicLevelCombiningFunctionOutput values.
// You can construct a concrete instance of `BasicLevelCombiningFunctionInput` via:
//
//          BasicLevelCombiningFunctionArgs{...}
type BasicLevelCombiningFunctionInput interface {
	pulumi.Input

	ToBasicLevelCombiningFunctionOutput() BasicLevelCombiningFunctionOutput
	ToBasicLevelCombiningFunctionOutputWithContext(context.Context) BasicLevelCombiningFunctionOutput
}

var basicLevelCombiningFunctionPtrType = reflect.TypeOf((**BasicLevelCombiningFunction)(nil)).Elem()

type BasicLevelCombiningFunctionPtrInput interface {
	pulumi.Input

	ToBasicLevelCombiningFunctionPtrOutput() BasicLevelCombiningFunctionPtrOutput
	ToBasicLevelCombiningFunctionPtrOutputWithContext(context.Context) BasicLevelCombiningFunctionPtrOutput
}

type basicLevelCombiningFunctionPtr string

func BasicLevelCombiningFunctionPtr(v string) BasicLevelCombiningFunctionPtrInput {
	return (*basicLevelCombiningFunctionPtr)(&v)
}

func (*basicLevelCombiningFunctionPtr) ElementType() reflect.Type {
	return basicLevelCombiningFunctionPtrType
}

func (in *basicLevelCombiningFunctionPtr) ToBasicLevelCombiningFunctionPtrOutput() BasicLevelCombiningFunctionPtrOutput {
	return pulumi.ToOutput(in).(BasicLevelCombiningFunctionPtrOutput)
}

func (in *basicLevelCombiningFunctionPtr) ToBasicLevelCombiningFunctionPtrOutputWithContext(ctx context.Context) BasicLevelCombiningFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BasicLevelCombiningFunctionPtrOutput)
}

type DevicePolicyAllowedDeviceManagementLevelsItem string

const (
	// The device's management level is not specified or not known.
	DevicePolicyAllowedDeviceManagementLevelsItemManagementUnspecified = DevicePolicyAllowedDeviceManagementLevelsItem("MANAGEMENT_UNSPECIFIED")
	// The device is not managed.
	DevicePolicyAllowedDeviceManagementLevelsItemNone = DevicePolicyAllowedDeviceManagementLevelsItem("NONE")
	// Basic management is enabled, which is generally limited to monitoring and wiping the corporate account.
	DevicePolicyAllowedDeviceManagementLevelsItemBasic = DevicePolicyAllowedDeviceManagementLevelsItem("BASIC")
	// Complete device management. This includes more thorough monitoring and the ability to directly manage the device (such as remote wiping). This can be enabled through the Android Enterprise Platform.
	DevicePolicyAllowedDeviceManagementLevelsItemComplete = DevicePolicyAllowedDeviceManagementLevelsItem("COMPLETE")
)

func (DevicePolicyAllowedDeviceManagementLevelsItem) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePolicyAllowedDeviceManagementLevelsItem)(nil)).Elem()
}

func (e DevicePolicyAllowedDeviceManagementLevelsItem) ToDevicePolicyAllowedDeviceManagementLevelsItemOutput() DevicePolicyAllowedDeviceManagementLevelsItemOutput {
	return pulumi.ToOutput(e).(DevicePolicyAllowedDeviceManagementLevelsItemOutput)
}

func (e DevicePolicyAllowedDeviceManagementLevelsItem) ToDevicePolicyAllowedDeviceManagementLevelsItemOutputWithContext(ctx context.Context) DevicePolicyAllowedDeviceManagementLevelsItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DevicePolicyAllowedDeviceManagementLevelsItemOutput)
}

func (e DevicePolicyAllowedDeviceManagementLevelsItem) ToDevicePolicyAllowedDeviceManagementLevelsItemPtrOutput() DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput {
	return e.ToDevicePolicyAllowedDeviceManagementLevelsItemPtrOutputWithContext(context.Background())
}

func (e DevicePolicyAllowedDeviceManagementLevelsItem) ToDevicePolicyAllowedDeviceManagementLevelsItemPtrOutputWithContext(ctx context.Context) DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput {
	return DevicePolicyAllowedDeviceManagementLevelsItem(e).ToDevicePolicyAllowedDeviceManagementLevelsItemOutputWithContext(ctx).ToDevicePolicyAllowedDeviceManagementLevelsItemPtrOutputWithContext(ctx)
}

func (e DevicePolicyAllowedDeviceManagementLevelsItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DevicePolicyAllowedDeviceManagementLevelsItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DevicePolicyAllowedDeviceManagementLevelsItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DevicePolicyAllowedDeviceManagementLevelsItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DevicePolicyAllowedDeviceManagementLevelsItemOutput struct{ *pulumi.OutputState }

func (DevicePolicyAllowedDeviceManagementLevelsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePolicyAllowedDeviceManagementLevelsItem)(nil)).Elem()
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemOutput) ToDevicePolicyAllowedDeviceManagementLevelsItemOutput() DevicePolicyAllowedDeviceManagementLevelsItemOutput {
	return o
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemOutput) ToDevicePolicyAllowedDeviceManagementLevelsItemOutputWithContext(ctx context.Context) DevicePolicyAllowedDeviceManagementLevelsItemOutput {
	return o
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemOutput) ToDevicePolicyAllowedDeviceManagementLevelsItemPtrOutput() DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput {
	return o.ToDevicePolicyAllowedDeviceManagementLevelsItemPtrOutputWithContext(context.Background())
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemOutput) ToDevicePolicyAllowedDeviceManagementLevelsItemPtrOutputWithContext(ctx context.Context) DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevicePolicyAllowedDeviceManagementLevelsItem) *DevicePolicyAllowedDeviceManagementLevelsItem {
		return &v
	}).(DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput)
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DevicePolicyAllowedDeviceManagementLevelsItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DevicePolicyAllowedDeviceManagementLevelsItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput struct{ *pulumi.OutputState }

func (DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevicePolicyAllowedDeviceManagementLevelsItem)(nil)).Elem()
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput) ToDevicePolicyAllowedDeviceManagementLevelsItemPtrOutput() DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput {
	return o
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput) ToDevicePolicyAllowedDeviceManagementLevelsItemPtrOutputWithContext(ctx context.Context) DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput {
	return o
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput) Elem() DevicePolicyAllowedDeviceManagementLevelsItemOutput {
	return o.ApplyT(func(v *DevicePolicyAllowedDeviceManagementLevelsItem) DevicePolicyAllowedDeviceManagementLevelsItem {
		if v != nil {
			return *v
		}
		var ret DevicePolicyAllowedDeviceManagementLevelsItem
		return ret
	}).(DevicePolicyAllowedDeviceManagementLevelsItemOutput)
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DevicePolicyAllowedDeviceManagementLevelsItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DevicePolicyAllowedDeviceManagementLevelsItemInput is an input type that accepts DevicePolicyAllowedDeviceManagementLevelsItemArgs and DevicePolicyAllowedDeviceManagementLevelsItemOutput values.
// You can construct a concrete instance of `DevicePolicyAllowedDeviceManagementLevelsItemInput` via:
//
//          DevicePolicyAllowedDeviceManagementLevelsItemArgs{...}
type DevicePolicyAllowedDeviceManagementLevelsItemInput interface {
	pulumi.Input

	ToDevicePolicyAllowedDeviceManagementLevelsItemOutput() DevicePolicyAllowedDeviceManagementLevelsItemOutput
	ToDevicePolicyAllowedDeviceManagementLevelsItemOutputWithContext(context.Context) DevicePolicyAllowedDeviceManagementLevelsItemOutput
}

var devicePolicyAllowedDeviceManagementLevelsItemPtrType = reflect.TypeOf((**DevicePolicyAllowedDeviceManagementLevelsItem)(nil)).Elem()

type DevicePolicyAllowedDeviceManagementLevelsItemPtrInput interface {
	pulumi.Input

	ToDevicePolicyAllowedDeviceManagementLevelsItemPtrOutput() DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput
	ToDevicePolicyAllowedDeviceManagementLevelsItemPtrOutputWithContext(context.Context) DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput
}

type devicePolicyAllowedDeviceManagementLevelsItemPtr string

func DevicePolicyAllowedDeviceManagementLevelsItemPtr(v string) DevicePolicyAllowedDeviceManagementLevelsItemPtrInput {
	return (*devicePolicyAllowedDeviceManagementLevelsItemPtr)(&v)
}

func (*devicePolicyAllowedDeviceManagementLevelsItemPtr) ElementType() reflect.Type {
	return devicePolicyAllowedDeviceManagementLevelsItemPtrType
}

func (in *devicePolicyAllowedDeviceManagementLevelsItemPtr) ToDevicePolicyAllowedDeviceManagementLevelsItemPtrOutput() DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput {
	return pulumi.ToOutput(in).(DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput)
}

func (in *devicePolicyAllowedDeviceManagementLevelsItemPtr) ToDevicePolicyAllowedDeviceManagementLevelsItemPtrOutputWithContext(ctx context.Context) DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput)
}

// DevicePolicyAllowedDeviceManagementLevelsItemArrayInput is an input type that accepts DevicePolicyAllowedDeviceManagementLevelsItemArray and DevicePolicyAllowedDeviceManagementLevelsItemArrayOutput values.
// You can construct a concrete instance of `DevicePolicyAllowedDeviceManagementLevelsItemArrayInput` via:
//
//          DevicePolicyAllowedDeviceManagementLevelsItemArray{ DevicePolicyAllowedDeviceManagementLevelsItemArgs{...} }
type DevicePolicyAllowedDeviceManagementLevelsItemArrayInput interface {
	pulumi.Input

	ToDevicePolicyAllowedDeviceManagementLevelsItemArrayOutput() DevicePolicyAllowedDeviceManagementLevelsItemArrayOutput
	ToDevicePolicyAllowedDeviceManagementLevelsItemArrayOutputWithContext(context.Context) DevicePolicyAllowedDeviceManagementLevelsItemArrayOutput
}

type DevicePolicyAllowedDeviceManagementLevelsItemArray []DevicePolicyAllowedDeviceManagementLevelsItem

func (DevicePolicyAllowedDeviceManagementLevelsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevicePolicyAllowedDeviceManagementLevelsItem)(nil)).Elem()
}

func (i DevicePolicyAllowedDeviceManagementLevelsItemArray) ToDevicePolicyAllowedDeviceManagementLevelsItemArrayOutput() DevicePolicyAllowedDeviceManagementLevelsItemArrayOutput {
	return i.ToDevicePolicyAllowedDeviceManagementLevelsItemArrayOutputWithContext(context.Background())
}

func (i DevicePolicyAllowedDeviceManagementLevelsItemArray) ToDevicePolicyAllowedDeviceManagementLevelsItemArrayOutputWithContext(ctx context.Context) DevicePolicyAllowedDeviceManagementLevelsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePolicyAllowedDeviceManagementLevelsItemArrayOutput)
}

type DevicePolicyAllowedDeviceManagementLevelsItemArrayOutput struct{ *pulumi.OutputState }

func (DevicePolicyAllowedDeviceManagementLevelsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevicePolicyAllowedDeviceManagementLevelsItem)(nil)).Elem()
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemArrayOutput) ToDevicePolicyAllowedDeviceManagementLevelsItemArrayOutput() DevicePolicyAllowedDeviceManagementLevelsItemArrayOutput {
	return o
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemArrayOutput) ToDevicePolicyAllowedDeviceManagementLevelsItemArrayOutputWithContext(ctx context.Context) DevicePolicyAllowedDeviceManagementLevelsItemArrayOutput {
	return o
}

func (o DevicePolicyAllowedDeviceManagementLevelsItemArrayOutput) Index(i pulumi.IntInput) DevicePolicyAllowedDeviceManagementLevelsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DevicePolicyAllowedDeviceManagementLevelsItem {
		return vs[0].([]DevicePolicyAllowedDeviceManagementLevelsItem)[vs[1].(int)]
	}).(DevicePolicyAllowedDeviceManagementLevelsItemOutput)
}

type DevicePolicyAllowedEncryptionStatusesItem string

const (
	// The encryption status of the device is not specified or not known.
	DevicePolicyAllowedEncryptionStatusesItemEncryptionUnspecified = DevicePolicyAllowedEncryptionStatusesItem("ENCRYPTION_UNSPECIFIED")
	// The device does not support encryption.
	DevicePolicyAllowedEncryptionStatusesItemEncryptionUnsupported = DevicePolicyAllowedEncryptionStatusesItem("ENCRYPTION_UNSUPPORTED")
	// The device supports encryption, but is currently unencrypted.
	DevicePolicyAllowedEncryptionStatusesItemUnencrypted = DevicePolicyAllowedEncryptionStatusesItem("UNENCRYPTED")
	// The device is encrypted.
	DevicePolicyAllowedEncryptionStatusesItemEncrypted = DevicePolicyAllowedEncryptionStatusesItem("ENCRYPTED")
)

func (DevicePolicyAllowedEncryptionStatusesItem) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePolicyAllowedEncryptionStatusesItem)(nil)).Elem()
}

func (e DevicePolicyAllowedEncryptionStatusesItem) ToDevicePolicyAllowedEncryptionStatusesItemOutput() DevicePolicyAllowedEncryptionStatusesItemOutput {
	return pulumi.ToOutput(e).(DevicePolicyAllowedEncryptionStatusesItemOutput)
}

func (e DevicePolicyAllowedEncryptionStatusesItem) ToDevicePolicyAllowedEncryptionStatusesItemOutputWithContext(ctx context.Context) DevicePolicyAllowedEncryptionStatusesItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DevicePolicyAllowedEncryptionStatusesItemOutput)
}

func (e DevicePolicyAllowedEncryptionStatusesItem) ToDevicePolicyAllowedEncryptionStatusesItemPtrOutput() DevicePolicyAllowedEncryptionStatusesItemPtrOutput {
	return e.ToDevicePolicyAllowedEncryptionStatusesItemPtrOutputWithContext(context.Background())
}

func (e DevicePolicyAllowedEncryptionStatusesItem) ToDevicePolicyAllowedEncryptionStatusesItemPtrOutputWithContext(ctx context.Context) DevicePolicyAllowedEncryptionStatusesItemPtrOutput {
	return DevicePolicyAllowedEncryptionStatusesItem(e).ToDevicePolicyAllowedEncryptionStatusesItemOutputWithContext(ctx).ToDevicePolicyAllowedEncryptionStatusesItemPtrOutputWithContext(ctx)
}

func (e DevicePolicyAllowedEncryptionStatusesItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DevicePolicyAllowedEncryptionStatusesItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DevicePolicyAllowedEncryptionStatusesItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DevicePolicyAllowedEncryptionStatusesItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DevicePolicyAllowedEncryptionStatusesItemOutput struct{ *pulumi.OutputState }

func (DevicePolicyAllowedEncryptionStatusesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePolicyAllowedEncryptionStatusesItem)(nil)).Elem()
}

func (o DevicePolicyAllowedEncryptionStatusesItemOutput) ToDevicePolicyAllowedEncryptionStatusesItemOutput() DevicePolicyAllowedEncryptionStatusesItemOutput {
	return o
}

func (o DevicePolicyAllowedEncryptionStatusesItemOutput) ToDevicePolicyAllowedEncryptionStatusesItemOutputWithContext(ctx context.Context) DevicePolicyAllowedEncryptionStatusesItemOutput {
	return o
}

func (o DevicePolicyAllowedEncryptionStatusesItemOutput) ToDevicePolicyAllowedEncryptionStatusesItemPtrOutput() DevicePolicyAllowedEncryptionStatusesItemPtrOutput {
	return o.ToDevicePolicyAllowedEncryptionStatusesItemPtrOutputWithContext(context.Background())
}

func (o DevicePolicyAllowedEncryptionStatusesItemOutput) ToDevicePolicyAllowedEncryptionStatusesItemPtrOutputWithContext(ctx context.Context) DevicePolicyAllowedEncryptionStatusesItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevicePolicyAllowedEncryptionStatusesItem) *DevicePolicyAllowedEncryptionStatusesItem {
		return &v
	}).(DevicePolicyAllowedEncryptionStatusesItemPtrOutput)
}

func (o DevicePolicyAllowedEncryptionStatusesItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DevicePolicyAllowedEncryptionStatusesItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DevicePolicyAllowedEncryptionStatusesItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DevicePolicyAllowedEncryptionStatusesItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DevicePolicyAllowedEncryptionStatusesItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DevicePolicyAllowedEncryptionStatusesItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DevicePolicyAllowedEncryptionStatusesItemPtrOutput struct{ *pulumi.OutputState }

func (DevicePolicyAllowedEncryptionStatusesItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevicePolicyAllowedEncryptionStatusesItem)(nil)).Elem()
}

func (o DevicePolicyAllowedEncryptionStatusesItemPtrOutput) ToDevicePolicyAllowedEncryptionStatusesItemPtrOutput() DevicePolicyAllowedEncryptionStatusesItemPtrOutput {
	return o
}

func (o DevicePolicyAllowedEncryptionStatusesItemPtrOutput) ToDevicePolicyAllowedEncryptionStatusesItemPtrOutputWithContext(ctx context.Context) DevicePolicyAllowedEncryptionStatusesItemPtrOutput {
	return o
}

func (o DevicePolicyAllowedEncryptionStatusesItemPtrOutput) Elem() DevicePolicyAllowedEncryptionStatusesItemOutput {
	return o.ApplyT(func(v *DevicePolicyAllowedEncryptionStatusesItem) DevicePolicyAllowedEncryptionStatusesItem {
		if v != nil {
			return *v
		}
		var ret DevicePolicyAllowedEncryptionStatusesItem
		return ret
	}).(DevicePolicyAllowedEncryptionStatusesItemOutput)
}

func (o DevicePolicyAllowedEncryptionStatusesItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DevicePolicyAllowedEncryptionStatusesItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DevicePolicyAllowedEncryptionStatusesItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DevicePolicyAllowedEncryptionStatusesItemInput is an input type that accepts DevicePolicyAllowedEncryptionStatusesItemArgs and DevicePolicyAllowedEncryptionStatusesItemOutput values.
// You can construct a concrete instance of `DevicePolicyAllowedEncryptionStatusesItemInput` via:
//
//          DevicePolicyAllowedEncryptionStatusesItemArgs{...}
type DevicePolicyAllowedEncryptionStatusesItemInput interface {
	pulumi.Input

	ToDevicePolicyAllowedEncryptionStatusesItemOutput() DevicePolicyAllowedEncryptionStatusesItemOutput
	ToDevicePolicyAllowedEncryptionStatusesItemOutputWithContext(context.Context) DevicePolicyAllowedEncryptionStatusesItemOutput
}

var devicePolicyAllowedEncryptionStatusesItemPtrType = reflect.TypeOf((**DevicePolicyAllowedEncryptionStatusesItem)(nil)).Elem()

type DevicePolicyAllowedEncryptionStatusesItemPtrInput interface {
	pulumi.Input

	ToDevicePolicyAllowedEncryptionStatusesItemPtrOutput() DevicePolicyAllowedEncryptionStatusesItemPtrOutput
	ToDevicePolicyAllowedEncryptionStatusesItemPtrOutputWithContext(context.Context) DevicePolicyAllowedEncryptionStatusesItemPtrOutput
}

type devicePolicyAllowedEncryptionStatusesItemPtr string

func DevicePolicyAllowedEncryptionStatusesItemPtr(v string) DevicePolicyAllowedEncryptionStatusesItemPtrInput {
	return (*devicePolicyAllowedEncryptionStatusesItemPtr)(&v)
}

func (*devicePolicyAllowedEncryptionStatusesItemPtr) ElementType() reflect.Type {
	return devicePolicyAllowedEncryptionStatusesItemPtrType
}

func (in *devicePolicyAllowedEncryptionStatusesItemPtr) ToDevicePolicyAllowedEncryptionStatusesItemPtrOutput() DevicePolicyAllowedEncryptionStatusesItemPtrOutput {
	return pulumi.ToOutput(in).(DevicePolicyAllowedEncryptionStatusesItemPtrOutput)
}

func (in *devicePolicyAllowedEncryptionStatusesItemPtr) ToDevicePolicyAllowedEncryptionStatusesItemPtrOutputWithContext(ctx context.Context) DevicePolicyAllowedEncryptionStatusesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DevicePolicyAllowedEncryptionStatusesItemPtrOutput)
}

// DevicePolicyAllowedEncryptionStatusesItemArrayInput is an input type that accepts DevicePolicyAllowedEncryptionStatusesItemArray and DevicePolicyAllowedEncryptionStatusesItemArrayOutput values.
// You can construct a concrete instance of `DevicePolicyAllowedEncryptionStatusesItemArrayInput` via:
//
//          DevicePolicyAllowedEncryptionStatusesItemArray{ DevicePolicyAllowedEncryptionStatusesItemArgs{...} }
type DevicePolicyAllowedEncryptionStatusesItemArrayInput interface {
	pulumi.Input

	ToDevicePolicyAllowedEncryptionStatusesItemArrayOutput() DevicePolicyAllowedEncryptionStatusesItemArrayOutput
	ToDevicePolicyAllowedEncryptionStatusesItemArrayOutputWithContext(context.Context) DevicePolicyAllowedEncryptionStatusesItemArrayOutput
}

type DevicePolicyAllowedEncryptionStatusesItemArray []DevicePolicyAllowedEncryptionStatusesItem

func (DevicePolicyAllowedEncryptionStatusesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevicePolicyAllowedEncryptionStatusesItem)(nil)).Elem()
}

func (i DevicePolicyAllowedEncryptionStatusesItemArray) ToDevicePolicyAllowedEncryptionStatusesItemArrayOutput() DevicePolicyAllowedEncryptionStatusesItemArrayOutput {
	return i.ToDevicePolicyAllowedEncryptionStatusesItemArrayOutputWithContext(context.Background())
}

func (i DevicePolicyAllowedEncryptionStatusesItemArray) ToDevicePolicyAllowedEncryptionStatusesItemArrayOutputWithContext(ctx context.Context) DevicePolicyAllowedEncryptionStatusesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePolicyAllowedEncryptionStatusesItemArrayOutput)
}

type DevicePolicyAllowedEncryptionStatusesItemArrayOutput struct{ *pulumi.OutputState }

func (DevicePolicyAllowedEncryptionStatusesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevicePolicyAllowedEncryptionStatusesItem)(nil)).Elem()
}

func (o DevicePolicyAllowedEncryptionStatusesItemArrayOutput) ToDevicePolicyAllowedEncryptionStatusesItemArrayOutput() DevicePolicyAllowedEncryptionStatusesItemArrayOutput {
	return o
}

func (o DevicePolicyAllowedEncryptionStatusesItemArrayOutput) ToDevicePolicyAllowedEncryptionStatusesItemArrayOutputWithContext(ctx context.Context) DevicePolicyAllowedEncryptionStatusesItemArrayOutput {
	return o
}

func (o DevicePolicyAllowedEncryptionStatusesItemArrayOutput) Index(i pulumi.IntInput) DevicePolicyAllowedEncryptionStatusesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DevicePolicyAllowedEncryptionStatusesItem {
		return vs[0].([]DevicePolicyAllowedEncryptionStatusesItem)[vs[1].(int)]
	}).(DevicePolicyAllowedEncryptionStatusesItemOutput)
}

// Specifies the type of identities that are allowed access to outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.
type EgressFromIdentityType string

const (
	// No blanket identity group specified.
	EgressFromIdentityTypeIdentityTypeUnspecified = EgressFromIdentityType("IDENTITY_TYPE_UNSPECIFIED")
	// Authorize access from all identities outside the perimeter.
	EgressFromIdentityTypeAnyIdentity = EgressFromIdentityType("ANY_IDENTITY")
	// Authorize access from all human users outside the perimeter.
	EgressFromIdentityTypeAnyUserAccount = EgressFromIdentityType("ANY_USER_ACCOUNT")
	// Authorize access from all service accounts outside the perimeter.
	EgressFromIdentityTypeAnyServiceAccount = EgressFromIdentityType("ANY_SERVICE_ACCOUNT")
)

func (EgressFromIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*EgressFromIdentityType)(nil)).Elem()
}

func (e EgressFromIdentityType) ToEgressFromIdentityTypeOutput() EgressFromIdentityTypeOutput {
	return pulumi.ToOutput(e).(EgressFromIdentityTypeOutput)
}

func (e EgressFromIdentityType) ToEgressFromIdentityTypeOutputWithContext(ctx context.Context) EgressFromIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EgressFromIdentityTypeOutput)
}

func (e EgressFromIdentityType) ToEgressFromIdentityTypePtrOutput() EgressFromIdentityTypePtrOutput {
	return e.ToEgressFromIdentityTypePtrOutputWithContext(context.Background())
}

func (e EgressFromIdentityType) ToEgressFromIdentityTypePtrOutputWithContext(ctx context.Context) EgressFromIdentityTypePtrOutput {
	return EgressFromIdentityType(e).ToEgressFromIdentityTypeOutputWithContext(ctx).ToEgressFromIdentityTypePtrOutputWithContext(ctx)
}

func (e EgressFromIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EgressFromIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EgressFromIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EgressFromIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EgressFromIdentityTypeOutput struct{ *pulumi.OutputState }

func (EgressFromIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EgressFromIdentityType)(nil)).Elem()
}

func (o EgressFromIdentityTypeOutput) ToEgressFromIdentityTypeOutput() EgressFromIdentityTypeOutput {
	return o
}

func (o EgressFromIdentityTypeOutput) ToEgressFromIdentityTypeOutputWithContext(ctx context.Context) EgressFromIdentityTypeOutput {
	return o
}

func (o EgressFromIdentityTypeOutput) ToEgressFromIdentityTypePtrOutput() EgressFromIdentityTypePtrOutput {
	return o.ToEgressFromIdentityTypePtrOutputWithContext(context.Background())
}

func (o EgressFromIdentityTypeOutput) ToEgressFromIdentityTypePtrOutputWithContext(ctx context.Context) EgressFromIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EgressFromIdentityType) *EgressFromIdentityType {
		return &v
	}).(EgressFromIdentityTypePtrOutput)
}

func (o EgressFromIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EgressFromIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EgressFromIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EgressFromIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EgressFromIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EgressFromIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EgressFromIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (EgressFromIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EgressFromIdentityType)(nil)).Elem()
}

func (o EgressFromIdentityTypePtrOutput) ToEgressFromIdentityTypePtrOutput() EgressFromIdentityTypePtrOutput {
	return o
}

func (o EgressFromIdentityTypePtrOutput) ToEgressFromIdentityTypePtrOutputWithContext(ctx context.Context) EgressFromIdentityTypePtrOutput {
	return o
}

func (o EgressFromIdentityTypePtrOutput) Elem() EgressFromIdentityTypeOutput {
	return o.ApplyT(func(v *EgressFromIdentityType) EgressFromIdentityType {
		if v != nil {
			return *v
		}
		var ret EgressFromIdentityType
		return ret
	}).(EgressFromIdentityTypeOutput)
}

func (o EgressFromIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EgressFromIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EgressFromIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EgressFromIdentityTypeInput is an input type that accepts EgressFromIdentityTypeArgs and EgressFromIdentityTypeOutput values.
// You can construct a concrete instance of `EgressFromIdentityTypeInput` via:
//
//          EgressFromIdentityTypeArgs{...}
type EgressFromIdentityTypeInput interface {
	pulumi.Input

	ToEgressFromIdentityTypeOutput() EgressFromIdentityTypeOutput
	ToEgressFromIdentityTypeOutputWithContext(context.Context) EgressFromIdentityTypeOutput
}

var egressFromIdentityTypePtrType = reflect.TypeOf((**EgressFromIdentityType)(nil)).Elem()

type EgressFromIdentityTypePtrInput interface {
	pulumi.Input

	ToEgressFromIdentityTypePtrOutput() EgressFromIdentityTypePtrOutput
	ToEgressFromIdentityTypePtrOutputWithContext(context.Context) EgressFromIdentityTypePtrOutput
}

type egressFromIdentityTypePtr string

func EgressFromIdentityTypePtr(v string) EgressFromIdentityTypePtrInput {
	return (*egressFromIdentityTypePtr)(&v)
}

func (*egressFromIdentityTypePtr) ElementType() reflect.Type {
	return egressFromIdentityTypePtrType
}

func (in *egressFromIdentityTypePtr) ToEgressFromIdentityTypePtrOutput() EgressFromIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(EgressFromIdentityTypePtrOutput)
}

func (in *egressFromIdentityTypePtr) ToEgressFromIdentityTypePtrOutputWithContext(ctx context.Context) EgressFromIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EgressFromIdentityTypePtrOutput)
}

// Specifies the type of identities that are allowed access from outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.
type IngressFromIdentityType string

const (
	// No blanket identity group specified.
	IngressFromIdentityTypeIdentityTypeUnspecified = IngressFromIdentityType("IDENTITY_TYPE_UNSPECIFIED")
	// Authorize access from all identities outside the perimeter.
	IngressFromIdentityTypeAnyIdentity = IngressFromIdentityType("ANY_IDENTITY")
	// Authorize access from all human users outside the perimeter.
	IngressFromIdentityTypeAnyUserAccount = IngressFromIdentityType("ANY_USER_ACCOUNT")
	// Authorize access from all service accounts outside the perimeter.
	IngressFromIdentityTypeAnyServiceAccount = IngressFromIdentityType("ANY_SERVICE_ACCOUNT")
)

func (IngressFromIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressFromIdentityType)(nil)).Elem()
}

func (e IngressFromIdentityType) ToIngressFromIdentityTypeOutput() IngressFromIdentityTypeOutput {
	return pulumi.ToOutput(e).(IngressFromIdentityTypeOutput)
}

func (e IngressFromIdentityType) ToIngressFromIdentityTypeOutputWithContext(ctx context.Context) IngressFromIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IngressFromIdentityTypeOutput)
}

func (e IngressFromIdentityType) ToIngressFromIdentityTypePtrOutput() IngressFromIdentityTypePtrOutput {
	return e.ToIngressFromIdentityTypePtrOutputWithContext(context.Background())
}

func (e IngressFromIdentityType) ToIngressFromIdentityTypePtrOutputWithContext(ctx context.Context) IngressFromIdentityTypePtrOutput {
	return IngressFromIdentityType(e).ToIngressFromIdentityTypeOutputWithContext(ctx).ToIngressFromIdentityTypePtrOutputWithContext(ctx)
}

func (e IngressFromIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IngressFromIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IngressFromIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IngressFromIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IngressFromIdentityTypeOutput struct{ *pulumi.OutputState }

func (IngressFromIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressFromIdentityType)(nil)).Elem()
}

func (o IngressFromIdentityTypeOutput) ToIngressFromIdentityTypeOutput() IngressFromIdentityTypeOutput {
	return o
}

func (o IngressFromIdentityTypeOutput) ToIngressFromIdentityTypeOutputWithContext(ctx context.Context) IngressFromIdentityTypeOutput {
	return o
}

func (o IngressFromIdentityTypeOutput) ToIngressFromIdentityTypePtrOutput() IngressFromIdentityTypePtrOutput {
	return o.ToIngressFromIdentityTypePtrOutputWithContext(context.Background())
}

func (o IngressFromIdentityTypeOutput) ToIngressFromIdentityTypePtrOutputWithContext(ctx context.Context) IngressFromIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngressFromIdentityType) *IngressFromIdentityType {
		return &v
	}).(IngressFromIdentityTypePtrOutput)
}

func (o IngressFromIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IngressFromIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IngressFromIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IngressFromIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IngressFromIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IngressFromIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IngressFromIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (IngressFromIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressFromIdentityType)(nil)).Elem()
}

func (o IngressFromIdentityTypePtrOutput) ToIngressFromIdentityTypePtrOutput() IngressFromIdentityTypePtrOutput {
	return o
}

func (o IngressFromIdentityTypePtrOutput) ToIngressFromIdentityTypePtrOutputWithContext(ctx context.Context) IngressFromIdentityTypePtrOutput {
	return o
}

func (o IngressFromIdentityTypePtrOutput) Elem() IngressFromIdentityTypeOutput {
	return o.ApplyT(func(v *IngressFromIdentityType) IngressFromIdentityType {
		if v != nil {
			return *v
		}
		var ret IngressFromIdentityType
		return ret
	}).(IngressFromIdentityTypeOutput)
}

func (o IngressFromIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IngressFromIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IngressFromIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IngressFromIdentityTypeInput is an input type that accepts IngressFromIdentityTypeArgs and IngressFromIdentityTypeOutput values.
// You can construct a concrete instance of `IngressFromIdentityTypeInput` via:
//
//          IngressFromIdentityTypeArgs{...}
type IngressFromIdentityTypeInput interface {
	pulumi.Input

	ToIngressFromIdentityTypeOutput() IngressFromIdentityTypeOutput
	ToIngressFromIdentityTypeOutputWithContext(context.Context) IngressFromIdentityTypeOutput
}

var ingressFromIdentityTypePtrType = reflect.TypeOf((**IngressFromIdentityType)(nil)).Elem()

type IngressFromIdentityTypePtrInput interface {
	pulumi.Input

	ToIngressFromIdentityTypePtrOutput() IngressFromIdentityTypePtrOutput
	ToIngressFromIdentityTypePtrOutputWithContext(context.Context) IngressFromIdentityTypePtrOutput
}

type ingressFromIdentityTypePtr string

func IngressFromIdentityTypePtr(v string) IngressFromIdentityTypePtrInput {
	return (*ingressFromIdentityTypePtr)(&v)
}

func (*ingressFromIdentityTypePtr) ElementType() reflect.Type {
	return ingressFromIdentityTypePtrType
}

func (in *ingressFromIdentityTypePtr) ToIngressFromIdentityTypePtrOutput() IngressFromIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(IngressFromIdentityTypePtrOutput)
}

func (in *ingressFromIdentityTypePtr) ToIngressFromIdentityTypePtrOutputWithContext(ctx context.Context) IngressFromIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IngressFromIdentityTypePtrOutput)
}

// Required. The allowed OS type.
type OsConstraintOsType string

const (
	// The operating system of the device is not specified or not known.
	OsConstraintOsTypeOsUnspecified = OsConstraintOsType("OS_UNSPECIFIED")
	// A desktop Mac operating system.
	OsConstraintOsTypeDesktopMac = OsConstraintOsType("DESKTOP_MAC")
	// A desktop Windows operating system.
	OsConstraintOsTypeDesktopWindows = OsConstraintOsType("DESKTOP_WINDOWS")
	// A desktop Linux operating system.
	OsConstraintOsTypeDesktopLinux = OsConstraintOsType("DESKTOP_LINUX")
	// A desktop ChromeOS operating system.
	OsConstraintOsTypeDesktopChromeOs = OsConstraintOsType("DESKTOP_CHROME_OS")
	// An Android operating system.
	OsConstraintOsTypeAndroid = OsConstraintOsType("ANDROID")
	// An iOS operating system.
	OsConstraintOsTypeIos = OsConstraintOsType("IOS")
)

func (OsConstraintOsType) ElementType() reflect.Type {
	return reflect.TypeOf((*OsConstraintOsType)(nil)).Elem()
}

func (e OsConstraintOsType) ToOsConstraintOsTypeOutput() OsConstraintOsTypeOutput {
	return pulumi.ToOutput(e).(OsConstraintOsTypeOutput)
}

func (e OsConstraintOsType) ToOsConstraintOsTypeOutputWithContext(ctx context.Context) OsConstraintOsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OsConstraintOsTypeOutput)
}

func (e OsConstraintOsType) ToOsConstraintOsTypePtrOutput() OsConstraintOsTypePtrOutput {
	return e.ToOsConstraintOsTypePtrOutputWithContext(context.Background())
}

func (e OsConstraintOsType) ToOsConstraintOsTypePtrOutputWithContext(ctx context.Context) OsConstraintOsTypePtrOutput {
	return OsConstraintOsType(e).ToOsConstraintOsTypeOutputWithContext(ctx).ToOsConstraintOsTypePtrOutputWithContext(ctx)
}

func (e OsConstraintOsType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OsConstraintOsType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OsConstraintOsType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OsConstraintOsType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OsConstraintOsTypeOutput struct{ *pulumi.OutputState }

func (OsConstraintOsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsConstraintOsType)(nil)).Elem()
}

func (o OsConstraintOsTypeOutput) ToOsConstraintOsTypeOutput() OsConstraintOsTypeOutput {
	return o
}

func (o OsConstraintOsTypeOutput) ToOsConstraintOsTypeOutputWithContext(ctx context.Context) OsConstraintOsTypeOutput {
	return o
}

func (o OsConstraintOsTypeOutput) ToOsConstraintOsTypePtrOutput() OsConstraintOsTypePtrOutput {
	return o.ToOsConstraintOsTypePtrOutputWithContext(context.Background())
}

func (o OsConstraintOsTypeOutput) ToOsConstraintOsTypePtrOutputWithContext(ctx context.Context) OsConstraintOsTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsConstraintOsType) *OsConstraintOsType {
		return &v
	}).(OsConstraintOsTypePtrOutput)
}

func (o OsConstraintOsTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OsConstraintOsTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OsConstraintOsType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OsConstraintOsTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OsConstraintOsTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OsConstraintOsType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OsConstraintOsTypePtrOutput struct{ *pulumi.OutputState }

func (OsConstraintOsTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsConstraintOsType)(nil)).Elem()
}

func (o OsConstraintOsTypePtrOutput) ToOsConstraintOsTypePtrOutput() OsConstraintOsTypePtrOutput {
	return o
}

func (o OsConstraintOsTypePtrOutput) ToOsConstraintOsTypePtrOutputWithContext(ctx context.Context) OsConstraintOsTypePtrOutput {
	return o
}

func (o OsConstraintOsTypePtrOutput) Elem() OsConstraintOsTypeOutput {
	return o.ApplyT(func(v *OsConstraintOsType) OsConstraintOsType {
		if v != nil {
			return *v
		}
		var ret OsConstraintOsType
		return ret
	}).(OsConstraintOsTypeOutput)
}

func (o OsConstraintOsTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OsConstraintOsTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OsConstraintOsType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OsConstraintOsTypeInput is an input type that accepts OsConstraintOsTypeArgs and OsConstraintOsTypeOutput values.
// You can construct a concrete instance of `OsConstraintOsTypeInput` via:
//
//          OsConstraintOsTypeArgs{...}
type OsConstraintOsTypeInput interface {
	pulumi.Input

	ToOsConstraintOsTypeOutput() OsConstraintOsTypeOutput
	ToOsConstraintOsTypeOutputWithContext(context.Context) OsConstraintOsTypeOutput
}

var osConstraintOsTypePtrType = reflect.TypeOf((**OsConstraintOsType)(nil)).Elem()

type OsConstraintOsTypePtrInput interface {
	pulumi.Input

	ToOsConstraintOsTypePtrOutput() OsConstraintOsTypePtrOutput
	ToOsConstraintOsTypePtrOutputWithContext(context.Context) OsConstraintOsTypePtrOutput
}

type osConstraintOsTypePtr string

func OsConstraintOsTypePtr(v string) OsConstraintOsTypePtrInput {
	return (*osConstraintOsTypePtr)(&v)
}

func (*osConstraintOsTypePtr) ElementType() reflect.Type {
	return osConstraintOsTypePtrType
}

func (in *osConstraintOsTypePtr) ToOsConstraintOsTypePtrOutput() OsConstraintOsTypePtrOutput {
	return pulumi.ToOutput(in).(OsConstraintOsTypePtrOutput)
}

func (in *osConstraintOsTypePtr) ToOsConstraintOsTypePtrOutputWithContext(ctx context.Context) OsConstraintOsTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OsConstraintOsTypePtrOutput)
}

// Perimeter type indicator. A single project is allowed to be a member of single regular perimeter, but multiple service perimeter bridges. A project cannot be a included in a perimeter bridge without being included in regular perimeter. For perimeter bridges, the restricted service list as well as access level lists must be empty.
type ServicePerimeterPerimeterType string

const (
	// Regular Perimeter.
	ServicePerimeterPerimeterTypePerimeterTypeRegular = ServicePerimeterPerimeterType("PERIMETER_TYPE_REGULAR")
	// Perimeter Bridge.
	ServicePerimeterPerimeterTypePerimeterTypeBridge = ServicePerimeterPerimeterType("PERIMETER_TYPE_BRIDGE")
)

func (ServicePerimeterPerimeterType) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePerimeterPerimeterType)(nil)).Elem()
}

func (e ServicePerimeterPerimeterType) ToServicePerimeterPerimeterTypeOutput() ServicePerimeterPerimeterTypeOutput {
	return pulumi.ToOutput(e).(ServicePerimeterPerimeterTypeOutput)
}

func (e ServicePerimeterPerimeterType) ToServicePerimeterPerimeterTypeOutputWithContext(ctx context.Context) ServicePerimeterPerimeterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServicePerimeterPerimeterTypeOutput)
}

func (e ServicePerimeterPerimeterType) ToServicePerimeterPerimeterTypePtrOutput() ServicePerimeterPerimeterTypePtrOutput {
	return e.ToServicePerimeterPerimeterTypePtrOutputWithContext(context.Background())
}

func (e ServicePerimeterPerimeterType) ToServicePerimeterPerimeterTypePtrOutputWithContext(ctx context.Context) ServicePerimeterPerimeterTypePtrOutput {
	return ServicePerimeterPerimeterType(e).ToServicePerimeterPerimeterTypeOutputWithContext(ctx).ToServicePerimeterPerimeterTypePtrOutputWithContext(ctx)
}

func (e ServicePerimeterPerimeterType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServicePerimeterPerimeterType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServicePerimeterPerimeterType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServicePerimeterPerimeterType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServicePerimeterPerimeterTypeOutput struct{ *pulumi.OutputState }

func (ServicePerimeterPerimeterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePerimeterPerimeterType)(nil)).Elem()
}

func (o ServicePerimeterPerimeterTypeOutput) ToServicePerimeterPerimeterTypeOutput() ServicePerimeterPerimeterTypeOutput {
	return o
}

func (o ServicePerimeterPerimeterTypeOutput) ToServicePerimeterPerimeterTypeOutputWithContext(ctx context.Context) ServicePerimeterPerimeterTypeOutput {
	return o
}

func (o ServicePerimeterPerimeterTypeOutput) ToServicePerimeterPerimeterTypePtrOutput() ServicePerimeterPerimeterTypePtrOutput {
	return o.ToServicePerimeterPerimeterTypePtrOutputWithContext(context.Background())
}

func (o ServicePerimeterPerimeterTypeOutput) ToServicePerimeterPerimeterTypePtrOutputWithContext(ctx context.Context) ServicePerimeterPerimeterTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServicePerimeterPerimeterType) *ServicePerimeterPerimeterType {
		return &v
	}).(ServicePerimeterPerimeterTypePtrOutput)
}

func (o ServicePerimeterPerimeterTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServicePerimeterPerimeterTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServicePerimeterPerimeterType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServicePerimeterPerimeterTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServicePerimeterPerimeterTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServicePerimeterPerimeterType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServicePerimeterPerimeterTypePtrOutput struct{ *pulumi.OutputState }

func (ServicePerimeterPerimeterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePerimeterPerimeterType)(nil)).Elem()
}

func (o ServicePerimeterPerimeterTypePtrOutput) ToServicePerimeterPerimeterTypePtrOutput() ServicePerimeterPerimeterTypePtrOutput {
	return o
}

func (o ServicePerimeterPerimeterTypePtrOutput) ToServicePerimeterPerimeterTypePtrOutputWithContext(ctx context.Context) ServicePerimeterPerimeterTypePtrOutput {
	return o
}

func (o ServicePerimeterPerimeterTypePtrOutput) Elem() ServicePerimeterPerimeterTypeOutput {
	return o.ApplyT(func(v *ServicePerimeterPerimeterType) ServicePerimeterPerimeterType {
		if v != nil {
			return *v
		}
		var ret ServicePerimeterPerimeterType
		return ret
	}).(ServicePerimeterPerimeterTypeOutput)
}

func (o ServicePerimeterPerimeterTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServicePerimeterPerimeterTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServicePerimeterPerimeterType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServicePerimeterPerimeterTypeInput is an input type that accepts ServicePerimeterPerimeterTypeArgs and ServicePerimeterPerimeterTypeOutput values.
// You can construct a concrete instance of `ServicePerimeterPerimeterTypeInput` via:
//
//          ServicePerimeterPerimeterTypeArgs{...}
type ServicePerimeterPerimeterTypeInput interface {
	pulumi.Input

	ToServicePerimeterPerimeterTypeOutput() ServicePerimeterPerimeterTypeOutput
	ToServicePerimeterPerimeterTypeOutputWithContext(context.Context) ServicePerimeterPerimeterTypeOutput
}

var servicePerimeterPerimeterTypePtrType = reflect.TypeOf((**ServicePerimeterPerimeterType)(nil)).Elem()

type ServicePerimeterPerimeterTypePtrInput interface {
	pulumi.Input

	ToServicePerimeterPerimeterTypePtrOutput() ServicePerimeterPerimeterTypePtrOutput
	ToServicePerimeterPerimeterTypePtrOutputWithContext(context.Context) ServicePerimeterPerimeterTypePtrOutput
}

type servicePerimeterPerimeterTypePtr string

func ServicePerimeterPerimeterTypePtr(v string) ServicePerimeterPerimeterTypePtrInput {
	return (*servicePerimeterPerimeterTypePtr)(&v)
}

func (*servicePerimeterPerimeterTypePtr) ElementType() reflect.Type {
	return servicePerimeterPerimeterTypePtrType
}

func (in *servicePerimeterPerimeterTypePtr) ToServicePerimeterPerimeterTypePtrOutput() ServicePerimeterPerimeterTypePtrOutput {
	return pulumi.ToOutput(in).(ServicePerimeterPerimeterTypePtrOutput)
}

func (in *servicePerimeterPerimeterTypePtr) ToServicePerimeterPerimeterTypePtrOutputWithContext(ctx context.Context) ServicePerimeterPerimeterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServicePerimeterPerimeterTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BasicLevelCombiningFunctionInput)(nil)).Elem(), BasicLevelCombiningFunction("AND"))
	pulumi.RegisterInputType(reflect.TypeOf((*BasicLevelCombiningFunctionPtrInput)(nil)).Elem(), BasicLevelCombiningFunction("AND"))
	pulumi.RegisterInputType(reflect.TypeOf((*DevicePolicyAllowedDeviceManagementLevelsItemInput)(nil)).Elem(), DevicePolicyAllowedDeviceManagementLevelsItem("MANAGEMENT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DevicePolicyAllowedDeviceManagementLevelsItemPtrInput)(nil)).Elem(), DevicePolicyAllowedDeviceManagementLevelsItem("MANAGEMENT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DevicePolicyAllowedDeviceManagementLevelsItemArrayInput)(nil)).Elem(), DevicePolicyAllowedDeviceManagementLevelsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevicePolicyAllowedEncryptionStatusesItemInput)(nil)).Elem(), DevicePolicyAllowedEncryptionStatusesItem("ENCRYPTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DevicePolicyAllowedEncryptionStatusesItemPtrInput)(nil)).Elem(), DevicePolicyAllowedEncryptionStatusesItem("ENCRYPTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DevicePolicyAllowedEncryptionStatusesItemArrayInput)(nil)).Elem(), DevicePolicyAllowedEncryptionStatusesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EgressFromIdentityTypeInput)(nil)).Elem(), EgressFromIdentityType("IDENTITY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EgressFromIdentityTypePtrInput)(nil)).Elem(), EgressFromIdentityType("IDENTITY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*IngressFromIdentityTypeInput)(nil)).Elem(), IngressFromIdentityType("IDENTITY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*IngressFromIdentityTypePtrInput)(nil)).Elem(), IngressFromIdentityType("IDENTITY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*OsConstraintOsTypeInput)(nil)).Elem(), OsConstraintOsType("OS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*OsConstraintOsTypePtrInput)(nil)).Elem(), OsConstraintOsType("OS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePerimeterPerimeterTypeInput)(nil)).Elem(), ServicePerimeterPerimeterType("PERIMETER_TYPE_REGULAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePerimeterPerimeterTypePtrInput)(nil)).Elem(), ServicePerimeterPerimeterType("PERIMETER_TYPE_REGULAR"))
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(BasicLevelCombiningFunctionOutput{})
	pulumi.RegisterOutputType(BasicLevelCombiningFunctionPtrOutput{})
	pulumi.RegisterOutputType(DevicePolicyAllowedDeviceManagementLevelsItemOutput{})
	pulumi.RegisterOutputType(DevicePolicyAllowedDeviceManagementLevelsItemPtrOutput{})
	pulumi.RegisterOutputType(DevicePolicyAllowedDeviceManagementLevelsItemArrayOutput{})
	pulumi.RegisterOutputType(DevicePolicyAllowedEncryptionStatusesItemOutput{})
	pulumi.RegisterOutputType(DevicePolicyAllowedEncryptionStatusesItemPtrOutput{})
	pulumi.RegisterOutputType(DevicePolicyAllowedEncryptionStatusesItemArrayOutput{})
	pulumi.RegisterOutputType(EgressFromIdentityTypeOutput{})
	pulumi.RegisterOutputType(EgressFromIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(IngressFromIdentityTypeOutput{})
	pulumi.RegisterOutputType(IngressFromIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(OsConstraintOsTypeOutput{})
	pulumi.RegisterOutputType(OsConstraintOsTypePtrOutput{})
	pulumi.RegisterOutputType(ServicePerimeterPerimeterTypeOutput{})
	pulumi.RegisterOutputType(ServicePerimeterPerimeterTypePtrOutput{})
}
