// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get an Access Level by resource name.
func LookupAccessLevel(ctx *pulumi.Context, args *LookupAccessLevelArgs, opts ...pulumi.InvokeOption) (*LookupAccessLevelResult, error) {
	var rv LookupAccessLevelResult
	err := ctx.Invoke("google-native:accesscontextmanager/v1beta:getAccessLevel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAccessLevelArgs struct {
	AccessLevelFormat *string `pulumi:"accessLevelFormat"`
	AccessLevelId     string  `pulumi:"accessLevelId"`
	AccessPolicyId    string  `pulumi:"accessPolicyId"`
}

type LookupAccessLevelResult struct {
	// A `BasicLevel` composed of `Conditions`.
	Basic BasicLevelResponse `pulumi:"basic"`
	// A `CustomLevel` written in the Common Expression Language.
	Custom CustomLevelResponse `pulumi:"custom"`
	// Description of the `AccessLevel` and its use. Does not affect behavior.
	Description string `pulumi:"description"`
	// Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{policy_id}/accessLevels/{short_name}`. The maximum length // of the `short_name` component is 50 characters.
	Name string `pulumi:"name"`
	// Human readable title. Must be unique within the Policy.
	Title string `pulumi:"title"`
}

func LookupAccessLevelOutput(ctx *pulumi.Context, args LookupAccessLevelOutputArgs, opts ...pulumi.InvokeOption) LookupAccessLevelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAccessLevelResult, error) {
			args := v.(LookupAccessLevelArgs)
			r, err := LookupAccessLevel(ctx, &args, opts...)
			return *r, err
		}).(LookupAccessLevelResultOutput)
}

type LookupAccessLevelOutputArgs struct {
	AccessLevelFormat pulumi.StringPtrInput `pulumi:"accessLevelFormat"`
	AccessLevelId     pulumi.StringInput    `pulumi:"accessLevelId"`
	AccessPolicyId    pulumi.StringInput    `pulumi:"accessPolicyId"`
}

func (LookupAccessLevelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessLevelArgs)(nil)).Elem()
}

type LookupAccessLevelResultOutput struct{ *pulumi.OutputState }

func (LookupAccessLevelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessLevelResult)(nil)).Elem()
}

func (o LookupAccessLevelResultOutput) ToLookupAccessLevelResultOutput() LookupAccessLevelResultOutput {
	return o
}

func (o LookupAccessLevelResultOutput) ToLookupAccessLevelResultOutputWithContext(ctx context.Context) LookupAccessLevelResultOutput {
	return o
}

// A `BasicLevel` composed of `Conditions`.
func (o LookupAccessLevelResultOutput) Basic() BasicLevelResponseOutput {
	return o.ApplyT(func(v LookupAccessLevelResult) BasicLevelResponse { return v.Basic }).(BasicLevelResponseOutput)
}

// A `CustomLevel` written in the Common Expression Language.
func (o LookupAccessLevelResultOutput) Custom() CustomLevelResponseOutput {
	return o.ApplyT(func(v LookupAccessLevelResult) CustomLevelResponse { return v.Custom }).(CustomLevelResponseOutput)
}

// Description of the `AccessLevel` and its use. Does not affect behavior.
func (o LookupAccessLevelResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessLevelResult) string { return v.Description }).(pulumi.StringOutput)
}

// Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{policy_id}/accessLevels/{short_name}`. The maximum length // of the `short_name` component is 50 characters.
func (o LookupAccessLevelResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessLevelResult) string { return v.Name }).(pulumi.StringOutput)
}

// Human readable title. Must be unique within the Policy.
func (o LookupAccessLevelResultOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessLevelResult) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccessLevelResultOutput{})
}
