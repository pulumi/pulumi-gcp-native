// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Mode of operation for binauthz policy evaluation. Currently the only options are equivalent to enable/disable. If unspecified, defaults to DISABLED.
type BinaryAuthorizationEvaluationMode string

const (
	// Default value
	BinaryAuthorizationEvaluationModeEvaluationModeUnspecified = BinaryAuthorizationEvaluationMode("EVALUATION_MODE_UNSPECIFIED")
	// Disable BinaryAuthorization
	BinaryAuthorizationEvaluationModeDisabled = BinaryAuthorizationEvaluationMode("DISABLED")
	// Enforce Kubernetes admission requests with BinaryAuthorization using the project's singleton policy. This is equivalent to setting the enabled boolean to true.
	BinaryAuthorizationEvaluationModeProjectSingletonPolicyEnforce = BinaryAuthorizationEvaluationMode("PROJECT_SINGLETON_POLICY_ENFORCE")
)

func (BinaryAuthorizationEvaluationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*BinaryAuthorizationEvaluationMode)(nil)).Elem()
}

func (e BinaryAuthorizationEvaluationMode) ToBinaryAuthorizationEvaluationModeOutput() BinaryAuthorizationEvaluationModeOutput {
	return pulumi.ToOutput(e).(BinaryAuthorizationEvaluationModeOutput)
}

func (e BinaryAuthorizationEvaluationMode) ToBinaryAuthorizationEvaluationModeOutputWithContext(ctx context.Context) BinaryAuthorizationEvaluationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BinaryAuthorizationEvaluationModeOutput)
}

func (e BinaryAuthorizationEvaluationMode) ToBinaryAuthorizationEvaluationModePtrOutput() BinaryAuthorizationEvaluationModePtrOutput {
	return e.ToBinaryAuthorizationEvaluationModePtrOutputWithContext(context.Background())
}

func (e BinaryAuthorizationEvaluationMode) ToBinaryAuthorizationEvaluationModePtrOutputWithContext(ctx context.Context) BinaryAuthorizationEvaluationModePtrOutput {
	return BinaryAuthorizationEvaluationMode(e).ToBinaryAuthorizationEvaluationModeOutputWithContext(ctx).ToBinaryAuthorizationEvaluationModePtrOutputWithContext(ctx)
}

func (e BinaryAuthorizationEvaluationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BinaryAuthorizationEvaluationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BinaryAuthorizationEvaluationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BinaryAuthorizationEvaluationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BinaryAuthorizationEvaluationModeOutput struct{ *pulumi.OutputState }

func (BinaryAuthorizationEvaluationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BinaryAuthorizationEvaluationMode)(nil)).Elem()
}

func (o BinaryAuthorizationEvaluationModeOutput) ToBinaryAuthorizationEvaluationModeOutput() BinaryAuthorizationEvaluationModeOutput {
	return o
}

func (o BinaryAuthorizationEvaluationModeOutput) ToBinaryAuthorizationEvaluationModeOutputWithContext(ctx context.Context) BinaryAuthorizationEvaluationModeOutput {
	return o
}

func (o BinaryAuthorizationEvaluationModeOutput) ToBinaryAuthorizationEvaluationModePtrOutput() BinaryAuthorizationEvaluationModePtrOutput {
	return o.ToBinaryAuthorizationEvaluationModePtrOutputWithContext(context.Background())
}

func (o BinaryAuthorizationEvaluationModeOutput) ToBinaryAuthorizationEvaluationModePtrOutputWithContext(ctx context.Context) BinaryAuthorizationEvaluationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BinaryAuthorizationEvaluationMode) *BinaryAuthorizationEvaluationMode {
		return &v
	}).(BinaryAuthorizationEvaluationModePtrOutput)
}

func (o BinaryAuthorizationEvaluationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BinaryAuthorizationEvaluationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BinaryAuthorizationEvaluationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BinaryAuthorizationEvaluationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BinaryAuthorizationEvaluationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BinaryAuthorizationEvaluationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BinaryAuthorizationEvaluationModePtrOutput struct{ *pulumi.OutputState }

func (BinaryAuthorizationEvaluationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BinaryAuthorizationEvaluationMode)(nil)).Elem()
}

func (o BinaryAuthorizationEvaluationModePtrOutput) ToBinaryAuthorizationEvaluationModePtrOutput() BinaryAuthorizationEvaluationModePtrOutput {
	return o
}

func (o BinaryAuthorizationEvaluationModePtrOutput) ToBinaryAuthorizationEvaluationModePtrOutputWithContext(ctx context.Context) BinaryAuthorizationEvaluationModePtrOutput {
	return o
}

func (o BinaryAuthorizationEvaluationModePtrOutput) Elem() BinaryAuthorizationEvaluationModeOutput {
	return o.ApplyT(func(v *BinaryAuthorizationEvaluationMode) BinaryAuthorizationEvaluationMode {
		if v != nil {
			return *v
		}
		var ret BinaryAuthorizationEvaluationMode
		return ret
	}).(BinaryAuthorizationEvaluationModeOutput)
}

func (o BinaryAuthorizationEvaluationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BinaryAuthorizationEvaluationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BinaryAuthorizationEvaluationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BinaryAuthorizationEvaluationModeInput is an input type that accepts BinaryAuthorizationEvaluationModeArgs and BinaryAuthorizationEvaluationModeOutput values.
// You can construct a concrete instance of `BinaryAuthorizationEvaluationModeInput` via:
//
//	BinaryAuthorizationEvaluationModeArgs{...}
type BinaryAuthorizationEvaluationModeInput interface {
	pulumi.Input

	ToBinaryAuthorizationEvaluationModeOutput() BinaryAuthorizationEvaluationModeOutput
	ToBinaryAuthorizationEvaluationModeOutputWithContext(context.Context) BinaryAuthorizationEvaluationModeOutput
}

var binaryAuthorizationEvaluationModePtrType = reflect.TypeOf((**BinaryAuthorizationEvaluationMode)(nil)).Elem()

type BinaryAuthorizationEvaluationModePtrInput interface {
	pulumi.Input

	ToBinaryAuthorizationEvaluationModePtrOutput() BinaryAuthorizationEvaluationModePtrOutput
	ToBinaryAuthorizationEvaluationModePtrOutputWithContext(context.Context) BinaryAuthorizationEvaluationModePtrOutput
}

type binaryAuthorizationEvaluationModePtr string

func BinaryAuthorizationEvaluationModePtr(v string) BinaryAuthorizationEvaluationModePtrInput {
	return (*binaryAuthorizationEvaluationModePtr)(&v)
}

func (*binaryAuthorizationEvaluationModePtr) ElementType() reflect.Type {
	return binaryAuthorizationEvaluationModePtrType
}

func (in *binaryAuthorizationEvaluationModePtr) ToBinaryAuthorizationEvaluationModePtrOutput() BinaryAuthorizationEvaluationModePtrOutput {
	return pulumi.ToOutput(in).(BinaryAuthorizationEvaluationModePtrOutput)
}

func (in *binaryAuthorizationEvaluationModePtr) ToBinaryAuthorizationEvaluationModePtrOutputWithContext(ctx context.Context) BinaryAuthorizationEvaluationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BinaryAuthorizationEvaluationModePtrOutput)
}

// Which load balancer type is installed for Cloud Run.
type CloudRunConfigLoadBalancerType string

const (
	// Load balancer type for Cloud Run is unspecified.
	CloudRunConfigLoadBalancerTypeLoadBalancerTypeUnspecified = CloudRunConfigLoadBalancerType("LOAD_BALANCER_TYPE_UNSPECIFIED")
	// Install external load balancer for Cloud Run.
	CloudRunConfigLoadBalancerTypeLoadBalancerTypeExternal = CloudRunConfigLoadBalancerType("LOAD_BALANCER_TYPE_EXTERNAL")
	// Install internal load balancer for Cloud Run.
	CloudRunConfigLoadBalancerTypeLoadBalancerTypeInternal = CloudRunConfigLoadBalancerType("LOAD_BALANCER_TYPE_INTERNAL")
)

func (CloudRunConfigLoadBalancerType) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudRunConfigLoadBalancerType)(nil)).Elem()
}

func (e CloudRunConfigLoadBalancerType) ToCloudRunConfigLoadBalancerTypeOutput() CloudRunConfigLoadBalancerTypeOutput {
	return pulumi.ToOutput(e).(CloudRunConfigLoadBalancerTypeOutput)
}

func (e CloudRunConfigLoadBalancerType) ToCloudRunConfigLoadBalancerTypeOutputWithContext(ctx context.Context) CloudRunConfigLoadBalancerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CloudRunConfigLoadBalancerTypeOutput)
}

func (e CloudRunConfigLoadBalancerType) ToCloudRunConfigLoadBalancerTypePtrOutput() CloudRunConfigLoadBalancerTypePtrOutput {
	return e.ToCloudRunConfigLoadBalancerTypePtrOutputWithContext(context.Background())
}

func (e CloudRunConfigLoadBalancerType) ToCloudRunConfigLoadBalancerTypePtrOutputWithContext(ctx context.Context) CloudRunConfigLoadBalancerTypePtrOutput {
	return CloudRunConfigLoadBalancerType(e).ToCloudRunConfigLoadBalancerTypeOutputWithContext(ctx).ToCloudRunConfigLoadBalancerTypePtrOutputWithContext(ctx)
}

func (e CloudRunConfigLoadBalancerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudRunConfigLoadBalancerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudRunConfigLoadBalancerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudRunConfigLoadBalancerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CloudRunConfigLoadBalancerTypeOutput struct{ *pulumi.OutputState }

func (CloudRunConfigLoadBalancerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudRunConfigLoadBalancerType)(nil)).Elem()
}

func (o CloudRunConfigLoadBalancerTypeOutput) ToCloudRunConfigLoadBalancerTypeOutput() CloudRunConfigLoadBalancerTypeOutput {
	return o
}

func (o CloudRunConfigLoadBalancerTypeOutput) ToCloudRunConfigLoadBalancerTypeOutputWithContext(ctx context.Context) CloudRunConfigLoadBalancerTypeOutput {
	return o
}

func (o CloudRunConfigLoadBalancerTypeOutput) ToCloudRunConfigLoadBalancerTypePtrOutput() CloudRunConfigLoadBalancerTypePtrOutput {
	return o.ToCloudRunConfigLoadBalancerTypePtrOutputWithContext(context.Background())
}

func (o CloudRunConfigLoadBalancerTypeOutput) ToCloudRunConfigLoadBalancerTypePtrOutputWithContext(ctx context.Context) CloudRunConfigLoadBalancerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudRunConfigLoadBalancerType) *CloudRunConfigLoadBalancerType {
		return &v
	}).(CloudRunConfigLoadBalancerTypePtrOutput)
}

func (o CloudRunConfigLoadBalancerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CloudRunConfigLoadBalancerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudRunConfigLoadBalancerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CloudRunConfigLoadBalancerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudRunConfigLoadBalancerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudRunConfigLoadBalancerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CloudRunConfigLoadBalancerTypePtrOutput struct{ *pulumi.OutputState }

func (CloudRunConfigLoadBalancerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudRunConfigLoadBalancerType)(nil)).Elem()
}

func (o CloudRunConfigLoadBalancerTypePtrOutput) ToCloudRunConfigLoadBalancerTypePtrOutput() CloudRunConfigLoadBalancerTypePtrOutput {
	return o
}

func (o CloudRunConfigLoadBalancerTypePtrOutput) ToCloudRunConfigLoadBalancerTypePtrOutputWithContext(ctx context.Context) CloudRunConfigLoadBalancerTypePtrOutput {
	return o
}

func (o CloudRunConfigLoadBalancerTypePtrOutput) Elem() CloudRunConfigLoadBalancerTypeOutput {
	return o.ApplyT(func(v *CloudRunConfigLoadBalancerType) CloudRunConfigLoadBalancerType {
		if v != nil {
			return *v
		}
		var ret CloudRunConfigLoadBalancerType
		return ret
	}).(CloudRunConfigLoadBalancerTypeOutput)
}

func (o CloudRunConfigLoadBalancerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudRunConfigLoadBalancerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CloudRunConfigLoadBalancerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CloudRunConfigLoadBalancerTypeInput is an input type that accepts CloudRunConfigLoadBalancerTypeArgs and CloudRunConfigLoadBalancerTypeOutput values.
// You can construct a concrete instance of `CloudRunConfigLoadBalancerTypeInput` via:
//
//	CloudRunConfigLoadBalancerTypeArgs{...}
type CloudRunConfigLoadBalancerTypeInput interface {
	pulumi.Input

	ToCloudRunConfigLoadBalancerTypeOutput() CloudRunConfigLoadBalancerTypeOutput
	ToCloudRunConfigLoadBalancerTypeOutputWithContext(context.Context) CloudRunConfigLoadBalancerTypeOutput
}

var cloudRunConfigLoadBalancerTypePtrType = reflect.TypeOf((**CloudRunConfigLoadBalancerType)(nil)).Elem()

type CloudRunConfigLoadBalancerTypePtrInput interface {
	pulumi.Input

	ToCloudRunConfigLoadBalancerTypePtrOutput() CloudRunConfigLoadBalancerTypePtrOutput
	ToCloudRunConfigLoadBalancerTypePtrOutputWithContext(context.Context) CloudRunConfigLoadBalancerTypePtrOutput
}

type cloudRunConfigLoadBalancerTypePtr string

func CloudRunConfigLoadBalancerTypePtr(v string) CloudRunConfigLoadBalancerTypePtrInput {
	return (*cloudRunConfigLoadBalancerTypePtr)(&v)
}

func (*cloudRunConfigLoadBalancerTypePtr) ElementType() reflect.Type {
	return cloudRunConfigLoadBalancerTypePtrType
}

func (in *cloudRunConfigLoadBalancerTypePtr) ToCloudRunConfigLoadBalancerTypePtrOutput() CloudRunConfigLoadBalancerTypePtrOutput {
	return pulumi.ToOutput(in).(CloudRunConfigLoadBalancerTypePtrOutput)
}

func (in *cloudRunConfigLoadBalancerTypePtr) ToCloudRunConfigLoadBalancerTypePtrOutputWithContext(ctx context.Context) CloudRunConfigLoadBalancerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CloudRunConfigLoadBalancerTypePtrOutput)
}

// Defines autoscaling behaviour.
type ClusterAutoscalingAutoscalingProfile string

const (
	// No change to autoscaling configuration.
	ClusterAutoscalingAutoscalingProfileProfileUnspecified = ClusterAutoscalingAutoscalingProfile("PROFILE_UNSPECIFIED")
	// Prioritize optimizing utilization of resources.
	ClusterAutoscalingAutoscalingProfileOptimizeUtilization = ClusterAutoscalingAutoscalingProfile("OPTIMIZE_UTILIZATION")
	// Use default (balanced) autoscaling configuration.
	ClusterAutoscalingAutoscalingProfileBalanced = ClusterAutoscalingAutoscalingProfile("BALANCED")
)

func (ClusterAutoscalingAutoscalingProfile) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutoscalingAutoscalingProfile)(nil)).Elem()
}

func (e ClusterAutoscalingAutoscalingProfile) ToClusterAutoscalingAutoscalingProfileOutput() ClusterAutoscalingAutoscalingProfileOutput {
	return pulumi.ToOutput(e).(ClusterAutoscalingAutoscalingProfileOutput)
}

func (e ClusterAutoscalingAutoscalingProfile) ToClusterAutoscalingAutoscalingProfileOutputWithContext(ctx context.Context) ClusterAutoscalingAutoscalingProfileOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterAutoscalingAutoscalingProfileOutput)
}

func (e ClusterAutoscalingAutoscalingProfile) ToClusterAutoscalingAutoscalingProfilePtrOutput() ClusterAutoscalingAutoscalingProfilePtrOutput {
	return e.ToClusterAutoscalingAutoscalingProfilePtrOutputWithContext(context.Background())
}

func (e ClusterAutoscalingAutoscalingProfile) ToClusterAutoscalingAutoscalingProfilePtrOutputWithContext(ctx context.Context) ClusterAutoscalingAutoscalingProfilePtrOutput {
	return ClusterAutoscalingAutoscalingProfile(e).ToClusterAutoscalingAutoscalingProfileOutputWithContext(ctx).ToClusterAutoscalingAutoscalingProfilePtrOutputWithContext(ctx)
}

func (e ClusterAutoscalingAutoscalingProfile) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterAutoscalingAutoscalingProfile) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterAutoscalingAutoscalingProfile) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterAutoscalingAutoscalingProfile) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterAutoscalingAutoscalingProfileOutput struct{ *pulumi.OutputState }

func (ClusterAutoscalingAutoscalingProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutoscalingAutoscalingProfile)(nil)).Elem()
}

func (o ClusterAutoscalingAutoscalingProfileOutput) ToClusterAutoscalingAutoscalingProfileOutput() ClusterAutoscalingAutoscalingProfileOutput {
	return o
}

func (o ClusterAutoscalingAutoscalingProfileOutput) ToClusterAutoscalingAutoscalingProfileOutputWithContext(ctx context.Context) ClusterAutoscalingAutoscalingProfileOutput {
	return o
}

func (o ClusterAutoscalingAutoscalingProfileOutput) ToClusterAutoscalingAutoscalingProfilePtrOutput() ClusterAutoscalingAutoscalingProfilePtrOutput {
	return o.ToClusterAutoscalingAutoscalingProfilePtrOutputWithContext(context.Background())
}

func (o ClusterAutoscalingAutoscalingProfileOutput) ToClusterAutoscalingAutoscalingProfilePtrOutputWithContext(ctx context.Context) ClusterAutoscalingAutoscalingProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutoscalingAutoscalingProfile) *ClusterAutoscalingAutoscalingProfile {
		return &v
	}).(ClusterAutoscalingAutoscalingProfilePtrOutput)
}

func (o ClusterAutoscalingAutoscalingProfileOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterAutoscalingAutoscalingProfileOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterAutoscalingAutoscalingProfile) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterAutoscalingAutoscalingProfileOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterAutoscalingAutoscalingProfileOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterAutoscalingAutoscalingProfile) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterAutoscalingAutoscalingProfilePtrOutput struct{ *pulumi.OutputState }

func (ClusterAutoscalingAutoscalingProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutoscalingAutoscalingProfile)(nil)).Elem()
}

func (o ClusterAutoscalingAutoscalingProfilePtrOutput) ToClusterAutoscalingAutoscalingProfilePtrOutput() ClusterAutoscalingAutoscalingProfilePtrOutput {
	return o
}

func (o ClusterAutoscalingAutoscalingProfilePtrOutput) ToClusterAutoscalingAutoscalingProfilePtrOutputWithContext(ctx context.Context) ClusterAutoscalingAutoscalingProfilePtrOutput {
	return o
}

func (o ClusterAutoscalingAutoscalingProfilePtrOutput) Elem() ClusterAutoscalingAutoscalingProfileOutput {
	return o.ApplyT(func(v *ClusterAutoscalingAutoscalingProfile) ClusterAutoscalingAutoscalingProfile {
		if v != nil {
			return *v
		}
		var ret ClusterAutoscalingAutoscalingProfile
		return ret
	}).(ClusterAutoscalingAutoscalingProfileOutput)
}

func (o ClusterAutoscalingAutoscalingProfilePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterAutoscalingAutoscalingProfilePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterAutoscalingAutoscalingProfile) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusterAutoscalingAutoscalingProfileInput is an input type that accepts ClusterAutoscalingAutoscalingProfileArgs and ClusterAutoscalingAutoscalingProfileOutput values.
// You can construct a concrete instance of `ClusterAutoscalingAutoscalingProfileInput` via:
//
//	ClusterAutoscalingAutoscalingProfileArgs{...}
type ClusterAutoscalingAutoscalingProfileInput interface {
	pulumi.Input

	ToClusterAutoscalingAutoscalingProfileOutput() ClusterAutoscalingAutoscalingProfileOutput
	ToClusterAutoscalingAutoscalingProfileOutputWithContext(context.Context) ClusterAutoscalingAutoscalingProfileOutput
}

var clusterAutoscalingAutoscalingProfilePtrType = reflect.TypeOf((**ClusterAutoscalingAutoscalingProfile)(nil)).Elem()

type ClusterAutoscalingAutoscalingProfilePtrInput interface {
	pulumi.Input

	ToClusterAutoscalingAutoscalingProfilePtrOutput() ClusterAutoscalingAutoscalingProfilePtrOutput
	ToClusterAutoscalingAutoscalingProfilePtrOutputWithContext(context.Context) ClusterAutoscalingAutoscalingProfilePtrOutput
}

type clusterAutoscalingAutoscalingProfilePtr string

func ClusterAutoscalingAutoscalingProfilePtr(v string) ClusterAutoscalingAutoscalingProfilePtrInput {
	return (*clusterAutoscalingAutoscalingProfilePtr)(&v)
}

func (*clusterAutoscalingAutoscalingProfilePtr) ElementType() reflect.Type {
	return clusterAutoscalingAutoscalingProfilePtrType
}

func (in *clusterAutoscalingAutoscalingProfilePtr) ToClusterAutoscalingAutoscalingProfilePtrOutput() ClusterAutoscalingAutoscalingProfilePtrOutput {
	return pulumi.ToOutput(in).(ClusterAutoscalingAutoscalingProfilePtrOutput)
}

func (in *clusterAutoscalingAutoscalingProfilePtr) ToClusterAutoscalingAutoscalingProfilePtrOutputWithContext(ctx context.Context) ClusterAutoscalingAutoscalingProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterAutoscalingAutoscalingProfilePtrOutput)
}

// Type of the integration.
type ClusterTelemetryType string

const (
	// Not set.
	ClusterTelemetryTypeUnspecified = ClusterTelemetryType("UNSPECIFIED")
	// Monitoring integration is disabled.
	ClusterTelemetryTypeDisabled = ClusterTelemetryType("DISABLED")
	// Monitoring integration is enabled.
	ClusterTelemetryTypeEnabled = ClusterTelemetryType("ENABLED")
	// Only system components are monitored and logged.
	ClusterTelemetryTypeSystemOnly = ClusterTelemetryType("SYSTEM_ONLY")
)

func (ClusterTelemetryType) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTelemetryType)(nil)).Elem()
}

func (e ClusterTelemetryType) ToClusterTelemetryTypeOutput() ClusterTelemetryTypeOutput {
	return pulumi.ToOutput(e).(ClusterTelemetryTypeOutput)
}

func (e ClusterTelemetryType) ToClusterTelemetryTypeOutputWithContext(ctx context.Context) ClusterTelemetryTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterTelemetryTypeOutput)
}

func (e ClusterTelemetryType) ToClusterTelemetryTypePtrOutput() ClusterTelemetryTypePtrOutput {
	return e.ToClusterTelemetryTypePtrOutputWithContext(context.Background())
}

func (e ClusterTelemetryType) ToClusterTelemetryTypePtrOutputWithContext(ctx context.Context) ClusterTelemetryTypePtrOutput {
	return ClusterTelemetryType(e).ToClusterTelemetryTypeOutputWithContext(ctx).ToClusterTelemetryTypePtrOutputWithContext(ctx)
}

func (e ClusterTelemetryType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterTelemetryType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterTelemetryType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterTelemetryType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterTelemetryTypeOutput struct{ *pulumi.OutputState }

func (ClusterTelemetryTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTelemetryType)(nil)).Elem()
}

func (o ClusterTelemetryTypeOutput) ToClusterTelemetryTypeOutput() ClusterTelemetryTypeOutput {
	return o
}

func (o ClusterTelemetryTypeOutput) ToClusterTelemetryTypeOutputWithContext(ctx context.Context) ClusterTelemetryTypeOutput {
	return o
}

func (o ClusterTelemetryTypeOutput) ToClusterTelemetryTypePtrOutput() ClusterTelemetryTypePtrOutput {
	return o.ToClusterTelemetryTypePtrOutputWithContext(context.Background())
}

func (o ClusterTelemetryTypeOutput) ToClusterTelemetryTypePtrOutputWithContext(ctx context.Context) ClusterTelemetryTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterTelemetryType) *ClusterTelemetryType {
		return &v
	}).(ClusterTelemetryTypePtrOutput)
}

func (o ClusterTelemetryTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterTelemetryTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterTelemetryType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterTelemetryTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterTelemetryTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterTelemetryType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterTelemetryTypePtrOutput struct{ *pulumi.OutputState }

func (ClusterTelemetryTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterTelemetryType)(nil)).Elem()
}

func (o ClusterTelemetryTypePtrOutput) ToClusterTelemetryTypePtrOutput() ClusterTelemetryTypePtrOutput {
	return o
}

func (o ClusterTelemetryTypePtrOutput) ToClusterTelemetryTypePtrOutputWithContext(ctx context.Context) ClusterTelemetryTypePtrOutput {
	return o
}

func (o ClusterTelemetryTypePtrOutput) Elem() ClusterTelemetryTypeOutput {
	return o.ApplyT(func(v *ClusterTelemetryType) ClusterTelemetryType {
		if v != nil {
			return *v
		}
		var ret ClusterTelemetryType
		return ret
	}).(ClusterTelemetryTypeOutput)
}

func (o ClusterTelemetryTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterTelemetryTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterTelemetryType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusterTelemetryTypeInput is an input type that accepts ClusterTelemetryTypeArgs and ClusterTelemetryTypeOutput values.
// You can construct a concrete instance of `ClusterTelemetryTypeInput` via:
//
//	ClusterTelemetryTypeArgs{...}
type ClusterTelemetryTypeInput interface {
	pulumi.Input

	ToClusterTelemetryTypeOutput() ClusterTelemetryTypeOutput
	ToClusterTelemetryTypeOutputWithContext(context.Context) ClusterTelemetryTypeOutput
}

var clusterTelemetryTypePtrType = reflect.TypeOf((**ClusterTelemetryType)(nil)).Elem()

type ClusterTelemetryTypePtrInput interface {
	pulumi.Input

	ToClusterTelemetryTypePtrOutput() ClusterTelemetryTypePtrOutput
	ToClusterTelemetryTypePtrOutputWithContext(context.Context) ClusterTelemetryTypePtrOutput
}

type clusterTelemetryTypePtr string

func ClusterTelemetryTypePtr(v string) ClusterTelemetryTypePtrInput {
	return (*clusterTelemetryTypePtr)(&v)
}

func (*clusterTelemetryTypePtr) ElementType() reflect.Type {
	return clusterTelemetryTypePtrType
}

func (in *clusterTelemetryTypePtr) ToClusterTelemetryTypePtrOutput() ClusterTelemetryTypePtrOutput {
	return pulumi.ToOutput(in).(ClusterTelemetryTypePtrOutput)
}

func (in *clusterTelemetryTypePtr) ToClusterTelemetryTypePtrOutputWithContext(ctx context.Context) ClusterTelemetryTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterTelemetryTypePtrOutput)
}

// The desired datapath provider for the cluster.
type ClusterUpdateDesiredDatapathProvider string

const (
	// Default value.
	ClusterUpdateDesiredDatapathProviderDatapathProviderUnspecified = ClusterUpdateDesiredDatapathProvider("DATAPATH_PROVIDER_UNSPECIFIED")
	// Use the IPTables implementation based on kube-proxy.
	ClusterUpdateDesiredDatapathProviderLegacyDatapath = ClusterUpdateDesiredDatapathProvider("LEGACY_DATAPATH")
	// Use the eBPF based GKE Dataplane V2 with additional features. See the [GKE Dataplane V2 documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2) for more.
	ClusterUpdateDesiredDatapathProviderAdvancedDatapath = ClusterUpdateDesiredDatapathProvider("ADVANCED_DATAPATH")
)

// The desired state of IPv6 connectivity to Google Services.
type ClusterUpdateDesiredPrivateIpv6GoogleAccess string

const (
	// Default value. Same as DISABLED
	ClusterUpdateDesiredPrivateIpv6GoogleAccessPrivateIpv6GoogleAccessUnspecified = ClusterUpdateDesiredPrivateIpv6GoogleAccess("PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED")
	// No private access to or from Google Services
	ClusterUpdateDesiredPrivateIpv6GoogleAccessPrivateIpv6GoogleAccessDisabled = ClusterUpdateDesiredPrivateIpv6GoogleAccess("PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED")
	// Enables private IPv6 access to Google Services from GKE
	ClusterUpdateDesiredPrivateIpv6GoogleAccessPrivateIpv6GoogleAccessToGoogle = ClusterUpdateDesiredPrivateIpv6GoogleAccess("PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE")
	// Enables priate IPv6 access to and from Google Services
	ClusterUpdateDesiredPrivateIpv6GoogleAccessPrivateIpv6GoogleAccessBidirectional = ClusterUpdateDesiredPrivateIpv6GoogleAccess("PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL")
)

// cluster_dns indicates which in-cluster DNS provider should be used.
type DNSConfigClusterDns string

const (
	// Default value
	DNSConfigClusterDnsProviderUnspecified = DNSConfigClusterDns("PROVIDER_UNSPECIFIED")
	// Use GKE default DNS provider(kube-dns) for DNS resolution.
	DNSConfigClusterDnsPlatformDefault = DNSConfigClusterDns("PLATFORM_DEFAULT")
	// Use CloudDNS for DNS resolution.
	DNSConfigClusterDnsCloudDns = DNSConfigClusterDns("CLOUD_DNS")
)

func (DNSConfigClusterDns) ElementType() reflect.Type {
	return reflect.TypeOf((*DNSConfigClusterDns)(nil)).Elem()
}

func (e DNSConfigClusterDns) ToDNSConfigClusterDnsOutput() DNSConfigClusterDnsOutput {
	return pulumi.ToOutput(e).(DNSConfigClusterDnsOutput)
}

func (e DNSConfigClusterDns) ToDNSConfigClusterDnsOutputWithContext(ctx context.Context) DNSConfigClusterDnsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DNSConfigClusterDnsOutput)
}

func (e DNSConfigClusterDns) ToDNSConfigClusterDnsPtrOutput() DNSConfigClusterDnsPtrOutput {
	return e.ToDNSConfigClusterDnsPtrOutputWithContext(context.Background())
}

func (e DNSConfigClusterDns) ToDNSConfigClusterDnsPtrOutputWithContext(ctx context.Context) DNSConfigClusterDnsPtrOutput {
	return DNSConfigClusterDns(e).ToDNSConfigClusterDnsOutputWithContext(ctx).ToDNSConfigClusterDnsPtrOutputWithContext(ctx)
}

func (e DNSConfigClusterDns) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DNSConfigClusterDns) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DNSConfigClusterDns) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DNSConfigClusterDns) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DNSConfigClusterDnsOutput struct{ *pulumi.OutputState }

func (DNSConfigClusterDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DNSConfigClusterDns)(nil)).Elem()
}

func (o DNSConfigClusterDnsOutput) ToDNSConfigClusterDnsOutput() DNSConfigClusterDnsOutput {
	return o
}

func (o DNSConfigClusterDnsOutput) ToDNSConfigClusterDnsOutputWithContext(ctx context.Context) DNSConfigClusterDnsOutput {
	return o
}

func (o DNSConfigClusterDnsOutput) ToDNSConfigClusterDnsPtrOutput() DNSConfigClusterDnsPtrOutput {
	return o.ToDNSConfigClusterDnsPtrOutputWithContext(context.Background())
}

func (o DNSConfigClusterDnsOutput) ToDNSConfigClusterDnsPtrOutputWithContext(ctx context.Context) DNSConfigClusterDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DNSConfigClusterDns) *DNSConfigClusterDns {
		return &v
	}).(DNSConfigClusterDnsPtrOutput)
}

func (o DNSConfigClusterDnsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DNSConfigClusterDnsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DNSConfigClusterDns) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DNSConfigClusterDnsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DNSConfigClusterDnsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DNSConfigClusterDns) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DNSConfigClusterDnsPtrOutput struct{ *pulumi.OutputState }

func (DNSConfigClusterDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DNSConfigClusterDns)(nil)).Elem()
}

func (o DNSConfigClusterDnsPtrOutput) ToDNSConfigClusterDnsPtrOutput() DNSConfigClusterDnsPtrOutput {
	return o
}

func (o DNSConfigClusterDnsPtrOutput) ToDNSConfigClusterDnsPtrOutputWithContext(ctx context.Context) DNSConfigClusterDnsPtrOutput {
	return o
}

func (o DNSConfigClusterDnsPtrOutput) Elem() DNSConfigClusterDnsOutput {
	return o.ApplyT(func(v *DNSConfigClusterDns) DNSConfigClusterDns {
		if v != nil {
			return *v
		}
		var ret DNSConfigClusterDns
		return ret
	}).(DNSConfigClusterDnsOutput)
}

func (o DNSConfigClusterDnsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DNSConfigClusterDnsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DNSConfigClusterDns) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DNSConfigClusterDnsInput is an input type that accepts DNSConfigClusterDnsArgs and DNSConfigClusterDnsOutput values.
// You can construct a concrete instance of `DNSConfigClusterDnsInput` via:
//
//	DNSConfigClusterDnsArgs{...}
type DNSConfigClusterDnsInput interface {
	pulumi.Input

	ToDNSConfigClusterDnsOutput() DNSConfigClusterDnsOutput
	ToDNSConfigClusterDnsOutputWithContext(context.Context) DNSConfigClusterDnsOutput
}

var dnsconfigClusterDnsPtrType = reflect.TypeOf((**DNSConfigClusterDns)(nil)).Elem()

type DNSConfigClusterDnsPtrInput interface {
	pulumi.Input

	ToDNSConfigClusterDnsPtrOutput() DNSConfigClusterDnsPtrOutput
	ToDNSConfigClusterDnsPtrOutputWithContext(context.Context) DNSConfigClusterDnsPtrOutput
}

type dnsconfigClusterDnsPtr string

func DNSConfigClusterDnsPtr(v string) DNSConfigClusterDnsPtrInput {
	return (*dnsconfigClusterDnsPtr)(&v)
}

func (*dnsconfigClusterDnsPtr) ElementType() reflect.Type {
	return dnsconfigClusterDnsPtrType
}

func (in *dnsconfigClusterDnsPtr) ToDNSConfigClusterDnsPtrOutput() DNSConfigClusterDnsPtrOutput {
	return pulumi.ToOutput(in).(DNSConfigClusterDnsPtrOutput)
}

func (in *dnsconfigClusterDnsPtr) ToDNSConfigClusterDnsPtrOutputWithContext(ctx context.Context) DNSConfigClusterDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DNSConfigClusterDnsPtrOutput)
}

// cluster_dns_scope indicates the scope of access to cluster DNS records.
type DNSConfigClusterDnsScope string

const (
	// Default value, will be inferred as cluster scope.
	DNSConfigClusterDnsScopeDnsScopeUnspecified = DNSConfigClusterDnsScope("DNS_SCOPE_UNSPECIFIED")
	// DNS records are accessible from within the cluster.
	DNSConfigClusterDnsScopeClusterScope = DNSConfigClusterDnsScope("CLUSTER_SCOPE")
	// DNS records are accessible from within the VPC.
	DNSConfigClusterDnsScopeVpcScope = DNSConfigClusterDnsScope("VPC_SCOPE")
)

func (DNSConfigClusterDnsScope) ElementType() reflect.Type {
	return reflect.TypeOf((*DNSConfigClusterDnsScope)(nil)).Elem()
}

func (e DNSConfigClusterDnsScope) ToDNSConfigClusterDnsScopeOutput() DNSConfigClusterDnsScopeOutput {
	return pulumi.ToOutput(e).(DNSConfigClusterDnsScopeOutput)
}

func (e DNSConfigClusterDnsScope) ToDNSConfigClusterDnsScopeOutputWithContext(ctx context.Context) DNSConfigClusterDnsScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DNSConfigClusterDnsScopeOutput)
}

func (e DNSConfigClusterDnsScope) ToDNSConfigClusterDnsScopePtrOutput() DNSConfigClusterDnsScopePtrOutput {
	return e.ToDNSConfigClusterDnsScopePtrOutputWithContext(context.Background())
}

func (e DNSConfigClusterDnsScope) ToDNSConfigClusterDnsScopePtrOutputWithContext(ctx context.Context) DNSConfigClusterDnsScopePtrOutput {
	return DNSConfigClusterDnsScope(e).ToDNSConfigClusterDnsScopeOutputWithContext(ctx).ToDNSConfigClusterDnsScopePtrOutputWithContext(ctx)
}

func (e DNSConfigClusterDnsScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DNSConfigClusterDnsScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DNSConfigClusterDnsScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DNSConfigClusterDnsScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DNSConfigClusterDnsScopeOutput struct{ *pulumi.OutputState }

func (DNSConfigClusterDnsScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DNSConfigClusterDnsScope)(nil)).Elem()
}

func (o DNSConfigClusterDnsScopeOutput) ToDNSConfigClusterDnsScopeOutput() DNSConfigClusterDnsScopeOutput {
	return o
}

func (o DNSConfigClusterDnsScopeOutput) ToDNSConfigClusterDnsScopeOutputWithContext(ctx context.Context) DNSConfigClusterDnsScopeOutput {
	return o
}

func (o DNSConfigClusterDnsScopeOutput) ToDNSConfigClusterDnsScopePtrOutput() DNSConfigClusterDnsScopePtrOutput {
	return o.ToDNSConfigClusterDnsScopePtrOutputWithContext(context.Background())
}

func (o DNSConfigClusterDnsScopeOutput) ToDNSConfigClusterDnsScopePtrOutputWithContext(ctx context.Context) DNSConfigClusterDnsScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DNSConfigClusterDnsScope) *DNSConfigClusterDnsScope {
		return &v
	}).(DNSConfigClusterDnsScopePtrOutput)
}

func (o DNSConfigClusterDnsScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DNSConfigClusterDnsScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DNSConfigClusterDnsScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DNSConfigClusterDnsScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DNSConfigClusterDnsScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DNSConfigClusterDnsScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DNSConfigClusterDnsScopePtrOutput struct{ *pulumi.OutputState }

func (DNSConfigClusterDnsScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DNSConfigClusterDnsScope)(nil)).Elem()
}

func (o DNSConfigClusterDnsScopePtrOutput) ToDNSConfigClusterDnsScopePtrOutput() DNSConfigClusterDnsScopePtrOutput {
	return o
}

func (o DNSConfigClusterDnsScopePtrOutput) ToDNSConfigClusterDnsScopePtrOutputWithContext(ctx context.Context) DNSConfigClusterDnsScopePtrOutput {
	return o
}

func (o DNSConfigClusterDnsScopePtrOutput) Elem() DNSConfigClusterDnsScopeOutput {
	return o.ApplyT(func(v *DNSConfigClusterDnsScope) DNSConfigClusterDnsScope {
		if v != nil {
			return *v
		}
		var ret DNSConfigClusterDnsScope
		return ret
	}).(DNSConfigClusterDnsScopeOutput)
}

func (o DNSConfigClusterDnsScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DNSConfigClusterDnsScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DNSConfigClusterDnsScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DNSConfigClusterDnsScopeInput is an input type that accepts DNSConfigClusterDnsScopeArgs and DNSConfigClusterDnsScopeOutput values.
// You can construct a concrete instance of `DNSConfigClusterDnsScopeInput` via:
//
//	DNSConfigClusterDnsScopeArgs{...}
type DNSConfigClusterDnsScopeInput interface {
	pulumi.Input

	ToDNSConfigClusterDnsScopeOutput() DNSConfigClusterDnsScopeOutput
	ToDNSConfigClusterDnsScopeOutputWithContext(context.Context) DNSConfigClusterDnsScopeOutput
}

var dnsconfigClusterDnsScopePtrType = reflect.TypeOf((**DNSConfigClusterDnsScope)(nil)).Elem()

type DNSConfigClusterDnsScopePtrInput interface {
	pulumi.Input

	ToDNSConfigClusterDnsScopePtrOutput() DNSConfigClusterDnsScopePtrOutput
	ToDNSConfigClusterDnsScopePtrOutputWithContext(context.Context) DNSConfigClusterDnsScopePtrOutput
}

type dnsconfigClusterDnsScopePtr string

func DNSConfigClusterDnsScopePtr(v string) DNSConfigClusterDnsScopePtrInput {
	return (*dnsconfigClusterDnsScopePtr)(&v)
}

func (*dnsconfigClusterDnsScopePtr) ElementType() reflect.Type {
	return dnsconfigClusterDnsScopePtrType
}

func (in *dnsconfigClusterDnsScopePtr) ToDNSConfigClusterDnsScopePtrOutput() DNSConfigClusterDnsScopePtrOutput {
	return pulumi.ToOutput(in).(DNSConfigClusterDnsScopePtrOutput)
}

func (in *dnsconfigClusterDnsScopePtr) ToDNSConfigClusterDnsScopePtrOutputWithContext(ctx context.Context) DNSConfigClusterDnsScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DNSConfigClusterDnsScopePtrOutput)
}

// Denotes the state of etcd encryption.
type DatabaseEncryptionState string

const (
	// Should never be set
	DatabaseEncryptionStateUnknown = DatabaseEncryptionState("UNKNOWN")
	// Secrets in etcd are encrypted.
	DatabaseEncryptionStateEncrypted = DatabaseEncryptionState("ENCRYPTED")
	// Secrets in etcd are stored in plain text (at etcd level) - this is unrelated to Compute Engine level full disk encryption.
	DatabaseEncryptionStateDecrypted = DatabaseEncryptionState("DECRYPTED")
)

func (DatabaseEncryptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseEncryptionState)(nil)).Elem()
}

func (e DatabaseEncryptionState) ToDatabaseEncryptionStateOutput() DatabaseEncryptionStateOutput {
	return pulumi.ToOutput(e).(DatabaseEncryptionStateOutput)
}

func (e DatabaseEncryptionState) ToDatabaseEncryptionStateOutputWithContext(ctx context.Context) DatabaseEncryptionStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseEncryptionStateOutput)
}

func (e DatabaseEncryptionState) ToDatabaseEncryptionStatePtrOutput() DatabaseEncryptionStatePtrOutput {
	return e.ToDatabaseEncryptionStatePtrOutputWithContext(context.Background())
}

func (e DatabaseEncryptionState) ToDatabaseEncryptionStatePtrOutputWithContext(ctx context.Context) DatabaseEncryptionStatePtrOutput {
	return DatabaseEncryptionState(e).ToDatabaseEncryptionStateOutputWithContext(ctx).ToDatabaseEncryptionStatePtrOutputWithContext(ctx)
}

func (e DatabaseEncryptionState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseEncryptionState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseEncryptionState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseEncryptionState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseEncryptionStateOutput struct{ *pulumi.OutputState }

func (DatabaseEncryptionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseEncryptionState)(nil)).Elem()
}

func (o DatabaseEncryptionStateOutput) ToDatabaseEncryptionStateOutput() DatabaseEncryptionStateOutput {
	return o
}

func (o DatabaseEncryptionStateOutput) ToDatabaseEncryptionStateOutputWithContext(ctx context.Context) DatabaseEncryptionStateOutput {
	return o
}

func (o DatabaseEncryptionStateOutput) ToDatabaseEncryptionStatePtrOutput() DatabaseEncryptionStatePtrOutput {
	return o.ToDatabaseEncryptionStatePtrOutputWithContext(context.Background())
}

func (o DatabaseEncryptionStateOutput) ToDatabaseEncryptionStatePtrOutputWithContext(ctx context.Context) DatabaseEncryptionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseEncryptionState) *DatabaseEncryptionState {
		return &v
	}).(DatabaseEncryptionStatePtrOutput)
}

func (o DatabaseEncryptionStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseEncryptionStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseEncryptionState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseEncryptionStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseEncryptionStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseEncryptionState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseEncryptionStatePtrOutput struct{ *pulumi.OutputState }

func (DatabaseEncryptionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseEncryptionState)(nil)).Elem()
}

func (o DatabaseEncryptionStatePtrOutput) ToDatabaseEncryptionStatePtrOutput() DatabaseEncryptionStatePtrOutput {
	return o
}

func (o DatabaseEncryptionStatePtrOutput) ToDatabaseEncryptionStatePtrOutputWithContext(ctx context.Context) DatabaseEncryptionStatePtrOutput {
	return o
}

func (o DatabaseEncryptionStatePtrOutput) Elem() DatabaseEncryptionStateOutput {
	return o.ApplyT(func(v *DatabaseEncryptionState) DatabaseEncryptionState {
		if v != nil {
			return *v
		}
		var ret DatabaseEncryptionState
		return ret
	}).(DatabaseEncryptionStateOutput)
}

func (o DatabaseEncryptionStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseEncryptionStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseEncryptionState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabaseEncryptionStateInput is an input type that accepts DatabaseEncryptionStateArgs and DatabaseEncryptionStateOutput values.
// You can construct a concrete instance of `DatabaseEncryptionStateInput` via:
//
//	DatabaseEncryptionStateArgs{...}
type DatabaseEncryptionStateInput interface {
	pulumi.Input

	ToDatabaseEncryptionStateOutput() DatabaseEncryptionStateOutput
	ToDatabaseEncryptionStateOutputWithContext(context.Context) DatabaseEncryptionStateOutput
}

var databaseEncryptionStatePtrType = reflect.TypeOf((**DatabaseEncryptionState)(nil)).Elem()

type DatabaseEncryptionStatePtrInput interface {
	pulumi.Input

	ToDatabaseEncryptionStatePtrOutput() DatabaseEncryptionStatePtrOutput
	ToDatabaseEncryptionStatePtrOutputWithContext(context.Context) DatabaseEncryptionStatePtrOutput
}

type databaseEncryptionStatePtr string

func DatabaseEncryptionStatePtr(v string) DatabaseEncryptionStatePtrInput {
	return (*databaseEncryptionStatePtr)(&v)
}

func (*databaseEncryptionStatePtr) ElementType() reflect.Type {
	return databaseEncryptionStatePtrType
}

func (in *databaseEncryptionStatePtr) ToDatabaseEncryptionStatePtrOutput() DatabaseEncryptionStatePtrOutput {
	return pulumi.ToOutput(in).(DatabaseEncryptionStatePtrOutput)
}

func (in *databaseEncryptionStatePtr) ToDatabaseEncryptionStatePtrOutputWithContext(ctx context.Context) DatabaseEncryptionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseEncryptionStatePtrOutput)
}

type FilterEventTypeItem string

const (
	// Not set, will be ignored.
	FilterEventTypeItemEventTypeUnspecified = FilterEventTypeItem("EVENT_TYPE_UNSPECIFIED")
	// Corresponds with UpgradeAvailableEvent.
	FilterEventTypeItemUpgradeAvailableEvent = FilterEventTypeItem("UPGRADE_AVAILABLE_EVENT")
	// Corresponds with UpgradeEvent.
	FilterEventTypeItemUpgradeEvent = FilterEventTypeItem("UPGRADE_EVENT")
	// Corresponds with SecurityBulletinEvent.
	FilterEventTypeItemSecurityBulletinEvent = FilterEventTypeItem("SECURITY_BULLETIN_EVENT")
)

func (FilterEventTypeItem) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterEventTypeItem)(nil)).Elem()
}

func (e FilterEventTypeItem) ToFilterEventTypeItemOutput() FilterEventTypeItemOutput {
	return pulumi.ToOutput(e).(FilterEventTypeItemOutput)
}

func (e FilterEventTypeItem) ToFilterEventTypeItemOutputWithContext(ctx context.Context) FilterEventTypeItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FilterEventTypeItemOutput)
}

func (e FilterEventTypeItem) ToFilterEventTypeItemPtrOutput() FilterEventTypeItemPtrOutput {
	return e.ToFilterEventTypeItemPtrOutputWithContext(context.Background())
}

func (e FilterEventTypeItem) ToFilterEventTypeItemPtrOutputWithContext(ctx context.Context) FilterEventTypeItemPtrOutput {
	return FilterEventTypeItem(e).ToFilterEventTypeItemOutputWithContext(ctx).ToFilterEventTypeItemPtrOutputWithContext(ctx)
}

func (e FilterEventTypeItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FilterEventTypeItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FilterEventTypeItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FilterEventTypeItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FilterEventTypeItemOutput struct{ *pulumi.OutputState }

func (FilterEventTypeItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterEventTypeItem)(nil)).Elem()
}

func (o FilterEventTypeItemOutput) ToFilterEventTypeItemOutput() FilterEventTypeItemOutput {
	return o
}

func (o FilterEventTypeItemOutput) ToFilterEventTypeItemOutputWithContext(ctx context.Context) FilterEventTypeItemOutput {
	return o
}

func (o FilterEventTypeItemOutput) ToFilterEventTypeItemPtrOutput() FilterEventTypeItemPtrOutput {
	return o.ToFilterEventTypeItemPtrOutputWithContext(context.Background())
}

func (o FilterEventTypeItemOutput) ToFilterEventTypeItemPtrOutputWithContext(ctx context.Context) FilterEventTypeItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterEventTypeItem) *FilterEventTypeItem {
		return &v
	}).(FilterEventTypeItemPtrOutput)
}

func (o FilterEventTypeItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FilterEventTypeItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FilterEventTypeItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FilterEventTypeItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FilterEventTypeItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FilterEventTypeItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FilterEventTypeItemPtrOutput struct{ *pulumi.OutputState }

func (FilterEventTypeItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterEventTypeItem)(nil)).Elem()
}

func (o FilterEventTypeItemPtrOutput) ToFilterEventTypeItemPtrOutput() FilterEventTypeItemPtrOutput {
	return o
}

func (o FilterEventTypeItemPtrOutput) ToFilterEventTypeItemPtrOutputWithContext(ctx context.Context) FilterEventTypeItemPtrOutput {
	return o
}

func (o FilterEventTypeItemPtrOutput) Elem() FilterEventTypeItemOutput {
	return o.ApplyT(func(v *FilterEventTypeItem) FilterEventTypeItem {
		if v != nil {
			return *v
		}
		var ret FilterEventTypeItem
		return ret
	}).(FilterEventTypeItemOutput)
}

func (o FilterEventTypeItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FilterEventTypeItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FilterEventTypeItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FilterEventTypeItemInput is an input type that accepts FilterEventTypeItemArgs and FilterEventTypeItemOutput values.
// You can construct a concrete instance of `FilterEventTypeItemInput` via:
//
//	FilterEventTypeItemArgs{...}
type FilterEventTypeItemInput interface {
	pulumi.Input

	ToFilterEventTypeItemOutput() FilterEventTypeItemOutput
	ToFilterEventTypeItemOutputWithContext(context.Context) FilterEventTypeItemOutput
}

var filterEventTypeItemPtrType = reflect.TypeOf((**FilterEventTypeItem)(nil)).Elem()

type FilterEventTypeItemPtrInput interface {
	pulumi.Input

	ToFilterEventTypeItemPtrOutput() FilterEventTypeItemPtrOutput
	ToFilterEventTypeItemPtrOutputWithContext(context.Context) FilterEventTypeItemPtrOutput
}

type filterEventTypeItemPtr string

func FilterEventTypeItemPtr(v string) FilterEventTypeItemPtrInput {
	return (*filterEventTypeItemPtr)(&v)
}

func (*filterEventTypeItemPtr) ElementType() reflect.Type {
	return filterEventTypeItemPtrType
}

func (in *filterEventTypeItemPtr) ToFilterEventTypeItemPtrOutput() FilterEventTypeItemPtrOutput {
	return pulumi.ToOutput(in).(FilterEventTypeItemPtrOutput)
}

func (in *filterEventTypeItemPtr) ToFilterEventTypeItemPtrOutputWithContext(ctx context.Context) FilterEventTypeItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FilterEventTypeItemPtrOutput)
}

// FilterEventTypeItemArrayInput is an input type that accepts FilterEventTypeItemArray and FilterEventTypeItemArrayOutput values.
// You can construct a concrete instance of `FilterEventTypeItemArrayInput` via:
//
//	FilterEventTypeItemArray{ FilterEventTypeItemArgs{...} }
type FilterEventTypeItemArrayInput interface {
	pulumi.Input

	ToFilterEventTypeItemArrayOutput() FilterEventTypeItemArrayOutput
	ToFilterEventTypeItemArrayOutputWithContext(context.Context) FilterEventTypeItemArrayOutput
}

type FilterEventTypeItemArray []FilterEventTypeItem

func (FilterEventTypeItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterEventTypeItem)(nil)).Elem()
}

func (i FilterEventTypeItemArray) ToFilterEventTypeItemArrayOutput() FilterEventTypeItemArrayOutput {
	return i.ToFilterEventTypeItemArrayOutputWithContext(context.Background())
}

func (i FilterEventTypeItemArray) ToFilterEventTypeItemArrayOutputWithContext(ctx context.Context) FilterEventTypeItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterEventTypeItemArrayOutput)
}

type FilterEventTypeItemArrayOutput struct{ *pulumi.OutputState }

func (FilterEventTypeItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterEventTypeItem)(nil)).Elem()
}

func (o FilterEventTypeItemArrayOutput) ToFilterEventTypeItemArrayOutput() FilterEventTypeItemArrayOutput {
	return o
}

func (o FilterEventTypeItemArrayOutput) ToFilterEventTypeItemArrayOutputWithContext(ctx context.Context) FilterEventTypeItemArrayOutput {
	return o
}

func (o FilterEventTypeItemArrayOutput) Index(i pulumi.IntInput) FilterEventTypeItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterEventTypeItem {
		return vs[0].([]FilterEventTypeItem)[vs[1].(int)]
	}).(FilterEventTypeItemOutput)
}

// The type of GPU sharing strategy to enable on the GPU node.
type GPUSharingConfigGpuSharingStrategy string

const (
	// Default value.
	GPUSharingConfigGpuSharingStrategyGpuSharingStrategyUnspecified = GPUSharingConfigGpuSharingStrategy("GPU_SHARING_STRATEGY_UNSPECIFIED")
	// GPUs are time-shared between containers.
	GPUSharingConfigGpuSharingStrategyTimeSharing = GPUSharingConfigGpuSharingStrategy("TIME_SHARING")
)

func (GPUSharingConfigGpuSharingStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*GPUSharingConfigGpuSharingStrategy)(nil)).Elem()
}

func (e GPUSharingConfigGpuSharingStrategy) ToGPUSharingConfigGpuSharingStrategyOutput() GPUSharingConfigGpuSharingStrategyOutput {
	return pulumi.ToOutput(e).(GPUSharingConfigGpuSharingStrategyOutput)
}

func (e GPUSharingConfigGpuSharingStrategy) ToGPUSharingConfigGpuSharingStrategyOutputWithContext(ctx context.Context) GPUSharingConfigGpuSharingStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GPUSharingConfigGpuSharingStrategyOutput)
}

func (e GPUSharingConfigGpuSharingStrategy) ToGPUSharingConfigGpuSharingStrategyPtrOutput() GPUSharingConfigGpuSharingStrategyPtrOutput {
	return e.ToGPUSharingConfigGpuSharingStrategyPtrOutputWithContext(context.Background())
}

func (e GPUSharingConfigGpuSharingStrategy) ToGPUSharingConfigGpuSharingStrategyPtrOutputWithContext(ctx context.Context) GPUSharingConfigGpuSharingStrategyPtrOutput {
	return GPUSharingConfigGpuSharingStrategy(e).ToGPUSharingConfigGpuSharingStrategyOutputWithContext(ctx).ToGPUSharingConfigGpuSharingStrategyPtrOutputWithContext(ctx)
}

func (e GPUSharingConfigGpuSharingStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GPUSharingConfigGpuSharingStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GPUSharingConfigGpuSharingStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GPUSharingConfigGpuSharingStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GPUSharingConfigGpuSharingStrategyOutput struct{ *pulumi.OutputState }

func (GPUSharingConfigGpuSharingStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GPUSharingConfigGpuSharingStrategy)(nil)).Elem()
}

func (o GPUSharingConfigGpuSharingStrategyOutput) ToGPUSharingConfigGpuSharingStrategyOutput() GPUSharingConfigGpuSharingStrategyOutput {
	return o
}

func (o GPUSharingConfigGpuSharingStrategyOutput) ToGPUSharingConfigGpuSharingStrategyOutputWithContext(ctx context.Context) GPUSharingConfigGpuSharingStrategyOutput {
	return o
}

func (o GPUSharingConfigGpuSharingStrategyOutput) ToGPUSharingConfigGpuSharingStrategyPtrOutput() GPUSharingConfigGpuSharingStrategyPtrOutput {
	return o.ToGPUSharingConfigGpuSharingStrategyPtrOutputWithContext(context.Background())
}

func (o GPUSharingConfigGpuSharingStrategyOutput) ToGPUSharingConfigGpuSharingStrategyPtrOutputWithContext(ctx context.Context) GPUSharingConfigGpuSharingStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GPUSharingConfigGpuSharingStrategy) *GPUSharingConfigGpuSharingStrategy {
		return &v
	}).(GPUSharingConfigGpuSharingStrategyPtrOutput)
}

func (o GPUSharingConfigGpuSharingStrategyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GPUSharingConfigGpuSharingStrategyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GPUSharingConfigGpuSharingStrategy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GPUSharingConfigGpuSharingStrategyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GPUSharingConfigGpuSharingStrategyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GPUSharingConfigGpuSharingStrategy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GPUSharingConfigGpuSharingStrategyPtrOutput struct{ *pulumi.OutputState }

func (GPUSharingConfigGpuSharingStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GPUSharingConfigGpuSharingStrategy)(nil)).Elem()
}

func (o GPUSharingConfigGpuSharingStrategyPtrOutput) ToGPUSharingConfigGpuSharingStrategyPtrOutput() GPUSharingConfigGpuSharingStrategyPtrOutput {
	return o
}

func (o GPUSharingConfigGpuSharingStrategyPtrOutput) ToGPUSharingConfigGpuSharingStrategyPtrOutputWithContext(ctx context.Context) GPUSharingConfigGpuSharingStrategyPtrOutput {
	return o
}

func (o GPUSharingConfigGpuSharingStrategyPtrOutput) Elem() GPUSharingConfigGpuSharingStrategyOutput {
	return o.ApplyT(func(v *GPUSharingConfigGpuSharingStrategy) GPUSharingConfigGpuSharingStrategy {
		if v != nil {
			return *v
		}
		var ret GPUSharingConfigGpuSharingStrategy
		return ret
	}).(GPUSharingConfigGpuSharingStrategyOutput)
}

func (o GPUSharingConfigGpuSharingStrategyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GPUSharingConfigGpuSharingStrategyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GPUSharingConfigGpuSharingStrategy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GPUSharingConfigGpuSharingStrategyInput is an input type that accepts GPUSharingConfigGpuSharingStrategyArgs and GPUSharingConfigGpuSharingStrategyOutput values.
// You can construct a concrete instance of `GPUSharingConfigGpuSharingStrategyInput` via:
//
//	GPUSharingConfigGpuSharingStrategyArgs{...}
type GPUSharingConfigGpuSharingStrategyInput interface {
	pulumi.Input

	ToGPUSharingConfigGpuSharingStrategyOutput() GPUSharingConfigGpuSharingStrategyOutput
	ToGPUSharingConfigGpuSharingStrategyOutputWithContext(context.Context) GPUSharingConfigGpuSharingStrategyOutput
}

var gpusharingConfigGpuSharingStrategyPtrType = reflect.TypeOf((**GPUSharingConfigGpuSharingStrategy)(nil)).Elem()

type GPUSharingConfigGpuSharingStrategyPtrInput interface {
	pulumi.Input

	ToGPUSharingConfigGpuSharingStrategyPtrOutput() GPUSharingConfigGpuSharingStrategyPtrOutput
	ToGPUSharingConfigGpuSharingStrategyPtrOutputWithContext(context.Context) GPUSharingConfigGpuSharingStrategyPtrOutput
}

type gpusharingConfigGpuSharingStrategyPtr string

func GPUSharingConfigGpuSharingStrategyPtr(v string) GPUSharingConfigGpuSharingStrategyPtrInput {
	return (*gpusharingConfigGpuSharingStrategyPtr)(&v)
}

func (*gpusharingConfigGpuSharingStrategyPtr) ElementType() reflect.Type {
	return gpusharingConfigGpuSharingStrategyPtrType
}

func (in *gpusharingConfigGpuSharingStrategyPtr) ToGPUSharingConfigGpuSharingStrategyPtrOutput() GPUSharingConfigGpuSharingStrategyPtrOutput {
	return pulumi.ToOutput(in).(GPUSharingConfigGpuSharingStrategyPtrOutput)
}

func (in *gpusharingConfigGpuSharingStrategyPtr) ToGPUSharingConfigGpuSharingStrategyPtrOutputWithContext(ctx context.Context) GPUSharingConfigGpuSharingStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GPUSharingConfigGpuSharingStrategyPtrOutput)
}

// The ipv6 access type (internal or external) when create_subnetwork is true
type IPAllocationPolicyIpv6AccessType string

const (
	// Default value, will be defaulted as type external.
	IPAllocationPolicyIpv6AccessTypeIpv6AccessTypeUnspecified = IPAllocationPolicyIpv6AccessType("IPV6_ACCESS_TYPE_UNSPECIFIED")
	// Access type internal (all v6 addresses are internal IPs)
	IPAllocationPolicyIpv6AccessTypeInternal = IPAllocationPolicyIpv6AccessType("INTERNAL")
	// Access type external (all v6 addresses are external IPs)
	IPAllocationPolicyIpv6AccessTypeExternal = IPAllocationPolicyIpv6AccessType("EXTERNAL")
)

func (IPAllocationPolicyIpv6AccessType) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAllocationPolicyIpv6AccessType)(nil)).Elem()
}

func (e IPAllocationPolicyIpv6AccessType) ToIPAllocationPolicyIpv6AccessTypeOutput() IPAllocationPolicyIpv6AccessTypeOutput {
	return pulumi.ToOutput(e).(IPAllocationPolicyIpv6AccessTypeOutput)
}

func (e IPAllocationPolicyIpv6AccessType) ToIPAllocationPolicyIpv6AccessTypeOutputWithContext(ctx context.Context) IPAllocationPolicyIpv6AccessTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IPAllocationPolicyIpv6AccessTypeOutput)
}

func (e IPAllocationPolicyIpv6AccessType) ToIPAllocationPolicyIpv6AccessTypePtrOutput() IPAllocationPolicyIpv6AccessTypePtrOutput {
	return e.ToIPAllocationPolicyIpv6AccessTypePtrOutputWithContext(context.Background())
}

func (e IPAllocationPolicyIpv6AccessType) ToIPAllocationPolicyIpv6AccessTypePtrOutputWithContext(ctx context.Context) IPAllocationPolicyIpv6AccessTypePtrOutput {
	return IPAllocationPolicyIpv6AccessType(e).ToIPAllocationPolicyIpv6AccessTypeOutputWithContext(ctx).ToIPAllocationPolicyIpv6AccessTypePtrOutputWithContext(ctx)
}

func (e IPAllocationPolicyIpv6AccessType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IPAllocationPolicyIpv6AccessType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IPAllocationPolicyIpv6AccessType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IPAllocationPolicyIpv6AccessType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IPAllocationPolicyIpv6AccessTypeOutput struct{ *pulumi.OutputState }

func (IPAllocationPolicyIpv6AccessTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAllocationPolicyIpv6AccessType)(nil)).Elem()
}

func (o IPAllocationPolicyIpv6AccessTypeOutput) ToIPAllocationPolicyIpv6AccessTypeOutput() IPAllocationPolicyIpv6AccessTypeOutput {
	return o
}

func (o IPAllocationPolicyIpv6AccessTypeOutput) ToIPAllocationPolicyIpv6AccessTypeOutputWithContext(ctx context.Context) IPAllocationPolicyIpv6AccessTypeOutput {
	return o
}

func (o IPAllocationPolicyIpv6AccessTypeOutput) ToIPAllocationPolicyIpv6AccessTypePtrOutput() IPAllocationPolicyIpv6AccessTypePtrOutput {
	return o.ToIPAllocationPolicyIpv6AccessTypePtrOutputWithContext(context.Background())
}

func (o IPAllocationPolicyIpv6AccessTypeOutput) ToIPAllocationPolicyIpv6AccessTypePtrOutputWithContext(ctx context.Context) IPAllocationPolicyIpv6AccessTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IPAllocationPolicyIpv6AccessType) *IPAllocationPolicyIpv6AccessType {
		return &v
	}).(IPAllocationPolicyIpv6AccessTypePtrOutput)
}

func (o IPAllocationPolicyIpv6AccessTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IPAllocationPolicyIpv6AccessTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IPAllocationPolicyIpv6AccessType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IPAllocationPolicyIpv6AccessTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IPAllocationPolicyIpv6AccessTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IPAllocationPolicyIpv6AccessType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IPAllocationPolicyIpv6AccessTypePtrOutput struct{ *pulumi.OutputState }

func (IPAllocationPolicyIpv6AccessTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAllocationPolicyIpv6AccessType)(nil)).Elem()
}

func (o IPAllocationPolicyIpv6AccessTypePtrOutput) ToIPAllocationPolicyIpv6AccessTypePtrOutput() IPAllocationPolicyIpv6AccessTypePtrOutput {
	return o
}

func (o IPAllocationPolicyIpv6AccessTypePtrOutput) ToIPAllocationPolicyIpv6AccessTypePtrOutputWithContext(ctx context.Context) IPAllocationPolicyIpv6AccessTypePtrOutput {
	return o
}

func (o IPAllocationPolicyIpv6AccessTypePtrOutput) Elem() IPAllocationPolicyIpv6AccessTypeOutput {
	return o.ApplyT(func(v *IPAllocationPolicyIpv6AccessType) IPAllocationPolicyIpv6AccessType {
		if v != nil {
			return *v
		}
		var ret IPAllocationPolicyIpv6AccessType
		return ret
	}).(IPAllocationPolicyIpv6AccessTypeOutput)
}

func (o IPAllocationPolicyIpv6AccessTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IPAllocationPolicyIpv6AccessTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IPAllocationPolicyIpv6AccessType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IPAllocationPolicyIpv6AccessTypeInput is an input type that accepts IPAllocationPolicyIpv6AccessTypeArgs and IPAllocationPolicyIpv6AccessTypeOutput values.
// You can construct a concrete instance of `IPAllocationPolicyIpv6AccessTypeInput` via:
//
//	IPAllocationPolicyIpv6AccessTypeArgs{...}
type IPAllocationPolicyIpv6AccessTypeInput interface {
	pulumi.Input

	ToIPAllocationPolicyIpv6AccessTypeOutput() IPAllocationPolicyIpv6AccessTypeOutput
	ToIPAllocationPolicyIpv6AccessTypeOutputWithContext(context.Context) IPAllocationPolicyIpv6AccessTypeOutput
}

var ipallocationPolicyIpv6AccessTypePtrType = reflect.TypeOf((**IPAllocationPolicyIpv6AccessType)(nil)).Elem()

type IPAllocationPolicyIpv6AccessTypePtrInput interface {
	pulumi.Input

	ToIPAllocationPolicyIpv6AccessTypePtrOutput() IPAllocationPolicyIpv6AccessTypePtrOutput
	ToIPAllocationPolicyIpv6AccessTypePtrOutputWithContext(context.Context) IPAllocationPolicyIpv6AccessTypePtrOutput
}

type ipallocationPolicyIpv6AccessTypePtr string

func IPAllocationPolicyIpv6AccessTypePtr(v string) IPAllocationPolicyIpv6AccessTypePtrInput {
	return (*ipallocationPolicyIpv6AccessTypePtr)(&v)
}

func (*ipallocationPolicyIpv6AccessTypePtr) ElementType() reflect.Type {
	return ipallocationPolicyIpv6AccessTypePtrType
}

func (in *ipallocationPolicyIpv6AccessTypePtr) ToIPAllocationPolicyIpv6AccessTypePtrOutput() IPAllocationPolicyIpv6AccessTypePtrOutput {
	return pulumi.ToOutput(in).(IPAllocationPolicyIpv6AccessTypePtrOutput)
}

func (in *ipallocationPolicyIpv6AccessTypePtr) ToIPAllocationPolicyIpv6AccessTypePtrOutputWithContext(ctx context.Context) IPAllocationPolicyIpv6AccessTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IPAllocationPolicyIpv6AccessTypePtrOutput)
}

// IP stack type
type IPAllocationPolicyStackType string

const (
	// By default, the clusters will be IPV4 only
	IPAllocationPolicyStackTypeStackTypeUnspecified = IPAllocationPolicyStackType("STACK_TYPE_UNSPECIFIED")
	// The value used if the cluster is a IPV4 only
	IPAllocationPolicyStackTypeIpv4 = IPAllocationPolicyStackType("IPV4")
	// The value used if the cluster is a dual stack cluster
	IPAllocationPolicyStackTypeIpv4Ipv6 = IPAllocationPolicyStackType("IPV4_IPV6")
)

func (IPAllocationPolicyStackType) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAllocationPolicyStackType)(nil)).Elem()
}

func (e IPAllocationPolicyStackType) ToIPAllocationPolicyStackTypeOutput() IPAllocationPolicyStackTypeOutput {
	return pulumi.ToOutput(e).(IPAllocationPolicyStackTypeOutput)
}

func (e IPAllocationPolicyStackType) ToIPAllocationPolicyStackTypeOutputWithContext(ctx context.Context) IPAllocationPolicyStackTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IPAllocationPolicyStackTypeOutput)
}

func (e IPAllocationPolicyStackType) ToIPAllocationPolicyStackTypePtrOutput() IPAllocationPolicyStackTypePtrOutput {
	return e.ToIPAllocationPolicyStackTypePtrOutputWithContext(context.Background())
}

func (e IPAllocationPolicyStackType) ToIPAllocationPolicyStackTypePtrOutputWithContext(ctx context.Context) IPAllocationPolicyStackTypePtrOutput {
	return IPAllocationPolicyStackType(e).ToIPAllocationPolicyStackTypeOutputWithContext(ctx).ToIPAllocationPolicyStackTypePtrOutputWithContext(ctx)
}

func (e IPAllocationPolicyStackType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IPAllocationPolicyStackType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IPAllocationPolicyStackType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IPAllocationPolicyStackType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IPAllocationPolicyStackTypeOutput struct{ *pulumi.OutputState }

func (IPAllocationPolicyStackTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPAllocationPolicyStackType)(nil)).Elem()
}

func (o IPAllocationPolicyStackTypeOutput) ToIPAllocationPolicyStackTypeOutput() IPAllocationPolicyStackTypeOutput {
	return o
}

func (o IPAllocationPolicyStackTypeOutput) ToIPAllocationPolicyStackTypeOutputWithContext(ctx context.Context) IPAllocationPolicyStackTypeOutput {
	return o
}

func (o IPAllocationPolicyStackTypeOutput) ToIPAllocationPolicyStackTypePtrOutput() IPAllocationPolicyStackTypePtrOutput {
	return o.ToIPAllocationPolicyStackTypePtrOutputWithContext(context.Background())
}

func (o IPAllocationPolicyStackTypeOutput) ToIPAllocationPolicyStackTypePtrOutputWithContext(ctx context.Context) IPAllocationPolicyStackTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IPAllocationPolicyStackType) *IPAllocationPolicyStackType {
		return &v
	}).(IPAllocationPolicyStackTypePtrOutput)
}

func (o IPAllocationPolicyStackTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IPAllocationPolicyStackTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IPAllocationPolicyStackType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IPAllocationPolicyStackTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IPAllocationPolicyStackTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IPAllocationPolicyStackType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IPAllocationPolicyStackTypePtrOutput struct{ *pulumi.OutputState }

func (IPAllocationPolicyStackTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAllocationPolicyStackType)(nil)).Elem()
}

func (o IPAllocationPolicyStackTypePtrOutput) ToIPAllocationPolicyStackTypePtrOutput() IPAllocationPolicyStackTypePtrOutput {
	return o
}

func (o IPAllocationPolicyStackTypePtrOutput) ToIPAllocationPolicyStackTypePtrOutputWithContext(ctx context.Context) IPAllocationPolicyStackTypePtrOutput {
	return o
}

func (o IPAllocationPolicyStackTypePtrOutput) Elem() IPAllocationPolicyStackTypeOutput {
	return o.ApplyT(func(v *IPAllocationPolicyStackType) IPAllocationPolicyStackType {
		if v != nil {
			return *v
		}
		var ret IPAllocationPolicyStackType
		return ret
	}).(IPAllocationPolicyStackTypeOutput)
}

func (o IPAllocationPolicyStackTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IPAllocationPolicyStackTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IPAllocationPolicyStackType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IPAllocationPolicyStackTypeInput is an input type that accepts IPAllocationPolicyStackTypeArgs and IPAllocationPolicyStackTypeOutput values.
// You can construct a concrete instance of `IPAllocationPolicyStackTypeInput` via:
//
//	IPAllocationPolicyStackTypeArgs{...}
type IPAllocationPolicyStackTypeInput interface {
	pulumi.Input

	ToIPAllocationPolicyStackTypeOutput() IPAllocationPolicyStackTypeOutput
	ToIPAllocationPolicyStackTypeOutputWithContext(context.Context) IPAllocationPolicyStackTypeOutput
}

var ipallocationPolicyStackTypePtrType = reflect.TypeOf((**IPAllocationPolicyStackType)(nil)).Elem()

type IPAllocationPolicyStackTypePtrInput interface {
	pulumi.Input

	ToIPAllocationPolicyStackTypePtrOutput() IPAllocationPolicyStackTypePtrOutput
	ToIPAllocationPolicyStackTypePtrOutputWithContext(context.Context) IPAllocationPolicyStackTypePtrOutput
}

type ipallocationPolicyStackTypePtr string

func IPAllocationPolicyStackTypePtr(v string) IPAllocationPolicyStackTypePtrInput {
	return (*ipallocationPolicyStackTypePtr)(&v)
}

func (*ipallocationPolicyStackTypePtr) ElementType() reflect.Type {
	return ipallocationPolicyStackTypePtrType
}

func (in *ipallocationPolicyStackTypePtr) ToIPAllocationPolicyStackTypePtrOutput() IPAllocationPolicyStackTypePtrOutput {
	return pulumi.ToOutput(in).(IPAllocationPolicyStackTypePtrOutput)
}

func (in *ipallocationPolicyStackTypePtr) ToIPAllocationPolicyStackTypePtrOutputWithContext(ctx context.Context) IPAllocationPolicyStackTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IPAllocationPolicyStackTypePtrOutput)
}

// The specified Istio auth mode, either none, or mutual TLS.
type IstioConfigAuth string

const (
	// auth not enabled
	IstioConfigAuthAuthNone = IstioConfigAuth("AUTH_NONE")
	// auth mutual TLS enabled
	IstioConfigAuthAuthMutualTls = IstioConfigAuth("AUTH_MUTUAL_TLS")
)

func (IstioConfigAuth) ElementType() reflect.Type {
	return reflect.TypeOf((*IstioConfigAuth)(nil)).Elem()
}

func (e IstioConfigAuth) ToIstioConfigAuthOutput() IstioConfigAuthOutput {
	return pulumi.ToOutput(e).(IstioConfigAuthOutput)
}

func (e IstioConfigAuth) ToIstioConfigAuthOutputWithContext(ctx context.Context) IstioConfigAuthOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IstioConfigAuthOutput)
}

func (e IstioConfigAuth) ToIstioConfigAuthPtrOutput() IstioConfigAuthPtrOutput {
	return e.ToIstioConfigAuthPtrOutputWithContext(context.Background())
}

func (e IstioConfigAuth) ToIstioConfigAuthPtrOutputWithContext(ctx context.Context) IstioConfigAuthPtrOutput {
	return IstioConfigAuth(e).ToIstioConfigAuthOutputWithContext(ctx).ToIstioConfigAuthPtrOutputWithContext(ctx)
}

func (e IstioConfigAuth) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IstioConfigAuth) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IstioConfigAuth) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IstioConfigAuth) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IstioConfigAuthOutput struct{ *pulumi.OutputState }

func (IstioConfigAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IstioConfigAuth)(nil)).Elem()
}

func (o IstioConfigAuthOutput) ToIstioConfigAuthOutput() IstioConfigAuthOutput {
	return o
}

func (o IstioConfigAuthOutput) ToIstioConfigAuthOutputWithContext(ctx context.Context) IstioConfigAuthOutput {
	return o
}

func (o IstioConfigAuthOutput) ToIstioConfigAuthPtrOutput() IstioConfigAuthPtrOutput {
	return o.ToIstioConfigAuthPtrOutputWithContext(context.Background())
}

func (o IstioConfigAuthOutput) ToIstioConfigAuthPtrOutputWithContext(ctx context.Context) IstioConfigAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IstioConfigAuth) *IstioConfigAuth {
		return &v
	}).(IstioConfigAuthPtrOutput)
}

func (o IstioConfigAuthOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IstioConfigAuthOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IstioConfigAuth) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IstioConfigAuthOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IstioConfigAuthOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IstioConfigAuth) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IstioConfigAuthPtrOutput struct{ *pulumi.OutputState }

func (IstioConfigAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IstioConfigAuth)(nil)).Elem()
}

func (o IstioConfigAuthPtrOutput) ToIstioConfigAuthPtrOutput() IstioConfigAuthPtrOutput {
	return o
}

func (o IstioConfigAuthPtrOutput) ToIstioConfigAuthPtrOutputWithContext(ctx context.Context) IstioConfigAuthPtrOutput {
	return o
}

func (o IstioConfigAuthPtrOutput) Elem() IstioConfigAuthOutput {
	return o.ApplyT(func(v *IstioConfigAuth) IstioConfigAuth {
		if v != nil {
			return *v
		}
		var ret IstioConfigAuth
		return ret
	}).(IstioConfigAuthOutput)
}

func (o IstioConfigAuthPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IstioConfigAuthPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IstioConfigAuth) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IstioConfigAuthInput is an input type that accepts IstioConfigAuthArgs and IstioConfigAuthOutput values.
// You can construct a concrete instance of `IstioConfigAuthInput` via:
//
//	IstioConfigAuthArgs{...}
type IstioConfigAuthInput interface {
	pulumi.Input

	ToIstioConfigAuthOutput() IstioConfigAuthOutput
	ToIstioConfigAuthOutputWithContext(context.Context) IstioConfigAuthOutput
}

var istioConfigAuthPtrType = reflect.TypeOf((**IstioConfigAuth)(nil)).Elem()

type IstioConfigAuthPtrInput interface {
	pulumi.Input

	ToIstioConfigAuthPtrOutput() IstioConfigAuthPtrOutput
	ToIstioConfigAuthPtrOutputWithContext(context.Context) IstioConfigAuthPtrOutput
}

type istioConfigAuthPtr string

func IstioConfigAuthPtr(v string) IstioConfigAuthPtrInput {
	return (*istioConfigAuthPtr)(&v)
}

func (*istioConfigAuthPtr) ElementType() reflect.Type {
	return istioConfigAuthPtrType
}

func (in *istioConfigAuthPtr) ToIstioConfigAuthPtrOutput() IstioConfigAuthPtrOutput {
	return pulumi.ToOutput(in).(IstioConfigAuthPtrOutput)
}

func (in *istioConfigAuthPtr) ToIstioConfigAuthPtrOutputWithContext(ctx context.Context) IstioConfigAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IstioConfigAuthPtrOutput)
}

// cgroup_mode specifies the cgroup mode to be used on the node.
type LinuxNodeConfigCgroupMode string

const (
	// CGROUP_MODE_UNSPECIFIED is when unspecified cgroup configuration is used. The default for the GKE node OS image will be used.
	LinuxNodeConfigCgroupModeCgroupModeUnspecified = LinuxNodeConfigCgroupMode("CGROUP_MODE_UNSPECIFIED")
	// CGROUP_MODE_V1 specifies to use cgroupv1 for the cgroup configuration on the node image.
	LinuxNodeConfigCgroupModeCgroupModeV1 = LinuxNodeConfigCgroupMode("CGROUP_MODE_V1")
	// CGROUP_MODE_V2 specifies to use cgroupv2 for the cgroup configuration on the node image.
	LinuxNodeConfigCgroupModeCgroupModeV2 = LinuxNodeConfigCgroupMode("CGROUP_MODE_V2")
)

func (LinuxNodeConfigCgroupMode) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxNodeConfigCgroupMode)(nil)).Elem()
}

func (e LinuxNodeConfigCgroupMode) ToLinuxNodeConfigCgroupModeOutput() LinuxNodeConfigCgroupModeOutput {
	return pulumi.ToOutput(e).(LinuxNodeConfigCgroupModeOutput)
}

func (e LinuxNodeConfigCgroupMode) ToLinuxNodeConfigCgroupModeOutputWithContext(ctx context.Context) LinuxNodeConfigCgroupModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LinuxNodeConfigCgroupModeOutput)
}

func (e LinuxNodeConfigCgroupMode) ToLinuxNodeConfigCgroupModePtrOutput() LinuxNodeConfigCgroupModePtrOutput {
	return e.ToLinuxNodeConfigCgroupModePtrOutputWithContext(context.Background())
}

func (e LinuxNodeConfigCgroupMode) ToLinuxNodeConfigCgroupModePtrOutputWithContext(ctx context.Context) LinuxNodeConfigCgroupModePtrOutput {
	return LinuxNodeConfigCgroupMode(e).ToLinuxNodeConfigCgroupModeOutputWithContext(ctx).ToLinuxNodeConfigCgroupModePtrOutputWithContext(ctx)
}

func (e LinuxNodeConfigCgroupMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LinuxNodeConfigCgroupMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LinuxNodeConfigCgroupMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LinuxNodeConfigCgroupMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LinuxNodeConfigCgroupModeOutput struct{ *pulumi.OutputState }

func (LinuxNodeConfigCgroupModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxNodeConfigCgroupMode)(nil)).Elem()
}

func (o LinuxNodeConfigCgroupModeOutput) ToLinuxNodeConfigCgroupModeOutput() LinuxNodeConfigCgroupModeOutput {
	return o
}

func (o LinuxNodeConfigCgroupModeOutput) ToLinuxNodeConfigCgroupModeOutputWithContext(ctx context.Context) LinuxNodeConfigCgroupModeOutput {
	return o
}

func (o LinuxNodeConfigCgroupModeOutput) ToLinuxNodeConfigCgroupModePtrOutput() LinuxNodeConfigCgroupModePtrOutput {
	return o.ToLinuxNodeConfigCgroupModePtrOutputWithContext(context.Background())
}

func (o LinuxNodeConfigCgroupModeOutput) ToLinuxNodeConfigCgroupModePtrOutputWithContext(ctx context.Context) LinuxNodeConfigCgroupModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinuxNodeConfigCgroupMode) *LinuxNodeConfigCgroupMode {
		return &v
	}).(LinuxNodeConfigCgroupModePtrOutput)
}

func (o LinuxNodeConfigCgroupModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LinuxNodeConfigCgroupModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LinuxNodeConfigCgroupMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LinuxNodeConfigCgroupModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LinuxNodeConfigCgroupModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LinuxNodeConfigCgroupMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LinuxNodeConfigCgroupModePtrOutput struct{ *pulumi.OutputState }

func (LinuxNodeConfigCgroupModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxNodeConfigCgroupMode)(nil)).Elem()
}

func (o LinuxNodeConfigCgroupModePtrOutput) ToLinuxNodeConfigCgroupModePtrOutput() LinuxNodeConfigCgroupModePtrOutput {
	return o
}

func (o LinuxNodeConfigCgroupModePtrOutput) ToLinuxNodeConfigCgroupModePtrOutputWithContext(ctx context.Context) LinuxNodeConfigCgroupModePtrOutput {
	return o
}

func (o LinuxNodeConfigCgroupModePtrOutput) Elem() LinuxNodeConfigCgroupModeOutput {
	return o.ApplyT(func(v *LinuxNodeConfigCgroupMode) LinuxNodeConfigCgroupMode {
		if v != nil {
			return *v
		}
		var ret LinuxNodeConfigCgroupMode
		return ret
	}).(LinuxNodeConfigCgroupModeOutput)
}

func (o LinuxNodeConfigCgroupModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LinuxNodeConfigCgroupModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LinuxNodeConfigCgroupMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LinuxNodeConfigCgroupModeInput is an input type that accepts LinuxNodeConfigCgroupModeArgs and LinuxNodeConfigCgroupModeOutput values.
// You can construct a concrete instance of `LinuxNodeConfigCgroupModeInput` via:
//
//	LinuxNodeConfigCgroupModeArgs{...}
type LinuxNodeConfigCgroupModeInput interface {
	pulumi.Input

	ToLinuxNodeConfigCgroupModeOutput() LinuxNodeConfigCgroupModeOutput
	ToLinuxNodeConfigCgroupModeOutputWithContext(context.Context) LinuxNodeConfigCgroupModeOutput
}

var linuxNodeConfigCgroupModePtrType = reflect.TypeOf((**LinuxNodeConfigCgroupMode)(nil)).Elem()

type LinuxNodeConfigCgroupModePtrInput interface {
	pulumi.Input

	ToLinuxNodeConfigCgroupModePtrOutput() LinuxNodeConfigCgroupModePtrOutput
	ToLinuxNodeConfigCgroupModePtrOutputWithContext(context.Context) LinuxNodeConfigCgroupModePtrOutput
}

type linuxNodeConfigCgroupModePtr string

func LinuxNodeConfigCgroupModePtr(v string) LinuxNodeConfigCgroupModePtrInput {
	return (*linuxNodeConfigCgroupModePtr)(&v)
}

func (*linuxNodeConfigCgroupModePtr) ElementType() reflect.Type {
	return linuxNodeConfigCgroupModePtrType
}

func (in *linuxNodeConfigCgroupModePtr) ToLinuxNodeConfigCgroupModePtrOutput() LinuxNodeConfigCgroupModePtrOutput {
	return pulumi.ToOutput(in).(LinuxNodeConfigCgroupModePtrOutput)
}

func (in *linuxNodeConfigCgroupModePtr) ToLinuxNodeConfigCgroupModePtrOutputWithContext(ctx context.Context) LinuxNodeConfigCgroupModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LinuxNodeConfigCgroupModePtrOutput)
}

type LoggingComponentConfigEnableComponentsItem string

const (
	// Default value. This shouldn't be used.
	LoggingComponentConfigEnableComponentsItemComponentUnspecified = LoggingComponentConfigEnableComponentsItem("COMPONENT_UNSPECIFIED")
	// system components
	LoggingComponentConfigEnableComponentsItemSystemComponents = LoggingComponentConfigEnableComponentsItem("SYSTEM_COMPONENTS")
	// workloads
	LoggingComponentConfigEnableComponentsItemWorkloads = LoggingComponentConfigEnableComponentsItem("WORKLOADS")
)

func (LoggingComponentConfigEnableComponentsItem) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingComponentConfigEnableComponentsItem)(nil)).Elem()
}

func (e LoggingComponentConfigEnableComponentsItem) ToLoggingComponentConfigEnableComponentsItemOutput() LoggingComponentConfigEnableComponentsItemOutput {
	return pulumi.ToOutput(e).(LoggingComponentConfigEnableComponentsItemOutput)
}

func (e LoggingComponentConfigEnableComponentsItem) ToLoggingComponentConfigEnableComponentsItemOutputWithContext(ctx context.Context) LoggingComponentConfigEnableComponentsItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoggingComponentConfigEnableComponentsItemOutput)
}

func (e LoggingComponentConfigEnableComponentsItem) ToLoggingComponentConfigEnableComponentsItemPtrOutput() LoggingComponentConfigEnableComponentsItemPtrOutput {
	return e.ToLoggingComponentConfigEnableComponentsItemPtrOutputWithContext(context.Background())
}

func (e LoggingComponentConfigEnableComponentsItem) ToLoggingComponentConfigEnableComponentsItemPtrOutputWithContext(ctx context.Context) LoggingComponentConfigEnableComponentsItemPtrOutput {
	return LoggingComponentConfigEnableComponentsItem(e).ToLoggingComponentConfigEnableComponentsItemOutputWithContext(ctx).ToLoggingComponentConfigEnableComponentsItemPtrOutputWithContext(ctx)
}

func (e LoggingComponentConfigEnableComponentsItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingComponentConfigEnableComponentsItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingComponentConfigEnableComponentsItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoggingComponentConfigEnableComponentsItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoggingComponentConfigEnableComponentsItemOutput struct{ *pulumi.OutputState }

func (LoggingComponentConfigEnableComponentsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingComponentConfigEnableComponentsItem)(nil)).Elem()
}

func (o LoggingComponentConfigEnableComponentsItemOutput) ToLoggingComponentConfigEnableComponentsItemOutput() LoggingComponentConfigEnableComponentsItemOutput {
	return o
}

func (o LoggingComponentConfigEnableComponentsItemOutput) ToLoggingComponentConfigEnableComponentsItemOutputWithContext(ctx context.Context) LoggingComponentConfigEnableComponentsItemOutput {
	return o
}

func (o LoggingComponentConfigEnableComponentsItemOutput) ToLoggingComponentConfigEnableComponentsItemPtrOutput() LoggingComponentConfigEnableComponentsItemPtrOutput {
	return o.ToLoggingComponentConfigEnableComponentsItemPtrOutputWithContext(context.Background())
}

func (o LoggingComponentConfigEnableComponentsItemOutput) ToLoggingComponentConfigEnableComponentsItemPtrOutputWithContext(ctx context.Context) LoggingComponentConfigEnableComponentsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingComponentConfigEnableComponentsItem) *LoggingComponentConfigEnableComponentsItem {
		return &v
	}).(LoggingComponentConfigEnableComponentsItemPtrOutput)
}

func (o LoggingComponentConfigEnableComponentsItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoggingComponentConfigEnableComponentsItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingComponentConfigEnableComponentsItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoggingComponentConfigEnableComponentsItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingComponentConfigEnableComponentsItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingComponentConfigEnableComponentsItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoggingComponentConfigEnableComponentsItemPtrOutput struct{ *pulumi.OutputState }

func (LoggingComponentConfigEnableComponentsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingComponentConfigEnableComponentsItem)(nil)).Elem()
}

func (o LoggingComponentConfigEnableComponentsItemPtrOutput) ToLoggingComponentConfigEnableComponentsItemPtrOutput() LoggingComponentConfigEnableComponentsItemPtrOutput {
	return o
}

func (o LoggingComponentConfigEnableComponentsItemPtrOutput) ToLoggingComponentConfigEnableComponentsItemPtrOutputWithContext(ctx context.Context) LoggingComponentConfigEnableComponentsItemPtrOutput {
	return o
}

func (o LoggingComponentConfigEnableComponentsItemPtrOutput) Elem() LoggingComponentConfigEnableComponentsItemOutput {
	return o.ApplyT(func(v *LoggingComponentConfigEnableComponentsItem) LoggingComponentConfigEnableComponentsItem {
		if v != nil {
			return *v
		}
		var ret LoggingComponentConfigEnableComponentsItem
		return ret
	}).(LoggingComponentConfigEnableComponentsItemOutput)
}

func (o LoggingComponentConfigEnableComponentsItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingComponentConfigEnableComponentsItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoggingComponentConfigEnableComponentsItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoggingComponentConfigEnableComponentsItemInput is an input type that accepts LoggingComponentConfigEnableComponentsItemArgs and LoggingComponentConfigEnableComponentsItemOutput values.
// You can construct a concrete instance of `LoggingComponentConfigEnableComponentsItemInput` via:
//
//	LoggingComponentConfigEnableComponentsItemArgs{...}
type LoggingComponentConfigEnableComponentsItemInput interface {
	pulumi.Input

	ToLoggingComponentConfigEnableComponentsItemOutput() LoggingComponentConfigEnableComponentsItemOutput
	ToLoggingComponentConfigEnableComponentsItemOutputWithContext(context.Context) LoggingComponentConfigEnableComponentsItemOutput
}

var loggingComponentConfigEnableComponentsItemPtrType = reflect.TypeOf((**LoggingComponentConfigEnableComponentsItem)(nil)).Elem()

type LoggingComponentConfigEnableComponentsItemPtrInput interface {
	pulumi.Input

	ToLoggingComponentConfigEnableComponentsItemPtrOutput() LoggingComponentConfigEnableComponentsItemPtrOutput
	ToLoggingComponentConfigEnableComponentsItemPtrOutputWithContext(context.Context) LoggingComponentConfigEnableComponentsItemPtrOutput
}

type loggingComponentConfigEnableComponentsItemPtr string

func LoggingComponentConfigEnableComponentsItemPtr(v string) LoggingComponentConfigEnableComponentsItemPtrInput {
	return (*loggingComponentConfigEnableComponentsItemPtr)(&v)
}

func (*loggingComponentConfigEnableComponentsItemPtr) ElementType() reflect.Type {
	return loggingComponentConfigEnableComponentsItemPtrType
}

func (in *loggingComponentConfigEnableComponentsItemPtr) ToLoggingComponentConfigEnableComponentsItemPtrOutput() LoggingComponentConfigEnableComponentsItemPtrOutput {
	return pulumi.ToOutput(in).(LoggingComponentConfigEnableComponentsItemPtrOutput)
}

func (in *loggingComponentConfigEnableComponentsItemPtr) ToLoggingComponentConfigEnableComponentsItemPtrOutputWithContext(ctx context.Context) LoggingComponentConfigEnableComponentsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoggingComponentConfigEnableComponentsItemPtrOutput)
}

// LoggingComponentConfigEnableComponentsItemArrayInput is an input type that accepts LoggingComponentConfigEnableComponentsItemArray and LoggingComponentConfigEnableComponentsItemArrayOutput values.
// You can construct a concrete instance of `LoggingComponentConfigEnableComponentsItemArrayInput` via:
//
//	LoggingComponentConfigEnableComponentsItemArray{ LoggingComponentConfigEnableComponentsItemArgs{...} }
type LoggingComponentConfigEnableComponentsItemArrayInput interface {
	pulumi.Input

	ToLoggingComponentConfigEnableComponentsItemArrayOutput() LoggingComponentConfigEnableComponentsItemArrayOutput
	ToLoggingComponentConfigEnableComponentsItemArrayOutputWithContext(context.Context) LoggingComponentConfigEnableComponentsItemArrayOutput
}

type LoggingComponentConfigEnableComponentsItemArray []LoggingComponentConfigEnableComponentsItem

func (LoggingComponentConfigEnableComponentsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoggingComponentConfigEnableComponentsItem)(nil)).Elem()
}

func (i LoggingComponentConfigEnableComponentsItemArray) ToLoggingComponentConfigEnableComponentsItemArrayOutput() LoggingComponentConfigEnableComponentsItemArrayOutput {
	return i.ToLoggingComponentConfigEnableComponentsItemArrayOutputWithContext(context.Background())
}

func (i LoggingComponentConfigEnableComponentsItemArray) ToLoggingComponentConfigEnableComponentsItemArrayOutputWithContext(ctx context.Context) LoggingComponentConfigEnableComponentsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingComponentConfigEnableComponentsItemArrayOutput)
}

type LoggingComponentConfigEnableComponentsItemArrayOutput struct{ *pulumi.OutputState }

func (LoggingComponentConfigEnableComponentsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoggingComponentConfigEnableComponentsItem)(nil)).Elem()
}

func (o LoggingComponentConfigEnableComponentsItemArrayOutput) ToLoggingComponentConfigEnableComponentsItemArrayOutput() LoggingComponentConfigEnableComponentsItemArrayOutput {
	return o
}

func (o LoggingComponentConfigEnableComponentsItemArrayOutput) ToLoggingComponentConfigEnableComponentsItemArrayOutputWithContext(ctx context.Context) LoggingComponentConfigEnableComponentsItemArrayOutput {
	return o
}

func (o LoggingComponentConfigEnableComponentsItemArrayOutput) Index(i pulumi.IntInput) LoggingComponentConfigEnableComponentsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoggingComponentConfigEnableComponentsItem {
		return vs[0].([]LoggingComponentConfigEnableComponentsItem)[vs[1].(int)]
	}).(LoggingComponentConfigEnableComponentsItemOutput)
}

// Logging variant deployed on nodes.
type LoggingVariantConfigVariant string

const (
	// Default value. This shouldn't be used.
	LoggingVariantConfigVariantVariantUnspecified = LoggingVariantConfigVariant("VARIANT_UNSPECIFIED")
	// default logging variant.
	LoggingVariantConfigVariantDefault = LoggingVariantConfigVariant("DEFAULT")
	// maximum logging throughput variant.
	LoggingVariantConfigVariantMaxThroughput = LoggingVariantConfigVariant("MAX_THROUGHPUT")
)

func (LoggingVariantConfigVariant) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingVariantConfigVariant)(nil)).Elem()
}

func (e LoggingVariantConfigVariant) ToLoggingVariantConfigVariantOutput() LoggingVariantConfigVariantOutput {
	return pulumi.ToOutput(e).(LoggingVariantConfigVariantOutput)
}

func (e LoggingVariantConfigVariant) ToLoggingVariantConfigVariantOutputWithContext(ctx context.Context) LoggingVariantConfigVariantOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoggingVariantConfigVariantOutput)
}

func (e LoggingVariantConfigVariant) ToLoggingVariantConfigVariantPtrOutput() LoggingVariantConfigVariantPtrOutput {
	return e.ToLoggingVariantConfigVariantPtrOutputWithContext(context.Background())
}

func (e LoggingVariantConfigVariant) ToLoggingVariantConfigVariantPtrOutputWithContext(ctx context.Context) LoggingVariantConfigVariantPtrOutput {
	return LoggingVariantConfigVariant(e).ToLoggingVariantConfigVariantOutputWithContext(ctx).ToLoggingVariantConfigVariantPtrOutputWithContext(ctx)
}

func (e LoggingVariantConfigVariant) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingVariantConfigVariant) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingVariantConfigVariant) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoggingVariantConfigVariant) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoggingVariantConfigVariantOutput struct{ *pulumi.OutputState }

func (LoggingVariantConfigVariantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingVariantConfigVariant)(nil)).Elem()
}

func (o LoggingVariantConfigVariantOutput) ToLoggingVariantConfigVariantOutput() LoggingVariantConfigVariantOutput {
	return o
}

func (o LoggingVariantConfigVariantOutput) ToLoggingVariantConfigVariantOutputWithContext(ctx context.Context) LoggingVariantConfigVariantOutput {
	return o
}

func (o LoggingVariantConfigVariantOutput) ToLoggingVariantConfigVariantPtrOutput() LoggingVariantConfigVariantPtrOutput {
	return o.ToLoggingVariantConfigVariantPtrOutputWithContext(context.Background())
}

func (o LoggingVariantConfigVariantOutput) ToLoggingVariantConfigVariantPtrOutputWithContext(ctx context.Context) LoggingVariantConfigVariantPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingVariantConfigVariant) *LoggingVariantConfigVariant {
		return &v
	}).(LoggingVariantConfigVariantPtrOutput)
}

func (o LoggingVariantConfigVariantOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoggingVariantConfigVariantOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingVariantConfigVariant) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoggingVariantConfigVariantOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingVariantConfigVariantOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingVariantConfigVariant) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoggingVariantConfigVariantPtrOutput struct{ *pulumi.OutputState }

func (LoggingVariantConfigVariantPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingVariantConfigVariant)(nil)).Elem()
}

func (o LoggingVariantConfigVariantPtrOutput) ToLoggingVariantConfigVariantPtrOutput() LoggingVariantConfigVariantPtrOutput {
	return o
}

func (o LoggingVariantConfigVariantPtrOutput) ToLoggingVariantConfigVariantPtrOutputWithContext(ctx context.Context) LoggingVariantConfigVariantPtrOutput {
	return o
}

func (o LoggingVariantConfigVariantPtrOutput) Elem() LoggingVariantConfigVariantOutput {
	return o.ApplyT(func(v *LoggingVariantConfigVariant) LoggingVariantConfigVariant {
		if v != nil {
			return *v
		}
		var ret LoggingVariantConfigVariant
		return ret
	}).(LoggingVariantConfigVariantOutput)
}

func (o LoggingVariantConfigVariantPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingVariantConfigVariantPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoggingVariantConfigVariant) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoggingVariantConfigVariantInput is an input type that accepts LoggingVariantConfigVariantArgs and LoggingVariantConfigVariantOutput values.
// You can construct a concrete instance of `LoggingVariantConfigVariantInput` via:
//
//	LoggingVariantConfigVariantArgs{...}
type LoggingVariantConfigVariantInput interface {
	pulumi.Input

	ToLoggingVariantConfigVariantOutput() LoggingVariantConfigVariantOutput
	ToLoggingVariantConfigVariantOutputWithContext(context.Context) LoggingVariantConfigVariantOutput
}

var loggingVariantConfigVariantPtrType = reflect.TypeOf((**LoggingVariantConfigVariant)(nil)).Elem()

type LoggingVariantConfigVariantPtrInput interface {
	pulumi.Input

	ToLoggingVariantConfigVariantPtrOutput() LoggingVariantConfigVariantPtrOutput
	ToLoggingVariantConfigVariantPtrOutputWithContext(context.Context) LoggingVariantConfigVariantPtrOutput
}

type loggingVariantConfigVariantPtr string

func LoggingVariantConfigVariantPtr(v string) LoggingVariantConfigVariantPtrInput {
	return (*loggingVariantConfigVariantPtr)(&v)
}

func (*loggingVariantConfigVariantPtr) ElementType() reflect.Type {
	return loggingVariantConfigVariantPtrType
}

func (in *loggingVariantConfigVariantPtr) ToLoggingVariantConfigVariantPtrOutput() LoggingVariantConfigVariantPtrOutput {
	return pulumi.ToOutput(in).(LoggingVariantConfigVariantPtrOutput)
}

func (in *loggingVariantConfigVariantPtr) ToLoggingVariantConfigVariantPtrOutputWithContext(ctx context.Context) LoggingVariantConfigVariantPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoggingVariantConfigVariantPtrOutput)
}

// Scope specifies the upgrade scope which upgrades are blocked by the exclusion.
type MaintenanceExclusionOptionsScope string

const (
	// NO_UPGRADES excludes all upgrades, including patch upgrades and minor upgrades across control planes and nodes. This is the default exclusion behavior.
	MaintenanceExclusionOptionsScopeNoUpgrades = MaintenanceExclusionOptionsScope("NO_UPGRADES")
	// NO_MINOR_UPGRADES excludes all minor upgrades for the cluster, only patches are allowed.
	MaintenanceExclusionOptionsScopeNoMinorUpgrades = MaintenanceExclusionOptionsScope("NO_MINOR_UPGRADES")
	// NO_MINOR_OR_NODE_UPGRADES excludes all minor upgrades for the cluster, and also exclude all node pool upgrades. Only control plane patches are allowed.
	MaintenanceExclusionOptionsScopeNoMinorOrNodeUpgrades = MaintenanceExclusionOptionsScope("NO_MINOR_OR_NODE_UPGRADES")
)

func (MaintenanceExclusionOptionsScope) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceExclusionOptionsScope)(nil)).Elem()
}

func (e MaintenanceExclusionOptionsScope) ToMaintenanceExclusionOptionsScopeOutput() MaintenanceExclusionOptionsScopeOutput {
	return pulumi.ToOutput(e).(MaintenanceExclusionOptionsScopeOutput)
}

func (e MaintenanceExclusionOptionsScope) ToMaintenanceExclusionOptionsScopeOutputWithContext(ctx context.Context) MaintenanceExclusionOptionsScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MaintenanceExclusionOptionsScopeOutput)
}

func (e MaintenanceExclusionOptionsScope) ToMaintenanceExclusionOptionsScopePtrOutput() MaintenanceExclusionOptionsScopePtrOutput {
	return e.ToMaintenanceExclusionOptionsScopePtrOutputWithContext(context.Background())
}

func (e MaintenanceExclusionOptionsScope) ToMaintenanceExclusionOptionsScopePtrOutputWithContext(ctx context.Context) MaintenanceExclusionOptionsScopePtrOutput {
	return MaintenanceExclusionOptionsScope(e).ToMaintenanceExclusionOptionsScopeOutputWithContext(ctx).ToMaintenanceExclusionOptionsScopePtrOutputWithContext(ctx)
}

func (e MaintenanceExclusionOptionsScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MaintenanceExclusionOptionsScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MaintenanceExclusionOptionsScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MaintenanceExclusionOptionsScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MaintenanceExclusionOptionsScopeOutput struct{ *pulumi.OutputState }

func (MaintenanceExclusionOptionsScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceExclusionOptionsScope)(nil)).Elem()
}

func (o MaintenanceExclusionOptionsScopeOutput) ToMaintenanceExclusionOptionsScopeOutput() MaintenanceExclusionOptionsScopeOutput {
	return o
}

func (o MaintenanceExclusionOptionsScopeOutput) ToMaintenanceExclusionOptionsScopeOutputWithContext(ctx context.Context) MaintenanceExclusionOptionsScopeOutput {
	return o
}

func (o MaintenanceExclusionOptionsScopeOutput) ToMaintenanceExclusionOptionsScopePtrOutput() MaintenanceExclusionOptionsScopePtrOutput {
	return o.ToMaintenanceExclusionOptionsScopePtrOutputWithContext(context.Background())
}

func (o MaintenanceExclusionOptionsScopeOutput) ToMaintenanceExclusionOptionsScopePtrOutputWithContext(ctx context.Context) MaintenanceExclusionOptionsScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceExclusionOptionsScope) *MaintenanceExclusionOptionsScope {
		return &v
	}).(MaintenanceExclusionOptionsScopePtrOutput)
}

func (o MaintenanceExclusionOptionsScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MaintenanceExclusionOptionsScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MaintenanceExclusionOptionsScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MaintenanceExclusionOptionsScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MaintenanceExclusionOptionsScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MaintenanceExclusionOptionsScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MaintenanceExclusionOptionsScopePtrOutput struct{ *pulumi.OutputState }

func (MaintenanceExclusionOptionsScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceExclusionOptionsScope)(nil)).Elem()
}

func (o MaintenanceExclusionOptionsScopePtrOutput) ToMaintenanceExclusionOptionsScopePtrOutput() MaintenanceExclusionOptionsScopePtrOutput {
	return o
}

func (o MaintenanceExclusionOptionsScopePtrOutput) ToMaintenanceExclusionOptionsScopePtrOutputWithContext(ctx context.Context) MaintenanceExclusionOptionsScopePtrOutput {
	return o
}

func (o MaintenanceExclusionOptionsScopePtrOutput) Elem() MaintenanceExclusionOptionsScopeOutput {
	return o.ApplyT(func(v *MaintenanceExclusionOptionsScope) MaintenanceExclusionOptionsScope {
		if v != nil {
			return *v
		}
		var ret MaintenanceExclusionOptionsScope
		return ret
	}).(MaintenanceExclusionOptionsScopeOutput)
}

func (o MaintenanceExclusionOptionsScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MaintenanceExclusionOptionsScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MaintenanceExclusionOptionsScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MaintenanceExclusionOptionsScopeInput is an input type that accepts MaintenanceExclusionOptionsScopeArgs and MaintenanceExclusionOptionsScopeOutput values.
// You can construct a concrete instance of `MaintenanceExclusionOptionsScopeInput` via:
//
//	MaintenanceExclusionOptionsScopeArgs{...}
type MaintenanceExclusionOptionsScopeInput interface {
	pulumi.Input

	ToMaintenanceExclusionOptionsScopeOutput() MaintenanceExclusionOptionsScopeOutput
	ToMaintenanceExclusionOptionsScopeOutputWithContext(context.Context) MaintenanceExclusionOptionsScopeOutput
}

var maintenanceExclusionOptionsScopePtrType = reflect.TypeOf((**MaintenanceExclusionOptionsScope)(nil)).Elem()

type MaintenanceExclusionOptionsScopePtrInput interface {
	pulumi.Input

	ToMaintenanceExclusionOptionsScopePtrOutput() MaintenanceExclusionOptionsScopePtrOutput
	ToMaintenanceExclusionOptionsScopePtrOutputWithContext(context.Context) MaintenanceExclusionOptionsScopePtrOutput
}

type maintenanceExclusionOptionsScopePtr string

func MaintenanceExclusionOptionsScopePtr(v string) MaintenanceExclusionOptionsScopePtrInput {
	return (*maintenanceExclusionOptionsScopePtr)(&v)
}

func (*maintenanceExclusionOptionsScopePtr) ElementType() reflect.Type {
	return maintenanceExclusionOptionsScopePtrType
}

func (in *maintenanceExclusionOptionsScopePtr) ToMaintenanceExclusionOptionsScopePtrOutput() MaintenanceExclusionOptionsScopePtrOutput {
	return pulumi.ToOutput(in).(MaintenanceExclusionOptionsScopePtrOutput)
}

func (in *maintenanceExclusionOptionsScopePtr) ToMaintenanceExclusionOptionsScopePtrOutputWithContext(ctx context.Context) MaintenanceExclusionOptionsScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MaintenanceExclusionOptionsScopePtrOutput)
}

type MonitoringComponentConfigEnableComponentsItem string

const (
	// Default value. This shouldn't be used.
	MonitoringComponentConfigEnableComponentsItemComponentUnspecified = MonitoringComponentConfigEnableComponentsItem("COMPONENT_UNSPECIFIED")
	// system components
	MonitoringComponentConfigEnableComponentsItemSystemComponents = MonitoringComponentConfigEnableComponentsItem("SYSTEM_COMPONENTS")
	// Deprecated: Use Google Cloud Managed Service for Prometheus.
	MonitoringComponentConfigEnableComponentsItemWorkloads = MonitoringComponentConfigEnableComponentsItem("WORKLOADS")
	// kube-apiserver
	MonitoringComponentConfigEnableComponentsItemApiserver = MonitoringComponentConfigEnableComponentsItem("APISERVER")
	// kube-scheduler
	MonitoringComponentConfigEnableComponentsItemScheduler = MonitoringComponentConfigEnableComponentsItem("SCHEDULER")
	// kube-controller-manager
	MonitoringComponentConfigEnableComponentsItemControllerManager = MonitoringComponentConfigEnableComponentsItem("CONTROLLER_MANAGER")
)

func (MonitoringComponentConfigEnableComponentsItem) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringComponentConfigEnableComponentsItem)(nil)).Elem()
}

func (e MonitoringComponentConfigEnableComponentsItem) ToMonitoringComponentConfigEnableComponentsItemOutput() MonitoringComponentConfigEnableComponentsItemOutput {
	return pulumi.ToOutput(e).(MonitoringComponentConfigEnableComponentsItemOutput)
}

func (e MonitoringComponentConfigEnableComponentsItem) ToMonitoringComponentConfigEnableComponentsItemOutputWithContext(ctx context.Context) MonitoringComponentConfigEnableComponentsItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MonitoringComponentConfigEnableComponentsItemOutput)
}

func (e MonitoringComponentConfigEnableComponentsItem) ToMonitoringComponentConfigEnableComponentsItemPtrOutput() MonitoringComponentConfigEnableComponentsItemPtrOutput {
	return e.ToMonitoringComponentConfigEnableComponentsItemPtrOutputWithContext(context.Background())
}

func (e MonitoringComponentConfigEnableComponentsItem) ToMonitoringComponentConfigEnableComponentsItemPtrOutputWithContext(ctx context.Context) MonitoringComponentConfigEnableComponentsItemPtrOutput {
	return MonitoringComponentConfigEnableComponentsItem(e).ToMonitoringComponentConfigEnableComponentsItemOutputWithContext(ctx).ToMonitoringComponentConfigEnableComponentsItemPtrOutputWithContext(ctx)
}

func (e MonitoringComponentConfigEnableComponentsItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MonitoringComponentConfigEnableComponentsItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MonitoringComponentConfigEnableComponentsItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MonitoringComponentConfigEnableComponentsItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MonitoringComponentConfigEnableComponentsItemOutput struct{ *pulumi.OutputState }

func (MonitoringComponentConfigEnableComponentsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringComponentConfigEnableComponentsItem)(nil)).Elem()
}

func (o MonitoringComponentConfigEnableComponentsItemOutput) ToMonitoringComponentConfigEnableComponentsItemOutput() MonitoringComponentConfigEnableComponentsItemOutput {
	return o
}

func (o MonitoringComponentConfigEnableComponentsItemOutput) ToMonitoringComponentConfigEnableComponentsItemOutputWithContext(ctx context.Context) MonitoringComponentConfigEnableComponentsItemOutput {
	return o
}

func (o MonitoringComponentConfigEnableComponentsItemOutput) ToMonitoringComponentConfigEnableComponentsItemPtrOutput() MonitoringComponentConfigEnableComponentsItemPtrOutput {
	return o.ToMonitoringComponentConfigEnableComponentsItemPtrOutputWithContext(context.Background())
}

func (o MonitoringComponentConfigEnableComponentsItemOutput) ToMonitoringComponentConfigEnableComponentsItemPtrOutputWithContext(ctx context.Context) MonitoringComponentConfigEnableComponentsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringComponentConfigEnableComponentsItem) *MonitoringComponentConfigEnableComponentsItem {
		return &v
	}).(MonitoringComponentConfigEnableComponentsItemPtrOutput)
}

func (o MonitoringComponentConfigEnableComponentsItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MonitoringComponentConfigEnableComponentsItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MonitoringComponentConfigEnableComponentsItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MonitoringComponentConfigEnableComponentsItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MonitoringComponentConfigEnableComponentsItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MonitoringComponentConfigEnableComponentsItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MonitoringComponentConfigEnableComponentsItemPtrOutput struct{ *pulumi.OutputState }

func (MonitoringComponentConfigEnableComponentsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringComponentConfigEnableComponentsItem)(nil)).Elem()
}

func (o MonitoringComponentConfigEnableComponentsItemPtrOutput) ToMonitoringComponentConfigEnableComponentsItemPtrOutput() MonitoringComponentConfigEnableComponentsItemPtrOutput {
	return o
}

func (o MonitoringComponentConfigEnableComponentsItemPtrOutput) ToMonitoringComponentConfigEnableComponentsItemPtrOutputWithContext(ctx context.Context) MonitoringComponentConfigEnableComponentsItemPtrOutput {
	return o
}

func (o MonitoringComponentConfigEnableComponentsItemPtrOutput) Elem() MonitoringComponentConfigEnableComponentsItemOutput {
	return o.ApplyT(func(v *MonitoringComponentConfigEnableComponentsItem) MonitoringComponentConfigEnableComponentsItem {
		if v != nil {
			return *v
		}
		var ret MonitoringComponentConfigEnableComponentsItem
		return ret
	}).(MonitoringComponentConfigEnableComponentsItemOutput)
}

func (o MonitoringComponentConfigEnableComponentsItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MonitoringComponentConfigEnableComponentsItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MonitoringComponentConfigEnableComponentsItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MonitoringComponentConfigEnableComponentsItemInput is an input type that accepts MonitoringComponentConfigEnableComponentsItemArgs and MonitoringComponentConfigEnableComponentsItemOutput values.
// You can construct a concrete instance of `MonitoringComponentConfigEnableComponentsItemInput` via:
//
//	MonitoringComponentConfigEnableComponentsItemArgs{...}
type MonitoringComponentConfigEnableComponentsItemInput interface {
	pulumi.Input

	ToMonitoringComponentConfigEnableComponentsItemOutput() MonitoringComponentConfigEnableComponentsItemOutput
	ToMonitoringComponentConfigEnableComponentsItemOutputWithContext(context.Context) MonitoringComponentConfigEnableComponentsItemOutput
}

var monitoringComponentConfigEnableComponentsItemPtrType = reflect.TypeOf((**MonitoringComponentConfigEnableComponentsItem)(nil)).Elem()

type MonitoringComponentConfigEnableComponentsItemPtrInput interface {
	pulumi.Input

	ToMonitoringComponentConfigEnableComponentsItemPtrOutput() MonitoringComponentConfigEnableComponentsItemPtrOutput
	ToMonitoringComponentConfigEnableComponentsItemPtrOutputWithContext(context.Context) MonitoringComponentConfigEnableComponentsItemPtrOutput
}

type monitoringComponentConfigEnableComponentsItemPtr string

func MonitoringComponentConfigEnableComponentsItemPtr(v string) MonitoringComponentConfigEnableComponentsItemPtrInput {
	return (*monitoringComponentConfigEnableComponentsItemPtr)(&v)
}

func (*monitoringComponentConfigEnableComponentsItemPtr) ElementType() reflect.Type {
	return monitoringComponentConfigEnableComponentsItemPtrType
}

func (in *monitoringComponentConfigEnableComponentsItemPtr) ToMonitoringComponentConfigEnableComponentsItemPtrOutput() MonitoringComponentConfigEnableComponentsItemPtrOutput {
	return pulumi.ToOutput(in).(MonitoringComponentConfigEnableComponentsItemPtrOutput)
}

func (in *monitoringComponentConfigEnableComponentsItemPtr) ToMonitoringComponentConfigEnableComponentsItemPtrOutputWithContext(ctx context.Context) MonitoringComponentConfigEnableComponentsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MonitoringComponentConfigEnableComponentsItemPtrOutput)
}

// MonitoringComponentConfigEnableComponentsItemArrayInput is an input type that accepts MonitoringComponentConfigEnableComponentsItemArray and MonitoringComponentConfigEnableComponentsItemArrayOutput values.
// You can construct a concrete instance of `MonitoringComponentConfigEnableComponentsItemArrayInput` via:
//
//	MonitoringComponentConfigEnableComponentsItemArray{ MonitoringComponentConfigEnableComponentsItemArgs{...} }
type MonitoringComponentConfigEnableComponentsItemArrayInput interface {
	pulumi.Input

	ToMonitoringComponentConfigEnableComponentsItemArrayOutput() MonitoringComponentConfigEnableComponentsItemArrayOutput
	ToMonitoringComponentConfigEnableComponentsItemArrayOutputWithContext(context.Context) MonitoringComponentConfigEnableComponentsItemArrayOutput
}

type MonitoringComponentConfigEnableComponentsItemArray []MonitoringComponentConfigEnableComponentsItem

func (MonitoringComponentConfigEnableComponentsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoringComponentConfigEnableComponentsItem)(nil)).Elem()
}

func (i MonitoringComponentConfigEnableComponentsItemArray) ToMonitoringComponentConfigEnableComponentsItemArrayOutput() MonitoringComponentConfigEnableComponentsItemArrayOutput {
	return i.ToMonitoringComponentConfigEnableComponentsItemArrayOutputWithContext(context.Background())
}

func (i MonitoringComponentConfigEnableComponentsItemArray) ToMonitoringComponentConfigEnableComponentsItemArrayOutputWithContext(ctx context.Context) MonitoringComponentConfigEnableComponentsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringComponentConfigEnableComponentsItemArrayOutput)
}

type MonitoringComponentConfigEnableComponentsItemArrayOutput struct{ *pulumi.OutputState }

func (MonitoringComponentConfigEnableComponentsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoringComponentConfigEnableComponentsItem)(nil)).Elem()
}

func (o MonitoringComponentConfigEnableComponentsItemArrayOutput) ToMonitoringComponentConfigEnableComponentsItemArrayOutput() MonitoringComponentConfigEnableComponentsItemArrayOutput {
	return o
}

func (o MonitoringComponentConfigEnableComponentsItemArrayOutput) ToMonitoringComponentConfigEnableComponentsItemArrayOutputWithContext(ctx context.Context) MonitoringComponentConfigEnableComponentsItemArrayOutput {
	return o
}

func (o MonitoringComponentConfigEnableComponentsItemArrayOutput) Index(i pulumi.IntInput) MonitoringComponentConfigEnableComponentsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitoringComponentConfigEnableComponentsItem {
		return vs[0].([]MonitoringComponentConfigEnableComponentsItem)[vs[1].(int)]
	}).(MonitoringComponentConfigEnableComponentsItemOutput)
}

// The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
type NetworkConfigDatapathProvider string

const (
	// Default value.
	NetworkConfigDatapathProviderDatapathProviderUnspecified = NetworkConfigDatapathProvider("DATAPATH_PROVIDER_UNSPECIFIED")
	// Use the IPTables implementation based on kube-proxy.
	NetworkConfigDatapathProviderLegacyDatapath = NetworkConfigDatapathProvider("LEGACY_DATAPATH")
	// Use the eBPF based GKE Dataplane V2 with additional features. See the [GKE Dataplane V2 documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2) for more.
	NetworkConfigDatapathProviderAdvancedDatapath = NetworkConfigDatapathProvider("ADVANCED_DATAPATH")
)

func (NetworkConfigDatapathProvider) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConfigDatapathProvider)(nil)).Elem()
}

func (e NetworkConfigDatapathProvider) ToNetworkConfigDatapathProviderOutput() NetworkConfigDatapathProviderOutput {
	return pulumi.ToOutput(e).(NetworkConfigDatapathProviderOutput)
}

func (e NetworkConfigDatapathProvider) ToNetworkConfigDatapathProviderOutputWithContext(ctx context.Context) NetworkConfigDatapathProviderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkConfigDatapathProviderOutput)
}

func (e NetworkConfigDatapathProvider) ToNetworkConfigDatapathProviderPtrOutput() NetworkConfigDatapathProviderPtrOutput {
	return e.ToNetworkConfigDatapathProviderPtrOutputWithContext(context.Background())
}

func (e NetworkConfigDatapathProvider) ToNetworkConfigDatapathProviderPtrOutputWithContext(ctx context.Context) NetworkConfigDatapathProviderPtrOutput {
	return NetworkConfigDatapathProvider(e).ToNetworkConfigDatapathProviderOutputWithContext(ctx).ToNetworkConfigDatapathProviderPtrOutputWithContext(ctx)
}

func (e NetworkConfigDatapathProvider) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkConfigDatapathProvider) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkConfigDatapathProvider) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkConfigDatapathProvider) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkConfigDatapathProviderOutput struct{ *pulumi.OutputState }

func (NetworkConfigDatapathProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConfigDatapathProvider)(nil)).Elem()
}

func (o NetworkConfigDatapathProviderOutput) ToNetworkConfigDatapathProviderOutput() NetworkConfigDatapathProviderOutput {
	return o
}

func (o NetworkConfigDatapathProviderOutput) ToNetworkConfigDatapathProviderOutputWithContext(ctx context.Context) NetworkConfigDatapathProviderOutput {
	return o
}

func (o NetworkConfigDatapathProviderOutput) ToNetworkConfigDatapathProviderPtrOutput() NetworkConfigDatapathProviderPtrOutput {
	return o.ToNetworkConfigDatapathProviderPtrOutputWithContext(context.Background())
}

func (o NetworkConfigDatapathProviderOutput) ToNetworkConfigDatapathProviderPtrOutputWithContext(ctx context.Context) NetworkConfigDatapathProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkConfigDatapathProvider) *NetworkConfigDatapathProvider {
		return &v
	}).(NetworkConfigDatapathProviderPtrOutput)
}

func (o NetworkConfigDatapathProviderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkConfigDatapathProviderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkConfigDatapathProvider) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkConfigDatapathProviderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkConfigDatapathProviderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkConfigDatapathProvider) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkConfigDatapathProviderPtrOutput struct{ *pulumi.OutputState }

func (NetworkConfigDatapathProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConfigDatapathProvider)(nil)).Elem()
}

func (o NetworkConfigDatapathProviderPtrOutput) ToNetworkConfigDatapathProviderPtrOutput() NetworkConfigDatapathProviderPtrOutput {
	return o
}

func (o NetworkConfigDatapathProviderPtrOutput) ToNetworkConfigDatapathProviderPtrOutputWithContext(ctx context.Context) NetworkConfigDatapathProviderPtrOutput {
	return o
}

func (o NetworkConfigDatapathProviderPtrOutput) Elem() NetworkConfigDatapathProviderOutput {
	return o.ApplyT(func(v *NetworkConfigDatapathProvider) NetworkConfigDatapathProvider {
		if v != nil {
			return *v
		}
		var ret NetworkConfigDatapathProvider
		return ret
	}).(NetworkConfigDatapathProviderOutput)
}

func (o NetworkConfigDatapathProviderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkConfigDatapathProviderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkConfigDatapathProvider) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkConfigDatapathProviderInput is an input type that accepts NetworkConfigDatapathProviderArgs and NetworkConfigDatapathProviderOutput values.
// You can construct a concrete instance of `NetworkConfigDatapathProviderInput` via:
//
//	NetworkConfigDatapathProviderArgs{...}
type NetworkConfigDatapathProviderInput interface {
	pulumi.Input

	ToNetworkConfigDatapathProviderOutput() NetworkConfigDatapathProviderOutput
	ToNetworkConfigDatapathProviderOutputWithContext(context.Context) NetworkConfigDatapathProviderOutput
}

var networkConfigDatapathProviderPtrType = reflect.TypeOf((**NetworkConfigDatapathProvider)(nil)).Elem()

type NetworkConfigDatapathProviderPtrInput interface {
	pulumi.Input

	ToNetworkConfigDatapathProviderPtrOutput() NetworkConfigDatapathProviderPtrOutput
	ToNetworkConfigDatapathProviderPtrOutputWithContext(context.Context) NetworkConfigDatapathProviderPtrOutput
}

type networkConfigDatapathProviderPtr string

func NetworkConfigDatapathProviderPtr(v string) NetworkConfigDatapathProviderPtrInput {
	return (*networkConfigDatapathProviderPtr)(&v)
}

func (*networkConfigDatapathProviderPtr) ElementType() reflect.Type {
	return networkConfigDatapathProviderPtrType
}

func (in *networkConfigDatapathProviderPtr) ToNetworkConfigDatapathProviderPtrOutput() NetworkConfigDatapathProviderPtrOutput {
	return pulumi.ToOutput(in).(NetworkConfigDatapathProviderPtrOutput)
}

func (in *networkConfigDatapathProviderPtr) ToNetworkConfigDatapathProviderPtrOutputWithContext(ctx context.Context) NetworkConfigDatapathProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkConfigDatapathProviderPtrOutput)
}

// The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services (all access will be via IPv4)
type NetworkConfigPrivateIpv6GoogleAccess string

const (
	// Default value. Same as DISABLED
	NetworkConfigPrivateIpv6GoogleAccessPrivateIpv6GoogleAccessUnspecified = NetworkConfigPrivateIpv6GoogleAccess("PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED")
	// No private access to or from Google Services
	NetworkConfigPrivateIpv6GoogleAccessPrivateIpv6GoogleAccessDisabled = NetworkConfigPrivateIpv6GoogleAccess("PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED")
	// Enables private IPv6 access to Google Services from GKE
	NetworkConfigPrivateIpv6GoogleAccessPrivateIpv6GoogleAccessToGoogle = NetworkConfigPrivateIpv6GoogleAccess("PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE")
	// Enables priate IPv6 access to and from Google Services
	NetworkConfigPrivateIpv6GoogleAccessPrivateIpv6GoogleAccessBidirectional = NetworkConfigPrivateIpv6GoogleAccess("PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL")
)

func (NetworkConfigPrivateIpv6GoogleAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConfigPrivateIpv6GoogleAccess)(nil)).Elem()
}

func (e NetworkConfigPrivateIpv6GoogleAccess) ToNetworkConfigPrivateIpv6GoogleAccessOutput() NetworkConfigPrivateIpv6GoogleAccessOutput {
	return pulumi.ToOutput(e).(NetworkConfigPrivateIpv6GoogleAccessOutput)
}

func (e NetworkConfigPrivateIpv6GoogleAccess) ToNetworkConfigPrivateIpv6GoogleAccessOutputWithContext(ctx context.Context) NetworkConfigPrivateIpv6GoogleAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkConfigPrivateIpv6GoogleAccessOutput)
}

func (e NetworkConfigPrivateIpv6GoogleAccess) ToNetworkConfigPrivateIpv6GoogleAccessPtrOutput() NetworkConfigPrivateIpv6GoogleAccessPtrOutput {
	return e.ToNetworkConfigPrivateIpv6GoogleAccessPtrOutputWithContext(context.Background())
}

func (e NetworkConfigPrivateIpv6GoogleAccess) ToNetworkConfigPrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) NetworkConfigPrivateIpv6GoogleAccessPtrOutput {
	return NetworkConfigPrivateIpv6GoogleAccess(e).ToNetworkConfigPrivateIpv6GoogleAccessOutputWithContext(ctx).ToNetworkConfigPrivateIpv6GoogleAccessPtrOutputWithContext(ctx)
}

func (e NetworkConfigPrivateIpv6GoogleAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkConfigPrivateIpv6GoogleAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkConfigPrivateIpv6GoogleAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkConfigPrivateIpv6GoogleAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkConfigPrivateIpv6GoogleAccessOutput struct{ *pulumi.OutputState }

func (NetworkConfigPrivateIpv6GoogleAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConfigPrivateIpv6GoogleAccess)(nil)).Elem()
}

func (o NetworkConfigPrivateIpv6GoogleAccessOutput) ToNetworkConfigPrivateIpv6GoogleAccessOutput() NetworkConfigPrivateIpv6GoogleAccessOutput {
	return o
}

func (o NetworkConfigPrivateIpv6GoogleAccessOutput) ToNetworkConfigPrivateIpv6GoogleAccessOutputWithContext(ctx context.Context) NetworkConfigPrivateIpv6GoogleAccessOutput {
	return o
}

func (o NetworkConfigPrivateIpv6GoogleAccessOutput) ToNetworkConfigPrivateIpv6GoogleAccessPtrOutput() NetworkConfigPrivateIpv6GoogleAccessPtrOutput {
	return o.ToNetworkConfigPrivateIpv6GoogleAccessPtrOutputWithContext(context.Background())
}

func (o NetworkConfigPrivateIpv6GoogleAccessOutput) ToNetworkConfigPrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) NetworkConfigPrivateIpv6GoogleAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkConfigPrivateIpv6GoogleAccess) *NetworkConfigPrivateIpv6GoogleAccess {
		return &v
	}).(NetworkConfigPrivateIpv6GoogleAccessPtrOutput)
}

func (o NetworkConfigPrivateIpv6GoogleAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkConfigPrivateIpv6GoogleAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkConfigPrivateIpv6GoogleAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkConfigPrivateIpv6GoogleAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkConfigPrivateIpv6GoogleAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkConfigPrivateIpv6GoogleAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkConfigPrivateIpv6GoogleAccessPtrOutput struct{ *pulumi.OutputState }

func (NetworkConfigPrivateIpv6GoogleAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConfigPrivateIpv6GoogleAccess)(nil)).Elem()
}

func (o NetworkConfigPrivateIpv6GoogleAccessPtrOutput) ToNetworkConfigPrivateIpv6GoogleAccessPtrOutput() NetworkConfigPrivateIpv6GoogleAccessPtrOutput {
	return o
}

func (o NetworkConfigPrivateIpv6GoogleAccessPtrOutput) ToNetworkConfigPrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) NetworkConfigPrivateIpv6GoogleAccessPtrOutput {
	return o
}

func (o NetworkConfigPrivateIpv6GoogleAccessPtrOutput) Elem() NetworkConfigPrivateIpv6GoogleAccessOutput {
	return o.ApplyT(func(v *NetworkConfigPrivateIpv6GoogleAccess) NetworkConfigPrivateIpv6GoogleAccess {
		if v != nil {
			return *v
		}
		var ret NetworkConfigPrivateIpv6GoogleAccess
		return ret
	}).(NetworkConfigPrivateIpv6GoogleAccessOutput)
}

func (o NetworkConfigPrivateIpv6GoogleAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkConfigPrivateIpv6GoogleAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkConfigPrivateIpv6GoogleAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkConfigPrivateIpv6GoogleAccessInput is an input type that accepts NetworkConfigPrivateIpv6GoogleAccessArgs and NetworkConfigPrivateIpv6GoogleAccessOutput values.
// You can construct a concrete instance of `NetworkConfigPrivateIpv6GoogleAccessInput` via:
//
//	NetworkConfigPrivateIpv6GoogleAccessArgs{...}
type NetworkConfigPrivateIpv6GoogleAccessInput interface {
	pulumi.Input

	ToNetworkConfigPrivateIpv6GoogleAccessOutput() NetworkConfigPrivateIpv6GoogleAccessOutput
	ToNetworkConfigPrivateIpv6GoogleAccessOutputWithContext(context.Context) NetworkConfigPrivateIpv6GoogleAccessOutput
}

var networkConfigPrivateIpv6GoogleAccessPtrType = reflect.TypeOf((**NetworkConfigPrivateIpv6GoogleAccess)(nil)).Elem()

type NetworkConfigPrivateIpv6GoogleAccessPtrInput interface {
	pulumi.Input

	ToNetworkConfigPrivateIpv6GoogleAccessPtrOutput() NetworkConfigPrivateIpv6GoogleAccessPtrOutput
	ToNetworkConfigPrivateIpv6GoogleAccessPtrOutputWithContext(context.Context) NetworkConfigPrivateIpv6GoogleAccessPtrOutput
}

type networkConfigPrivateIpv6GoogleAccessPtr string

func NetworkConfigPrivateIpv6GoogleAccessPtr(v string) NetworkConfigPrivateIpv6GoogleAccessPtrInput {
	return (*networkConfigPrivateIpv6GoogleAccessPtr)(&v)
}

func (*networkConfigPrivateIpv6GoogleAccessPtr) ElementType() reflect.Type {
	return networkConfigPrivateIpv6GoogleAccessPtrType
}

func (in *networkConfigPrivateIpv6GoogleAccessPtr) ToNetworkConfigPrivateIpv6GoogleAccessPtrOutput() NetworkConfigPrivateIpv6GoogleAccessPtrOutput {
	return pulumi.ToOutput(in).(NetworkConfigPrivateIpv6GoogleAccessPtrOutput)
}

func (in *networkConfigPrivateIpv6GoogleAccessPtr) ToNetworkConfigPrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) NetworkConfigPrivateIpv6GoogleAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkConfigPrivateIpv6GoogleAccessPtrOutput)
}

// Specifies the network bandwidth tier for the NodePool for traffic to external/public IP addresses.
type NetworkPerformanceConfigExternalIpEgressBandwidthTier string

const (
	// Default value
	NetworkPerformanceConfigExternalIpEgressBandwidthTierTierUnspecified = NetworkPerformanceConfigExternalIpEgressBandwidthTier("TIER_UNSPECIFIED")
	// Higher bandwidth, actual values based on VM size.
	NetworkPerformanceConfigExternalIpEgressBandwidthTierTier1 = NetworkPerformanceConfigExternalIpEgressBandwidthTier("TIER_1")
)

func (NetworkPerformanceConfigExternalIpEgressBandwidthTier) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPerformanceConfigExternalIpEgressBandwidthTier)(nil)).Elem()
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput {
	return pulumi.ToOutput(e).(NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput)
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierOutputWithContext(ctx context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput)
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return e.ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(context.Background())
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return NetworkPerformanceConfigExternalIpEgressBandwidthTier(e).ToNetworkPerformanceConfigExternalIpEgressBandwidthTierOutputWithContext(ctx).ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(ctx)
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput struct{ *pulumi.OutputState }

func (NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPerformanceConfigExternalIpEgressBandwidthTier)(nil)).Elem()
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput {
	return o
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierOutputWithContext(ctx context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput {
	return o
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return o.ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkPerformanceConfigExternalIpEgressBandwidthTier) *NetworkPerformanceConfigExternalIpEgressBandwidthTier {
		return &v
	}).(NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput)
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkPerformanceConfigExternalIpEgressBandwidthTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkPerformanceConfigExternalIpEgressBandwidthTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput struct{ *pulumi.OutputState }

func (NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPerformanceConfigExternalIpEgressBandwidthTier)(nil)).Elem()
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return o
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return o
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput) Elem() NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput {
	return o.ApplyT(func(v *NetworkPerformanceConfigExternalIpEgressBandwidthTier) NetworkPerformanceConfigExternalIpEgressBandwidthTier {
		if v != nil {
			return *v
		}
		var ret NetworkPerformanceConfigExternalIpEgressBandwidthTier
		return ret
	}).(NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput)
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkPerformanceConfigExternalIpEgressBandwidthTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkPerformanceConfigExternalIpEgressBandwidthTierInput is an input type that accepts NetworkPerformanceConfigExternalIpEgressBandwidthTierArgs and NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput values.
// You can construct a concrete instance of `NetworkPerformanceConfigExternalIpEgressBandwidthTierInput` via:
//
//	NetworkPerformanceConfigExternalIpEgressBandwidthTierArgs{...}
type NetworkPerformanceConfigExternalIpEgressBandwidthTierInput interface {
	pulumi.Input

	ToNetworkPerformanceConfigExternalIpEgressBandwidthTierOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput
	ToNetworkPerformanceConfigExternalIpEgressBandwidthTierOutputWithContext(context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput
}

var networkPerformanceConfigExternalIpEgressBandwidthTierPtrType = reflect.TypeOf((**NetworkPerformanceConfigExternalIpEgressBandwidthTier)(nil)).Elem()

type NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrInput interface {
	pulumi.Input

	ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput
	ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput
}

type networkPerformanceConfigExternalIpEgressBandwidthTierPtr string

func NetworkPerformanceConfigExternalIpEgressBandwidthTierPtr(v string) NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrInput {
	return (*networkPerformanceConfigExternalIpEgressBandwidthTierPtr)(&v)
}

func (*networkPerformanceConfigExternalIpEgressBandwidthTierPtr) ElementType() reflect.Type {
	return networkPerformanceConfigExternalIpEgressBandwidthTierPtrType
}

func (in *networkPerformanceConfigExternalIpEgressBandwidthTierPtr) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return pulumi.ToOutput(in).(NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput)
}

func (in *networkPerformanceConfigExternalIpEgressBandwidthTierPtr) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput)
}

// Specifies the total network bandwidth tier for the NodePool.
type NetworkPerformanceConfigTotalEgressBandwidthTier string

const (
	// Default value
	NetworkPerformanceConfigTotalEgressBandwidthTierTierUnspecified = NetworkPerformanceConfigTotalEgressBandwidthTier("TIER_UNSPECIFIED")
	// Higher bandwidth, actual values based on VM size.
	NetworkPerformanceConfigTotalEgressBandwidthTierTier1 = NetworkPerformanceConfigTotalEgressBandwidthTier("TIER_1")
)

func (NetworkPerformanceConfigTotalEgressBandwidthTier) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPerformanceConfigTotalEgressBandwidthTier)(nil)).Elem()
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToNetworkPerformanceConfigTotalEgressBandwidthTierOutput() NetworkPerformanceConfigTotalEgressBandwidthTierOutput {
	return pulumi.ToOutput(e).(NetworkPerformanceConfigTotalEgressBandwidthTierOutput)
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToNetworkPerformanceConfigTotalEgressBandwidthTierOutputWithContext(ctx context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkPerformanceConfigTotalEgressBandwidthTierOutput)
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput() NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return e.ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(context.Background())
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return NetworkPerformanceConfigTotalEgressBandwidthTier(e).ToNetworkPerformanceConfigTotalEgressBandwidthTierOutputWithContext(ctx).ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(ctx)
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkPerformanceConfigTotalEgressBandwidthTierOutput struct{ *pulumi.OutputState }

func (NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPerformanceConfigTotalEgressBandwidthTier)(nil)).Elem()
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToNetworkPerformanceConfigTotalEgressBandwidthTierOutput() NetworkPerformanceConfigTotalEgressBandwidthTierOutput {
	return o
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToNetworkPerformanceConfigTotalEgressBandwidthTierOutputWithContext(ctx context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierOutput {
	return o
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput() NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return o.ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkPerformanceConfigTotalEgressBandwidthTier) *NetworkPerformanceConfigTotalEgressBandwidthTier {
		return &v
	}).(NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput)
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkPerformanceConfigTotalEgressBandwidthTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkPerformanceConfigTotalEgressBandwidthTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput struct{ *pulumi.OutputState }

func (NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPerformanceConfigTotalEgressBandwidthTier)(nil)).Elem()
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput() NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return o
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return o
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput) Elem() NetworkPerformanceConfigTotalEgressBandwidthTierOutput {
	return o.ApplyT(func(v *NetworkPerformanceConfigTotalEgressBandwidthTier) NetworkPerformanceConfigTotalEgressBandwidthTier {
		if v != nil {
			return *v
		}
		var ret NetworkPerformanceConfigTotalEgressBandwidthTier
		return ret
	}).(NetworkPerformanceConfigTotalEgressBandwidthTierOutput)
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkPerformanceConfigTotalEgressBandwidthTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkPerformanceConfigTotalEgressBandwidthTierInput is an input type that accepts NetworkPerformanceConfigTotalEgressBandwidthTierArgs and NetworkPerformanceConfigTotalEgressBandwidthTierOutput values.
// You can construct a concrete instance of `NetworkPerformanceConfigTotalEgressBandwidthTierInput` via:
//
//	NetworkPerformanceConfigTotalEgressBandwidthTierArgs{...}
type NetworkPerformanceConfigTotalEgressBandwidthTierInput interface {
	pulumi.Input

	ToNetworkPerformanceConfigTotalEgressBandwidthTierOutput() NetworkPerformanceConfigTotalEgressBandwidthTierOutput
	ToNetworkPerformanceConfigTotalEgressBandwidthTierOutputWithContext(context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierOutput
}

var networkPerformanceConfigTotalEgressBandwidthTierPtrType = reflect.TypeOf((**NetworkPerformanceConfigTotalEgressBandwidthTier)(nil)).Elem()

type NetworkPerformanceConfigTotalEgressBandwidthTierPtrInput interface {
	pulumi.Input

	ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput() NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput
	ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput
}

type networkPerformanceConfigTotalEgressBandwidthTierPtr string

func NetworkPerformanceConfigTotalEgressBandwidthTierPtr(v string) NetworkPerformanceConfigTotalEgressBandwidthTierPtrInput {
	return (*networkPerformanceConfigTotalEgressBandwidthTierPtr)(&v)
}

func (*networkPerformanceConfigTotalEgressBandwidthTierPtr) ElementType() reflect.Type {
	return networkPerformanceConfigTotalEgressBandwidthTierPtrType
}

func (in *networkPerformanceConfigTotalEgressBandwidthTierPtr) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput() NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return pulumi.ToOutput(in).(NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput)
}

func (in *networkPerformanceConfigTotalEgressBandwidthTierPtr) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput)
}

// The selected network policy provider.
type NetworkPolicyProvider string

const (
	// Not set
	NetworkPolicyProviderProviderUnspecified = NetworkPolicyProvider("PROVIDER_UNSPECIFIED")
	// Tigera (Calico Felix).
	NetworkPolicyProviderCalico = NetworkPolicyProvider("CALICO")
)

func (NetworkPolicyProvider) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPolicyProvider)(nil)).Elem()
}

func (e NetworkPolicyProvider) ToNetworkPolicyProviderOutput() NetworkPolicyProviderOutput {
	return pulumi.ToOutput(e).(NetworkPolicyProviderOutput)
}

func (e NetworkPolicyProvider) ToNetworkPolicyProviderOutputWithContext(ctx context.Context) NetworkPolicyProviderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkPolicyProviderOutput)
}

func (e NetworkPolicyProvider) ToNetworkPolicyProviderPtrOutput() NetworkPolicyProviderPtrOutput {
	return e.ToNetworkPolicyProviderPtrOutputWithContext(context.Background())
}

func (e NetworkPolicyProvider) ToNetworkPolicyProviderPtrOutputWithContext(ctx context.Context) NetworkPolicyProviderPtrOutput {
	return NetworkPolicyProvider(e).ToNetworkPolicyProviderOutputWithContext(ctx).ToNetworkPolicyProviderPtrOutputWithContext(ctx)
}

func (e NetworkPolicyProvider) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkPolicyProvider) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkPolicyProvider) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkPolicyProvider) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkPolicyProviderOutput struct{ *pulumi.OutputState }

func (NetworkPolicyProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPolicyProvider)(nil)).Elem()
}

func (o NetworkPolicyProviderOutput) ToNetworkPolicyProviderOutput() NetworkPolicyProviderOutput {
	return o
}

func (o NetworkPolicyProviderOutput) ToNetworkPolicyProviderOutputWithContext(ctx context.Context) NetworkPolicyProviderOutput {
	return o
}

func (o NetworkPolicyProviderOutput) ToNetworkPolicyProviderPtrOutput() NetworkPolicyProviderPtrOutput {
	return o.ToNetworkPolicyProviderPtrOutputWithContext(context.Background())
}

func (o NetworkPolicyProviderOutput) ToNetworkPolicyProviderPtrOutputWithContext(ctx context.Context) NetworkPolicyProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkPolicyProvider) *NetworkPolicyProvider {
		return &v
	}).(NetworkPolicyProviderPtrOutput)
}

func (o NetworkPolicyProviderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkPolicyProviderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkPolicyProvider) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkPolicyProviderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkPolicyProviderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkPolicyProvider) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkPolicyProviderPtrOutput struct{ *pulumi.OutputState }

func (NetworkPolicyProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPolicyProvider)(nil)).Elem()
}

func (o NetworkPolicyProviderPtrOutput) ToNetworkPolicyProviderPtrOutput() NetworkPolicyProviderPtrOutput {
	return o
}

func (o NetworkPolicyProviderPtrOutput) ToNetworkPolicyProviderPtrOutputWithContext(ctx context.Context) NetworkPolicyProviderPtrOutput {
	return o
}

func (o NetworkPolicyProviderPtrOutput) Elem() NetworkPolicyProviderOutput {
	return o.ApplyT(func(v *NetworkPolicyProvider) NetworkPolicyProvider {
		if v != nil {
			return *v
		}
		var ret NetworkPolicyProvider
		return ret
	}).(NetworkPolicyProviderOutput)
}

func (o NetworkPolicyProviderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkPolicyProviderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkPolicyProvider) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkPolicyProviderInput is an input type that accepts NetworkPolicyProviderArgs and NetworkPolicyProviderOutput values.
// You can construct a concrete instance of `NetworkPolicyProviderInput` via:
//
//	NetworkPolicyProviderArgs{...}
type NetworkPolicyProviderInput interface {
	pulumi.Input

	ToNetworkPolicyProviderOutput() NetworkPolicyProviderOutput
	ToNetworkPolicyProviderOutputWithContext(context.Context) NetworkPolicyProviderOutput
}

var networkPolicyProviderPtrType = reflect.TypeOf((**NetworkPolicyProvider)(nil)).Elem()

type NetworkPolicyProviderPtrInput interface {
	pulumi.Input

	ToNetworkPolicyProviderPtrOutput() NetworkPolicyProviderPtrOutput
	ToNetworkPolicyProviderPtrOutputWithContext(context.Context) NetworkPolicyProviderPtrOutput
}

type networkPolicyProviderPtr string

func NetworkPolicyProviderPtr(v string) NetworkPolicyProviderPtrInput {
	return (*networkPolicyProviderPtr)(&v)
}

func (*networkPolicyProviderPtr) ElementType() reflect.Type {
	return networkPolicyProviderPtrType
}

func (in *networkPolicyProviderPtr) ToNetworkPolicyProviderPtrOutput() NetworkPolicyProviderPtrOutput {
	return pulumi.ToOutput(in).(NetworkPolicyProviderPtrOutput)
}

func (in *networkPolicyProviderPtr) ToNetworkPolicyProviderPtrOutputWithContext(ctx context.Context) NetworkPolicyProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkPolicyProviderPtrOutput)
}

// Location policy used when scaling up a nodepool.
type NodePoolAutoscalingLocationPolicy string

const (
	// Not set.
	NodePoolAutoscalingLocationPolicyLocationPolicyUnspecified = NodePoolAutoscalingLocationPolicy("LOCATION_POLICY_UNSPECIFIED")
	// BALANCED is a best effort policy that aims to balance the sizes of different zones.
	NodePoolAutoscalingLocationPolicyBalanced = NodePoolAutoscalingLocationPolicy("BALANCED")
	// ANY policy picks zones that have the highest capacity available.
	NodePoolAutoscalingLocationPolicyAny = NodePoolAutoscalingLocationPolicy("ANY")
)

func (NodePoolAutoscalingLocationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoscalingLocationPolicy)(nil)).Elem()
}

func (e NodePoolAutoscalingLocationPolicy) ToNodePoolAutoscalingLocationPolicyOutput() NodePoolAutoscalingLocationPolicyOutput {
	return pulumi.ToOutput(e).(NodePoolAutoscalingLocationPolicyOutput)
}

func (e NodePoolAutoscalingLocationPolicy) ToNodePoolAutoscalingLocationPolicyOutputWithContext(ctx context.Context) NodePoolAutoscalingLocationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NodePoolAutoscalingLocationPolicyOutput)
}

func (e NodePoolAutoscalingLocationPolicy) ToNodePoolAutoscalingLocationPolicyPtrOutput() NodePoolAutoscalingLocationPolicyPtrOutput {
	return e.ToNodePoolAutoscalingLocationPolicyPtrOutputWithContext(context.Background())
}

func (e NodePoolAutoscalingLocationPolicy) ToNodePoolAutoscalingLocationPolicyPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingLocationPolicyPtrOutput {
	return NodePoolAutoscalingLocationPolicy(e).ToNodePoolAutoscalingLocationPolicyOutputWithContext(ctx).ToNodePoolAutoscalingLocationPolicyPtrOutputWithContext(ctx)
}

func (e NodePoolAutoscalingLocationPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NodePoolAutoscalingLocationPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NodePoolAutoscalingLocationPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NodePoolAutoscalingLocationPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NodePoolAutoscalingLocationPolicyOutput struct{ *pulumi.OutputState }

func (NodePoolAutoscalingLocationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoscalingLocationPolicy)(nil)).Elem()
}

func (o NodePoolAutoscalingLocationPolicyOutput) ToNodePoolAutoscalingLocationPolicyOutput() NodePoolAutoscalingLocationPolicyOutput {
	return o
}

func (o NodePoolAutoscalingLocationPolicyOutput) ToNodePoolAutoscalingLocationPolicyOutputWithContext(ctx context.Context) NodePoolAutoscalingLocationPolicyOutput {
	return o
}

func (o NodePoolAutoscalingLocationPolicyOutput) ToNodePoolAutoscalingLocationPolicyPtrOutput() NodePoolAutoscalingLocationPolicyPtrOutput {
	return o.ToNodePoolAutoscalingLocationPolicyPtrOutputWithContext(context.Background())
}

func (o NodePoolAutoscalingLocationPolicyOutput) ToNodePoolAutoscalingLocationPolicyPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingLocationPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolAutoscalingLocationPolicy) *NodePoolAutoscalingLocationPolicy {
		return &v
	}).(NodePoolAutoscalingLocationPolicyPtrOutput)
}

func (o NodePoolAutoscalingLocationPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NodePoolAutoscalingLocationPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NodePoolAutoscalingLocationPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NodePoolAutoscalingLocationPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NodePoolAutoscalingLocationPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NodePoolAutoscalingLocationPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NodePoolAutoscalingLocationPolicyPtrOutput struct{ *pulumi.OutputState }

func (NodePoolAutoscalingLocationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolAutoscalingLocationPolicy)(nil)).Elem()
}

func (o NodePoolAutoscalingLocationPolicyPtrOutput) ToNodePoolAutoscalingLocationPolicyPtrOutput() NodePoolAutoscalingLocationPolicyPtrOutput {
	return o
}

func (o NodePoolAutoscalingLocationPolicyPtrOutput) ToNodePoolAutoscalingLocationPolicyPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingLocationPolicyPtrOutput {
	return o
}

func (o NodePoolAutoscalingLocationPolicyPtrOutput) Elem() NodePoolAutoscalingLocationPolicyOutput {
	return o.ApplyT(func(v *NodePoolAutoscalingLocationPolicy) NodePoolAutoscalingLocationPolicy {
		if v != nil {
			return *v
		}
		var ret NodePoolAutoscalingLocationPolicy
		return ret
	}).(NodePoolAutoscalingLocationPolicyOutput)
}

func (o NodePoolAutoscalingLocationPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NodePoolAutoscalingLocationPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NodePoolAutoscalingLocationPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NodePoolAutoscalingLocationPolicyInput is an input type that accepts NodePoolAutoscalingLocationPolicyArgs and NodePoolAutoscalingLocationPolicyOutput values.
// You can construct a concrete instance of `NodePoolAutoscalingLocationPolicyInput` via:
//
//	NodePoolAutoscalingLocationPolicyArgs{...}
type NodePoolAutoscalingLocationPolicyInput interface {
	pulumi.Input

	ToNodePoolAutoscalingLocationPolicyOutput() NodePoolAutoscalingLocationPolicyOutput
	ToNodePoolAutoscalingLocationPolicyOutputWithContext(context.Context) NodePoolAutoscalingLocationPolicyOutput
}

var nodePoolAutoscalingLocationPolicyPtrType = reflect.TypeOf((**NodePoolAutoscalingLocationPolicy)(nil)).Elem()

type NodePoolAutoscalingLocationPolicyPtrInput interface {
	pulumi.Input

	ToNodePoolAutoscalingLocationPolicyPtrOutput() NodePoolAutoscalingLocationPolicyPtrOutput
	ToNodePoolAutoscalingLocationPolicyPtrOutputWithContext(context.Context) NodePoolAutoscalingLocationPolicyPtrOutput
}

type nodePoolAutoscalingLocationPolicyPtr string

func NodePoolAutoscalingLocationPolicyPtr(v string) NodePoolAutoscalingLocationPolicyPtrInput {
	return (*nodePoolAutoscalingLocationPolicyPtr)(&v)
}

func (*nodePoolAutoscalingLocationPolicyPtr) ElementType() reflect.Type {
	return nodePoolAutoscalingLocationPolicyPtrType
}

func (in *nodePoolAutoscalingLocationPolicyPtr) ToNodePoolAutoscalingLocationPolicyPtrOutput() NodePoolAutoscalingLocationPolicyPtrOutput {
	return pulumi.ToOutput(in).(NodePoolAutoscalingLocationPolicyPtrOutput)
}

func (in *nodePoolAutoscalingLocationPolicyPtr) ToNodePoolAutoscalingLocationPolicyPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingLocationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NodePoolAutoscalingLocationPolicyPtrOutput)
}

// Effect for taint.
type NodeTaintEffect string

const (
	// Not set
	NodeTaintEffectEffectUnspecified = NodeTaintEffect("EFFECT_UNSPECIFIED")
	// NoSchedule
	NodeTaintEffectNoSchedule = NodeTaintEffect("NO_SCHEDULE")
	// PreferNoSchedule
	NodeTaintEffectPreferNoSchedule = NodeTaintEffect("PREFER_NO_SCHEDULE")
	// NoExecute
	NodeTaintEffectNoExecute = NodeTaintEffect("NO_EXECUTE")
)

func (NodeTaintEffect) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTaintEffect)(nil)).Elem()
}

func (e NodeTaintEffect) ToNodeTaintEffectOutput() NodeTaintEffectOutput {
	return pulumi.ToOutput(e).(NodeTaintEffectOutput)
}

func (e NodeTaintEffect) ToNodeTaintEffectOutputWithContext(ctx context.Context) NodeTaintEffectOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NodeTaintEffectOutput)
}

func (e NodeTaintEffect) ToNodeTaintEffectPtrOutput() NodeTaintEffectPtrOutput {
	return e.ToNodeTaintEffectPtrOutputWithContext(context.Background())
}

func (e NodeTaintEffect) ToNodeTaintEffectPtrOutputWithContext(ctx context.Context) NodeTaintEffectPtrOutput {
	return NodeTaintEffect(e).ToNodeTaintEffectOutputWithContext(ctx).ToNodeTaintEffectPtrOutputWithContext(ctx)
}

func (e NodeTaintEffect) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NodeTaintEffect) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NodeTaintEffect) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NodeTaintEffect) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NodeTaintEffectOutput struct{ *pulumi.OutputState }

func (NodeTaintEffectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTaintEffect)(nil)).Elem()
}

func (o NodeTaintEffectOutput) ToNodeTaintEffectOutput() NodeTaintEffectOutput {
	return o
}

func (o NodeTaintEffectOutput) ToNodeTaintEffectOutputWithContext(ctx context.Context) NodeTaintEffectOutput {
	return o
}

func (o NodeTaintEffectOutput) ToNodeTaintEffectPtrOutput() NodeTaintEffectPtrOutput {
	return o.ToNodeTaintEffectPtrOutputWithContext(context.Background())
}

func (o NodeTaintEffectOutput) ToNodeTaintEffectPtrOutputWithContext(ctx context.Context) NodeTaintEffectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeTaintEffect) *NodeTaintEffect {
		return &v
	}).(NodeTaintEffectPtrOutput)
}

func (o NodeTaintEffectOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NodeTaintEffectOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NodeTaintEffect) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NodeTaintEffectOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NodeTaintEffectOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NodeTaintEffect) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NodeTaintEffectPtrOutput struct{ *pulumi.OutputState }

func (NodeTaintEffectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTaintEffect)(nil)).Elem()
}

func (o NodeTaintEffectPtrOutput) ToNodeTaintEffectPtrOutput() NodeTaintEffectPtrOutput {
	return o
}

func (o NodeTaintEffectPtrOutput) ToNodeTaintEffectPtrOutputWithContext(ctx context.Context) NodeTaintEffectPtrOutput {
	return o
}

func (o NodeTaintEffectPtrOutput) Elem() NodeTaintEffectOutput {
	return o.ApplyT(func(v *NodeTaintEffect) NodeTaintEffect {
		if v != nil {
			return *v
		}
		var ret NodeTaintEffect
		return ret
	}).(NodeTaintEffectOutput)
}

func (o NodeTaintEffectPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NodeTaintEffectPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NodeTaintEffect) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NodeTaintEffectInput is an input type that accepts NodeTaintEffectArgs and NodeTaintEffectOutput values.
// You can construct a concrete instance of `NodeTaintEffectInput` via:
//
//	NodeTaintEffectArgs{...}
type NodeTaintEffectInput interface {
	pulumi.Input

	ToNodeTaintEffectOutput() NodeTaintEffectOutput
	ToNodeTaintEffectOutputWithContext(context.Context) NodeTaintEffectOutput
}

var nodeTaintEffectPtrType = reflect.TypeOf((**NodeTaintEffect)(nil)).Elem()

type NodeTaintEffectPtrInput interface {
	pulumi.Input

	ToNodeTaintEffectPtrOutput() NodeTaintEffectPtrOutput
	ToNodeTaintEffectPtrOutputWithContext(context.Context) NodeTaintEffectPtrOutput
}

type nodeTaintEffectPtr string

func NodeTaintEffectPtr(v string) NodeTaintEffectPtrInput {
	return (*nodeTaintEffectPtr)(&v)
}

func (*nodeTaintEffectPtr) ElementType() reflect.Type {
	return nodeTaintEffectPtrType
}

func (in *nodeTaintEffectPtr) ToNodeTaintEffectPtrOutput() NodeTaintEffectPtrOutput {
	return pulumi.ToOutput(in).(NodeTaintEffectPtrOutput)
}

func (in *nodeTaintEffectPtr) ToNodeTaintEffectPtrOutputWithContext(ctx context.Context) NodeTaintEffectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NodeTaintEffectPtrOutput)
}

// The type of placement.
type PlacementPolicyType string

const (
	// TYPE_UNSPECIFIED specifies no requirements on nodes placement.
	PlacementPolicyTypeTypeUnspecified = PlacementPolicyType("TYPE_UNSPECIFIED")
	// COMPACT specifies node placement in the same availability domain to ensure low communication latency.
	PlacementPolicyTypeCompact = PlacementPolicyType("COMPACT")
)

func (PlacementPolicyType) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementPolicyType)(nil)).Elem()
}

func (e PlacementPolicyType) ToPlacementPolicyTypeOutput() PlacementPolicyTypeOutput {
	return pulumi.ToOutput(e).(PlacementPolicyTypeOutput)
}

func (e PlacementPolicyType) ToPlacementPolicyTypeOutputWithContext(ctx context.Context) PlacementPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PlacementPolicyTypeOutput)
}

func (e PlacementPolicyType) ToPlacementPolicyTypePtrOutput() PlacementPolicyTypePtrOutput {
	return e.ToPlacementPolicyTypePtrOutputWithContext(context.Background())
}

func (e PlacementPolicyType) ToPlacementPolicyTypePtrOutputWithContext(ctx context.Context) PlacementPolicyTypePtrOutput {
	return PlacementPolicyType(e).ToPlacementPolicyTypeOutputWithContext(ctx).ToPlacementPolicyTypePtrOutputWithContext(ctx)
}

func (e PlacementPolicyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlacementPolicyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlacementPolicyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PlacementPolicyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PlacementPolicyTypeOutput struct{ *pulumi.OutputState }

func (PlacementPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlacementPolicyType)(nil)).Elem()
}

func (o PlacementPolicyTypeOutput) ToPlacementPolicyTypeOutput() PlacementPolicyTypeOutput {
	return o
}

func (o PlacementPolicyTypeOutput) ToPlacementPolicyTypeOutputWithContext(ctx context.Context) PlacementPolicyTypeOutput {
	return o
}

func (o PlacementPolicyTypeOutput) ToPlacementPolicyTypePtrOutput() PlacementPolicyTypePtrOutput {
	return o.ToPlacementPolicyTypePtrOutputWithContext(context.Background())
}

func (o PlacementPolicyTypeOutput) ToPlacementPolicyTypePtrOutputWithContext(ctx context.Context) PlacementPolicyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PlacementPolicyType) *PlacementPolicyType {
		return &v
	}).(PlacementPolicyTypePtrOutput)
}

func (o PlacementPolicyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PlacementPolicyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PlacementPolicyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PlacementPolicyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlacementPolicyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PlacementPolicyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PlacementPolicyTypePtrOutput struct{ *pulumi.OutputState }

func (PlacementPolicyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlacementPolicyType)(nil)).Elem()
}

func (o PlacementPolicyTypePtrOutput) ToPlacementPolicyTypePtrOutput() PlacementPolicyTypePtrOutput {
	return o
}

func (o PlacementPolicyTypePtrOutput) ToPlacementPolicyTypePtrOutputWithContext(ctx context.Context) PlacementPolicyTypePtrOutput {
	return o
}

func (o PlacementPolicyTypePtrOutput) Elem() PlacementPolicyTypeOutput {
	return o.ApplyT(func(v *PlacementPolicyType) PlacementPolicyType {
		if v != nil {
			return *v
		}
		var ret PlacementPolicyType
		return ret
	}).(PlacementPolicyTypeOutput)
}

func (o PlacementPolicyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlacementPolicyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PlacementPolicyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PlacementPolicyTypeInput is an input type that accepts PlacementPolicyTypeArgs and PlacementPolicyTypeOutput values.
// You can construct a concrete instance of `PlacementPolicyTypeInput` via:
//
//	PlacementPolicyTypeArgs{...}
type PlacementPolicyTypeInput interface {
	pulumi.Input

	ToPlacementPolicyTypeOutput() PlacementPolicyTypeOutput
	ToPlacementPolicyTypeOutputWithContext(context.Context) PlacementPolicyTypeOutput
}

var placementPolicyTypePtrType = reflect.TypeOf((**PlacementPolicyType)(nil)).Elem()

type PlacementPolicyTypePtrInput interface {
	pulumi.Input

	ToPlacementPolicyTypePtrOutput() PlacementPolicyTypePtrOutput
	ToPlacementPolicyTypePtrOutputWithContext(context.Context) PlacementPolicyTypePtrOutput
}

type placementPolicyTypePtr string

func PlacementPolicyTypePtr(v string) PlacementPolicyTypePtrInput {
	return (*placementPolicyTypePtr)(&v)
}

func (*placementPolicyTypePtr) ElementType() reflect.Type {
	return placementPolicyTypePtrType
}

func (in *placementPolicyTypePtr) ToPlacementPolicyTypePtrOutput() PlacementPolicyTypePtrOutput {
	return pulumi.ToOutput(in).(PlacementPolicyTypePtrOutput)
}

func (in *placementPolicyTypePtr) ToPlacementPolicyTypePtrOutputWithContext(ctx context.Context) PlacementPolicyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PlacementPolicyTypePtrOutput)
}

// channel specifies which release channel the cluster is subscribed to.
type ReleaseChannelChannel string

const (
	// No channel specified.
	ReleaseChannelChannelUnspecified = ReleaseChannelChannel("UNSPECIFIED")
	// RAPID channel is offered on an early access basis for customers who want to test new releases. WARNING: Versions available in the RAPID Channel may be subject to unresolved issues with no known workaround and are not subject to any SLAs.
	ReleaseChannelChannelRapid = ReleaseChannelChannel("RAPID")
	// Clusters subscribed to REGULAR receive versions that are considered GA quality. REGULAR is intended for production users who want to take advantage of new features.
	ReleaseChannelChannelRegular = ReleaseChannelChannel("REGULAR")
	// Clusters subscribed to STABLE receive versions that are known to be stable and reliable in production.
	ReleaseChannelChannelStable = ReleaseChannelChannel("STABLE")
)

func (ReleaseChannelChannel) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseChannelChannel)(nil)).Elem()
}

func (e ReleaseChannelChannel) ToReleaseChannelChannelOutput() ReleaseChannelChannelOutput {
	return pulumi.ToOutput(e).(ReleaseChannelChannelOutput)
}

func (e ReleaseChannelChannel) ToReleaseChannelChannelOutputWithContext(ctx context.Context) ReleaseChannelChannelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReleaseChannelChannelOutput)
}

func (e ReleaseChannelChannel) ToReleaseChannelChannelPtrOutput() ReleaseChannelChannelPtrOutput {
	return e.ToReleaseChannelChannelPtrOutputWithContext(context.Background())
}

func (e ReleaseChannelChannel) ToReleaseChannelChannelPtrOutputWithContext(ctx context.Context) ReleaseChannelChannelPtrOutput {
	return ReleaseChannelChannel(e).ToReleaseChannelChannelOutputWithContext(ctx).ToReleaseChannelChannelPtrOutputWithContext(ctx)
}

func (e ReleaseChannelChannel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReleaseChannelChannel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReleaseChannelChannel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReleaseChannelChannel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReleaseChannelChannelOutput struct{ *pulumi.OutputState }

func (ReleaseChannelChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseChannelChannel)(nil)).Elem()
}

func (o ReleaseChannelChannelOutput) ToReleaseChannelChannelOutput() ReleaseChannelChannelOutput {
	return o
}

func (o ReleaseChannelChannelOutput) ToReleaseChannelChannelOutputWithContext(ctx context.Context) ReleaseChannelChannelOutput {
	return o
}

func (o ReleaseChannelChannelOutput) ToReleaseChannelChannelPtrOutput() ReleaseChannelChannelPtrOutput {
	return o.ToReleaseChannelChannelPtrOutputWithContext(context.Background())
}

func (o ReleaseChannelChannelOutput) ToReleaseChannelChannelPtrOutputWithContext(ctx context.Context) ReleaseChannelChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReleaseChannelChannel) *ReleaseChannelChannel {
		return &v
	}).(ReleaseChannelChannelPtrOutput)
}

func (o ReleaseChannelChannelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReleaseChannelChannelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReleaseChannelChannel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReleaseChannelChannelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReleaseChannelChannelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReleaseChannelChannel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReleaseChannelChannelPtrOutput struct{ *pulumi.OutputState }

func (ReleaseChannelChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReleaseChannelChannel)(nil)).Elem()
}

func (o ReleaseChannelChannelPtrOutput) ToReleaseChannelChannelPtrOutput() ReleaseChannelChannelPtrOutput {
	return o
}

func (o ReleaseChannelChannelPtrOutput) ToReleaseChannelChannelPtrOutputWithContext(ctx context.Context) ReleaseChannelChannelPtrOutput {
	return o
}

func (o ReleaseChannelChannelPtrOutput) Elem() ReleaseChannelChannelOutput {
	return o.ApplyT(func(v *ReleaseChannelChannel) ReleaseChannelChannel {
		if v != nil {
			return *v
		}
		var ret ReleaseChannelChannel
		return ret
	}).(ReleaseChannelChannelOutput)
}

func (o ReleaseChannelChannelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReleaseChannelChannelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReleaseChannelChannel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReleaseChannelChannelInput is an input type that accepts ReleaseChannelChannelArgs and ReleaseChannelChannelOutput values.
// You can construct a concrete instance of `ReleaseChannelChannelInput` via:
//
//	ReleaseChannelChannelArgs{...}
type ReleaseChannelChannelInput interface {
	pulumi.Input

	ToReleaseChannelChannelOutput() ReleaseChannelChannelOutput
	ToReleaseChannelChannelOutputWithContext(context.Context) ReleaseChannelChannelOutput
}

var releaseChannelChannelPtrType = reflect.TypeOf((**ReleaseChannelChannel)(nil)).Elem()

type ReleaseChannelChannelPtrInput interface {
	pulumi.Input

	ToReleaseChannelChannelPtrOutput() ReleaseChannelChannelPtrOutput
	ToReleaseChannelChannelPtrOutputWithContext(context.Context) ReleaseChannelChannelPtrOutput
}

type releaseChannelChannelPtr string

func ReleaseChannelChannelPtr(v string) ReleaseChannelChannelPtrInput {
	return (*releaseChannelChannelPtr)(&v)
}

func (*releaseChannelChannelPtr) ElementType() reflect.Type {
	return releaseChannelChannelPtrType
}

func (in *releaseChannelChannelPtr) ToReleaseChannelChannelPtrOutput() ReleaseChannelChannelPtrOutput {
	return pulumi.ToOutput(in).(ReleaseChannelChannelPtrOutput)
}

func (in *releaseChannelChannelPtr) ToReleaseChannelChannelPtrOutputWithContext(ctx context.Context) ReleaseChannelChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReleaseChannelChannelPtrOutput)
}

// Corresponds to the type of reservation consumption.
type ReservationAffinityConsumeReservationType string

const (
	// Default value. This should not be used.
	ReservationAffinityConsumeReservationTypeUnspecified = ReservationAffinityConsumeReservationType("UNSPECIFIED")
	// Do not consume from any reserved capacity.
	ReservationAffinityConsumeReservationTypeNoReservation = ReservationAffinityConsumeReservationType("NO_RESERVATION")
	// Consume any reservation available.
	ReservationAffinityConsumeReservationTypeAnyReservation = ReservationAffinityConsumeReservationType("ANY_RESERVATION")
	// Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
	ReservationAffinityConsumeReservationTypeSpecificReservation = ReservationAffinityConsumeReservationType("SPECIFIC_RESERVATION")
)

func (ReservationAffinityConsumeReservationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservationAffinityConsumeReservationType)(nil)).Elem()
}

func (e ReservationAffinityConsumeReservationType) ToReservationAffinityConsumeReservationTypeOutput() ReservationAffinityConsumeReservationTypeOutput {
	return pulumi.ToOutput(e).(ReservationAffinityConsumeReservationTypeOutput)
}

func (e ReservationAffinityConsumeReservationType) ToReservationAffinityConsumeReservationTypeOutputWithContext(ctx context.Context) ReservationAffinityConsumeReservationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReservationAffinityConsumeReservationTypeOutput)
}

func (e ReservationAffinityConsumeReservationType) ToReservationAffinityConsumeReservationTypePtrOutput() ReservationAffinityConsumeReservationTypePtrOutput {
	return e.ToReservationAffinityConsumeReservationTypePtrOutputWithContext(context.Background())
}

func (e ReservationAffinityConsumeReservationType) ToReservationAffinityConsumeReservationTypePtrOutputWithContext(ctx context.Context) ReservationAffinityConsumeReservationTypePtrOutput {
	return ReservationAffinityConsumeReservationType(e).ToReservationAffinityConsumeReservationTypeOutputWithContext(ctx).ToReservationAffinityConsumeReservationTypePtrOutputWithContext(ctx)
}

func (e ReservationAffinityConsumeReservationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReservationAffinityConsumeReservationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReservationAffinityConsumeReservationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReservationAffinityConsumeReservationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReservationAffinityConsumeReservationTypeOutput struct{ *pulumi.OutputState }

func (ReservationAffinityConsumeReservationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservationAffinityConsumeReservationType)(nil)).Elem()
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToReservationAffinityConsumeReservationTypeOutput() ReservationAffinityConsumeReservationTypeOutput {
	return o
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToReservationAffinityConsumeReservationTypeOutputWithContext(ctx context.Context) ReservationAffinityConsumeReservationTypeOutput {
	return o
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToReservationAffinityConsumeReservationTypePtrOutput() ReservationAffinityConsumeReservationTypePtrOutput {
	return o.ToReservationAffinityConsumeReservationTypePtrOutputWithContext(context.Background())
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToReservationAffinityConsumeReservationTypePtrOutputWithContext(ctx context.Context) ReservationAffinityConsumeReservationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReservationAffinityConsumeReservationType) *ReservationAffinityConsumeReservationType {
		return &v
	}).(ReservationAffinityConsumeReservationTypePtrOutput)
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReservationAffinityConsumeReservationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReservationAffinityConsumeReservationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReservationAffinityConsumeReservationTypePtrOutput struct{ *pulumi.OutputState }

func (ReservationAffinityConsumeReservationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReservationAffinityConsumeReservationType)(nil)).Elem()
}

func (o ReservationAffinityConsumeReservationTypePtrOutput) ToReservationAffinityConsumeReservationTypePtrOutput() ReservationAffinityConsumeReservationTypePtrOutput {
	return o
}

func (o ReservationAffinityConsumeReservationTypePtrOutput) ToReservationAffinityConsumeReservationTypePtrOutputWithContext(ctx context.Context) ReservationAffinityConsumeReservationTypePtrOutput {
	return o
}

func (o ReservationAffinityConsumeReservationTypePtrOutput) Elem() ReservationAffinityConsumeReservationTypeOutput {
	return o.ApplyT(func(v *ReservationAffinityConsumeReservationType) ReservationAffinityConsumeReservationType {
		if v != nil {
			return *v
		}
		var ret ReservationAffinityConsumeReservationType
		return ret
	}).(ReservationAffinityConsumeReservationTypeOutput)
}

func (o ReservationAffinityConsumeReservationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReservationAffinityConsumeReservationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReservationAffinityConsumeReservationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReservationAffinityConsumeReservationTypeInput is an input type that accepts ReservationAffinityConsumeReservationTypeArgs and ReservationAffinityConsumeReservationTypeOutput values.
// You can construct a concrete instance of `ReservationAffinityConsumeReservationTypeInput` via:
//
//	ReservationAffinityConsumeReservationTypeArgs{...}
type ReservationAffinityConsumeReservationTypeInput interface {
	pulumi.Input

	ToReservationAffinityConsumeReservationTypeOutput() ReservationAffinityConsumeReservationTypeOutput
	ToReservationAffinityConsumeReservationTypeOutputWithContext(context.Context) ReservationAffinityConsumeReservationTypeOutput
}

var reservationAffinityConsumeReservationTypePtrType = reflect.TypeOf((**ReservationAffinityConsumeReservationType)(nil)).Elem()

type ReservationAffinityConsumeReservationTypePtrInput interface {
	pulumi.Input

	ToReservationAffinityConsumeReservationTypePtrOutput() ReservationAffinityConsumeReservationTypePtrOutput
	ToReservationAffinityConsumeReservationTypePtrOutputWithContext(context.Context) ReservationAffinityConsumeReservationTypePtrOutput
}

type reservationAffinityConsumeReservationTypePtr string

func ReservationAffinityConsumeReservationTypePtr(v string) ReservationAffinityConsumeReservationTypePtrInput {
	return (*reservationAffinityConsumeReservationTypePtr)(&v)
}

func (*reservationAffinityConsumeReservationTypePtr) ElementType() reflect.Type {
	return reservationAffinityConsumeReservationTypePtrType
}

func (in *reservationAffinityConsumeReservationTypePtr) ToReservationAffinityConsumeReservationTypePtrOutput() ReservationAffinityConsumeReservationTypePtrOutput {
	return pulumi.ToOutput(in).(ReservationAffinityConsumeReservationTypePtrOutput)
}

func (in *reservationAffinityConsumeReservationTypePtr) ToReservationAffinityConsumeReservationTypePtrOutputWithContext(ctx context.Context) ReservationAffinityConsumeReservationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReservationAffinityConsumeReservationTypePtrOutput)
}

// Type of the sandbox to use for the node.
type SandboxConfigType string

const (
	// Default value. This should not be used.
	SandboxConfigTypeUnspecified = SandboxConfigType("UNSPECIFIED")
	// Run sandbox using gvisor.
	SandboxConfigTypeGvisor = SandboxConfigType("GVISOR")
)

func (SandboxConfigType) ElementType() reflect.Type {
	return reflect.TypeOf((*SandboxConfigType)(nil)).Elem()
}

func (e SandboxConfigType) ToSandboxConfigTypeOutput() SandboxConfigTypeOutput {
	return pulumi.ToOutput(e).(SandboxConfigTypeOutput)
}

func (e SandboxConfigType) ToSandboxConfigTypeOutputWithContext(ctx context.Context) SandboxConfigTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SandboxConfigTypeOutput)
}

func (e SandboxConfigType) ToSandboxConfigTypePtrOutput() SandboxConfigTypePtrOutput {
	return e.ToSandboxConfigTypePtrOutputWithContext(context.Background())
}

func (e SandboxConfigType) ToSandboxConfigTypePtrOutputWithContext(ctx context.Context) SandboxConfigTypePtrOutput {
	return SandboxConfigType(e).ToSandboxConfigTypeOutputWithContext(ctx).ToSandboxConfigTypePtrOutputWithContext(ctx)
}

func (e SandboxConfigType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SandboxConfigType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SandboxConfigType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SandboxConfigType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SandboxConfigTypeOutput struct{ *pulumi.OutputState }

func (SandboxConfigTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SandboxConfigType)(nil)).Elem()
}

func (o SandboxConfigTypeOutput) ToSandboxConfigTypeOutput() SandboxConfigTypeOutput {
	return o
}

func (o SandboxConfigTypeOutput) ToSandboxConfigTypeOutputWithContext(ctx context.Context) SandboxConfigTypeOutput {
	return o
}

func (o SandboxConfigTypeOutput) ToSandboxConfigTypePtrOutput() SandboxConfigTypePtrOutput {
	return o.ToSandboxConfigTypePtrOutputWithContext(context.Background())
}

func (o SandboxConfigTypeOutput) ToSandboxConfigTypePtrOutputWithContext(ctx context.Context) SandboxConfigTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SandboxConfigType) *SandboxConfigType {
		return &v
	}).(SandboxConfigTypePtrOutput)
}

func (o SandboxConfigTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SandboxConfigTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SandboxConfigType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SandboxConfigTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SandboxConfigTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SandboxConfigType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SandboxConfigTypePtrOutput struct{ *pulumi.OutputState }

func (SandboxConfigTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SandboxConfigType)(nil)).Elem()
}

func (o SandboxConfigTypePtrOutput) ToSandboxConfigTypePtrOutput() SandboxConfigTypePtrOutput {
	return o
}

func (o SandboxConfigTypePtrOutput) ToSandboxConfigTypePtrOutputWithContext(ctx context.Context) SandboxConfigTypePtrOutput {
	return o
}

func (o SandboxConfigTypePtrOutput) Elem() SandboxConfigTypeOutput {
	return o.ApplyT(func(v *SandboxConfigType) SandboxConfigType {
		if v != nil {
			return *v
		}
		var ret SandboxConfigType
		return ret
	}).(SandboxConfigTypeOutput)
}

func (o SandboxConfigTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SandboxConfigTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SandboxConfigType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SandboxConfigTypeInput is an input type that accepts SandboxConfigTypeArgs and SandboxConfigTypeOutput values.
// You can construct a concrete instance of `SandboxConfigTypeInput` via:
//
//	SandboxConfigTypeArgs{...}
type SandboxConfigTypeInput interface {
	pulumi.Input

	ToSandboxConfigTypeOutput() SandboxConfigTypeOutput
	ToSandboxConfigTypeOutputWithContext(context.Context) SandboxConfigTypeOutput
}

var sandboxConfigTypePtrType = reflect.TypeOf((**SandboxConfigType)(nil)).Elem()

type SandboxConfigTypePtrInput interface {
	pulumi.Input

	ToSandboxConfigTypePtrOutput() SandboxConfigTypePtrOutput
	ToSandboxConfigTypePtrOutputWithContext(context.Context) SandboxConfigTypePtrOutput
}

type sandboxConfigTypePtr string

func SandboxConfigTypePtr(v string) SandboxConfigTypePtrInput {
	return (*sandboxConfigTypePtr)(&v)
}

func (*sandboxConfigTypePtr) ElementType() reflect.Type {
	return sandboxConfigTypePtrType
}

func (in *sandboxConfigTypePtr) ToSandboxConfigTypePtrOutput() SandboxConfigTypePtrOutput {
	return pulumi.ToOutput(in).(SandboxConfigTypePtrOutput)
}

func (in *sandboxConfigTypePtr) ToSandboxConfigTypePtrOutputWithContext(ctx context.Context) SandboxConfigTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SandboxConfigTypePtrOutput)
}

// Canonical code of the condition.
type StatusConditionCanonicalCode string

const (
	// Not an error; returned on success HTTP Mapping: 200 OK
	StatusConditionCanonicalCodeOk = StatusConditionCanonicalCode("OK")
	// The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request
	StatusConditionCanonicalCodeCancelled = StatusConditionCanonicalCode("CANCELLED")
	// Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error
	StatusConditionCanonicalCodeUnknown = StatusConditionCanonicalCode("UNKNOWN")
	// The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request
	StatusConditionCanonicalCodeInvalidArgument = StatusConditionCanonicalCode("INVALID_ARGUMENT")
	// The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout
	StatusConditionCanonicalCodeDeadlineExceeded = StatusConditionCanonicalCode("DEADLINE_EXCEEDED")
	// Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found
	StatusConditionCanonicalCodeNotFound = StatusConditionCanonicalCode("NOT_FOUND")
	// The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict
	StatusConditionCanonicalCodeAlreadyExists = StatusConditionCanonicalCode("ALREADY_EXISTS")
	// The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden
	StatusConditionCanonicalCodePermissionDenied = StatusConditionCanonicalCode("PERMISSION_DENIED")
	// The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized
	StatusConditionCanonicalCodeUnauthenticated = StatusConditionCanonicalCode("UNAUTHENTICATED")
	// Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests
	StatusConditionCanonicalCodeResourceExhausted = StatusConditionCanonicalCode("RESOURCE_EXHAUSTED")
	// The operation was rejected because the system is not in a state required for the operation's execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level. For example, when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence. (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. For example, if an "rmdir" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request
	StatusConditionCanonicalCodeFailedPrecondition = StatusConditionCanonicalCode("FAILED_PRECONDITION")
	// The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict
	StatusConditionCanonicalCodeAborted = StatusConditionCanonicalCode("ABORTED")
	// The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request
	StatusConditionCanonicalCodeOutOfRange = StatusConditionCanonicalCode("OUT_OF_RANGE")
	// The operation is not implemented or is not supported/enabled in this service. HTTP Mapping: 501 Not Implemented
	StatusConditionCanonicalCodeUnimplemented = StatusConditionCanonicalCode("UNIMPLEMENTED")
	// Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error
	StatusConditionCanonicalCodeInternal = StatusConditionCanonicalCode("INTERNAL")
	// The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable
	StatusConditionCanonicalCodeUnavailable = StatusConditionCanonicalCode("UNAVAILABLE")
	// Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error
	StatusConditionCanonicalCodeDataLoss = StatusConditionCanonicalCode("DATA_LOSS")
)

func (StatusConditionCanonicalCode) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusConditionCanonicalCode)(nil)).Elem()
}

func (e StatusConditionCanonicalCode) ToStatusConditionCanonicalCodeOutput() StatusConditionCanonicalCodeOutput {
	return pulumi.ToOutput(e).(StatusConditionCanonicalCodeOutput)
}

func (e StatusConditionCanonicalCode) ToStatusConditionCanonicalCodeOutputWithContext(ctx context.Context) StatusConditionCanonicalCodeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StatusConditionCanonicalCodeOutput)
}

func (e StatusConditionCanonicalCode) ToStatusConditionCanonicalCodePtrOutput() StatusConditionCanonicalCodePtrOutput {
	return e.ToStatusConditionCanonicalCodePtrOutputWithContext(context.Background())
}

func (e StatusConditionCanonicalCode) ToStatusConditionCanonicalCodePtrOutputWithContext(ctx context.Context) StatusConditionCanonicalCodePtrOutput {
	return StatusConditionCanonicalCode(e).ToStatusConditionCanonicalCodeOutputWithContext(ctx).ToStatusConditionCanonicalCodePtrOutputWithContext(ctx)
}

func (e StatusConditionCanonicalCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StatusConditionCanonicalCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StatusConditionCanonicalCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StatusConditionCanonicalCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StatusConditionCanonicalCodeOutput struct{ *pulumi.OutputState }

func (StatusConditionCanonicalCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusConditionCanonicalCode)(nil)).Elem()
}

func (o StatusConditionCanonicalCodeOutput) ToStatusConditionCanonicalCodeOutput() StatusConditionCanonicalCodeOutput {
	return o
}

func (o StatusConditionCanonicalCodeOutput) ToStatusConditionCanonicalCodeOutputWithContext(ctx context.Context) StatusConditionCanonicalCodeOutput {
	return o
}

func (o StatusConditionCanonicalCodeOutput) ToStatusConditionCanonicalCodePtrOutput() StatusConditionCanonicalCodePtrOutput {
	return o.ToStatusConditionCanonicalCodePtrOutputWithContext(context.Background())
}

func (o StatusConditionCanonicalCodeOutput) ToStatusConditionCanonicalCodePtrOutputWithContext(ctx context.Context) StatusConditionCanonicalCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatusConditionCanonicalCode) *StatusConditionCanonicalCode {
		return &v
	}).(StatusConditionCanonicalCodePtrOutput)
}

func (o StatusConditionCanonicalCodeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StatusConditionCanonicalCodeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StatusConditionCanonicalCode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StatusConditionCanonicalCodeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusConditionCanonicalCodeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StatusConditionCanonicalCode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StatusConditionCanonicalCodePtrOutput struct{ *pulumi.OutputState }

func (StatusConditionCanonicalCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusConditionCanonicalCode)(nil)).Elem()
}

func (o StatusConditionCanonicalCodePtrOutput) ToStatusConditionCanonicalCodePtrOutput() StatusConditionCanonicalCodePtrOutput {
	return o
}

func (o StatusConditionCanonicalCodePtrOutput) ToStatusConditionCanonicalCodePtrOutputWithContext(ctx context.Context) StatusConditionCanonicalCodePtrOutput {
	return o
}

func (o StatusConditionCanonicalCodePtrOutput) Elem() StatusConditionCanonicalCodeOutput {
	return o.ApplyT(func(v *StatusConditionCanonicalCode) StatusConditionCanonicalCode {
		if v != nil {
			return *v
		}
		var ret StatusConditionCanonicalCode
		return ret
	}).(StatusConditionCanonicalCodeOutput)
}

func (o StatusConditionCanonicalCodePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusConditionCanonicalCodePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StatusConditionCanonicalCode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StatusConditionCanonicalCodeInput is an input type that accepts StatusConditionCanonicalCodeArgs and StatusConditionCanonicalCodeOutput values.
// You can construct a concrete instance of `StatusConditionCanonicalCodeInput` via:
//
//	StatusConditionCanonicalCodeArgs{...}
type StatusConditionCanonicalCodeInput interface {
	pulumi.Input

	ToStatusConditionCanonicalCodeOutput() StatusConditionCanonicalCodeOutput
	ToStatusConditionCanonicalCodeOutputWithContext(context.Context) StatusConditionCanonicalCodeOutput
}

var statusConditionCanonicalCodePtrType = reflect.TypeOf((**StatusConditionCanonicalCode)(nil)).Elem()

type StatusConditionCanonicalCodePtrInput interface {
	pulumi.Input

	ToStatusConditionCanonicalCodePtrOutput() StatusConditionCanonicalCodePtrOutput
	ToStatusConditionCanonicalCodePtrOutputWithContext(context.Context) StatusConditionCanonicalCodePtrOutput
}

type statusConditionCanonicalCodePtr string

func StatusConditionCanonicalCodePtr(v string) StatusConditionCanonicalCodePtrInput {
	return (*statusConditionCanonicalCodePtr)(&v)
}

func (*statusConditionCanonicalCodePtr) ElementType() reflect.Type {
	return statusConditionCanonicalCodePtrType
}

func (in *statusConditionCanonicalCodePtr) ToStatusConditionCanonicalCodePtrOutput() StatusConditionCanonicalCodePtrOutput {
	return pulumi.ToOutput(in).(StatusConditionCanonicalCodePtrOutput)
}

func (in *statusConditionCanonicalCodePtr) ToStatusConditionCanonicalCodePtrOutputWithContext(ctx context.Context) StatusConditionCanonicalCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StatusConditionCanonicalCodePtrOutput)
}

// Machine-friendly representation of the condition Deprecated. Use canonical_code instead.
type StatusConditionCode string

const (
	// UNKNOWN indicates a generic condition.
	StatusConditionCodeUnknown = StatusConditionCode("UNKNOWN")
	// GCE_STOCKOUT indicates that Google Compute Engine resources are temporarily unavailable.
	StatusConditionCodeGceStockout = StatusConditionCode("GCE_STOCKOUT")
	// GKE_SERVICE_ACCOUNT_DELETED indicates that the user deleted their robot service account.
	StatusConditionCodeGkeServiceAccountDeleted = StatusConditionCode("GKE_SERVICE_ACCOUNT_DELETED")
	// Google Compute Engine quota was exceeded.
	StatusConditionCodeGceQuotaExceeded = StatusConditionCode("GCE_QUOTA_EXCEEDED")
	// Cluster state was manually changed by an SRE due to a system logic error.
	StatusConditionCodeSetByOperator = StatusConditionCode("SET_BY_OPERATOR")
	// Unable to perform an encrypt operation against the CloudKMS key used for etcd level encryption.
	StatusConditionCodeCloudKmsKeyError = StatusConditionCode("CLOUD_KMS_KEY_ERROR")
	// Cluster CA is expiring soon. More codes TBA
	StatusConditionCodeCaExpiring = StatusConditionCode("CA_EXPIRING")
)

func (StatusConditionCode) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusConditionCode)(nil)).Elem()
}

func (e StatusConditionCode) ToStatusConditionCodeOutput() StatusConditionCodeOutput {
	return pulumi.ToOutput(e).(StatusConditionCodeOutput)
}

func (e StatusConditionCode) ToStatusConditionCodeOutputWithContext(ctx context.Context) StatusConditionCodeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StatusConditionCodeOutput)
}

func (e StatusConditionCode) ToStatusConditionCodePtrOutput() StatusConditionCodePtrOutput {
	return e.ToStatusConditionCodePtrOutputWithContext(context.Background())
}

func (e StatusConditionCode) ToStatusConditionCodePtrOutputWithContext(ctx context.Context) StatusConditionCodePtrOutput {
	return StatusConditionCode(e).ToStatusConditionCodeOutputWithContext(ctx).ToStatusConditionCodePtrOutputWithContext(ctx)
}

func (e StatusConditionCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StatusConditionCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StatusConditionCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StatusConditionCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StatusConditionCodeOutput struct{ *pulumi.OutputState }

func (StatusConditionCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusConditionCode)(nil)).Elem()
}

func (o StatusConditionCodeOutput) ToStatusConditionCodeOutput() StatusConditionCodeOutput {
	return o
}

func (o StatusConditionCodeOutput) ToStatusConditionCodeOutputWithContext(ctx context.Context) StatusConditionCodeOutput {
	return o
}

func (o StatusConditionCodeOutput) ToStatusConditionCodePtrOutput() StatusConditionCodePtrOutput {
	return o.ToStatusConditionCodePtrOutputWithContext(context.Background())
}

func (o StatusConditionCodeOutput) ToStatusConditionCodePtrOutputWithContext(ctx context.Context) StatusConditionCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatusConditionCode) *StatusConditionCode {
		return &v
	}).(StatusConditionCodePtrOutput)
}

func (o StatusConditionCodeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StatusConditionCodeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StatusConditionCode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StatusConditionCodeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusConditionCodeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StatusConditionCode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StatusConditionCodePtrOutput struct{ *pulumi.OutputState }

func (StatusConditionCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusConditionCode)(nil)).Elem()
}

func (o StatusConditionCodePtrOutput) ToStatusConditionCodePtrOutput() StatusConditionCodePtrOutput {
	return o
}

func (o StatusConditionCodePtrOutput) ToStatusConditionCodePtrOutputWithContext(ctx context.Context) StatusConditionCodePtrOutput {
	return o
}

func (o StatusConditionCodePtrOutput) Elem() StatusConditionCodeOutput {
	return o.ApplyT(func(v *StatusConditionCode) StatusConditionCode {
		if v != nil {
			return *v
		}
		var ret StatusConditionCode
		return ret
	}).(StatusConditionCodeOutput)
}

func (o StatusConditionCodePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusConditionCodePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StatusConditionCode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StatusConditionCodeInput is an input type that accepts StatusConditionCodeArgs and StatusConditionCodeOutput values.
// You can construct a concrete instance of `StatusConditionCodeInput` via:
//
//	StatusConditionCodeArgs{...}
type StatusConditionCodeInput interface {
	pulumi.Input

	ToStatusConditionCodeOutput() StatusConditionCodeOutput
	ToStatusConditionCodeOutputWithContext(context.Context) StatusConditionCodeOutput
}

var statusConditionCodePtrType = reflect.TypeOf((**StatusConditionCode)(nil)).Elem()

type StatusConditionCodePtrInput interface {
	pulumi.Input

	ToStatusConditionCodePtrOutput() StatusConditionCodePtrOutput
	ToStatusConditionCodePtrOutputWithContext(context.Context) StatusConditionCodePtrOutput
}

type statusConditionCodePtr string

func StatusConditionCodePtr(v string) StatusConditionCodePtrInput {
	return (*statusConditionCodePtr)(&v)
}

func (*statusConditionCodePtr) ElementType() reflect.Type {
	return statusConditionCodePtrType
}

func (in *statusConditionCodePtr) ToStatusConditionCodePtrOutput() StatusConditionCodePtrOutput {
	return pulumi.ToOutput(in).(StatusConditionCodePtrOutput)
}

func (in *statusConditionCodePtr) ToStatusConditionCodePtrOutputWithContext(ctx context.Context) StatusConditionCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StatusConditionCodePtrOutput)
}

// Update strategy of the node pool.
type UpgradeSettingsStrategy string

const (
	// Default value.
	UpgradeSettingsStrategyNodePoolUpdateStrategyUnspecified = UpgradeSettingsStrategy("NODE_POOL_UPDATE_STRATEGY_UNSPECIFIED")
	// blue-green upgrade.
	UpgradeSettingsStrategyBlueGreen = UpgradeSettingsStrategy("BLUE_GREEN")
	// SURGE is the traditional way of upgrading a node pool. max_surge and max_unavailable determines the level of upgrade parallelism.
	UpgradeSettingsStrategySurge = UpgradeSettingsStrategy("SURGE")
)

func (UpgradeSettingsStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradeSettingsStrategy)(nil)).Elem()
}

func (e UpgradeSettingsStrategy) ToUpgradeSettingsStrategyOutput() UpgradeSettingsStrategyOutput {
	return pulumi.ToOutput(e).(UpgradeSettingsStrategyOutput)
}

func (e UpgradeSettingsStrategy) ToUpgradeSettingsStrategyOutputWithContext(ctx context.Context) UpgradeSettingsStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UpgradeSettingsStrategyOutput)
}

func (e UpgradeSettingsStrategy) ToUpgradeSettingsStrategyPtrOutput() UpgradeSettingsStrategyPtrOutput {
	return e.ToUpgradeSettingsStrategyPtrOutputWithContext(context.Background())
}

func (e UpgradeSettingsStrategy) ToUpgradeSettingsStrategyPtrOutputWithContext(ctx context.Context) UpgradeSettingsStrategyPtrOutput {
	return UpgradeSettingsStrategy(e).ToUpgradeSettingsStrategyOutputWithContext(ctx).ToUpgradeSettingsStrategyPtrOutputWithContext(ctx)
}

func (e UpgradeSettingsStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UpgradeSettingsStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UpgradeSettingsStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UpgradeSettingsStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UpgradeSettingsStrategyOutput struct{ *pulumi.OutputState }

func (UpgradeSettingsStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradeSettingsStrategy)(nil)).Elem()
}

func (o UpgradeSettingsStrategyOutput) ToUpgradeSettingsStrategyOutput() UpgradeSettingsStrategyOutput {
	return o
}

func (o UpgradeSettingsStrategyOutput) ToUpgradeSettingsStrategyOutputWithContext(ctx context.Context) UpgradeSettingsStrategyOutput {
	return o
}

func (o UpgradeSettingsStrategyOutput) ToUpgradeSettingsStrategyPtrOutput() UpgradeSettingsStrategyPtrOutput {
	return o.ToUpgradeSettingsStrategyPtrOutputWithContext(context.Background())
}

func (o UpgradeSettingsStrategyOutput) ToUpgradeSettingsStrategyPtrOutputWithContext(ctx context.Context) UpgradeSettingsStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpgradeSettingsStrategy) *UpgradeSettingsStrategy {
		return &v
	}).(UpgradeSettingsStrategyPtrOutput)
}

func (o UpgradeSettingsStrategyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UpgradeSettingsStrategyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UpgradeSettingsStrategy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UpgradeSettingsStrategyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UpgradeSettingsStrategyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UpgradeSettingsStrategy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UpgradeSettingsStrategyPtrOutput struct{ *pulumi.OutputState }

func (UpgradeSettingsStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradeSettingsStrategy)(nil)).Elem()
}

func (o UpgradeSettingsStrategyPtrOutput) ToUpgradeSettingsStrategyPtrOutput() UpgradeSettingsStrategyPtrOutput {
	return o
}

func (o UpgradeSettingsStrategyPtrOutput) ToUpgradeSettingsStrategyPtrOutputWithContext(ctx context.Context) UpgradeSettingsStrategyPtrOutput {
	return o
}

func (o UpgradeSettingsStrategyPtrOutput) Elem() UpgradeSettingsStrategyOutput {
	return o.ApplyT(func(v *UpgradeSettingsStrategy) UpgradeSettingsStrategy {
		if v != nil {
			return *v
		}
		var ret UpgradeSettingsStrategy
		return ret
	}).(UpgradeSettingsStrategyOutput)
}

func (o UpgradeSettingsStrategyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UpgradeSettingsStrategyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UpgradeSettingsStrategy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UpgradeSettingsStrategyInput is an input type that accepts UpgradeSettingsStrategyArgs and UpgradeSettingsStrategyOutput values.
// You can construct a concrete instance of `UpgradeSettingsStrategyInput` via:
//
//	UpgradeSettingsStrategyArgs{...}
type UpgradeSettingsStrategyInput interface {
	pulumi.Input

	ToUpgradeSettingsStrategyOutput() UpgradeSettingsStrategyOutput
	ToUpgradeSettingsStrategyOutputWithContext(context.Context) UpgradeSettingsStrategyOutput
}

var upgradeSettingsStrategyPtrType = reflect.TypeOf((**UpgradeSettingsStrategy)(nil)).Elem()

type UpgradeSettingsStrategyPtrInput interface {
	pulumi.Input

	ToUpgradeSettingsStrategyPtrOutput() UpgradeSettingsStrategyPtrOutput
	ToUpgradeSettingsStrategyPtrOutputWithContext(context.Context) UpgradeSettingsStrategyPtrOutput
}

type upgradeSettingsStrategyPtr string

func UpgradeSettingsStrategyPtr(v string) UpgradeSettingsStrategyPtrInput {
	return (*upgradeSettingsStrategyPtr)(&v)
}

func (*upgradeSettingsStrategyPtr) ElementType() reflect.Type {
	return upgradeSettingsStrategyPtrType
}

func (in *upgradeSettingsStrategyPtr) ToUpgradeSettingsStrategyPtrOutput() UpgradeSettingsStrategyPtrOutput {
	return pulumi.ToOutput(in).(UpgradeSettingsStrategyPtrOutput)
}

func (in *upgradeSettingsStrategyPtr) ToUpgradeSettingsStrategyPtrOutputWithContext(ctx context.Context) UpgradeSettingsStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UpgradeSettingsStrategyPtrOutput)
}

// Sets which mode of auditing should be used for the cluster's workloads.
type WorkloadConfigAuditMode string

const (
	// Default value meaning that no mode has been specified.
	WorkloadConfigAuditModeModeUnspecified = WorkloadConfigAuditMode("MODE_UNSPECIFIED")
	// This disables Workload Configuration auditing on the cluster, meaning that nothing is surfaced.
	WorkloadConfigAuditModeDisabled = WorkloadConfigAuditMode("DISABLED")
	// Applies the default set of policy auditing to a cluster's workloads.
	WorkloadConfigAuditModeBasic = WorkloadConfigAuditMode("BASIC")
	// Surfaces configurations that are not in line with the Pod Security Standard Baseline policy.
	WorkloadConfigAuditModeBaseline = WorkloadConfigAuditMode("BASELINE")
	// Surfaces configurations that are not in line with the Pod Security Standard Restricted policy.
	WorkloadConfigAuditModeRestricted = WorkloadConfigAuditMode("RESTRICTED")
)

func (WorkloadConfigAuditMode) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadConfigAuditMode)(nil)).Elem()
}

func (e WorkloadConfigAuditMode) ToWorkloadConfigAuditModeOutput() WorkloadConfigAuditModeOutput {
	return pulumi.ToOutput(e).(WorkloadConfigAuditModeOutput)
}

func (e WorkloadConfigAuditMode) ToWorkloadConfigAuditModeOutputWithContext(ctx context.Context) WorkloadConfigAuditModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WorkloadConfigAuditModeOutput)
}

func (e WorkloadConfigAuditMode) ToWorkloadConfigAuditModePtrOutput() WorkloadConfigAuditModePtrOutput {
	return e.ToWorkloadConfigAuditModePtrOutputWithContext(context.Background())
}

func (e WorkloadConfigAuditMode) ToWorkloadConfigAuditModePtrOutputWithContext(ctx context.Context) WorkloadConfigAuditModePtrOutput {
	return WorkloadConfigAuditMode(e).ToWorkloadConfigAuditModeOutputWithContext(ctx).ToWorkloadConfigAuditModePtrOutputWithContext(ctx)
}

func (e WorkloadConfigAuditMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkloadConfigAuditMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkloadConfigAuditMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WorkloadConfigAuditMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WorkloadConfigAuditModeOutput struct{ *pulumi.OutputState }

func (WorkloadConfigAuditModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadConfigAuditMode)(nil)).Elem()
}

func (o WorkloadConfigAuditModeOutput) ToWorkloadConfigAuditModeOutput() WorkloadConfigAuditModeOutput {
	return o
}

func (o WorkloadConfigAuditModeOutput) ToWorkloadConfigAuditModeOutputWithContext(ctx context.Context) WorkloadConfigAuditModeOutput {
	return o
}

func (o WorkloadConfigAuditModeOutput) ToWorkloadConfigAuditModePtrOutput() WorkloadConfigAuditModePtrOutput {
	return o.ToWorkloadConfigAuditModePtrOutputWithContext(context.Background())
}

func (o WorkloadConfigAuditModeOutput) ToWorkloadConfigAuditModePtrOutputWithContext(ctx context.Context) WorkloadConfigAuditModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadConfigAuditMode) *WorkloadConfigAuditMode {
		return &v
	}).(WorkloadConfigAuditModePtrOutput)
}

func (o WorkloadConfigAuditModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkloadConfigAuditModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkloadConfigAuditMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkloadConfigAuditModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkloadConfigAuditModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkloadConfigAuditMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkloadConfigAuditModePtrOutput struct{ *pulumi.OutputState }

func (WorkloadConfigAuditModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadConfigAuditMode)(nil)).Elem()
}

func (o WorkloadConfigAuditModePtrOutput) ToWorkloadConfigAuditModePtrOutput() WorkloadConfigAuditModePtrOutput {
	return o
}

func (o WorkloadConfigAuditModePtrOutput) ToWorkloadConfigAuditModePtrOutputWithContext(ctx context.Context) WorkloadConfigAuditModePtrOutput {
	return o
}

func (o WorkloadConfigAuditModePtrOutput) Elem() WorkloadConfigAuditModeOutput {
	return o.ApplyT(func(v *WorkloadConfigAuditMode) WorkloadConfigAuditMode {
		if v != nil {
			return *v
		}
		var ret WorkloadConfigAuditMode
		return ret
	}).(WorkloadConfigAuditModeOutput)
}

func (o WorkloadConfigAuditModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkloadConfigAuditModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkloadConfigAuditMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WorkloadConfigAuditModeInput is an input type that accepts WorkloadConfigAuditModeArgs and WorkloadConfigAuditModeOutput values.
// You can construct a concrete instance of `WorkloadConfigAuditModeInput` via:
//
//	WorkloadConfigAuditModeArgs{...}
type WorkloadConfigAuditModeInput interface {
	pulumi.Input

	ToWorkloadConfigAuditModeOutput() WorkloadConfigAuditModeOutput
	ToWorkloadConfigAuditModeOutputWithContext(context.Context) WorkloadConfigAuditModeOutput
}

var workloadConfigAuditModePtrType = reflect.TypeOf((**WorkloadConfigAuditMode)(nil)).Elem()

type WorkloadConfigAuditModePtrInput interface {
	pulumi.Input

	ToWorkloadConfigAuditModePtrOutput() WorkloadConfigAuditModePtrOutput
	ToWorkloadConfigAuditModePtrOutputWithContext(context.Context) WorkloadConfigAuditModePtrOutput
}

type workloadConfigAuditModePtr string

func WorkloadConfigAuditModePtr(v string) WorkloadConfigAuditModePtrInput {
	return (*workloadConfigAuditModePtr)(&v)
}

func (*workloadConfigAuditModePtr) ElementType() reflect.Type {
	return workloadConfigAuditModePtrType
}

func (in *workloadConfigAuditModePtr) ToWorkloadConfigAuditModePtrOutput() WorkloadConfigAuditModePtrOutput {
	return pulumi.ToOutput(in).(WorkloadConfigAuditModePtrOutput)
}

func (in *workloadConfigAuditModePtr) ToWorkloadConfigAuditModePtrOutputWithContext(ctx context.Context) WorkloadConfigAuditModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WorkloadConfigAuditModePtrOutput)
}

// Mode is the configuration for how to expose metadata to workloads running on the node pool.
type WorkloadMetadataConfigMode string

const (
	// Not set.
	WorkloadMetadataConfigModeModeUnspecified = WorkloadMetadataConfigMode("MODE_UNSPECIFIED")
	// Expose all Compute Engine metadata to pods.
	WorkloadMetadataConfigModeGceMetadata = WorkloadMetadataConfigMode("GCE_METADATA")
	// Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if Workload Identity is enabled at the cluster level.
	WorkloadMetadataConfigModeGkeMetadata = WorkloadMetadataConfigMode("GKE_METADATA")
)

func (WorkloadMetadataConfigMode) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadMetadataConfigMode)(nil)).Elem()
}

func (e WorkloadMetadataConfigMode) ToWorkloadMetadataConfigModeOutput() WorkloadMetadataConfigModeOutput {
	return pulumi.ToOutput(e).(WorkloadMetadataConfigModeOutput)
}

func (e WorkloadMetadataConfigMode) ToWorkloadMetadataConfigModeOutputWithContext(ctx context.Context) WorkloadMetadataConfigModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WorkloadMetadataConfigModeOutput)
}

func (e WorkloadMetadataConfigMode) ToWorkloadMetadataConfigModePtrOutput() WorkloadMetadataConfigModePtrOutput {
	return e.ToWorkloadMetadataConfigModePtrOutputWithContext(context.Background())
}

func (e WorkloadMetadataConfigMode) ToWorkloadMetadataConfigModePtrOutputWithContext(ctx context.Context) WorkloadMetadataConfigModePtrOutput {
	return WorkloadMetadataConfigMode(e).ToWorkloadMetadataConfigModeOutputWithContext(ctx).ToWorkloadMetadataConfigModePtrOutputWithContext(ctx)
}

func (e WorkloadMetadataConfigMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkloadMetadataConfigMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkloadMetadataConfigMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WorkloadMetadataConfigMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WorkloadMetadataConfigModeOutput struct{ *pulumi.OutputState }

func (WorkloadMetadataConfigModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadMetadataConfigMode)(nil)).Elem()
}

func (o WorkloadMetadataConfigModeOutput) ToWorkloadMetadataConfigModeOutput() WorkloadMetadataConfigModeOutput {
	return o
}

func (o WorkloadMetadataConfigModeOutput) ToWorkloadMetadataConfigModeOutputWithContext(ctx context.Context) WorkloadMetadataConfigModeOutput {
	return o
}

func (o WorkloadMetadataConfigModeOutput) ToWorkloadMetadataConfigModePtrOutput() WorkloadMetadataConfigModePtrOutput {
	return o.ToWorkloadMetadataConfigModePtrOutputWithContext(context.Background())
}

func (o WorkloadMetadataConfigModeOutput) ToWorkloadMetadataConfigModePtrOutputWithContext(ctx context.Context) WorkloadMetadataConfigModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadMetadataConfigMode) *WorkloadMetadataConfigMode {
		return &v
	}).(WorkloadMetadataConfigModePtrOutput)
}

func (o WorkloadMetadataConfigModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkloadMetadataConfigModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkloadMetadataConfigMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkloadMetadataConfigModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkloadMetadataConfigModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkloadMetadataConfigMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkloadMetadataConfigModePtrOutput struct{ *pulumi.OutputState }

func (WorkloadMetadataConfigModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadMetadataConfigMode)(nil)).Elem()
}

func (o WorkloadMetadataConfigModePtrOutput) ToWorkloadMetadataConfigModePtrOutput() WorkloadMetadataConfigModePtrOutput {
	return o
}

func (o WorkloadMetadataConfigModePtrOutput) ToWorkloadMetadataConfigModePtrOutputWithContext(ctx context.Context) WorkloadMetadataConfigModePtrOutput {
	return o
}

func (o WorkloadMetadataConfigModePtrOutput) Elem() WorkloadMetadataConfigModeOutput {
	return o.ApplyT(func(v *WorkloadMetadataConfigMode) WorkloadMetadataConfigMode {
		if v != nil {
			return *v
		}
		var ret WorkloadMetadataConfigMode
		return ret
	}).(WorkloadMetadataConfigModeOutput)
}

func (o WorkloadMetadataConfigModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkloadMetadataConfigModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkloadMetadataConfigMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WorkloadMetadataConfigModeInput is an input type that accepts WorkloadMetadataConfigModeArgs and WorkloadMetadataConfigModeOutput values.
// You can construct a concrete instance of `WorkloadMetadataConfigModeInput` via:
//
//	WorkloadMetadataConfigModeArgs{...}
type WorkloadMetadataConfigModeInput interface {
	pulumi.Input

	ToWorkloadMetadataConfigModeOutput() WorkloadMetadataConfigModeOutput
	ToWorkloadMetadataConfigModeOutputWithContext(context.Context) WorkloadMetadataConfigModeOutput
}

var workloadMetadataConfigModePtrType = reflect.TypeOf((**WorkloadMetadataConfigMode)(nil)).Elem()

type WorkloadMetadataConfigModePtrInput interface {
	pulumi.Input

	ToWorkloadMetadataConfigModePtrOutput() WorkloadMetadataConfigModePtrOutput
	ToWorkloadMetadataConfigModePtrOutputWithContext(context.Context) WorkloadMetadataConfigModePtrOutput
}

type workloadMetadataConfigModePtr string

func WorkloadMetadataConfigModePtr(v string) WorkloadMetadataConfigModePtrInput {
	return (*workloadMetadataConfigModePtr)(&v)
}

func (*workloadMetadataConfigModePtr) ElementType() reflect.Type {
	return workloadMetadataConfigModePtrType
}

func (in *workloadMetadataConfigModePtr) ToWorkloadMetadataConfigModePtrOutput() WorkloadMetadataConfigModePtrOutput {
	return pulumi.ToOutput(in).(WorkloadMetadataConfigModePtrOutput)
}

func (in *workloadMetadataConfigModePtr) ToWorkloadMetadataConfigModePtrOutputWithContext(ctx context.Context) WorkloadMetadataConfigModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WorkloadMetadataConfigModePtrOutput)
}

// NodeMetadata is the configuration for how to expose metadata to the workloads running on the node.
type WorkloadMetadataConfigNodeMetadata string

const (
	// Not set.
	WorkloadMetadataConfigNodeMetadataUnspecified = WorkloadMetadataConfigNodeMetadata("UNSPECIFIED")
	// Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. Metadata concealment is a temporary security solution available while the bootstrapping process for cluster nodes is being redesigned with significant security improvements. This feature is scheduled to be deprecated in the future and later removed.
	WorkloadMetadataConfigNodeMetadataSecure = WorkloadMetadataConfigNodeMetadata("SECURE")
	// Expose all VM metadata to pods.
	WorkloadMetadataConfigNodeMetadataExpose = WorkloadMetadataConfigNodeMetadata("EXPOSE")
	// Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if Workload Identity is enabled at the cluster level.
	WorkloadMetadataConfigNodeMetadataGkeMetadataServer = WorkloadMetadataConfigNodeMetadata("GKE_METADATA_SERVER")
)

func (WorkloadMetadataConfigNodeMetadata) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadMetadataConfigNodeMetadata)(nil)).Elem()
}

func (e WorkloadMetadataConfigNodeMetadata) ToWorkloadMetadataConfigNodeMetadataOutput() WorkloadMetadataConfigNodeMetadataOutput {
	return pulumi.ToOutput(e).(WorkloadMetadataConfigNodeMetadataOutput)
}

func (e WorkloadMetadataConfigNodeMetadata) ToWorkloadMetadataConfigNodeMetadataOutputWithContext(ctx context.Context) WorkloadMetadataConfigNodeMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WorkloadMetadataConfigNodeMetadataOutput)
}

func (e WorkloadMetadataConfigNodeMetadata) ToWorkloadMetadataConfigNodeMetadataPtrOutput() WorkloadMetadataConfigNodeMetadataPtrOutput {
	return e.ToWorkloadMetadataConfigNodeMetadataPtrOutputWithContext(context.Background())
}

func (e WorkloadMetadataConfigNodeMetadata) ToWorkloadMetadataConfigNodeMetadataPtrOutputWithContext(ctx context.Context) WorkloadMetadataConfigNodeMetadataPtrOutput {
	return WorkloadMetadataConfigNodeMetadata(e).ToWorkloadMetadataConfigNodeMetadataOutputWithContext(ctx).ToWorkloadMetadataConfigNodeMetadataPtrOutputWithContext(ctx)
}

func (e WorkloadMetadataConfigNodeMetadata) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkloadMetadataConfigNodeMetadata) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkloadMetadataConfigNodeMetadata) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WorkloadMetadataConfigNodeMetadata) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WorkloadMetadataConfigNodeMetadataOutput struct{ *pulumi.OutputState }

func (WorkloadMetadataConfigNodeMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadMetadataConfigNodeMetadata)(nil)).Elem()
}

func (o WorkloadMetadataConfigNodeMetadataOutput) ToWorkloadMetadataConfigNodeMetadataOutput() WorkloadMetadataConfigNodeMetadataOutput {
	return o
}

func (o WorkloadMetadataConfigNodeMetadataOutput) ToWorkloadMetadataConfigNodeMetadataOutputWithContext(ctx context.Context) WorkloadMetadataConfigNodeMetadataOutput {
	return o
}

func (o WorkloadMetadataConfigNodeMetadataOutput) ToWorkloadMetadataConfigNodeMetadataPtrOutput() WorkloadMetadataConfigNodeMetadataPtrOutput {
	return o.ToWorkloadMetadataConfigNodeMetadataPtrOutputWithContext(context.Background())
}

func (o WorkloadMetadataConfigNodeMetadataOutput) ToWorkloadMetadataConfigNodeMetadataPtrOutputWithContext(ctx context.Context) WorkloadMetadataConfigNodeMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadMetadataConfigNodeMetadata) *WorkloadMetadataConfigNodeMetadata {
		return &v
	}).(WorkloadMetadataConfigNodeMetadataPtrOutput)
}

func (o WorkloadMetadataConfigNodeMetadataOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkloadMetadataConfigNodeMetadataOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkloadMetadataConfigNodeMetadata) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkloadMetadataConfigNodeMetadataOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkloadMetadataConfigNodeMetadataOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkloadMetadataConfigNodeMetadata) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkloadMetadataConfigNodeMetadataPtrOutput struct{ *pulumi.OutputState }

func (WorkloadMetadataConfigNodeMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadMetadataConfigNodeMetadata)(nil)).Elem()
}

func (o WorkloadMetadataConfigNodeMetadataPtrOutput) ToWorkloadMetadataConfigNodeMetadataPtrOutput() WorkloadMetadataConfigNodeMetadataPtrOutput {
	return o
}

func (o WorkloadMetadataConfigNodeMetadataPtrOutput) ToWorkloadMetadataConfigNodeMetadataPtrOutputWithContext(ctx context.Context) WorkloadMetadataConfigNodeMetadataPtrOutput {
	return o
}

func (o WorkloadMetadataConfigNodeMetadataPtrOutput) Elem() WorkloadMetadataConfigNodeMetadataOutput {
	return o.ApplyT(func(v *WorkloadMetadataConfigNodeMetadata) WorkloadMetadataConfigNodeMetadata {
		if v != nil {
			return *v
		}
		var ret WorkloadMetadataConfigNodeMetadata
		return ret
	}).(WorkloadMetadataConfigNodeMetadataOutput)
}

func (o WorkloadMetadataConfigNodeMetadataPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkloadMetadataConfigNodeMetadataPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkloadMetadataConfigNodeMetadata) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WorkloadMetadataConfigNodeMetadataInput is an input type that accepts WorkloadMetadataConfigNodeMetadataArgs and WorkloadMetadataConfigNodeMetadataOutput values.
// You can construct a concrete instance of `WorkloadMetadataConfigNodeMetadataInput` via:
//
//	WorkloadMetadataConfigNodeMetadataArgs{...}
type WorkloadMetadataConfigNodeMetadataInput interface {
	pulumi.Input

	ToWorkloadMetadataConfigNodeMetadataOutput() WorkloadMetadataConfigNodeMetadataOutput
	ToWorkloadMetadataConfigNodeMetadataOutputWithContext(context.Context) WorkloadMetadataConfigNodeMetadataOutput
}

var workloadMetadataConfigNodeMetadataPtrType = reflect.TypeOf((**WorkloadMetadataConfigNodeMetadata)(nil)).Elem()

type WorkloadMetadataConfigNodeMetadataPtrInput interface {
	pulumi.Input

	ToWorkloadMetadataConfigNodeMetadataPtrOutput() WorkloadMetadataConfigNodeMetadataPtrOutput
	ToWorkloadMetadataConfigNodeMetadataPtrOutputWithContext(context.Context) WorkloadMetadataConfigNodeMetadataPtrOutput
}

type workloadMetadataConfigNodeMetadataPtr string

func WorkloadMetadataConfigNodeMetadataPtr(v string) WorkloadMetadataConfigNodeMetadataPtrInput {
	return (*workloadMetadataConfigNodeMetadataPtr)(&v)
}

func (*workloadMetadataConfigNodeMetadataPtr) ElementType() reflect.Type {
	return workloadMetadataConfigNodeMetadataPtrType
}

func (in *workloadMetadataConfigNodeMetadataPtr) ToWorkloadMetadataConfigNodeMetadataPtrOutput() WorkloadMetadataConfigNodeMetadataPtrOutput {
	return pulumi.ToOutput(in).(WorkloadMetadataConfigNodeMetadataPtrOutput)
}

func (in *workloadMetadataConfigNodeMetadataPtr) ToWorkloadMetadataConfigNodeMetadataPtrOutputWithContext(ctx context.Context) WorkloadMetadataConfigNodeMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WorkloadMetadataConfigNodeMetadataPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BinaryAuthorizationEvaluationModeInput)(nil)).Elem(), BinaryAuthorizationEvaluationMode("EVALUATION_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BinaryAuthorizationEvaluationModePtrInput)(nil)).Elem(), BinaryAuthorizationEvaluationMode("EVALUATION_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudRunConfigLoadBalancerTypeInput)(nil)).Elem(), CloudRunConfigLoadBalancerType("LOAD_BALANCER_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CloudRunConfigLoadBalancerTypePtrInput)(nil)).Elem(), CloudRunConfigLoadBalancerType("LOAD_BALANCER_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutoscalingAutoscalingProfileInput)(nil)).Elem(), ClusterAutoscalingAutoscalingProfile("PROFILE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutoscalingAutoscalingProfilePtrInput)(nil)).Elem(), ClusterAutoscalingAutoscalingProfile("PROFILE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTelemetryTypeInput)(nil)).Elem(), ClusterTelemetryType("UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTelemetryTypePtrInput)(nil)).Elem(), ClusterTelemetryType("UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DNSConfigClusterDnsInput)(nil)).Elem(), DNSConfigClusterDns("PROVIDER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DNSConfigClusterDnsPtrInput)(nil)).Elem(), DNSConfigClusterDns("PROVIDER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DNSConfigClusterDnsScopeInput)(nil)).Elem(), DNSConfigClusterDnsScope("DNS_SCOPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DNSConfigClusterDnsScopePtrInput)(nil)).Elem(), DNSConfigClusterDnsScope("DNS_SCOPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseEncryptionStateInput)(nil)).Elem(), DatabaseEncryptionState("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseEncryptionStatePtrInput)(nil)).Elem(), DatabaseEncryptionState("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*FilterEventTypeItemInput)(nil)).Elem(), FilterEventTypeItem("EVENT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FilterEventTypeItemPtrInput)(nil)).Elem(), FilterEventTypeItem("EVENT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FilterEventTypeItemArrayInput)(nil)).Elem(), FilterEventTypeItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GPUSharingConfigGpuSharingStrategyInput)(nil)).Elem(), GPUSharingConfigGpuSharingStrategy("GPU_SHARING_STRATEGY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GPUSharingConfigGpuSharingStrategyPtrInput)(nil)).Elem(), GPUSharingConfigGpuSharingStrategy("GPU_SHARING_STRATEGY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*IPAllocationPolicyIpv6AccessTypeInput)(nil)).Elem(), IPAllocationPolicyIpv6AccessType("IPV6_ACCESS_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*IPAllocationPolicyIpv6AccessTypePtrInput)(nil)).Elem(), IPAllocationPolicyIpv6AccessType("IPV6_ACCESS_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*IPAllocationPolicyStackTypeInput)(nil)).Elem(), IPAllocationPolicyStackType("STACK_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*IPAllocationPolicyStackTypePtrInput)(nil)).Elem(), IPAllocationPolicyStackType("STACK_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*IstioConfigAuthInput)(nil)).Elem(), IstioConfigAuth("AUTH_NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IstioConfigAuthPtrInput)(nil)).Elem(), IstioConfigAuth("AUTH_NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*LinuxNodeConfigCgroupModeInput)(nil)).Elem(), LinuxNodeConfigCgroupMode("CGROUP_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LinuxNodeConfigCgroupModePtrInput)(nil)).Elem(), LinuxNodeConfigCgroupMode("CGROUP_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingComponentConfigEnableComponentsItemInput)(nil)).Elem(), LoggingComponentConfigEnableComponentsItem("COMPONENT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingComponentConfigEnableComponentsItemPtrInput)(nil)).Elem(), LoggingComponentConfigEnableComponentsItem("COMPONENT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingComponentConfigEnableComponentsItemArrayInput)(nil)).Elem(), LoggingComponentConfigEnableComponentsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingVariantConfigVariantInput)(nil)).Elem(), LoggingVariantConfigVariant("VARIANT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingVariantConfigVariantPtrInput)(nil)).Elem(), LoggingVariantConfigVariant("VARIANT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceExclusionOptionsScopeInput)(nil)).Elem(), MaintenanceExclusionOptionsScope("NO_UPGRADES"))
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceExclusionOptionsScopePtrInput)(nil)).Elem(), MaintenanceExclusionOptionsScope("NO_UPGRADES"))
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringComponentConfigEnableComponentsItemInput)(nil)).Elem(), MonitoringComponentConfigEnableComponentsItem("COMPONENT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringComponentConfigEnableComponentsItemPtrInput)(nil)).Elem(), MonitoringComponentConfigEnableComponentsItem("COMPONENT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringComponentConfigEnableComponentsItemArrayInput)(nil)).Elem(), MonitoringComponentConfigEnableComponentsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConfigDatapathProviderInput)(nil)).Elem(), NetworkConfigDatapathProvider("DATAPATH_PROVIDER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConfigDatapathProviderPtrInput)(nil)).Elem(), NetworkConfigDatapathProvider("DATAPATH_PROVIDER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConfigPrivateIpv6GoogleAccessInput)(nil)).Elem(), NetworkConfigPrivateIpv6GoogleAccess("PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConfigPrivateIpv6GoogleAccessPtrInput)(nil)).Elem(), NetworkConfigPrivateIpv6GoogleAccess("PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPerformanceConfigExternalIpEgressBandwidthTierInput)(nil)).Elem(), NetworkPerformanceConfigExternalIpEgressBandwidthTier("TIER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrInput)(nil)).Elem(), NetworkPerformanceConfigExternalIpEgressBandwidthTier("TIER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPerformanceConfigTotalEgressBandwidthTierInput)(nil)).Elem(), NetworkPerformanceConfigTotalEgressBandwidthTier("TIER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPerformanceConfigTotalEgressBandwidthTierPtrInput)(nil)).Elem(), NetworkPerformanceConfigTotalEgressBandwidthTier("TIER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPolicyProviderInput)(nil)).Elem(), NetworkPolicyProvider("PROVIDER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPolicyProviderPtrInput)(nil)).Elem(), NetworkPolicyProvider("PROVIDER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolAutoscalingLocationPolicyInput)(nil)).Elem(), NodePoolAutoscalingLocationPolicy("LOCATION_POLICY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolAutoscalingLocationPolicyPtrInput)(nil)).Elem(), NodePoolAutoscalingLocationPolicy("LOCATION_POLICY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTaintEffectInput)(nil)).Elem(), NodeTaintEffect("EFFECT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTaintEffectPtrInput)(nil)).Elem(), NodeTaintEffect("EFFECT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PlacementPolicyTypeInput)(nil)).Elem(), PlacementPolicyType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PlacementPolicyTypePtrInput)(nil)).Elem(), PlacementPolicyType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelChannelInput)(nil)).Elem(), ReleaseChannelChannel("UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelChannelPtrInput)(nil)).Elem(), ReleaseChannelChannel("UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReservationAffinityConsumeReservationTypeInput)(nil)).Elem(), ReservationAffinityConsumeReservationType("UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReservationAffinityConsumeReservationTypePtrInput)(nil)).Elem(), ReservationAffinityConsumeReservationType("UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SandboxConfigTypeInput)(nil)).Elem(), SandboxConfigType("UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SandboxConfigTypePtrInput)(nil)).Elem(), SandboxConfigType("UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*StatusConditionCanonicalCodeInput)(nil)).Elem(), StatusConditionCanonicalCode("OK"))
	pulumi.RegisterInputType(reflect.TypeOf((*StatusConditionCanonicalCodePtrInput)(nil)).Elem(), StatusConditionCanonicalCode("OK"))
	pulumi.RegisterInputType(reflect.TypeOf((*StatusConditionCodeInput)(nil)).Elem(), StatusConditionCode("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*StatusConditionCodePtrInput)(nil)).Elem(), StatusConditionCode("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*UpgradeSettingsStrategyInput)(nil)).Elem(), UpgradeSettingsStrategy("NODE_POOL_UPDATE_STRATEGY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*UpgradeSettingsStrategyPtrInput)(nil)).Elem(), UpgradeSettingsStrategy("NODE_POOL_UPDATE_STRATEGY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadConfigAuditModeInput)(nil)).Elem(), WorkloadConfigAuditMode("MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadConfigAuditModePtrInput)(nil)).Elem(), WorkloadConfigAuditMode("MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadMetadataConfigModeInput)(nil)).Elem(), WorkloadMetadataConfigMode("MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadMetadataConfigModePtrInput)(nil)).Elem(), WorkloadMetadataConfigMode("MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadMetadataConfigNodeMetadataInput)(nil)).Elem(), WorkloadMetadataConfigNodeMetadata("UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadMetadataConfigNodeMetadataPtrInput)(nil)).Elem(), WorkloadMetadataConfigNodeMetadata("UNSPECIFIED"))
	pulumi.RegisterOutputType(BinaryAuthorizationEvaluationModeOutput{})
	pulumi.RegisterOutputType(BinaryAuthorizationEvaluationModePtrOutput{})
	pulumi.RegisterOutputType(CloudRunConfigLoadBalancerTypeOutput{})
	pulumi.RegisterOutputType(CloudRunConfigLoadBalancerTypePtrOutput{})
	pulumi.RegisterOutputType(ClusterAutoscalingAutoscalingProfileOutput{})
	pulumi.RegisterOutputType(ClusterAutoscalingAutoscalingProfilePtrOutput{})
	pulumi.RegisterOutputType(ClusterTelemetryTypeOutput{})
	pulumi.RegisterOutputType(ClusterTelemetryTypePtrOutput{})
	pulumi.RegisterOutputType(DNSConfigClusterDnsOutput{})
	pulumi.RegisterOutputType(DNSConfigClusterDnsPtrOutput{})
	pulumi.RegisterOutputType(DNSConfigClusterDnsScopeOutput{})
	pulumi.RegisterOutputType(DNSConfigClusterDnsScopePtrOutput{})
	pulumi.RegisterOutputType(DatabaseEncryptionStateOutput{})
	pulumi.RegisterOutputType(DatabaseEncryptionStatePtrOutput{})
	pulumi.RegisterOutputType(FilterEventTypeItemOutput{})
	pulumi.RegisterOutputType(FilterEventTypeItemPtrOutput{})
	pulumi.RegisterOutputType(FilterEventTypeItemArrayOutput{})
	pulumi.RegisterOutputType(GPUSharingConfigGpuSharingStrategyOutput{})
	pulumi.RegisterOutputType(GPUSharingConfigGpuSharingStrategyPtrOutput{})
	pulumi.RegisterOutputType(IPAllocationPolicyIpv6AccessTypeOutput{})
	pulumi.RegisterOutputType(IPAllocationPolicyIpv6AccessTypePtrOutput{})
	pulumi.RegisterOutputType(IPAllocationPolicyStackTypeOutput{})
	pulumi.RegisterOutputType(IPAllocationPolicyStackTypePtrOutput{})
	pulumi.RegisterOutputType(IstioConfigAuthOutput{})
	pulumi.RegisterOutputType(IstioConfigAuthPtrOutput{})
	pulumi.RegisterOutputType(LinuxNodeConfigCgroupModeOutput{})
	pulumi.RegisterOutputType(LinuxNodeConfigCgroupModePtrOutput{})
	pulumi.RegisterOutputType(LoggingComponentConfigEnableComponentsItemOutput{})
	pulumi.RegisterOutputType(LoggingComponentConfigEnableComponentsItemPtrOutput{})
	pulumi.RegisterOutputType(LoggingComponentConfigEnableComponentsItemArrayOutput{})
	pulumi.RegisterOutputType(LoggingVariantConfigVariantOutput{})
	pulumi.RegisterOutputType(LoggingVariantConfigVariantPtrOutput{})
	pulumi.RegisterOutputType(MaintenanceExclusionOptionsScopeOutput{})
	pulumi.RegisterOutputType(MaintenanceExclusionOptionsScopePtrOutput{})
	pulumi.RegisterOutputType(MonitoringComponentConfigEnableComponentsItemOutput{})
	pulumi.RegisterOutputType(MonitoringComponentConfigEnableComponentsItemPtrOutput{})
	pulumi.RegisterOutputType(MonitoringComponentConfigEnableComponentsItemArrayOutput{})
	pulumi.RegisterOutputType(NetworkConfigDatapathProviderOutput{})
	pulumi.RegisterOutputType(NetworkConfigDatapathProviderPtrOutput{})
	pulumi.RegisterOutputType(NetworkConfigPrivateIpv6GoogleAccessOutput{})
	pulumi.RegisterOutputType(NetworkConfigPrivateIpv6GoogleAccessPtrOutput{})
	pulumi.RegisterOutputType(NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput{})
	pulumi.RegisterOutputType(NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput{})
	pulumi.RegisterOutputType(NetworkPerformanceConfigTotalEgressBandwidthTierOutput{})
	pulumi.RegisterOutputType(NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput{})
	pulumi.RegisterOutputType(NetworkPolicyProviderOutput{})
	pulumi.RegisterOutputType(NetworkPolicyProviderPtrOutput{})
	pulumi.RegisterOutputType(NodePoolAutoscalingLocationPolicyOutput{})
	pulumi.RegisterOutputType(NodePoolAutoscalingLocationPolicyPtrOutput{})
	pulumi.RegisterOutputType(NodeTaintEffectOutput{})
	pulumi.RegisterOutputType(NodeTaintEffectPtrOutput{})
	pulumi.RegisterOutputType(PlacementPolicyTypeOutput{})
	pulumi.RegisterOutputType(PlacementPolicyTypePtrOutput{})
	pulumi.RegisterOutputType(ReleaseChannelChannelOutput{})
	pulumi.RegisterOutputType(ReleaseChannelChannelPtrOutput{})
	pulumi.RegisterOutputType(ReservationAffinityConsumeReservationTypeOutput{})
	pulumi.RegisterOutputType(ReservationAffinityConsumeReservationTypePtrOutput{})
	pulumi.RegisterOutputType(SandboxConfigTypeOutput{})
	pulumi.RegisterOutputType(SandboxConfigTypePtrOutput{})
	pulumi.RegisterOutputType(StatusConditionCanonicalCodeOutput{})
	pulumi.RegisterOutputType(StatusConditionCanonicalCodePtrOutput{})
	pulumi.RegisterOutputType(StatusConditionCodeOutput{})
	pulumi.RegisterOutputType(StatusConditionCodePtrOutput{})
	pulumi.RegisterOutputType(UpgradeSettingsStrategyOutput{})
	pulumi.RegisterOutputType(UpgradeSettingsStrategyPtrOutput{})
	pulumi.RegisterOutputType(WorkloadConfigAuditModeOutput{})
	pulumi.RegisterOutputType(WorkloadConfigAuditModePtrOutput{})
	pulumi.RegisterOutputType(WorkloadMetadataConfigModeOutput{})
	pulumi.RegisterOutputType(WorkloadMetadataConfigModePtrOutput{})
	pulumi.RegisterOutputType(WorkloadMetadataConfigNodeMetadataOutput{})
	pulumi.RegisterOutputType(WorkloadMetadataConfigNodeMetadataPtrOutput{})
}
