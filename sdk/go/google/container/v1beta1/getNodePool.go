// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the requested node pool.
func LookupNodePool(ctx *pulumi.Context, args *LookupNodePoolArgs, opts ...pulumi.InvokeOption) (*LookupNodePoolResult, error) {
	var rv LookupNodePoolResult
	err := ctx.Invoke("google-native:container/v1beta1:getNodePool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupNodePoolArgs struct {
	ClusterId  string  `pulumi:"clusterId"`
	Location   string  `pulumi:"location"`
	NodePoolId string  `pulumi:"nodePoolId"`
	Project    *string `pulumi:"project"`
	ProjectId  string  `pulumi:"projectId"`
	Zone       string  `pulumi:"zone"`
}

type LookupNodePoolResult struct {
	// Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present.
	Autoscaling NodePoolAutoscalingResponse `pulumi:"autoscaling"`
	// Which conditions caused the current node pool state.
	Conditions []StatusConditionResponse `pulumi:"conditions"`
	// The node configuration of the pool.
	Config NodeConfigResponse `pulumi:"config"`
	// The initial node count for the pool. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota.
	InitialNodeCount int `pulumi:"initialNodeCount"`
	// [Output only] The resource URLs of the [managed instance groups](https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with this node pool. During the node pool blue-green upgrade operation, the URLs contain both blue and green resources.
	InstanceGroupUrls []string `pulumi:"instanceGroupUrls"`
	// The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes should be located. If this value is unspecified during node pool creation, the [Cluster.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster.FIELDS.locations) value will be used, instead. Warning: changing node pool locations will result in nodes being added and/or removed.
	Locations []string `pulumi:"locations"`
	// NodeManagement configuration for this NodePool.
	Management NodeManagementResponse `pulumi:"management"`
	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	MaxPodsConstraint MaxPodsConstraintResponse `pulumi:"maxPodsConstraint"`
	// The name of the node pool.
	Name string `pulumi:"name"`
	// Networking configuration for this NodePool. If specified, it overrides the cluster-level defaults.
	NetworkConfig NodeNetworkConfigResponse `pulumi:"networkConfig"`
	// Specifies the node placement policy.
	PlacementPolicy PlacementPolicyResponse `pulumi:"placementPolicy"`
	// [Output only] The pod CIDR block size per node in this node pool.
	PodIpv4CidrSize int `pulumi:"podIpv4CidrSize"`
	// [Output only] Server-defined URL for the resource.
	SelfLink string `pulumi:"selfLink"`
	// [Output only] The status of the nodes in this pool instance.
	Status string `pulumi:"status"`
	// [Output only] Deprecated. Use conditions instead. Additional information about the current status of this node pool instance, if available.
	//
	// Deprecated: [Output only] Deprecated. Use conditions instead. Additional information about the current status of this node pool instance, if available.
	StatusMessage string `pulumi:"statusMessage"`
	// [Output only] Update info contains relevant information during a node pool update.
	UpdateInfo UpdateInfoResponse `pulumi:"updateInfo"`
	// Upgrade settings control disruption and speed of the upgrade.
	UpgradeSettings UpgradeSettingsResponse `pulumi:"upgradeSettings"`
	// The version of the Kubernetes of this node.
	Version string `pulumi:"version"`
}

func LookupNodePoolOutput(ctx *pulumi.Context, args LookupNodePoolOutputArgs, opts ...pulumi.InvokeOption) LookupNodePoolResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNodePoolResult, error) {
			args := v.(LookupNodePoolArgs)
			r, err := LookupNodePool(ctx, &args, opts...)
			var s LookupNodePoolResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNodePoolResultOutput)
}

type LookupNodePoolOutputArgs struct {
	ClusterId  pulumi.StringInput    `pulumi:"clusterId"`
	Location   pulumi.StringInput    `pulumi:"location"`
	NodePoolId pulumi.StringInput    `pulumi:"nodePoolId"`
	Project    pulumi.StringPtrInput `pulumi:"project"`
	ProjectId  pulumi.StringInput    `pulumi:"projectId"`
	Zone       pulumi.StringInput    `pulumi:"zone"`
}

func (LookupNodePoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNodePoolArgs)(nil)).Elem()
}

type LookupNodePoolResultOutput struct{ *pulumi.OutputState }

func (LookupNodePoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNodePoolResult)(nil)).Elem()
}

func (o LookupNodePoolResultOutput) ToLookupNodePoolResultOutput() LookupNodePoolResultOutput {
	return o
}

func (o LookupNodePoolResultOutput) ToLookupNodePoolResultOutputWithContext(ctx context.Context) LookupNodePoolResultOutput {
	return o
}

// Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present.
func (o LookupNodePoolResultOutput) Autoscaling() NodePoolAutoscalingResponseOutput {
	return o.ApplyT(func(v LookupNodePoolResult) NodePoolAutoscalingResponse { return v.Autoscaling }).(NodePoolAutoscalingResponseOutput)
}

// Which conditions caused the current node pool state.
func (o LookupNodePoolResultOutput) Conditions() StatusConditionResponseArrayOutput {
	return o.ApplyT(func(v LookupNodePoolResult) []StatusConditionResponse { return v.Conditions }).(StatusConditionResponseArrayOutput)
}

// The node configuration of the pool.
func (o LookupNodePoolResultOutput) Config() NodeConfigResponseOutput {
	return o.ApplyT(func(v LookupNodePoolResult) NodeConfigResponse { return v.Config }).(NodeConfigResponseOutput)
}

// The initial node count for the pool. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota.
func (o LookupNodePoolResultOutput) InitialNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNodePoolResult) int { return v.InitialNodeCount }).(pulumi.IntOutput)
}

// [Output only] The resource URLs of the [managed instance groups](https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with this node pool. During the node pool blue-green upgrade operation, the URLs contain both blue and green resources.
func (o LookupNodePoolResultOutput) InstanceGroupUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNodePoolResult) []string { return v.InstanceGroupUrls }).(pulumi.StringArrayOutput)
}

// The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes should be located. If this value is unspecified during node pool creation, the [Cluster.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster.FIELDS.locations) value will be used, instead. Warning: changing node pool locations will result in nodes being added and/or removed.
func (o LookupNodePoolResultOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNodePoolResult) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// NodeManagement configuration for this NodePool.
func (o LookupNodePoolResultOutput) Management() NodeManagementResponseOutput {
	return o.ApplyT(func(v LookupNodePoolResult) NodeManagementResponse { return v.Management }).(NodeManagementResponseOutput)
}

// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
func (o LookupNodePoolResultOutput) MaxPodsConstraint() MaxPodsConstraintResponseOutput {
	return o.ApplyT(func(v LookupNodePoolResult) MaxPodsConstraintResponse { return v.MaxPodsConstraint }).(MaxPodsConstraintResponseOutput)
}

// The name of the node pool.
func (o LookupNodePoolResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.Name }).(pulumi.StringOutput)
}

// Networking configuration for this NodePool. If specified, it overrides the cluster-level defaults.
func (o LookupNodePoolResultOutput) NetworkConfig() NodeNetworkConfigResponseOutput {
	return o.ApplyT(func(v LookupNodePoolResult) NodeNetworkConfigResponse { return v.NetworkConfig }).(NodeNetworkConfigResponseOutput)
}

// Specifies the node placement policy.
func (o LookupNodePoolResultOutput) PlacementPolicy() PlacementPolicyResponseOutput {
	return o.ApplyT(func(v LookupNodePoolResult) PlacementPolicyResponse { return v.PlacementPolicy }).(PlacementPolicyResponseOutput)
}

// [Output only] The pod CIDR block size per node in this node pool.
func (o LookupNodePoolResultOutput) PodIpv4CidrSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNodePoolResult) int { return v.PodIpv4CidrSize }).(pulumi.IntOutput)
}

// [Output only] Server-defined URL for the resource.
func (o LookupNodePoolResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// [Output only] The status of the nodes in this pool instance.
func (o LookupNodePoolResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.Status }).(pulumi.StringOutput)
}

// [Output only] Deprecated. Use conditions instead. Additional information about the current status of this node pool instance, if available.
//
// Deprecated: [Output only] Deprecated. Use conditions instead. Additional information about the current status of this node pool instance, if available.
func (o LookupNodePoolResultOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.StatusMessage }).(pulumi.StringOutput)
}

// [Output only] Update info contains relevant information during a node pool update.
func (o LookupNodePoolResultOutput) UpdateInfo() UpdateInfoResponseOutput {
	return o.ApplyT(func(v LookupNodePoolResult) UpdateInfoResponse { return v.UpdateInfo }).(UpdateInfoResponseOutput)
}

// Upgrade settings control disruption and speed of the upgrade.
func (o LookupNodePoolResultOutput) UpgradeSettings() UpgradeSettingsResponseOutput {
	return o.ApplyT(func(v LookupNodePoolResult) UpgradeSettingsResponse { return v.UpgradeSettings }).(UpgradeSettingsResponseOutput)
}

// The version of the Kubernetes of this node.
func (o LookupNodePoolResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNodePoolResultOutput{})
}
