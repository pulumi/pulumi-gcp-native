// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Deprecated. This field is unused.
type BillingAccountSinkOutputVersionFormat string

const (
	// An unspecified format version that will default to V2.
	BillingAccountSinkOutputVersionFormatVersionFormatUnspecified = BillingAccountSinkOutputVersionFormat("VERSION_FORMAT_UNSPECIFIED")
	// LogEntry version 2 format.
	BillingAccountSinkOutputVersionFormatV2 = BillingAccountSinkOutputVersionFormat("V2")
	// LogEntry version 1 format.
	BillingAccountSinkOutputVersionFormatV1 = BillingAccountSinkOutputVersionFormat("V1")
)

func (BillingAccountSinkOutputVersionFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingAccountSinkOutputVersionFormat)(nil)).Elem()
}

func (e BillingAccountSinkOutputVersionFormat) ToBillingAccountSinkOutputVersionFormatOutput() BillingAccountSinkOutputVersionFormatOutput {
	return pulumi.ToOutput(e).(BillingAccountSinkOutputVersionFormatOutput)
}

func (e BillingAccountSinkOutputVersionFormat) ToBillingAccountSinkOutputVersionFormatOutputWithContext(ctx context.Context) BillingAccountSinkOutputVersionFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BillingAccountSinkOutputVersionFormatOutput)
}

func (e BillingAccountSinkOutputVersionFormat) ToBillingAccountSinkOutputVersionFormatPtrOutput() BillingAccountSinkOutputVersionFormatPtrOutput {
	return e.ToBillingAccountSinkOutputVersionFormatPtrOutputWithContext(context.Background())
}

func (e BillingAccountSinkOutputVersionFormat) ToBillingAccountSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) BillingAccountSinkOutputVersionFormatPtrOutput {
	return BillingAccountSinkOutputVersionFormat(e).ToBillingAccountSinkOutputVersionFormatOutputWithContext(ctx).ToBillingAccountSinkOutputVersionFormatPtrOutputWithContext(ctx)
}

func (e BillingAccountSinkOutputVersionFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BillingAccountSinkOutputVersionFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BillingAccountSinkOutputVersionFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BillingAccountSinkOutputVersionFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BillingAccountSinkOutputVersionFormatOutput struct{ *pulumi.OutputState }

func (BillingAccountSinkOutputVersionFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingAccountSinkOutputVersionFormat)(nil)).Elem()
}

func (o BillingAccountSinkOutputVersionFormatOutput) ToBillingAccountSinkOutputVersionFormatOutput() BillingAccountSinkOutputVersionFormatOutput {
	return o
}

func (o BillingAccountSinkOutputVersionFormatOutput) ToBillingAccountSinkOutputVersionFormatOutputWithContext(ctx context.Context) BillingAccountSinkOutputVersionFormatOutput {
	return o
}

func (o BillingAccountSinkOutputVersionFormatOutput) ToBillingAccountSinkOutputVersionFormatPtrOutput() BillingAccountSinkOutputVersionFormatPtrOutput {
	return o.ToBillingAccountSinkOutputVersionFormatPtrOutputWithContext(context.Background())
}

func (o BillingAccountSinkOutputVersionFormatOutput) ToBillingAccountSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) BillingAccountSinkOutputVersionFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BillingAccountSinkOutputVersionFormat) *BillingAccountSinkOutputVersionFormat {
		return &v
	}).(BillingAccountSinkOutputVersionFormatPtrOutput)
}

func (o BillingAccountSinkOutputVersionFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BillingAccountSinkOutputVersionFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BillingAccountSinkOutputVersionFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BillingAccountSinkOutputVersionFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BillingAccountSinkOutputVersionFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BillingAccountSinkOutputVersionFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BillingAccountSinkOutputVersionFormatPtrOutput struct{ *pulumi.OutputState }

func (BillingAccountSinkOutputVersionFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingAccountSinkOutputVersionFormat)(nil)).Elem()
}

func (o BillingAccountSinkOutputVersionFormatPtrOutput) ToBillingAccountSinkOutputVersionFormatPtrOutput() BillingAccountSinkOutputVersionFormatPtrOutput {
	return o
}

func (o BillingAccountSinkOutputVersionFormatPtrOutput) ToBillingAccountSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) BillingAccountSinkOutputVersionFormatPtrOutput {
	return o
}

func (o BillingAccountSinkOutputVersionFormatPtrOutput) Elem() BillingAccountSinkOutputVersionFormatOutput {
	return o.ApplyT(func(v *BillingAccountSinkOutputVersionFormat) BillingAccountSinkOutputVersionFormat {
		if v != nil {
			return *v
		}
		var ret BillingAccountSinkOutputVersionFormat
		return ret
	}).(BillingAccountSinkOutputVersionFormatOutput)
}

func (o BillingAccountSinkOutputVersionFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BillingAccountSinkOutputVersionFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BillingAccountSinkOutputVersionFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BillingAccountSinkOutputVersionFormatInput is an input type that accepts BillingAccountSinkOutputVersionFormatArgs and BillingAccountSinkOutputVersionFormatOutput values.
// You can construct a concrete instance of `BillingAccountSinkOutputVersionFormatInput` via:
//
//	BillingAccountSinkOutputVersionFormatArgs{...}
type BillingAccountSinkOutputVersionFormatInput interface {
	pulumi.Input

	ToBillingAccountSinkOutputVersionFormatOutput() BillingAccountSinkOutputVersionFormatOutput
	ToBillingAccountSinkOutputVersionFormatOutputWithContext(context.Context) BillingAccountSinkOutputVersionFormatOutput
}

var billingAccountSinkOutputVersionFormatPtrType = reflect.TypeOf((**BillingAccountSinkOutputVersionFormat)(nil)).Elem()

type BillingAccountSinkOutputVersionFormatPtrInput interface {
	pulumi.Input

	ToBillingAccountSinkOutputVersionFormatPtrOutput() BillingAccountSinkOutputVersionFormatPtrOutput
	ToBillingAccountSinkOutputVersionFormatPtrOutputWithContext(context.Context) BillingAccountSinkOutputVersionFormatPtrOutput
}

type billingAccountSinkOutputVersionFormatPtr string

func BillingAccountSinkOutputVersionFormatPtr(v string) BillingAccountSinkOutputVersionFormatPtrInput {
	return (*billingAccountSinkOutputVersionFormatPtr)(&v)
}

func (*billingAccountSinkOutputVersionFormatPtr) ElementType() reflect.Type {
	return billingAccountSinkOutputVersionFormatPtrType
}

func (in *billingAccountSinkOutputVersionFormatPtr) ToBillingAccountSinkOutputVersionFormatPtrOutput() BillingAccountSinkOutputVersionFormatPtrOutput {
	return pulumi.ToOutput(in).(BillingAccountSinkOutputVersionFormatPtrOutput)
}

func (in *billingAccountSinkOutputVersionFormatPtr) ToBillingAccountSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) BillingAccountSinkOutputVersionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BillingAccountSinkOutputVersionFormatPtrOutput)
}

// Deprecated. This field is unused.
type FolderSinkOutputVersionFormat string

const (
	// An unspecified format version that will default to V2.
	FolderSinkOutputVersionFormatVersionFormatUnspecified = FolderSinkOutputVersionFormat("VERSION_FORMAT_UNSPECIFIED")
	// LogEntry version 2 format.
	FolderSinkOutputVersionFormatV2 = FolderSinkOutputVersionFormat("V2")
	// LogEntry version 1 format.
	FolderSinkOutputVersionFormatV1 = FolderSinkOutputVersionFormat("V1")
)

func (FolderSinkOutputVersionFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*FolderSinkOutputVersionFormat)(nil)).Elem()
}

func (e FolderSinkOutputVersionFormat) ToFolderSinkOutputVersionFormatOutput() FolderSinkOutputVersionFormatOutput {
	return pulumi.ToOutput(e).(FolderSinkOutputVersionFormatOutput)
}

func (e FolderSinkOutputVersionFormat) ToFolderSinkOutputVersionFormatOutputWithContext(ctx context.Context) FolderSinkOutputVersionFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FolderSinkOutputVersionFormatOutput)
}

func (e FolderSinkOutputVersionFormat) ToFolderSinkOutputVersionFormatPtrOutput() FolderSinkOutputVersionFormatPtrOutput {
	return e.ToFolderSinkOutputVersionFormatPtrOutputWithContext(context.Background())
}

func (e FolderSinkOutputVersionFormat) ToFolderSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) FolderSinkOutputVersionFormatPtrOutput {
	return FolderSinkOutputVersionFormat(e).ToFolderSinkOutputVersionFormatOutputWithContext(ctx).ToFolderSinkOutputVersionFormatPtrOutputWithContext(ctx)
}

func (e FolderSinkOutputVersionFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FolderSinkOutputVersionFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FolderSinkOutputVersionFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FolderSinkOutputVersionFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FolderSinkOutputVersionFormatOutput struct{ *pulumi.OutputState }

func (FolderSinkOutputVersionFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FolderSinkOutputVersionFormat)(nil)).Elem()
}

func (o FolderSinkOutputVersionFormatOutput) ToFolderSinkOutputVersionFormatOutput() FolderSinkOutputVersionFormatOutput {
	return o
}

func (o FolderSinkOutputVersionFormatOutput) ToFolderSinkOutputVersionFormatOutputWithContext(ctx context.Context) FolderSinkOutputVersionFormatOutput {
	return o
}

func (o FolderSinkOutputVersionFormatOutput) ToFolderSinkOutputVersionFormatPtrOutput() FolderSinkOutputVersionFormatPtrOutput {
	return o.ToFolderSinkOutputVersionFormatPtrOutputWithContext(context.Background())
}

func (o FolderSinkOutputVersionFormatOutput) ToFolderSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) FolderSinkOutputVersionFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FolderSinkOutputVersionFormat) *FolderSinkOutputVersionFormat {
		return &v
	}).(FolderSinkOutputVersionFormatPtrOutput)
}

func (o FolderSinkOutputVersionFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FolderSinkOutputVersionFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FolderSinkOutputVersionFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FolderSinkOutputVersionFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FolderSinkOutputVersionFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FolderSinkOutputVersionFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FolderSinkOutputVersionFormatPtrOutput struct{ *pulumi.OutputState }

func (FolderSinkOutputVersionFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderSinkOutputVersionFormat)(nil)).Elem()
}

func (o FolderSinkOutputVersionFormatPtrOutput) ToFolderSinkOutputVersionFormatPtrOutput() FolderSinkOutputVersionFormatPtrOutput {
	return o
}

func (o FolderSinkOutputVersionFormatPtrOutput) ToFolderSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) FolderSinkOutputVersionFormatPtrOutput {
	return o
}

func (o FolderSinkOutputVersionFormatPtrOutput) Elem() FolderSinkOutputVersionFormatOutput {
	return o.ApplyT(func(v *FolderSinkOutputVersionFormat) FolderSinkOutputVersionFormat {
		if v != nil {
			return *v
		}
		var ret FolderSinkOutputVersionFormat
		return ret
	}).(FolderSinkOutputVersionFormatOutput)
}

func (o FolderSinkOutputVersionFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FolderSinkOutputVersionFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FolderSinkOutputVersionFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FolderSinkOutputVersionFormatInput is an input type that accepts FolderSinkOutputVersionFormatArgs and FolderSinkOutputVersionFormatOutput values.
// You can construct a concrete instance of `FolderSinkOutputVersionFormatInput` via:
//
//	FolderSinkOutputVersionFormatArgs{...}
type FolderSinkOutputVersionFormatInput interface {
	pulumi.Input

	ToFolderSinkOutputVersionFormatOutput() FolderSinkOutputVersionFormatOutput
	ToFolderSinkOutputVersionFormatOutputWithContext(context.Context) FolderSinkOutputVersionFormatOutput
}

var folderSinkOutputVersionFormatPtrType = reflect.TypeOf((**FolderSinkOutputVersionFormat)(nil)).Elem()

type FolderSinkOutputVersionFormatPtrInput interface {
	pulumi.Input

	ToFolderSinkOutputVersionFormatPtrOutput() FolderSinkOutputVersionFormatPtrOutput
	ToFolderSinkOutputVersionFormatPtrOutputWithContext(context.Context) FolderSinkOutputVersionFormatPtrOutput
}

type folderSinkOutputVersionFormatPtr string

func FolderSinkOutputVersionFormatPtr(v string) FolderSinkOutputVersionFormatPtrInput {
	return (*folderSinkOutputVersionFormatPtr)(&v)
}

func (*folderSinkOutputVersionFormatPtr) ElementType() reflect.Type {
	return folderSinkOutputVersionFormatPtrType
}

func (in *folderSinkOutputVersionFormatPtr) ToFolderSinkOutputVersionFormatPtrOutput() FolderSinkOutputVersionFormatPtrOutput {
	return pulumi.ToOutput(in).(FolderSinkOutputVersionFormatPtrOutput)
}

func (in *folderSinkOutputVersionFormatPtr) ToFolderSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) FolderSinkOutputVersionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FolderSinkOutputVersionFormatPtrOutput)
}

// Required. The type of data in this index.
type IndexConfigType string

const (
	// The index's type is unspecified.
	IndexConfigTypeIndexTypeUnspecified = IndexConfigType("INDEX_TYPE_UNSPECIFIED")
	// The index is a string-type index.
	IndexConfigTypeIndexTypeString = IndexConfigType("INDEX_TYPE_STRING")
	// The index is a integer-type index.
	IndexConfigTypeIndexTypeInteger = IndexConfigType("INDEX_TYPE_INTEGER")
)

func (IndexConfigType) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexConfigType)(nil)).Elem()
}

func (e IndexConfigType) ToIndexConfigTypeOutput() IndexConfigTypeOutput {
	return pulumi.ToOutput(e).(IndexConfigTypeOutput)
}

func (e IndexConfigType) ToIndexConfigTypeOutputWithContext(ctx context.Context) IndexConfigTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IndexConfigTypeOutput)
}

func (e IndexConfigType) ToIndexConfigTypePtrOutput() IndexConfigTypePtrOutput {
	return e.ToIndexConfigTypePtrOutputWithContext(context.Background())
}

func (e IndexConfigType) ToIndexConfigTypePtrOutputWithContext(ctx context.Context) IndexConfigTypePtrOutput {
	return IndexConfigType(e).ToIndexConfigTypeOutputWithContext(ctx).ToIndexConfigTypePtrOutputWithContext(ctx)
}

func (e IndexConfigType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexConfigType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexConfigType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IndexConfigType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IndexConfigTypeOutput struct{ *pulumi.OutputState }

func (IndexConfigTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexConfigType)(nil)).Elem()
}

func (o IndexConfigTypeOutput) ToIndexConfigTypeOutput() IndexConfigTypeOutput {
	return o
}

func (o IndexConfigTypeOutput) ToIndexConfigTypeOutputWithContext(ctx context.Context) IndexConfigTypeOutput {
	return o
}

func (o IndexConfigTypeOutput) ToIndexConfigTypePtrOutput() IndexConfigTypePtrOutput {
	return o.ToIndexConfigTypePtrOutputWithContext(context.Background())
}

func (o IndexConfigTypeOutput) ToIndexConfigTypePtrOutputWithContext(ctx context.Context) IndexConfigTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexConfigType) *IndexConfigType {
		return &v
	}).(IndexConfigTypePtrOutput)
}

func (o IndexConfigTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IndexConfigTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexConfigType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IndexConfigTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexConfigTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexConfigType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IndexConfigTypePtrOutput struct{ *pulumi.OutputState }

func (IndexConfigTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexConfigType)(nil)).Elem()
}

func (o IndexConfigTypePtrOutput) ToIndexConfigTypePtrOutput() IndexConfigTypePtrOutput {
	return o
}

func (o IndexConfigTypePtrOutput) ToIndexConfigTypePtrOutputWithContext(ctx context.Context) IndexConfigTypePtrOutput {
	return o
}

func (o IndexConfigTypePtrOutput) Elem() IndexConfigTypeOutput {
	return o.ApplyT(func(v *IndexConfigType) IndexConfigType {
		if v != nil {
			return *v
		}
		var ret IndexConfigType
		return ret
	}).(IndexConfigTypeOutput)
}

func (o IndexConfigTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexConfigTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IndexConfigType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IndexConfigTypeInput is an input type that accepts IndexConfigTypeArgs and IndexConfigTypeOutput values.
// You can construct a concrete instance of `IndexConfigTypeInput` via:
//
//	IndexConfigTypeArgs{...}
type IndexConfigTypeInput interface {
	pulumi.Input

	ToIndexConfigTypeOutput() IndexConfigTypeOutput
	ToIndexConfigTypeOutputWithContext(context.Context) IndexConfigTypeOutput
}

var indexConfigTypePtrType = reflect.TypeOf((**IndexConfigType)(nil)).Elem()

type IndexConfigTypePtrInput interface {
	pulumi.Input

	ToIndexConfigTypePtrOutput() IndexConfigTypePtrOutput
	ToIndexConfigTypePtrOutputWithContext(context.Context) IndexConfigTypePtrOutput
}

type indexConfigTypePtr string

func IndexConfigTypePtr(v string) IndexConfigTypePtrInput {
	return (*indexConfigTypePtr)(&v)
}

func (*indexConfigTypePtr) ElementType() reflect.Type {
	return indexConfigTypePtrType
}

func (in *indexConfigTypePtr) ToIndexConfigTypePtrOutput() IndexConfigTypePtrOutput {
	return pulumi.ToOutput(in).(IndexConfigTypePtrOutput)
}

func (in *indexConfigTypePtr) ToIndexConfigTypePtrOutputWithContext(ctx context.Context) IndexConfigTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IndexConfigTypePtrOutput)
}

// The type of data that can be assigned to the label.
type LabelDescriptorValueType string

const (
	// A variable-length string. This is the default.
	LabelDescriptorValueTypeString = LabelDescriptorValueType("STRING")
	// Boolean; true or false.
	LabelDescriptorValueTypeBool = LabelDescriptorValueType("BOOL")
	// A 64-bit signed integer.
	LabelDescriptorValueTypeInt64 = LabelDescriptorValueType("INT64")
)

func (LabelDescriptorValueType) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelDescriptorValueType)(nil)).Elem()
}

func (e LabelDescriptorValueType) ToLabelDescriptorValueTypeOutput() LabelDescriptorValueTypeOutput {
	return pulumi.ToOutput(e).(LabelDescriptorValueTypeOutput)
}

func (e LabelDescriptorValueType) ToLabelDescriptorValueTypeOutputWithContext(ctx context.Context) LabelDescriptorValueTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LabelDescriptorValueTypeOutput)
}

func (e LabelDescriptorValueType) ToLabelDescriptorValueTypePtrOutput() LabelDescriptorValueTypePtrOutput {
	return e.ToLabelDescriptorValueTypePtrOutputWithContext(context.Background())
}

func (e LabelDescriptorValueType) ToLabelDescriptorValueTypePtrOutputWithContext(ctx context.Context) LabelDescriptorValueTypePtrOutput {
	return LabelDescriptorValueType(e).ToLabelDescriptorValueTypeOutputWithContext(ctx).ToLabelDescriptorValueTypePtrOutputWithContext(ctx)
}

func (e LabelDescriptorValueType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LabelDescriptorValueType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LabelDescriptorValueType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LabelDescriptorValueType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LabelDescriptorValueTypeOutput struct{ *pulumi.OutputState }

func (LabelDescriptorValueTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelDescriptorValueType)(nil)).Elem()
}

func (o LabelDescriptorValueTypeOutput) ToLabelDescriptorValueTypeOutput() LabelDescriptorValueTypeOutput {
	return o
}

func (o LabelDescriptorValueTypeOutput) ToLabelDescriptorValueTypeOutputWithContext(ctx context.Context) LabelDescriptorValueTypeOutput {
	return o
}

func (o LabelDescriptorValueTypeOutput) ToLabelDescriptorValueTypePtrOutput() LabelDescriptorValueTypePtrOutput {
	return o.ToLabelDescriptorValueTypePtrOutputWithContext(context.Background())
}

func (o LabelDescriptorValueTypeOutput) ToLabelDescriptorValueTypePtrOutputWithContext(ctx context.Context) LabelDescriptorValueTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LabelDescriptorValueType) *LabelDescriptorValueType {
		return &v
	}).(LabelDescriptorValueTypePtrOutput)
}

func (o LabelDescriptorValueTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LabelDescriptorValueTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LabelDescriptorValueType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LabelDescriptorValueTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LabelDescriptorValueTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LabelDescriptorValueType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LabelDescriptorValueTypePtrOutput struct{ *pulumi.OutputState }

func (LabelDescriptorValueTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelDescriptorValueType)(nil)).Elem()
}

func (o LabelDescriptorValueTypePtrOutput) ToLabelDescriptorValueTypePtrOutput() LabelDescriptorValueTypePtrOutput {
	return o
}

func (o LabelDescriptorValueTypePtrOutput) ToLabelDescriptorValueTypePtrOutputWithContext(ctx context.Context) LabelDescriptorValueTypePtrOutput {
	return o
}

func (o LabelDescriptorValueTypePtrOutput) Elem() LabelDescriptorValueTypeOutput {
	return o.ApplyT(func(v *LabelDescriptorValueType) LabelDescriptorValueType {
		if v != nil {
			return *v
		}
		var ret LabelDescriptorValueType
		return ret
	}).(LabelDescriptorValueTypeOutput)
}

func (o LabelDescriptorValueTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LabelDescriptorValueTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LabelDescriptorValueType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LabelDescriptorValueTypeInput is an input type that accepts LabelDescriptorValueTypeArgs and LabelDescriptorValueTypeOutput values.
// You can construct a concrete instance of `LabelDescriptorValueTypeInput` via:
//
//	LabelDescriptorValueTypeArgs{...}
type LabelDescriptorValueTypeInput interface {
	pulumi.Input

	ToLabelDescriptorValueTypeOutput() LabelDescriptorValueTypeOutput
	ToLabelDescriptorValueTypeOutputWithContext(context.Context) LabelDescriptorValueTypeOutput
}

var labelDescriptorValueTypePtrType = reflect.TypeOf((**LabelDescriptorValueType)(nil)).Elem()

type LabelDescriptorValueTypePtrInput interface {
	pulumi.Input

	ToLabelDescriptorValueTypePtrOutput() LabelDescriptorValueTypePtrOutput
	ToLabelDescriptorValueTypePtrOutputWithContext(context.Context) LabelDescriptorValueTypePtrOutput
}

type labelDescriptorValueTypePtr string

func LabelDescriptorValueTypePtr(v string) LabelDescriptorValueTypePtrInput {
	return (*labelDescriptorValueTypePtr)(&v)
}

func (*labelDescriptorValueTypePtr) ElementType() reflect.Type {
	return labelDescriptorValueTypePtrType
}

func (in *labelDescriptorValueTypePtr) ToLabelDescriptorValueTypePtrOutput() LabelDescriptorValueTypePtrOutput {
	return pulumi.ToOutput(in).(LabelDescriptorValueTypePtrOutput)
}

func (in *labelDescriptorValueTypePtr) ToLabelDescriptorValueTypePtrOutputWithContext(ctx context.Context) LabelDescriptorValueTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LabelDescriptorValueTypePtrOutput)
}

// Optional. The launch stage of the metric definition.
type MetricDescriptorLaunchStage string

const (
	// Do not use this default value.
	MetricDescriptorLaunchStageLaunchStageUnspecified = MetricDescriptorLaunchStage("LAUNCH_STAGE_UNSPECIFIED")
	// The feature is not yet implemented. Users can not use it.
	MetricDescriptorLaunchStageUnimplemented = MetricDescriptorLaunchStage("UNIMPLEMENTED")
	// Prelaunch features are hidden from users and are only visible internally.
	MetricDescriptorLaunchStagePrelaunch = MetricDescriptorLaunchStage("PRELAUNCH")
	// Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.
	MetricDescriptorLaunchStageEarlyAccess = MetricDescriptorLaunchStage("EARLY_ACCESS")
	// Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.
	MetricDescriptorLaunchStageAlpha = MetricDescriptorLaunchStage("ALPHA")
	// Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.
	MetricDescriptorLaunchStageBeta = MetricDescriptorLaunchStage("BETA")
	// GA features are open to all developers and are considered stable and fully qualified for production use.
	MetricDescriptorLaunchStageGa = MetricDescriptorLaunchStage("GA")
	// Deprecated features are scheduled to be shut down and removed. For more information, see the "Deprecation Policy" section of our Terms of Service (https://cloud.google.com/terms/) and the Google Cloud Platform Subject to the Deprecation Policy (https://cloud.google.com/terms/deprecation) documentation.
	MetricDescriptorLaunchStageDeprecated = MetricDescriptorLaunchStage("DEPRECATED")
)

func (MetricDescriptorLaunchStage) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDescriptorLaunchStage)(nil)).Elem()
}

func (e MetricDescriptorLaunchStage) ToMetricDescriptorLaunchStageOutput() MetricDescriptorLaunchStageOutput {
	return pulumi.ToOutput(e).(MetricDescriptorLaunchStageOutput)
}

func (e MetricDescriptorLaunchStage) ToMetricDescriptorLaunchStageOutputWithContext(ctx context.Context) MetricDescriptorLaunchStageOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MetricDescriptorLaunchStageOutput)
}

func (e MetricDescriptorLaunchStage) ToMetricDescriptorLaunchStagePtrOutput() MetricDescriptorLaunchStagePtrOutput {
	return e.ToMetricDescriptorLaunchStagePtrOutputWithContext(context.Background())
}

func (e MetricDescriptorLaunchStage) ToMetricDescriptorLaunchStagePtrOutputWithContext(ctx context.Context) MetricDescriptorLaunchStagePtrOutput {
	return MetricDescriptorLaunchStage(e).ToMetricDescriptorLaunchStageOutputWithContext(ctx).ToMetricDescriptorLaunchStagePtrOutputWithContext(ctx)
}

func (e MetricDescriptorLaunchStage) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetricDescriptorLaunchStage) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetricDescriptorLaunchStage) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MetricDescriptorLaunchStage) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MetricDescriptorLaunchStageOutput struct{ *pulumi.OutputState }

func (MetricDescriptorLaunchStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDescriptorLaunchStage)(nil)).Elem()
}

func (o MetricDescriptorLaunchStageOutput) ToMetricDescriptorLaunchStageOutput() MetricDescriptorLaunchStageOutput {
	return o
}

func (o MetricDescriptorLaunchStageOutput) ToMetricDescriptorLaunchStageOutputWithContext(ctx context.Context) MetricDescriptorLaunchStageOutput {
	return o
}

func (o MetricDescriptorLaunchStageOutput) ToMetricDescriptorLaunchStagePtrOutput() MetricDescriptorLaunchStagePtrOutput {
	return o.ToMetricDescriptorLaunchStagePtrOutputWithContext(context.Background())
}

func (o MetricDescriptorLaunchStageOutput) ToMetricDescriptorLaunchStagePtrOutputWithContext(ctx context.Context) MetricDescriptorLaunchStagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricDescriptorLaunchStage) *MetricDescriptorLaunchStage {
		return &v
	}).(MetricDescriptorLaunchStagePtrOutput)
}

func (o MetricDescriptorLaunchStageOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MetricDescriptorLaunchStageOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetricDescriptorLaunchStage) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MetricDescriptorLaunchStageOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetricDescriptorLaunchStageOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetricDescriptorLaunchStage) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MetricDescriptorLaunchStagePtrOutput struct{ *pulumi.OutputState }

func (MetricDescriptorLaunchStagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricDescriptorLaunchStage)(nil)).Elem()
}

func (o MetricDescriptorLaunchStagePtrOutput) ToMetricDescriptorLaunchStagePtrOutput() MetricDescriptorLaunchStagePtrOutput {
	return o
}

func (o MetricDescriptorLaunchStagePtrOutput) ToMetricDescriptorLaunchStagePtrOutputWithContext(ctx context.Context) MetricDescriptorLaunchStagePtrOutput {
	return o
}

func (o MetricDescriptorLaunchStagePtrOutput) Elem() MetricDescriptorLaunchStageOutput {
	return o.ApplyT(func(v *MetricDescriptorLaunchStage) MetricDescriptorLaunchStage {
		if v != nil {
			return *v
		}
		var ret MetricDescriptorLaunchStage
		return ret
	}).(MetricDescriptorLaunchStageOutput)
}

func (o MetricDescriptorLaunchStagePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetricDescriptorLaunchStagePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MetricDescriptorLaunchStage) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MetricDescriptorLaunchStageInput is an input type that accepts MetricDescriptorLaunchStageArgs and MetricDescriptorLaunchStageOutput values.
// You can construct a concrete instance of `MetricDescriptorLaunchStageInput` via:
//
//	MetricDescriptorLaunchStageArgs{...}
type MetricDescriptorLaunchStageInput interface {
	pulumi.Input

	ToMetricDescriptorLaunchStageOutput() MetricDescriptorLaunchStageOutput
	ToMetricDescriptorLaunchStageOutputWithContext(context.Context) MetricDescriptorLaunchStageOutput
}

var metricDescriptorLaunchStagePtrType = reflect.TypeOf((**MetricDescriptorLaunchStage)(nil)).Elem()

type MetricDescriptorLaunchStagePtrInput interface {
	pulumi.Input

	ToMetricDescriptorLaunchStagePtrOutput() MetricDescriptorLaunchStagePtrOutput
	ToMetricDescriptorLaunchStagePtrOutputWithContext(context.Context) MetricDescriptorLaunchStagePtrOutput
}

type metricDescriptorLaunchStagePtr string

func MetricDescriptorLaunchStagePtr(v string) MetricDescriptorLaunchStagePtrInput {
	return (*metricDescriptorLaunchStagePtr)(&v)
}

func (*metricDescriptorLaunchStagePtr) ElementType() reflect.Type {
	return metricDescriptorLaunchStagePtrType
}

func (in *metricDescriptorLaunchStagePtr) ToMetricDescriptorLaunchStagePtrOutput() MetricDescriptorLaunchStagePtrOutput {
	return pulumi.ToOutput(in).(MetricDescriptorLaunchStagePtrOutput)
}

func (in *metricDescriptorLaunchStagePtr) ToMetricDescriptorLaunchStagePtrOutputWithContext(ctx context.Context) MetricDescriptorLaunchStagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MetricDescriptorLaunchStagePtrOutput)
}

// Deprecated. Must use the MetricDescriptor.launch_stage instead.
type MetricDescriptorMetadataLaunchStage string

const (
	// Do not use this default value.
	MetricDescriptorMetadataLaunchStageLaunchStageUnspecified = MetricDescriptorMetadataLaunchStage("LAUNCH_STAGE_UNSPECIFIED")
	// The feature is not yet implemented. Users can not use it.
	MetricDescriptorMetadataLaunchStageUnimplemented = MetricDescriptorMetadataLaunchStage("UNIMPLEMENTED")
	// Prelaunch features are hidden from users and are only visible internally.
	MetricDescriptorMetadataLaunchStagePrelaunch = MetricDescriptorMetadataLaunchStage("PRELAUNCH")
	// Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.
	MetricDescriptorMetadataLaunchStageEarlyAccess = MetricDescriptorMetadataLaunchStage("EARLY_ACCESS")
	// Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.
	MetricDescriptorMetadataLaunchStageAlpha = MetricDescriptorMetadataLaunchStage("ALPHA")
	// Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.
	MetricDescriptorMetadataLaunchStageBeta = MetricDescriptorMetadataLaunchStage("BETA")
	// GA features are open to all developers and are considered stable and fully qualified for production use.
	MetricDescriptorMetadataLaunchStageGa = MetricDescriptorMetadataLaunchStage("GA")
	// Deprecated features are scheduled to be shut down and removed. For more information, see the "Deprecation Policy" section of our Terms of Service (https://cloud.google.com/terms/) and the Google Cloud Platform Subject to the Deprecation Policy (https://cloud.google.com/terms/deprecation) documentation.
	MetricDescriptorMetadataLaunchStageDeprecated = MetricDescriptorMetadataLaunchStage("DEPRECATED")
)

func (MetricDescriptorMetadataLaunchStage) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDescriptorMetadataLaunchStage)(nil)).Elem()
}

func (e MetricDescriptorMetadataLaunchStage) ToMetricDescriptorMetadataLaunchStageOutput() MetricDescriptorMetadataLaunchStageOutput {
	return pulumi.ToOutput(e).(MetricDescriptorMetadataLaunchStageOutput)
}

func (e MetricDescriptorMetadataLaunchStage) ToMetricDescriptorMetadataLaunchStageOutputWithContext(ctx context.Context) MetricDescriptorMetadataLaunchStageOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MetricDescriptorMetadataLaunchStageOutput)
}

func (e MetricDescriptorMetadataLaunchStage) ToMetricDescriptorMetadataLaunchStagePtrOutput() MetricDescriptorMetadataLaunchStagePtrOutput {
	return e.ToMetricDescriptorMetadataLaunchStagePtrOutputWithContext(context.Background())
}

func (e MetricDescriptorMetadataLaunchStage) ToMetricDescriptorMetadataLaunchStagePtrOutputWithContext(ctx context.Context) MetricDescriptorMetadataLaunchStagePtrOutput {
	return MetricDescriptorMetadataLaunchStage(e).ToMetricDescriptorMetadataLaunchStageOutputWithContext(ctx).ToMetricDescriptorMetadataLaunchStagePtrOutputWithContext(ctx)
}

func (e MetricDescriptorMetadataLaunchStage) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetricDescriptorMetadataLaunchStage) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetricDescriptorMetadataLaunchStage) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MetricDescriptorMetadataLaunchStage) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MetricDescriptorMetadataLaunchStageOutput struct{ *pulumi.OutputState }

func (MetricDescriptorMetadataLaunchStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDescriptorMetadataLaunchStage)(nil)).Elem()
}

func (o MetricDescriptorMetadataLaunchStageOutput) ToMetricDescriptorMetadataLaunchStageOutput() MetricDescriptorMetadataLaunchStageOutput {
	return o
}

func (o MetricDescriptorMetadataLaunchStageOutput) ToMetricDescriptorMetadataLaunchStageOutputWithContext(ctx context.Context) MetricDescriptorMetadataLaunchStageOutput {
	return o
}

func (o MetricDescriptorMetadataLaunchStageOutput) ToMetricDescriptorMetadataLaunchStagePtrOutput() MetricDescriptorMetadataLaunchStagePtrOutput {
	return o.ToMetricDescriptorMetadataLaunchStagePtrOutputWithContext(context.Background())
}

func (o MetricDescriptorMetadataLaunchStageOutput) ToMetricDescriptorMetadataLaunchStagePtrOutputWithContext(ctx context.Context) MetricDescriptorMetadataLaunchStagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricDescriptorMetadataLaunchStage) *MetricDescriptorMetadataLaunchStage {
		return &v
	}).(MetricDescriptorMetadataLaunchStagePtrOutput)
}

func (o MetricDescriptorMetadataLaunchStageOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MetricDescriptorMetadataLaunchStageOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetricDescriptorMetadataLaunchStage) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MetricDescriptorMetadataLaunchStageOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetricDescriptorMetadataLaunchStageOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetricDescriptorMetadataLaunchStage) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MetricDescriptorMetadataLaunchStagePtrOutput struct{ *pulumi.OutputState }

func (MetricDescriptorMetadataLaunchStagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricDescriptorMetadataLaunchStage)(nil)).Elem()
}

func (o MetricDescriptorMetadataLaunchStagePtrOutput) ToMetricDescriptorMetadataLaunchStagePtrOutput() MetricDescriptorMetadataLaunchStagePtrOutput {
	return o
}

func (o MetricDescriptorMetadataLaunchStagePtrOutput) ToMetricDescriptorMetadataLaunchStagePtrOutputWithContext(ctx context.Context) MetricDescriptorMetadataLaunchStagePtrOutput {
	return o
}

func (o MetricDescriptorMetadataLaunchStagePtrOutput) Elem() MetricDescriptorMetadataLaunchStageOutput {
	return o.ApplyT(func(v *MetricDescriptorMetadataLaunchStage) MetricDescriptorMetadataLaunchStage {
		if v != nil {
			return *v
		}
		var ret MetricDescriptorMetadataLaunchStage
		return ret
	}).(MetricDescriptorMetadataLaunchStageOutput)
}

func (o MetricDescriptorMetadataLaunchStagePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetricDescriptorMetadataLaunchStagePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MetricDescriptorMetadataLaunchStage) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MetricDescriptorMetadataLaunchStageInput is an input type that accepts MetricDescriptorMetadataLaunchStageArgs and MetricDescriptorMetadataLaunchStageOutput values.
// You can construct a concrete instance of `MetricDescriptorMetadataLaunchStageInput` via:
//
//	MetricDescriptorMetadataLaunchStageArgs{...}
type MetricDescriptorMetadataLaunchStageInput interface {
	pulumi.Input

	ToMetricDescriptorMetadataLaunchStageOutput() MetricDescriptorMetadataLaunchStageOutput
	ToMetricDescriptorMetadataLaunchStageOutputWithContext(context.Context) MetricDescriptorMetadataLaunchStageOutput
}

var metricDescriptorMetadataLaunchStagePtrType = reflect.TypeOf((**MetricDescriptorMetadataLaunchStage)(nil)).Elem()

type MetricDescriptorMetadataLaunchStagePtrInput interface {
	pulumi.Input

	ToMetricDescriptorMetadataLaunchStagePtrOutput() MetricDescriptorMetadataLaunchStagePtrOutput
	ToMetricDescriptorMetadataLaunchStagePtrOutputWithContext(context.Context) MetricDescriptorMetadataLaunchStagePtrOutput
}

type metricDescriptorMetadataLaunchStagePtr string

func MetricDescriptorMetadataLaunchStagePtr(v string) MetricDescriptorMetadataLaunchStagePtrInput {
	return (*metricDescriptorMetadataLaunchStagePtr)(&v)
}

func (*metricDescriptorMetadataLaunchStagePtr) ElementType() reflect.Type {
	return metricDescriptorMetadataLaunchStagePtrType
}

func (in *metricDescriptorMetadataLaunchStagePtr) ToMetricDescriptorMetadataLaunchStagePtrOutput() MetricDescriptorMetadataLaunchStagePtrOutput {
	return pulumi.ToOutput(in).(MetricDescriptorMetadataLaunchStagePtrOutput)
}

func (in *metricDescriptorMetadataLaunchStagePtr) ToMetricDescriptorMetadataLaunchStagePtrOutputWithContext(ctx context.Context) MetricDescriptorMetadataLaunchStagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MetricDescriptorMetadataLaunchStagePtrOutput)
}

// Whether the metric records instantaneous values, changes to a value, etc. Some combinations of metric_kind and value_type might not be supported.
type MetricDescriptorMetricKind string

const (
	// Do not use this default value.
	MetricDescriptorMetricKindMetricKindUnspecified = MetricDescriptorMetricKind("METRIC_KIND_UNSPECIFIED")
	// An instantaneous measurement of a value.
	MetricDescriptorMetricKindGauge = MetricDescriptorMetricKind("GAUGE")
	// The change in a value during a time interval.
	MetricDescriptorMetricKindDelta = MetricDescriptorMetricKind("DELTA")
	// A value accumulated over a time interval. Cumulative measurements in a time series should have the same start time and increasing end times, until an event resets the cumulative value to zero and sets a new start time for the following points.
	MetricDescriptorMetricKindCumulative = MetricDescriptorMetricKind("CUMULATIVE")
)

func (MetricDescriptorMetricKind) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDescriptorMetricKind)(nil)).Elem()
}

func (e MetricDescriptorMetricKind) ToMetricDescriptorMetricKindOutput() MetricDescriptorMetricKindOutput {
	return pulumi.ToOutput(e).(MetricDescriptorMetricKindOutput)
}

func (e MetricDescriptorMetricKind) ToMetricDescriptorMetricKindOutputWithContext(ctx context.Context) MetricDescriptorMetricKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MetricDescriptorMetricKindOutput)
}

func (e MetricDescriptorMetricKind) ToMetricDescriptorMetricKindPtrOutput() MetricDescriptorMetricKindPtrOutput {
	return e.ToMetricDescriptorMetricKindPtrOutputWithContext(context.Background())
}

func (e MetricDescriptorMetricKind) ToMetricDescriptorMetricKindPtrOutputWithContext(ctx context.Context) MetricDescriptorMetricKindPtrOutput {
	return MetricDescriptorMetricKind(e).ToMetricDescriptorMetricKindOutputWithContext(ctx).ToMetricDescriptorMetricKindPtrOutputWithContext(ctx)
}

func (e MetricDescriptorMetricKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetricDescriptorMetricKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetricDescriptorMetricKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MetricDescriptorMetricKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MetricDescriptorMetricKindOutput struct{ *pulumi.OutputState }

func (MetricDescriptorMetricKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDescriptorMetricKind)(nil)).Elem()
}

func (o MetricDescriptorMetricKindOutput) ToMetricDescriptorMetricKindOutput() MetricDescriptorMetricKindOutput {
	return o
}

func (o MetricDescriptorMetricKindOutput) ToMetricDescriptorMetricKindOutputWithContext(ctx context.Context) MetricDescriptorMetricKindOutput {
	return o
}

func (o MetricDescriptorMetricKindOutput) ToMetricDescriptorMetricKindPtrOutput() MetricDescriptorMetricKindPtrOutput {
	return o.ToMetricDescriptorMetricKindPtrOutputWithContext(context.Background())
}

func (o MetricDescriptorMetricKindOutput) ToMetricDescriptorMetricKindPtrOutputWithContext(ctx context.Context) MetricDescriptorMetricKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricDescriptorMetricKind) *MetricDescriptorMetricKind {
		return &v
	}).(MetricDescriptorMetricKindPtrOutput)
}

func (o MetricDescriptorMetricKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MetricDescriptorMetricKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetricDescriptorMetricKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MetricDescriptorMetricKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetricDescriptorMetricKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetricDescriptorMetricKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MetricDescriptorMetricKindPtrOutput struct{ *pulumi.OutputState }

func (MetricDescriptorMetricKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricDescriptorMetricKind)(nil)).Elem()
}

func (o MetricDescriptorMetricKindPtrOutput) ToMetricDescriptorMetricKindPtrOutput() MetricDescriptorMetricKindPtrOutput {
	return o
}

func (o MetricDescriptorMetricKindPtrOutput) ToMetricDescriptorMetricKindPtrOutputWithContext(ctx context.Context) MetricDescriptorMetricKindPtrOutput {
	return o
}

func (o MetricDescriptorMetricKindPtrOutput) Elem() MetricDescriptorMetricKindOutput {
	return o.ApplyT(func(v *MetricDescriptorMetricKind) MetricDescriptorMetricKind {
		if v != nil {
			return *v
		}
		var ret MetricDescriptorMetricKind
		return ret
	}).(MetricDescriptorMetricKindOutput)
}

func (o MetricDescriptorMetricKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetricDescriptorMetricKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MetricDescriptorMetricKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MetricDescriptorMetricKindInput is an input type that accepts MetricDescriptorMetricKindArgs and MetricDescriptorMetricKindOutput values.
// You can construct a concrete instance of `MetricDescriptorMetricKindInput` via:
//
//	MetricDescriptorMetricKindArgs{...}
type MetricDescriptorMetricKindInput interface {
	pulumi.Input

	ToMetricDescriptorMetricKindOutput() MetricDescriptorMetricKindOutput
	ToMetricDescriptorMetricKindOutputWithContext(context.Context) MetricDescriptorMetricKindOutput
}

var metricDescriptorMetricKindPtrType = reflect.TypeOf((**MetricDescriptorMetricKind)(nil)).Elem()

type MetricDescriptorMetricKindPtrInput interface {
	pulumi.Input

	ToMetricDescriptorMetricKindPtrOutput() MetricDescriptorMetricKindPtrOutput
	ToMetricDescriptorMetricKindPtrOutputWithContext(context.Context) MetricDescriptorMetricKindPtrOutput
}

type metricDescriptorMetricKindPtr string

func MetricDescriptorMetricKindPtr(v string) MetricDescriptorMetricKindPtrInput {
	return (*metricDescriptorMetricKindPtr)(&v)
}

func (*metricDescriptorMetricKindPtr) ElementType() reflect.Type {
	return metricDescriptorMetricKindPtrType
}

func (in *metricDescriptorMetricKindPtr) ToMetricDescriptorMetricKindPtrOutput() MetricDescriptorMetricKindPtrOutput {
	return pulumi.ToOutput(in).(MetricDescriptorMetricKindPtrOutput)
}

func (in *metricDescriptorMetricKindPtr) ToMetricDescriptorMetricKindPtrOutputWithContext(ctx context.Context) MetricDescriptorMetricKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MetricDescriptorMetricKindPtrOutput)
}

// Whether the measurement is an integer, a floating-point number, etc. Some combinations of metric_kind and value_type might not be supported.
type MetricDescriptorValueType string

const (
	// Do not use this default value.
	MetricDescriptorValueTypeValueTypeUnspecified = MetricDescriptorValueType("VALUE_TYPE_UNSPECIFIED")
	// The value is a boolean. This value type can be used only if the metric kind is GAUGE.
	MetricDescriptorValueTypeBool = MetricDescriptorValueType("BOOL")
	// The value is a signed 64-bit integer.
	MetricDescriptorValueTypeInt64 = MetricDescriptorValueType("INT64")
	// The value is a double precision floating point number.
	MetricDescriptorValueTypeDouble = MetricDescriptorValueType("DOUBLE")
	// The value is a text string. This value type can be used only if the metric kind is GAUGE.
	MetricDescriptorValueTypeString = MetricDescriptorValueType("STRING")
	// The value is a Distribution.
	MetricDescriptorValueTypeDistribution = MetricDescriptorValueType("DISTRIBUTION")
	// The value is money.
	MetricDescriptorValueTypeMoney = MetricDescriptorValueType("MONEY")
)

func (MetricDescriptorValueType) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDescriptorValueType)(nil)).Elem()
}

func (e MetricDescriptorValueType) ToMetricDescriptorValueTypeOutput() MetricDescriptorValueTypeOutput {
	return pulumi.ToOutput(e).(MetricDescriptorValueTypeOutput)
}

func (e MetricDescriptorValueType) ToMetricDescriptorValueTypeOutputWithContext(ctx context.Context) MetricDescriptorValueTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MetricDescriptorValueTypeOutput)
}

func (e MetricDescriptorValueType) ToMetricDescriptorValueTypePtrOutput() MetricDescriptorValueTypePtrOutput {
	return e.ToMetricDescriptorValueTypePtrOutputWithContext(context.Background())
}

func (e MetricDescriptorValueType) ToMetricDescriptorValueTypePtrOutputWithContext(ctx context.Context) MetricDescriptorValueTypePtrOutput {
	return MetricDescriptorValueType(e).ToMetricDescriptorValueTypeOutputWithContext(ctx).ToMetricDescriptorValueTypePtrOutputWithContext(ctx)
}

func (e MetricDescriptorValueType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetricDescriptorValueType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetricDescriptorValueType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MetricDescriptorValueType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MetricDescriptorValueTypeOutput struct{ *pulumi.OutputState }

func (MetricDescriptorValueTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDescriptorValueType)(nil)).Elem()
}

func (o MetricDescriptorValueTypeOutput) ToMetricDescriptorValueTypeOutput() MetricDescriptorValueTypeOutput {
	return o
}

func (o MetricDescriptorValueTypeOutput) ToMetricDescriptorValueTypeOutputWithContext(ctx context.Context) MetricDescriptorValueTypeOutput {
	return o
}

func (o MetricDescriptorValueTypeOutput) ToMetricDescriptorValueTypePtrOutput() MetricDescriptorValueTypePtrOutput {
	return o.ToMetricDescriptorValueTypePtrOutputWithContext(context.Background())
}

func (o MetricDescriptorValueTypeOutput) ToMetricDescriptorValueTypePtrOutputWithContext(ctx context.Context) MetricDescriptorValueTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricDescriptorValueType) *MetricDescriptorValueType {
		return &v
	}).(MetricDescriptorValueTypePtrOutput)
}

func (o MetricDescriptorValueTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MetricDescriptorValueTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetricDescriptorValueType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MetricDescriptorValueTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetricDescriptorValueTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetricDescriptorValueType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MetricDescriptorValueTypePtrOutput struct{ *pulumi.OutputState }

func (MetricDescriptorValueTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricDescriptorValueType)(nil)).Elem()
}

func (o MetricDescriptorValueTypePtrOutput) ToMetricDescriptorValueTypePtrOutput() MetricDescriptorValueTypePtrOutput {
	return o
}

func (o MetricDescriptorValueTypePtrOutput) ToMetricDescriptorValueTypePtrOutputWithContext(ctx context.Context) MetricDescriptorValueTypePtrOutput {
	return o
}

func (o MetricDescriptorValueTypePtrOutput) Elem() MetricDescriptorValueTypeOutput {
	return o.ApplyT(func(v *MetricDescriptorValueType) MetricDescriptorValueType {
		if v != nil {
			return *v
		}
		var ret MetricDescriptorValueType
		return ret
	}).(MetricDescriptorValueTypeOutput)
}

func (o MetricDescriptorValueTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetricDescriptorValueTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MetricDescriptorValueType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MetricDescriptorValueTypeInput is an input type that accepts MetricDescriptorValueTypeArgs and MetricDescriptorValueTypeOutput values.
// You can construct a concrete instance of `MetricDescriptorValueTypeInput` via:
//
//	MetricDescriptorValueTypeArgs{...}
type MetricDescriptorValueTypeInput interface {
	pulumi.Input

	ToMetricDescriptorValueTypeOutput() MetricDescriptorValueTypeOutput
	ToMetricDescriptorValueTypeOutputWithContext(context.Context) MetricDescriptorValueTypeOutput
}

var metricDescriptorValueTypePtrType = reflect.TypeOf((**MetricDescriptorValueType)(nil)).Elem()

type MetricDescriptorValueTypePtrInput interface {
	pulumi.Input

	ToMetricDescriptorValueTypePtrOutput() MetricDescriptorValueTypePtrOutput
	ToMetricDescriptorValueTypePtrOutputWithContext(context.Context) MetricDescriptorValueTypePtrOutput
}

type metricDescriptorValueTypePtr string

func MetricDescriptorValueTypePtr(v string) MetricDescriptorValueTypePtrInput {
	return (*metricDescriptorValueTypePtr)(&v)
}

func (*metricDescriptorValueTypePtr) ElementType() reflect.Type {
	return metricDescriptorValueTypePtrType
}

func (in *metricDescriptorValueTypePtr) ToMetricDescriptorValueTypePtrOutput() MetricDescriptorValueTypePtrOutput {
	return pulumi.ToOutput(in).(MetricDescriptorValueTypePtrOutput)
}

func (in *metricDescriptorValueTypePtr) ToMetricDescriptorValueTypePtrOutputWithContext(ctx context.Context) MetricDescriptorValueTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MetricDescriptorValueTypePtrOutput)
}

// Deprecated. The API version that created or updated this metric. The v2 format is used by default and cannot be changed.
type MetricVersion string

const (
	// Logging API v2.
	MetricVersionV2 = MetricVersion("V2")
	// Logging API v1.
	MetricVersionV1 = MetricVersion("V1")
)

func (MetricVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricVersion)(nil)).Elem()
}

func (e MetricVersion) ToMetricVersionOutput() MetricVersionOutput {
	return pulumi.ToOutput(e).(MetricVersionOutput)
}

func (e MetricVersion) ToMetricVersionOutputWithContext(ctx context.Context) MetricVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MetricVersionOutput)
}

func (e MetricVersion) ToMetricVersionPtrOutput() MetricVersionPtrOutput {
	return e.ToMetricVersionPtrOutputWithContext(context.Background())
}

func (e MetricVersion) ToMetricVersionPtrOutputWithContext(ctx context.Context) MetricVersionPtrOutput {
	return MetricVersion(e).ToMetricVersionOutputWithContext(ctx).ToMetricVersionPtrOutputWithContext(ctx)
}

func (e MetricVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetricVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetricVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MetricVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MetricVersionOutput struct{ *pulumi.OutputState }

func (MetricVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricVersion)(nil)).Elem()
}

func (o MetricVersionOutput) ToMetricVersionOutput() MetricVersionOutput {
	return o
}

func (o MetricVersionOutput) ToMetricVersionOutputWithContext(ctx context.Context) MetricVersionOutput {
	return o
}

func (o MetricVersionOutput) ToMetricVersionPtrOutput() MetricVersionPtrOutput {
	return o.ToMetricVersionPtrOutputWithContext(context.Background())
}

func (o MetricVersionOutput) ToMetricVersionPtrOutputWithContext(ctx context.Context) MetricVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricVersion) *MetricVersion {
		return &v
	}).(MetricVersionPtrOutput)
}

func (o MetricVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MetricVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetricVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MetricVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetricVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetricVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MetricVersionPtrOutput struct{ *pulumi.OutputState }

func (MetricVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricVersion)(nil)).Elem()
}

func (o MetricVersionPtrOutput) ToMetricVersionPtrOutput() MetricVersionPtrOutput {
	return o
}

func (o MetricVersionPtrOutput) ToMetricVersionPtrOutputWithContext(ctx context.Context) MetricVersionPtrOutput {
	return o
}

func (o MetricVersionPtrOutput) Elem() MetricVersionOutput {
	return o.ApplyT(func(v *MetricVersion) MetricVersion {
		if v != nil {
			return *v
		}
		var ret MetricVersion
		return ret
	}).(MetricVersionOutput)
}

func (o MetricVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetricVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MetricVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MetricVersionInput is an input type that accepts MetricVersionArgs and MetricVersionOutput values.
// You can construct a concrete instance of `MetricVersionInput` via:
//
//	MetricVersionArgs{...}
type MetricVersionInput interface {
	pulumi.Input

	ToMetricVersionOutput() MetricVersionOutput
	ToMetricVersionOutputWithContext(context.Context) MetricVersionOutput
}

var metricVersionPtrType = reflect.TypeOf((**MetricVersion)(nil)).Elem()

type MetricVersionPtrInput interface {
	pulumi.Input

	ToMetricVersionPtrOutput() MetricVersionPtrOutput
	ToMetricVersionPtrOutputWithContext(context.Context) MetricVersionPtrOutput
}

type metricVersionPtr string

func MetricVersionPtr(v string) MetricVersionPtrInput {
	return (*metricVersionPtr)(&v)
}

func (*metricVersionPtr) ElementType() reflect.Type {
	return metricVersionPtrType
}

func (in *metricVersionPtr) ToMetricVersionPtrOutput() MetricVersionPtrOutput {
	return pulumi.ToOutput(in).(MetricVersionPtrOutput)
}

func (in *metricVersionPtr) ToMetricVersionPtrOutputWithContext(ctx context.Context) MetricVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MetricVersionPtrOutput)
}

// Deprecated. This field is unused.
type OrganizationSinkOutputVersionFormat string

const (
	// An unspecified format version that will default to V2.
	OrganizationSinkOutputVersionFormatVersionFormatUnspecified = OrganizationSinkOutputVersionFormat("VERSION_FORMAT_UNSPECIFIED")
	// LogEntry version 2 format.
	OrganizationSinkOutputVersionFormatV2 = OrganizationSinkOutputVersionFormat("V2")
	// LogEntry version 1 format.
	OrganizationSinkOutputVersionFormatV1 = OrganizationSinkOutputVersionFormat("V1")
)

func (OrganizationSinkOutputVersionFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationSinkOutputVersionFormat)(nil)).Elem()
}

func (e OrganizationSinkOutputVersionFormat) ToOrganizationSinkOutputVersionFormatOutput() OrganizationSinkOutputVersionFormatOutput {
	return pulumi.ToOutput(e).(OrganizationSinkOutputVersionFormatOutput)
}

func (e OrganizationSinkOutputVersionFormat) ToOrganizationSinkOutputVersionFormatOutputWithContext(ctx context.Context) OrganizationSinkOutputVersionFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OrganizationSinkOutputVersionFormatOutput)
}

func (e OrganizationSinkOutputVersionFormat) ToOrganizationSinkOutputVersionFormatPtrOutput() OrganizationSinkOutputVersionFormatPtrOutput {
	return e.ToOrganizationSinkOutputVersionFormatPtrOutputWithContext(context.Background())
}

func (e OrganizationSinkOutputVersionFormat) ToOrganizationSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) OrganizationSinkOutputVersionFormatPtrOutput {
	return OrganizationSinkOutputVersionFormat(e).ToOrganizationSinkOutputVersionFormatOutputWithContext(ctx).ToOrganizationSinkOutputVersionFormatPtrOutputWithContext(ctx)
}

func (e OrganizationSinkOutputVersionFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OrganizationSinkOutputVersionFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OrganizationSinkOutputVersionFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OrganizationSinkOutputVersionFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OrganizationSinkOutputVersionFormatOutput struct{ *pulumi.OutputState }

func (OrganizationSinkOutputVersionFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationSinkOutputVersionFormat)(nil)).Elem()
}

func (o OrganizationSinkOutputVersionFormatOutput) ToOrganizationSinkOutputVersionFormatOutput() OrganizationSinkOutputVersionFormatOutput {
	return o
}

func (o OrganizationSinkOutputVersionFormatOutput) ToOrganizationSinkOutputVersionFormatOutputWithContext(ctx context.Context) OrganizationSinkOutputVersionFormatOutput {
	return o
}

func (o OrganizationSinkOutputVersionFormatOutput) ToOrganizationSinkOutputVersionFormatPtrOutput() OrganizationSinkOutputVersionFormatPtrOutput {
	return o.ToOrganizationSinkOutputVersionFormatPtrOutputWithContext(context.Background())
}

func (o OrganizationSinkOutputVersionFormatOutput) ToOrganizationSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) OrganizationSinkOutputVersionFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationSinkOutputVersionFormat) *OrganizationSinkOutputVersionFormat {
		return &v
	}).(OrganizationSinkOutputVersionFormatPtrOutput)
}

func (o OrganizationSinkOutputVersionFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OrganizationSinkOutputVersionFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OrganizationSinkOutputVersionFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OrganizationSinkOutputVersionFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OrganizationSinkOutputVersionFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OrganizationSinkOutputVersionFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OrganizationSinkOutputVersionFormatPtrOutput struct{ *pulumi.OutputState }

func (OrganizationSinkOutputVersionFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationSinkOutputVersionFormat)(nil)).Elem()
}

func (o OrganizationSinkOutputVersionFormatPtrOutput) ToOrganizationSinkOutputVersionFormatPtrOutput() OrganizationSinkOutputVersionFormatPtrOutput {
	return o
}

func (o OrganizationSinkOutputVersionFormatPtrOutput) ToOrganizationSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) OrganizationSinkOutputVersionFormatPtrOutput {
	return o
}

func (o OrganizationSinkOutputVersionFormatPtrOutput) Elem() OrganizationSinkOutputVersionFormatOutput {
	return o.ApplyT(func(v *OrganizationSinkOutputVersionFormat) OrganizationSinkOutputVersionFormat {
		if v != nil {
			return *v
		}
		var ret OrganizationSinkOutputVersionFormat
		return ret
	}).(OrganizationSinkOutputVersionFormatOutput)
}

func (o OrganizationSinkOutputVersionFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OrganizationSinkOutputVersionFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OrganizationSinkOutputVersionFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OrganizationSinkOutputVersionFormatInput is an input type that accepts OrganizationSinkOutputVersionFormatArgs and OrganizationSinkOutputVersionFormatOutput values.
// You can construct a concrete instance of `OrganizationSinkOutputVersionFormatInput` via:
//
//	OrganizationSinkOutputVersionFormatArgs{...}
type OrganizationSinkOutputVersionFormatInput interface {
	pulumi.Input

	ToOrganizationSinkOutputVersionFormatOutput() OrganizationSinkOutputVersionFormatOutput
	ToOrganizationSinkOutputVersionFormatOutputWithContext(context.Context) OrganizationSinkOutputVersionFormatOutput
}

var organizationSinkOutputVersionFormatPtrType = reflect.TypeOf((**OrganizationSinkOutputVersionFormat)(nil)).Elem()

type OrganizationSinkOutputVersionFormatPtrInput interface {
	pulumi.Input

	ToOrganizationSinkOutputVersionFormatPtrOutput() OrganizationSinkOutputVersionFormatPtrOutput
	ToOrganizationSinkOutputVersionFormatPtrOutputWithContext(context.Context) OrganizationSinkOutputVersionFormatPtrOutput
}

type organizationSinkOutputVersionFormatPtr string

func OrganizationSinkOutputVersionFormatPtr(v string) OrganizationSinkOutputVersionFormatPtrInput {
	return (*organizationSinkOutputVersionFormatPtr)(&v)
}

func (*organizationSinkOutputVersionFormatPtr) ElementType() reflect.Type {
	return organizationSinkOutputVersionFormatPtrType
}

func (in *organizationSinkOutputVersionFormatPtr) ToOrganizationSinkOutputVersionFormatPtrOutput() OrganizationSinkOutputVersionFormatPtrOutput {
	return pulumi.ToOutput(in).(OrganizationSinkOutputVersionFormatPtrOutput)
}

func (in *organizationSinkOutputVersionFormatPtr) ToOrganizationSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) OrganizationSinkOutputVersionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OrganizationSinkOutputVersionFormatPtrOutput)
}

// Deprecated. This field is unused.
type SinkOutputVersionFormat string

const (
	// An unspecified format version that will default to V2.
	SinkOutputVersionFormatVersionFormatUnspecified = SinkOutputVersionFormat("VERSION_FORMAT_UNSPECIFIED")
	// LogEntry version 2 format.
	SinkOutputVersionFormatV2 = SinkOutputVersionFormat("V2")
	// LogEntry version 1 format.
	SinkOutputVersionFormatV1 = SinkOutputVersionFormat("V1")
)

func (SinkOutputVersionFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*SinkOutputVersionFormat)(nil)).Elem()
}

func (e SinkOutputVersionFormat) ToSinkOutputVersionFormatOutput() SinkOutputVersionFormatOutput {
	return pulumi.ToOutput(e).(SinkOutputVersionFormatOutput)
}

func (e SinkOutputVersionFormat) ToSinkOutputVersionFormatOutputWithContext(ctx context.Context) SinkOutputVersionFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SinkOutputVersionFormatOutput)
}

func (e SinkOutputVersionFormat) ToSinkOutputVersionFormatPtrOutput() SinkOutputVersionFormatPtrOutput {
	return e.ToSinkOutputVersionFormatPtrOutputWithContext(context.Background())
}

func (e SinkOutputVersionFormat) ToSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) SinkOutputVersionFormatPtrOutput {
	return SinkOutputVersionFormat(e).ToSinkOutputVersionFormatOutputWithContext(ctx).ToSinkOutputVersionFormatPtrOutputWithContext(ctx)
}

func (e SinkOutputVersionFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SinkOutputVersionFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SinkOutputVersionFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SinkOutputVersionFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SinkOutputVersionFormatOutput struct{ *pulumi.OutputState }

func (SinkOutputVersionFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SinkOutputVersionFormat)(nil)).Elem()
}

func (o SinkOutputVersionFormatOutput) ToSinkOutputVersionFormatOutput() SinkOutputVersionFormatOutput {
	return o
}

func (o SinkOutputVersionFormatOutput) ToSinkOutputVersionFormatOutputWithContext(ctx context.Context) SinkOutputVersionFormatOutput {
	return o
}

func (o SinkOutputVersionFormatOutput) ToSinkOutputVersionFormatPtrOutput() SinkOutputVersionFormatPtrOutput {
	return o.ToSinkOutputVersionFormatPtrOutputWithContext(context.Background())
}

func (o SinkOutputVersionFormatOutput) ToSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) SinkOutputVersionFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SinkOutputVersionFormat) *SinkOutputVersionFormat {
		return &v
	}).(SinkOutputVersionFormatPtrOutput)
}

func (o SinkOutputVersionFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SinkOutputVersionFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SinkOutputVersionFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SinkOutputVersionFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SinkOutputVersionFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SinkOutputVersionFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SinkOutputVersionFormatPtrOutput struct{ *pulumi.OutputState }

func (SinkOutputVersionFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SinkOutputVersionFormat)(nil)).Elem()
}

func (o SinkOutputVersionFormatPtrOutput) ToSinkOutputVersionFormatPtrOutput() SinkOutputVersionFormatPtrOutput {
	return o
}

func (o SinkOutputVersionFormatPtrOutput) ToSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) SinkOutputVersionFormatPtrOutput {
	return o
}

func (o SinkOutputVersionFormatPtrOutput) Elem() SinkOutputVersionFormatOutput {
	return o.ApplyT(func(v *SinkOutputVersionFormat) SinkOutputVersionFormat {
		if v != nil {
			return *v
		}
		var ret SinkOutputVersionFormat
		return ret
	}).(SinkOutputVersionFormatOutput)
}

func (o SinkOutputVersionFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SinkOutputVersionFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SinkOutputVersionFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SinkOutputVersionFormatInput is an input type that accepts SinkOutputVersionFormatArgs and SinkOutputVersionFormatOutput values.
// You can construct a concrete instance of `SinkOutputVersionFormatInput` via:
//
//	SinkOutputVersionFormatArgs{...}
type SinkOutputVersionFormatInput interface {
	pulumi.Input

	ToSinkOutputVersionFormatOutput() SinkOutputVersionFormatOutput
	ToSinkOutputVersionFormatOutputWithContext(context.Context) SinkOutputVersionFormatOutput
}

var sinkOutputVersionFormatPtrType = reflect.TypeOf((**SinkOutputVersionFormat)(nil)).Elem()

type SinkOutputVersionFormatPtrInput interface {
	pulumi.Input

	ToSinkOutputVersionFormatPtrOutput() SinkOutputVersionFormatPtrOutput
	ToSinkOutputVersionFormatPtrOutputWithContext(context.Context) SinkOutputVersionFormatPtrOutput
}

type sinkOutputVersionFormatPtr string

func SinkOutputVersionFormatPtr(v string) SinkOutputVersionFormatPtrInput {
	return (*sinkOutputVersionFormatPtr)(&v)
}

func (*sinkOutputVersionFormatPtr) ElementType() reflect.Type {
	return sinkOutputVersionFormatPtrType
}

func (in *sinkOutputVersionFormatPtr) ToSinkOutputVersionFormatPtrOutput() SinkOutputVersionFormatPtrOutput {
	return pulumi.ToOutput(in).(SinkOutputVersionFormatPtrOutput)
}

func (in *sinkOutputVersionFormatPtr) ToSinkOutputVersionFormatPtrOutputWithContext(ctx context.Context) SinkOutputVersionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SinkOutputVersionFormatPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BillingAccountSinkOutputVersionFormatInput)(nil)).Elem(), BillingAccountSinkOutputVersionFormat("VERSION_FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BillingAccountSinkOutputVersionFormatPtrInput)(nil)).Elem(), BillingAccountSinkOutputVersionFormat("VERSION_FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FolderSinkOutputVersionFormatInput)(nil)).Elem(), FolderSinkOutputVersionFormat("VERSION_FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FolderSinkOutputVersionFormatPtrInput)(nil)).Elem(), FolderSinkOutputVersionFormat("VERSION_FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexConfigTypeInput)(nil)).Elem(), IndexConfigType("INDEX_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexConfigTypePtrInput)(nil)).Elem(), IndexConfigType("INDEX_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LabelDescriptorValueTypeInput)(nil)).Elem(), LabelDescriptorValueType("STRING"))
	pulumi.RegisterInputType(reflect.TypeOf((*LabelDescriptorValueTypePtrInput)(nil)).Elem(), LabelDescriptorValueType("STRING"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetricDescriptorLaunchStageInput)(nil)).Elem(), MetricDescriptorLaunchStage("LAUNCH_STAGE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetricDescriptorLaunchStagePtrInput)(nil)).Elem(), MetricDescriptorLaunchStage("LAUNCH_STAGE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetricDescriptorMetadataLaunchStageInput)(nil)).Elem(), MetricDescriptorMetadataLaunchStage("LAUNCH_STAGE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetricDescriptorMetadataLaunchStagePtrInput)(nil)).Elem(), MetricDescriptorMetadataLaunchStage("LAUNCH_STAGE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetricDescriptorMetricKindInput)(nil)).Elem(), MetricDescriptorMetricKind("METRIC_KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetricDescriptorMetricKindPtrInput)(nil)).Elem(), MetricDescriptorMetricKind("METRIC_KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetricDescriptorValueTypeInput)(nil)).Elem(), MetricDescriptorValueType("VALUE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetricDescriptorValueTypePtrInput)(nil)).Elem(), MetricDescriptorValueType("VALUE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetricVersionInput)(nil)).Elem(), MetricVersion("V2"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetricVersionPtrInput)(nil)).Elem(), MetricVersion("V2"))
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSinkOutputVersionFormatInput)(nil)).Elem(), OrganizationSinkOutputVersionFormat("VERSION_FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSinkOutputVersionFormatPtrInput)(nil)).Elem(), OrganizationSinkOutputVersionFormat("VERSION_FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SinkOutputVersionFormatInput)(nil)).Elem(), SinkOutputVersionFormat("VERSION_FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SinkOutputVersionFormatPtrInput)(nil)).Elem(), SinkOutputVersionFormat("VERSION_FORMAT_UNSPECIFIED"))
	pulumi.RegisterOutputType(BillingAccountSinkOutputVersionFormatOutput{})
	pulumi.RegisterOutputType(BillingAccountSinkOutputVersionFormatPtrOutput{})
	pulumi.RegisterOutputType(FolderSinkOutputVersionFormatOutput{})
	pulumi.RegisterOutputType(FolderSinkOutputVersionFormatPtrOutput{})
	pulumi.RegisterOutputType(IndexConfigTypeOutput{})
	pulumi.RegisterOutputType(IndexConfigTypePtrOutput{})
	pulumi.RegisterOutputType(LabelDescriptorValueTypeOutput{})
	pulumi.RegisterOutputType(LabelDescriptorValueTypePtrOutput{})
	pulumi.RegisterOutputType(MetricDescriptorLaunchStageOutput{})
	pulumi.RegisterOutputType(MetricDescriptorLaunchStagePtrOutput{})
	pulumi.RegisterOutputType(MetricDescriptorMetadataLaunchStageOutput{})
	pulumi.RegisterOutputType(MetricDescriptorMetadataLaunchStagePtrOutput{})
	pulumi.RegisterOutputType(MetricDescriptorMetricKindOutput{})
	pulumi.RegisterOutputType(MetricDescriptorMetricKindPtrOutput{})
	pulumi.RegisterOutputType(MetricDescriptorValueTypeOutput{})
	pulumi.RegisterOutputType(MetricDescriptorValueTypePtrOutput{})
	pulumi.RegisterOutputType(MetricVersionOutput{})
	pulumi.RegisterOutputType(MetricVersionPtrOutput{})
	pulumi.RegisterOutputType(OrganizationSinkOutputVersionFormatOutput{})
	pulumi.RegisterOutputType(OrganizationSinkOutputVersionFormatPtrOutput{})
	pulumi.RegisterOutputType(SinkOutputVersionFormatOutput{})
	pulumi.RegisterOutputType(SinkOutputVersionFormatPtrOutput{})
}
