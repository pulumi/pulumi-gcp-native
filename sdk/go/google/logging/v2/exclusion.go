// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new exclusion in the _Default sink in a specified parent resource. Only log entries belonging to that resource can be excluded. You can have up to 10 exclusions in a resource.
type Exclusion struct {
	pulumi.CustomResourceState

	// The creation timestamp of the exclusion.This field may not be present for older exclusions.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. A description of this exclusion.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. If set to True, then this exclusion is disabled and it does not exclude any log entries. You can update an exclusion to change the value of this field.
	Disabled pulumi.BoolOutput `pulumi:"disabled"`
	// An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-queries) that matches the log entries to be excluded. By using the sample function (https://cloud.google.com/logging/docs/view/advanced-queries#sample), you can exclude less than 100% of the matching log entries.For example, the following query matches 99% of low-severity log entries from Google Cloud Storage buckets:resource.type=gcs_bucket severity<ERROR sample(insertId, 0.99)
	Filter pulumi.StringOutput `pulumi:"filter"`
	// A client-assigned identifier, such as "load-balancer-exclusion". Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The last update timestamp of the exclusion.This field may not be present for older exclusions.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewExclusion registers a new resource with the given unique name, arguments, and options.
func NewExclusion(ctx *pulumi.Context,
	name string, args *ExclusionArgs, opts ...pulumi.ResourceOption) (*Exclusion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Filter == nil {
		return nil, errors.New("invalid value for required argument 'Filter'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Exclusion
	err := ctx.RegisterResource("google-native:logging/v2:Exclusion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExclusion gets an existing Exclusion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExclusion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExclusionState, opts ...pulumi.ResourceOption) (*Exclusion, error) {
	var resource Exclusion
	err := ctx.ReadResource("google-native:logging/v2:Exclusion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Exclusion resources.
type exclusionState struct {
}

type ExclusionState struct {
}

func (ExclusionState) ElementType() reflect.Type {
	return reflect.TypeOf((*exclusionState)(nil)).Elem()
}

type exclusionArgs struct {
	// Optional. A description of this exclusion.
	Description *string `pulumi:"description"`
	// Optional. If set to True, then this exclusion is disabled and it does not exclude any log entries. You can update an exclusion to change the value of this field.
	Disabled *bool `pulumi:"disabled"`
	// An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-queries) that matches the log entries to be excluded. By using the sample function (https://cloud.google.com/logging/docs/view/advanced-queries#sample), you can exclude less than 100% of the matching log entries.For example, the following query matches 99% of low-severity log entries from Google Cloud Storage buckets:resource.type=gcs_bucket severity<ERROR sample(insertId, 0.99)
	Filter string `pulumi:"filter"`
	// A client-assigned identifier, such as "load-balancer-exclusion". Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a Exclusion resource.
type ExclusionArgs struct {
	// Optional. A description of this exclusion.
	Description pulumi.StringPtrInput
	// Optional. If set to True, then this exclusion is disabled and it does not exclude any log entries. You can update an exclusion to change the value of this field.
	Disabled pulumi.BoolPtrInput
	// An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-queries) that matches the log entries to be excluded. By using the sample function (https://cloud.google.com/logging/docs/view/advanced-queries#sample), you can exclude less than 100% of the matching log entries.For example, the following query matches 99% of low-severity log entries from Google Cloud Storage buckets:resource.type=gcs_bucket severity<ERROR sample(insertId, 0.99)
	Filter pulumi.StringInput
	// A client-assigned identifier, such as "load-balancer-exclusion". Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
}

func (ExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*exclusionArgs)(nil)).Elem()
}

type ExclusionInput interface {
	pulumi.Input

	ToExclusionOutput() ExclusionOutput
	ToExclusionOutputWithContext(ctx context.Context) ExclusionOutput
}

func (*Exclusion) ElementType() reflect.Type {
	return reflect.TypeOf((**Exclusion)(nil)).Elem()
}

func (i *Exclusion) ToExclusionOutput() ExclusionOutput {
	return i.ToExclusionOutputWithContext(context.Background())
}

func (i *Exclusion) ToExclusionOutputWithContext(ctx context.Context) ExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExclusionOutput)
}

type ExclusionOutput struct{ *pulumi.OutputState }

func (ExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Exclusion)(nil)).Elem()
}

func (o ExclusionOutput) ToExclusionOutput() ExclusionOutput {
	return o
}

func (o ExclusionOutput) ToExclusionOutputWithContext(ctx context.Context) ExclusionOutput {
	return o
}

// The creation timestamp of the exclusion.This field may not be present for older exclusions.
func (o ExclusionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Exclusion) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. A description of this exclusion.
func (o ExclusionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Exclusion) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. If set to True, then this exclusion is disabled and it does not exclude any log entries. You can update an exclusion to change the value of this field.
func (o ExclusionOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Exclusion) pulumi.BoolOutput { return v.Disabled }).(pulumi.BoolOutput)
}

// An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-queries) that matches the log entries to be excluded. By using the sample function (https://cloud.google.com/logging/docs/view/advanced-queries#sample), you can exclude less than 100% of the matching log entries.For example, the following query matches 99% of low-severity log entries from Google Cloud Storage buckets:resource.type=gcs_bucket severity<ERROR sample(insertId, 0.99)
func (o ExclusionOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *Exclusion) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

// A client-assigned identifier, such as "load-balancer-exclusion". Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
func (o ExclusionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Exclusion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ExclusionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Exclusion) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The last update timestamp of the exclusion.This field may not be present for older exclusions.
func (o ExclusionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Exclusion) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExclusionInput)(nil)).Elem(), &Exclusion{})
	pulumi.RegisterOutputType(ExclusionOutput{})
}
