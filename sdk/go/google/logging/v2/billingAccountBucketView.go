// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a view over logs in a bucket. A bucket may contain a maximum of 50 views.
type BillingAccountBucketView struct {
	pulumi.CustomResourceState
}

// NewBillingAccountBucketView registers a new resource with the given unique name, arguments, and options.
func NewBillingAccountBucketView(ctx *pulumi.Context,
	name string, args *BillingAccountBucketViewArgs, opts ...pulumi.ResourceOption) (*BillingAccountBucketView, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BillingAccountsId == nil {
		return nil, errors.New("invalid value for required argument 'BillingAccountsId'")
	}
	if args.BucketsId == nil {
		return nil, errors.New("invalid value for required argument 'BucketsId'")
	}
	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.ViewsId == nil {
		return nil, errors.New("invalid value for required argument 'ViewsId'")
	}
	var resource BillingAccountBucketView
	err := ctx.RegisterResource("google-cloud:logging/v2:BillingAccountBucketView", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBillingAccountBucketView gets an existing BillingAccountBucketView resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBillingAccountBucketView(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BillingAccountBucketViewState, opts ...pulumi.ResourceOption) (*BillingAccountBucketView, error) {
	var resource BillingAccountBucketView
	err := ctx.ReadResource("google-cloud:logging/v2:BillingAccountBucketView", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BillingAccountBucketView resources.
type billingAccountBucketViewState struct {
}

type BillingAccountBucketViewState struct {
}

func (BillingAccountBucketViewState) ElementType() reflect.Type {
	return reflect.TypeOf((*billingAccountBucketViewState)(nil)).Elem()
}

type billingAccountBucketViewArgs struct {
	BillingAccountsId string `pulumi:"billingAccountsId"`
	BucketsId         string `pulumi:"bucketsId"`
	// Describes this view.
	Description *string `pulumi:"description"`
	// Filter that restricts which log entries in a bucket are visible in this view. Filters are restricted to be a logical AND of ==/!= of any of the following: originating project/folder/organization/billing account. resource type log id Example: SOURCE("projects/myproject") AND resource.type = "gce_instance" AND LOG_ID("stdout")
	Filter      *string `pulumi:"filter"`
	LocationsId string  `pulumi:"locationsId"`
	// The resource name of the view. For example "projects/my-project-id/locations/my-location/buckets/my-bucket-id/views/my-view
	Name    *string `pulumi:"name"`
	ViewsId string  `pulumi:"viewsId"`
}

// The set of arguments for constructing a BillingAccountBucketView resource.
type BillingAccountBucketViewArgs struct {
	BillingAccountsId pulumi.StringInput
	BucketsId         pulumi.StringInput
	// Describes this view.
	Description pulumi.StringPtrInput
	// Filter that restricts which log entries in a bucket are visible in this view. Filters are restricted to be a logical AND of ==/!= of any of the following: originating project/folder/organization/billing account. resource type log id Example: SOURCE("projects/myproject") AND resource.type = "gce_instance" AND LOG_ID("stdout")
	Filter      pulumi.StringPtrInput
	LocationsId pulumi.StringInput
	// The resource name of the view. For example "projects/my-project-id/locations/my-location/buckets/my-bucket-id/views/my-view
	Name    pulumi.StringPtrInput
	ViewsId pulumi.StringInput
}

func (BillingAccountBucketViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*billingAccountBucketViewArgs)(nil)).Elem()
}

type BillingAccountBucketViewInput interface {
	pulumi.Input

	ToBillingAccountBucketViewOutput() BillingAccountBucketViewOutput
	ToBillingAccountBucketViewOutputWithContext(ctx context.Context) BillingAccountBucketViewOutput
}

func (*BillingAccountBucketView) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingAccountBucketView)(nil))
}

func (i *BillingAccountBucketView) ToBillingAccountBucketViewOutput() BillingAccountBucketViewOutput {
	return i.ToBillingAccountBucketViewOutputWithContext(context.Background())
}

func (i *BillingAccountBucketView) ToBillingAccountBucketViewOutputWithContext(ctx context.Context) BillingAccountBucketViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingAccountBucketViewOutput)
}

type BillingAccountBucketViewOutput struct {
	*pulumi.OutputState
}

func (BillingAccountBucketViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingAccountBucketView)(nil))
}

func (o BillingAccountBucketViewOutput) ToBillingAccountBucketViewOutput() BillingAccountBucketViewOutput {
	return o
}

func (o BillingAccountBucketViewOutput) ToBillingAccountBucketViewOutputWithContext(ctx context.Context) BillingAccountBucketViewOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(BillingAccountBucketViewOutput{})
}
