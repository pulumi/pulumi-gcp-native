// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a config for discovery to scan and profile storage.
// Auto-naming is currently not supported for this resource.
type OrganizationDiscoveryConfig struct {
	pulumi.CustomResourceState

	// Actions to execute at the completion of scanning.
	Actions GooglePrivacyDlpV2DataProfileActionResponseArrayOutput `pulumi:"actions"`
	// The creation timestamp of a DiscoveryConfig.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Display name (max 100 chars)
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// A stream of errors encountered when the config was activated. Repeated errors may result in the config automatically being paused. Output only field. Will return the last 100 errors. Whenever the config is modified this list will be cleared.
	Errors GooglePrivacyDlpV2ErrorResponseArrayOutput `pulumi:"errors"`
	// Detection logic for profile generation. Not all template features are used by Discovery. FindingLimits, include_quote and exclude_info_types have no impact on Discovery. Multiple templates may be provided if there is data in multiple regions. At most one template must be specified per-region (including "global"). Each region is scanned using the applicable template. If no region-specific template is specified, but a "global" template is specified, it will be copied to that region and used instead. If no global or region-specific template is provided for a region with data, that region's data will not be scanned. For more information, see https://cloud.google.com/dlp/docs/data-profiles#data-residency.
	InspectTemplates pulumi.StringArrayOutput `pulumi:"inspectTemplates"`
	// The timestamp of the last time this config was executed.
	LastRunTime pulumi.StringOutput `pulumi:"lastRunTime"`
	Location    pulumi.StringOutput `pulumi:"location"`
	// Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig is created, for example `projects/dlp-test-project/locations/global/discoveryConfigs/53234423`.
	Name pulumi.StringOutput `pulumi:"name"`
	// Only set when the parent is an org.
	OrgConfig      GooglePrivacyDlpV2OrgConfigResponseOutput `pulumi:"orgConfig"`
	OrganizationId pulumi.StringOutput                       `pulumi:"organizationId"`
	// A status for this configuration.
	Status pulumi.StringOutput `pulumi:"status"`
	// Target to match against for determining what to scan and how frequently.
	Targets GooglePrivacyDlpV2DiscoveryTargetResponseArrayOutput `pulumi:"targets"`
	// The last update timestamp of a DiscoveryConfig.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewOrganizationDiscoveryConfig registers a new resource with the given unique name, arguments, and options.
func NewOrganizationDiscoveryConfig(ctx *pulumi.Context,
	name string, args *OrganizationDiscoveryConfigArgs, opts ...pulumi.ResourceOption) (*OrganizationDiscoveryConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"organizationId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationDiscoveryConfig
	err := ctx.RegisterResource("google-native:dlp/v2:OrganizationDiscoveryConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationDiscoveryConfig gets an existing OrganizationDiscoveryConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationDiscoveryConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationDiscoveryConfigState, opts ...pulumi.ResourceOption) (*OrganizationDiscoveryConfig, error) {
	var resource OrganizationDiscoveryConfig
	err := ctx.ReadResource("google-native:dlp/v2:OrganizationDiscoveryConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationDiscoveryConfig resources.
type organizationDiscoveryConfigState struct {
}

type OrganizationDiscoveryConfigState struct {
}

func (OrganizationDiscoveryConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationDiscoveryConfigState)(nil)).Elem()
}

type organizationDiscoveryConfigArgs struct {
	// Actions to execute at the completion of scanning.
	Actions []GooglePrivacyDlpV2DataProfileAction `pulumi:"actions"`
	// The config ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
	ConfigId *string `pulumi:"configId"`
	// Display name (max 100 chars)
	DisplayName *string `pulumi:"displayName"`
	// Detection logic for profile generation. Not all template features are used by Discovery. FindingLimits, include_quote and exclude_info_types have no impact on Discovery. Multiple templates may be provided if there is data in multiple regions. At most one template must be specified per-region (including "global"). Each region is scanned using the applicable template. If no region-specific template is specified, but a "global" template is specified, it will be copied to that region and used instead. If no global or region-specific template is provided for a region with data, that region's data will not be scanned. For more information, see https://cloud.google.com/dlp/docs/data-profiles#data-residency.
	InspectTemplates []string `pulumi:"inspectTemplates"`
	Location         *string  `pulumi:"location"`
	// Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig is created, for example `projects/dlp-test-project/locations/global/discoveryConfigs/53234423`.
	Name *string `pulumi:"name"`
	// Only set when the parent is an org.
	OrgConfig      *GooglePrivacyDlpV2OrgConfig `pulumi:"orgConfig"`
	OrganizationId string                       `pulumi:"organizationId"`
	// A status for this configuration.
	Status OrganizationDiscoveryConfigStatus `pulumi:"status"`
	// Target to match against for determining what to scan and how frequently.
	Targets []GooglePrivacyDlpV2DiscoveryTarget `pulumi:"targets"`
}

// The set of arguments for constructing a OrganizationDiscoveryConfig resource.
type OrganizationDiscoveryConfigArgs struct {
	// Actions to execute at the completion of scanning.
	Actions GooglePrivacyDlpV2DataProfileActionArrayInput
	// The config ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
	ConfigId pulumi.StringPtrInput
	// Display name (max 100 chars)
	DisplayName pulumi.StringPtrInput
	// Detection logic for profile generation. Not all template features are used by Discovery. FindingLimits, include_quote and exclude_info_types have no impact on Discovery. Multiple templates may be provided if there is data in multiple regions. At most one template must be specified per-region (including "global"). Each region is scanned using the applicable template. If no region-specific template is specified, but a "global" template is specified, it will be copied to that region and used instead. If no global or region-specific template is provided for a region with data, that region's data will not be scanned. For more information, see https://cloud.google.com/dlp/docs/data-profiles#data-residency.
	InspectTemplates pulumi.StringArrayInput
	Location         pulumi.StringPtrInput
	// Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig is created, for example `projects/dlp-test-project/locations/global/discoveryConfigs/53234423`.
	Name pulumi.StringPtrInput
	// Only set when the parent is an org.
	OrgConfig      GooglePrivacyDlpV2OrgConfigPtrInput
	OrganizationId pulumi.StringInput
	// A status for this configuration.
	Status OrganizationDiscoveryConfigStatusInput
	// Target to match against for determining what to scan and how frequently.
	Targets GooglePrivacyDlpV2DiscoveryTargetArrayInput
}

func (OrganizationDiscoveryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationDiscoveryConfigArgs)(nil)).Elem()
}

type OrganizationDiscoveryConfigInput interface {
	pulumi.Input

	ToOrganizationDiscoveryConfigOutput() OrganizationDiscoveryConfigOutput
	ToOrganizationDiscoveryConfigOutputWithContext(ctx context.Context) OrganizationDiscoveryConfigOutput
}

func (*OrganizationDiscoveryConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationDiscoveryConfig)(nil)).Elem()
}

func (i *OrganizationDiscoveryConfig) ToOrganizationDiscoveryConfigOutput() OrganizationDiscoveryConfigOutput {
	return i.ToOrganizationDiscoveryConfigOutputWithContext(context.Background())
}

func (i *OrganizationDiscoveryConfig) ToOrganizationDiscoveryConfigOutputWithContext(ctx context.Context) OrganizationDiscoveryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationDiscoveryConfigOutput)
}

type OrganizationDiscoveryConfigOutput struct{ *pulumi.OutputState }

func (OrganizationDiscoveryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationDiscoveryConfig)(nil)).Elem()
}

func (o OrganizationDiscoveryConfigOutput) ToOrganizationDiscoveryConfigOutput() OrganizationDiscoveryConfigOutput {
	return o
}

func (o OrganizationDiscoveryConfigOutput) ToOrganizationDiscoveryConfigOutputWithContext(ctx context.Context) OrganizationDiscoveryConfigOutput {
	return o
}

// Actions to execute at the completion of scanning.
func (o OrganizationDiscoveryConfigOutput) Actions() GooglePrivacyDlpV2DataProfileActionResponseArrayOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryConfig) GooglePrivacyDlpV2DataProfileActionResponseArrayOutput {
		return v.Actions
	}).(GooglePrivacyDlpV2DataProfileActionResponseArrayOutput)
}

// The creation timestamp of a DiscoveryConfig.
func (o OrganizationDiscoveryConfigOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryConfig) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Display name (max 100 chars)
func (o OrganizationDiscoveryConfigOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryConfig) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// A stream of errors encountered when the config was activated. Repeated errors may result in the config automatically being paused. Output only field. Will return the last 100 errors. Whenever the config is modified this list will be cleared.
func (o OrganizationDiscoveryConfigOutput) Errors() GooglePrivacyDlpV2ErrorResponseArrayOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryConfig) GooglePrivacyDlpV2ErrorResponseArrayOutput { return v.Errors }).(GooglePrivacyDlpV2ErrorResponseArrayOutput)
}

// Detection logic for profile generation. Not all template features are used by Discovery. FindingLimits, include_quote and exclude_info_types have no impact on Discovery. Multiple templates may be provided if there is data in multiple regions. At most one template must be specified per-region (including "global"). Each region is scanned using the applicable template. If no region-specific template is specified, but a "global" template is specified, it will be copied to that region and used instead. If no global or region-specific template is provided for a region with data, that region's data will not be scanned. For more information, see https://cloud.google.com/dlp/docs/data-profiles#data-residency.
func (o OrganizationDiscoveryConfigOutput) InspectTemplates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryConfig) pulumi.StringArrayOutput { return v.InspectTemplates }).(pulumi.StringArrayOutput)
}

// The timestamp of the last time this config was executed.
func (o OrganizationDiscoveryConfigOutput) LastRunTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryConfig) pulumi.StringOutput { return v.LastRunTime }).(pulumi.StringOutput)
}

func (o OrganizationDiscoveryConfigOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryConfig) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig is created, for example `projects/dlp-test-project/locations/global/discoveryConfigs/53234423`.
func (o OrganizationDiscoveryConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Only set when the parent is an org.
func (o OrganizationDiscoveryConfigOutput) OrgConfig() GooglePrivacyDlpV2OrgConfigResponseOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryConfig) GooglePrivacyDlpV2OrgConfigResponseOutput { return v.OrgConfig }).(GooglePrivacyDlpV2OrgConfigResponseOutput)
}

func (o OrganizationDiscoveryConfigOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryConfig) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// A status for this configuration.
func (o OrganizationDiscoveryConfigOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryConfig) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Target to match against for determining what to scan and how frequently.
func (o OrganizationDiscoveryConfigOutput) Targets() GooglePrivacyDlpV2DiscoveryTargetResponseArrayOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryConfig) GooglePrivacyDlpV2DiscoveryTargetResponseArrayOutput {
		return v.Targets
	}).(GooglePrivacyDlpV2DiscoveryTargetResponseArrayOutput)
}

// The last update timestamp of a DiscoveryConfig.
func (o OrganizationDiscoveryConfigOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryConfig) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationDiscoveryConfigInput)(nil)).Elem(), &OrganizationDiscoveryConfig{})
	pulumi.RegisterOutputType(OrganizationDiscoveryConfigOutput{})
}
