// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new job to inspect storage or calculate risk metrics. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more. When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.
// Auto-naming is currently not supported for this resource.
type DlpJob struct {
	pulumi.CustomResourceState

	// Time when the job was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Time when the job finished.
	EndTime pulumi.StringOutput `pulumi:"endTime"`
	// A stream of errors encountered running the job.
	Errors GooglePrivacyDlpV2ErrorResponseArrayOutput `pulumi:"errors"`
	// Results from inspecting a data source.
	InspectDetails GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput `pulumi:"inspectDetails"`
	// If created by a job trigger, the resource name of the trigger that instantiated the job.
	JobTriggerName pulumi.StringOutput `pulumi:"jobTriggerName"`
	Location       pulumi.StringOutput `pulumi:"location"`
	// The server-assigned name.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Results from analyzing risk of a data source.
	RiskDetails GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput `pulumi:"riskDetails"`
	// Time when the job started.
	StartTime pulumi.StringOutput `pulumi:"startTime"`
	// State of a job.
	State pulumi.StringOutput `pulumi:"state"`
	// The type of job.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDlpJob registers a new resource with the given unique name, arguments, and options.
func NewDlpJob(ctx *pulumi.Context,
	name string, args *DlpJobArgs, opts ...pulumi.ResourceOption) (*DlpJob, error) {
	if args == nil {
		args = &DlpJobArgs{}
	}

	var resource DlpJob
	err := ctx.RegisterResource("google-native:dlp/v2:DlpJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDlpJob gets an existing DlpJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDlpJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DlpJobState, opts ...pulumi.ResourceOption) (*DlpJob, error) {
	var resource DlpJob
	err := ctx.ReadResource("google-native:dlp/v2:DlpJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DlpJob resources.
type dlpJobState struct {
}

type DlpJobState struct {
}

func (DlpJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*dlpJobState)(nil)).Elem()
}

type dlpJobArgs struct {
	// An inspection job scans a storage repository for InfoTypes.
	InspectJob *GooglePrivacyDlpV2InspectJobConfig `pulumi:"inspectJob"`
	// The job id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
	JobId *string `pulumi:"jobId"`
	// Deprecated. This field has no effect.
	//
	// Deprecated: Deprecated. This field has no effect.
	Location *string `pulumi:"location"`
	Project  *string `pulumi:"project"`
	// A risk analysis job calculates re-identification risk metrics for a BigQuery table.
	RiskJob *GooglePrivacyDlpV2RiskAnalysisJobConfig `pulumi:"riskJob"`
}

// The set of arguments for constructing a DlpJob resource.
type DlpJobArgs struct {
	// An inspection job scans a storage repository for InfoTypes.
	InspectJob GooglePrivacyDlpV2InspectJobConfigPtrInput
	// The job id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
	JobId pulumi.StringPtrInput
	// Deprecated. This field has no effect.
	//
	// Deprecated: Deprecated. This field has no effect.
	Location pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// A risk analysis job calculates re-identification risk metrics for a BigQuery table.
	RiskJob GooglePrivacyDlpV2RiskAnalysisJobConfigPtrInput
}

func (DlpJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dlpJobArgs)(nil)).Elem()
}

type DlpJobInput interface {
	pulumi.Input

	ToDlpJobOutput() DlpJobOutput
	ToDlpJobOutputWithContext(ctx context.Context) DlpJobOutput
}

func (*DlpJob) ElementType() reflect.Type {
	return reflect.TypeOf((**DlpJob)(nil)).Elem()
}

func (i *DlpJob) ToDlpJobOutput() DlpJobOutput {
	return i.ToDlpJobOutputWithContext(context.Background())
}

func (i *DlpJob) ToDlpJobOutputWithContext(ctx context.Context) DlpJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DlpJobOutput)
}

type DlpJobOutput struct{ *pulumi.OutputState }

func (DlpJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DlpJob)(nil)).Elem()
}

func (o DlpJobOutput) ToDlpJobOutput() DlpJobOutput {
	return o
}

func (o DlpJobOutput) ToDlpJobOutputWithContext(ctx context.Context) DlpJobOutput {
	return o
}

// Time when the job was created.
func (o DlpJobOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpJob) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Time when the job finished.
func (o DlpJobOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpJob) pulumi.StringOutput { return v.EndTime }).(pulumi.StringOutput)
}

// A stream of errors encountered running the job.
func (o DlpJobOutput) Errors() GooglePrivacyDlpV2ErrorResponseArrayOutput {
	return o.ApplyT(func(v *DlpJob) GooglePrivacyDlpV2ErrorResponseArrayOutput { return v.Errors }).(GooglePrivacyDlpV2ErrorResponseArrayOutput)
}

// Results from inspecting a data source.
func (o DlpJobOutput) InspectDetails() GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput {
	return o.ApplyT(func(v *DlpJob) GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput { return v.InspectDetails }).(GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput)
}

// If created by a job trigger, the resource name of the trigger that instantiated the job.
func (o DlpJobOutput) JobTriggerName() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpJob) pulumi.StringOutput { return v.JobTriggerName }).(pulumi.StringOutput)
}

func (o DlpJobOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpJob) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The server-assigned name.
func (o DlpJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpJob) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DlpJobOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpJob) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Results from analyzing risk of a data source.
func (o DlpJobOutput) RiskDetails() GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput {
	return o.ApplyT(func(v *DlpJob) GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput { return v.RiskDetails }).(GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput)
}

// Time when the job started.
func (o DlpJobOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpJob) pulumi.StringOutput { return v.StartTime }).(pulumi.StringOutput)
}

// State of a job.
func (o DlpJobOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpJob) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The type of job.
func (o DlpJobOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DlpJob) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DlpJobInput)(nil)).Elem(), &DlpJob{})
	pulumi.RegisterOutputType(DlpJobOutput{})
}
