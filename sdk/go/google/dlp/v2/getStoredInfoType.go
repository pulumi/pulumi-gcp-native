// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
func LookupStoredInfoType(ctx *pulumi.Context, args *LookupStoredInfoTypeArgs, opts ...pulumi.InvokeOption) (*LookupStoredInfoTypeResult, error) {
	var rv LookupStoredInfoTypeResult
	err := ctx.Invoke("google-native:dlp/v2:getStoredInfoType", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStoredInfoTypeArgs struct {
	Location         string  `pulumi:"location"`
	Project          *string `pulumi:"project"`
	StoredInfoTypeId string  `pulumi:"storedInfoTypeId"`
}

type LookupStoredInfoTypeResult struct {
	// Current version of the stored info type.
	CurrentVersion GooglePrivacyDlpV2StoredInfoTypeVersionResponse `pulumi:"currentVersion"`
	// Resource name.
	Name string `pulumi:"name"`
	// Pending versions of the stored info type. Empty if no versions are pending.
	PendingVersions []GooglePrivacyDlpV2StoredInfoTypeVersionResponse `pulumi:"pendingVersions"`
}

func LookupStoredInfoTypeOutput(ctx *pulumi.Context, args LookupStoredInfoTypeOutputArgs, opts ...pulumi.InvokeOption) LookupStoredInfoTypeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStoredInfoTypeResult, error) {
			args := v.(LookupStoredInfoTypeArgs)
			r, err := LookupStoredInfoType(ctx, &args, opts...)
			return *r, err
		}).(LookupStoredInfoTypeResultOutput)
}

type LookupStoredInfoTypeOutputArgs struct {
	Location         pulumi.StringInput    `pulumi:"location"`
	Project          pulumi.StringPtrInput `pulumi:"project"`
	StoredInfoTypeId pulumi.StringInput    `pulumi:"storedInfoTypeId"`
}

func (LookupStoredInfoTypeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStoredInfoTypeArgs)(nil)).Elem()
}

type LookupStoredInfoTypeResultOutput struct{ *pulumi.OutputState }

func (LookupStoredInfoTypeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStoredInfoTypeResult)(nil)).Elem()
}

func (o LookupStoredInfoTypeResultOutput) ToLookupStoredInfoTypeResultOutput() LookupStoredInfoTypeResultOutput {
	return o
}

func (o LookupStoredInfoTypeResultOutput) ToLookupStoredInfoTypeResultOutputWithContext(ctx context.Context) LookupStoredInfoTypeResultOutput {
	return o
}

// Current version of the stored info type.
func (o LookupStoredInfoTypeResultOutput) CurrentVersion() GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput {
	return o.ApplyT(func(v LookupStoredInfoTypeResult) GooglePrivacyDlpV2StoredInfoTypeVersionResponse {
		return v.CurrentVersion
	}).(GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput)
}

// Resource name.
func (o LookupStoredInfoTypeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStoredInfoTypeResult) string { return v.Name }).(pulumi.StringOutput)
}

// Pending versions of the stored info type. Empty if no versions are pending.
func (o LookupStoredInfoTypeResultOutput) PendingVersions() GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput {
	return o.ApplyT(func(v LookupStoredInfoTypeResult) []GooglePrivacyDlpV2StoredInfoTypeVersionResponse {
		return v.PendingVersions
	}).(GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStoredInfoTypeResultOutput{})
}
