// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A task to execute on the completion of a job. See https://cloud.google.com/dlp/docs/concepts-actions to learn more.
type GooglePrivacyDlpV2Action struct {
	// Enable email notification for project owners and editors on job's completion/failure.
	JobNotificationEmails *GooglePrivacyDlpV2JobNotificationEmails `pulumi:"jobNotificationEmails"`
	// Publish a notification to a pubsub topic.
	PubSub *GooglePrivacyDlpV2PublishToPubSub `pulumi:"pubSub"`
	// Publish findings to Cloud Datahub.
	PublishFindingsToCloudDataCatalog *GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog `pulumi:"publishFindingsToCloudDataCatalog"`
	// Publish summary to Cloud Security Command Center (Alpha).
	PublishSummaryToCscc *GooglePrivacyDlpV2PublishSummaryToCscc `pulumi:"publishSummaryToCscc"`
	// Enable Stackdriver metric dlp.googleapis.com/finding_count.
	PublishToStackdriver *GooglePrivacyDlpV2PublishToStackdriver `pulumi:"publishToStackdriver"`
	// Save resulting findings in a provided location.
	SaveFindings *GooglePrivacyDlpV2SaveFindings `pulumi:"saveFindings"`
}

// GooglePrivacyDlpV2ActionInput is an input type that accepts GooglePrivacyDlpV2ActionArgs and GooglePrivacyDlpV2ActionOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ActionInput` via:
//
//          GooglePrivacyDlpV2ActionArgs{...}
type GooglePrivacyDlpV2ActionInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ActionOutput() GooglePrivacyDlpV2ActionOutput
	ToGooglePrivacyDlpV2ActionOutputWithContext(context.Context) GooglePrivacyDlpV2ActionOutput
}

// A task to execute on the completion of a job. See https://cloud.google.com/dlp/docs/concepts-actions to learn more.
type GooglePrivacyDlpV2ActionArgs struct {
	// Enable email notification for project owners and editors on job's completion/failure.
	JobNotificationEmails GooglePrivacyDlpV2JobNotificationEmailsPtrInput `pulumi:"jobNotificationEmails"`
	// Publish a notification to a pubsub topic.
	PubSub GooglePrivacyDlpV2PublishToPubSubPtrInput `pulumi:"pubSub"`
	// Publish findings to Cloud Datahub.
	PublishFindingsToCloudDataCatalog GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrInput `pulumi:"publishFindingsToCloudDataCatalog"`
	// Publish summary to Cloud Security Command Center (Alpha).
	PublishSummaryToCscc GooglePrivacyDlpV2PublishSummaryToCsccPtrInput `pulumi:"publishSummaryToCscc"`
	// Enable Stackdriver metric dlp.googleapis.com/finding_count.
	PublishToStackdriver GooglePrivacyDlpV2PublishToStackdriverPtrInput `pulumi:"publishToStackdriver"`
	// Save resulting findings in a provided location.
	SaveFindings GooglePrivacyDlpV2SaveFindingsPtrInput `pulumi:"saveFindings"`
}

func (GooglePrivacyDlpV2ActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Action)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ActionArgs) ToGooglePrivacyDlpV2ActionOutput() GooglePrivacyDlpV2ActionOutput {
	return i.ToGooglePrivacyDlpV2ActionOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ActionArgs) ToGooglePrivacyDlpV2ActionOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ActionOutput)
}

// GooglePrivacyDlpV2ActionArrayInput is an input type that accepts GooglePrivacyDlpV2ActionArray and GooglePrivacyDlpV2ActionArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ActionArrayInput` via:
//
//          GooglePrivacyDlpV2ActionArray{ GooglePrivacyDlpV2ActionArgs{...} }
type GooglePrivacyDlpV2ActionArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ActionArrayOutput() GooglePrivacyDlpV2ActionArrayOutput
	ToGooglePrivacyDlpV2ActionArrayOutputWithContext(context.Context) GooglePrivacyDlpV2ActionArrayOutput
}

type GooglePrivacyDlpV2ActionArray []GooglePrivacyDlpV2ActionInput

func (GooglePrivacyDlpV2ActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2Action)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ActionArray) ToGooglePrivacyDlpV2ActionArrayOutput() GooglePrivacyDlpV2ActionArrayOutput {
	return i.ToGooglePrivacyDlpV2ActionArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ActionArray) ToGooglePrivacyDlpV2ActionArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ActionArrayOutput)
}

// A task to execute on the completion of a job. See https://cloud.google.com/dlp/docs/concepts-actions to learn more.
type GooglePrivacyDlpV2ActionOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Action)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ActionOutput) ToGooglePrivacyDlpV2ActionOutput() GooglePrivacyDlpV2ActionOutput {
	return o
}

func (o GooglePrivacyDlpV2ActionOutput) ToGooglePrivacyDlpV2ActionOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ActionOutput {
	return o
}

// Enable email notification for project owners and editors on job's completion/failure.
func (o GooglePrivacyDlpV2ActionOutput) JobNotificationEmails() GooglePrivacyDlpV2JobNotificationEmailsPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Action) *GooglePrivacyDlpV2JobNotificationEmails {
		return v.JobNotificationEmails
	}).(GooglePrivacyDlpV2JobNotificationEmailsPtrOutput)
}

// Publish a notification to a pubsub topic.
func (o GooglePrivacyDlpV2ActionOutput) PubSub() GooglePrivacyDlpV2PublishToPubSubPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Action) *GooglePrivacyDlpV2PublishToPubSub { return v.PubSub }).(GooglePrivacyDlpV2PublishToPubSubPtrOutput)
}

// Publish findings to Cloud Datahub.
func (o GooglePrivacyDlpV2ActionOutput) PublishFindingsToCloudDataCatalog() GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Action) *GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog {
		return v.PublishFindingsToCloudDataCatalog
	}).(GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput)
}

// Publish summary to Cloud Security Command Center (Alpha).
func (o GooglePrivacyDlpV2ActionOutput) PublishSummaryToCscc() GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Action) *GooglePrivacyDlpV2PublishSummaryToCscc {
		return v.PublishSummaryToCscc
	}).(GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput)
}

// Enable Stackdriver metric dlp.googleapis.com/finding_count.
func (o GooglePrivacyDlpV2ActionOutput) PublishToStackdriver() GooglePrivacyDlpV2PublishToStackdriverPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Action) *GooglePrivacyDlpV2PublishToStackdriver {
		return v.PublishToStackdriver
	}).(GooglePrivacyDlpV2PublishToStackdriverPtrOutput)
}

// Save resulting findings in a provided location.
func (o GooglePrivacyDlpV2ActionOutput) SaveFindings() GooglePrivacyDlpV2SaveFindingsPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Action) *GooglePrivacyDlpV2SaveFindings { return v.SaveFindings }).(GooglePrivacyDlpV2SaveFindingsPtrOutput)
}

type GooglePrivacyDlpV2ActionArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2Action)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ActionArrayOutput) ToGooglePrivacyDlpV2ActionArrayOutput() GooglePrivacyDlpV2ActionArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2ActionArrayOutput) ToGooglePrivacyDlpV2ActionArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ActionArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2ActionArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2ActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2Action {
		return vs[0].([]GooglePrivacyDlpV2Action)[vs[1].(int)]
	}).(GooglePrivacyDlpV2ActionOutput)
}

// A task to execute on the completion of a job. See https://cloud.google.com/dlp/docs/concepts-actions to learn more.
type GooglePrivacyDlpV2ActionResponse struct {
	// Enable email notification for project owners and editors on job's completion/failure.
	JobNotificationEmails GooglePrivacyDlpV2JobNotificationEmailsResponse `pulumi:"jobNotificationEmails"`
	// Publish a notification to a pubsub topic.
	PubSub GooglePrivacyDlpV2PublishToPubSubResponse `pulumi:"pubSub"`
	// Publish findings to Cloud Datahub.
	PublishFindingsToCloudDataCatalog GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponse `pulumi:"publishFindingsToCloudDataCatalog"`
	// Publish summary to Cloud Security Command Center (Alpha).
	PublishSummaryToCscc GooglePrivacyDlpV2PublishSummaryToCsccResponse `pulumi:"publishSummaryToCscc"`
	// Enable Stackdriver metric dlp.googleapis.com/finding_count.
	PublishToStackdriver GooglePrivacyDlpV2PublishToStackdriverResponse `pulumi:"publishToStackdriver"`
	// Save resulting findings in a provided location.
	SaveFindings GooglePrivacyDlpV2SaveFindingsResponse `pulumi:"saveFindings"`
}

// GooglePrivacyDlpV2ActionResponseInput is an input type that accepts GooglePrivacyDlpV2ActionResponseArgs and GooglePrivacyDlpV2ActionResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ActionResponseInput` via:
//
//          GooglePrivacyDlpV2ActionResponseArgs{...}
type GooglePrivacyDlpV2ActionResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ActionResponseOutput() GooglePrivacyDlpV2ActionResponseOutput
	ToGooglePrivacyDlpV2ActionResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ActionResponseOutput
}

// A task to execute on the completion of a job. See https://cloud.google.com/dlp/docs/concepts-actions to learn more.
type GooglePrivacyDlpV2ActionResponseArgs struct {
	// Enable email notification for project owners and editors on job's completion/failure.
	JobNotificationEmails GooglePrivacyDlpV2JobNotificationEmailsResponseInput `pulumi:"jobNotificationEmails"`
	// Publish a notification to a pubsub topic.
	PubSub GooglePrivacyDlpV2PublishToPubSubResponseInput `pulumi:"pubSub"`
	// Publish findings to Cloud Datahub.
	PublishFindingsToCloudDataCatalog GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseInput `pulumi:"publishFindingsToCloudDataCatalog"`
	// Publish summary to Cloud Security Command Center (Alpha).
	PublishSummaryToCscc GooglePrivacyDlpV2PublishSummaryToCsccResponseInput `pulumi:"publishSummaryToCscc"`
	// Enable Stackdriver metric dlp.googleapis.com/finding_count.
	PublishToStackdriver GooglePrivacyDlpV2PublishToStackdriverResponseInput `pulumi:"publishToStackdriver"`
	// Save resulting findings in a provided location.
	SaveFindings GooglePrivacyDlpV2SaveFindingsResponseInput `pulumi:"saveFindings"`
}

func (GooglePrivacyDlpV2ActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ActionResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ActionResponseArgs) ToGooglePrivacyDlpV2ActionResponseOutput() GooglePrivacyDlpV2ActionResponseOutput {
	return i.ToGooglePrivacyDlpV2ActionResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ActionResponseArgs) ToGooglePrivacyDlpV2ActionResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ActionResponseOutput)
}

// GooglePrivacyDlpV2ActionResponseArrayInput is an input type that accepts GooglePrivacyDlpV2ActionResponseArray and GooglePrivacyDlpV2ActionResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ActionResponseArrayInput` via:
//
//          GooglePrivacyDlpV2ActionResponseArray{ GooglePrivacyDlpV2ActionResponseArgs{...} }
type GooglePrivacyDlpV2ActionResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ActionResponseArrayOutput() GooglePrivacyDlpV2ActionResponseArrayOutput
	ToGooglePrivacyDlpV2ActionResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2ActionResponseArrayOutput
}

type GooglePrivacyDlpV2ActionResponseArray []GooglePrivacyDlpV2ActionResponseInput

func (GooglePrivacyDlpV2ActionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2ActionResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ActionResponseArray) ToGooglePrivacyDlpV2ActionResponseArrayOutput() GooglePrivacyDlpV2ActionResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2ActionResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ActionResponseArray) ToGooglePrivacyDlpV2ActionResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ActionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ActionResponseArrayOutput)
}

// A task to execute on the completion of a job. See https://cloud.google.com/dlp/docs/concepts-actions to learn more.
type GooglePrivacyDlpV2ActionResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ActionResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ActionResponseOutput) ToGooglePrivacyDlpV2ActionResponseOutput() GooglePrivacyDlpV2ActionResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ActionResponseOutput) ToGooglePrivacyDlpV2ActionResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ActionResponseOutput {
	return o
}

// Enable email notification for project owners and editors on job's completion/failure.
func (o GooglePrivacyDlpV2ActionResponseOutput) JobNotificationEmails() GooglePrivacyDlpV2JobNotificationEmailsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ActionResponse) GooglePrivacyDlpV2JobNotificationEmailsResponse {
		return v.JobNotificationEmails
	}).(GooglePrivacyDlpV2JobNotificationEmailsResponseOutput)
}

// Publish a notification to a pubsub topic.
func (o GooglePrivacyDlpV2ActionResponseOutput) PubSub() GooglePrivacyDlpV2PublishToPubSubResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ActionResponse) GooglePrivacyDlpV2PublishToPubSubResponse { return v.PubSub }).(GooglePrivacyDlpV2PublishToPubSubResponseOutput)
}

// Publish findings to Cloud Datahub.
func (o GooglePrivacyDlpV2ActionResponseOutput) PublishFindingsToCloudDataCatalog() GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ActionResponse) GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponse {
		return v.PublishFindingsToCloudDataCatalog
	}).(GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput)
}

// Publish summary to Cloud Security Command Center (Alpha).
func (o GooglePrivacyDlpV2ActionResponseOutput) PublishSummaryToCscc() GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ActionResponse) GooglePrivacyDlpV2PublishSummaryToCsccResponse {
		return v.PublishSummaryToCscc
	}).(GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput)
}

// Enable Stackdriver metric dlp.googleapis.com/finding_count.
func (o GooglePrivacyDlpV2ActionResponseOutput) PublishToStackdriver() GooglePrivacyDlpV2PublishToStackdriverResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ActionResponse) GooglePrivacyDlpV2PublishToStackdriverResponse {
		return v.PublishToStackdriver
	}).(GooglePrivacyDlpV2PublishToStackdriverResponseOutput)
}

// Save resulting findings in a provided location.
func (o GooglePrivacyDlpV2ActionResponseOutput) SaveFindings() GooglePrivacyDlpV2SaveFindingsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ActionResponse) GooglePrivacyDlpV2SaveFindingsResponse { return v.SaveFindings }).(GooglePrivacyDlpV2SaveFindingsResponseOutput)
}

type GooglePrivacyDlpV2ActionResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ActionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2ActionResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ActionResponseArrayOutput) ToGooglePrivacyDlpV2ActionResponseArrayOutput() GooglePrivacyDlpV2ActionResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2ActionResponseArrayOutput) ToGooglePrivacyDlpV2ActionResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ActionResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2ActionResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2ActionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2ActionResponse {
		return vs[0].([]GooglePrivacyDlpV2ActionResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2ActionResponseOutput)
}

// Result of a risk analysis operation request.
type GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse struct {
	// Categorical stats result
	CategoricalStatsResult GooglePrivacyDlpV2CategoricalStatsResultResponse `pulumi:"categoricalStatsResult"`
	// Delta-presence result
	DeltaPresenceEstimationResult GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse `pulumi:"deltaPresenceEstimationResult"`
	// K-anonymity result
	KAnonymityResult GooglePrivacyDlpV2KAnonymityResultResponse `pulumi:"kAnonymityResult"`
	// K-map result
	KMapEstimationResult GooglePrivacyDlpV2KMapEstimationResultResponse `pulumi:"kMapEstimationResult"`
	// L-divesity result
	LDiversityResult GooglePrivacyDlpV2LDiversityResultResponse `pulumi:"lDiversityResult"`
	// Numerical stats result
	NumericalStatsResult GooglePrivacyDlpV2NumericalStatsResultResponse `pulumi:"numericalStatsResult"`
	// The configuration used for this job.
	RequestedOptions GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse `pulumi:"requestedOptions"`
	// Privacy metric to compute.
	RequestedPrivacyMetric GooglePrivacyDlpV2PrivacyMetricResponse `pulumi:"requestedPrivacyMetric"`
	// Input dataset to compute metrics over.
	RequestedSourceTable GooglePrivacyDlpV2BigQueryTableResponse `pulumi:"requestedSourceTable"`
}

// GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseInput is an input type that accepts GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseArgs and GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseInput` via:
//
//          GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseArgs{...}
type GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput() GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput
	ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput
}

// Result of a risk analysis operation request.
type GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseArgs struct {
	// Categorical stats result
	CategoricalStatsResult GooglePrivacyDlpV2CategoricalStatsResultResponseInput `pulumi:"categoricalStatsResult"`
	// Delta-presence result
	DeltaPresenceEstimationResult GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseInput `pulumi:"deltaPresenceEstimationResult"`
	// K-anonymity result
	KAnonymityResult GooglePrivacyDlpV2KAnonymityResultResponseInput `pulumi:"kAnonymityResult"`
	// K-map result
	KMapEstimationResult GooglePrivacyDlpV2KMapEstimationResultResponseInput `pulumi:"kMapEstimationResult"`
	// L-divesity result
	LDiversityResult GooglePrivacyDlpV2LDiversityResultResponseInput `pulumi:"lDiversityResult"`
	// Numerical stats result
	NumericalStatsResult GooglePrivacyDlpV2NumericalStatsResultResponseInput `pulumi:"numericalStatsResult"`
	// The configuration used for this job.
	RequestedOptions GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseInput `pulumi:"requestedOptions"`
	// Privacy metric to compute.
	RequestedPrivacyMetric GooglePrivacyDlpV2PrivacyMetricResponseInput `pulumi:"requestedPrivacyMetric"`
	// Input dataset to compute metrics over.
	RequestedSourceTable GooglePrivacyDlpV2BigQueryTableResponseInput `pulumi:"requestedSourceTable"`
}

func (GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseArgs) ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput() GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput {
	return i.ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseArgs) ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput)
}

func (i GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseArgs) ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput() GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseArgs) ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput).ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseArgs, GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtr and GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput() GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput
	ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput
}

type googlePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrType GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseArgs

func GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtr(v *GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseArgs) GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrInput {
	return (*googlePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrType) ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput() GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrType) ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput)
}

// Result of a risk analysis operation request.
type GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput) ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput() GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput) ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput) ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput() GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput) ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) *GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse {
		return &v
	}).(GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput)
}

// Categorical stats result
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput) CategoricalStatsResult() GooglePrivacyDlpV2CategoricalStatsResultResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) GooglePrivacyDlpV2CategoricalStatsResultResponse {
		return v.CategoricalStatsResult
	}).(GooglePrivacyDlpV2CategoricalStatsResultResponseOutput)
}

// Delta-presence result
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput) DeltaPresenceEstimationResult() GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse {
		return v.DeltaPresenceEstimationResult
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput)
}

// K-anonymity result
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput) KAnonymityResult() GooglePrivacyDlpV2KAnonymityResultResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) GooglePrivacyDlpV2KAnonymityResultResponse {
		return v.KAnonymityResult
	}).(GooglePrivacyDlpV2KAnonymityResultResponseOutput)
}

// K-map result
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput) KMapEstimationResult() GooglePrivacyDlpV2KMapEstimationResultResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) GooglePrivacyDlpV2KMapEstimationResultResponse {
		return v.KMapEstimationResult
	}).(GooglePrivacyDlpV2KMapEstimationResultResponseOutput)
}

// L-divesity result
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput) LDiversityResult() GooglePrivacyDlpV2LDiversityResultResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) GooglePrivacyDlpV2LDiversityResultResponse {
		return v.LDiversityResult
	}).(GooglePrivacyDlpV2LDiversityResultResponseOutput)
}

// Numerical stats result
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput) NumericalStatsResult() GooglePrivacyDlpV2NumericalStatsResultResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) GooglePrivacyDlpV2NumericalStatsResultResponse {
		return v.NumericalStatsResult
	}).(GooglePrivacyDlpV2NumericalStatsResultResponseOutput)
}

// The configuration used for this job.
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput) RequestedOptions() GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse {
		return v.RequestedOptions
	}).(GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput)
}

// Privacy metric to compute.
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput) RequestedPrivacyMetric() GooglePrivacyDlpV2PrivacyMetricResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) GooglePrivacyDlpV2PrivacyMetricResponse {
		return v.RequestedPrivacyMetric
	}).(GooglePrivacyDlpV2PrivacyMetricResponseOutput)
}

// Input dataset to compute metrics over.
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput) RequestedSourceTable() GooglePrivacyDlpV2BigQueryTableResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) GooglePrivacyDlpV2BigQueryTableResponse {
		return v.RequestedSourceTable
	}).(GooglePrivacyDlpV2BigQueryTableResponseOutput)
}

type GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput) ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput() GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput) ToGooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput) Elem() GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse
		return ret
	}).(GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput)
}

// Categorical stats result
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput) CategoricalStatsResult() GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) *GooglePrivacyDlpV2CategoricalStatsResultResponse {
		if v == nil {
			return nil
		}
		return &v.CategoricalStatsResult
	}).(GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput)
}

// Delta-presence result
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput) DeltaPresenceEstimationResult() GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) *GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse {
		if v == nil {
			return nil
		}
		return &v.DeltaPresenceEstimationResult
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput)
}

// K-anonymity result
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput) KAnonymityResult() GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) *GooglePrivacyDlpV2KAnonymityResultResponse {
		if v == nil {
			return nil
		}
		return &v.KAnonymityResult
	}).(GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput)
}

// K-map result
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput) KMapEstimationResult() GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) *GooglePrivacyDlpV2KMapEstimationResultResponse {
		if v == nil {
			return nil
		}
		return &v.KMapEstimationResult
	}).(GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput)
}

// L-divesity result
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput) LDiversityResult() GooglePrivacyDlpV2LDiversityResultResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) *GooglePrivacyDlpV2LDiversityResultResponse {
		if v == nil {
			return nil
		}
		return &v.LDiversityResult
	}).(GooglePrivacyDlpV2LDiversityResultResponsePtrOutput)
}

// Numerical stats result
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput) NumericalStatsResult() GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) *GooglePrivacyDlpV2NumericalStatsResultResponse {
		if v == nil {
			return nil
		}
		return &v.NumericalStatsResult
	}).(GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput)
}

// The configuration used for this job.
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput) RequestedOptions() GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) *GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse {
		if v == nil {
			return nil
		}
		return &v.RequestedOptions
	}).(GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput)
}

// Privacy metric to compute.
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput) RequestedPrivacyMetric() GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) *GooglePrivacyDlpV2PrivacyMetricResponse {
		if v == nil {
			return nil
		}
		return &v.RequestedPrivacyMetric
	}).(GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput)
}

// Input dataset to compute metrics over.
func (o GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput) RequestedSourceTable() GooglePrivacyDlpV2BigQueryTableResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponse) *GooglePrivacyDlpV2BigQueryTableResponse {
		if v == nil {
			return nil
		}
		return &v.RequestedSourceTable
	}).(GooglePrivacyDlpV2BigQueryTableResponsePtrOutput)
}

// An auxiliary table contains statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
type GooglePrivacyDlpV2AuxiliaryTable struct {
	// Quasi-identifier columns.
	QuasiIds []GooglePrivacyDlpV2QuasiIdField `pulumi:"quasiIds"`
	// The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
	RelativeFrequency GooglePrivacyDlpV2FieldId `pulumi:"relativeFrequency"`
	// Auxiliary table location.
	Table GooglePrivacyDlpV2BigQueryTable `pulumi:"table"`
}

// GooglePrivacyDlpV2AuxiliaryTableInput is an input type that accepts GooglePrivacyDlpV2AuxiliaryTableArgs and GooglePrivacyDlpV2AuxiliaryTableOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2AuxiliaryTableInput` via:
//
//          GooglePrivacyDlpV2AuxiliaryTableArgs{...}
type GooglePrivacyDlpV2AuxiliaryTableInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2AuxiliaryTableOutput() GooglePrivacyDlpV2AuxiliaryTableOutput
	ToGooglePrivacyDlpV2AuxiliaryTableOutputWithContext(context.Context) GooglePrivacyDlpV2AuxiliaryTableOutput
}

// An auxiliary table contains statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
type GooglePrivacyDlpV2AuxiliaryTableArgs struct {
	// Quasi-identifier columns.
	QuasiIds GooglePrivacyDlpV2QuasiIdFieldArrayInput `pulumi:"quasiIds"`
	// The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
	RelativeFrequency GooglePrivacyDlpV2FieldIdInput `pulumi:"relativeFrequency"`
	// Auxiliary table location.
	Table GooglePrivacyDlpV2BigQueryTableInput `pulumi:"table"`
}

func (GooglePrivacyDlpV2AuxiliaryTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2AuxiliaryTable)(nil)).Elem()
}

func (i GooglePrivacyDlpV2AuxiliaryTableArgs) ToGooglePrivacyDlpV2AuxiliaryTableOutput() GooglePrivacyDlpV2AuxiliaryTableOutput {
	return i.ToGooglePrivacyDlpV2AuxiliaryTableOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2AuxiliaryTableArgs) ToGooglePrivacyDlpV2AuxiliaryTableOutputWithContext(ctx context.Context) GooglePrivacyDlpV2AuxiliaryTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2AuxiliaryTableOutput)
}

// GooglePrivacyDlpV2AuxiliaryTableArrayInput is an input type that accepts GooglePrivacyDlpV2AuxiliaryTableArray and GooglePrivacyDlpV2AuxiliaryTableArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2AuxiliaryTableArrayInput` via:
//
//          GooglePrivacyDlpV2AuxiliaryTableArray{ GooglePrivacyDlpV2AuxiliaryTableArgs{...} }
type GooglePrivacyDlpV2AuxiliaryTableArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2AuxiliaryTableArrayOutput() GooglePrivacyDlpV2AuxiliaryTableArrayOutput
	ToGooglePrivacyDlpV2AuxiliaryTableArrayOutputWithContext(context.Context) GooglePrivacyDlpV2AuxiliaryTableArrayOutput
}

type GooglePrivacyDlpV2AuxiliaryTableArray []GooglePrivacyDlpV2AuxiliaryTableInput

func (GooglePrivacyDlpV2AuxiliaryTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2AuxiliaryTable)(nil)).Elem()
}

func (i GooglePrivacyDlpV2AuxiliaryTableArray) ToGooglePrivacyDlpV2AuxiliaryTableArrayOutput() GooglePrivacyDlpV2AuxiliaryTableArrayOutput {
	return i.ToGooglePrivacyDlpV2AuxiliaryTableArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2AuxiliaryTableArray) ToGooglePrivacyDlpV2AuxiliaryTableArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2AuxiliaryTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2AuxiliaryTableArrayOutput)
}

// An auxiliary table contains statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
type GooglePrivacyDlpV2AuxiliaryTableOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2AuxiliaryTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2AuxiliaryTable)(nil)).Elem()
}

func (o GooglePrivacyDlpV2AuxiliaryTableOutput) ToGooglePrivacyDlpV2AuxiliaryTableOutput() GooglePrivacyDlpV2AuxiliaryTableOutput {
	return o
}

func (o GooglePrivacyDlpV2AuxiliaryTableOutput) ToGooglePrivacyDlpV2AuxiliaryTableOutputWithContext(ctx context.Context) GooglePrivacyDlpV2AuxiliaryTableOutput {
	return o
}

// Quasi-identifier columns.
func (o GooglePrivacyDlpV2AuxiliaryTableOutput) QuasiIds() GooglePrivacyDlpV2QuasiIdFieldArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AuxiliaryTable) []GooglePrivacyDlpV2QuasiIdField { return v.QuasiIds }).(GooglePrivacyDlpV2QuasiIdFieldArrayOutput)
}

// The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
func (o GooglePrivacyDlpV2AuxiliaryTableOutput) RelativeFrequency() GooglePrivacyDlpV2FieldIdOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AuxiliaryTable) GooglePrivacyDlpV2FieldId { return v.RelativeFrequency }).(GooglePrivacyDlpV2FieldIdOutput)
}

// Auxiliary table location.
func (o GooglePrivacyDlpV2AuxiliaryTableOutput) Table() GooglePrivacyDlpV2BigQueryTableOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AuxiliaryTable) GooglePrivacyDlpV2BigQueryTable { return v.Table }).(GooglePrivacyDlpV2BigQueryTableOutput)
}

type GooglePrivacyDlpV2AuxiliaryTableArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2AuxiliaryTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2AuxiliaryTable)(nil)).Elem()
}

func (o GooglePrivacyDlpV2AuxiliaryTableArrayOutput) ToGooglePrivacyDlpV2AuxiliaryTableArrayOutput() GooglePrivacyDlpV2AuxiliaryTableArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2AuxiliaryTableArrayOutput) ToGooglePrivacyDlpV2AuxiliaryTableArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2AuxiliaryTableArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2AuxiliaryTableArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2AuxiliaryTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2AuxiliaryTable {
		return vs[0].([]GooglePrivacyDlpV2AuxiliaryTable)[vs[1].(int)]
	}).(GooglePrivacyDlpV2AuxiliaryTableOutput)
}

// An auxiliary table contains statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
type GooglePrivacyDlpV2AuxiliaryTableResponse struct {
	// Quasi-identifier columns.
	QuasiIds []GooglePrivacyDlpV2QuasiIdFieldResponse `pulumi:"quasiIds"`
	// The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
	RelativeFrequency GooglePrivacyDlpV2FieldIdResponse `pulumi:"relativeFrequency"`
	// Auxiliary table location.
	Table GooglePrivacyDlpV2BigQueryTableResponse `pulumi:"table"`
}

// GooglePrivacyDlpV2AuxiliaryTableResponseInput is an input type that accepts GooglePrivacyDlpV2AuxiliaryTableResponseArgs and GooglePrivacyDlpV2AuxiliaryTableResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2AuxiliaryTableResponseInput` via:
//
//          GooglePrivacyDlpV2AuxiliaryTableResponseArgs{...}
type GooglePrivacyDlpV2AuxiliaryTableResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2AuxiliaryTableResponseOutput() GooglePrivacyDlpV2AuxiliaryTableResponseOutput
	ToGooglePrivacyDlpV2AuxiliaryTableResponseOutputWithContext(context.Context) GooglePrivacyDlpV2AuxiliaryTableResponseOutput
}

// An auxiliary table contains statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
type GooglePrivacyDlpV2AuxiliaryTableResponseArgs struct {
	// Quasi-identifier columns.
	QuasiIds GooglePrivacyDlpV2QuasiIdFieldResponseArrayInput `pulumi:"quasiIds"`
	// The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
	RelativeFrequency GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"relativeFrequency"`
	// Auxiliary table location.
	Table GooglePrivacyDlpV2BigQueryTableResponseInput `pulumi:"table"`
}

func (GooglePrivacyDlpV2AuxiliaryTableResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2AuxiliaryTableResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2AuxiliaryTableResponseArgs) ToGooglePrivacyDlpV2AuxiliaryTableResponseOutput() GooglePrivacyDlpV2AuxiliaryTableResponseOutput {
	return i.ToGooglePrivacyDlpV2AuxiliaryTableResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2AuxiliaryTableResponseArgs) ToGooglePrivacyDlpV2AuxiliaryTableResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2AuxiliaryTableResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2AuxiliaryTableResponseOutput)
}

// GooglePrivacyDlpV2AuxiliaryTableResponseArrayInput is an input type that accepts GooglePrivacyDlpV2AuxiliaryTableResponseArray and GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2AuxiliaryTableResponseArrayInput` via:
//
//          GooglePrivacyDlpV2AuxiliaryTableResponseArray{ GooglePrivacyDlpV2AuxiliaryTableResponseArgs{...} }
type GooglePrivacyDlpV2AuxiliaryTableResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput() GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput
	ToGooglePrivacyDlpV2AuxiliaryTableResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput
}

type GooglePrivacyDlpV2AuxiliaryTableResponseArray []GooglePrivacyDlpV2AuxiliaryTableResponseInput

func (GooglePrivacyDlpV2AuxiliaryTableResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2AuxiliaryTableResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2AuxiliaryTableResponseArray) ToGooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput() GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2AuxiliaryTableResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2AuxiliaryTableResponseArray) ToGooglePrivacyDlpV2AuxiliaryTableResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput)
}

// An auxiliary table contains statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
type GooglePrivacyDlpV2AuxiliaryTableResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2AuxiliaryTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2AuxiliaryTableResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2AuxiliaryTableResponseOutput) ToGooglePrivacyDlpV2AuxiliaryTableResponseOutput() GooglePrivacyDlpV2AuxiliaryTableResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2AuxiliaryTableResponseOutput) ToGooglePrivacyDlpV2AuxiliaryTableResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2AuxiliaryTableResponseOutput {
	return o
}

// Quasi-identifier columns.
func (o GooglePrivacyDlpV2AuxiliaryTableResponseOutput) QuasiIds() GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AuxiliaryTableResponse) []GooglePrivacyDlpV2QuasiIdFieldResponse {
		return v.QuasiIds
	}).(GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput)
}

// The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
func (o GooglePrivacyDlpV2AuxiliaryTableResponseOutput) RelativeFrequency() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AuxiliaryTableResponse) GooglePrivacyDlpV2FieldIdResponse {
		return v.RelativeFrequency
	}).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

// Auxiliary table location.
func (o GooglePrivacyDlpV2AuxiliaryTableResponseOutput) Table() GooglePrivacyDlpV2BigQueryTableResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2AuxiliaryTableResponse) GooglePrivacyDlpV2BigQueryTableResponse {
		return v.Table
	}).(GooglePrivacyDlpV2BigQueryTableResponseOutput)
}

type GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2AuxiliaryTableResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput) ToGooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput() GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput) ToGooglePrivacyDlpV2AuxiliaryTableResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2AuxiliaryTableResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2AuxiliaryTableResponse {
		return vs[0].([]GooglePrivacyDlpV2AuxiliaryTableResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2AuxiliaryTableResponseOutput)
}

// Message defining a field of a BigQuery table.
type GooglePrivacyDlpV2BigQueryField struct {
	// Designated field in the BigQuery table.
	Field *GooglePrivacyDlpV2FieldId `pulumi:"field"`
	// Source table of the field.
	Table *GooglePrivacyDlpV2BigQueryTable `pulumi:"table"`
}

// GooglePrivacyDlpV2BigQueryFieldInput is an input type that accepts GooglePrivacyDlpV2BigQueryFieldArgs and GooglePrivacyDlpV2BigQueryFieldOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BigQueryFieldInput` via:
//
//          GooglePrivacyDlpV2BigQueryFieldArgs{...}
type GooglePrivacyDlpV2BigQueryFieldInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BigQueryFieldOutput() GooglePrivacyDlpV2BigQueryFieldOutput
	ToGooglePrivacyDlpV2BigQueryFieldOutputWithContext(context.Context) GooglePrivacyDlpV2BigQueryFieldOutput
}

// Message defining a field of a BigQuery table.
type GooglePrivacyDlpV2BigQueryFieldArgs struct {
	// Designated field in the BigQuery table.
	Field GooglePrivacyDlpV2FieldIdPtrInput `pulumi:"field"`
	// Source table of the field.
	Table GooglePrivacyDlpV2BigQueryTablePtrInput `pulumi:"table"`
}

func (GooglePrivacyDlpV2BigQueryFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BigQueryField)(nil)).Elem()
}

func (i GooglePrivacyDlpV2BigQueryFieldArgs) ToGooglePrivacyDlpV2BigQueryFieldOutput() GooglePrivacyDlpV2BigQueryFieldOutput {
	return i.ToGooglePrivacyDlpV2BigQueryFieldOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BigQueryFieldArgs) ToGooglePrivacyDlpV2BigQueryFieldOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryFieldOutput)
}

func (i GooglePrivacyDlpV2BigQueryFieldArgs) ToGooglePrivacyDlpV2BigQueryFieldPtrOutput() GooglePrivacyDlpV2BigQueryFieldPtrOutput {
	return i.ToGooglePrivacyDlpV2BigQueryFieldPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BigQueryFieldArgs) ToGooglePrivacyDlpV2BigQueryFieldPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryFieldOutput).ToGooglePrivacyDlpV2BigQueryFieldPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2BigQueryFieldPtrInput is an input type that accepts GooglePrivacyDlpV2BigQueryFieldArgs, GooglePrivacyDlpV2BigQueryFieldPtr and GooglePrivacyDlpV2BigQueryFieldPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BigQueryFieldPtrInput` via:
//
//          GooglePrivacyDlpV2BigQueryFieldArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2BigQueryFieldPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BigQueryFieldPtrOutput() GooglePrivacyDlpV2BigQueryFieldPtrOutput
	ToGooglePrivacyDlpV2BigQueryFieldPtrOutputWithContext(context.Context) GooglePrivacyDlpV2BigQueryFieldPtrOutput
}

type googlePrivacyDlpV2BigQueryFieldPtrType GooglePrivacyDlpV2BigQueryFieldArgs

func GooglePrivacyDlpV2BigQueryFieldPtr(v *GooglePrivacyDlpV2BigQueryFieldArgs) GooglePrivacyDlpV2BigQueryFieldPtrInput {
	return (*googlePrivacyDlpV2BigQueryFieldPtrType)(v)
}

func (*googlePrivacyDlpV2BigQueryFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2BigQueryField)(nil)).Elem()
}

func (i *googlePrivacyDlpV2BigQueryFieldPtrType) ToGooglePrivacyDlpV2BigQueryFieldPtrOutput() GooglePrivacyDlpV2BigQueryFieldPtrOutput {
	return i.ToGooglePrivacyDlpV2BigQueryFieldPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2BigQueryFieldPtrType) ToGooglePrivacyDlpV2BigQueryFieldPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryFieldPtrOutput)
}

// Message defining a field of a BigQuery table.
type GooglePrivacyDlpV2BigQueryFieldOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BigQueryFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BigQueryField)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BigQueryFieldOutput) ToGooglePrivacyDlpV2BigQueryFieldOutput() GooglePrivacyDlpV2BigQueryFieldOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryFieldOutput) ToGooglePrivacyDlpV2BigQueryFieldOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryFieldOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryFieldOutput) ToGooglePrivacyDlpV2BigQueryFieldPtrOutput() GooglePrivacyDlpV2BigQueryFieldPtrOutput {
	return o.ToGooglePrivacyDlpV2BigQueryFieldPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2BigQueryFieldOutput) ToGooglePrivacyDlpV2BigQueryFieldPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2BigQueryField) *GooglePrivacyDlpV2BigQueryField {
		return &v
	}).(GooglePrivacyDlpV2BigQueryFieldPtrOutput)
}

// Designated field in the BigQuery table.
func (o GooglePrivacyDlpV2BigQueryFieldOutput) Field() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryField) *GooglePrivacyDlpV2FieldId { return v.Field }).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// Source table of the field.
func (o GooglePrivacyDlpV2BigQueryFieldOutput) Table() GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryField) *GooglePrivacyDlpV2BigQueryTable { return v.Table }).(GooglePrivacyDlpV2BigQueryTablePtrOutput)
}

type GooglePrivacyDlpV2BigQueryFieldPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BigQueryFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2BigQueryField)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BigQueryFieldPtrOutput) ToGooglePrivacyDlpV2BigQueryFieldPtrOutput() GooglePrivacyDlpV2BigQueryFieldPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryFieldPtrOutput) ToGooglePrivacyDlpV2BigQueryFieldPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryFieldPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryFieldPtrOutput) Elem() GooglePrivacyDlpV2BigQueryFieldOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryField) GooglePrivacyDlpV2BigQueryField {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2BigQueryField
		return ret
	}).(GooglePrivacyDlpV2BigQueryFieldOutput)
}

// Designated field in the BigQuery table.
func (o GooglePrivacyDlpV2BigQueryFieldPtrOutput) Field() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryField) *GooglePrivacyDlpV2FieldId {
		if v == nil {
			return nil
		}
		return v.Field
	}).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// Source table of the field.
func (o GooglePrivacyDlpV2BigQueryFieldPtrOutput) Table() GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryField) *GooglePrivacyDlpV2BigQueryTable {
		if v == nil {
			return nil
		}
		return v.Table
	}).(GooglePrivacyDlpV2BigQueryTablePtrOutput)
}

// Message defining a field of a BigQuery table.
type GooglePrivacyDlpV2BigQueryFieldResponse struct {
	// Designated field in the BigQuery table.
	Field GooglePrivacyDlpV2FieldIdResponse `pulumi:"field"`
	// Source table of the field.
	Table GooglePrivacyDlpV2BigQueryTableResponse `pulumi:"table"`
}

// GooglePrivacyDlpV2BigQueryFieldResponseInput is an input type that accepts GooglePrivacyDlpV2BigQueryFieldResponseArgs and GooglePrivacyDlpV2BigQueryFieldResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BigQueryFieldResponseInput` via:
//
//          GooglePrivacyDlpV2BigQueryFieldResponseArgs{...}
type GooglePrivacyDlpV2BigQueryFieldResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BigQueryFieldResponseOutput() GooglePrivacyDlpV2BigQueryFieldResponseOutput
	ToGooglePrivacyDlpV2BigQueryFieldResponseOutputWithContext(context.Context) GooglePrivacyDlpV2BigQueryFieldResponseOutput
}

// Message defining a field of a BigQuery table.
type GooglePrivacyDlpV2BigQueryFieldResponseArgs struct {
	// Designated field in the BigQuery table.
	Field GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"field"`
	// Source table of the field.
	Table GooglePrivacyDlpV2BigQueryTableResponseInput `pulumi:"table"`
}

func (GooglePrivacyDlpV2BigQueryFieldResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BigQueryFieldResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2BigQueryFieldResponseArgs) ToGooglePrivacyDlpV2BigQueryFieldResponseOutput() GooglePrivacyDlpV2BigQueryFieldResponseOutput {
	return i.ToGooglePrivacyDlpV2BigQueryFieldResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BigQueryFieldResponseArgs) ToGooglePrivacyDlpV2BigQueryFieldResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryFieldResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryFieldResponseOutput)
}

func (i GooglePrivacyDlpV2BigQueryFieldResponseArgs) ToGooglePrivacyDlpV2BigQueryFieldResponsePtrOutput() GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2BigQueryFieldResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BigQueryFieldResponseArgs) ToGooglePrivacyDlpV2BigQueryFieldResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryFieldResponseOutput).ToGooglePrivacyDlpV2BigQueryFieldResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2BigQueryFieldResponsePtrInput is an input type that accepts GooglePrivacyDlpV2BigQueryFieldResponseArgs, GooglePrivacyDlpV2BigQueryFieldResponsePtr and GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BigQueryFieldResponsePtrInput` via:
//
//          GooglePrivacyDlpV2BigQueryFieldResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2BigQueryFieldResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BigQueryFieldResponsePtrOutput() GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput
	ToGooglePrivacyDlpV2BigQueryFieldResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput
}

type googlePrivacyDlpV2BigQueryFieldResponsePtrType GooglePrivacyDlpV2BigQueryFieldResponseArgs

func GooglePrivacyDlpV2BigQueryFieldResponsePtr(v *GooglePrivacyDlpV2BigQueryFieldResponseArgs) GooglePrivacyDlpV2BigQueryFieldResponsePtrInput {
	return (*googlePrivacyDlpV2BigQueryFieldResponsePtrType)(v)
}

func (*googlePrivacyDlpV2BigQueryFieldResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2BigQueryFieldResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2BigQueryFieldResponsePtrType) ToGooglePrivacyDlpV2BigQueryFieldResponsePtrOutput() GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2BigQueryFieldResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2BigQueryFieldResponsePtrType) ToGooglePrivacyDlpV2BigQueryFieldResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput)
}

// Message defining a field of a BigQuery table.
type GooglePrivacyDlpV2BigQueryFieldResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BigQueryFieldResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BigQueryFieldResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BigQueryFieldResponseOutput) ToGooglePrivacyDlpV2BigQueryFieldResponseOutput() GooglePrivacyDlpV2BigQueryFieldResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryFieldResponseOutput) ToGooglePrivacyDlpV2BigQueryFieldResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryFieldResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryFieldResponseOutput) ToGooglePrivacyDlpV2BigQueryFieldResponsePtrOutput() GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2BigQueryFieldResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2BigQueryFieldResponseOutput) ToGooglePrivacyDlpV2BigQueryFieldResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2BigQueryFieldResponse) *GooglePrivacyDlpV2BigQueryFieldResponse {
		return &v
	}).(GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput)
}

// Designated field in the BigQuery table.
func (o GooglePrivacyDlpV2BigQueryFieldResponseOutput) Field() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryFieldResponse) GooglePrivacyDlpV2FieldIdResponse { return v.Field }).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

// Source table of the field.
func (o GooglePrivacyDlpV2BigQueryFieldResponseOutput) Table() GooglePrivacyDlpV2BigQueryTableResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryFieldResponse) GooglePrivacyDlpV2BigQueryTableResponse {
		return v.Table
	}).(GooglePrivacyDlpV2BigQueryTableResponseOutput)
}

type GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2BigQueryFieldResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput) ToGooglePrivacyDlpV2BigQueryFieldResponsePtrOutput() GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput) ToGooglePrivacyDlpV2BigQueryFieldResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput) Elem() GooglePrivacyDlpV2BigQueryFieldResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryFieldResponse) GooglePrivacyDlpV2BigQueryFieldResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2BigQueryFieldResponse
		return ret
	}).(GooglePrivacyDlpV2BigQueryFieldResponseOutput)
}

// Designated field in the BigQuery table.
func (o GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput) Field() GooglePrivacyDlpV2FieldIdResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryFieldResponse) *GooglePrivacyDlpV2FieldIdResponse {
		if v == nil {
			return nil
		}
		return &v.Field
	}).(GooglePrivacyDlpV2FieldIdResponsePtrOutput)
}

// Source table of the field.
func (o GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput) Table() GooglePrivacyDlpV2BigQueryTableResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryFieldResponse) *GooglePrivacyDlpV2BigQueryTableResponse {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(GooglePrivacyDlpV2BigQueryTableResponsePtrOutput)
}

// Options defining BigQuery table and row identifiers.
type GooglePrivacyDlpV2BigQueryOptions struct {
	// References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings.
	ExcludedFields []GooglePrivacyDlpV2FieldId `pulumi:"excludedFields"`
	// Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed.
	IdentifyingFields []GooglePrivacyDlpV2FieldId `pulumi:"identifyingFields"`
	// Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
	RowsLimit *string `pulumi:"rowsLimit"`
	// Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
	RowsLimitPercent *int                                           `pulumi:"rowsLimitPercent"`
	SampleMethod     *GooglePrivacyDlpV2BigQueryOptionsSampleMethod `pulumi:"sampleMethod"`
	// Complete BigQuery table reference.
	TableReference *GooglePrivacyDlpV2BigQueryTable `pulumi:"tableReference"`
}

// GooglePrivacyDlpV2BigQueryOptionsInput is an input type that accepts GooglePrivacyDlpV2BigQueryOptionsArgs and GooglePrivacyDlpV2BigQueryOptionsOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BigQueryOptionsInput` via:
//
//          GooglePrivacyDlpV2BigQueryOptionsArgs{...}
type GooglePrivacyDlpV2BigQueryOptionsInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BigQueryOptionsOutput() GooglePrivacyDlpV2BigQueryOptionsOutput
	ToGooglePrivacyDlpV2BigQueryOptionsOutputWithContext(context.Context) GooglePrivacyDlpV2BigQueryOptionsOutput
}

// Options defining BigQuery table and row identifiers.
type GooglePrivacyDlpV2BigQueryOptionsArgs struct {
	// References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings.
	ExcludedFields GooglePrivacyDlpV2FieldIdArrayInput `pulumi:"excludedFields"`
	// Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed.
	IdentifyingFields GooglePrivacyDlpV2FieldIdArrayInput `pulumi:"identifyingFields"`
	// Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
	RowsLimit pulumi.StringPtrInput `pulumi:"rowsLimit"`
	// Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
	RowsLimitPercent pulumi.IntPtrInput                                    `pulumi:"rowsLimitPercent"`
	SampleMethod     GooglePrivacyDlpV2BigQueryOptionsSampleMethodPtrInput `pulumi:"sampleMethod"`
	// Complete BigQuery table reference.
	TableReference GooglePrivacyDlpV2BigQueryTablePtrInput `pulumi:"tableReference"`
}

func (GooglePrivacyDlpV2BigQueryOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BigQueryOptions)(nil)).Elem()
}

func (i GooglePrivacyDlpV2BigQueryOptionsArgs) ToGooglePrivacyDlpV2BigQueryOptionsOutput() GooglePrivacyDlpV2BigQueryOptionsOutput {
	return i.ToGooglePrivacyDlpV2BigQueryOptionsOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BigQueryOptionsArgs) ToGooglePrivacyDlpV2BigQueryOptionsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryOptionsOutput)
}

func (i GooglePrivacyDlpV2BigQueryOptionsArgs) ToGooglePrivacyDlpV2BigQueryOptionsPtrOutput() GooglePrivacyDlpV2BigQueryOptionsPtrOutput {
	return i.ToGooglePrivacyDlpV2BigQueryOptionsPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BigQueryOptionsArgs) ToGooglePrivacyDlpV2BigQueryOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryOptionsOutput).ToGooglePrivacyDlpV2BigQueryOptionsPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2BigQueryOptionsPtrInput is an input type that accepts GooglePrivacyDlpV2BigQueryOptionsArgs, GooglePrivacyDlpV2BigQueryOptionsPtr and GooglePrivacyDlpV2BigQueryOptionsPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BigQueryOptionsPtrInput` via:
//
//          GooglePrivacyDlpV2BigQueryOptionsArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2BigQueryOptionsPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BigQueryOptionsPtrOutput() GooglePrivacyDlpV2BigQueryOptionsPtrOutput
	ToGooglePrivacyDlpV2BigQueryOptionsPtrOutputWithContext(context.Context) GooglePrivacyDlpV2BigQueryOptionsPtrOutput
}

type googlePrivacyDlpV2BigQueryOptionsPtrType GooglePrivacyDlpV2BigQueryOptionsArgs

func GooglePrivacyDlpV2BigQueryOptionsPtr(v *GooglePrivacyDlpV2BigQueryOptionsArgs) GooglePrivacyDlpV2BigQueryOptionsPtrInput {
	return (*googlePrivacyDlpV2BigQueryOptionsPtrType)(v)
}

func (*googlePrivacyDlpV2BigQueryOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2BigQueryOptions)(nil)).Elem()
}

func (i *googlePrivacyDlpV2BigQueryOptionsPtrType) ToGooglePrivacyDlpV2BigQueryOptionsPtrOutput() GooglePrivacyDlpV2BigQueryOptionsPtrOutput {
	return i.ToGooglePrivacyDlpV2BigQueryOptionsPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2BigQueryOptionsPtrType) ToGooglePrivacyDlpV2BigQueryOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryOptionsPtrOutput)
}

// Options defining BigQuery table and row identifiers.
type GooglePrivacyDlpV2BigQueryOptionsOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BigQueryOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BigQueryOptions)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BigQueryOptionsOutput) ToGooglePrivacyDlpV2BigQueryOptionsOutput() GooglePrivacyDlpV2BigQueryOptionsOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryOptionsOutput) ToGooglePrivacyDlpV2BigQueryOptionsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryOptionsOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryOptionsOutput) ToGooglePrivacyDlpV2BigQueryOptionsPtrOutput() GooglePrivacyDlpV2BigQueryOptionsPtrOutput {
	return o.ToGooglePrivacyDlpV2BigQueryOptionsPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2BigQueryOptionsOutput) ToGooglePrivacyDlpV2BigQueryOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2BigQueryOptions) *GooglePrivacyDlpV2BigQueryOptions {
		return &v
	}).(GooglePrivacyDlpV2BigQueryOptionsPtrOutput)
}

// References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings.
func (o GooglePrivacyDlpV2BigQueryOptionsOutput) ExcludedFields() GooglePrivacyDlpV2FieldIdArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryOptions) []GooglePrivacyDlpV2FieldId { return v.ExcludedFields }).(GooglePrivacyDlpV2FieldIdArrayOutput)
}

// Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed.
func (o GooglePrivacyDlpV2BigQueryOptionsOutput) IdentifyingFields() GooglePrivacyDlpV2FieldIdArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryOptions) []GooglePrivacyDlpV2FieldId { return v.IdentifyingFields }).(GooglePrivacyDlpV2FieldIdArrayOutput)
}

// Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
func (o GooglePrivacyDlpV2BigQueryOptionsOutput) RowsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryOptions) *string { return v.RowsLimit }).(pulumi.StringPtrOutput)
}

// Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
func (o GooglePrivacyDlpV2BigQueryOptionsOutput) RowsLimitPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryOptions) *int { return v.RowsLimitPercent }).(pulumi.IntPtrOutput)
}

func (o GooglePrivacyDlpV2BigQueryOptionsOutput) SampleMethod() GooglePrivacyDlpV2BigQueryOptionsSampleMethodPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryOptions) *GooglePrivacyDlpV2BigQueryOptionsSampleMethod {
		return v.SampleMethod
	}).(GooglePrivacyDlpV2BigQueryOptionsSampleMethodPtrOutput)
}

// Complete BigQuery table reference.
func (o GooglePrivacyDlpV2BigQueryOptionsOutput) TableReference() GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryOptions) *GooglePrivacyDlpV2BigQueryTable { return v.TableReference }).(GooglePrivacyDlpV2BigQueryTablePtrOutput)
}

type GooglePrivacyDlpV2BigQueryOptionsPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BigQueryOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2BigQueryOptions)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BigQueryOptionsPtrOutput) ToGooglePrivacyDlpV2BigQueryOptionsPtrOutput() GooglePrivacyDlpV2BigQueryOptionsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryOptionsPtrOutput) ToGooglePrivacyDlpV2BigQueryOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryOptionsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryOptionsPtrOutput) Elem() GooglePrivacyDlpV2BigQueryOptionsOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryOptions) GooglePrivacyDlpV2BigQueryOptions {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2BigQueryOptions
		return ret
	}).(GooglePrivacyDlpV2BigQueryOptionsOutput)
}

// References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings.
func (o GooglePrivacyDlpV2BigQueryOptionsPtrOutput) ExcludedFields() GooglePrivacyDlpV2FieldIdArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryOptions) []GooglePrivacyDlpV2FieldId {
		if v == nil {
			return nil
		}
		return v.ExcludedFields
	}).(GooglePrivacyDlpV2FieldIdArrayOutput)
}

// Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed.
func (o GooglePrivacyDlpV2BigQueryOptionsPtrOutput) IdentifyingFields() GooglePrivacyDlpV2FieldIdArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryOptions) []GooglePrivacyDlpV2FieldId {
		if v == nil {
			return nil
		}
		return v.IdentifyingFields
	}).(GooglePrivacyDlpV2FieldIdArrayOutput)
}

// Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
func (o GooglePrivacyDlpV2BigQueryOptionsPtrOutput) RowsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryOptions) *string {
		if v == nil {
			return nil
		}
		return v.RowsLimit
	}).(pulumi.StringPtrOutput)
}

// Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
func (o GooglePrivacyDlpV2BigQueryOptionsPtrOutput) RowsLimitPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryOptions) *int {
		if v == nil {
			return nil
		}
		return v.RowsLimitPercent
	}).(pulumi.IntPtrOutput)
}

func (o GooglePrivacyDlpV2BigQueryOptionsPtrOutput) SampleMethod() GooglePrivacyDlpV2BigQueryOptionsSampleMethodPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryOptions) *GooglePrivacyDlpV2BigQueryOptionsSampleMethod {
		if v == nil {
			return nil
		}
		return v.SampleMethod
	}).(GooglePrivacyDlpV2BigQueryOptionsSampleMethodPtrOutput)
}

// Complete BigQuery table reference.
func (o GooglePrivacyDlpV2BigQueryOptionsPtrOutput) TableReference() GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryOptions) *GooglePrivacyDlpV2BigQueryTable {
		if v == nil {
			return nil
		}
		return v.TableReference
	}).(GooglePrivacyDlpV2BigQueryTablePtrOutput)
}

// Options defining BigQuery table and row identifiers.
type GooglePrivacyDlpV2BigQueryOptionsResponse struct {
	// References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings.
	ExcludedFields []GooglePrivacyDlpV2FieldIdResponse `pulumi:"excludedFields"`
	// Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed.
	IdentifyingFields []GooglePrivacyDlpV2FieldIdResponse `pulumi:"identifyingFields"`
	// Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
	RowsLimit string `pulumi:"rowsLimit"`
	// Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
	RowsLimitPercent int    `pulumi:"rowsLimitPercent"`
	SampleMethod     string `pulumi:"sampleMethod"`
	// Complete BigQuery table reference.
	TableReference GooglePrivacyDlpV2BigQueryTableResponse `pulumi:"tableReference"`
}

// GooglePrivacyDlpV2BigQueryOptionsResponseInput is an input type that accepts GooglePrivacyDlpV2BigQueryOptionsResponseArgs and GooglePrivacyDlpV2BigQueryOptionsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BigQueryOptionsResponseInput` via:
//
//          GooglePrivacyDlpV2BigQueryOptionsResponseArgs{...}
type GooglePrivacyDlpV2BigQueryOptionsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BigQueryOptionsResponseOutput() GooglePrivacyDlpV2BigQueryOptionsResponseOutput
	ToGooglePrivacyDlpV2BigQueryOptionsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2BigQueryOptionsResponseOutput
}

// Options defining BigQuery table and row identifiers.
type GooglePrivacyDlpV2BigQueryOptionsResponseArgs struct {
	// References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings.
	ExcludedFields GooglePrivacyDlpV2FieldIdResponseArrayInput `pulumi:"excludedFields"`
	// Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed.
	IdentifyingFields GooglePrivacyDlpV2FieldIdResponseArrayInput `pulumi:"identifyingFields"`
	// Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
	RowsLimit pulumi.StringInput `pulumi:"rowsLimit"`
	// Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
	RowsLimitPercent pulumi.IntInput    `pulumi:"rowsLimitPercent"`
	SampleMethod     pulumi.StringInput `pulumi:"sampleMethod"`
	// Complete BigQuery table reference.
	TableReference GooglePrivacyDlpV2BigQueryTableResponseInput `pulumi:"tableReference"`
}

func (GooglePrivacyDlpV2BigQueryOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BigQueryOptionsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2BigQueryOptionsResponseArgs) ToGooglePrivacyDlpV2BigQueryOptionsResponseOutput() GooglePrivacyDlpV2BigQueryOptionsResponseOutput {
	return i.ToGooglePrivacyDlpV2BigQueryOptionsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BigQueryOptionsResponseArgs) ToGooglePrivacyDlpV2BigQueryOptionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryOptionsResponseOutput)
}

func (i GooglePrivacyDlpV2BigQueryOptionsResponseArgs) ToGooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput() GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2BigQueryOptionsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BigQueryOptionsResponseArgs) ToGooglePrivacyDlpV2BigQueryOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryOptionsResponseOutput).ToGooglePrivacyDlpV2BigQueryOptionsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2BigQueryOptionsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2BigQueryOptionsResponseArgs, GooglePrivacyDlpV2BigQueryOptionsResponsePtr and GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BigQueryOptionsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2BigQueryOptionsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2BigQueryOptionsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput() GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput
	ToGooglePrivacyDlpV2BigQueryOptionsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput
}

type googlePrivacyDlpV2BigQueryOptionsResponsePtrType GooglePrivacyDlpV2BigQueryOptionsResponseArgs

func GooglePrivacyDlpV2BigQueryOptionsResponsePtr(v *GooglePrivacyDlpV2BigQueryOptionsResponseArgs) GooglePrivacyDlpV2BigQueryOptionsResponsePtrInput {
	return (*googlePrivacyDlpV2BigQueryOptionsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2BigQueryOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2BigQueryOptionsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2BigQueryOptionsResponsePtrType) ToGooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput() GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2BigQueryOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2BigQueryOptionsResponsePtrType) ToGooglePrivacyDlpV2BigQueryOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput)
}

// Options defining BigQuery table and row identifiers.
type GooglePrivacyDlpV2BigQueryOptionsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BigQueryOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BigQueryOptionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BigQueryOptionsResponseOutput) ToGooglePrivacyDlpV2BigQueryOptionsResponseOutput() GooglePrivacyDlpV2BigQueryOptionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryOptionsResponseOutput) ToGooglePrivacyDlpV2BigQueryOptionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryOptionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryOptionsResponseOutput) ToGooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput() GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2BigQueryOptionsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2BigQueryOptionsResponseOutput) ToGooglePrivacyDlpV2BigQueryOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2BigQueryOptionsResponse) *GooglePrivacyDlpV2BigQueryOptionsResponse {
		return &v
	}).(GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput)
}

// References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings.
func (o GooglePrivacyDlpV2BigQueryOptionsResponseOutput) ExcludedFields() GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryOptionsResponse) []GooglePrivacyDlpV2FieldIdResponse {
		return v.ExcludedFields
	}).(GooglePrivacyDlpV2FieldIdResponseArrayOutput)
}

// Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed.
func (o GooglePrivacyDlpV2BigQueryOptionsResponseOutput) IdentifyingFields() GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryOptionsResponse) []GooglePrivacyDlpV2FieldIdResponse {
		return v.IdentifyingFields
	}).(GooglePrivacyDlpV2FieldIdResponseArrayOutput)
}

// Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
func (o GooglePrivacyDlpV2BigQueryOptionsResponseOutput) RowsLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryOptionsResponse) string { return v.RowsLimit }).(pulumi.StringOutput)
}

// Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
func (o GooglePrivacyDlpV2BigQueryOptionsResponseOutput) RowsLimitPercent() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryOptionsResponse) int { return v.RowsLimitPercent }).(pulumi.IntOutput)
}

func (o GooglePrivacyDlpV2BigQueryOptionsResponseOutput) SampleMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryOptionsResponse) string { return v.SampleMethod }).(pulumi.StringOutput)
}

// Complete BigQuery table reference.
func (o GooglePrivacyDlpV2BigQueryOptionsResponseOutput) TableReference() GooglePrivacyDlpV2BigQueryTableResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryOptionsResponse) GooglePrivacyDlpV2BigQueryTableResponse {
		return v.TableReference
	}).(GooglePrivacyDlpV2BigQueryTableResponseOutput)
}

type GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2BigQueryOptionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput) ToGooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput() GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput) ToGooglePrivacyDlpV2BigQueryOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput) Elem() GooglePrivacyDlpV2BigQueryOptionsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryOptionsResponse) GooglePrivacyDlpV2BigQueryOptionsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2BigQueryOptionsResponse
		return ret
	}).(GooglePrivacyDlpV2BigQueryOptionsResponseOutput)
}

// References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings.
func (o GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput) ExcludedFields() GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryOptionsResponse) []GooglePrivacyDlpV2FieldIdResponse {
		if v == nil {
			return nil
		}
		return v.ExcludedFields
	}).(GooglePrivacyDlpV2FieldIdResponseArrayOutput)
}

// Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed.
func (o GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput) IdentifyingFields() GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryOptionsResponse) []GooglePrivacyDlpV2FieldIdResponse {
		if v == nil {
			return nil
		}
		return v.IdentifyingFields
	}).(GooglePrivacyDlpV2FieldIdResponseArrayOutput)
}

// Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
func (o GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput) RowsLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RowsLimit
	}).(pulumi.StringPtrOutput)
}

// Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
func (o GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput) RowsLimitPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryOptionsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RowsLimitPercent
	}).(pulumi.IntPtrOutput)
}

func (o GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput) SampleMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SampleMethod
	}).(pulumi.StringPtrOutput)
}

// Complete BigQuery table reference.
func (o GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput) TableReference() GooglePrivacyDlpV2BigQueryTableResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryOptionsResponse) *GooglePrivacyDlpV2BigQueryTableResponse {
		if v == nil {
			return nil
		}
		return &v.TableReference
	}).(GooglePrivacyDlpV2BigQueryTableResponsePtrOutput)
}

// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
type GooglePrivacyDlpV2BigQueryTable struct {
	// Dataset ID of the table.
	DatasetId *string `pulumi:"datasetId"`
	// The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
	Project *string `pulumi:"project"`
	// Name of the table.
	TableId *string `pulumi:"tableId"`
}

// GooglePrivacyDlpV2BigQueryTableInput is an input type that accepts GooglePrivacyDlpV2BigQueryTableArgs and GooglePrivacyDlpV2BigQueryTableOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BigQueryTableInput` via:
//
//          GooglePrivacyDlpV2BigQueryTableArgs{...}
type GooglePrivacyDlpV2BigQueryTableInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BigQueryTableOutput() GooglePrivacyDlpV2BigQueryTableOutput
	ToGooglePrivacyDlpV2BigQueryTableOutputWithContext(context.Context) GooglePrivacyDlpV2BigQueryTableOutput
}

// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
type GooglePrivacyDlpV2BigQueryTableArgs struct {
	// Dataset ID of the table.
	DatasetId pulumi.StringPtrInput `pulumi:"datasetId"`
	// The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Name of the table.
	TableId pulumi.StringPtrInput `pulumi:"tableId"`
}

func (GooglePrivacyDlpV2BigQueryTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BigQueryTable)(nil)).Elem()
}

func (i GooglePrivacyDlpV2BigQueryTableArgs) ToGooglePrivacyDlpV2BigQueryTableOutput() GooglePrivacyDlpV2BigQueryTableOutput {
	return i.ToGooglePrivacyDlpV2BigQueryTableOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BigQueryTableArgs) ToGooglePrivacyDlpV2BigQueryTableOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryTableOutput)
}

func (i GooglePrivacyDlpV2BigQueryTableArgs) ToGooglePrivacyDlpV2BigQueryTablePtrOutput() GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return i.ToGooglePrivacyDlpV2BigQueryTablePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BigQueryTableArgs) ToGooglePrivacyDlpV2BigQueryTablePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryTableOutput).ToGooglePrivacyDlpV2BigQueryTablePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2BigQueryTablePtrInput is an input type that accepts GooglePrivacyDlpV2BigQueryTableArgs, GooglePrivacyDlpV2BigQueryTablePtr and GooglePrivacyDlpV2BigQueryTablePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BigQueryTablePtrInput` via:
//
//          GooglePrivacyDlpV2BigQueryTableArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2BigQueryTablePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BigQueryTablePtrOutput() GooglePrivacyDlpV2BigQueryTablePtrOutput
	ToGooglePrivacyDlpV2BigQueryTablePtrOutputWithContext(context.Context) GooglePrivacyDlpV2BigQueryTablePtrOutput
}

type googlePrivacyDlpV2BigQueryTablePtrType GooglePrivacyDlpV2BigQueryTableArgs

func GooglePrivacyDlpV2BigQueryTablePtr(v *GooglePrivacyDlpV2BigQueryTableArgs) GooglePrivacyDlpV2BigQueryTablePtrInput {
	return (*googlePrivacyDlpV2BigQueryTablePtrType)(v)
}

func (*googlePrivacyDlpV2BigQueryTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2BigQueryTable)(nil)).Elem()
}

func (i *googlePrivacyDlpV2BigQueryTablePtrType) ToGooglePrivacyDlpV2BigQueryTablePtrOutput() GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return i.ToGooglePrivacyDlpV2BigQueryTablePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2BigQueryTablePtrType) ToGooglePrivacyDlpV2BigQueryTablePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryTablePtrOutput)
}

// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
type GooglePrivacyDlpV2BigQueryTableOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BigQueryTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BigQueryTable)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BigQueryTableOutput) ToGooglePrivacyDlpV2BigQueryTableOutput() GooglePrivacyDlpV2BigQueryTableOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryTableOutput) ToGooglePrivacyDlpV2BigQueryTableOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryTableOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryTableOutput) ToGooglePrivacyDlpV2BigQueryTablePtrOutput() GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return o.ToGooglePrivacyDlpV2BigQueryTablePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2BigQueryTableOutput) ToGooglePrivacyDlpV2BigQueryTablePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2BigQueryTable) *GooglePrivacyDlpV2BigQueryTable {
		return &v
	}).(GooglePrivacyDlpV2BigQueryTablePtrOutput)
}

// Dataset ID of the table.
func (o GooglePrivacyDlpV2BigQueryTableOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryTable) *string { return v.DatasetId }).(pulumi.StringPtrOutput)
}

// The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
func (o GooglePrivacyDlpV2BigQueryTableOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryTable) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// Name of the table.
func (o GooglePrivacyDlpV2BigQueryTableOutput) TableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryTable) *string { return v.TableId }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2BigQueryTablePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BigQueryTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2BigQueryTable)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BigQueryTablePtrOutput) ToGooglePrivacyDlpV2BigQueryTablePtrOutput() GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryTablePtrOutput) ToGooglePrivacyDlpV2BigQueryTablePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryTablePtrOutput) Elem() GooglePrivacyDlpV2BigQueryTableOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryTable) GooglePrivacyDlpV2BigQueryTable {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2BigQueryTable
		return ret
	}).(GooglePrivacyDlpV2BigQueryTableOutput)
}

// Dataset ID of the table.
func (o GooglePrivacyDlpV2BigQueryTablePtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryTable) *string {
		if v == nil {
			return nil
		}
		return v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
func (o GooglePrivacyDlpV2BigQueryTablePtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryTable) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

// Name of the table.
func (o GooglePrivacyDlpV2BigQueryTablePtrOutput) TableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryTable) *string {
		if v == nil {
			return nil
		}
		return v.TableId
	}).(pulumi.StringPtrOutput)
}

// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
type GooglePrivacyDlpV2BigQueryTableResponse struct {
	// Dataset ID of the table.
	DatasetId string `pulumi:"datasetId"`
	// The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
	Project string `pulumi:"project"`
	// Name of the table.
	TableId string `pulumi:"tableId"`
}

// GooglePrivacyDlpV2BigQueryTableResponseInput is an input type that accepts GooglePrivacyDlpV2BigQueryTableResponseArgs and GooglePrivacyDlpV2BigQueryTableResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BigQueryTableResponseInput` via:
//
//          GooglePrivacyDlpV2BigQueryTableResponseArgs{...}
type GooglePrivacyDlpV2BigQueryTableResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BigQueryTableResponseOutput() GooglePrivacyDlpV2BigQueryTableResponseOutput
	ToGooglePrivacyDlpV2BigQueryTableResponseOutputWithContext(context.Context) GooglePrivacyDlpV2BigQueryTableResponseOutput
}

// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
type GooglePrivacyDlpV2BigQueryTableResponseArgs struct {
	// Dataset ID of the table.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
	// The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
	Project pulumi.StringInput `pulumi:"project"`
	// Name of the table.
	TableId pulumi.StringInput `pulumi:"tableId"`
}

func (GooglePrivacyDlpV2BigQueryTableResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BigQueryTableResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2BigQueryTableResponseArgs) ToGooglePrivacyDlpV2BigQueryTableResponseOutput() GooglePrivacyDlpV2BigQueryTableResponseOutput {
	return i.ToGooglePrivacyDlpV2BigQueryTableResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BigQueryTableResponseArgs) ToGooglePrivacyDlpV2BigQueryTableResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryTableResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryTableResponseOutput)
}

func (i GooglePrivacyDlpV2BigQueryTableResponseArgs) ToGooglePrivacyDlpV2BigQueryTableResponsePtrOutput() GooglePrivacyDlpV2BigQueryTableResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2BigQueryTableResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BigQueryTableResponseArgs) ToGooglePrivacyDlpV2BigQueryTableResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryTableResponseOutput).ToGooglePrivacyDlpV2BigQueryTableResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2BigQueryTableResponsePtrInput is an input type that accepts GooglePrivacyDlpV2BigQueryTableResponseArgs, GooglePrivacyDlpV2BigQueryTableResponsePtr and GooglePrivacyDlpV2BigQueryTableResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BigQueryTableResponsePtrInput` via:
//
//          GooglePrivacyDlpV2BigQueryTableResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2BigQueryTableResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BigQueryTableResponsePtrOutput() GooglePrivacyDlpV2BigQueryTableResponsePtrOutput
	ToGooglePrivacyDlpV2BigQueryTableResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2BigQueryTableResponsePtrOutput
}

type googlePrivacyDlpV2BigQueryTableResponsePtrType GooglePrivacyDlpV2BigQueryTableResponseArgs

func GooglePrivacyDlpV2BigQueryTableResponsePtr(v *GooglePrivacyDlpV2BigQueryTableResponseArgs) GooglePrivacyDlpV2BigQueryTableResponsePtrInput {
	return (*googlePrivacyDlpV2BigQueryTableResponsePtrType)(v)
}

func (*googlePrivacyDlpV2BigQueryTableResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2BigQueryTableResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2BigQueryTableResponsePtrType) ToGooglePrivacyDlpV2BigQueryTableResponsePtrOutput() GooglePrivacyDlpV2BigQueryTableResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2BigQueryTableResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2BigQueryTableResponsePtrType) ToGooglePrivacyDlpV2BigQueryTableResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BigQueryTableResponsePtrOutput)
}

// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
type GooglePrivacyDlpV2BigQueryTableResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BigQueryTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BigQueryTableResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BigQueryTableResponseOutput) ToGooglePrivacyDlpV2BigQueryTableResponseOutput() GooglePrivacyDlpV2BigQueryTableResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryTableResponseOutput) ToGooglePrivacyDlpV2BigQueryTableResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryTableResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryTableResponseOutput) ToGooglePrivacyDlpV2BigQueryTableResponsePtrOutput() GooglePrivacyDlpV2BigQueryTableResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2BigQueryTableResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2BigQueryTableResponseOutput) ToGooglePrivacyDlpV2BigQueryTableResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryTableResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2BigQueryTableResponse) *GooglePrivacyDlpV2BigQueryTableResponse {
		return &v
	}).(GooglePrivacyDlpV2BigQueryTableResponsePtrOutput)
}

// Dataset ID of the table.
func (o GooglePrivacyDlpV2BigQueryTableResponseOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryTableResponse) string { return v.DatasetId }).(pulumi.StringOutput)
}

// The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
func (o GooglePrivacyDlpV2BigQueryTableResponseOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryTableResponse) string { return v.Project }).(pulumi.StringOutput)
}

// Name of the table.
func (o GooglePrivacyDlpV2BigQueryTableResponseOutput) TableId() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BigQueryTableResponse) string { return v.TableId }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2BigQueryTableResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BigQueryTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2BigQueryTableResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BigQueryTableResponsePtrOutput) ToGooglePrivacyDlpV2BigQueryTableResponsePtrOutput() GooglePrivacyDlpV2BigQueryTableResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryTableResponsePtrOutput) ToGooglePrivacyDlpV2BigQueryTableResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BigQueryTableResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2BigQueryTableResponsePtrOutput) Elem() GooglePrivacyDlpV2BigQueryTableResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryTableResponse) GooglePrivacyDlpV2BigQueryTableResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2BigQueryTableResponse
		return ret
	}).(GooglePrivacyDlpV2BigQueryTableResponseOutput)
}

// Dataset ID of the table.
func (o GooglePrivacyDlpV2BigQueryTableResponsePtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetId
	}).(pulumi.StringPtrOutput)
}

// The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
func (o GooglePrivacyDlpV2BigQueryTableResponsePtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// Name of the table.
func (o GooglePrivacyDlpV2BigQueryTableResponsePtrOutput) TableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BigQueryTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TableId
	}).(pulumi.StringPtrOutput)
}

// Bucket is represented as a range, along with replacement values.
type GooglePrivacyDlpV2Bucket struct {
	// Upper bound of the range, exclusive; type must match min.
	Max *GooglePrivacyDlpV2Value `pulumi:"max"`
	// Lower bound of the range, inclusive. Type should be the same as max if used.
	Min *GooglePrivacyDlpV2Value `pulumi:"min"`
	// Replacement value for this bucket.
	ReplacementValue GooglePrivacyDlpV2Value `pulumi:"replacementValue"`
}

// GooglePrivacyDlpV2BucketInput is an input type that accepts GooglePrivacyDlpV2BucketArgs and GooglePrivacyDlpV2BucketOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BucketInput` via:
//
//          GooglePrivacyDlpV2BucketArgs{...}
type GooglePrivacyDlpV2BucketInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BucketOutput() GooglePrivacyDlpV2BucketOutput
	ToGooglePrivacyDlpV2BucketOutputWithContext(context.Context) GooglePrivacyDlpV2BucketOutput
}

// Bucket is represented as a range, along with replacement values.
type GooglePrivacyDlpV2BucketArgs struct {
	// Upper bound of the range, exclusive; type must match min.
	Max GooglePrivacyDlpV2ValuePtrInput `pulumi:"max"`
	// Lower bound of the range, inclusive. Type should be the same as max if used.
	Min GooglePrivacyDlpV2ValuePtrInput `pulumi:"min"`
	// Replacement value for this bucket.
	ReplacementValue GooglePrivacyDlpV2ValueInput `pulumi:"replacementValue"`
}

func (GooglePrivacyDlpV2BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Bucket)(nil)).Elem()
}

func (i GooglePrivacyDlpV2BucketArgs) ToGooglePrivacyDlpV2BucketOutput() GooglePrivacyDlpV2BucketOutput {
	return i.ToGooglePrivacyDlpV2BucketOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BucketArgs) ToGooglePrivacyDlpV2BucketOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BucketOutput)
}

// GooglePrivacyDlpV2BucketArrayInput is an input type that accepts GooglePrivacyDlpV2BucketArray and GooglePrivacyDlpV2BucketArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BucketArrayInput` via:
//
//          GooglePrivacyDlpV2BucketArray{ GooglePrivacyDlpV2BucketArgs{...} }
type GooglePrivacyDlpV2BucketArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BucketArrayOutput() GooglePrivacyDlpV2BucketArrayOutput
	ToGooglePrivacyDlpV2BucketArrayOutputWithContext(context.Context) GooglePrivacyDlpV2BucketArrayOutput
}

type GooglePrivacyDlpV2BucketArray []GooglePrivacyDlpV2BucketInput

func (GooglePrivacyDlpV2BucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2Bucket)(nil)).Elem()
}

func (i GooglePrivacyDlpV2BucketArray) ToGooglePrivacyDlpV2BucketArrayOutput() GooglePrivacyDlpV2BucketArrayOutput {
	return i.ToGooglePrivacyDlpV2BucketArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BucketArray) ToGooglePrivacyDlpV2BucketArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BucketArrayOutput)
}

// Bucket is represented as a range, along with replacement values.
type GooglePrivacyDlpV2BucketOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Bucket)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BucketOutput) ToGooglePrivacyDlpV2BucketOutput() GooglePrivacyDlpV2BucketOutput {
	return o
}

func (o GooglePrivacyDlpV2BucketOutput) ToGooglePrivacyDlpV2BucketOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketOutput {
	return o
}

// Upper bound of the range, exclusive; type must match min.
func (o GooglePrivacyDlpV2BucketOutput) Max() GooglePrivacyDlpV2ValuePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Bucket) *GooglePrivacyDlpV2Value { return v.Max }).(GooglePrivacyDlpV2ValuePtrOutput)
}

// Lower bound of the range, inclusive. Type should be the same as max if used.
func (o GooglePrivacyDlpV2BucketOutput) Min() GooglePrivacyDlpV2ValuePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Bucket) *GooglePrivacyDlpV2Value { return v.Min }).(GooglePrivacyDlpV2ValuePtrOutput)
}

// Replacement value for this bucket.
func (o GooglePrivacyDlpV2BucketOutput) ReplacementValue() GooglePrivacyDlpV2ValueOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Bucket) GooglePrivacyDlpV2Value { return v.ReplacementValue }).(GooglePrivacyDlpV2ValueOutput)
}

type GooglePrivacyDlpV2BucketArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2Bucket)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BucketArrayOutput) ToGooglePrivacyDlpV2BucketArrayOutput() GooglePrivacyDlpV2BucketArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2BucketArrayOutput) ToGooglePrivacyDlpV2BucketArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2BucketArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2BucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2Bucket {
		return vs[0].([]GooglePrivacyDlpV2Bucket)[vs[1].(int)]
	}).(GooglePrivacyDlpV2BucketOutput)
}

// Bucket is represented as a range, along with replacement values.
type GooglePrivacyDlpV2BucketResponse struct {
	// Upper bound of the range, exclusive; type must match min.
	Max GooglePrivacyDlpV2ValueResponse `pulumi:"max"`
	// Lower bound of the range, inclusive. Type should be the same as max if used.
	Min GooglePrivacyDlpV2ValueResponse `pulumi:"min"`
	// Replacement value for this bucket.
	ReplacementValue GooglePrivacyDlpV2ValueResponse `pulumi:"replacementValue"`
}

// GooglePrivacyDlpV2BucketResponseInput is an input type that accepts GooglePrivacyDlpV2BucketResponseArgs and GooglePrivacyDlpV2BucketResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BucketResponseInput` via:
//
//          GooglePrivacyDlpV2BucketResponseArgs{...}
type GooglePrivacyDlpV2BucketResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BucketResponseOutput() GooglePrivacyDlpV2BucketResponseOutput
	ToGooglePrivacyDlpV2BucketResponseOutputWithContext(context.Context) GooglePrivacyDlpV2BucketResponseOutput
}

// Bucket is represented as a range, along with replacement values.
type GooglePrivacyDlpV2BucketResponseArgs struct {
	// Upper bound of the range, exclusive; type must match min.
	Max GooglePrivacyDlpV2ValueResponseInput `pulumi:"max"`
	// Lower bound of the range, inclusive. Type should be the same as max if used.
	Min GooglePrivacyDlpV2ValueResponseInput `pulumi:"min"`
	// Replacement value for this bucket.
	ReplacementValue GooglePrivacyDlpV2ValueResponseInput `pulumi:"replacementValue"`
}

func (GooglePrivacyDlpV2BucketResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BucketResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2BucketResponseArgs) ToGooglePrivacyDlpV2BucketResponseOutput() GooglePrivacyDlpV2BucketResponseOutput {
	return i.ToGooglePrivacyDlpV2BucketResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BucketResponseArgs) ToGooglePrivacyDlpV2BucketResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BucketResponseOutput)
}

// GooglePrivacyDlpV2BucketResponseArrayInput is an input type that accepts GooglePrivacyDlpV2BucketResponseArray and GooglePrivacyDlpV2BucketResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BucketResponseArrayInput` via:
//
//          GooglePrivacyDlpV2BucketResponseArray{ GooglePrivacyDlpV2BucketResponseArgs{...} }
type GooglePrivacyDlpV2BucketResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BucketResponseArrayOutput() GooglePrivacyDlpV2BucketResponseArrayOutput
	ToGooglePrivacyDlpV2BucketResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2BucketResponseArrayOutput
}

type GooglePrivacyDlpV2BucketResponseArray []GooglePrivacyDlpV2BucketResponseInput

func (GooglePrivacyDlpV2BucketResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2BucketResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2BucketResponseArray) ToGooglePrivacyDlpV2BucketResponseArrayOutput() GooglePrivacyDlpV2BucketResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2BucketResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BucketResponseArray) ToGooglePrivacyDlpV2BucketResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BucketResponseArrayOutput)
}

// Bucket is represented as a range, along with replacement values.
type GooglePrivacyDlpV2BucketResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BucketResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BucketResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BucketResponseOutput) ToGooglePrivacyDlpV2BucketResponseOutput() GooglePrivacyDlpV2BucketResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2BucketResponseOutput) ToGooglePrivacyDlpV2BucketResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketResponseOutput {
	return o
}

// Upper bound of the range, exclusive; type must match min.
func (o GooglePrivacyDlpV2BucketResponseOutput) Max() GooglePrivacyDlpV2ValueResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BucketResponse) GooglePrivacyDlpV2ValueResponse { return v.Max }).(GooglePrivacyDlpV2ValueResponseOutput)
}

// Lower bound of the range, inclusive. Type should be the same as max if used.
func (o GooglePrivacyDlpV2BucketResponseOutput) Min() GooglePrivacyDlpV2ValueResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BucketResponse) GooglePrivacyDlpV2ValueResponse { return v.Min }).(GooglePrivacyDlpV2ValueResponseOutput)
}

// Replacement value for this bucket.
func (o GooglePrivacyDlpV2BucketResponseOutput) ReplacementValue() GooglePrivacyDlpV2ValueResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BucketResponse) GooglePrivacyDlpV2ValueResponse { return v.ReplacementValue }).(GooglePrivacyDlpV2ValueResponseOutput)
}

type GooglePrivacyDlpV2BucketResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BucketResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2BucketResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BucketResponseArrayOutput) ToGooglePrivacyDlpV2BucketResponseArrayOutput() GooglePrivacyDlpV2BucketResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2BucketResponseArrayOutput) ToGooglePrivacyDlpV2BucketResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2BucketResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2BucketResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2BucketResponse {
		return vs[0].([]GooglePrivacyDlpV2BucketResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2BucketResponseOutput)
}

// Generalization function that buckets values based on ranges. The ranges and replacement values are dynamically provided by the user for custom behavior, such as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH This can be used on data of type: number, long, string, timestamp. If the bound `Value` type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
type GooglePrivacyDlpV2BucketingConfig struct {
	// Set of buckets. Ranges must be non-overlapping.
	Buckets []GooglePrivacyDlpV2Bucket `pulumi:"buckets"`
}

// GooglePrivacyDlpV2BucketingConfigInput is an input type that accepts GooglePrivacyDlpV2BucketingConfigArgs and GooglePrivacyDlpV2BucketingConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BucketingConfigInput` via:
//
//          GooglePrivacyDlpV2BucketingConfigArgs{...}
type GooglePrivacyDlpV2BucketingConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BucketingConfigOutput() GooglePrivacyDlpV2BucketingConfigOutput
	ToGooglePrivacyDlpV2BucketingConfigOutputWithContext(context.Context) GooglePrivacyDlpV2BucketingConfigOutput
}

// Generalization function that buckets values based on ranges. The ranges and replacement values are dynamically provided by the user for custom behavior, such as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH This can be used on data of type: number, long, string, timestamp. If the bound `Value` type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
type GooglePrivacyDlpV2BucketingConfigArgs struct {
	// Set of buckets. Ranges must be non-overlapping.
	Buckets GooglePrivacyDlpV2BucketArrayInput `pulumi:"buckets"`
}

func (GooglePrivacyDlpV2BucketingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BucketingConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2BucketingConfigArgs) ToGooglePrivacyDlpV2BucketingConfigOutput() GooglePrivacyDlpV2BucketingConfigOutput {
	return i.ToGooglePrivacyDlpV2BucketingConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BucketingConfigArgs) ToGooglePrivacyDlpV2BucketingConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BucketingConfigOutput)
}

func (i GooglePrivacyDlpV2BucketingConfigArgs) ToGooglePrivacyDlpV2BucketingConfigPtrOutput() GooglePrivacyDlpV2BucketingConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2BucketingConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BucketingConfigArgs) ToGooglePrivacyDlpV2BucketingConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BucketingConfigOutput).ToGooglePrivacyDlpV2BucketingConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2BucketingConfigPtrInput is an input type that accepts GooglePrivacyDlpV2BucketingConfigArgs, GooglePrivacyDlpV2BucketingConfigPtr and GooglePrivacyDlpV2BucketingConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BucketingConfigPtrInput` via:
//
//          GooglePrivacyDlpV2BucketingConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2BucketingConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BucketingConfigPtrOutput() GooglePrivacyDlpV2BucketingConfigPtrOutput
	ToGooglePrivacyDlpV2BucketingConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2BucketingConfigPtrOutput
}

type googlePrivacyDlpV2BucketingConfigPtrType GooglePrivacyDlpV2BucketingConfigArgs

func GooglePrivacyDlpV2BucketingConfigPtr(v *GooglePrivacyDlpV2BucketingConfigArgs) GooglePrivacyDlpV2BucketingConfigPtrInput {
	return (*googlePrivacyDlpV2BucketingConfigPtrType)(v)
}

func (*googlePrivacyDlpV2BucketingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2BucketingConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2BucketingConfigPtrType) ToGooglePrivacyDlpV2BucketingConfigPtrOutput() GooglePrivacyDlpV2BucketingConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2BucketingConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2BucketingConfigPtrType) ToGooglePrivacyDlpV2BucketingConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BucketingConfigPtrOutput)
}

// Generalization function that buckets values based on ranges. The ranges and replacement values are dynamically provided by the user for custom behavior, such as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH This can be used on data of type: number, long, string, timestamp. If the bound `Value` type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
type GooglePrivacyDlpV2BucketingConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BucketingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BucketingConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BucketingConfigOutput) ToGooglePrivacyDlpV2BucketingConfigOutput() GooglePrivacyDlpV2BucketingConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2BucketingConfigOutput) ToGooglePrivacyDlpV2BucketingConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketingConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2BucketingConfigOutput) ToGooglePrivacyDlpV2BucketingConfigPtrOutput() GooglePrivacyDlpV2BucketingConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2BucketingConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2BucketingConfigOutput) ToGooglePrivacyDlpV2BucketingConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2BucketingConfig) *GooglePrivacyDlpV2BucketingConfig {
		return &v
	}).(GooglePrivacyDlpV2BucketingConfigPtrOutput)
}

// Set of buckets. Ranges must be non-overlapping.
func (o GooglePrivacyDlpV2BucketingConfigOutput) Buckets() GooglePrivacyDlpV2BucketArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BucketingConfig) []GooglePrivacyDlpV2Bucket { return v.Buckets }).(GooglePrivacyDlpV2BucketArrayOutput)
}

type GooglePrivacyDlpV2BucketingConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BucketingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2BucketingConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BucketingConfigPtrOutput) ToGooglePrivacyDlpV2BucketingConfigPtrOutput() GooglePrivacyDlpV2BucketingConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2BucketingConfigPtrOutput) ToGooglePrivacyDlpV2BucketingConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketingConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2BucketingConfigPtrOutput) Elem() GooglePrivacyDlpV2BucketingConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BucketingConfig) GooglePrivacyDlpV2BucketingConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2BucketingConfig
		return ret
	}).(GooglePrivacyDlpV2BucketingConfigOutput)
}

// Set of buckets. Ranges must be non-overlapping.
func (o GooglePrivacyDlpV2BucketingConfigPtrOutput) Buckets() GooglePrivacyDlpV2BucketArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2BucketingConfig) []GooglePrivacyDlpV2Bucket {
		if v == nil {
			return nil
		}
		return v.Buckets
	}).(GooglePrivacyDlpV2BucketArrayOutput)
}

// Generalization function that buckets values based on ranges. The ranges and replacement values are dynamically provided by the user for custom behavior, such as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH This can be used on data of type: number, long, string, timestamp. If the bound `Value` type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
type GooglePrivacyDlpV2BucketingConfigResponse struct {
	// Set of buckets. Ranges must be non-overlapping.
	Buckets []GooglePrivacyDlpV2BucketResponse `pulumi:"buckets"`
}

// GooglePrivacyDlpV2BucketingConfigResponseInput is an input type that accepts GooglePrivacyDlpV2BucketingConfigResponseArgs and GooglePrivacyDlpV2BucketingConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2BucketingConfigResponseInput` via:
//
//          GooglePrivacyDlpV2BucketingConfigResponseArgs{...}
type GooglePrivacyDlpV2BucketingConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2BucketingConfigResponseOutput() GooglePrivacyDlpV2BucketingConfigResponseOutput
	ToGooglePrivacyDlpV2BucketingConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2BucketingConfigResponseOutput
}

// Generalization function that buckets values based on ranges. The ranges and replacement values are dynamically provided by the user for custom behavior, such as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH This can be used on data of type: number, long, string, timestamp. If the bound `Value` type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
type GooglePrivacyDlpV2BucketingConfigResponseArgs struct {
	// Set of buckets. Ranges must be non-overlapping.
	Buckets GooglePrivacyDlpV2BucketResponseArrayInput `pulumi:"buckets"`
}

func (GooglePrivacyDlpV2BucketingConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BucketingConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2BucketingConfigResponseArgs) ToGooglePrivacyDlpV2BucketingConfigResponseOutput() GooglePrivacyDlpV2BucketingConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2BucketingConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2BucketingConfigResponseArgs) ToGooglePrivacyDlpV2BucketingConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketingConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2BucketingConfigResponseOutput)
}

// Generalization function that buckets values based on ranges. The ranges and replacement values are dynamically provided by the user for custom behavior, such as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH This can be used on data of type: number, long, string, timestamp. If the bound `Value` type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
type GooglePrivacyDlpV2BucketingConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2BucketingConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2BucketingConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2BucketingConfigResponseOutput) ToGooglePrivacyDlpV2BucketingConfigResponseOutput() GooglePrivacyDlpV2BucketingConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2BucketingConfigResponseOutput) ToGooglePrivacyDlpV2BucketingConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2BucketingConfigResponseOutput {
	return o
}

// Set of buckets. Ranges must be non-overlapping.
func (o GooglePrivacyDlpV2BucketingConfigResponseOutput) Buckets() GooglePrivacyDlpV2BucketResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2BucketingConfigResponse) []GooglePrivacyDlpV2BucketResponse { return v.Buckets }).(GooglePrivacyDlpV2BucketResponseArrayOutput)
}

// Compute numerical stats over an individual column, including number of distinct values and value count distribution.
type GooglePrivacyDlpV2CategoricalStatsConfig struct {
	// Field to compute categorical stats on. All column types are supported except for arrays and structs. However, it may be more informative to use NumericalStats when the field type is supported, depending on the data.
	Field *GooglePrivacyDlpV2FieldId `pulumi:"field"`
}

// GooglePrivacyDlpV2CategoricalStatsConfigInput is an input type that accepts GooglePrivacyDlpV2CategoricalStatsConfigArgs and GooglePrivacyDlpV2CategoricalStatsConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CategoricalStatsConfigInput` via:
//
//          GooglePrivacyDlpV2CategoricalStatsConfigArgs{...}
type GooglePrivacyDlpV2CategoricalStatsConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CategoricalStatsConfigOutput() GooglePrivacyDlpV2CategoricalStatsConfigOutput
	ToGooglePrivacyDlpV2CategoricalStatsConfigOutputWithContext(context.Context) GooglePrivacyDlpV2CategoricalStatsConfigOutput
}

// Compute numerical stats over an individual column, including number of distinct values and value count distribution.
type GooglePrivacyDlpV2CategoricalStatsConfigArgs struct {
	// Field to compute categorical stats on. All column types are supported except for arrays and structs. However, it may be more informative to use NumericalStats when the field type is supported, depending on the data.
	Field GooglePrivacyDlpV2FieldIdPtrInput `pulumi:"field"`
}

func (GooglePrivacyDlpV2CategoricalStatsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CategoricalStatsConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CategoricalStatsConfigArgs) ToGooglePrivacyDlpV2CategoricalStatsConfigOutput() GooglePrivacyDlpV2CategoricalStatsConfigOutput {
	return i.ToGooglePrivacyDlpV2CategoricalStatsConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CategoricalStatsConfigArgs) ToGooglePrivacyDlpV2CategoricalStatsConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CategoricalStatsConfigOutput)
}

func (i GooglePrivacyDlpV2CategoricalStatsConfigArgs) ToGooglePrivacyDlpV2CategoricalStatsConfigPtrOutput() GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2CategoricalStatsConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CategoricalStatsConfigArgs) ToGooglePrivacyDlpV2CategoricalStatsConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CategoricalStatsConfigOutput).ToGooglePrivacyDlpV2CategoricalStatsConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CategoricalStatsConfigPtrInput is an input type that accepts GooglePrivacyDlpV2CategoricalStatsConfigArgs, GooglePrivacyDlpV2CategoricalStatsConfigPtr and GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CategoricalStatsConfigPtrInput` via:
//
//          GooglePrivacyDlpV2CategoricalStatsConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CategoricalStatsConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CategoricalStatsConfigPtrOutput() GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput
	ToGooglePrivacyDlpV2CategoricalStatsConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput
}

type googlePrivacyDlpV2CategoricalStatsConfigPtrType GooglePrivacyDlpV2CategoricalStatsConfigArgs

func GooglePrivacyDlpV2CategoricalStatsConfigPtr(v *GooglePrivacyDlpV2CategoricalStatsConfigArgs) GooglePrivacyDlpV2CategoricalStatsConfigPtrInput {
	return (*googlePrivacyDlpV2CategoricalStatsConfigPtrType)(v)
}

func (*googlePrivacyDlpV2CategoricalStatsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CategoricalStatsConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CategoricalStatsConfigPtrType) ToGooglePrivacyDlpV2CategoricalStatsConfigPtrOutput() GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2CategoricalStatsConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CategoricalStatsConfigPtrType) ToGooglePrivacyDlpV2CategoricalStatsConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput)
}

// Compute numerical stats over an individual column, including number of distinct values and value count distribution.
type GooglePrivacyDlpV2CategoricalStatsConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CategoricalStatsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CategoricalStatsConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CategoricalStatsConfigOutput) ToGooglePrivacyDlpV2CategoricalStatsConfigOutput() GooglePrivacyDlpV2CategoricalStatsConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsConfigOutput) ToGooglePrivacyDlpV2CategoricalStatsConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsConfigOutput) ToGooglePrivacyDlpV2CategoricalStatsConfigPtrOutput() GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2CategoricalStatsConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CategoricalStatsConfigOutput) ToGooglePrivacyDlpV2CategoricalStatsConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CategoricalStatsConfig) *GooglePrivacyDlpV2CategoricalStatsConfig {
		return &v
	}).(GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput)
}

// Field to compute categorical stats on. All column types are supported except for arrays and structs. However, it may be more informative to use NumericalStats when the field type is supported, depending on the data.
func (o GooglePrivacyDlpV2CategoricalStatsConfigOutput) Field() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CategoricalStatsConfig) *GooglePrivacyDlpV2FieldId { return v.Field }).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

type GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CategoricalStatsConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput) ToGooglePrivacyDlpV2CategoricalStatsConfigPtrOutput() GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput) ToGooglePrivacyDlpV2CategoricalStatsConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput) Elem() GooglePrivacyDlpV2CategoricalStatsConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CategoricalStatsConfig) GooglePrivacyDlpV2CategoricalStatsConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CategoricalStatsConfig
		return ret
	}).(GooglePrivacyDlpV2CategoricalStatsConfigOutput)
}

// Field to compute categorical stats on. All column types are supported except for arrays and structs. However, it may be more informative to use NumericalStats when the field type is supported, depending on the data.
func (o GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput) Field() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CategoricalStatsConfig) *GooglePrivacyDlpV2FieldId {
		if v == nil {
			return nil
		}
		return v.Field
	}).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// Compute numerical stats over an individual column, including number of distinct values and value count distribution.
type GooglePrivacyDlpV2CategoricalStatsConfigResponse struct {
	// Field to compute categorical stats on. All column types are supported except for arrays and structs. However, it may be more informative to use NumericalStats when the field type is supported, depending on the data.
	Field GooglePrivacyDlpV2FieldIdResponse `pulumi:"field"`
}

// GooglePrivacyDlpV2CategoricalStatsConfigResponseInput is an input type that accepts GooglePrivacyDlpV2CategoricalStatsConfigResponseArgs and GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CategoricalStatsConfigResponseInput` via:
//
//          GooglePrivacyDlpV2CategoricalStatsConfigResponseArgs{...}
type GooglePrivacyDlpV2CategoricalStatsConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CategoricalStatsConfigResponseOutput() GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput
	ToGooglePrivacyDlpV2CategoricalStatsConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput
}

// Compute numerical stats over an individual column, including number of distinct values and value count distribution.
type GooglePrivacyDlpV2CategoricalStatsConfigResponseArgs struct {
	// Field to compute categorical stats on. All column types are supported except for arrays and structs. However, it may be more informative to use NumericalStats when the field type is supported, depending on the data.
	Field GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"field"`
}

func (GooglePrivacyDlpV2CategoricalStatsConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CategoricalStatsConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CategoricalStatsConfigResponseArgs) ToGooglePrivacyDlpV2CategoricalStatsConfigResponseOutput() GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2CategoricalStatsConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CategoricalStatsConfigResponseArgs) ToGooglePrivacyDlpV2CategoricalStatsConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput)
}

func (i GooglePrivacyDlpV2CategoricalStatsConfigResponseArgs) ToGooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput() GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CategoricalStatsConfigResponseArgs) ToGooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput).ToGooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrInput is an input type that accepts GooglePrivacyDlpV2CategoricalStatsConfigResponseArgs, GooglePrivacyDlpV2CategoricalStatsConfigResponsePtr and GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrInput` via:
//
//          GooglePrivacyDlpV2CategoricalStatsConfigResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput() GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput
	ToGooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput
}

type googlePrivacyDlpV2CategoricalStatsConfigResponsePtrType GooglePrivacyDlpV2CategoricalStatsConfigResponseArgs

func GooglePrivacyDlpV2CategoricalStatsConfigResponsePtr(v *GooglePrivacyDlpV2CategoricalStatsConfigResponseArgs) GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrInput {
	return (*googlePrivacyDlpV2CategoricalStatsConfigResponsePtrType)(v)
}

func (*googlePrivacyDlpV2CategoricalStatsConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CategoricalStatsConfigResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CategoricalStatsConfigResponsePtrType) ToGooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput() GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CategoricalStatsConfigResponsePtrType) ToGooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput)
}

// Compute numerical stats over an individual column, including number of distinct values and value count distribution.
type GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CategoricalStatsConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput) ToGooglePrivacyDlpV2CategoricalStatsConfigResponseOutput() GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput) ToGooglePrivacyDlpV2CategoricalStatsConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput) ToGooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput() GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput) ToGooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CategoricalStatsConfigResponse) *GooglePrivacyDlpV2CategoricalStatsConfigResponse {
		return &v
	}).(GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput)
}

// Field to compute categorical stats on. All column types are supported except for arrays and structs. However, it may be more informative to use NumericalStats when the field type is supported, depending on the data.
func (o GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput) Field() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CategoricalStatsConfigResponse) GooglePrivacyDlpV2FieldIdResponse {
		return v.Field
	}).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

type GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CategoricalStatsConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput) ToGooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput() GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput) ToGooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput) Elem() GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CategoricalStatsConfigResponse) GooglePrivacyDlpV2CategoricalStatsConfigResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CategoricalStatsConfigResponse
		return ret
	}).(GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput)
}

// Field to compute categorical stats on. All column types are supported except for arrays and structs. However, it may be more informative to use NumericalStats when the field type is supported, depending on the data.
func (o GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput) Field() GooglePrivacyDlpV2FieldIdResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CategoricalStatsConfigResponse) *GooglePrivacyDlpV2FieldIdResponse {
		if v == nil {
			return nil
		}
		return &v.Field
	}).(GooglePrivacyDlpV2FieldIdResponsePtrOutput)
}

// Histogram of value frequencies in the column.
type GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse struct {
	// Total number of values in this bucket.
	BucketSize string `pulumi:"bucketSize"`
	// Total number of distinct values in this bucket.
	BucketValueCount string `pulumi:"bucketValueCount"`
	// Sample of value frequencies in this bucket. The total number of values returned per bucket is capped at 20.
	BucketValues []GooglePrivacyDlpV2ValueFrequencyResponse `pulumi:"bucketValues"`
	// Lower bound on the value frequency of the values in this bucket.
	ValueFrequencyLowerBound string `pulumi:"valueFrequencyLowerBound"`
	// Upper bound on the value frequency of the values in this bucket.
	ValueFrequencyUpperBound string `pulumi:"valueFrequencyUpperBound"`
}

// GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseInput is an input type that accepts GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArgs and GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseInput` via:
//
//          GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArgs{...}
type GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput() GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput
	ToGooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutputWithContext(context.Context) GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput
}

// Histogram of value frequencies in the column.
type GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArgs struct {
	// Total number of values in this bucket.
	BucketSize pulumi.StringInput `pulumi:"bucketSize"`
	// Total number of distinct values in this bucket.
	BucketValueCount pulumi.StringInput `pulumi:"bucketValueCount"`
	// Sample of value frequencies in this bucket. The total number of values returned per bucket is capped at 20.
	BucketValues GooglePrivacyDlpV2ValueFrequencyResponseArrayInput `pulumi:"bucketValues"`
	// Lower bound on the value frequency of the values in this bucket.
	ValueFrequencyLowerBound pulumi.StringInput `pulumi:"valueFrequencyLowerBound"`
	// Upper bound on the value frequency of the values in this bucket.
	ValueFrequencyUpperBound pulumi.StringInput `pulumi:"valueFrequencyUpperBound"`
}

func (GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArgs) ToGooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput() GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput {
	return i.ToGooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArgs) ToGooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput)
}

// GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayInput is an input type that accepts GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArray and GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayInput` via:
//
//          GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArray{ GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArgs{...} }
type GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput
	ToGooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput
}

type GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArray []GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseInput

func (GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArray) ToGooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArray) ToGooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput)
}

// Histogram of value frequencies in the column.
type GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput) ToGooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput() GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput) ToGooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput {
	return o
}

// Total number of values in this bucket.
func (o GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput) BucketSize() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse) string { return v.BucketSize }).(pulumi.StringOutput)
}

// Total number of distinct values in this bucket.
func (o GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput) BucketValueCount() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse) string { return v.BucketValueCount }).(pulumi.StringOutput)
}

// Sample of value frequencies in this bucket. The total number of values returned per bucket is capped at 20.
func (o GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput) BucketValues() GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse) []GooglePrivacyDlpV2ValueFrequencyResponse {
		return v.BucketValues
	}).(GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput)
}

// Lower bound on the value frequency of the values in this bucket.
func (o GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput) ValueFrequencyLowerBound() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse) string {
		return v.ValueFrequencyLowerBound
	}).(pulumi.StringOutput)
}

// Upper bound on the value frequency of the values in this bucket.
func (o GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput) ValueFrequencyUpperBound() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse) string {
		return v.ValueFrequencyUpperBound
	}).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput) ToGooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput) ToGooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse {
		return vs[0].([]GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput)
}

// Result of the categorical stats computation.
type GooglePrivacyDlpV2CategoricalStatsResultResponse struct {
	// Histogram of value frequencies in the column.
	ValueFrequencyHistogramBuckets []GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse `pulumi:"valueFrequencyHistogramBuckets"`
}

// GooglePrivacyDlpV2CategoricalStatsResultResponseInput is an input type that accepts GooglePrivacyDlpV2CategoricalStatsResultResponseArgs and GooglePrivacyDlpV2CategoricalStatsResultResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CategoricalStatsResultResponseInput` via:
//
//          GooglePrivacyDlpV2CategoricalStatsResultResponseArgs{...}
type GooglePrivacyDlpV2CategoricalStatsResultResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CategoricalStatsResultResponseOutput() GooglePrivacyDlpV2CategoricalStatsResultResponseOutput
	ToGooglePrivacyDlpV2CategoricalStatsResultResponseOutputWithContext(context.Context) GooglePrivacyDlpV2CategoricalStatsResultResponseOutput
}

// Result of the categorical stats computation.
type GooglePrivacyDlpV2CategoricalStatsResultResponseArgs struct {
	// Histogram of value frequencies in the column.
	ValueFrequencyHistogramBuckets GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayInput `pulumi:"valueFrequencyHistogramBuckets"`
}

func (GooglePrivacyDlpV2CategoricalStatsResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CategoricalStatsResultResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CategoricalStatsResultResponseArgs) ToGooglePrivacyDlpV2CategoricalStatsResultResponseOutput() GooglePrivacyDlpV2CategoricalStatsResultResponseOutput {
	return i.ToGooglePrivacyDlpV2CategoricalStatsResultResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CategoricalStatsResultResponseArgs) ToGooglePrivacyDlpV2CategoricalStatsResultResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CategoricalStatsResultResponseOutput)
}

func (i GooglePrivacyDlpV2CategoricalStatsResultResponseArgs) ToGooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput() GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CategoricalStatsResultResponseArgs) ToGooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CategoricalStatsResultResponseOutput).ToGooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CategoricalStatsResultResponsePtrInput is an input type that accepts GooglePrivacyDlpV2CategoricalStatsResultResponseArgs, GooglePrivacyDlpV2CategoricalStatsResultResponsePtr and GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CategoricalStatsResultResponsePtrInput` via:
//
//          GooglePrivacyDlpV2CategoricalStatsResultResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CategoricalStatsResultResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput() GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput
	ToGooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput
}

type googlePrivacyDlpV2CategoricalStatsResultResponsePtrType GooglePrivacyDlpV2CategoricalStatsResultResponseArgs

func GooglePrivacyDlpV2CategoricalStatsResultResponsePtr(v *GooglePrivacyDlpV2CategoricalStatsResultResponseArgs) GooglePrivacyDlpV2CategoricalStatsResultResponsePtrInput {
	return (*googlePrivacyDlpV2CategoricalStatsResultResponsePtrType)(v)
}

func (*googlePrivacyDlpV2CategoricalStatsResultResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CategoricalStatsResultResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CategoricalStatsResultResponsePtrType) ToGooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput() GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CategoricalStatsResultResponsePtrType) ToGooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput)
}

// Result of the categorical stats computation.
type GooglePrivacyDlpV2CategoricalStatsResultResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CategoricalStatsResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CategoricalStatsResultResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CategoricalStatsResultResponseOutput) ToGooglePrivacyDlpV2CategoricalStatsResultResponseOutput() GooglePrivacyDlpV2CategoricalStatsResultResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsResultResponseOutput) ToGooglePrivacyDlpV2CategoricalStatsResultResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsResultResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsResultResponseOutput) ToGooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput() GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CategoricalStatsResultResponseOutput) ToGooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CategoricalStatsResultResponse) *GooglePrivacyDlpV2CategoricalStatsResultResponse {
		return &v
	}).(GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput)
}

// Histogram of value frequencies in the column.
func (o GooglePrivacyDlpV2CategoricalStatsResultResponseOutput) ValueFrequencyHistogramBuckets() GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CategoricalStatsResultResponse) []GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse {
		return v.ValueFrequencyHistogramBuckets
	}).(GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput)
}

type GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CategoricalStatsResultResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput) ToGooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput() GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput) ToGooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput) Elem() GooglePrivacyDlpV2CategoricalStatsResultResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CategoricalStatsResultResponse) GooglePrivacyDlpV2CategoricalStatsResultResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CategoricalStatsResultResponse
		return ret
	}).(GooglePrivacyDlpV2CategoricalStatsResultResponseOutput)
}

// Histogram of value frequencies in the column.
func (o GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput) ValueFrequencyHistogramBuckets() GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CategoricalStatsResultResponse) []GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponse {
		if v == nil {
			return nil
		}
		return v.ValueFrequencyHistogramBuckets
	}).(GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput)
}

// Partially mask a string by replacing a given number of characters with a fixed character. Masking can start from the beginning or end of the string. This can be used on data of any type (numbers, longs, and so on) and when de-identifying structured data we'll attempt to preserve the original data's type. (This allows you to take a long like 123 and modify it to a string like **3.
type GooglePrivacyDlpV2CharacterMaskConfig struct {
	// When masking a string, items in this list will be skipped when replacing characters. For example, if the input string is `555-555-5555` and you instruct Cloud DLP to skip `-` and mask 5 characters with `*`, Cloud DLP returns `***-**5-5555`.
	CharactersToIgnore []GooglePrivacyDlpV2CharsToIgnore `pulumi:"charactersToIgnore"`
	// Character to use to mask the sensitive values—for example, `*` for an alphabetic string such as a name, or `0` for a numeric string such as ZIP code or credit card number. This string must have a length of 1. If not supplied, this value defaults to `*` for strings, and `0` for digits.
	MaskingCharacter *string `pulumi:"maskingCharacter"`
	// Number of characters to mask. If not set, all matching chars will be masked. Skipped characters do not count towards this tally.
	NumberToMask *int `pulumi:"numberToMask"`
	// Mask characters in reverse order. For example, if `masking_character` is `0`, `number_to_mask` is `14`, and `reverse_order` is `false`, then the input string `1234-5678-9012-3456` is masked as `00000000000000-3456`. If `masking_character` is `*`, `number_to_mask` is `3`, and `reverse_order` is `true`, then the string `12345` is masked as `12***`.
	ReverseOrder *bool `pulumi:"reverseOrder"`
}

// GooglePrivacyDlpV2CharacterMaskConfigInput is an input type that accepts GooglePrivacyDlpV2CharacterMaskConfigArgs and GooglePrivacyDlpV2CharacterMaskConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CharacterMaskConfigInput` via:
//
//          GooglePrivacyDlpV2CharacterMaskConfigArgs{...}
type GooglePrivacyDlpV2CharacterMaskConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CharacterMaskConfigOutput() GooglePrivacyDlpV2CharacterMaskConfigOutput
	ToGooglePrivacyDlpV2CharacterMaskConfigOutputWithContext(context.Context) GooglePrivacyDlpV2CharacterMaskConfigOutput
}

// Partially mask a string by replacing a given number of characters with a fixed character. Masking can start from the beginning or end of the string. This can be used on data of any type (numbers, longs, and so on) and when de-identifying structured data we'll attempt to preserve the original data's type. (This allows you to take a long like 123 and modify it to a string like **3.
type GooglePrivacyDlpV2CharacterMaskConfigArgs struct {
	// When masking a string, items in this list will be skipped when replacing characters. For example, if the input string is `555-555-5555` and you instruct Cloud DLP to skip `-` and mask 5 characters with `*`, Cloud DLP returns `***-**5-5555`.
	CharactersToIgnore GooglePrivacyDlpV2CharsToIgnoreArrayInput `pulumi:"charactersToIgnore"`
	// Character to use to mask the sensitive values—for example, `*` for an alphabetic string such as a name, or `0` for a numeric string such as ZIP code or credit card number. This string must have a length of 1. If not supplied, this value defaults to `*` for strings, and `0` for digits.
	MaskingCharacter pulumi.StringPtrInput `pulumi:"maskingCharacter"`
	// Number of characters to mask. If not set, all matching chars will be masked. Skipped characters do not count towards this tally.
	NumberToMask pulumi.IntPtrInput `pulumi:"numberToMask"`
	// Mask characters in reverse order. For example, if `masking_character` is `0`, `number_to_mask` is `14`, and `reverse_order` is `false`, then the input string `1234-5678-9012-3456` is masked as `00000000000000-3456`. If `masking_character` is `*`, `number_to_mask` is `3`, and `reverse_order` is `true`, then the string `12345` is masked as `12***`.
	ReverseOrder pulumi.BoolPtrInput `pulumi:"reverseOrder"`
}

func (GooglePrivacyDlpV2CharacterMaskConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CharacterMaskConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CharacterMaskConfigArgs) ToGooglePrivacyDlpV2CharacterMaskConfigOutput() GooglePrivacyDlpV2CharacterMaskConfigOutput {
	return i.ToGooglePrivacyDlpV2CharacterMaskConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CharacterMaskConfigArgs) ToGooglePrivacyDlpV2CharacterMaskConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharacterMaskConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CharacterMaskConfigOutput)
}

func (i GooglePrivacyDlpV2CharacterMaskConfigArgs) ToGooglePrivacyDlpV2CharacterMaskConfigPtrOutput() GooglePrivacyDlpV2CharacterMaskConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2CharacterMaskConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CharacterMaskConfigArgs) ToGooglePrivacyDlpV2CharacterMaskConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharacterMaskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CharacterMaskConfigOutput).ToGooglePrivacyDlpV2CharacterMaskConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CharacterMaskConfigPtrInput is an input type that accepts GooglePrivacyDlpV2CharacterMaskConfigArgs, GooglePrivacyDlpV2CharacterMaskConfigPtr and GooglePrivacyDlpV2CharacterMaskConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CharacterMaskConfigPtrInput` via:
//
//          GooglePrivacyDlpV2CharacterMaskConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CharacterMaskConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CharacterMaskConfigPtrOutput() GooglePrivacyDlpV2CharacterMaskConfigPtrOutput
	ToGooglePrivacyDlpV2CharacterMaskConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2CharacterMaskConfigPtrOutput
}

type googlePrivacyDlpV2CharacterMaskConfigPtrType GooglePrivacyDlpV2CharacterMaskConfigArgs

func GooglePrivacyDlpV2CharacterMaskConfigPtr(v *GooglePrivacyDlpV2CharacterMaskConfigArgs) GooglePrivacyDlpV2CharacterMaskConfigPtrInput {
	return (*googlePrivacyDlpV2CharacterMaskConfigPtrType)(v)
}

func (*googlePrivacyDlpV2CharacterMaskConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CharacterMaskConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CharacterMaskConfigPtrType) ToGooglePrivacyDlpV2CharacterMaskConfigPtrOutput() GooglePrivacyDlpV2CharacterMaskConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2CharacterMaskConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CharacterMaskConfigPtrType) ToGooglePrivacyDlpV2CharacterMaskConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharacterMaskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CharacterMaskConfigPtrOutput)
}

// Partially mask a string by replacing a given number of characters with a fixed character. Masking can start from the beginning or end of the string. This can be used on data of any type (numbers, longs, and so on) and when de-identifying structured data we'll attempt to preserve the original data's type. (This allows you to take a long like 123 and modify it to a string like **3.
type GooglePrivacyDlpV2CharacterMaskConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CharacterMaskConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CharacterMaskConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CharacterMaskConfigOutput) ToGooglePrivacyDlpV2CharacterMaskConfigOutput() GooglePrivacyDlpV2CharacterMaskConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2CharacterMaskConfigOutput) ToGooglePrivacyDlpV2CharacterMaskConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharacterMaskConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2CharacterMaskConfigOutput) ToGooglePrivacyDlpV2CharacterMaskConfigPtrOutput() GooglePrivacyDlpV2CharacterMaskConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2CharacterMaskConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CharacterMaskConfigOutput) ToGooglePrivacyDlpV2CharacterMaskConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharacterMaskConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CharacterMaskConfig) *GooglePrivacyDlpV2CharacterMaskConfig {
		return &v
	}).(GooglePrivacyDlpV2CharacterMaskConfigPtrOutput)
}

// When masking a string, items in this list will be skipped when replacing characters. For example, if the input string is `555-555-5555` and you instruct Cloud DLP to skip `-` and mask 5 characters with `*`, Cloud DLP returns `***-**5-5555`.
func (o GooglePrivacyDlpV2CharacterMaskConfigOutput) CharactersToIgnore() GooglePrivacyDlpV2CharsToIgnoreArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CharacterMaskConfig) []GooglePrivacyDlpV2CharsToIgnore {
		return v.CharactersToIgnore
	}).(GooglePrivacyDlpV2CharsToIgnoreArrayOutput)
}

// Character to use to mask the sensitive values—for example, `*` for an alphabetic string such as a name, or `0` for a numeric string such as ZIP code or credit card number. This string must have a length of 1. If not supplied, this value defaults to `*` for strings, and `0` for digits.
func (o GooglePrivacyDlpV2CharacterMaskConfigOutput) MaskingCharacter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CharacterMaskConfig) *string { return v.MaskingCharacter }).(pulumi.StringPtrOutput)
}

// Number of characters to mask. If not set, all matching chars will be masked. Skipped characters do not count towards this tally.
func (o GooglePrivacyDlpV2CharacterMaskConfigOutput) NumberToMask() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CharacterMaskConfig) *int { return v.NumberToMask }).(pulumi.IntPtrOutput)
}

// Mask characters in reverse order. For example, if `masking_character` is `0`, `number_to_mask` is `14`, and `reverse_order` is `false`, then the input string `1234-5678-9012-3456` is masked as `00000000000000-3456`. If `masking_character` is `*`, `number_to_mask` is `3`, and `reverse_order` is `true`, then the string `12345` is masked as `12***`.
func (o GooglePrivacyDlpV2CharacterMaskConfigOutput) ReverseOrder() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CharacterMaskConfig) *bool { return v.ReverseOrder }).(pulumi.BoolPtrOutput)
}

type GooglePrivacyDlpV2CharacterMaskConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CharacterMaskConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CharacterMaskConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CharacterMaskConfigPtrOutput) ToGooglePrivacyDlpV2CharacterMaskConfigPtrOutput() GooglePrivacyDlpV2CharacterMaskConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CharacterMaskConfigPtrOutput) ToGooglePrivacyDlpV2CharacterMaskConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharacterMaskConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CharacterMaskConfigPtrOutput) Elem() GooglePrivacyDlpV2CharacterMaskConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CharacterMaskConfig) GooglePrivacyDlpV2CharacterMaskConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CharacterMaskConfig
		return ret
	}).(GooglePrivacyDlpV2CharacterMaskConfigOutput)
}

// When masking a string, items in this list will be skipped when replacing characters. For example, if the input string is `555-555-5555` and you instruct Cloud DLP to skip `-` and mask 5 characters with `*`, Cloud DLP returns `***-**5-5555`.
func (o GooglePrivacyDlpV2CharacterMaskConfigPtrOutput) CharactersToIgnore() GooglePrivacyDlpV2CharsToIgnoreArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CharacterMaskConfig) []GooglePrivacyDlpV2CharsToIgnore {
		if v == nil {
			return nil
		}
		return v.CharactersToIgnore
	}).(GooglePrivacyDlpV2CharsToIgnoreArrayOutput)
}

// Character to use to mask the sensitive values—for example, `*` for an alphabetic string such as a name, or `0` for a numeric string such as ZIP code or credit card number. This string must have a length of 1. If not supplied, this value defaults to `*` for strings, and `0` for digits.
func (o GooglePrivacyDlpV2CharacterMaskConfigPtrOutput) MaskingCharacter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CharacterMaskConfig) *string {
		if v == nil {
			return nil
		}
		return v.MaskingCharacter
	}).(pulumi.StringPtrOutput)
}

// Number of characters to mask. If not set, all matching chars will be masked. Skipped characters do not count towards this tally.
func (o GooglePrivacyDlpV2CharacterMaskConfigPtrOutput) NumberToMask() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CharacterMaskConfig) *int {
		if v == nil {
			return nil
		}
		return v.NumberToMask
	}).(pulumi.IntPtrOutput)
}

// Mask characters in reverse order. For example, if `masking_character` is `0`, `number_to_mask` is `14`, and `reverse_order` is `false`, then the input string `1234-5678-9012-3456` is masked as `00000000000000-3456`. If `masking_character` is `*`, `number_to_mask` is `3`, and `reverse_order` is `true`, then the string `12345` is masked as `12***`.
func (o GooglePrivacyDlpV2CharacterMaskConfigPtrOutput) ReverseOrder() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CharacterMaskConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ReverseOrder
	}).(pulumi.BoolPtrOutput)
}

// Partially mask a string by replacing a given number of characters with a fixed character. Masking can start from the beginning or end of the string. This can be used on data of any type (numbers, longs, and so on) and when de-identifying structured data we'll attempt to preserve the original data's type. (This allows you to take a long like 123 and modify it to a string like **3.
type GooglePrivacyDlpV2CharacterMaskConfigResponse struct {
	// When masking a string, items in this list will be skipped when replacing characters. For example, if the input string is `555-555-5555` and you instruct Cloud DLP to skip `-` and mask 5 characters with `*`, Cloud DLP returns `***-**5-5555`.
	CharactersToIgnore []GooglePrivacyDlpV2CharsToIgnoreResponse `pulumi:"charactersToIgnore"`
	// Character to use to mask the sensitive values—for example, `*` for an alphabetic string such as a name, or `0` for a numeric string such as ZIP code or credit card number. This string must have a length of 1. If not supplied, this value defaults to `*` for strings, and `0` for digits.
	MaskingCharacter string `pulumi:"maskingCharacter"`
	// Number of characters to mask. If not set, all matching chars will be masked. Skipped characters do not count towards this tally.
	NumberToMask int `pulumi:"numberToMask"`
	// Mask characters in reverse order. For example, if `masking_character` is `0`, `number_to_mask` is `14`, and `reverse_order` is `false`, then the input string `1234-5678-9012-3456` is masked as `00000000000000-3456`. If `masking_character` is `*`, `number_to_mask` is `3`, and `reverse_order` is `true`, then the string `12345` is masked as `12***`.
	ReverseOrder bool `pulumi:"reverseOrder"`
}

// GooglePrivacyDlpV2CharacterMaskConfigResponseInput is an input type that accepts GooglePrivacyDlpV2CharacterMaskConfigResponseArgs and GooglePrivacyDlpV2CharacterMaskConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CharacterMaskConfigResponseInput` via:
//
//          GooglePrivacyDlpV2CharacterMaskConfigResponseArgs{...}
type GooglePrivacyDlpV2CharacterMaskConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CharacterMaskConfigResponseOutput() GooglePrivacyDlpV2CharacterMaskConfigResponseOutput
	ToGooglePrivacyDlpV2CharacterMaskConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2CharacterMaskConfigResponseOutput
}

// Partially mask a string by replacing a given number of characters with a fixed character. Masking can start from the beginning or end of the string. This can be used on data of any type (numbers, longs, and so on) and when de-identifying structured data we'll attempt to preserve the original data's type. (This allows you to take a long like 123 and modify it to a string like **3.
type GooglePrivacyDlpV2CharacterMaskConfigResponseArgs struct {
	// When masking a string, items in this list will be skipped when replacing characters. For example, if the input string is `555-555-5555` and you instruct Cloud DLP to skip `-` and mask 5 characters with `*`, Cloud DLP returns `***-**5-5555`.
	CharactersToIgnore GooglePrivacyDlpV2CharsToIgnoreResponseArrayInput `pulumi:"charactersToIgnore"`
	// Character to use to mask the sensitive values—for example, `*` for an alphabetic string such as a name, or `0` for a numeric string such as ZIP code or credit card number. This string must have a length of 1. If not supplied, this value defaults to `*` for strings, and `0` for digits.
	MaskingCharacter pulumi.StringInput `pulumi:"maskingCharacter"`
	// Number of characters to mask. If not set, all matching chars will be masked. Skipped characters do not count towards this tally.
	NumberToMask pulumi.IntInput `pulumi:"numberToMask"`
	// Mask characters in reverse order. For example, if `masking_character` is `0`, `number_to_mask` is `14`, and `reverse_order` is `false`, then the input string `1234-5678-9012-3456` is masked as `00000000000000-3456`. If `masking_character` is `*`, `number_to_mask` is `3`, and `reverse_order` is `true`, then the string `12345` is masked as `12***`.
	ReverseOrder pulumi.BoolInput `pulumi:"reverseOrder"`
}

func (GooglePrivacyDlpV2CharacterMaskConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CharacterMaskConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CharacterMaskConfigResponseArgs) ToGooglePrivacyDlpV2CharacterMaskConfigResponseOutput() GooglePrivacyDlpV2CharacterMaskConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2CharacterMaskConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CharacterMaskConfigResponseArgs) ToGooglePrivacyDlpV2CharacterMaskConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharacterMaskConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CharacterMaskConfigResponseOutput)
}

// Partially mask a string by replacing a given number of characters with a fixed character. Masking can start from the beginning or end of the string. This can be used on data of any type (numbers, longs, and so on) and when de-identifying structured data we'll attempt to preserve the original data's type. (This allows you to take a long like 123 and modify it to a string like **3.
type GooglePrivacyDlpV2CharacterMaskConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CharacterMaskConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CharacterMaskConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CharacterMaskConfigResponseOutput) ToGooglePrivacyDlpV2CharacterMaskConfigResponseOutput() GooglePrivacyDlpV2CharacterMaskConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CharacterMaskConfigResponseOutput) ToGooglePrivacyDlpV2CharacterMaskConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharacterMaskConfigResponseOutput {
	return o
}

// When masking a string, items in this list will be skipped when replacing characters. For example, if the input string is `555-555-5555` and you instruct Cloud DLP to skip `-` and mask 5 characters with `*`, Cloud DLP returns `***-**5-5555`.
func (o GooglePrivacyDlpV2CharacterMaskConfigResponseOutput) CharactersToIgnore() GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CharacterMaskConfigResponse) []GooglePrivacyDlpV2CharsToIgnoreResponse {
		return v.CharactersToIgnore
	}).(GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput)
}

// Character to use to mask the sensitive values—for example, `*` for an alphabetic string such as a name, or `0` for a numeric string such as ZIP code or credit card number. This string must have a length of 1. If not supplied, this value defaults to `*` for strings, and `0` for digits.
func (o GooglePrivacyDlpV2CharacterMaskConfigResponseOutput) MaskingCharacter() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CharacterMaskConfigResponse) string { return v.MaskingCharacter }).(pulumi.StringOutput)
}

// Number of characters to mask. If not set, all matching chars will be masked. Skipped characters do not count towards this tally.
func (o GooglePrivacyDlpV2CharacterMaskConfigResponseOutput) NumberToMask() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CharacterMaskConfigResponse) int { return v.NumberToMask }).(pulumi.IntOutput)
}

// Mask characters in reverse order. For example, if `masking_character` is `0`, `number_to_mask` is `14`, and `reverse_order` is `false`, then the input string `1234-5678-9012-3456` is masked as `00000000000000-3456`. If `masking_character` is `*`, `number_to_mask` is `3`, and `reverse_order` is `true`, then the string `12345` is masked as `12***`.
func (o GooglePrivacyDlpV2CharacterMaskConfigResponseOutput) ReverseOrder() pulumi.BoolOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CharacterMaskConfigResponse) bool { return v.ReverseOrder }).(pulumi.BoolOutput)
}

// Characters to skip when doing deidentification of a value. These will be left alone and skipped.
type GooglePrivacyDlpV2CharsToIgnore struct {
	// Characters to not transform when masking.
	CharactersToSkip *string `pulumi:"charactersToSkip"`
	// Common characters to not transform when masking. Useful to avoid removing punctuation.
	CommonCharactersToIgnore *GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore `pulumi:"commonCharactersToIgnore"`
}

// GooglePrivacyDlpV2CharsToIgnoreInput is an input type that accepts GooglePrivacyDlpV2CharsToIgnoreArgs and GooglePrivacyDlpV2CharsToIgnoreOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CharsToIgnoreInput` via:
//
//          GooglePrivacyDlpV2CharsToIgnoreArgs{...}
type GooglePrivacyDlpV2CharsToIgnoreInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CharsToIgnoreOutput() GooglePrivacyDlpV2CharsToIgnoreOutput
	ToGooglePrivacyDlpV2CharsToIgnoreOutputWithContext(context.Context) GooglePrivacyDlpV2CharsToIgnoreOutput
}

// Characters to skip when doing deidentification of a value. These will be left alone and skipped.
type GooglePrivacyDlpV2CharsToIgnoreArgs struct {
	// Characters to not transform when masking.
	CharactersToSkip pulumi.StringPtrInput `pulumi:"charactersToSkip"`
	// Common characters to not transform when masking. Useful to avoid removing punctuation.
	CommonCharactersToIgnore GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnorePtrInput `pulumi:"commonCharactersToIgnore"`
}

func (GooglePrivacyDlpV2CharsToIgnoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CharsToIgnore)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CharsToIgnoreArgs) ToGooglePrivacyDlpV2CharsToIgnoreOutput() GooglePrivacyDlpV2CharsToIgnoreOutput {
	return i.ToGooglePrivacyDlpV2CharsToIgnoreOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CharsToIgnoreArgs) ToGooglePrivacyDlpV2CharsToIgnoreOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharsToIgnoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CharsToIgnoreOutput)
}

// GooglePrivacyDlpV2CharsToIgnoreArrayInput is an input type that accepts GooglePrivacyDlpV2CharsToIgnoreArray and GooglePrivacyDlpV2CharsToIgnoreArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CharsToIgnoreArrayInput` via:
//
//          GooglePrivacyDlpV2CharsToIgnoreArray{ GooglePrivacyDlpV2CharsToIgnoreArgs{...} }
type GooglePrivacyDlpV2CharsToIgnoreArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CharsToIgnoreArrayOutput() GooglePrivacyDlpV2CharsToIgnoreArrayOutput
	ToGooglePrivacyDlpV2CharsToIgnoreArrayOutputWithContext(context.Context) GooglePrivacyDlpV2CharsToIgnoreArrayOutput
}

type GooglePrivacyDlpV2CharsToIgnoreArray []GooglePrivacyDlpV2CharsToIgnoreInput

func (GooglePrivacyDlpV2CharsToIgnoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2CharsToIgnore)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CharsToIgnoreArray) ToGooglePrivacyDlpV2CharsToIgnoreArrayOutput() GooglePrivacyDlpV2CharsToIgnoreArrayOutput {
	return i.ToGooglePrivacyDlpV2CharsToIgnoreArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CharsToIgnoreArray) ToGooglePrivacyDlpV2CharsToIgnoreArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharsToIgnoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CharsToIgnoreArrayOutput)
}

// Characters to skip when doing deidentification of a value. These will be left alone and skipped.
type GooglePrivacyDlpV2CharsToIgnoreOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CharsToIgnoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CharsToIgnore)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CharsToIgnoreOutput) ToGooglePrivacyDlpV2CharsToIgnoreOutput() GooglePrivacyDlpV2CharsToIgnoreOutput {
	return o
}

func (o GooglePrivacyDlpV2CharsToIgnoreOutput) ToGooglePrivacyDlpV2CharsToIgnoreOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharsToIgnoreOutput {
	return o
}

// Characters to not transform when masking.
func (o GooglePrivacyDlpV2CharsToIgnoreOutput) CharactersToSkip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CharsToIgnore) *string { return v.CharactersToSkip }).(pulumi.StringPtrOutput)
}

// Common characters to not transform when masking. Useful to avoid removing punctuation.
func (o GooglePrivacyDlpV2CharsToIgnoreOutput) CommonCharactersToIgnore() GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnorePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CharsToIgnore) *GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore {
		return v.CommonCharactersToIgnore
	}).(GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnorePtrOutput)
}

type GooglePrivacyDlpV2CharsToIgnoreArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CharsToIgnoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2CharsToIgnore)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CharsToIgnoreArrayOutput) ToGooglePrivacyDlpV2CharsToIgnoreArrayOutput() GooglePrivacyDlpV2CharsToIgnoreArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2CharsToIgnoreArrayOutput) ToGooglePrivacyDlpV2CharsToIgnoreArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharsToIgnoreArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2CharsToIgnoreArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2CharsToIgnoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2CharsToIgnore {
		return vs[0].([]GooglePrivacyDlpV2CharsToIgnore)[vs[1].(int)]
	}).(GooglePrivacyDlpV2CharsToIgnoreOutput)
}

// Characters to skip when doing deidentification of a value. These will be left alone and skipped.
type GooglePrivacyDlpV2CharsToIgnoreResponse struct {
	// Characters to not transform when masking.
	CharactersToSkip string `pulumi:"charactersToSkip"`
	// Common characters to not transform when masking. Useful to avoid removing punctuation.
	CommonCharactersToIgnore string `pulumi:"commonCharactersToIgnore"`
}

// GooglePrivacyDlpV2CharsToIgnoreResponseInput is an input type that accepts GooglePrivacyDlpV2CharsToIgnoreResponseArgs and GooglePrivacyDlpV2CharsToIgnoreResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CharsToIgnoreResponseInput` via:
//
//          GooglePrivacyDlpV2CharsToIgnoreResponseArgs{...}
type GooglePrivacyDlpV2CharsToIgnoreResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CharsToIgnoreResponseOutput() GooglePrivacyDlpV2CharsToIgnoreResponseOutput
	ToGooglePrivacyDlpV2CharsToIgnoreResponseOutputWithContext(context.Context) GooglePrivacyDlpV2CharsToIgnoreResponseOutput
}

// Characters to skip when doing deidentification of a value. These will be left alone and skipped.
type GooglePrivacyDlpV2CharsToIgnoreResponseArgs struct {
	// Characters to not transform when masking.
	CharactersToSkip pulumi.StringInput `pulumi:"charactersToSkip"`
	// Common characters to not transform when masking. Useful to avoid removing punctuation.
	CommonCharactersToIgnore pulumi.StringInput `pulumi:"commonCharactersToIgnore"`
}

func (GooglePrivacyDlpV2CharsToIgnoreResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CharsToIgnoreResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CharsToIgnoreResponseArgs) ToGooglePrivacyDlpV2CharsToIgnoreResponseOutput() GooglePrivacyDlpV2CharsToIgnoreResponseOutput {
	return i.ToGooglePrivacyDlpV2CharsToIgnoreResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CharsToIgnoreResponseArgs) ToGooglePrivacyDlpV2CharsToIgnoreResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharsToIgnoreResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CharsToIgnoreResponseOutput)
}

// GooglePrivacyDlpV2CharsToIgnoreResponseArrayInput is an input type that accepts GooglePrivacyDlpV2CharsToIgnoreResponseArray and GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CharsToIgnoreResponseArrayInput` via:
//
//          GooglePrivacyDlpV2CharsToIgnoreResponseArray{ GooglePrivacyDlpV2CharsToIgnoreResponseArgs{...} }
type GooglePrivacyDlpV2CharsToIgnoreResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput() GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput
	ToGooglePrivacyDlpV2CharsToIgnoreResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput
}

type GooglePrivacyDlpV2CharsToIgnoreResponseArray []GooglePrivacyDlpV2CharsToIgnoreResponseInput

func (GooglePrivacyDlpV2CharsToIgnoreResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2CharsToIgnoreResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CharsToIgnoreResponseArray) ToGooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput() GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2CharsToIgnoreResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CharsToIgnoreResponseArray) ToGooglePrivacyDlpV2CharsToIgnoreResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput)
}

// Characters to skip when doing deidentification of a value. These will be left alone and skipped.
type GooglePrivacyDlpV2CharsToIgnoreResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CharsToIgnoreResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CharsToIgnoreResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CharsToIgnoreResponseOutput) ToGooglePrivacyDlpV2CharsToIgnoreResponseOutput() GooglePrivacyDlpV2CharsToIgnoreResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CharsToIgnoreResponseOutput) ToGooglePrivacyDlpV2CharsToIgnoreResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharsToIgnoreResponseOutput {
	return o
}

// Characters to not transform when masking.
func (o GooglePrivacyDlpV2CharsToIgnoreResponseOutput) CharactersToSkip() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CharsToIgnoreResponse) string { return v.CharactersToSkip }).(pulumi.StringOutput)
}

// Common characters to not transform when masking. Useful to avoid removing punctuation.
func (o GooglePrivacyDlpV2CharsToIgnoreResponseOutput) CommonCharactersToIgnore() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CharsToIgnoreResponse) string { return v.CommonCharactersToIgnore }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2CharsToIgnoreResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput) ToGooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput() GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput) ToGooglePrivacyDlpV2CharsToIgnoreResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2CharsToIgnoreResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2CharsToIgnoreResponse {
		return vs[0].([]GooglePrivacyDlpV2CharsToIgnoreResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2CharsToIgnoreResponseOutput)
}

// Message representing a set of files in Cloud Storage.
type GooglePrivacyDlpV2CloudStorageFileSet struct {
	// The url, in the format `gs:///`. Trailing wildcard in the path is allowed.
	Url *string `pulumi:"url"`
}

// GooglePrivacyDlpV2CloudStorageFileSetInput is an input type that accepts GooglePrivacyDlpV2CloudStorageFileSetArgs and GooglePrivacyDlpV2CloudStorageFileSetOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStorageFileSetInput` via:
//
//          GooglePrivacyDlpV2CloudStorageFileSetArgs{...}
type GooglePrivacyDlpV2CloudStorageFileSetInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStorageFileSetOutput() GooglePrivacyDlpV2CloudStorageFileSetOutput
	ToGooglePrivacyDlpV2CloudStorageFileSetOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStorageFileSetOutput
}

// Message representing a set of files in Cloud Storage.
type GooglePrivacyDlpV2CloudStorageFileSetArgs struct {
	// The url, in the format `gs:///`. Trailing wildcard in the path is allowed.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (GooglePrivacyDlpV2CloudStorageFileSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStorageFileSet)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CloudStorageFileSetArgs) ToGooglePrivacyDlpV2CloudStorageFileSetOutput() GooglePrivacyDlpV2CloudStorageFileSetOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageFileSetOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStorageFileSetArgs) ToGooglePrivacyDlpV2CloudStorageFileSetOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageFileSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageFileSetOutput)
}

func (i GooglePrivacyDlpV2CloudStorageFileSetArgs) ToGooglePrivacyDlpV2CloudStorageFileSetPtrOutput() GooglePrivacyDlpV2CloudStorageFileSetPtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageFileSetPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStorageFileSetArgs) ToGooglePrivacyDlpV2CloudStorageFileSetPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageFileSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageFileSetOutput).ToGooglePrivacyDlpV2CloudStorageFileSetPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CloudStorageFileSetPtrInput is an input type that accepts GooglePrivacyDlpV2CloudStorageFileSetArgs, GooglePrivacyDlpV2CloudStorageFileSetPtr and GooglePrivacyDlpV2CloudStorageFileSetPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStorageFileSetPtrInput` via:
//
//          GooglePrivacyDlpV2CloudStorageFileSetArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CloudStorageFileSetPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStorageFileSetPtrOutput() GooglePrivacyDlpV2CloudStorageFileSetPtrOutput
	ToGooglePrivacyDlpV2CloudStorageFileSetPtrOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStorageFileSetPtrOutput
}

type googlePrivacyDlpV2CloudStorageFileSetPtrType GooglePrivacyDlpV2CloudStorageFileSetArgs

func GooglePrivacyDlpV2CloudStorageFileSetPtr(v *GooglePrivacyDlpV2CloudStorageFileSetArgs) GooglePrivacyDlpV2CloudStorageFileSetPtrInput {
	return (*googlePrivacyDlpV2CloudStorageFileSetPtrType)(v)
}

func (*googlePrivacyDlpV2CloudStorageFileSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStorageFileSet)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CloudStorageFileSetPtrType) ToGooglePrivacyDlpV2CloudStorageFileSetPtrOutput() GooglePrivacyDlpV2CloudStorageFileSetPtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageFileSetPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CloudStorageFileSetPtrType) ToGooglePrivacyDlpV2CloudStorageFileSetPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageFileSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageFileSetPtrOutput)
}

// Message representing a set of files in Cloud Storage.
type GooglePrivacyDlpV2CloudStorageFileSetOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStorageFileSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStorageFileSet)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStorageFileSetOutput) ToGooglePrivacyDlpV2CloudStorageFileSetOutput() GooglePrivacyDlpV2CloudStorageFileSetOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageFileSetOutput) ToGooglePrivacyDlpV2CloudStorageFileSetOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageFileSetOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageFileSetOutput) ToGooglePrivacyDlpV2CloudStorageFileSetPtrOutput() GooglePrivacyDlpV2CloudStorageFileSetPtrOutput {
	return o.ToGooglePrivacyDlpV2CloudStorageFileSetPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CloudStorageFileSetOutput) ToGooglePrivacyDlpV2CloudStorageFileSetPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageFileSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CloudStorageFileSet) *GooglePrivacyDlpV2CloudStorageFileSet {
		return &v
	}).(GooglePrivacyDlpV2CloudStorageFileSetPtrOutput)
}

// The url, in the format `gs:///`. Trailing wildcard in the path is allowed.
func (o GooglePrivacyDlpV2CloudStorageFileSetOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageFileSet) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2CloudStorageFileSetPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStorageFileSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStorageFileSet)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStorageFileSetPtrOutput) ToGooglePrivacyDlpV2CloudStorageFileSetPtrOutput() GooglePrivacyDlpV2CloudStorageFileSetPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageFileSetPtrOutput) ToGooglePrivacyDlpV2CloudStorageFileSetPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageFileSetPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageFileSetPtrOutput) Elem() GooglePrivacyDlpV2CloudStorageFileSetOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageFileSet) GooglePrivacyDlpV2CloudStorageFileSet {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CloudStorageFileSet
		return ret
	}).(GooglePrivacyDlpV2CloudStorageFileSetOutput)
}

// The url, in the format `gs:///`. Trailing wildcard in the path is allowed.
func (o GooglePrivacyDlpV2CloudStorageFileSetPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageFileSet) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Message representing a set of files in Cloud Storage.
type GooglePrivacyDlpV2CloudStorageFileSetResponse struct {
	// The url, in the format `gs:///`. Trailing wildcard in the path is allowed.
	Url string `pulumi:"url"`
}

// GooglePrivacyDlpV2CloudStorageFileSetResponseInput is an input type that accepts GooglePrivacyDlpV2CloudStorageFileSetResponseArgs and GooglePrivacyDlpV2CloudStorageFileSetResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStorageFileSetResponseInput` via:
//
//          GooglePrivacyDlpV2CloudStorageFileSetResponseArgs{...}
type GooglePrivacyDlpV2CloudStorageFileSetResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStorageFileSetResponseOutput() GooglePrivacyDlpV2CloudStorageFileSetResponseOutput
	ToGooglePrivacyDlpV2CloudStorageFileSetResponseOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStorageFileSetResponseOutput
}

// Message representing a set of files in Cloud Storage.
type GooglePrivacyDlpV2CloudStorageFileSetResponseArgs struct {
	// The url, in the format `gs:///`. Trailing wildcard in the path is allowed.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GooglePrivacyDlpV2CloudStorageFileSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStorageFileSetResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CloudStorageFileSetResponseArgs) ToGooglePrivacyDlpV2CloudStorageFileSetResponseOutput() GooglePrivacyDlpV2CloudStorageFileSetResponseOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageFileSetResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStorageFileSetResponseArgs) ToGooglePrivacyDlpV2CloudStorageFileSetResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageFileSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageFileSetResponseOutput)
}

func (i GooglePrivacyDlpV2CloudStorageFileSetResponseArgs) ToGooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput() GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStorageFileSetResponseArgs) ToGooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageFileSetResponseOutput).ToGooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CloudStorageFileSetResponsePtrInput is an input type that accepts GooglePrivacyDlpV2CloudStorageFileSetResponseArgs, GooglePrivacyDlpV2CloudStorageFileSetResponsePtr and GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStorageFileSetResponsePtrInput` via:
//
//          GooglePrivacyDlpV2CloudStorageFileSetResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CloudStorageFileSetResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput() GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput
	ToGooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput
}

type googlePrivacyDlpV2CloudStorageFileSetResponsePtrType GooglePrivacyDlpV2CloudStorageFileSetResponseArgs

func GooglePrivacyDlpV2CloudStorageFileSetResponsePtr(v *GooglePrivacyDlpV2CloudStorageFileSetResponseArgs) GooglePrivacyDlpV2CloudStorageFileSetResponsePtrInput {
	return (*googlePrivacyDlpV2CloudStorageFileSetResponsePtrType)(v)
}

func (*googlePrivacyDlpV2CloudStorageFileSetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStorageFileSetResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CloudStorageFileSetResponsePtrType) ToGooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput() GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CloudStorageFileSetResponsePtrType) ToGooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput)
}

// Message representing a set of files in Cloud Storage.
type GooglePrivacyDlpV2CloudStorageFileSetResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStorageFileSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStorageFileSetResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStorageFileSetResponseOutput) ToGooglePrivacyDlpV2CloudStorageFileSetResponseOutput() GooglePrivacyDlpV2CloudStorageFileSetResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageFileSetResponseOutput) ToGooglePrivacyDlpV2CloudStorageFileSetResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageFileSetResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageFileSetResponseOutput) ToGooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput() GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CloudStorageFileSetResponseOutput) ToGooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CloudStorageFileSetResponse) *GooglePrivacyDlpV2CloudStorageFileSetResponse {
		return &v
	}).(GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput)
}

// The url, in the format `gs:///`. Trailing wildcard in the path is allowed.
func (o GooglePrivacyDlpV2CloudStorageFileSetResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageFileSetResponse) string { return v.Url }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStorageFileSetResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput) ToGooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput() GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput) ToGooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput) Elem() GooglePrivacyDlpV2CloudStorageFileSetResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageFileSetResponse) GooglePrivacyDlpV2CloudStorageFileSetResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CloudStorageFileSetResponse
		return ret
	}).(GooglePrivacyDlpV2CloudStorageFileSetResponseOutput)
}

// The url, in the format `gs:///`. Trailing wildcard in the path is allowed.
func (o GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageFileSetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// Options defining a file or a set of files within a Google Cloud Storage bucket.
type GooglePrivacyDlpV2CloudStorageOptions struct {
	// Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
	BytesLimitPerFile *string `pulumi:"bytesLimitPerFile"`
	// Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
	BytesLimitPerFilePercent *int `pulumi:"bytesLimitPerFilePercent"`
	// The set of one or more files to scan.
	FileSet *GooglePrivacyDlpV2FileSet `pulumi:"fileSet"`
	// List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.
	FileTypes []GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem `pulumi:"fileTypes"`
	// Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0.
	FilesLimitPercent *int                                               `pulumi:"filesLimitPercent"`
	SampleMethod      *GooglePrivacyDlpV2CloudStorageOptionsSampleMethod `pulumi:"sampleMethod"`
}

// GooglePrivacyDlpV2CloudStorageOptionsInput is an input type that accepts GooglePrivacyDlpV2CloudStorageOptionsArgs and GooglePrivacyDlpV2CloudStorageOptionsOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStorageOptionsInput` via:
//
//          GooglePrivacyDlpV2CloudStorageOptionsArgs{...}
type GooglePrivacyDlpV2CloudStorageOptionsInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStorageOptionsOutput() GooglePrivacyDlpV2CloudStorageOptionsOutput
	ToGooglePrivacyDlpV2CloudStorageOptionsOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStorageOptionsOutput
}

// Options defining a file or a set of files within a Google Cloud Storage bucket.
type GooglePrivacyDlpV2CloudStorageOptionsArgs struct {
	// Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
	BytesLimitPerFile pulumi.StringPtrInput `pulumi:"bytesLimitPerFile"`
	// Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
	BytesLimitPerFilePercent pulumi.IntPtrInput `pulumi:"bytesLimitPerFilePercent"`
	// The set of one or more files to scan.
	FileSet GooglePrivacyDlpV2FileSetPtrInput `pulumi:"fileSet"`
	// List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.
	FileTypes GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayInput `pulumi:"fileTypes"`
	// Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0.
	FilesLimitPercent pulumi.IntPtrInput                                        `pulumi:"filesLimitPercent"`
	SampleMethod      GooglePrivacyDlpV2CloudStorageOptionsSampleMethodPtrInput `pulumi:"sampleMethod"`
}

func (GooglePrivacyDlpV2CloudStorageOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStorageOptions)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CloudStorageOptionsArgs) ToGooglePrivacyDlpV2CloudStorageOptionsOutput() GooglePrivacyDlpV2CloudStorageOptionsOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageOptionsOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStorageOptionsArgs) ToGooglePrivacyDlpV2CloudStorageOptionsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageOptionsOutput)
}

func (i GooglePrivacyDlpV2CloudStorageOptionsArgs) ToGooglePrivacyDlpV2CloudStorageOptionsPtrOutput() GooglePrivacyDlpV2CloudStorageOptionsPtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageOptionsPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStorageOptionsArgs) ToGooglePrivacyDlpV2CloudStorageOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageOptionsOutput).ToGooglePrivacyDlpV2CloudStorageOptionsPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CloudStorageOptionsPtrInput is an input type that accepts GooglePrivacyDlpV2CloudStorageOptionsArgs, GooglePrivacyDlpV2CloudStorageOptionsPtr and GooglePrivacyDlpV2CloudStorageOptionsPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStorageOptionsPtrInput` via:
//
//          GooglePrivacyDlpV2CloudStorageOptionsArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CloudStorageOptionsPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStorageOptionsPtrOutput() GooglePrivacyDlpV2CloudStorageOptionsPtrOutput
	ToGooglePrivacyDlpV2CloudStorageOptionsPtrOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStorageOptionsPtrOutput
}

type googlePrivacyDlpV2CloudStorageOptionsPtrType GooglePrivacyDlpV2CloudStorageOptionsArgs

func GooglePrivacyDlpV2CloudStorageOptionsPtr(v *GooglePrivacyDlpV2CloudStorageOptionsArgs) GooglePrivacyDlpV2CloudStorageOptionsPtrInput {
	return (*googlePrivacyDlpV2CloudStorageOptionsPtrType)(v)
}

func (*googlePrivacyDlpV2CloudStorageOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStorageOptions)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CloudStorageOptionsPtrType) ToGooglePrivacyDlpV2CloudStorageOptionsPtrOutput() GooglePrivacyDlpV2CloudStorageOptionsPtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageOptionsPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CloudStorageOptionsPtrType) ToGooglePrivacyDlpV2CloudStorageOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageOptionsPtrOutput)
}

// Options defining a file or a set of files within a Google Cloud Storage bucket.
type GooglePrivacyDlpV2CloudStorageOptionsOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStorageOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStorageOptions)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStorageOptionsOutput) ToGooglePrivacyDlpV2CloudStorageOptionsOutput() GooglePrivacyDlpV2CloudStorageOptionsOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageOptionsOutput) ToGooglePrivacyDlpV2CloudStorageOptionsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageOptionsOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageOptionsOutput) ToGooglePrivacyDlpV2CloudStorageOptionsPtrOutput() GooglePrivacyDlpV2CloudStorageOptionsPtrOutput {
	return o.ToGooglePrivacyDlpV2CloudStorageOptionsPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CloudStorageOptionsOutput) ToGooglePrivacyDlpV2CloudStorageOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CloudStorageOptions) *GooglePrivacyDlpV2CloudStorageOptions {
		return &v
	}).(GooglePrivacyDlpV2CloudStorageOptionsPtrOutput)
}

// Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
func (o GooglePrivacyDlpV2CloudStorageOptionsOutput) BytesLimitPerFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageOptions) *string { return v.BytesLimitPerFile }).(pulumi.StringPtrOutput)
}

// Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
func (o GooglePrivacyDlpV2CloudStorageOptionsOutput) BytesLimitPerFilePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageOptions) *int { return v.BytesLimitPerFilePercent }).(pulumi.IntPtrOutput)
}

// The set of one or more files to scan.
func (o GooglePrivacyDlpV2CloudStorageOptionsOutput) FileSet() GooglePrivacyDlpV2FileSetPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageOptions) *GooglePrivacyDlpV2FileSet { return v.FileSet }).(GooglePrivacyDlpV2FileSetPtrOutput)
}

// List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.
func (o GooglePrivacyDlpV2CloudStorageOptionsOutput) FileTypes() GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageOptions) []GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem {
		return v.FileTypes
	}).(GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput)
}

// Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0.
func (o GooglePrivacyDlpV2CloudStorageOptionsOutput) FilesLimitPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageOptions) *int { return v.FilesLimitPercent }).(pulumi.IntPtrOutput)
}

func (o GooglePrivacyDlpV2CloudStorageOptionsOutput) SampleMethod() GooglePrivacyDlpV2CloudStorageOptionsSampleMethodPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageOptions) *GooglePrivacyDlpV2CloudStorageOptionsSampleMethod {
		return v.SampleMethod
	}).(GooglePrivacyDlpV2CloudStorageOptionsSampleMethodPtrOutput)
}

type GooglePrivacyDlpV2CloudStorageOptionsPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStorageOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStorageOptions)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStorageOptionsPtrOutput) ToGooglePrivacyDlpV2CloudStorageOptionsPtrOutput() GooglePrivacyDlpV2CloudStorageOptionsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageOptionsPtrOutput) ToGooglePrivacyDlpV2CloudStorageOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageOptionsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageOptionsPtrOutput) Elem() GooglePrivacyDlpV2CloudStorageOptionsOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageOptions) GooglePrivacyDlpV2CloudStorageOptions {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CloudStorageOptions
		return ret
	}).(GooglePrivacyDlpV2CloudStorageOptionsOutput)
}

// Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
func (o GooglePrivacyDlpV2CloudStorageOptionsPtrOutput) BytesLimitPerFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageOptions) *string {
		if v == nil {
			return nil
		}
		return v.BytesLimitPerFile
	}).(pulumi.StringPtrOutput)
}

// Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
func (o GooglePrivacyDlpV2CloudStorageOptionsPtrOutput) BytesLimitPerFilePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageOptions) *int {
		if v == nil {
			return nil
		}
		return v.BytesLimitPerFilePercent
	}).(pulumi.IntPtrOutput)
}

// The set of one or more files to scan.
func (o GooglePrivacyDlpV2CloudStorageOptionsPtrOutput) FileSet() GooglePrivacyDlpV2FileSetPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageOptions) *GooglePrivacyDlpV2FileSet {
		if v == nil {
			return nil
		}
		return v.FileSet
	}).(GooglePrivacyDlpV2FileSetPtrOutput)
}

// List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.
func (o GooglePrivacyDlpV2CloudStorageOptionsPtrOutput) FileTypes() GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageOptions) []GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem {
		if v == nil {
			return nil
		}
		return v.FileTypes
	}).(GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput)
}

// Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0.
func (o GooglePrivacyDlpV2CloudStorageOptionsPtrOutput) FilesLimitPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageOptions) *int {
		if v == nil {
			return nil
		}
		return v.FilesLimitPercent
	}).(pulumi.IntPtrOutput)
}

func (o GooglePrivacyDlpV2CloudStorageOptionsPtrOutput) SampleMethod() GooglePrivacyDlpV2CloudStorageOptionsSampleMethodPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageOptions) *GooglePrivacyDlpV2CloudStorageOptionsSampleMethod {
		if v == nil {
			return nil
		}
		return v.SampleMethod
	}).(GooglePrivacyDlpV2CloudStorageOptionsSampleMethodPtrOutput)
}

// Options defining a file or a set of files within a Google Cloud Storage bucket.
type GooglePrivacyDlpV2CloudStorageOptionsResponse struct {
	// Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
	BytesLimitPerFile string `pulumi:"bytesLimitPerFile"`
	// Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
	BytesLimitPerFilePercent int `pulumi:"bytesLimitPerFilePercent"`
	// The set of one or more files to scan.
	FileSet GooglePrivacyDlpV2FileSetResponse `pulumi:"fileSet"`
	// List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.
	FileTypes []string `pulumi:"fileTypes"`
	// Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0.
	FilesLimitPercent int    `pulumi:"filesLimitPercent"`
	SampleMethod      string `pulumi:"sampleMethod"`
}

// GooglePrivacyDlpV2CloudStorageOptionsResponseInput is an input type that accepts GooglePrivacyDlpV2CloudStorageOptionsResponseArgs and GooglePrivacyDlpV2CloudStorageOptionsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStorageOptionsResponseInput` via:
//
//          GooglePrivacyDlpV2CloudStorageOptionsResponseArgs{...}
type GooglePrivacyDlpV2CloudStorageOptionsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStorageOptionsResponseOutput() GooglePrivacyDlpV2CloudStorageOptionsResponseOutput
	ToGooglePrivacyDlpV2CloudStorageOptionsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStorageOptionsResponseOutput
}

// Options defining a file or a set of files within a Google Cloud Storage bucket.
type GooglePrivacyDlpV2CloudStorageOptionsResponseArgs struct {
	// Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
	BytesLimitPerFile pulumi.StringInput `pulumi:"bytesLimitPerFile"`
	// Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
	BytesLimitPerFilePercent pulumi.IntInput `pulumi:"bytesLimitPerFilePercent"`
	// The set of one or more files to scan.
	FileSet GooglePrivacyDlpV2FileSetResponseInput `pulumi:"fileSet"`
	// List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.
	FileTypes pulumi.StringArrayInput `pulumi:"fileTypes"`
	// Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0.
	FilesLimitPercent pulumi.IntInput    `pulumi:"filesLimitPercent"`
	SampleMethod      pulumi.StringInput `pulumi:"sampleMethod"`
}

func (GooglePrivacyDlpV2CloudStorageOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStorageOptionsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CloudStorageOptionsResponseArgs) ToGooglePrivacyDlpV2CloudStorageOptionsResponseOutput() GooglePrivacyDlpV2CloudStorageOptionsResponseOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageOptionsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStorageOptionsResponseArgs) ToGooglePrivacyDlpV2CloudStorageOptionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageOptionsResponseOutput)
}

func (i GooglePrivacyDlpV2CloudStorageOptionsResponseArgs) ToGooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput() GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStorageOptionsResponseArgs) ToGooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageOptionsResponseOutput).ToGooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CloudStorageOptionsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2CloudStorageOptionsResponseArgs, GooglePrivacyDlpV2CloudStorageOptionsResponsePtr and GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStorageOptionsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2CloudStorageOptionsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CloudStorageOptionsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput() GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput
	ToGooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput
}

type googlePrivacyDlpV2CloudStorageOptionsResponsePtrType GooglePrivacyDlpV2CloudStorageOptionsResponseArgs

func GooglePrivacyDlpV2CloudStorageOptionsResponsePtr(v *GooglePrivacyDlpV2CloudStorageOptionsResponseArgs) GooglePrivacyDlpV2CloudStorageOptionsResponsePtrInput {
	return (*googlePrivacyDlpV2CloudStorageOptionsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2CloudStorageOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStorageOptionsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CloudStorageOptionsResponsePtrType) ToGooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput() GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CloudStorageOptionsResponsePtrType) ToGooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput)
}

// Options defining a file or a set of files within a Google Cloud Storage bucket.
type GooglePrivacyDlpV2CloudStorageOptionsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStorageOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStorageOptionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStorageOptionsResponseOutput) ToGooglePrivacyDlpV2CloudStorageOptionsResponseOutput() GooglePrivacyDlpV2CloudStorageOptionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageOptionsResponseOutput) ToGooglePrivacyDlpV2CloudStorageOptionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageOptionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageOptionsResponseOutput) ToGooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput() GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CloudStorageOptionsResponseOutput) ToGooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CloudStorageOptionsResponse) *GooglePrivacyDlpV2CloudStorageOptionsResponse {
		return &v
	}).(GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput)
}

// Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
func (o GooglePrivacyDlpV2CloudStorageOptionsResponseOutput) BytesLimitPerFile() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageOptionsResponse) string { return v.BytesLimitPerFile }).(pulumi.StringOutput)
}

// Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
func (o GooglePrivacyDlpV2CloudStorageOptionsResponseOutput) BytesLimitPerFilePercent() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageOptionsResponse) int { return v.BytesLimitPerFilePercent }).(pulumi.IntOutput)
}

// The set of one or more files to scan.
func (o GooglePrivacyDlpV2CloudStorageOptionsResponseOutput) FileSet() GooglePrivacyDlpV2FileSetResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageOptionsResponse) GooglePrivacyDlpV2FileSetResponse {
		return v.FileSet
	}).(GooglePrivacyDlpV2FileSetResponseOutput)
}

// List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.
func (o GooglePrivacyDlpV2CloudStorageOptionsResponseOutput) FileTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageOptionsResponse) []string { return v.FileTypes }).(pulumi.StringArrayOutput)
}

// Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0.
func (o GooglePrivacyDlpV2CloudStorageOptionsResponseOutput) FilesLimitPercent() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageOptionsResponse) int { return v.FilesLimitPercent }).(pulumi.IntOutput)
}

func (o GooglePrivacyDlpV2CloudStorageOptionsResponseOutput) SampleMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageOptionsResponse) string { return v.SampleMethod }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStorageOptionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput) ToGooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput() GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput) ToGooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput) Elem() GooglePrivacyDlpV2CloudStorageOptionsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageOptionsResponse) GooglePrivacyDlpV2CloudStorageOptionsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CloudStorageOptionsResponse
		return ret
	}).(GooglePrivacyDlpV2CloudStorageOptionsResponseOutput)
}

// Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
func (o GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput) BytesLimitPerFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BytesLimitPerFile
	}).(pulumi.StringPtrOutput)
}

// Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
func (o GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput) BytesLimitPerFilePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageOptionsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.BytesLimitPerFilePercent
	}).(pulumi.IntPtrOutput)
}

// The set of one or more files to scan.
func (o GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput) FileSet() GooglePrivacyDlpV2FileSetResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageOptionsResponse) *GooglePrivacyDlpV2FileSetResponse {
		if v == nil {
			return nil
		}
		return &v.FileSet
	}).(GooglePrivacyDlpV2FileSetResponsePtrOutput)
}

// List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.
func (o GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput) FileTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageOptionsResponse) []string {
		if v == nil {
			return nil
		}
		return v.FileTypes
	}).(pulumi.StringArrayOutput)
}

// Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0.
func (o GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput) FilesLimitPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageOptionsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.FilesLimitPercent
	}).(pulumi.IntPtrOutput)
}

func (o GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput) SampleMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SampleMethod
	}).(pulumi.StringPtrOutput)
}

// Message representing a single file or path in Cloud Storage.
type GooglePrivacyDlpV2CloudStoragePath struct {
	// A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt
	Path *string `pulumi:"path"`
}

// GooglePrivacyDlpV2CloudStoragePathInput is an input type that accepts GooglePrivacyDlpV2CloudStoragePathArgs and GooglePrivacyDlpV2CloudStoragePathOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStoragePathInput` via:
//
//          GooglePrivacyDlpV2CloudStoragePathArgs{...}
type GooglePrivacyDlpV2CloudStoragePathInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStoragePathOutput() GooglePrivacyDlpV2CloudStoragePathOutput
	ToGooglePrivacyDlpV2CloudStoragePathOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStoragePathOutput
}

// Message representing a single file or path in Cloud Storage.
type GooglePrivacyDlpV2CloudStoragePathArgs struct {
	// A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (GooglePrivacyDlpV2CloudStoragePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStoragePath)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CloudStoragePathArgs) ToGooglePrivacyDlpV2CloudStoragePathOutput() GooglePrivacyDlpV2CloudStoragePathOutput {
	return i.ToGooglePrivacyDlpV2CloudStoragePathOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStoragePathArgs) ToGooglePrivacyDlpV2CloudStoragePathOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStoragePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStoragePathOutput)
}

func (i GooglePrivacyDlpV2CloudStoragePathArgs) ToGooglePrivacyDlpV2CloudStoragePathPtrOutput() GooglePrivacyDlpV2CloudStoragePathPtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStoragePathPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStoragePathArgs) ToGooglePrivacyDlpV2CloudStoragePathPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStoragePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStoragePathOutput).ToGooglePrivacyDlpV2CloudStoragePathPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CloudStoragePathPtrInput is an input type that accepts GooglePrivacyDlpV2CloudStoragePathArgs, GooglePrivacyDlpV2CloudStoragePathPtr and GooglePrivacyDlpV2CloudStoragePathPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStoragePathPtrInput` via:
//
//          GooglePrivacyDlpV2CloudStoragePathArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CloudStoragePathPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStoragePathPtrOutput() GooglePrivacyDlpV2CloudStoragePathPtrOutput
	ToGooglePrivacyDlpV2CloudStoragePathPtrOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStoragePathPtrOutput
}

type googlePrivacyDlpV2CloudStoragePathPtrType GooglePrivacyDlpV2CloudStoragePathArgs

func GooglePrivacyDlpV2CloudStoragePathPtr(v *GooglePrivacyDlpV2CloudStoragePathArgs) GooglePrivacyDlpV2CloudStoragePathPtrInput {
	return (*googlePrivacyDlpV2CloudStoragePathPtrType)(v)
}

func (*googlePrivacyDlpV2CloudStoragePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStoragePath)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CloudStoragePathPtrType) ToGooglePrivacyDlpV2CloudStoragePathPtrOutput() GooglePrivacyDlpV2CloudStoragePathPtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStoragePathPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CloudStoragePathPtrType) ToGooglePrivacyDlpV2CloudStoragePathPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStoragePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStoragePathPtrOutput)
}

// Message representing a single file or path in Cloud Storage.
type GooglePrivacyDlpV2CloudStoragePathOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStoragePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStoragePath)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStoragePathOutput) ToGooglePrivacyDlpV2CloudStoragePathOutput() GooglePrivacyDlpV2CloudStoragePathOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStoragePathOutput) ToGooglePrivacyDlpV2CloudStoragePathOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStoragePathOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStoragePathOutput) ToGooglePrivacyDlpV2CloudStoragePathPtrOutput() GooglePrivacyDlpV2CloudStoragePathPtrOutput {
	return o.ToGooglePrivacyDlpV2CloudStoragePathPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CloudStoragePathOutput) ToGooglePrivacyDlpV2CloudStoragePathPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStoragePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CloudStoragePath) *GooglePrivacyDlpV2CloudStoragePath {
		return &v
	}).(GooglePrivacyDlpV2CloudStoragePathPtrOutput)
}

// A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt
func (o GooglePrivacyDlpV2CloudStoragePathOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStoragePath) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2CloudStoragePathPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStoragePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStoragePath)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStoragePathPtrOutput) ToGooglePrivacyDlpV2CloudStoragePathPtrOutput() GooglePrivacyDlpV2CloudStoragePathPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStoragePathPtrOutput) ToGooglePrivacyDlpV2CloudStoragePathPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStoragePathPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStoragePathPtrOutput) Elem() GooglePrivacyDlpV2CloudStoragePathOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStoragePath) GooglePrivacyDlpV2CloudStoragePath {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CloudStoragePath
		return ret
	}).(GooglePrivacyDlpV2CloudStoragePathOutput)
}

// A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt
func (o GooglePrivacyDlpV2CloudStoragePathPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStoragePath) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Message representing a single file or path in Cloud Storage.
type GooglePrivacyDlpV2CloudStoragePathResponse struct {
	// A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt
	Path string `pulumi:"path"`
}

// GooglePrivacyDlpV2CloudStoragePathResponseInput is an input type that accepts GooglePrivacyDlpV2CloudStoragePathResponseArgs and GooglePrivacyDlpV2CloudStoragePathResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStoragePathResponseInput` via:
//
//          GooglePrivacyDlpV2CloudStoragePathResponseArgs{...}
type GooglePrivacyDlpV2CloudStoragePathResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStoragePathResponseOutput() GooglePrivacyDlpV2CloudStoragePathResponseOutput
	ToGooglePrivacyDlpV2CloudStoragePathResponseOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStoragePathResponseOutput
}

// Message representing a single file or path in Cloud Storage.
type GooglePrivacyDlpV2CloudStoragePathResponseArgs struct {
	// A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt
	Path pulumi.StringInput `pulumi:"path"`
}

func (GooglePrivacyDlpV2CloudStoragePathResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStoragePathResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CloudStoragePathResponseArgs) ToGooglePrivacyDlpV2CloudStoragePathResponseOutput() GooglePrivacyDlpV2CloudStoragePathResponseOutput {
	return i.ToGooglePrivacyDlpV2CloudStoragePathResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStoragePathResponseArgs) ToGooglePrivacyDlpV2CloudStoragePathResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStoragePathResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStoragePathResponseOutput)
}

func (i GooglePrivacyDlpV2CloudStoragePathResponseArgs) ToGooglePrivacyDlpV2CloudStoragePathResponsePtrOutput() GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStoragePathResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStoragePathResponseArgs) ToGooglePrivacyDlpV2CloudStoragePathResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStoragePathResponseOutput).ToGooglePrivacyDlpV2CloudStoragePathResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CloudStoragePathResponsePtrInput is an input type that accepts GooglePrivacyDlpV2CloudStoragePathResponseArgs, GooglePrivacyDlpV2CloudStoragePathResponsePtr and GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStoragePathResponsePtrInput` via:
//
//          GooglePrivacyDlpV2CloudStoragePathResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CloudStoragePathResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStoragePathResponsePtrOutput() GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput
	ToGooglePrivacyDlpV2CloudStoragePathResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput
}

type googlePrivacyDlpV2CloudStoragePathResponsePtrType GooglePrivacyDlpV2CloudStoragePathResponseArgs

func GooglePrivacyDlpV2CloudStoragePathResponsePtr(v *GooglePrivacyDlpV2CloudStoragePathResponseArgs) GooglePrivacyDlpV2CloudStoragePathResponsePtrInput {
	return (*googlePrivacyDlpV2CloudStoragePathResponsePtrType)(v)
}

func (*googlePrivacyDlpV2CloudStoragePathResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStoragePathResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CloudStoragePathResponsePtrType) ToGooglePrivacyDlpV2CloudStoragePathResponsePtrOutput() GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStoragePathResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CloudStoragePathResponsePtrType) ToGooglePrivacyDlpV2CloudStoragePathResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput)
}

// Message representing a single file or path in Cloud Storage.
type GooglePrivacyDlpV2CloudStoragePathResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStoragePathResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStoragePathResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStoragePathResponseOutput) ToGooglePrivacyDlpV2CloudStoragePathResponseOutput() GooglePrivacyDlpV2CloudStoragePathResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStoragePathResponseOutput) ToGooglePrivacyDlpV2CloudStoragePathResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStoragePathResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStoragePathResponseOutput) ToGooglePrivacyDlpV2CloudStoragePathResponsePtrOutput() GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2CloudStoragePathResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CloudStoragePathResponseOutput) ToGooglePrivacyDlpV2CloudStoragePathResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CloudStoragePathResponse) *GooglePrivacyDlpV2CloudStoragePathResponse {
		return &v
	}).(GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput)
}

// A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt
func (o GooglePrivacyDlpV2CloudStoragePathResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStoragePathResponse) string { return v.Path }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStoragePathResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput) ToGooglePrivacyDlpV2CloudStoragePathResponsePtrOutput() GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput) ToGooglePrivacyDlpV2CloudStoragePathResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput) Elem() GooglePrivacyDlpV2CloudStoragePathResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStoragePathResponse) GooglePrivacyDlpV2CloudStoragePathResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CloudStoragePathResponse
		return ret
	}).(GooglePrivacyDlpV2CloudStoragePathResponseOutput)
}

// A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt
func (o GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStoragePathResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Message representing a set of files in a Cloud Storage bucket. Regular expressions are used to allow fine-grained control over which files in the bucket to include. Included files are those that match at least one item in `include_regex` and do not match any items in `exclude_regex`. Note that a file that matches items from both lists will _not_ be included. For a match to occur, the entire file path (i.e., everything in the url after the bucket name) must match the regular expression. For example, given the input `{bucket_name: "mybucket", include_regex: ["directory1/.*"], exclude_regex: ["directory1/excluded.*"]}`: * `gs://mybucket/directory1/myfile` will be included * `gs://mybucket/directory1/directory2/myfile` will be included (`.*` matches across `/`) * `gs://mybucket/directory0/directory1/myfile` will _not_ be included (the full path doesn't match any items in `include_regex`) * `gs://mybucket/directory1/excludedfile` will _not_ be included (the path matches an item in `exclude_regex`) If `include_regex` is left empty, it will match all files by default (this is equivalent to setting `include_regex: [".*"]`). Some other common use cases: * `{bucket_name: "mybucket", exclude_regex: [".*\.pdf"]}` will include all files in `mybucket` except for .pdf files * `{bucket_name: "mybucket", include_regex: ["directory/[^/]+"]}` will include all files directly under `gs://mybucket/directory/`, without matching across `/`
type GooglePrivacyDlpV2CloudStorageRegexFileSet struct {
	// The name of a Cloud Storage bucket. Required.
	BucketName *string `pulumi:"bucketName"`
	// A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
	ExcludeRegex []string `pulumi:"excludeRegex"`
	// A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
	IncludeRegex []string `pulumi:"includeRegex"`
}

// GooglePrivacyDlpV2CloudStorageRegexFileSetInput is an input type that accepts GooglePrivacyDlpV2CloudStorageRegexFileSetArgs and GooglePrivacyDlpV2CloudStorageRegexFileSetOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStorageRegexFileSetInput` via:
//
//          GooglePrivacyDlpV2CloudStorageRegexFileSetArgs{...}
type GooglePrivacyDlpV2CloudStorageRegexFileSetInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStorageRegexFileSetOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetOutput
	ToGooglePrivacyDlpV2CloudStorageRegexFileSetOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetOutput
}

// Message representing a set of files in a Cloud Storage bucket. Regular expressions are used to allow fine-grained control over which files in the bucket to include. Included files are those that match at least one item in `include_regex` and do not match any items in `exclude_regex`. Note that a file that matches items from both lists will _not_ be included. For a match to occur, the entire file path (i.e., everything in the url after the bucket name) must match the regular expression. For example, given the input `{bucket_name: "mybucket", include_regex: ["directory1/.*"], exclude_regex: ["directory1/excluded.*"]}`: * `gs://mybucket/directory1/myfile` will be included * `gs://mybucket/directory1/directory2/myfile` will be included (`.*` matches across `/`) * `gs://mybucket/directory0/directory1/myfile` will _not_ be included (the full path doesn't match any items in `include_regex`) * `gs://mybucket/directory1/excludedfile` will _not_ be included (the path matches an item in `exclude_regex`) If `include_regex` is left empty, it will match all files by default (this is equivalent to setting `include_regex: [".*"]`). Some other common use cases: * `{bucket_name: "mybucket", exclude_regex: [".*\.pdf"]}` will include all files in `mybucket` except for .pdf files * `{bucket_name: "mybucket", include_regex: ["directory/[^/]+"]}` will include all files directly under `gs://mybucket/directory/`, without matching across `/`
type GooglePrivacyDlpV2CloudStorageRegexFileSetArgs struct {
	// The name of a Cloud Storage bucket. Required.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
	ExcludeRegex pulumi.StringArrayInput `pulumi:"excludeRegex"`
	// A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
	IncludeRegex pulumi.StringArrayInput `pulumi:"includeRegex"`
}

func (GooglePrivacyDlpV2CloudStorageRegexFileSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStorageRegexFileSet)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CloudStorageRegexFileSetArgs) ToGooglePrivacyDlpV2CloudStorageRegexFileSetOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageRegexFileSetOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStorageRegexFileSetArgs) ToGooglePrivacyDlpV2CloudStorageRegexFileSetOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageRegexFileSetOutput)
}

func (i GooglePrivacyDlpV2CloudStorageRegexFileSetArgs) ToGooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStorageRegexFileSetArgs) ToGooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageRegexFileSetOutput).ToGooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CloudStorageRegexFileSetPtrInput is an input type that accepts GooglePrivacyDlpV2CloudStorageRegexFileSetArgs, GooglePrivacyDlpV2CloudStorageRegexFileSetPtr and GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStorageRegexFileSetPtrInput` via:
//
//          GooglePrivacyDlpV2CloudStorageRegexFileSetArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CloudStorageRegexFileSetPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput
	ToGooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput
}

type googlePrivacyDlpV2CloudStorageRegexFileSetPtrType GooglePrivacyDlpV2CloudStorageRegexFileSetArgs

func GooglePrivacyDlpV2CloudStorageRegexFileSetPtr(v *GooglePrivacyDlpV2CloudStorageRegexFileSetArgs) GooglePrivacyDlpV2CloudStorageRegexFileSetPtrInput {
	return (*googlePrivacyDlpV2CloudStorageRegexFileSetPtrType)(v)
}

func (*googlePrivacyDlpV2CloudStorageRegexFileSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStorageRegexFileSet)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CloudStorageRegexFileSetPtrType) ToGooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CloudStorageRegexFileSetPtrType) ToGooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput)
}

// Message representing a set of files in a Cloud Storage bucket. Regular expressions are used to allow fine-grained control over which files in the bucket to include. Included files are those that match at least one item in `include_regex` and do not match any items in `exclude_regex`. Note that a file that matches items from both lists will _not_ be included. For a match to occur, the entire file path (i.e., everything in the url after the bucket name) must match the regular expression. For example, given the input `{bucket_name: "mybucket", include_regex: ["directory1/.*"], exclude_regex: ["directory1/excluded.*"]}`: * `gs://mybucket/directory1/myfile` will be included * `gs://mybucket/directory1/directory2/myfile` will be included (`.*` matches across `/`) * `gs://mybucket/directory0/directory1/myfile` will _not_ be included (the full path doesn't match any items in `include_regex`) * `gs://mybucket/directory1/excludedfile` will _not_ be included (the path matches an item in `exclude_regex`) If `include_regex` is left empty, it will match all files by default (this is equivalent to setting `include_regex: [".*"]`). Some other common use cases: * `{bucket_name: "mybucket", exclude_regex: [".*\.pdf"]}` will include all files in `mybucket` except for .pdf files * `{bucket_name: "mybucket", include_regex: ["directory/[^/]+"]}` will include all files directly under `gs://mybucket/directory/`, without matching across `/`
type GooglePrivacyDlpV2CloudStorageRegexFileSetOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStorageRegexFileSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStorageRegexFileSet)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStorageRegexFileSetOutput) ToGooglePrivacyDlpV2CloudStorageRegexFileSetOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageRegexFileSetOutput) ToGooglePrivacyDlpV2CloudStorageRegexFileSetOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageRegexFileSetOutput) ToGooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput {
	return o.ToGooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CloudStorageRegexFileSetOutput) ToGooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CloudStorageRegexFileSet) *GooglePrivacyDlpV2CloudStorageRegexFileSet {
		return &v
	}).(GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput)
}

// The name of a Cloud Storage bucket. Required.
func (o GooglePrivacyDlpV2CloudStorageRegexFileSetOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageRegexFileSet) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
func (o GooglePrivacyDlpV2CloudStorageRegexFileSetOutput) ExcludeRegex() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageRegexFileSet) []string { return v.ExcludeRegex }).(pulumi.StringArrayOutput)
}

// A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
func (o GooglePrivacyDlpV2CloudStorageRegexFileSetOutput) IncludeRegex() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageRegexFileSet) []string { return v.IncludeRegex }).(pulumi.StringArrayOutput)
}

type GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStorageRegexFileSet)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput) ToGooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput) ToGooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput) Elem() GooglePrivacyDlpV2CloudStorageRegexFileSetOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageRegexFileSet) GooglePrivacyDlpV2CloudStorageRegexFileSet {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CloudStorageRegexFileSet
		return ret
	}).(GooglePrivacyDlpV2CloudStorageRegexFileSetOutput)
}

// The name of a Cloud Storage bucket. Required.
func (o GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageRegexFileSet) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
func (o GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput) ExcludeRegex() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageRegexFileSet) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeRegex
	}).(pulumi.StringArrayOutput)
}

// A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
func (o GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput) IncludeRegex() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageRegexFileSet) []string {
		if v == nil {
			return nil
		}
		return v.IncludeRegex
	}).(pulumi.StringArrayOutput)
}

// Message representing a set of files in a Cloud Storage bucket. Regular expressions are used to allow fine-grained control over which files in the bucket to include. Included files are those that match at least one item in `include_regex` and do not match any items in `exclude_regex`. Note that a file that matches items from both lists will _not_ be included. For a match to occur, the entire file path (i.e., everything in the url after the bucket name) must match the regular expression. For example, given the input `{bucket_name: "mybucket", include_regex: ["directory1/.*"], exclude_regex: ["directory1/excluded.*"]}`: * `gs://mybucket/directory1/myfile` will be included * `gs://mybucket/directory1/directory2/myfile` will be included (`.*` matches across `/`) * `gs://mybucket/directory0/directory1/myfile` will _not_ be included (the full path doesn't match any items in `include_regex`) * `gs://mybucket/directory1/excludedfile` will _not_ be included (the path matches an item in `exclude_regex`) If `include_regex` is left empty, it will match all files by default (this is equivalent to setting `include_regex: [".*"]`). Some other common use cases: * `{bucket_name: "mybucket", exclude_regex: [".*\.pdf"]}` will include all files in `mybucket` except for .pdf files * `{bucket_name: "mybucket", include_regex: ["directory/[^/]+"]}` will include all files directly under `gs://mybucket/directory/`, without matching across `/`
type GooglePrivacyDlpV2CloudStorageRegexFileSetResponse struct {
	// The name of a Cloud Storage bucket. Required.
	BucketName string `pulumi:"bucketName"`
	// A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
	ExcludeRegex []string `pulumi:"excludeRegex"`
	// A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
	IncludeRegex []string `pulumi:"includeRegex"`
}

// GooglePrivacyDlpV2CloudStorageRegexFileSetResponseInput is an input type that accepts GooglePrivacyDlpV2CloudStorageRegexFileSetResponseArgs and GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStorageRegexFileSetResponseInput` via:
//
//          GooglePrivacyDlpV2CloudStorageRegexFileSetResponseArgs{...}
type GooglePrivacyDlpV2CloudStorageRegexFileSetResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput
	ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput
}

// Message representing a set of files in a Cloud Storage bucket. Regular expressions are used to allow fine-grained control over which files in the bucket to include. Included files are those that match at least one item in `include_regex` and do not match any items in `exclude_regex`. Note that a file that matches items from both lists will _not_ be included. For a match to occur, the entire file path (i.e., everything in the url after the bucket name) must match the regular expression. For example, given the input `{bucket_name: "mybucket", include_regex: ["directory1/.*"], exclude_regex: ["directory1/excluded.*"]}`: * `gs://mybucket/directory1/myfile` will be included * `gs://mybucket/directory1/directory2/myfile` will be included (`.*` matches across `/`) * `gs://mybucket/directory0/directory1/myfile` will _not_ be included (the full path doesn't match any items in `include_regex`) * `gs://mybucket/directory1/excludedfile` will _not_ be included (the path matches an item in `exclude_regex`) If `include_regex` is left empty, it will match all files by default (this is equivalent to setting `include_regex: [".*"]`). Some other common use cases: * `{bucket_name: "mybucket", exclude_regex: [".*\.pdf"]}` will include all files in `mybucket` except for .pdf files * `{bucket_name: "mybucket", include_regex: ["directory/[^/]+"]}` will include all files directly under `gs://mybucket/directory/`, without matching across `/`
type GooglePrivacyDlpV2CloudStorageRegexFileSetResponseArgs struct {
	// The name of a Cloud Storage bucket. Required.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
	ExcludeRegex pulumi.StringArrayInput `pulumi:"excludeRegex"`
	// A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
	IncludeRegex pulumi.StringArrayInput `pulumi:"includeRegex"`
}

func (GooglePrivacyDlpV2CloudStorageRegexFileSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStorageRegexFileSetResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CloudStorageRegexFileSetResponseArgs) ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStorageRegexFileSetResponseArgs) ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput)
}

func (i GooglePrivacyDlpV2CloudStorageRegexFileSetResponseArgs) ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStorageRegexFileSetResponseArgs) ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput).ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrInput is an input type that accepts GooglePrivacyDlpV2CloudStorageRegexFileSetResponseArgs, GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtr and GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrInput` via:
//
//          GooglePrivacyDlpV2CloudStorageRegexFileSetResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput
	ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput
}

type googlePrivacyDlpV2CloudStorageRegexFileSetResponsePtrType GooglePrivacyDlpV2CloudStorageRegexFileSetResponseArgs

func GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtr(v *GooglePrivacyDlpV2CloudStorageRegexFileSetResponseArgs) GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrInput {
	return (*googlePrivacyDlpV2CloudStorageRegexFileSetResponsePtrType)(v)
}

func (*googlePrivacyDlpV2CloudStorageRegexFileSetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStorageRegexFileSetResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CloudStorageRegexFileSetResponsePtrType) ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CloudStorageRegexFileSetResponsePtrType) ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput)
}

// Message representing a set of files in a Cloud Storage bucket. Regular expressions are used to allow fine-grained control over which files in the bucket to include. Included files are those that match at least one item in `include_regex` and do not match any items in `exclude_regex`. Note that a file that matches items from both lists will _not_ be included. For a match to occur, the entire file path (i.e., everything in the url after the bucket name) must match the regular expression. For example, given the input `{bucket_name: "mybucket", include_regex: ["directory1/.*"], exclude_regex: ["directory1/excluded.*"]}`: * `gs://mybucket/directory1/myfile` will be included * `gs://mybucket/directory1/directory2/myfile` will be included (`.*` matches across `/`) * `gs://mybucket/directory0/directory1/myfile` will _not_ be included (the full path doesn't match any items in `include_regex`) * `gs://mybucket/directory1/excludedfile` will _not_ be included (the path matches an item in `exclude_regex`) If `include_regex` is left empty, it will match all files by default (this is equivalent to setting `include_regex: [".*"]`). Some other common use cases: * `{bucket_name: "mybucket", exclude_regex: [".*\.pdf"]}` will include all files in `mybucket` except for .pdf files * `{bucket_name: "mybucket", include_regex: ["directory/[^/]+"]}` will include all files directly under `gs://mybucket/directory/`, without matching across `/`
type GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CloudStorageRegexFileSetResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput) ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput) ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput) ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput) ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CloudStorageRegexFileSetResponse) *GooglePrivacyDlpV2CloudStorageRegexFileSetResponse {
		return &v
	}).(GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput)
}

// The name of a Cloud Storage bucket. Required.
func (o GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageRegexFileSetResponse) string { return v.BucketName }).(pulumi.StringOutput)
}

// A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
func (o GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput) ExcludeRegex() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageRegexFileSetResponse) []string { return v.ExcludeRegex }).(pulumi.StringArrayOutput)
}

// A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
func (o GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput) IncludeRegex() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CloudStorageRegexFileSetResponse) []string { return v.IncludeRegex }).(pulumi.StringArrayOutput)
}

type GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CloudStorageRegexFileSetResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput) ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput() GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput) ToGooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput) Elem() GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageRegexFileSetResponse) GooglePrivacyDlpV2CloudStorageRegexFileSetResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CloudStorageRegexFileSetResponse
		return ret
	}).(GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput)
}

// The name of a Cloud Storage bucket. Required.
func (o GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageRegexFileSetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
func (o GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput) ExcludeRegex() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageRegexFileSetResponse) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeRegex
	}).(pulumi.StringArrayOutput)
}

// A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
func (o GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput) IncludeRegex() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CloudStorageRegexFileSetResponse) []string {
		if v == nil {
			return nil
		}
		return v.IncludeRegex
	}).(pulumi.StringArrayOutput)
}

// The field type of `value` and `field` do not need to match to be considered equal, but not all comparisons are possible. EQUAL_TO and NOT_EQUAL_TO attempt to compare even with incompatible types, but all other comparisons are invalid with incompatible types. A `value` of type: - `string` can be compared against all other types - `boolean` can only be compared against other booleans - `integer` can be compared against doubles or a string if the string value can be parsed as an integer. - `double` can be compared against integers or a string if the string can be parsed as a double. - `Timestamp` can be compared against strings in RFC 3339 date string format. - `TimeOfDay` can be compared against timestamps and strings in the format of 'HH:mm:ss'. If we fail to compare do to type mismatch, a warning will be given and the condition will evaluate to false.
type GooglePrivacyDlpV2Condition struct {
	// Field within the record this condition is evaluated against.
	Field GooglePrivacyDlpV2FieldId `pulumi:"field"`
	// Operator used to compare the field or infoType to the value.
	Operator GooglePrivacyDlpV2ConditionOperator `pulumi:"operator"`
	// Value to compare against. [Mandatory, except for `EXISTS` tests.]
	Value *GooglePrivacyDlpV2Value `pulumi:"value"`
}

// GooglePrivacyDlpV2ConditionInput is an input type that accepts GooglePrivacyDlpV2ConditionArgs and GooglePrivacyDlpV2ConditionOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ConditionInput` via:
//
//          GooglePrivacyDlpV2ConditionArgs{...}
type GooglePrivacyDlpV2ConditionInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ConditionOutput() GooglePrivacyDlpV2ConditionOutput
	ToGooglePrivacyDlpV2ConditionOutputWithContext(context.Context) GooglePrivacyDlpV2ConditionOutput
}

// The field type of `value` and `field` do not need to match to be considered equal, but not all comparisons are possible. EQUAL_TO and NOT_EQUAL_TO attempt to compare even with incompatible types, but all other comparisons are invalid with incompatible types. A `value` of type: - `string` can be compared against all other types - `boolean` can only be compared against other booleans - `integer` can be compared against doubles or a string if the string value can be parsed as an integer. - `double` can be compared against integers or a string if the string can be parsed as a double. - `Timestamp` can be compared against strings in RFC 3339 date string format. - `TimeOfDay` can be compared against timestamps and strings in the format of 'HH:mm:ss'. If we fail to compare do to type mismatch, a warning will be given and the condition will evaluate to false.
type GooglePrivacyDlpV2ConditionArgs struct {
	// Field within the record this condition is evaluated against.
	Field GooglePrivacyDlpV2FieldIdInput `pulumi:"field"`
	// Operator used to compare the field or infoType to the value.
	Operator GooglePrivacyDlpV2ConditionOperatorInput `pulumi:"operator"`
	// Value to compare against. [Mandatory, except for `EXISTS` tests.]
	Value GooglePrivacyDlpV2ValuePtrInput `pulumi:"value"`
}

func (GooglePrivacyDlpV2ConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Condition)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ConditionArgs) ToGooglePrivacyDlpV2ConditionOutput() GooglePrivacyDlpV2ConditionOutput {
	return i.ToGooglePrivacyDlpV2ConditionOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ConditionArgs) ToGooglePrivacyDlpV2ConditionOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ConditionOutput)
}

// GooglePrivacyDlpV2ConditionArrayInput is an input type that accepts GooglePrivacyDlpV2ConditionArray and GooglePrivacyDlpV2ConditionArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ConditionArrayInput` via:
//
//          GooglePrivacyDlpV2ConditionArray{ GooglePrivacyDlpV2ConditionArgs{...} }
type GooglePrivacyDlpV2ConditionArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ConditionArrayOutput() GooglePrivacyDlpV2ConditionArrayOutput
	ToGooglePrivacyDlpV2ConditionArrayOutputWithContext(context.Context) GooglePrivacyDlpV2ConditionArrayOutput
}

type GooglePrivacyDlpV2ConditionArray []GooglePrivacyDlpV2ConditionInput

func (GooglePrivacyDlpV2ConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2Condition)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ConditionArray) ToGooglePrivacyDlpV2ConditionArrayOutput() GooglePrivacyDlpV2ConditionArrayOutput {
	return i.ToGooglePrivacyDlpV2ConditionArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ConditionArray) ToGooglePrivacyDlpV2ConditionArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ConditionArrayOutput)
}

// The field type of `value` and `field` do not need to match to be considered equal, but not all comparisons are possible. EQUAL_TO and NOT_EQUAL_TO attempt to compare even with incompatible types, but all other comparisons are invalid with incompatible types. A `value` of type: - `string` can be compared against all other types - `boolean` can only be compared against other booleans - `integer` can be compared against doubles or a string if the string value can be parsed as an integer. - `double` can be compared against integers or a string if the string can be parsed as a double. - `Timestamp` can be compared against strings in RFC 3339 date string format. - `TimeOfDay` can be compared against timestamps and strings in the format of 'HH:mm:ss'. If we fail to compare do to type mismatch, a warning will be given and the condition will evaluate to false.
type GooglePrivacyDlpV2ConditionOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Condition)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ConditionOutput) ToGooglePrivacyDlpV2ConditionOutput() GooglePrivacyDlpV2ConditionOutput {
	return o
}

func (o GooglePrivacyDlpV2ConditionOutput) ToGooglePrivacyDlpV2ConditionOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionOutput {
	return o
}

// Field within the record this condition is evaluated against.
func (o GooglePrivacyDlpV2ConditionOutput) Field() GooglePrivacyDlpV2FieldIdOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Condition) GooglePrivacyDlpV2FieldId { return v.Field }).(GooglePrivacyDlpV2FieldIdOutput)
}

// Operator used to compare the field or infoType to the value.
func (o GooglePrivacyDlpV2ConditionOutput) Operator() GooglePrivacyDlpV2ConditionOperatorOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Condition) GooglePrivacyDlpV2ConditionOperator { return v.Operator }).(GooglePrivacyDlpV2ConditionOperatorOutput)
}

// Value to compare against. [Mandatory, except for `EXISTS` tests.]
func (o GooglePrivacyDlpV2ConditionOutput) Value() GooglePrivacyDlpV2ValuePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Condition) *GooglePrivacyDlpV2Value { return v.Value }).(GooglePrivacyDlpV2ValuePtrOutput)
}

type GooglePrivacyDlpV2ConditionArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2Condition)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ConditionArrayOutput) ToGooglePrivacyDlpV2ConditionArrayOutput() GooglePrivacyDlpV2ConditionArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2ConditionArrayOutput) ToGooglePrivacyDlpV2ConditionArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2ConditionArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2ConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2Condition {
		return vs[0].([]GooglePrivacyDlpV2Condition)[vs[1].(int)]
	}).(GooglePrivacyDlpV2ConditionOutput)
}

// The field type of `value` and `field` do not need to match to be considered equal, but not all comparisons are possible. EQUAL_TO and NOT_EQUAL_TO attempt to compare even with incompatible types, but all other comparisons are invalid with incompatible types. A `value` of type: - `string` can be compared against all other types - `boolean` can only be compared against other booleans - `integer` can be compared against doubles or a string if the string value can be parsed as an integer. - `double` can be compared against integers or a string if the string can be parsed as a double. - `Timestamp` can be compared against strings in RFC 3339 date string format. - `TimeOfDay` can be compared against timestamps and strings in the format of 'HH:mm:ss'. If we fail to compare do to type mismatch, a warning will be given and the condition will evaluate to false.
type GooglePrivacyDlpV2ConditionResponse struct {
	// Field within the record this condition is evaluated against.
	Field GooglePrivacyDlpV2FieldIdResponse `pulumi:"field"`
	// Operator used to compare the field or infoType to the value.
	Operator string `pulumi:"operator"`
	// Value to compare against. [Mandatory, except for `EXISTS` tests.]
	Value GooglePrivacyDlpV2ValueResponse `pulumi:"value"`
}

// GooglePrivacyDlpV2ConditionResponseInput is an input type that accepts GooglePrivacyDlpV2ConditionResponseArgs and GooglePrivacyDlpV2ConditionResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ConditionResponseInput` via:
//
//          GooglePrivacyDlpV2ConditionResponseArgs{...}
type GooglePrivacyDlpV2ConditionResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ConditionResponseOutput() GooglePrivacyDlpV2ConditionResponseOutput
	ToGooglePrivacyDlpV2ConditionResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ConditionResponseOutput
}

// The field type of `value` and `field` do not need to match to be considered equal, but not all comparisons are possible. EQUAL_TO and NOT_EQUAL_TO attempt to compare even with incompatible types, but all other comparisons are invalid with incompatible types. A `value` of type: - `string` can be compared against all other types - `boolean` can only be compared against other booleans - `integer` can be compared against doubles or a string if the string value can be parsed as an integer. - `double` can be compared against integers or a string if the string can be parsed as a double. - `Timestamp` can be compared against strings in RFC 3339 date string format. - `TimeOfDay` can be compared against timestamps and strings in the format of 'HH:mm:ss'. If we fail to compare do to type mismatch, a warning will be given and the condition will evaluate to false.
type GooglePrivacyDlpV2ConditionResponseArgs struct {
	// Field within the record this condition is evaluated against.
	Field GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"field"`
	// Operator used to compare the field or infoType to the value.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Value to compare against. [Mandatory, except for `EXISTS` tests.]
	Value GooglePrivacyDlpV2ValueResponseInput `pulumi:"value"`
}

func (GooglePrivacyDlpV2ConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ConditionResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ConditionResponseArgs) ToGooglePrivacyDlpV2ConditionResponseOutput() GooglePrivacyDlpV2ConditionResponseOutput {
	return i.ToGooglePrivacyDlpV2ConditionResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ConditionResponseArgs) ToGooglePrivacyDlpV2ConditionResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ConditionResponseOutput)
}

// GooglePrivacyDlpV2ConditionResponseArrayInput is an input type that accepts GooglePrivacyDlpV2ConditionResponseArray and GooglePrivacyDlpV2ConditionResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ConditionResponseArrayInput` via:
//
//          GooglePrivacyDlpV2ConditionResponseArray{ GooglePrivacyDlpV2ConditionResponseArgs{...} }
type GooglePrivacyDlpV2ConditionResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ConditionResponseArrayOutput() GooglePrivacyDlpV2ConditionResponseArrayOutput
	ToGooglePrivacyDlpV2ConditionResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2ConditionResponseArrayOutput
}

type GooglePrivacyDlpV2ConditionResponseArray []GooglePrivacyDlpV2ConditionResponseInput

func (GooglePrivacyDlpV2ConditionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2ConditionResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ConditionResponseArray) ToGooglePrivacyDlpV2ConditionResponseArrayOutput() GooglePrivacyDlpV2ConditionResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2ConditionResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ConditionResponseArray) ToGooglePrivacyDlpV2ConditionResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ConditionResponseArrayOutput)
}

// The field type of `value` and `field` do not need to match to be considered equal, but not all comparisons are possible. EQUAL_TO and NOT_EQUAL_TO attempt to compare even with incompatible types, but all other comparisons are invalid with incompatible types. A `value` of type: - `string` can be compared against all other types - `boolean` can only be compared against other booleans - `integer` can be compared against doubles or a string if the string value can be parsed as an integer. - `double` can be compared against integers or a string if the string can be parsed as a double. - `Timestamp` can be compared against strings in RFC 3339 date string format. - `TimeOfDay` can be compared against timestamps and strings in the format of 'HH:mm:ss'. If we fail to compare do to type mismatch, a warning will be given and the condition will evaluate to false.
type GooglePrivacyDlpV2ConditionResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ConditionResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ConditionResponseOutput) ToGooglePrivacyDlpV2ConditionResponseOutput() GooglePrivacyDlpV2ConditionResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ConditionResponseOutput) ToGooglePrivacyDlpV2ConditionResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionResponseOutput {
	return o
}

// Field within the record this condition is evaluated against.
func (o GooglePrivacyDlpV2ConditionResponseOutput) Field() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ConditionResponse) GooglePrivacyDlpV2FieldIdResponse { return v.Field }).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

// Operator used to compare the field or infoType to the value.
func (o GooglePrivacyDlpV2ConditionResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ConditionResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Value to compare against. [Mandatory, except for `EXISTS` tests.]
func (o GooglePrivacyDlpV2ConditionResponseOutput) Value() GooglePrivacyDlpV2ValueResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ConditionResponse) GooglePrivacyDlpV2ValueResponse { return v.Value }).(GooglePrivacyDlpV2ValueResponseOutput)
}

type GooglePrivacyDlpV2ConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2ConditionResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ConditionResponseArrayOutput) ToGooglePrivacyDlpV2ConditionResponseArrayOutput() GooglePrivacyDlpV2ConditionResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2ConditionResponseArrayOutput) ToGooglePrivacyDlpV2ConditionResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2ConditionResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2ConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2ConditionResponse {
		return vs[0].([]GooglePrivacyDlpV2ConditionResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2ConditionResponseOutput)
}

// A collection of conditions.
type GooglePrivacyDlpV2Conditions struct {
	// A collection of conditions.
	Conditions []GooglePrivacyDlpV2Condition `pulumi:"conditions"`
}

// GooglePrivacyDlpV2ConditionsInput is an input type that accepts GooglePrivacyDlpV2ConditionsArgs and GooglePrivacyDlpV2ConditionsOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ConditionsInput` via:
//
//          GooglePrivacyDlpV2ConditionsArgs{...}
type GooglePrivacyDlpV2ConditionsInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ConditionsOutput() GooglePrivacyDlpV2ConditionsOutput
	ToGooglePrivacyDlpV2ConditionsOutputWithContext(context.Context) GooglePrivacyDlpV2ConditionsOutput
}

// A collection of conditions.
type GooglePrivacyDlpV2ConditionsArgs struct {
	// A collection of conditions.
	Conditions GooglePrivacyDlpV2ConditionArrayInput `pulumi:"conditions"`
}

func (GooglePrivacyDlpV2ConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Conditions)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ConditionsArgs) ToGooglePrivacyDlpV2ConditionsOutput() GooglePrivacyDlpV2ConditionsOutput {
	return i.ToGooglePrivacyDlpV2ConditionsOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ConditionsArgs) ToGooglePrivacyDlpV2ConditionsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ConditionsOutput)
}

func (i GooglePrivacyDlpV2ConditionsArgs) ToGooglePrivacyDlpV2ConditionsPtrOutput() GooglePrivacyDlpV2ConditionsPtrOutput {
	return i.ToGooglePrivacyDlpV2ConditionsPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ConditionsArgs) ToGooglePrivacyDlpV2ConditionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ConditionsOutput).ToGooglePrivacyDlpV2ConditionsPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2ConditionsPtrInput is an input type that accepts GooglePrivacyDlpV2ConditionsArgs, GooglePrivacyDlpV2ConditionsPtr and GooglePrivacyDlpV2ConditionsPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ConditionsPtrInput` via:
//
//          GooglePrivacyDlpV2ConditionsArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2ConditionsPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ConditionsPtrOutput() GooglePrivacyDlpV2ConditionsPtrOutput
	ToGooglePrivacyDlpV2ConditionsPtrOutputWithContext(context.Context) GooglePrivacyDlpV2ConditionsPtrOutput
}

type googlePrivacyDlpV2ConditionsPtrType GooglePrivacyDlpV2ConditionsArgs

func GooglePrivacyDlpV2ConditionsPtr(v *GooglePrivacyDlpV2ConditionsArgs) GooglePrivacyDlpV2ConditionsPtrInput {
	return (*googlePrivacyDlpV2ConditionsPtrType)(v)
}

func (*googlePrivacyDlpV2ConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Conditions)(nil)).Elem()
}

func (i *googlePrivacyDlpV2ConditionsPtrType) ToGooglePrivacyDlpV2ConditionsPtrOutput() GooglePrivacyDlpV2ConditionsPtrOutput {
	return i.ToGooglePrivacyDlpV2ConditionsPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2ConditionsPtrType) ToGooglePrivacyDlpV2ConditionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ConditionsPtrOutput)
}

// A collection of conditions.
type GooglePrivacyDlpV2ConditionsOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Conditions)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ConditionsOutput) ToGooglePrivacyDlpV2ConditionsOutput() GooglePrivacyDlpV2ConditionsOutput {
	return o
}

func (o GooglePrivacyDlpV2ConditionsOutput) ToGooglePrivacyDlpV2ConditionsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionsOutput {
	return o
}

func (o GooglePrivacyDlpV2ConditionsOutput) ToGooglePrivacyDlpV2ConditionsPtrOutput() GooglePrivacyDlpV2ConditionsPtrOutput {
	return o.ToGooglePrivacyDlpV2ConditionsPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2ConditionsOutput) ToGooglePrivacyDlpV2ConditionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2Conditions) *GooglePrivacyDlpV2Conditions {
		return &v
	}).(GooglePrivacyDlpV2ConditionsPtrOutput)
}

// A collection of conditions.
func (o GooglePrivacyDlpV2ConditionsOutput) Conditions() GooglePrivacyDlpV2ConditionArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Conditions) []GooglePrivacyDlpV2Condition { return v.Conditions }).(GooglePrivacyDlpV2ConditionArrayOutput)
}

type GooglePrivacyDlpV2ConditionsPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Conditions)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ConditionsPtrOutput) ToGooglePrivacyDlpV2ConditionsPtrOutput() GooglePrivacyDlpV2ConditionsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ConditionsPtrOutput) ToGooglePrivacyDlpV2ConditionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ConditionsPtrOutput) Elem() GooglePrivacyDlpV2ConditionsOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Conditions) GooglePrivacyDlpV2Conditions {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2Conditions
		return ret
	}).(GooglePrivacyDlpV2ConditionsOutput)
}

// A collection of conditions.
func (o GooglePrivacyDlpV2ConditionsPtrOutput) Conditions() GooglePrivacyDlpV2ConditionArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Conditions) []GooglePrivacyDlpV2Condition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(GooglePrivacyDlpV2ConditionArrayOutput)
}

// A collection of conditions.
type GooglePrivacyDlpV2ConditionsResponse struct {
	// A collection of conditions.
	Conditions []GooglePrivacyDlpV2ConditionResponse `pulumi:"conditions"`
}

// GooglePrivacyDlpV2ConditionsResponseInput is an input type that accepts GooglePrivacyDlpV2ConditionsResponseArgs and GooglePrivacyDlpV2ConditionsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ConditionsResponseInput` via:
//
//          GooglePrivacyDlpV2ConditionsResponseArgs{...}
type GooglePrivacyDlpV2ConditionsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ConditionsResponseOutput() GooglePrivacyDlpV2ConditionsResponseOutput
	ToGooglePrivacyDlpV2ConditionsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ConditionsResponseOutput
}

// A collection of conditions.
type GooglePrivacyDlpV2ConditionsResponseArgs struct {
	// A collection of conditions.
	Conditions GooglePrivacyDlpV2ConditionResponseArrayInput `pulumi:"conditions"`
}

func (GooglePrivacyDlpV2ConditionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ConditionsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ConditionsResponseArgs) ToGooglePrivacyDlpV2ConditionsResponseOutput() GooglePrivacyDlpV2ConditionsResponseOutput {
	return i.ToGooglePrivacyDlpV2ConditionsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ConditionsResponseArgs) ToGooglePrivacyDlpV2ConditionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ConditionsResponseOutput)
}

// A collection of conditions.
type GooglePrivacyDlpV2ConditionsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ConditionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ConditionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ConditionsResponseOutput) ToGooglePrivacyDlpV2ConditionsResponseOutput() GooglePrivacyDlpV2ConditionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ConditionsResponseOutput) ToGooglePrivacyDlpV2ConditionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ConditionsResponseOutput {
	return o
}

// A collection of conditions.
func (o GooglePrivacyDlpV2ConditionsResponseOutput) Conditions() GooglePrivacyDlpV2ConditionResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ConditionsResponse) []GooglePrivacyDlpV2ConditionResponse {
		return v.Conditions
	}).(GooglePrivacyDlpV2ConditionResponseArrayOutput)
}

// Pseudonymization method that generates deterministic encryption for the given input. Outputs a base64 encoded representation of the encrypted output. Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
type GooglePrivacyDlpV2CryptoDeterministicConfig struct {
	// A context may be used for higher security and maintaining referential integrity such that the same identifier in two different contexts will be given a distinct surrogate. The context is appended to plaintext value being encrypted. On decryption the provided context is validated against the value used during encryption. If a context was provided during encryption, same context must be provided during decryption as well. If the context is not set, plaintext would be used as is for encryption. If the context is set but: 1. there is no record present when transforming a given value or 2. the field is not present when transforming a given value, plaintext would be used as is for encryption. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s.
	Context *GooglePrivacyDlpV2FieldId `pulumi:"context"`
	// The key used by the encryption function. For deterministic encryption using AES-SIV, the provided key is internally expanded to 64 bytes prior to use.
	CryptoKey *GooglePrivacyDlpV2CryptoKey `pulumi:"cryptoKey"`
	// The custom info type to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom info type followed by the number of characters comprising the surrogate. The following scheme defines the format: {info type name}({surrogate character count}):{surrogate} For example, if the name of custom info type is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom info type 'Surrogate'. This facilitates reversal of the surrogate when it occurs in free text. Note: For record transformations where the entire cell in a table is being transformed, surrogates are not mandatory. Surrogates are used to denote the location of the token and are necessary for re-identification in free form text. In order for inspection to work properly, the name of this info type must not occur naturally anywhere in your data; otherwise, inspection may either - reverse a surrogate that does not correspond to an actual identifier - be unable to parse the surrogate and result in an error Therefore, choose your custom info type name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE.
	SurrogateInfoType *GooglePrivacyDlpV2InfoType `pulumi:"surrogateInfoType"`
}

// GooglePrivacyDlpV2CryptoDeterministicConfigInput is an input type that accepts GooglePrivacyDlpV2CryptoDeterministicConfigArgs and GooglePrivacyDlpV2CryptoDeterministicConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CryptoDeterministicConfigInput` via:
//
//          GooglePrivacyDlpV2CryptoDeterministicConfigArgs{...}
type GooglePrivacyDlpV2CryptoDeterministicConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CryptoDeterministicConfigOutput() GooglePrivacyDlpV2CryptoDeterministicConfigOutput
	ToGooglePrivacyDlpV2CryptoDeterministicConfigOutputWithContext(context.Context) GooglePrivacyDlpV2CryptoDeterministicConfigOutput
}

// Pseudonymization method that generates deterministic encryption for the given input. Outputs a base64 encoded representation of the encrypted output. Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
type GooglePrivacyDlpV2CryptoDeterministicConfigArgs struct {
	// A context may be used for higher security and maintaining referential integrity such that the same identifier in two different contexts will be given a distinct surrogate. The context is appended to plaintext value being encrypted. On decryption the provided context is validated against the value used during encryption. If a context was provided during encryption, same context must be provided during decryption as well. If the context is not set, plaintext would be used as is for encryption. If the context is set but: 1. there is no record present when transforming a given value or 2. the field is not present when transforming a given value, plaintext would be used as is for encryption. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s.
	Context GooglePrivacyDlpV2FieldIdPtrInput `pulumi:"context"`
	// The key used by the encryption function. For deterministic encryption using AES-SIV, the provided key is internally expanded to 64 bytes prior to use.
	CryptoKey GooglePrivacyDlpV2CryptoKeyPtrInput `pulumi:"cryptoKey"`
	// The custom info type to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom info type followed by the number of characters comprising the surrogate. The following scheme defines the format: {info type name}({surrogate character count}):{surrogate} For example, if the name of custom info type is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom info type 'Surrogate'. This facilitates reversal of the surrogate when it occurs in free text. Note: For record transformations where the entire cell in a table is being transformed, surrogates are not mandatory. Surrogates are used to denote the location of the token and are necessary for re-identification in free form text. In order for inspection to work properly, the name of this info type must not occur naturally anywhere in your data; otherwise, inspection may either - reverse a surrogate that does not correspond to an actual identifier - be unable to parse the surrogate and result in an error Therefore, choose your custom info type name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE.
	SurrogateInfoType GooglePrivacyDlpV2InfoTypePtrInput `pulumi:"surrogateInfoType"`
}

func (GooglePrivacyDlpV2CryptoDeterministicConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoDeterministicConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CryptoDeterministicConfigArgs) ToGooglePrivacyDlpV2CryptoDeterministicConfigOutput() GooglePrivacyDlpV2CryptoDeterministicConfigOutput {
	return i.ToGooglePrivacyDlpV2CryptoDeterministicConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CryptoDeterministicConfigArgs) ToGooglePrivacyDlpV2CryptoDeterministicConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoDeterministicConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoDeterministicConfigOutput)
}

func (i GooglePrivacyDlpV2CryptoDeterministicConfigArgs) ToGooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput() GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2CryptoDeterministicConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CryptoDeterministicConfigArgs) ToGooglePrivacyDlpV2CryptoDeterministicConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoDeterministicConfigOutput).ToGooglePrivacyDlpV2CryptoDeterministicConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CryptoDeterministicConfigPtrInput is an input type that accepts GooglePrivacyDlpV2CryptoDeterministicConfigArgs, GooglePrivacyDlpV2CryptoDeterministicConfigPtr and GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CryptoDeterministicConfigPtrInput` via:
//
//          GooglePrivacyDlpV2CryptoDeterministicConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CryptoDeterministicConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput() GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput
	ToGooglePrivacyDlpV2CryptoDeterministicConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput
}

type googlePrivacyDlpV2CryptoDeterministicConfigPtrType GooglePrivacyDlpV2CryptoDeterministicConfigArgs

func GooglePrivacyDlpV2CryptoDeterministicConfigPtr(v *GooglePrivacyDlpV2CryptoDeterministicConfigArgs) GooglePrivacyDlpV2CryptoDeterministicConfigPtrInput {
	return (*googlePrivacyDlpV2CryptoDeterministicConfigPtrType)(v)
}

func (*googlePrivacyDlpV2CryptoDeterministicConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CryptoDeterministicConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CryptoDeterministicConfigPtrType) ToGooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput() GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2CryptoDeterministicConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CryptoDeterministicConfigPtrType) ToGooglePrivacyDlpV2CryptoDeterministicConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput)
}

// Pseudonymization method that generates deterministic encryption for the given input. Outputs a base64 encoded representation of the encrypted output. Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
type GooglePrivacyDlpV2CryptoDeterministicConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CryptoDeterministicConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoDeterministicConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CryptoDeterministicConfigOutput) ToGooglePrivacyDlpV2CryptoDeterministicConfigOutput() GooglePrivacyDlpV2CryptoDeterministicConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoDeterministicConfigOutput) ToGooglePrivacyDlpV2CryptoDeterministicConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoDeterministicConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoDeterministicConfigOutput) ToGooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput() GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2CryptoDeterministicConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CryptoDeterministicConfigOutput) ToGooglePrivacyDlpV2CryptoDeterministicConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CryptoDeterministicConfig) *GooglePrivacyDlpV2CryptoDeterministicConfig {
		return &v
	}).(GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput)
}

// A context may be used for higher security and maintaining referential integrity such that the same identifier in two different contexts will be given a distinct surrogate. The context is appended to plaintext value being encrypted. On decryption the provided context is validated against the value used during encryption. If a context was provided during encryption, same context must be provided during decryption as well. If the context is not set, plaintext would be used as is for encryption. If the context is set but: 1. there is no record present when transforming a given value or 2. the field is not present when transforming a given value, plaintext would be used as is for encryption. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s.
func (o GooglePrivacyDlpV2CryptoDeterministicConfigOutput) Context() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoDeterministicConfig) *GooglePrivacyDlpV2FieldId { return v.Context }).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// The key used by the encryption function. For deterministic encryption using AES-SIV, the provided key is internally expanded to 64 bytes prior to use.
func (o GooglePrivacyDlpV2CryptoDeterministicConfigOutput) CryptoKey() GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoDeterministicConfig) *GooglePrivacyDlpV2CryptoKey { return v.CryptoKey }).(GooglePrivacyDlpV2CryptoKeyPtrOutput)
}

// The custom info type to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom info type followed by the number of characters comprising the surrogate. The following scheme defines the format: {info type name}({surrogate character count}):{surrogate} For example, if the name of custom info type is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom info type 'Surrogate'. This facilitates reversal of the surrogate when it occurs in free text. Note: For record transformations where the entire cell in a table is being transformed, surrogates are not mandatory. Surrogates are used to denote the location of the token and are necessary for re-identification in free form text. In order for inspection to work properly, the name of this info type must not occur naturally anywhere in your data; otherwise, inspection may either - reverse a surrogate that does not correspond to an actual identifier - be unable to parse the surrogate and result in an error Therefore, choose your custom info type name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE.
func (o GooglePrivacyDlpV2CryptoDeterministicConfigOutput) SurrogateInfoType() GooglePrivacyDlpV2InfoTypePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoDeterministicConfig) *GooglePrivacyDlpV2InfoType {
		return v.SurrogateInfoType
	}).(GooglePrivacyDlpV2InfoTypePtrOutput)
}

type GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CryptoDeterministicConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput) ToGooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput() GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput) ToGooglePrivacyDlpV2CryptoDeterministicConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput) Elem() GooglePrivacyDlpV2CryptoDeterministicConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoDeterministicConfig) GooglePrivacyDlpV2CryptoDeterministicConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CryptoDeterministicConfig
		return ret
	}).(GooglePrivacyDlpV2CryptoDeterministicConfigOutput)
}

// A context may be used for higher security and maintaining referential integrity such that the same identifier in two different contexts will be given a distinct surrogate. The context is appended to plaintext value being encrypted. On decryption the provided context is validated against the value used during encryption. If a context was provided during encryption, same context must be provided during decryption as well. If the context is not set, plaintext would be used as is for encryption. If the context is set but: 1. there is no record present when transforming a given value or 2. the field is not present when transforming a given value, plaintext would be used as is for encryption. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s.
func (o GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput) Context() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoDeterministicConfig) *GooglePrivacyDlpV2FieldId {
		if v == nil {
			return nil
		}
		return v.Context
	}).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// The key used by the encryption function. For deterministic encryption using AES-SIV, the provided key is internally expanded to 64 bytes prior to use.
func (o GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput) CryptoKey() GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoDeterministicConfig) *GooglePrivacyDlpV2CryptoKey {
		if v == nil {
			return nil
		}
		return v.CryptoKey
	}).(GooglePrivacyDlpV2CryptoKeyPtrOutput)
}

// The custom info type to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom info type followed by the number of characters comprising the surrogate. The following scheme defines the format: {info type name}({surrogate character count}):{surrogate} For example, if the name of custom info type is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom info type 'Surrogate'. This facilitates reversal of the surrogate when it occurs in free text. Note: For record transformations where the entire cell in a table is being transformed, surrogates are not mandatory. Surrogates are used to denote the location of the token and are necessary for re-identification in free form text. In order for inspection to work properly, the name of this info type must not occur naturally anywhere in your data; otherwise, inspection may either - reverse a surrogate that does not correspond to an actual identifier - be unable to parse the surrogate and result in an error Therefore, choose your custom info type name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE.
func (o GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput) SurrogateInfoType() GooglePrivacyDlpV2InfoTypePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoDeterministicConfig) *GooglePrivacyDlpV2InfoType {
		if v == nil {
			return nil
		}
		return v.SurrogateInfoType
	}).(GooglePrivacyDlpV2InfoTypePtrOutput)
}

// Pseudonymization method that generates deterministic encryption for the given input. Outputs a base64 encoded representation of the encrypted output. Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
type GooglePrivacyDlpV2CryptoDeterministicConfigResponse struct {
	// A context may be used for higher security and maintaining referential integrity such that the same identifier in two different contexts will be given a distinct surrogate. The context is appended to plaintext value being encrypted. On decryption the provided context is validated against the value used during encryption. If a context was provided during encryption, same context must be provided during decryption as well. If the context is not set, plaintext would be used as is for encryption. If the context is set but: 1. there is no record present when transforming a given value or 2. the field is not present when transforming a given value, plaintext would be used as is for encryption. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s.
	Context GooglePrivacyDlpV2FieldIdResponse `pulumi:"context"`
	// The key used by the encryption function. For deterministic encryption using AES-SIV, the provided key is internally expanded to 64 bytes prior to use.
	CryptoKey GooglePrivacyDlpV2CryptoKeyResponse `pulumi:"cryptoKey"`
	// The custom info type to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom info type followed by the number of characters comprising the surrogate. The following scheme defines the format: {info type name}({surrogate character count}):{surrogate} For example, if the name of custom info type is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom info type 'Surrogate'. This facilitates reversal of the surrogate when it occurs in free text. Note: For record transformations where the entire cell in a table is being transformed, surrogates are not mandatory. Surrogates are used to denote the location of the token and are necessary for re-identification in free form text. In order for inspection to work properly, the name of this info type must not occur naturally anywhere in your data; otherwise, inspection may either - reverse a surrogate that does not correspond to an actual identifier - be unable to parse the surrogate and result in an error Therefore, choose your custom info type name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE.
	SurrogateInfoType GooglePrivacyDlpV2InfoTypeResponse `pulumi:"surrogateInfoType"`
}

// GooglePrivacyDlpV2CryptoDeterministicConfigResponseInput is an input type that accepts GooglePrivacyDlpV2CryptoDeterministicConfigResponseArgs and GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CryptoDeterministicConfigResponseInput` via:
//
//          GooglePrivacyDlpV2CryptoDeterministicConfigResponseArgs{...}
type GooglePrivacyDlpV2CryptoDeterministicConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput() GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput
	ToGooglePrivacyDlpV2CryptoDeterministicConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput
}

// Pseudonymization method that generates deterministic encryption for the given input. Outputs a base64 encoded representation of the encrypted output. Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
type GooglePrivacyDlpV2CryptoDeterministicConfigResponseArgs struct {
	// A context may be used for higher security and maintaining referential integrity such that the same identifier in two different contexts will be given a distinct surrogate. The context is appended to plaintext value being encrypted. On decryption the provided context is validated against the value used during encryption. If a context was provided during encryption, same context must be provided during decryption as well. If the context is not set, plaintext would be used as is for encryption. If the context is set but: 1. there is no record present when transforming a given value or 2. the field is not present when transforming a given value, plaintext would be used as is for encryption. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s.
	Context GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"context"`
	// The key used by the encryption function. For deterministic encryption using AES-SIV, the provided key is internally expanded to 64 bytes prior to use.
	CryptoKey GooglePrivacyDlpV2CryptoKeyResponseInput `pulumi:"cryptoKey"`
	// The custom info type to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom info type followed by the number of characters comprising the surrogate. The following scheme defines the format: {info type name}({surrogate character count}):{surrogate} For example, if the name of custom info type is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom info type 'Surrogate'. This facilitates reversal of the surrogate when it occurs in free text. Note: For record transformations where the entire cell in a table is being transformed, surrogates are not mandatory. Surrogates are used to denote the location of the token and are necessary for re-identification in free form text. In order for inspection to work properly, the name of this info type must not occur naturally anywhere in your data; otherwise, inspection may either - reverse a surrogate that does not correspond to an actual identifier - be unable to parse the surrogate and result in an error Therefore, choose your custom info type name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE.
	SurrogateInfoType GooglePrivacyDlpV2InfoTypeResponseInput `pulumi:"surrogateInfoType"`
}

func (GooglePrivacyDlpV2CryptoDeterministicConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoDeterministicConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CryptoDeterministicConfigResponseArgs) ToGooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput() GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2CryptoDeterministicConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CryptoDeterministicConfigResponseArgs) ToGooglePrivacyDlpV2CryptoDeterministicConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput)
}

// Pseudonymization method that generates deterministic encryption for the given input. Outputs a base64 encoded representation of the encrypted output. Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
type GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoDeterministicConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput) ToGooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput() GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput) ToGooglePrivacyDlpV2CryptoDeterministicConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput {
	return o
}

// A context may be used for higher security and maintaining referential integrity such that the same identifier in two different contexts will be given a distinct surrogate. The context is appended to plaintext value being encrypted. On decryption the provided context is validated against the value used during encryption. If a context was provided during encryption, same context must be provided during decryption as well. If the context is not set, plaintext would be used as is for encryption. If the context is set but: 1. there is no record present when transforming a given value or 2. the field is not present when transforming a given value, plaintext would be used as is for encryption. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s.
func (o GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput) Context() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoDeterministicConfigResponse) GooglePrivacyDlpV2FieldIdResponse {
		return v.Context
	}).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

// The key used by the encryption function. For deterministic encryption using AES-SIV, the provided key is internally expanded to 64 bytes prior to use.
func (o GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput) CryptoKey() GooglePrivacyDlpV2CryptoKeyResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoDeterministicConfigResponse) GooglePrivacyDlpV2CryptoKeyResponse {
		return v.CryptoKey
	}).(GooglePrivacyDlpV2CryptoKeyResponseOutput)
}

// The custom info type to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom info type followed by the number of characters comprising the surrogate. The following scheme defines the format: {info type name}({surrogate character count}):{surrogate} For example, if the name of custom info type is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom info type 'Surrogate'. This facilitates reversal of the surrogate when it occurs in free text. Note: For record transformations where the entire cell in a table is being transformed, surrogates are not mandatory. Surrogates are used to denote the location of the token and are necessary for re-identification in free form text. In order for inspection to work properly, the name of this info type must not occur naturally anywhere in your data; otherwise, inspection may either - reverse a surrogate that does not correspond to an actual identifier - be unable to parse the surrogate and result in an error Therefore, choose your custom info type name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE.
func (o GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput) SurrogateInfoType() GooglePrivacyDlpV2InfoTypeResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoDeterministicConfigResponse) GooglePrivacyDlpV2InfoTypeResponse {
		return v.SurrogateInfoType
	}).(GooglePrivacyDlpV2InfoTypeResponseOutput)
}

// Pseudonymization method that generates surrogates via cryptographic hashing. Uses SHA-256. The key size must be either 32 or 64 bytes. Outputs a base64 encoded representation of the hashed output (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=). Currently, only string and integer values can be hashed. See https://cloud.google.com/dlp/docs/pseudonymization to learn more.
type GooglePrivacyDlpV2CryptoHashConfig struct {
	// The key used by the hash function.
	CryptoKey *GooglePrivacyDlpV2CryptoKey `pulumi:"cryptoKey"`
}

// GooglePrivacyDlpV2CryptoHashConfigInput is an input type that accepts GooglePrivacyDlpV2CryptoHashConfigArgs and GooglePrivacyDlpV2CryptoHashConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CryptoHashConfigInput` via:
//
//          GooglePrivacyDlpV2CryptoHashConfigArgs{...}
type GooglePrivacyDlpV2CryptoHashConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CryptoHashConfigOutput() GooglePrivacyDlpV2CryptoHashConfigOutput
	ToGooglePrivacyDlpV2CryptoHashConfigOutputWithContext(context.Context) GooglePrivacyDlpV2CryptoHashConfigOutput
}

// Pseudonymization method that generates surrogates via cryptographic hashing. Uses SHA-256. The key size must be either 32 or 64 bytes. Outputs a base64 encoded representation of the hashed output (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=). Currently, only string and integer values can be hashed. See https://cloud.google.com/dlp/docs/pseudonymization to learn more.
type GooglePrivacyDlpV2CryptoHashConfigArgs struct {
	// The key used by the hash function.
	CryptoKey GooglePrivacyDlpV2CryptoKeyPtrInput `pulumi:"cryptoKey"`
}

func (GooglePrivacyDlpV2CryptoHashConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoHashConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CryptoHashConfigArgs) ToGooglePrivacyDlpV2CryptoHashConfigOutput() GooglePrivacyDlpV2CryptoHashConfigOutput {
	return i.ToGooglePrivacyDlpV2CryptoHashConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CryptoHashConfigArgs) ToGooglePrivacyDlpV2CryptoHashConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoHashConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoHashConfigOutput)
}

func (i GooglePrivacyDlpV2CryptoHashConfigArgs) ToGooglePrivacyDlpV2CryptoHashConfigPtrOutput() GooglePrivacyDlpV2CryptoHashConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2CryptoHashConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CryptoHashConfigArgs) ToGooglePrivacyDlpV2CryptoHashConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoHashConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoHashConfigOutput).ToGooglePrivacyDlpV2CryptoHashConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CryptoHashConfigPtrInput is an input type that accepts GooglePrivacyDlpV2CryptoHashConfigArgs, GooglePrivacyDlpV2CryptoHashConfigPtr and GooglePrivacyDlpV2CryptoHashConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CryptoHashConfigPtrInput` via:
//
//          GooglePrivacyDlpV2CryptoHashConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CryptoHashConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CryptoHashConfigPtrOutput() GooglePrivacyDlpV2CryptoHashConfigPtrOutput
	ToGooglePrivacyDlpV2CryptoHashConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2CryptoHashConfigPtrOutput
}

type googlePrivacyDlpV2CryptoHashConfigPtrType GooglePrivacyDlpV2CryptoHashConfigArgs

func GooglePrivacyDlpV2CryptoHashConfigPtr(v *GooglePrivacyDlpV2CryptoHashConfigArgs) GooglePrivacyDlpV2CryptoHashConfigPtrInput {
	return (*googlePrivacyDlpV2CryptoHashConfigPtrType)(v)
}

func (*googlePrivacyDlpV2CryptoHashConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CryptoHashConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CryptoHashConfigPtrType) ToGooglePrivacyDlpV2CryptoHashConfigPtrOutput() GooglePrivacyDlpV2CryptoHashConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2CryptoHashConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CryptoHashConfigPtrType) ToGooglePrivacyDlpV2CryptoHashConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoHashConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoHashConfigPtrOutput)
}

// Pseudonymization method that generates surrogates via cryptographic hashing. Uses SHA-256. The key size must be either 32 or 64 bytes. Outputs a base64 encoded representation of the hashed output (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=). Currently, only string and integer values can be hashed. See https://cloud.google.com/dlp/docs/pseudonymization to learn more.
type GooglePrivacyDlpV2CryptoHashConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CryptoHashConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoHashConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CryptoHashConfigOutput) ToGooglePrivacyDlpV2CryptoHashConfigOutput() GooglePrivacyDlpV2CryptoHashConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoHashConfigOutput) ToGooglePrivacyDlpV2CryptoHashConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoHashConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoHashConfigOutput) ToGooglePrivacyDlpV2CryptoHashConfigPtrOutput() GooglePrivacyDlpV2CryptoHashConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2CryptoHashConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CryptoHashConfigOutput) ToGooglePrivacyDlpV2CryptoHashConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoHashConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CryptoHashConfig) *GooglePrivacyDlpV2CryptoHashConfig {
		return &v
	}).(GooglePrivacyDlpV2CryptoHashConfigPtrOutput)
}

// The key used by the hash function.
func (o GooglePrivacyDlpV2CryptoHashConfigOutput) CryptoKey() GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoHashConfig) *GooglePrivacyDlpV2CryptoKey { return v.CryptoKey }).(GooglePrivacyDlpV2CryptoKeyPtrOutput)
}

type GooglePrivacyDlpV2CryptoHashConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CryptoHashConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CryptoHashConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CryptoHashConfigPtrOutput) ToGooglePrivacyDlpV2CryptoHashConfigPtrOutput() GooglePrivacyDlpV2CryptoHashConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoHashConfigPtrOutput) ToGooglePrivacyDlpV2CryptoHashConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoHashConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoHashConfigPtrOutput) Elem() GooglePrivacyDlpV2CryptoHashConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoHashConfig) GooglePrivacyDlpV2CryptoHashConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CryptoHashConfig
		return ret
	}).(GooglePrivacyDlpV2CryptoHashConfigOutput)
}

// The key used by the hash function.
func (o GooglePrivacyDlpV2CryptoHashConfigPtrOutput) CryptoKey() GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoHashConfig) *GooglePrivacyDlpV2CryptoKey {
		if v == nil {
			return nil
		}
		return v.CryptoKey
	}).(GooglePrivacyDlpV2CryptoKeyPtrOutput)
}

// Pseudonymization method that generates surrogates via cryptographic hashing. Uses SHA-256. The key size must be either 32 or 64 bytes. Outputs a base64 encoded representation of the hashed output (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=). Currently, only string and integer values can be hashed. See https://cloud.google.com/dlp/docs/pseudonymization to learn more.
type GooglePrivacyDlpV2CryptoHashConfigResponse struct {
	// The key used by the hash function.
	CryptoKey GooglePrivacyDlpV2CryptoKeyResponse `pulumi:"cryptoKey"`
}

// GooglePrivacyDlpV2CryptoHashConfigResponseInput is an input type that accepts GooglePrivacyDlpV2CryptoHashConfigResponseArgs and GooglePrivacyDlpV2CryptoHashConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CryptoHashConfigResponseInput` via:
//
//          GooglePrivacyDlpV2CryptoHashConfigResponseArgs{...}
type GooglePrivacyDlpV2CryptoHashConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CryptoHashConfigResponseOutput() GooglePrivacyDlpV2CryptoHashConfigResponseOutput
	ToGooglePrivacyDlpV2CryptoHashConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2CryptoHashConfigResponseOutput
}

// Pseudonymization method that generates surrogates via cryptographic hashing. Uses SHA-256. The key size must be either 32 or 64 bytes. Outputs a base64 encoded representation of the hashed output (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=). Currently, only string and integer values can be hashed. See https://cloud.google.com/dlp/docs/pseudonymization to learn more.
type GooglePrivacyDlpV2CryptoHashConfigResponseArgs struct {
	// The key used by the hash function.
	CryptoKey GooglePrivacyDlpV2CryptoKeyResponseInput `pulumi:"cryptoKey"`
}

func (GooglePrivacyDlpV2CryptoHashConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoHashConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CryptoHashConfigResponseArgs) ToGooglePrivacyDlpV2CryptoHashConfigResponseOutput() GooglePrivacyDlpV2CryptoHashConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2CryptoHashConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CryptoHashConfigResponseArgs) ToGooglePrivacyDlpV2CryptoHashConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoHashConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoHashConfigResponseOutput)
}

// Pseudonymization method that generates surrogates via cryptographic hashing. Uses SHA-256. The key size must be either 32 or 64 bytes. Outputs a base64 encoded representation of the hashed output (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=). Currently, only string and integer values can be hashed. See https://cloud.google.com/dlp/docs/pseudonymization to learn more.
type GooglePrivacyDlpV2CryptoHashConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CryptoHashConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoHashConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CryptoHashConfigResponseOutput) ToGooglePrivacyDlpV2CryptoHashConfigResponseOutput() GooglePrivacyDlpV2CryptoHashConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoHashConfigResponseOutput) ToGooglePrivacyDlpV2CryptoHashConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoHashConfigResponseOutput {
	return o
}

// The key used by the hash function.
func (o GooglePrivacyDlpV2CryptoHashConfigResponseOutput) CryptoKey() GooglePrivacyDlpV2CryptoKeyResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoHashConfigResponse) GooglePrivacyDlpV2CryptoKeyResponse {
		return v.CryptoKey
	}).(GooglePrivacyDlpV2CryptoKeyResponseOutput)
}

// This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
type GooglePrivacyDlpV2CryptoKey struct {
	// Key wrapped using Cloud KMS
	KmsWrapped *GooglePrivacyDlpV2KmsWrappedCryptoKey `pulumi:"kmsWrapped"`
	// Transient crypto key
	Transient *GooglePrivacyDlpV2TransientCryptoKey `pulumi:"transient"`
	// Unwrapped crypto key
	Unwrapped *GooglePrivacyDlpV2UnwrappedCryptoKey `pulumi:"unwrapped"`
}

// GooglePrivacyDlpV2CryptoKeyInput is an input type that accepts GooglePrivacyDlpV2CryptoKeyArgs and GooglePrivacyDlpV2CryptoKeyOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CryptoKeyInput` via:
//
//          GooglePrivacyDlpV2CryptoKeyArgs{...}
type GooglePrivacyDlpV2CryptoKeyInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CryptoKeyOutput() GooglePrivacyDlpV2CryptoKeyOutput
	ToGooglePrivacyDlpV2CryptoKeyOutputWithContext(context.Context) GooglePrivacyDlpV2CryptoKeyOutput
}

// This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
type GooglePrivacyDlpV2CryptoKeyArgs struct {
	// Key wrapped using Cloud KMS
	KmsWrapped GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrInput `pulumi:"kmsWrapped"`
	// Transient crypto key
	Transient GooglePrivacyDlpV2TransientCryptoKeyPtrInput `pulumi:"transient"`
	// Unwrapped crypto key
	Unwrapped GooglePrivacyDlpV2UnwrappedCryptoKeyPtrInput `pulumi:"unwrapped"`
}

func (GooglePrivacyDlpV2CryptoKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoKey)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CryptoKeyArgs) ToGooglePrivacyDlpV2CryptoKeyOutput() GooglePrivacyDlpV2CryptoKeyOutput {
	return i.ToGooglePrivacyDlpV2CryptoKeyOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CryptoKeyArgs) ToGooglePrivacyDlpV2CryptoKeyOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoKeyOutput)
}

func (i GooglePrivacyDlpV2CryptoKeyArgs) ToGooglePrivacyDlpV2CryptoKeyPtrOutput() GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return i.ToGooglePrivacyDlpV2CryptoKeyPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CryptoKeyArgs) ToGooglePrivacyDlpV2CryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoKeyOutput).ToGooglePrivacyDlpV2CryptoKeyPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CryptoKeyPtrInput is an input type that accepts GooglePrivacyDlpV2CryptoKeyArgs, GooglePrivacyDlpV2CryptoKeyPtr and GooglePrivacyDlpV2CryptoKeyPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CryptoKeyPtrInput` via:
//
//          GooglePrivacyDlpV2CryptoKeyArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CryptoKeyPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CryptoKeyPtrOutput() GooglePrivacyDlpV2CryptoKeyPtrOutput
	ToGooglePrivacyDlpV2CryptoKeyPtrOutputWithContext(context.Context) GooglePrivacyDlpV2CryptoKeyPtrOutput
}

type googlePrivacyDlpV2CryptoKeyPtrType GooglePrivacyDlpV2CryptoKeyArgs

func GooglePrivacyDlpV2CryptoKeyPtr(v *GooglePrivacyDlpV2CryptoKeyArgs) GooglePrivacyDlpV2CryptoKeyPtrInput {
	return (*googlePrivacyDlpV2CryptoKeyPtrType)(v)
}

func (*googlePrivacyDlpV2CryptoKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CryptoKey)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CryptoKeyPtrType) ToGooglePrivacyDlpV2CryptoKeyPtrOutput() GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return i.ToGooglePrivacyDlpV2CryptoKeyPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CryptoKeyPtrType) ToGooglePrivacyDlpV2CryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoKeyPtrOutput)
}

// This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
type GooglePrivacyDlpV2CryptoKeyOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CryptoKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoKey)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CryptoKeyOutput) ToGooglePrivacyDlpV2CryptoKeyOutput() GooglePrivacyDlpV2CryptoKeyOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoKeyOutput) ToGooglePrivacyDlpV2CryptoKeyOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoKeyOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoKeyOutput) ToGooglePrivacyDlpV2CryptoKeyPtrOutput() GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return o.ToGooglePrivacyDlpV2CryptoKeyPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CryptoKeyOutput) ToGooglePrivacyDlpV2CryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CryptoKey) *GooglePrivacyDlpV2CryptoKey {
		return &v
	}).(GooglePrivacyDlpV2CryptoKeyPtrOutput)
}

// Key wrapped using Cloud KMS
func (o GooglePrivacyDlpV2CryptoKeyOutput) KmsWrapped() GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoKey) *GooglePrivacyDlpV2KmsWrappedCryptoKey { return v.KmsWrapped }).(GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput)
}

// Transient crypto key
func (o GooglePrivacyDlpV2CryptoKeyOutput) Transient() GooglePrivacyDlpV2TransientCryptoKeyPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoKey) *GooglePrivacyDlpV2TransientCryptoKey { return v.Transient }).(GooglePrivacyDlpV2TransientCryptoKeyPtrOutput)
}

// Unwrapped crypto key
func (o GooglePrivacyDlpV2CryptoKeyOutput) Unwrapped() GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoKey) *GooglePrivacyDlpV2UnwrappedCryptoKey { return v.Unwrapped }).(GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput)
}

type GooglePrivacyDlpV2CryptoKeyPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CryptoKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CryptoKey)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CryptoKeyPtrOutput) ToGooglePrivacyDlpV2CryptoKeyPtrOutput() GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoKeyPtrOutput) ToGooglePrivacyDlpV2CryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoKeyPtrOutput) Elem() GooglePrivacyDlpV2CryptoKeyOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoKey) GooglePrivacyDlpV2CryptoKey {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CryptoKey
		return ret
	}).(GooglePrivacyDlpV2CryptoKeyOutput)
}

// Key wrapped using Cloud KMS
func (o GooglePrivacyDlpV2CryptoKeyPtrOutput) KmsWrapped() GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoKey) *GooglePrivacyDlpV2KmsWrappedCryptoKey {
		if v == nil {
			return nil
		}
		return v.KmsWrapped
	}).(GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput)
}

// Transient crypto key
func (o GooglePrivacyDlpV2CryptoKeyPtrOutput) Transient() GooglePrivacyDlpV2TransientCryptoKeyPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoKey) *GooglePrivacyDlpV2TransientCryptoKey {
		if v == nil {
			return nil
		}
		return v.Transient
	}).(GooglePrivacyDlpV2TransientCryptoKeyPtrOutput)
}

// Unwrapped crypto key
func (o GooglePrivacyDlpV2CryptoKeyPtrOutput) Unwrapped() GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoKey) *GooglePrivacyDlpV2UnwrappedCryptoKey {
		if v == nil {
			return nil
		}
		return v.Unwrapped
	}).(GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput)
}

// This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
type GooglePrivacyDlpV2CryptoKeyResponse struct {
	// Key wrapped using Cloud KMS
	KmsWrapped GooglePrivacyDlpV2KmsWrappedCryptoKeyResponse `pulumi:"kmsWrapped"`
	// Transient crypto key
	Transient GooglePrivacyDlpV2TransientCryptoKeyResponse `pulumi:"transient"`
	// Unwrapped crypto key
	Unwrapped GooglePrivacyDlpV2UnwrappedCryptoKeyResponse `pulumi:"unwrapped"`
}

// GooglePrivacyDlpV2CryptoKeyResponseInput is an input type that accepts GooglePrivacyDlpV2CryptoKeyResponseArgs and GooglePrivacyDlpV2CryptoKeyResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CryptoKeyResponseInput` via:
//
//          GooglePrivacyDlpV2CryptoKeyResponseArgs{...}
type GooglePrivacyDlpV2CryptoKeyResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CryptoKeyResponseOutput() GooglePrivacyDlpV2CryptoKeyResponseOutput
	ToGooglePrivacyDlpV2CryptoKeyResponseOutputWithContext(context.Context) GooglePrivacyDlpV2CryptoKeyResponseOutput
}

// This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
type GooglePrivacyDlpV2CryptoKeyResponseArgs struct {
	// Key wrapped using Cloud KMS
	KmsWrapped GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseInput `pulumi:"kmsWrapped"`
	// Transient crypto key
	Transient GooglePrivacyDlpV2TransientCryptoKeyResponseInput `pulumi:"transient"`
	// Unwrapped crypto key
	Unwrapped GooglePrivacyDlpV2UnwrappedCryptoKeyResponseInput `pulumi:"unwrapped"`
}

func (GooglePrivacyDlpV2CryptoKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoKeyResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CryptoKeyResponseArgs) ToGooglePrivacyDlpV2CryptoKeyResponseOutput() GooglePrivacyDlpV2CryptoKeyResponseOutput {
	return i.ToGooglePrivacyDlpV2CryptoKeyResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CryptoKeyResponseArgs) ToGooglePrivacyDlpV2CryptoKeyResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoKeyResponseOutput)
}

// This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
type GooglePrivacyDlpV2CryptoKeyResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CryptoKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoKeyResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CryptoKeyResponseOutput) ToGooglePrivacyDlpV2CryptoKeyResponseOutput() GooglePrivacyDlpV2CryptoKeyResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoKeyResponseOutput) ToGooglePrivacyDlpV2CryptoKeyResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoKeyResponseOutput {
	return o
}

// Key wrapped using Cloud KMS
func (o GooglePrivacyDlpV2CryptoKeyResponseOutput) KmsWrapped() GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoKeyResponse) GooglePrivacyDlpV2KmsWrappedCryptoKeyResponse {
		return v.KmsWrapped
	}).(GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput)
}

// Transient crypto key
func (o GooglePrivacyDlpV2CryptoKeyResponseOutput) Transient() GooglePrivacyDlpV2TransientCryptoKeyResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoKeyResponse) GooglePrivacyDlpV2TransientCryptoKeyResponse {
		return v.Transient
	}).(GooglePrivacyDlpV2TransientCryptoKeyResponseOutput)
}

// Unwrapped crypto key
func (o GooglePrivacyDlpV2CryptoKeyResponseOutput) Unwrapped() GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoKeyResponse) GooglePrivacyDlpV2UnwrappedCryptoKeyResponse {
		return v.Unwrapped
	}).(GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput)
}

// Replaces an identifier with a surrogate using Format Preserving Encryption (FPE) with the FFX mode of operation; however when used in the `ReidentifyContent` API method, it serves the opposite function by reversing the surrogate back into the original identifier. The identifier must be encoded as ASCII. For a given crypto key and context, the same identifier will be replaced with the same surrogate. Identifiers must be at least two characters long. In the case that the identifier is the empty string, it will be skipped. See https://cloud.google.com/dlp/docs/pseudonymization to learn more. Note: We recommend using CryptoDeterministicConfig for all use cases which do not require preserving the input alphabet space and size, plus warrant referential integrity.
type GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig struct {
	// Common alphabets.
	CommonAlphabet *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet `pulumi:"commonAlphabet"`
	// The 'tweak', a context may be used for higher security since the same identifier in two different contexts won't be given the same surrogate. If the context is not set, a default tweak will be used. If the context is set but: 1. there is no record present when transforming a given value or 1. the field is not present when transforming a given value, a default tweak will be used. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s. Currently, the referenced field may be of value type integer or string. The tweak is constructed as a sequence of bytes in big endian byte order such that: - a 64 bit integer is encoded followed by a single byte of value 1 - a string is encoded in UTF-8 format followed by a single byte of value 2
	Context *GooglePrivacyDlpV2FieldId `pulumi:"context"`
	// The key used by the encryption algorithm.
	CryptoKey GooglePrivacyDlpV2CryptoKey `pulumi:"cryptoKey"`
	// This is supported by mapping these to the alphanumeric characters that the FFX mode natively supports. This happens before/after encryption/decryption. Each character listed must appear only once. Number of characters must be in the range [2, 95]. This must be encoded as ASCII. The order of characters does not matter. The full list of allowed characters is: 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ~`!@#$%^&*()_-+={[}]|\:;"'<,>.?/
	CustomAlphabet *string `pulumi:"customAlphabet"`
	// The native way to select the alphabet. Must be in the range [2, 95].
	Radix *int `pulumi:"radix"`
	// The custom infoType to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom infoType followed by the number of characters comprising the surrogate. The following scheme defines the format: info_type_name(surrogate_character_count):surrogate For example, if the name of custom infoType is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom infoType [`SurrogateType`](https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype). This facilitates reversal of the surrogate when it occurs in free text. In order for inspection to work properly, the name of this infoType must not occur naturally anywhere in your data; otherwise, inspection may find a surrogate that does not correspond to an actual identifier. Therefore, choose your custom infoType name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE
	SurrogateInfoType *GooglePrivacyDlpV2InfoType `pulumi:"surrogateInfoType"`
}

// GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigInput is an input type that accepts GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigArgs and GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigInput` via:
//
//          GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigArgs{...}
type GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput
	ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutputWithContext(context.Context) GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput
}

// Replaces an identifier with a surrogate using Format Preserving Encryption (FPE) with the FFX mode of operation; however when used in the `ReidentifyContent` API method, it serves the opposite function by reversing the surrogate back into the original identifier. The identifier must be encoded as ASCII. For a given crypto key and context, the same identifier will be replaced with the same surrogate. Identifiers must be at least two characters long. In the case that the identifier is the empty string, it will be skipped. See https://cloud.google.com/dlp/docs/pseudonymization to learn more. Note: We recommend using CryptoDeterministicConfig for all use cases which do not require preserving the input alphabet space and size, plus warrant referential integrity.
type GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigArgs struct {
	// Common alphabets.
	CommonAlphabet GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabetPtrInput `pulumi:"commonAlphabet"`
	// The 'tweak', a context may be used for higher security since the same identifier in two different contexts won't be given the same surrogate. If the context is not set, a default tweak will be used. If the context is set but: 1. there is no record present when transforming a given value or 1. the field is not present when transforming a given value, a default tweak will be used. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s. Currently, the referenced field may be of value type integer or string. The tweak is constructed as a sequence of bytes in big endian byte order such that: - a 64 bit integer is encoded followed by a single byte of value 1 - a string is encoded in UTF-8 format followed by a single byte of value 2
	Context GooglePrivacyDlpV2FieldIdPtrInput `pulumi:"context"`
	// The key used by the encryption algorithm.
	CryptoKey GooglePrivacyDlpV2CryptoKeyInput `pulumi:"cryptoKey"`
	// This is supported by mapping these to the alphanumeric characters that the FFX mode natively supports. This happens before/after encryption/decryption. Each character listed must appear only once. Number of characters must be in the range [2, 95]. This must be encoded as ASCII. The order of characters does not matter. The full list of allowed characters is: 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ~`!@#$%^&*()_-+={[}]|\:;"'<,>.?/
	CustomAlphabet pulumi.StringPtrInput `pulumi:"customAlphabet"`
	// The native way to select the alphabet. Must be in the range [2, 95].
	Radix pulumi.IntPtrInput `pulumi:"radix"`
	// The custom infoType to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom infoType followed by the number of characters comprising the surrogate. The following scheme defines the format: info_type_name(surrogate_character_count):surrogate For example, if the name of custom infoType is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom infoType [`SurrogateType`](https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype). This facilitates reversal of the surrogate when it occurs in free text. In order for inspection to work properly, the name of this infoType must not occur naturally anywhere in your data; otherwise, inspection may find a surrogate that does not correspond to an actual identifier. Therefore, choose your custom infoType name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE
	SurrogateInfoType GooglePrivacyDlpV2InfoTypePtrInput `pulumi:"surrogateInfoType"`
}

func (GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigArgs) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput {
	return i.ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigArgs) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput)
}

func (i GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigArgs) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigArgs) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput).ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrInput is an input type that accepts GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigArgs, GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtr and GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrInput` via:
//
//          GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput
	ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput
}

type googlePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrType GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigArgs

func GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtr(v *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigArgs) GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrInput {
	return (*googlePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrType)(v)
}

func (*googlePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrType) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrType) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput)
}

// Replaces an identifier with a surrogate using Format Preserving Encryption (FPE) with the FFX mode of operation; however when used in the `ReidentifyContent` API method, it serves the opposite function by reversing the surrogate back into the original identifier. The identifier must be encoded as ASCII. For a given crypto key and context, the same identifier will be replaced with the same surrogate. Identifiers must be at least two characters long. In the case that the identifier is the empty string, it will be skipped. See https://cloud.google.com/dlp/docs/pseudonymization to learn more. Note: We recommend using CryptoDeterministicConfig for all use cases which do not require preserving the input alphabet space and size, plus warrant referential integrity.
type GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig) *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig {
		return &v
	}).(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput)
}

// Common alphabets.
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput) CommonAlphabet() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabetPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig) *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet {
		return v.CommonAlphabet
	}).(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabetPtrOutput)
}

// The 'tweak', a context may be used for higher security since the same identifier in two different contexts won't be given the same surrogate. If the context is not set, a default tweak will be used. If the context is set but: 1. there is no record present when transforming a given value or 1. the field is not present when transforming a given value, a default tweak will be used. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s. Currently, the referenced field may be of value type integer or string. The tweak is constructed as a sequence of bytes in big endian byte order such that: - a 64 bit integer is encoded followed by a single byte of value 1 - a string is encoded in UTF-8 format followed by a single byte of value 2
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput) Context() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig) *GooglePrivacyDlpV2FieldId { return v.Context }).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// The key used by the encryption algorithm.
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput) CryptoKey() GooglePrivacyDlpV2CryptoKeyOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig) GooglePrivacyDlpV2CryptoKey { return v.CryptoKey }).(GooglePrivacyDlpV2CryptoKeyOutput)
}

// This is supported by mapping these to the alphanumeric characters that the FFX mode natively supports. This happens before/after encryption/decryption. Each character listed must appear only once. Number of characters must be in the range [2, 95]. This must be encoded as ASCII. The order of characters does not matter. The full list of allowed characters is: 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ~`!@#$%^&*()_-+={[}]|\:;"'<,>.?/
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput) CustomAlphabet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig) *string { return v.CustomAlphabet }).(pulumi.StringPtrOutput)
}

// The native way to select the alphabet. Must be in the range [2, 95].
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput) Radix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig) *int { return v.Radix }).(pulumi.IntPtrOutput)
}

// The custom infoType to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom infoType followed by the number of characters comprising the surrogate. The following scheme defines the format: info_type_name(surrogate_character_count):surrogate For example, if the name of custom infoType is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom infoType [`SurrogateType`](https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype). This facilitates reversal of the surrogate when it occurs in free text. In order for inspection to work properly, the name of this infoType must not occur naturally anywhere in your data; otherwise, inspection may find a surrogate that does not correspond to an actual identifier. Therefore, choose your custom infoType name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput) SurrogateInfoType() GooglePrivacyDlpV2InfoTypePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig) *GooglePrivacyDlpV2InfoType {
		return v.SurrogateInfoType
	}).(GooglePrivacyDlpV2InfoTypePtrOutput)
}

type GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput) Elem() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig) GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig
		return ret
	}).(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput)
}

// Common alphabets.
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput) CommonAlphabet() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabetPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig) *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet {
		if v == nil {
			return nil
		}
		return v.CommonAlphabet
	}).(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabetPtrOutput)
}

// The 'tweak', a context may be used for higher security since the same identifier in two different contexts won't be given the same surrogate. If the context is not set, a default tweak will be used. If the context is set but: 1. there is no record present when transforming a given value or 1. the field is not present when transforming a given value, a default tweak will be used. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s. Currently, the referenced field may be of value type integer or string. The tweak is constructed as a sequence of bytes in big endian byte order such that: - a 64 bit integer is encoded followed by a single byte of value 1 - a string is encoded in UTF-8 format followed by a single byte of value 2
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput) Context() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig) *GooglePrivacyDlpV2FieldId {
		if v == nil {
			return nil
		}
		return v.Context
	}).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// The key used by the encryption algorithm.
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput) CryptoKey() GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig) *GooglePrivacyDlpV2CryptoKey {
		if v == nil {
			return nil
		}
		return &v.CryptoKey
	}).(GooglePrivacyDlpV2CryptoKeyPtrOutput)
}

// This is supported by mapping these to the alphanumeric characters that the FFX mode natively supports. This happens before/after encryption/decryption. Each character listed must appear only once. Number of characters must be in the range [2, 95]. This must be encoded as ASCII. The order of characters does not matter. The full list of allowed characters is: 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ~`!@#$%^&*()_-+={[}]|\:;"'<,>.?/
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput) CustomAlphabet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomAlphabet
	}).(pulumi.StringPtrOutput)
}

// The native way to select the alphabet. Must be in the range [2, 95].
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput) Radix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig) *int {
		if v == nil {
			return nil
		}
		return v.Radix
	}).(pulumi.IntPtrOutput)
}

// The custom infoType to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom infoType followed by the number of characters comprising the surrogate. The following scheme defines the format: info_type_name(surrogate_character_count):surrogate For example, if the name of custom infoType is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom infoType [`SurrogateType`](https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype). This facilitates reversal of the surrogate when it occurs in free text. In order for inspection to work properly, the name of this infoType must not occur naturally anywhere in your data; otherwise, inspection may find a surrogate that does not correspond to an actual identifier. Therefore, choose your custom infoType name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput) SurrogateInfoType() GooglePrivacyDlpV2InfoTypePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig) *GooglePrivacyDlpV2InfoType {
		if v == nil {
			return nil
		}
		return v.SurrogateInfoType
	}).(GooglePrivacyDlpV2InfoTypePtrOutput)
}

// Replaces an identifier with a surrogate using Format Preserving Encryption (FPE) with the FFX mode of operation; however when used in the `ReidentifyContent` API method, it serves the opposite function by reversing the surrogate back into the original identifier. The identifier must be encoded as ASCII. For a given crypto key and context, the same identifier will be replaced with the same surrogate. Identifiers must be at least two characters long. In the case that the identifier is the empty string, it will be skipped. See https://cloud.google.com/dlp/docs/pseudonymization to learn more. Note: We recommend using CryptoDeterministicConfig for all use cases which do not require preserving the input alphabet space and size, plus warrant referential integrity.
type GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse struct {
	// Common alphabets.
	CommonAlphabet string `pulumi:"commonAlphabet"`
	// The 'tweak', a context may be used for higher security since the same identifier in two different contexts won't be given the same surrogate. If the context is not set, a default tweak will be used. If the context is set but: 1. there is no record present when transforming a given value or 1. the field is not present when transforming a given value, a default tweak will be used. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s. Currently, the referenced field may be of value type integer or string. The tweak is constructed as a sequence of bytes in big endian byte order such that: - a 64 bit integer is encoded followed by a single byte of value 1 - a string is encoded in UTF-8 format followed by a single byte of value 2
	Context GooglePrivacyDlpV2FieldIdResponse `pulumi:"context"`
	// The key used by the encryption algorithm.
	CryptoKey GooglePrivacyDlpV2CryptoKeyResponse `pulumi:"cryptoKey"`
	// This is supported by mapping these to the alphanumeric characters that the FFX mode natively supports. This happens before/after encryption/decryption. Each character listed must appear only once. Number of characters must be in the range [2, 95]. This must be encoded as ASCII. The order of characters does not matter. The full list of allowed characters is: 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ~`!@#$%^&*()_-+={[}]|\:;"'<,>.?/
	CustomAlphabet string `pulumi:"customAlphabet"`
	// The native way to select the alphabet. Must be in the range [2, 95].
	Radix int `pulumi:"radix"`
	// The custom infoType to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom infoType followed by the number of characters comprising the surrogate. The following scheme defines the format: info_type_name(surrogate_character_count):surrogate For example, if the name of custom infoType is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom infoType [`SurrogateType`](https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype). This facilitates reversal of the surrogate when it occurs in free text. In order for inspection to work properly, the name of this infoType must not occur naturally anywhere in your data; otherwise, inspection may find a surrogate that does not correspond to an actual identifier. Therefore, choose your custom infoType name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE
	SurrogateInfoType GooglePrivacyDlpV2InfoTypeResponse `pulumi:"surrogateInfoType"`
}

// GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseInput is an input type that accepts GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseArgs and GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseInput` via:
//
//          GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseArgs{...}
type GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput
	ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput
}

// Replaces an identifier with a surrogate using Format Preserving Encryption (FPE) with the FFX mode of operation; however when used in the `ReidentifyContent` API method, it serves the opposite function by reversing the surrogate back into the original identifier. The identifier must be encoded as ASCII. For a given crypto key and context, the same identifier will be replaced with the same surrogate. Identifiers must be at least two characters long. In the case that the identifier is the empty string, it will be skipped. See https://cloud.google.com/dlp/docs/pseudonymization to learn more. Note: We recommend using CryptoDeterministicConfig for all use cases which do not require preserving the input alphabet space and size, plus warrant referential integrity.
type GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseArgs struct {
	// Common alphabets.
	CommonAlphabet pulumi.StringInput `pulumi:"commonAlphabet"`
	// The 'tweak', a context may be used for higher security since the same identifier in two different contexts won't be given the same surrogate. If the context is not set, a default tweak will be used. If the context is set but: 1. there is no record present when transforming a given value or 1. the field is not present when transforming a given value, a default tweak will be used. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s. Currently, the referenced field may be of value type integer or string. The tweak is constructed as a sequence of bytes in big endian byte order such that: - a 64 bit integer is encoded followed by a single byte of value 1 - a string is encoded in UTF-8 format followed by a single byte of value 2
	Context GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"context"`
	// The key used by the encryption algorithm.
	CryptoKey GooglePrivacyDlpV2CryptoKeyResponseInput `pulumi:"cryptoKey"`
	// This is supported by mapping these to the alphanumeric characters that the FFX mode natively supports. This happens before/after encryption/decryption. Each character listed must appear only once. Number of characters must be in the range [2, 95]. This must be encoded as ASCII. The order of characters does not matter. The full list of allowed characters is: 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ~`!@#$%^&*()_-+={[}]|\:;"'<,>.?/
	CustomAlphabet pulumi.StringInput `pulumi:"customAlphabet"`
	// The native way to select the alphabet. Must be in the range [2, 95].
	Radix pulumi.IntInput `pulumi:"radix"`
	// The custom infoType to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom infoType followed by the number of characters comprising the surrogate. The following scheme defines the format: info_type_name(surrogate_character_count):surrogate For example, if the name of custom infoType is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom infoType [`SurrogateType`](https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype). This facilitates reversal of the surrogate when it occurs in free text. In order for inspection to work properly, the name of this infoType must not occur naturally anywhere in your data; otherwise, inspection may find a surrogate that does not correspond to an actual identifier. Therefore, choose your custom infoType name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE
	SurrogateInfoType GooglePrivacyDlpV2InfoTypeResponseInput `pulumi:"surrogateInfoType"`
}

func (GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseArgs) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseArgs) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput)
}

// Replaces an identifier with a surrogate using Format Preserving Encryption (FPE) with the FFX mode of operation; however when used in the `ReidentifyContent` API method, it serves the opposite function by reversing the surrogate back into the original identifier. The identifier must be encoded as ASCII. For a given crypto key and context, the same identifier will be replaced with the same surrogate. Identifiers must be at least two characters long. In the case that the identifier is the empty string, it will be skipped. See https://cloud.google.com/dlp/docs/pseudonymization to learn more. Note: We recommend using CryptoDeterministicConfig for all use cases which do not require preserving the input alphabet space and size, plus warrant referential integrity.
type GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput) ToGooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput {
	return o
}

// Common alphabets.
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput) CommonAlphabet() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse) string { return v.CommonAlphabet }).(pulumi.StringOutput)
}

// The 'tweak', a context may be used for higher security since the same identifier in two different contexts won't be given the same surrogate. If the context is not set, a default tweak will be used. If the context is set but: 1. there is no record present when transforming a given value or 1. the field is not present when transforming a given value, a default tweak will be used. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and non-structured `ContentItem`s. Currently, the referenced field may be of value type integer or string. The tweak is constructed as a sequence of bytes in big endian byte order such that: - a 64 bit integer is encoded followed by a single byte of value 1 - a string is encoded in UTF-8 format followed by a single byte of value 2
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput) Context() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse) GooglePrivacyDlpV2FieldIdResponse {
		return v.Context
	}).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

// The key used by the encryption algorithm.
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput) CryptoKey() GooglePrivacyDlpV2CryptoKeyResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse) GooglePrivacyDlpV2CryptoKeyResponse {
		return v.CryptoKey
	}).(GooglePrivacyDlpV2CryptoKeyResponseOutput)
}

// This is supported by mapping these to the alphanumeric characters that the FFX mode natively supports. This happens before/after encryption/decryption. Each character listed must appear only once. Number of characters must be in the range [2, 95]. This must be encoded as ASCII. The order of characters does not matter. The full list of allowed characters is: 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ~`!@#$%^&*()_-+={[}]|\:;"'<,>.?/
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput) CustomAlphabet() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse) string { return v.CustomAlphabet }).(pulumi.StringOutput)
}

// The native way to select the alphabet. Must be in the range [2, 95].
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput) Radix() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse) int { return v.Radix }).(pulumi.IntOutput)
}

// The custom infoType to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom infoType followed by the number of characters comprising the surrogate. The following scheme defines the format: info_type_name(surrogate_character_count):surrogate For example, if the name of custom infoType is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom infoType [`SurrogateType`](https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype). This facilitates reversal of the surrogate when it occurs in free text. In order for inspection to work properly, the name of this infoType must not occur naturally anywhere in your data; otherwise, inspection may find a surrogate that does not correspond to an actual identifier. Therefore, choose your custom infoType name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE
func (o GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput) SurrogateInfoType() GooglePrivacyDlpV2InfoTypeResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse) GooglePrivacyDlpV2InfoTypeResponse {
		return v.SurrogateInfoType
	}).(GooglePrivacyDlpV2InfoTypeResponseOutput)
}

// Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question.
type GooglePrivacyDlpV2CustomInfoType struct {
	// Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType.
	DetectionRules []GooglePrivacyDlpV2DetectionRule `pulumi:"detectionRules"`
	// A list of phrases to detect as a CustomInfoType.
	Dictionary *GooglePrivacyDlpV2Dictionary `pulumi:"dictionary"`
	// If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.
	ExclusionType *GooglePrivacyDlpV2CustomInfoTypeExclusionType `pulumi:"exclusionType"`
	// CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the name matches one of existing infoTypes and that infoType is specified in `InspectContent.info_types` field. Specifying the latter adds findings to the one detected by the system. If built-in info type is not specified in `InspectContent.info_types` list then the name is treated as a custom info type.
	InfoType *GooglePrivacyDlpV2InfoType `pulumi:"infoType"`
	// Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.
	Likelihood *GooglePrivacyDlpV2CustomInfoTypeLikelihood `pulumi:"likelihood"`
	// Regular expression based CustomInfoType.
	Regex *GooglePrivacyDlpV2Regex `pulumi:"regex"`
	// Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`.
	StoredType *GooglePrivacyDlpV2StoredType `pulumi:"storedType"`
	// Message for detecting output from deidentification transformations that support reversing.
	SurrogateType *GooglePrivacyDlpV2SurrogateType `pulumi:"surrogateType"`
}

// GooglePrivacyDlpV2CustomInfoTypeInput is an input type that accepts GooglePrivacyDlpV2CustomInfoTypeArgs and GooglePrivacyDlpV2CustomInfoTypeOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CustomInfoTypeInput` via:
//
//          GooglePrivacyDlpV2CustomInfoTypeArgs{...}
type GooglePrivacyDlpV2CustomInfoTypeInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CustomInfoTypeOutput() GooglePrivacyDlpV2CustomInfoTypeOutput
	ToGooglePrivacyDlpV2CustomInfoTypeOutputWithContext(context.Context) GooglePrivacyDlpV2CustomInfoTypeOutput
}

// Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question.
type GooglePrivacyDlpV2CustomInfoTypeArgs struct {
	// Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType.
	DetectionRules GooglePrivacyDlpV2DetectionRuleArrayInput `pulumi:"detectionRules"`
	// A list of phrases to detect as a CustomInfoType.
	Dictionary GooglePrivacyDlpV2DictionaryPtrInput `pulumi:"dictionary"`
	// If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.
	ExclusionType GooglePrivacyDlpV2CustomInfoTypeExclusionTypePtrInput `pulumi:"exclusionType"`
	// CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the name matches one of existing infoTypes and that infoType is specified in `InspectContent.info_types` field. Specifying the latter adds findings to the one detected by the system. If built-in info type is not specified in `InspectContent.info_types` list then the name is treated as a custom info type.
	InfoType GooglePrivacyDlpV2InfoTypePtrInput `pulumi:"infoType"`
	// Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.
	Likelihood GooglePrivacyDlpV2CustomInfoTypeLikelihoodPtrInput `pulumi:"likelihood"`
	// Regular expression based CustomInfoType.
	Regex GooglePrivacyDlpV2RegexPtrInput `pulumi:"regex"`
	// Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`.
	StoredType GooglePrivacyDlpV2StoredTypePtrInput `pulumi:"storedType"`
	// Message for detecting output from deidentification transformations that support reversing.
	SurrogateType GooglePrivacyDlpV2SurrogateTypePtrInput `pulumi:"surrogateType"`
}

func (GooglePrivacyDlpV2CustomInfoTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CustomInfoType)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CustomInfoTypeArgs) ToGooglePrivacyDlpV2CustomInfoTypeOutput() GooglePrivacyDlpV2CustomInfoTypeOutput {
	return i.ToGooglePrivacyDlpV2CustomInfoTypeOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CustomInfoTypeArgs) ToGooglePrivacyDlpV2CustomInfoTypeOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CustomInfoTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CustomInfoTypeOutput)
}

// GooglePrivacyDlpV2CustomInfoTypeArrayInput is an input type that accepts GooglePrivacyDlpV2CustomInfoTypeArray and GooglePrivacyDlpV2CustomInfoTypeArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CustomInfoTypeArrayInput` via:
//
//          GooglePrivacyDlpV2CustomInfoTypeArray{ GooglePrivacyDlpV2CustomInfoTypeArgs{...} }
type GooglePrivacyDlpV2CustomInfoTypeArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CustomInfoTypeArrayOutput() GooglePrivacyDlpV2CustomInfoTypeArrayOutput
	ToGooglePrivacyDlpV2CustomInfoTypeArrayOutputWithContext(context.Context) GooglePrivacyDlpV2CustomInfoTypeArrayOutput
}

type GooglePrivacyDlpV2CustomInfoTypeArray []GooglePrivacyDlpV2CustomInfoTypeInput

func (GooglePrivacyDlpV2CustomInfoTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2CustomInfoType)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CustomInfoTypeArray) ToGooglePrivacyDlpV2CustomInfoTypeArrayOutput() GooglePrivacyDlpV2CustomInfoTypeArrayOutput {
	return i.ToGooglePrivacyDlpV2CustomInfoTypeArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CustomInfoTypeArray) ToGooglePrivacyDlpV2CustomInfoTypeArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CustomInfoTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CustomInfoTypeArrayOutput)
}

// Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question.
type GooglePrivacyDlpV2CustomInfoTypeOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CustomInfoTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CustomInfoType)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CustomInfoTypeOutput) ToGooglePrivacyDlpV2CustomInfoTypeOutput() GooglePrivacyDlpV2CustomInfoTypeOutput {
	return o
}

func (o GooglePrivacyDlpV2CustomInfoTypeOutput) ToGooglePrivacyDlpV2CustomInfoTypeOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CustomInfoTypeOutput {
	return o
}

// Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType.
func (o GooglePrivacyDlpV2CustomInfoTypeOutput) DetectionRules() GooglePrivacyDlpV2DetectionRuleArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoType) []GooglePrivacyDlpV2DetectionRule { return v.DetectionRules }).(GooglePrivacyDlpV2DetectionRuleArrayOutput)
}

// A list of phrases to detect as a CustomInfoType.
func (o GooglePrivacyDlpV2CustomInfoTypeOutput) Dictionary() GooglePrivacyDlpV2DictionaryPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoType) *GooglePrivacyDlpV2Dictionary { return v.Dictionary }).(GooglePrivacyDlpV2DictionaryPtrOutput)
}

// If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.
func (o GooglePrivacyDlpV2CustomInfoTypeOutput) ExclusionType() GooglePrivacyDlpV2CustomInfoTypeExclusionTypePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoType) *GooglePrivacyDlpV2CustomInfoTypeExclusionType {
		return v.ExclusionType
	}).(GooglePrivacyDlpV2CustomInfoTypeExclusionTypePtrOutput)
}

// CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the name matches one of existing infoTypes and that infoType is specified in `InspectContent.info_types` field. Specifying the latter adds findings to the one detected by the system. If built-in info type is not specified in `InspectContent.info_types` list then the name is treated as a custom info type.
func (o GooglePrivacyDlpV2CustomInfoTypeOutput) InfoType() GooglePrivacyDlpV2InfoTypePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoType) *GooglePrivacyDlpV2InfoType { return v.InfoType }).(GooglePrivacyDlpV2InfoTypePtrOutput)
}

// Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.
func (o GooglePrivacyDlpV2CustomInfoTypeOutput) Likelihood() GooglePrivacyDlpV2CustomInfoTypeLikelihoodPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoType) *GooglePrivacyDlpV2CustomInfoTypeLikelihood {
		return v.Likelihood
	}).(GooglePrivacyDlpV2CustomInfoTypeLikelihoodPtrOutput)
}

// Regular expression based CustomInfoType.
func (o GooglePrivacyDlpV2CustomInfoTypeOutput) Regex() GooglePrivacyDlpV2RegexPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoType) *GooglePrivacyDlpV2Regex { return v.Regex }).(GooglePrivacyDlpV2RegexPtrOutput)
}

// Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`.
func (o GooglePrivacyDlpV2CustomInfoTypeOutput) StoredType() GooglePrivacyDlpV2StoredTypePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoType) *GooglePrivacyDlpV2StoredType { return v.StoredType }).(GooglePrivacyDlpV2StoredTypePtrOutput)
}

// Message for detecting output from deidentification transformations that support reversing.
func (o GooglePrivacyDlpV2CustomInfoTypeOutput) SurrogateType() GooglePrivacyDlpV2SurrogateTypePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoType) *GooglePrivacyDlpV2SurrogateType { return v.SurrogateType }).(GooglePrivacyDlpV2SurrogateTypePtrOutput)
}

type GooglePrivacyDlpV2CustomInfoTypeArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CustomInfoTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2CustomInfoType)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CustomInfoTypeArrayOutput) ToGooglePrivacyDlpV2CustomInfoTypeArrayOutput() GooglePrivacyDlpV2CustomInfoTypeArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2CustomInfoTypeArrayOutput) ToGooglePrivacyDlpV2CustomInfoTypeArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CustomInfoTypeArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2CustomInfoTypeArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2CustomInfoTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2CustomInfoType {
		return vs[0].([]GooglePrivacyDlpV2CustomInfoType)[vs[1].(int)]
	}).(GooglePrivacyDlpV2CustomInfoTypeOutput)
}

// Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question.
type GooglePrivacyDlpV2CustomInfoTypeResponse struct {
	// Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType.
	DetectionRules []GooglePrivacyDlpV2DetectionRuleResponse `pulumi:"detectionRules"`
	// A list of phrases to detect as a CustomInfoType.
	Dictionary GooglePrivacyDlpV2DictionaryResponse `pulumi:"dictionary"`
	// If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.
	ExclusionType string `pulumi:"exclusionType"`
	// CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the name matches one of existing infoTypes and that infoType is specified in `InspectContent.info_types` field. Specifying the latter adds findings to the one detected by the system. If built-in info type is not specified in `InspectContent.info_types` list then the name is treated as a custom info type.
	InfoType GooglePrivacyDlpV2InfoTypeResponse `pulumi:"infoType"`
	// Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.
	Likelihood string `pulumi:"likelihood"`
	// Regular expression based CustomInfoType.
	Regex GooglePrivacyDlpV2RegexResponse `pulumi:"regex"`
	// Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`.
	StoredType GooglePrivacyDlpV2StoredTypeResponse `pulumi:"storedType"`
	// Message for detecting output from deidentification transformations that support reversing.
	SurrogateType GooglePrivacyDlpV2SurrogateTypeResponse `pulumi:"surrogateType"`
}

// GooglePrivacyDlpV2CustomInfoTypeResponseInput is an input type that accepts GooglePrivacyDlpV2CustomInfoTypeResponseArgs and GooglePrivacyDlpV2CustomInfoTypeResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CustomInfoTypeResponseInput` via:
//
//          GooglePrivacyDlpV2CustomInfoTypeResponseArgs{...}
type GooglePrivacyDlpV2CustomInfoTypeResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CustomInfoTypeResponseOutput() GooglePrivacyDlpV2CustomInfoTypeResponseOutput
	ToGooglePrivacyDlpV2CustomInfoTypeResponseOutputWithContext(context.Context) GooglePrivacyDlpV2CustomInfoTypeResponseOutput
}

// Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question.
type GooglePrivacyDlpV2CustomInfoTypeResponseArgs struct {
	// Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType.
	DetectionRules GooglePrivacyDlpV2DetectionRuleResponseArrayInput `pulumi:"detectionRules"`
	// A list of phrases to detect as a CustomInfoType.
	Dictionary GooglePrivacyDlpV2DictionaryResponseInput `pulumi:"dictionary"`
	// If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.
	ExclusionType pulumi.StringInput `pulumi:"exclusionType"`
	// CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the name matches one of existing infoTypes and that infoType is specified in `InspectContent.info_types` field. Specifying the latter adds findings to the one detected by the system. If built-in info type is not specified in `InspectContent.info_types` list then the name is treated as a custom info type.
	InfoType GooglePrivacyDlpV2InfoTypeResponseInput `pulumi:"infoType"`
	// Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.
	Likelihood pulumi.StringInput `pulumi:"likelihood"`
	// Regular expression based CustomInfoType.
	Regex GooglePrivacyDlpV2RegexResponseInput `pulumi:"regex"`
	// Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`.
	StoredType GooglePrivacyDlpV2StoredTypeResponseInput `pulumi:"storedType"`
	// Message for detecting output from deidentification transformations that support reversing.
	SurrogateType GooglePrivacyDlpV2SurrogateTypeResponseInput `pulumi:"surrogateType"`
}

func (GooglePrivacyDlpV2CustomInfoTypeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CustomInfoTypeResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CustomInfoTypeResponseArgs) ToGooglePrivacyDlpV2CustomInfoTypeResponseOutput() GooglePrivacyDlpV2CustomInfoTypeResponseOutput {
	return i.ToGooglePrivacyDlpV2CustomInfoTypeResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CustomInfoTypeResponseArgs) ToGooglePrivacyDlpV2CustomInfoTypeResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CustomInfoTypeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CustomInfoTypeResponseOutput)
}

// GooglePrivacyDlpV2CustomInfoTypeResponseArrayInput is an input type that accepts GooglePrivacyDlpV2CustomInfoTypeResponseArray and GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CustomInfoTypeResponseArrayInput` via:
//
//          GooglePrivacyDlpV2CustomInfoTypeResponseArray{ GooglePrivacyDlpV2CustomInfoTypeResponseArgs{...} }
type GooglePrivacyDlpV2CustomInfoTypeResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput() GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput
	ToGooglePrivacyDlpV2CustomInfoTypeResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput
}

type GooglePrivacyDlpV2CustomInfoTypeResponseArray []GooglePrivacyDlpV2CustomInfoTypeResponseInput

func (GooglePrivacyDlpV2CustomInfoTypeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2CustomInfoTypeResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CustomInfoTypeResponseArray) ToGooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput() GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2CustomInfoTypeResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CustomInfoTypeResponseArray) ToGooglePrivacyDlpV2CustomInfoTypeResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput)
}

// Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question.
type GooglePrivacyDlpV2CustomInfoTypeResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CustomInfoTypeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2CustomInfoTypeResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CustomInfoTypeResponseOutput) ToGooglePrivacyDlpV2CustomInfoTypeResponseOutput() GooglePrivacyDlpV2CustomInfoTypeResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2CustomInfoTypeResponseOutput) ToGooglePrivacyDlpV2CustomInfoTypeResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CustomInfoTypeResponseOutput {
	return o
}

// Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType.
func (o GooglePrivacyDlpV2CustomInfoTypeResponseOutput) DetectionRules() GooglePrivacyDlpV2DetectionRuleResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoTypeResponse) []GooglePrivacyDlpV2DetectionRuleResponse {
		return v.DetectionRules
	}).(GooglePrivacyDlpV2DetectionRuleResponseArrayOutput)
}

// A list of phrases to detect as a CustomInfoType.
func (o GooglePrivacyDlpV2CustomInfoTypeResponseOutput) Dictionary() GooglePrivacyDlpV2DictionaryResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoTypeResponse) GooglePrivacyDlpV2DictionaryResponse {
		return v.Dictionary
	}).(GooglePrivacyDlpV2DictionaryResponseOutput)
}

// If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.
func (o GooglePrivacyDlpV2CustomInfoTypeResponseOutput) ExclusionType() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoTypeResponse) string { return v.ExclusionType }).(pulumi.StringOutput)
}

// CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the name matches one of existing infoTypes and that infoType is specified in `InspectContent.info_types` field. Specifying the latter adds findings to the one detected by the system. If built-in info type is not specified in `InspectContent.info_types` list then the name is treated as a custom info type.
func (o GooglePrivacyDlpV2CustomInfoTypeResponseOutput) InfoType() GooglePrivacyDlpV2InfoTypeResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoTypeResponse) GooglePrivacyDlpV2InfoTypeResponse { return v.InfoType }).(GooglePrivacyDlpV2InfoTypeResponseOutput)
}

// Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.
func (o GooglePrivacyDlpV2CustomInfoTypeResponseOutput) Likelihood() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoTypeResponse) string { return v.Likelihood }).(pulumi.StringOutput)
}

// Regular expression based CustomInfoType.
func (o GooglePrivacyDlpV2CustomInfoTypeResponseOutput) Regex() GooglePrivacyDlpV2RegexResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoTypeResponse) GooglePrivacyDlpV2RegexResponse { return v.Regex }).(GooglePrivacyDlpV2RegexResponseOutput)
}

// Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`.
func (o GooglePrivacyDlpV2CustomInfoTypeResponseOutput) StoredType() GooglePrivacyDlpV2StoredTypeResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoTypeResponse) GooglePrivacyDlpV2StoredTypeResponse {
		return v.StoredType
	}).(GooglePrivacyDlpV2StoredTypeResponseOutput)
}

// Message for detecting output from deidentification transformations that support reversing.
func (o GooglePrivacyDlpV2CustomInfoTypeResponseOutput) SurrogateType() GooglePrivacyDlpV2SurrogateTypeResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2CustomInfoTypeResponse) GooglePrivacyDlpV2SurrogateTypeResponse {
		return v.SurrogateType
	}).(GooglePrivacyDlpV2SurrogateTypeResponseOutput)
}

type GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2CustomInfoTypeResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput) ToGooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput() GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput) ToGooglePrivacyDlpV2CustomInfoTypeResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2CustomInfoTypeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2CustomInfoTypeResponse {
		return vs[0].([]GooglePrivacyDlpV2CustomInfoTypeResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2CustomInfoTypeResponseOutput)
}

// Options defining a data set within Google Cloud Datastore.
type GooglePrivacyDlpV2DatastoreOptions struct {
	// The kind to process.
	Kind *GooglePrivacyDlpV2KindExpression `pulumi:"kind"`
	// A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
	PartitionId *GooglePrivacyDlpV2PartitionId `pulumi:"partitionId"`
}

// GooglePrivacyDlpV2DatastoreOptionsInput is an input type that accepts GooglePrivacyDlpV2DatastoreOptionsArgs and GooglePrivacyDlpV2DatastoreOptionsOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DatastoreOptionsInput` via:
//
//          GooglePrivacyDlpV2DatastoreOptionsArgs{...}
type GooglePrivacyDlpV2DatastoreOptionsInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DatastoreOptionsOutput() GooglePrivacyDlpV2DatastoreOptionsOutput
	ToGooglePrivacyDlpV2DatastoreOptionsOutputWithContext(context.Context) GooglePrivacyDlpV2DatastoreOptionsOutput
}

// Options defining a data set within Google Cloud Datastore.
type GooglePrivacyDlpV2DatastoreOptionsArgs struct {
	// The kind to process.
	Kind GooglePrivacyDlpV2KindExpressionPtrInput `pulumi:"kind"`
	// A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
	PartitionId GooglePrivacyDlpV2PartitionIdPtrInput `pulumi:"partitionId"`
}

func (GooglePrivacyDlpV2DatastoreOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DatastoreOptions)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DatastoreOptionsArgs) ToGooglePrivacyDlpV2DatastoreOptionsOutput() GooglePrivacyDlpV2DatastoreOptionsOutput {
	return i.ToGooglePrivacyDlpV2DatastoreOptionsOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DatastoreOptionsArgs) ToGooglePrivacyDlpV2DatastoreOptionsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DatastoreOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DatastoreOptionsOutput)
}

func (i GooglePrivacyDlpV2DatastoreOptionsArgs) ToGooglePrivacyDlpV2DatastoreOptionsPtrOutput() GooglePrivacyDlpV2DatastoreOptionsPtrOutput {
	return i.ToGooglePrivacyDlpV2DatastoreOptionsPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DatastoreOptionsArgs) ToGooglePrivacyDlpV2DatastoreOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DatastoreOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DatastoreOptionsOutput).ToGooglePrivacyDlpV2DatastoreOptionsPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2DatastoreOptionsPtrInput is an input type that accepts GooglePrivacyDlpV2DatastoreOptionsArgs, GooglePrivacyDlpV2DatastoreOptionsPtr and GooglePrivacyDlpV2DatastoreOptionsPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DatastoreOptionsPtrInput` via:
//
//          GooglePrivacyDlpV2DatastoreOptionsArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2DatastoreOptionsPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DatastoreOptionsPtrOutput() GooglePrivacyDlpV2DatastoreOptionsPtrOutput
	ToGooglePrivacyDlpV2DatastoreOptionsPtrOutputWithContext(context.Context) GooglePrivacyDlpV2DatastoreOptionsPtrOutput
}

type googlePrivacyDlpV2DatastoreOptionsPtrType GooglePrivacyDlpV2DatastoreOptionsArgs

func GooglePrivacyDlpV2DatastoreOptionsPtr(v *GooglePrivacyDlpV2DatastoreOptionsArgs) GooglePrivacyDlpV2DatastoreOptionsPtrInput {
	return (*googlePrivacyDlpV2DatastoreOptionsPtrType)(v)
}

func (*googlePrivacyDlpV2DatastoreOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DatastoreOptions)(nil)).Elem()
}

func (i *googlePrivacyDlpV2DatastoreOptionsPtrType) ToGooglePrivacyDlpV2DatastoreOptionsPtrOutput() GooglePrivacyDlpV2DatastoreOptionsPtrOutput {
	return i.ToGooglePrivacyDlpV2DatastoreOptionsPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2DatastoreOptionsPtrType) ToGooglePrivacyDlpV2DatastoreOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DatastoreOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DatastoreOptionsPtrOutput)
}

// Options defining a data set within Google Cloud Datastore.
type GooglePrivacyDlpV2DatastoreOptionsOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DatastoreOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DatastoreOptions)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DatastoreOptionsOutput) ToGooglePrivacyDlpV2DatastoreOptionsOutput() GooglePrivacyDlpV2DatastoreOptionsOutput {
	return o
}

func (o GooglePrivacyDlpV2DatastoreOptionsOutput) ToGooglePrivacyDlpV2DatastoreOptionsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DatastoreOptionsOutput {
	return o
}

func (o GooglePrivacyDlpV2DatastoreOptionsOutput) ToGooglePrivacyDlpV2DatastoreOptionsPtrOutput() GooglePrivacyDlpV2DatastoreOptionsPtrOutput {
	return o.ToGooglePrivacyDlpV2DatastoreOptionsPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2DatastoreOptionsOutput) ToGooglePrivacyDlpV2DatastoreOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DatastoreOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2DatastoreOptions) *GooglePrivacyDlpV2DatastoreOptions {
		return &v
	}).(GooglePrivacyDlpV2DatastoreOptionsPtrOutput)
}

// The kind to process.
func (o GooglePrivacyDlpV2DatastoreOptionsOutput) Kind() GooglePrivacyDlpV2KindExpressionPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DatastoreOptions) *GooglePrivacyDlpV2KindExpression { return v.Kind }).(GooglePrivacyDlpV2KindExpressionPtrOutput)
}

// A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
func (o GooglePrivacyDlpV2DatastoreOptionsOutput) PartitionId() GooglePrivacyDlpV2PartitionIdPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DatastoreOptions) *GooglePrivacyDlpV2PartitionId { return v.PartitionId }).(GooglePrivacyDlpV2PartitionIdPtrOutput)
}

type GooglePrivacyDlpV2DatastoreOptionsPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DatastoreOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DatastoreOptions)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DatastoreOptionsPtrOutput) ToGooglePrivacyDlpV2DatastoreOptionsPtrOutput() GooglePrivacyDlpV2DatastoreOptionsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DatastoreOptionsPtrOutput) ToGooglePrivacyDlpV2DatastoreOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DatastoreOptionsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DatastoreOptionsPtrOutput) Elem() GooglePrivacyDlpV2DatastoreOptionsOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DatastoreOptions) GooglePrivacyDlpV2DatastoreOptions {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2DatastoreOptions
		return ret
	}).(GooglePrivacyDlpV2DatastoreOptionsOutput)
}

// The kind to process.
func (o GooglePrivacyDlpV2DatastoreOptionsPtrOutput) Kind() GooglePrivacyDlpV2KindExpressionPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DatastoreOptions) *GooglePrivacyDlpV2KindExpression {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(GooglePrivacyDlpV2KindExpressionPtrOutput)
}

// A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
func (o GooglePrivacyDlpV2DatastoreOptionsPtrOutput) PartitionId() GooglePrivacyDlpV2PartitionIdPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DatastoreOptions) *GooglePrivacyDlpV2PartitionId {
		if v == nil {
			return nil
		}
		return v.PartitionId
	}).(GooglePrivacyDlpV2PartitionIdPtrOutput)
}

// Options defining a data set within Google Cloud Datastore.
type GooglePrivacyDlpV2DatastoreOptionsResponse struct {
	// The kind to process.
	Kind GooglePrivacyDlpV2KindExpressionResponse `pulumi:"kind"`
	// A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
	PartitionId GooglePrivacyDlpV2PartitionIdResponse `pulumi:"partitionId"`
}

// GooglePrivacyDlpV2DatastoreOptionsResponseInput is an input type that accepts GooglePrivacyDlpV2DatastoreOptionsResponseArgs and GooglePrivacyDlpV2DatastoreOptionsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DatastoreOptionsResponseInput` via:
//
//          GooglePrivacyDlpV2DatastoreOptionsResponseArgs{...}
type GooglePrivacyDlpV2DatastoreOptionsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DatastoreOptionsResponseOutput() GooglePrivacyDlpV2DatastoreOptionsResponseOutput
	ToGooglePrivacyDlpV2DatastoreOptionsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2DatastoreOptionsResponseOutput
}

// Options defining a data set within Google Cloud Datastore.
type GooglePrivacyDlpV2DatastoreOptionsResponseArgs struct {
	// The kind to process.
	Kind GooglePrivacyDlpV2KindExpressionResponseInput `pulumi:"kind"`
	// A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
	PartitionId GooglePrivacyDlpV2PartitionIdResponseInput `pulumi:"partitionId"`
}

func (GooglePrivacyDlpV2DatastoreOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DatastoreOptionsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DatastoreOptionsResponseArgs) ToGooglePrivacyDlpV2DatastoreOptionsResponseOutput() GooglePrivacyDlpV2DatastoreOptionsResponseOutput {
	return i.ToGooglePrivacyDlpV2DatastoreOptionsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DatastoreOptionsResponseArgs) ToGooglePrivacyDlpV2DatastoreOptionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DatastoreOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DatastoreOptionsResponseOutput)
}

func (i GooglePrivacyDlpV2DatastoreOptionsResponseArgs) ToGooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput() GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2DatastoreOptionsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DatastoreOptionsResponseArgs) ToGooglePrivacyDlpV2DatastoreOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DatastoreOptionsResponseOutput).ToGooglePrivacyDlpV2DatastoreOptionsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2DatastoreOptionsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2DatastoreOptionsResponseArgs, GooglePrivacyDlpV2DatastoreOptionsResponsePtr and GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DatastoreOptionsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2DatastoreOptionsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2DatastoreOptionsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput() GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput
	ToGooglePrivacyDlpV2DatastoreOptionsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput
}

type googlePrivacyDlpV2DatastoreOptionsResponsePtrType GooglePrivacyDlpV2DatastoreOptionsResponseArgs

func GooglePrivacyDlpV2DatastoreOptionsResponsePtr(v *GooglePrivacyDlpV2DatastoreOptionsResponseArgs) GooglePrivacyDlpV2DatastoreOptionsResponsePtrInput {
	return (*googlePrivacyDlpV2DatastoreOptionsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2DatastoreOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DatastoreOptionsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2DatastoreOptionsResponsePtrType) ToGooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput() GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2DatastoreOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2DatastoreOptionsResponsePtrType) ToGooglePrivacyDlpV2DatastoreOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput)
}

// Options defining a data set within Google Cloud Datastore.
type GooglePrivacyDlpV2DatastoreOptionsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DatastoreOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DatastoreOptionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DatastoreOptionsResponseOutput) ToGooglePrivacyDlpV2DatastoreOptionsResponseOutput() GooglePrivacyDlpV2DatastoreOptionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2DatastoreOptionsResponseOutput) ToGooglePrivacyDlpV2DatastoreOptionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DatastoreOptionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2DatastoreOptionsResponseOutput) ToGooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput() GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2DatastoreOptionsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2DatastoreOptionsResponseOutput) ToGooglePrivacyDlpV2DatastoreOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2DatastoreOptionsResponse) *GooglePrivacyDlpV2DatastoreOptionsResponse {
		return &v
	}).(GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput)
}

// The kind to process.
func (o GooglePrivacyDlpV2DatastoreOptionsResponseOutput) Kind() GooglePrivacyDlpV2KindExpressionResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DatastoreOptionsResponse) GooglePrivacyDlpV2KindExpressionResponse {
		return v.Kind
	}).(GooglePrivacyDlpV2KindExpressionResponseOutput)
}

// A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
func (o GooglePrivacyDlpV2DatastoreOptionsResponseOutput) PartitionId() GooglePrivacyDlpV2PartitionIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DatastoreOptionsResponse) GooglePrivacyDlpV2PartitionIdResponse {
		return v.PartitionId
	}).(GooglePrivacyDlpV2PartitionIdResponseOutput)
}

type GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DatastoreOptionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput) ToGooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput() GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput) ToGooglePrivacyDlpV2DatastoreOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput) Elem() GooglePrivacyDlpV2DatastoreOptionsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DatastoreOptionsResponse) GooglePrivacyDlpV2DatastoreOptionsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2DatastoreOptionsResponse
		return ret
	}).(GooglePrivacyDlpV2DatastoreOptionsResponseOutput)
}

// The kind to process.
func (o GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput) Kind() GooglePrivacyDlpV2KindExpressionResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DatastoreOptionsResponse) *GooglePrivacyDlpV2KindExpressionResponse {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(GooglePrivacyDlpV2KindExpressionResponsePtrOutput)
}

// A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
func (o GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput) PartitionId() GooglePrivacyDlpV2PartitionIdResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DatastoreOptionsResponse) *GooglePrivacyDlpV2PartitionIdResponse {
		if v == nil {
			return nil
		}
		return &v.PartitionId
	}).(GooglePrivacyDlpV2PartitionIdResponsePtrOutput)
}

// Shifts dates by random number of days, with option to be consistent for the same context. See https://cloud.google.com/dlp/docs/concepts-date-shifting to learn more.
type GooglePrivacyDlpV2DateShiftConfig struct {
	// Points to the field that contains the context, for example, an entity id. If set, must also set cryptoKey. If set, shift will be consistent for the given context.
	Context *GooglePrivacyDlpV2FieldId `pulumi:"context"`
	// Causes the shift to be computed based on this key and the context. This results in the same shift for the same context and crypto_key. If set, must also set context. Can only be applied to table items.
	CryptoKey *GooglePrivacyDlpV2CryptoKey `pulumi:"cryptoKey"`
	// For example, -5 means shift date to at most 5 days back in the past.
	LowerBoundDays int `pulumi:"lowerBoundDays"`
	// Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250 days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.
	UpperBoundDays int `pulumi:"upperBoundDays"`
}

// GooglePrivacyDlpV2DateShiftConfigInput is an input type that accepts GooglePrivacyDlpV2DateShiftConfigArgs and GooglePrivacyDlpV2DateShiftConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DateShiftConfigInput` via:
//
//          GooglePrivacyDlpV2DateShiftConfigArgs{...}
type GooglePrivacyDlpV2DateShiftConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DateShiftConfigOutput() GooglePrivacyDlpV2DateShiftConfigOutput
	ToGooglePrivacyDlpV2DateShiftConfigOutputWithContext(context.Context) GooglePrivacyDlpV2DateShiftConfigOutput
}

// Shifts dates by random number of days, with option to be consistent for the same context. See https://cloud.google.com/dlp/docs/concepts-date-shifting to learn more.
type GooglePrivacyDlpV2DateShiftConfigArgs struct {
	// Points to the field that contains the context, for example, an entity id. If set, must also set cryptoKey. If set, shift will be consistent for the given context.
	Context GooglePrivacyDlpV2FieldIdPtrInput `pulumi:"context"`
	// Causes the shift to be computed based on this key and the context. This results in the same shift for the same context and crypto_key. If set, must also set context. Can only be applied to table items.
	CryptoKey GooglePrivacyDlpV2CryptoKeyPtrInput `pulumi:"cryptoKey"`
	// For example, -5 means shift date to at most 5 days back in the past.
	LowerBoundDays pulumi.IntInput `pulumi:"lowerBoundDays"`
	// Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250 days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.
	UpperBoundDays pulumi.IntInput `pulumi:"upperBoundDays"`
}

func (GooglePrivacyDlpV2DateShiftConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DateShiftConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DateShiftConfigArgs) ToGooglePrivacyDlpV2DateShiftConfigOutput() GooglePrivacyDlpV2DateShiftConfigOutput {
	return i.ToGooglePrivacyDlpV2DateShiftConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DateShiftConfigArgs) ToGooglePrivacyDlpV2DateShiftConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DateShiftConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DateShiftConfigOutput)
}

func (i GooglePrivacyDlpV2DateShiftConfigArgs) ToGooglePrivacyDlpV2DateShiftConfigPtrOutput() GooglePrivacyDlpV2DateShiftConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2DateShiftConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DateShiftConfigArgs) ToGooglePrivacyDlpV2DateShiftConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DateShiftConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DateShiftConfigOutput).ToGooglePrivacyDlpV2DateShiftConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2DateShiftConfigPtrInput is an input type that accepts GooglePrivacyDlpV2DateShiftConfigArgs, GooglePrivacyDlpV2DateShiftConfigPtr and GooglePrivacyDlpV2DateShiftConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DateShiftConfigPtrInput` via:
//
//          GooglePrivacyDlpV2DateShiftConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2DateShiftConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DateShiftConfigPtrOutput() GooglePrivacyDlpV2DateShiftConfigPtrOutput
	ToGooglePrivacyDlpV2DateShiftConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2DateShiftConfigPtrOutput
}

type googlePrivacyDlpV2DateShiftConfigPtrType GooglePrivacyDlpV2DateShiftConfigArgs

func GooglePrivacyDlpV2DateShiftConfigPtr(v *GooglePrivacyDlpV2DateShiftConfigArgs) GooglePrivacyDlpV2DateShiftConfigPtrInput {
	return (*googlePrivacyDlpV2DateShiftConfigPtrType)(v)
}

func (*googlePrivacyDlpV2DateShiftConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DateShiftConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2DateShiftConfigPtrType) ToGooglePrivacyDlpV2DateShiftConfigPtrOutput() GooglePrivacyDlpV2DateShiftConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2DateShiftConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2DateShiftConfigPtrType) ToGooglePrivacyDlpV2DateShiftConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DateShiftConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DateShiftConfigPtrOutput)
}

// Shifts dates by random number of days, with option to be consistent for the same context. See https://cloud.google.com/dlp/docs/concepts-date-shifting to learn more.
type GooglePrivacyDlpV2DateShiftConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DateShiftConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DateShiftConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DateShiftConfigOutput) ToGooglePrivacyDlpV2DateShiftConfigOutput() GooglePrivacyDlpV2DateShiftConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2DateShiftConfigOutput) ToGooglePrivacyDlpV2DateShiftConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DateShiftConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2DateShiftConfigOutput) ToGooglePrivacyDlpV2DateShiftConfigPtrOutput() GooglePrivacyDlpV2DateShiftConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2DateShiftConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2DateShiftConfigOutput) ToGooglePrivacyDlpV2DateShiftConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DateShiftConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2DateShiftConfig) *GooglePrivacyDlpV2DateShiftConfig {
		return &v
	}).(GooglePrivacyDlpV2DateShiftConfigPtrOutput)
}

// Points to the field that contains the context, for example, an entity id. If set, must also set cryptoKey. If set, shift will be consistent for the given context.
func (o GooglePrivacyDlpV2DateShiftConfigOutput) Context() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DateShiftConfig) *GooglePrivacyDlpV2FieldId { return v.Context }).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// Causes the shift to be computed based on this key and the context. This results in the same shift for the same context and crypto_key. If set, must also set context. Can only be applied to table items.
func (o GooglePrivacyDlpV2DateShiftConfigOutput) CryptoKey() GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DateShiftConfig) *GooglePrivacyDlpV2CryptoKey { return v.CryptoKey }).(GooglePrivacyDlpV2CryptoKeyPtrOutput)
}

// For example, -5 means shift date to at most 5 days back in the past.
func (o GooglePrivacyDlpV2DateShiftConfigOutput) LowerBoundDays() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DateShiftConfig) int { return v.LowerBoundDays }).(pulumi.IntOutput)
}

// Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250 days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.
func (o GooglePrivacyDlpV2DateShiftConfigOutput) UpperBoundDays() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DateShiftConfig) int { return v.UpperBoundDays }).(pulumi.IntOutput)
}

type GooglePrivacyDlpV2DateShiftConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DateShiftConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DateShiftConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DateShiftConfigPtrOutput) ToGooglePrivacyDlpV2DateShiftConfigPtrOutput() GooglePrivacyDlpV2DateShiftConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DateShiftConfigPtrOutput) ToGooglePrivacyDlpV2DateShiftConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DateShiftConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DateShiftConfigPtrOutput) Elem() GooglePrivacyDlpV2DateShiftConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DateShiftConfig) GooglePrivacyDlpV2DateShiftConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2DateShiftConfig
		return ret
	}).(GooglePrivacyDlpV2DateShiftConfigOutput)
}

// Points to the field that contains the context, for example, an entity id. If set, must also set cryptoKey. If set, shift will be consistent for the given context.
func (o GooglePrivacyDlpV2DateShiftConfigPtrOutput) Context() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DateShiftConfig) *GooglePrivacyDlpV2FieldId {
		if v == nil {
			return nil
		}
		return v.Context
	}).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// Causes the shift to be computed based on this key and the context. This results in the same shift for the same context and crypto_key. If set, must also set context. Can only be applied to table items.
func (o GooglePrivacyDlpV2DateShiftConfigPtrOutput) CryptoKey() GooglePrivacyDlpV2CryptoKeyPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DateShiftConfig) *GooglePrivacyDlpV2CryptoKey {
		if v == nil {
			return nil
		}
		return v.CryptoKey
	}).(GooglePrivacyDlpV2CryptoKeyPtrOutput)
}

// For example, -5 means shift date to at most 5 days back in the past.
func (o GooglePrivacyDlpV2DateShiftConfigPtrOutput) LowerBoundDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DateShiftConfig) *int {
		if v == nil {
			return nil
		}
		return &v.LowerBoundDays
	}).(pulumi.IntPtrOutput)
}

// Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250 days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.
func (o GooglePrivacyDlpV2DateShiftConfigPtrOutput) UpperBoundDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DateShiftConfig) *int {
		if v == nil {
			return nil
		}
		return &v.UpperBoundDays
	}).(pulumi.IntPtrOutput)
}

// Shifts dates by random number of days, with option to be consistent for the same context. See https://cloud.google.com/dlp/docs/concepts-date-shifting to learn more.
type GooglePrivacyDlpV2DateShiftConfigResponse struct {
	// Points to the field that contains the context, for example, an entity id. If set, must also set cryptoKey. If set, shift will be consistent for the given context.
	Context GooglePrivacyDlpV2FieldIdResponse `pulumi:"context"`
	// Causes the shift to be computed based on this key and the context. This results in the same shift for the same context and crypto_key. If set, must also set context. Can only be applied to table items.
	CryptoKey GooglePrivacyDlpV2CryptoKeyResponse `pulumi:"cryptoKey"`
	// For example, -5 means shift date to at most 5 days back in the past.
	LowerBoundDays int `pulumi:"lowerBoundDays"`
	// Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250 days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.
	UpperBoundDays int `pulumi:"upperBoundDays"`
}

// GooglePrivacyDlpV2DateShiftConfigResponseInput is an input type that accepts GooglePrivacyDlpV2DateShiftConfigResponseArgs and GooglePrivacyDlpV2DateShiftConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DateShiftConfigResponseInput` via:
//
//          GooglePrivacyDlpV2DateShiftConfigResponseArgs{...}
type GooglePrivacyDlpV2DateShiftConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DateShiftConfigResponseOutput() GooglePrivacyDlpV2DateShiftConfigResponseOutput
	ToGooglePrivacyDlpV2DateShiftConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2DateShiftConfigResponseOutput
}

// Shifts dates by random number of days, with option to be consistent for the same context. See https://cloud.google.com/dlp/docs/concepts-date-shifting to learn more.
type GooglePrivacyDlpV2DateShiftConfigResponseArgs struct {
	// Points to the field that contains the context, for example, an entity id. If set, must also set cryptoKey. If set, shift will be consistent for the given context.
	Context GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"context"`
	// Causes the shift to be computed based on this key and the context. This results in the same shift for the same context and crypto_key. If set, must also set context. Can only be applied to table items.
	CryptoKey GooglePrivacyDlpV2CryptoKeyResponseInput `pulumi:"cryptoKey"`
	// For example, -5 means shift date to at most 5 days back in the past.
	LowerBoundDays pulumi.IntInput `pulumi:"lowerBoundDays"`
	// Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250 days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.
	UpperBoundDays pulumi.IntInput `pulumi:"upperBoundDays"`
}

func (GooglePrivacyDlpV2DateShiftConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DateShiftConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DateShiftConfigResponseArgs) ToGooglePrivacyDlpV2DateShiftConfigResponseOutput() GooglePrivacyDlpV2DateShiftConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2DateShiftConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DateShiftConfigResponseArgs) ToGooglePrivacyDlpV2DateShiftConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DateShiftConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DateShiftConfigResponseOutput)
}

// Shifts dates by random number of days, with option to be consistent for the same context. See https://cloud.google.com/dlp/docs/concepts-date-shifting to learn more.
type GooglePrivacyDlpV2DateShiftConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DateShiftConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DateShiftConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DateShiftConfigResponseOutput) ToGooglePrivacyDlpV2DateShiftConfigResponseOutput() GooglePrivacyDlpV2DateShiftConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2DateShiftConfigResponseOutput) ToGooglePrivacyDlpV2DateShiftConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DateShiftConfigResponseOutput {
	return o
}

// Points to the field that contains the context, for example, an entity id. If set, must also set cryptoKey. If set, shift will be consistent for the given context.
func (o GooglePrivacyDlpV2DateShiftConfigResponseOutput) Context() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DateShiftConfigResponse) GooglePrivacyDlpV2FieldIdResponse { return v.Context }).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

// Causes the shift to be computed based on this key and the context. This results in the same shift for the same context and crypto_key. If set, must also set context. Can only be applied to table items.
func (o GooglePrivacyDlpV2DateShiftConfigResponseOutput) CryptoKey() GooglePrivacyDlpV2CryptoKeyResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DateShiftConfigResponse) GooglePrivacyDlpV2CryptoKeyResponse {
		return v.CryptoKey
	}).(GooglePrivacyDlpV2CryptoKeyResponseOutput)
}

// For example, -5 means shift date to at most 5 days back in the past.
func (o GooglePrivacyDlpV2DateShiftConfigResponseOutput) LowerBoundDays() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DateShiftConfigResponse) int { return v.LowerBoundDays }).(pulumi.IntOutput)
}

// Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250 days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.
func (o GooglePrivacyDlpV2DateShiftConfigResponseOutput) UpperBoundDays() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DateShiftConfigResponse) int { return v.UpperBoundDays }).(pulumi.IntOutput)
}

// The configuration that controls how the data will change.
type GooglePrivacyDlpV2DeidentifyConfig struct {
	// Treat the dataset as free-form text and apply the same free text transformation everywhere.
	InfoTypeTransformations *GooglePrivacyDlpV2InfoTypeTransformations `pulumi:"infoTypeTransformations"`
	// Treat the dataset as structured. Transformations can be applied to specific locations within structured datasets, such as transforming a column within a table.
	RecordTransformations *GooglePrivacyDlpV2RecordTransformations `pulumi:"recordTransformations"`
	// Mode for handling transformation errors. If left unspecified, the default mode is `TransformationErrorHandling.ThrowError`.
	TransformationErrorHandling *GooglePrivacyDlpV2TransformationErrorHandling `pulumi:"transformationErrorHandling"`
}

// GooglePrivacyDlpV2DeidentifyConfigInput is an input type that accepts GooglePrivacyDlpV2DeidentifyConfigArgs and GooglePrivacyDlpV2DeidentifyConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DeidentifyConfigInput` via:
//
//          GooglePrivacyDlpV2DeidentifyConfigArgs{...}
type GooglePrivacyDlpV2DeidentifyConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DeidentifyConfigOutput() GooglePrivacyDlpV2DeidentifyConfigOutput
	ToGooglePrivacyDlpV2DeidentifyConfigOutputWithContext(context.Context) GooglePrivacyDlpV2DeidentifyConfigOutput
}

// The configuration that controls how the data will change.
type GooglePrivacyDlpV2DeidentifyConfigArgs struct {
	// Treat the dataset as free-form text and apply the same free text transformation everywhere.
	InfoTypeTransformations GooglePrivacyDlpV2InfoTypeTransformationsPtrInput `pulumi:"infoTypeTransformations"`
	// Treat the dataset as structured. Transformations can be applied to specific locations within structured datasets, such as transforming a column within a table.
	RecordTransformations GooglePrivacyDlpV2RecordTransformationsPtrInput `pulumi:"recordTransformations"`
	// Mode for handling transformation errors. If left unspecified, the default mode is `TransformationErrorHandling.ThrowError`.
	TransformationErrorHandling GooglePrivacyDlpV2TransformationErrorHandlingPtrInput `pulumi:"transformationErrorHandling"`
}

func (GooglePrivacyDlpV2DeidentifyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DeidentifyConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DeidentifyConfigArgs) ToGooglePrivacyDlpV2DeidentifyConfigOutput() GooglePrivacyDlpV2DeidentifyConfigOutput {
	return i.ToGooglePrivacyDlpV2DeidentifyConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DeidentifyConfigArgs) ToGooglePrivacyDlpV2DeidentifyConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeidentifyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeidentifyConfigOutput)
}

func (i GooglePrivacyDlpV2DeidentifyConfigArgs) ToGooglePrivacyDlpV2DeidentifyConfigPtrOutput() GooglePrivacyDlpV2DeidentifyConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2DeidentifyConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DeidentifyConfigArgs) ToGooglePrivacyDlpV2DeidentifyConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeidentifyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeidentifyConfigOutput).ToGooglePrivacyDlpV2DeidentifyConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2DeidentifyConfigPtrInput is an input type that accepts GooglePrivacyDlpV2DeidentifyConfigArgs, GooglePrivacyDlpV2DeidentifyConfigPtr and GooglePrivacyDlpV2DeidentifyConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DeidentifyConfigPtrInput` via:
//
//          GooglePrivacyDlpV2DeidentifyConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2DeidentifyConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DeidentifyConfigPtrOutput() GooglePrivacyDlpV2DeidentifyConfigPtrOutput
	ToGooglePrivacyDlpV2DeidentifyConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2DeidentifyConfigPtrOutput
}

type googlePrivacyDlpV2DeidentifyConfigPtrType GooglePrivacyDlpV2DeidentifyConfigArgs

func GooglePrivacyDlpV2DeidentifyConfigPtr(v *GooglePrivacyDlpV2DeidentifyConfigArgs) GooglePrivacyDlpV2DeidentifyConfigPtrInput {
	return (*googlePrivacyDlpV2DeidentifyConfigPtrType)(v)
}

func (*googlePrivacyDlpV2DeidentifyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DeidentifyConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2DeidentifyConfigPtrType) ToGooglePrivacyDlpV2DeidentifyConfigPtrOutput() GooglePrivacyDlpV2DeidentifyConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2DeidentifyConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2DeidentifyConfigPtrType) ToGooglePrivacyDlpV2DeidentifyConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeidentifyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeidentifyConfigPtrOutput)
}

// The configuration that controls how the data will change.
type GooglePrivacyDlpV2DeidentifyConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DeidentifyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DeidentifyConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DeidentifyConfigOutput) ToGooglePrivacyDlpV2DeidentifyConfigOutput() GooglePrivacyDlpV2DeidentifyConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2DeidentifyConfigOutput) ToGooglePrivacyDlpV2DeidentifyConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeidentifyConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2DeidentifyConfigOutput) ToGooglePrivacyDlpV2DeidentifyConfigPtrOutput() GooglePrivacyDlpV2DeidentifyConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2DeidentifyConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2DeidentifyConfigOutput) ToGooglePrivacyDlpV2DeidentifyConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeidentifyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2DeidentifyConfig) *GooglePrivacyDlpV2DeidentifyConfig {
		return &v
	}).(GooglePrivacyDlpV2DeidentifyConfigPtrOutput)
}

// Treat the dataset as free-form text and apply the same free text transformation everywhere.
func (o GooglePrivacyDlpV2DeidentifyConfigOutput) InfoTypeTransformations() GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeidentifyConfig) *GooglePrivacyDlpV2InfoTypeTransformations {
		return v.InfoTypeTransformations
	}).(GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput)
}

// Treat the dataset as structured. Transformations can be applied to specific locations within structured datasets, such as transforming a column within a table.
func (o GooglePrivacyDlpV2DeidentifyConfigOutput) RecordTransformations() GooglePrivacyDlpV2RecordTransformationsPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeidentifyConfig) *GooglePrivacyDlpV2RecordTransformations {
		return v.RecordTransformations
	}).(GooglePrivacyDlpV2RecordTransformationsPtrOutput)
}

// Mode for handling transformation errors. If left unspecified, the default mode is `TransformationErrorHandling.ThrowError`.
func (o GooglePrivacyDlpV2DeidentifyConfigOutput) TransformationErrorHandling() GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeidentifyConfig) *GooglePrivacyDlpV2TransformationErrorHandling {
		return v.TransformationErrorHandling
	}).(GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput)
}

type GooglePrivacyDlpV2DeidentifyConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DeidentifyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DeidentifyConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DeidentifyConfigPtrOutput) ToGooglePrivacyDlpV2DeidentifyConfigPtrOutput() GooglePrivacyDlpV2DeidentifyConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DeidentifyConfigPtrOutput) ToGooglePrivacyDlpV2DeidentifyConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeidentifyConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DeidentifyConfigPtrOutput) Elem() GooglePrivacyDlpV2DeidentifyConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeidentifyConfig) GooglePrivacyDlpV2DeidentifyConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2DeidentifyConfig
		return ret
	}).(GooglePrivacyDlpV2DeidentifyConfigOutput)
}

// Treat the dataset as free-form text and apply the same free text transformation everywhere.
func (o GooglePrivacyDlpV2DeidentifyConfigPtrOutput) InfoTypeTransformations() GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeidentifyConfig) *GooglePrivacyDlpV2InfoTypeTransformations {
		if v == nil {
			return nil
		}
		return v.InfoTypeTransformations
	}).(GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput)
}

// Treat the dataset as structured. Transformations can be applied to specific locations within structured datasets, such as transforming a column within a table.
func (o GooglePrivacyDlpV2DeidentifyConfigPtrOutput) RecordTransformations() GooglePrivacyDlpV2RecordTransformationsPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeidentifyConfig) *GooglePrivacyDlpV2RecordTransformations {
		if v == nil {
			return nil
		}
		return v.RecordTransformations
	}).(GooglePrivacyDlpV2RecordTransformationsPtrOutput)
}

// Mode for handling transformation errors. If left unspecified, the default mode is `TransformationErrorHandling.ThrowError`.
func (o GooglePrivacyDlpV2DeidentifyConfigPtrOutput) TransformationErrorHandling() GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeidentifyConfig) *GooglePrivacyDlpV2TransformationErrorHandling {
		if v == nil {
			return nil
		}
		return v.TransformationErrorHandling
	}).(GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput)
}

// The configuration that controls how the data will change.
type GooglePrivacyDlpV2DeidentifyConfigResponse struct {
	// Treat the dataset as free-form text and apply the same free text transformation everywhere.
	InfoTypeTransformations GooglePrivacyDlpV2InfoTypeTransformationsResponse `pulumi:"infoTypeTransformations"`
	// Treat the dataset as structured. Transformations can be applied to specific locations within structured datasets, such as transforming a column within a table.
	RecordTransformations GooglePrivacyDlpV2RecordTransformationsResponse `pulumi:"recordTransformations"`
	// Mode for handling transformation errors. If left unspecified, the default mode is `TransformationErrorHandling.ThrowError`.
	TransformationErrorHandling GooglePrivacyDlpV2TransformationErrorHandlingResponse `pulumi:"transformationErrorHandling"`
}

// GooglePrivacyDlpV2DeidentifyConfigResponseInput is an input type that accepts GooglePrivacyDlpV2DeidentifyConfigResponseArgs and GooglePrivacyDlpV2DeidentifyConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DeidentifyConfigResponseInput` via:
//
//          GooglePrivacyDlpV2DeidentifyConfigResponseArgs{...}
type GooglePrivacyDlpV2DeidentifyConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DeidentifyConfigResponseOutput() GooglePrivacyDlpV2DeidentifyConfigResponseOutput
	ToGooglePrivacyDlpV2DeidentifyConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2DeidentifyConfigResponseOutput
}

// The configuration that controls how the data will change.
type GooglePrivacyDlpV2DeidentifyConfigResponseArgs struct {
	// Treat the dataset as free-form text and apply the same free text transformation everywhere.
	InfoTypeTransformations GooglePrivacyDlpV2InfoTypeTransformationsResponseInput `pulumi:"infoTypeTransformations"`
	// Treat the dataset as structured. Transformations can be applied to specific locations within structured datasets, such as transforming a column within a table.
	RecordTransformations GooglePrivacyDlpV2RecordTransformationsResponseInput `pulumi:"recordTransformations"`
	// Mode for handling transformation errors. If left unspecified, the default mode is `TransformationErrorHandling.ThrowError`.
	TransformationErrorHandling GooglePrivacyDlpV2TransformationErrorHandlingResponseInput `pulumi:"transformationErrorHandling"`
}

func (GooglePrivacyDlpV2DeidentifyConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DeidentifyConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DeidentifyConfigResponseArgs) ToGooglePrivacyDlpV2DeidentifyConfigResponseOutput() GooglePrivacyDlpV2DeidentifyConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2DeidentifyConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DeidentifyConfigResponseArgs) ToGooglePrivacyDlpV2DeidentifyConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeidentifyConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeidentifyConfigResponseOutput)
}

func (i GooglePrivacyDlpV2DeidentifyConfigResponseArgs) ToGooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput() GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2DeidentifyConfigResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DeidentifyConfigResponseArgs) ToGooglePrivacyDlpV2DeidentifyConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeidentifyConfigResponseOutput).ToGooglePrivacyDlpV2DeidentifyConfigResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2DeidentifyConfigResponsePtrInput is an input type that accepts GooglePrivacyDlpV2DeidentifyConfigResponseArgs, GooglePrivacyDlpV2DeidentifyConfigResponsePtr and GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DeidentifyConfigResponsePtrInput` via:
//
//          GooglePrivacyDlpV2DeidentifyConfigResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2DeidentifyConfigResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput() GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput
	ToGooglePrivacyDlpV2DeidentifyConfigResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput
}

type googlePrivacyDlpV2DeidentifyConfigResponsePtrType GooglePrivacyDlpV2DeidentifyConfigResponseArgs

func GooglePrivacyDlpV2DeidentifyConfigResponsePtr(v *GooglePrivacyDlpV2DeidentifyConfigResponseArgs) GooglePrivacyDlpV2DeidentifyConfigResponsePtrInput {
	return (*googlePrivacyDlpV2DeidentifyConfigResponsePtrType)(v)
}

func (*googlePrivacyDlpV2DeidentifyConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DeidentifyConfigResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2DeidentifyConfigResponsePtrType) ToGooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput() GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2DeidentifyConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2DeidentifyConfigResponsePtrType) ToGooglePrivacyDlpV2DeidentifyConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput)
}

// The configuration that controls how the data will change.
type GooglePrivacyDlpV2DeidentifyConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DeidentifyConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DeidentifyConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DeidentifyConfigResponseOutput) ToGooglePrivacyDlpV2DeidentifyConfigResponseOutput() GooglePrivacyDlpV2DeidentifyConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2DeidentifyConfigResponseOutput) ToGooglePrivacyDlpV2DeidentifyConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeidentifyConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2DeidentifyConfigResponseOutput) ToGooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput() GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2DeidentifyConfigResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2DeidentifyConfigResponseOutput) ToGooglePrivacyDlpV2DeidentifyConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2DeidentifyConfigResponse) *GooglePrivacyDlpV2DeidentifyConfigResponse {
		return &v
	}).(GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput)
}

// Treat the dataset as free-form text and apply the same free text transformation everywhere.
func (o GooglePrivacyDlpV2DeidentifyConfigResponseOutput) InfoTypeTransformations() GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeidentifyConfigResponse) GooglePrivacyDlpV2InfoTypeTransformationsResponse {
		return v.InfoTypeTransformations
	}).(GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput)
}

// Treat the dataset as structured. Transformations can be applied to specific locations within structured datasets, such as transforming a column within a table.
func (o GooglePrivacyDlpV2DeidentifyConfigResponseOutput) RecordTransformations() GooglePrivacyDlpV2RecordTransformationsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeidentifyConfigResponse) GooglePrivacyDlpV2RecordTransformationsResponse {
		return v.RecordTransformations
	}).(GooglePrivacyDlpV2RecordTransformationsResponseOutput)
}

// Mode for handling transformation errors. If left unspecified, the default mode is `TransformationErrorHandling.ThrowError`.
func (o GooglePrivacyDlpV2DeidentifyConfigResponseOutput) TransformationErrorHandling() GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeidentifyConfigResponse) GooglePrivacyDlpV2TransformationErrorHandlingResponse {
		return v.TransformationErrorHandling
	}).(GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput)
}

type GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DeidentifyConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput) ToGooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput() GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput) ToGooglePrivacyDlpV2DeidentifyConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput) Elem() GooglePrivacyDlpV2DeidentifyConfigResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeidentifyConfigResponse) GooglePrivacyDlpV2DeidentifyConfigResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2DeidentifyConfigResponse
		return ret
	}).(GooglePrivacyDlpV2DeidentifyConfigResponseOutput)
}

// Treat the dataset as free-form text and apply the same free text transformation everywhere.
func (o GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput) InfoTypeTransformations() GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeidentifyConfigResponse) *GooglePrivacyDlpV2InfoTypeTransformationsResponse {
		if v == nil {
			return nil
		}
		return &v.InfoTypeTransformations
	}).(GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput)
}

// Treat the dataset as structured. Transformations can be applied to specific locations within structured datasets, such as transforming a column within a table.
func (o GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput) RecordTransformations() GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeidentifyConfigResponse) *GooglePrivacyDlpV2RecordTransformationsResponse {
		if v == nil {
			return nil
		}
		return &v.RecordTransformations
	}).(GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput)
}

// Mode for handling transformation errors. If left unspecified, the default mode is `TransformationErrorHandling.ThrowError`.
func (o GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput) TransformationErrorHandling() GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeidentifyConfigResponse) *GooglePrivacyDlpV2TransformationErrorHandlingResponse {
		if v == nil {
			return nil
		}
		return &v.TransformationErrorHandling
	}).(GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput)
}

// δ-presence metric, used to estimate how likely it is for an attacker to figure out that one given individual appears in a de-identified dataset. Similarly to the k-map metric, we cannot compute δ-presence exactly without knowing the attack dataset, so we use a statistical model instead.
type GooglePrivacyDlpV2DeltaPresenceEstimationConfig struct {
	// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table.
	AuxiliaryTables []GooglePrivacyDlpV2StatisticalTable `pulumi:"auxiliaryTables"`
	// Fields considered to be quasi-identifiers. No two fields can have the same tag.
	QuasiIds []GooglePrivacyDlpV2QuasiId `pulumi:"quasiIds"`
	// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
	RegionCode *string `pulumi:"regionCode"`
}

// GooglePrivacyDlpV2DeltaPresenceEstimationConfigInput is an input type that accepts GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs and GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DeltaPresenceEstimationConfigInput` via:
//
//          GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs{...}
type GooglePrivacyDlpV2DeltaPresenceEstimationConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput
	ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigOutputWithContext(context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput
}

// δ-presence metric, used to estimate how likely it is for an attacker to figure out that one given individual appears in a de-identified dataset. Similarly to the k-map metric, we cannot compute δ-presence exactly without knowing the attack dataset, so we use a statistical model instead.
type GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs struct {
	// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table.
	AuxiliaryTables GooglePrivacyDlpV2StatisticalTableArrayInput `pulumi:"auxiliaryTables"`
	// Fields considered to be quasi-identifiers. No two fields can have the same tag.
	QuasiIds GooglePrivacyDlpV2QuasiIdArrayInput `pulumi:"quasiIds"`
	// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
	RegionCode pulumi.StringPtrInput `pulumi:"regionCode"`
}

func (GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DeltaPresenceEstimationConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput {
	return i.ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput)
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput).ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrInput is an input type that accepts GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs, GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtr and GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrInput` via:
//
//          GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput
	ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput
}

type googlePrivacyDlpV2DeltaPresenceEstimationConfigPtrType GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs

func GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtr(v *GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs) GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrInput {
	return (*googlePrivacyDlpV2DeltaPresenceEstimationConfigPtrType)(v)
}

func (*googlePrivacyDlpV2DeltaPresenceEstimationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DeltaPresenceEstimationConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2DeltaPresenceEstimationConfigPtrType) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2DeltaPresenceEstimationConfigPtrType) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput)
}

// δ-presence metric, used to estimate how likely it is for an attacker to figure out that one given individual appears in a de-identified dataset. Similarly to the k-map metric, we cannot compute δ-presence exactly without knowing the attack dataset, so we use a statistical model instead.
type GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DeltaPresenceEstimationConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2DeltaPresenceEstimationConfig) *GooglePrivacyDlpV2DeltaPresenceEstimationConfig {
		return &v
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput)
}

// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput) AuxiliaryTables() GooglePrivacyDlpV2StatisticalTableArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeltaPresenceEstimationConfig) []GooglePrivacyDlpV2StatisticalTable {
		return v.AuxiliaryTables
	}).(GooglePrivacyDlpV2StatisticalTableArrayOutput)
}

// Fields considered to be quasi-identifiers. No two fields can have the same tag.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput) QuasiIds() GooglePrivacyDlpV2QuasiIdArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeltaPresenceEstimationConfig) []GooglePrivacyDlpV2QuasiId { return v.QuasiIds }).(GooglePrivacyDlpV2QuasiIdArrayOutput)
}

// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput) RegionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeltaPresenceEstimationConfig) *string { return v.RegionCode }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DeltaPresenceEstimationConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput) Elem() GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeltaPresenceEstimationConfig) GooglePrivacyDlpV2DeltaPresenceEstimationConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2DeltaPresenceEstimationConfig
		return ret
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput)
}

// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput) AuxiliaryTables() GooglePrivacyDlpV2StatisticalTableArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeltaPresenceEstimationConfig) []GooglePrivacyDlpV2StatisticalTable {
		if v == nil {
			return nil
		}
		return v.AuxiliaryTables
	}).(GooglePrivacyDlpV2StatisticalTableArrayOutput)
}

// Fields considered to be quasi-identifiers. No two fields can have the same tag.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput) QuasiIds() GooglePrivacyDlpV2QuasiIdArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeltaPresenceEstimationConfig) []GooglePrivacyDlpV2QuasiId {
		if v == nil {
			return nil
		}
		return v.QuasiIds
	}).(GooglePrivacyDlpV2QuasiIdArrayOutput)
}

// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput) RegionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeltaPresenceEstimationConfig) *string {
		if v == nil {
			return nil
		}
		return v.RegionCode
	}).(pulumi.StringPtrOutput)
}

// δ-presence metric, used to estimate how likely it is for an attacker to figure out that one given individual appears in a de-identified dataset. Similarly to the k-map metric, we cannot compute δ-presence exactly without knowing the attack dataset, so we use a statistical model instead.
type GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse struct {
	// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table.
	AuxiliaryTables []GooglePrivacyDlpV2StatisticalTableResponse `pulumi:"auxiliaryTables"`
	// Fields considered to be quasi-identifiers. No two fields can have the same tag.
	QuasiIds []GooglePrivacyDlpV2QuasiIdResponse `pulumi:"quasiIds"`
	// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
	RegionCode string `pulumi:"regionCode"`
}

// GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseInput is an input type that accepts GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseArgs and GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseInput` via:
//
//          GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseArgs{...}
type GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput
	ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput
}

// δ-presence metric, used to estimate how likely it is for an attacker to figure out that one given individual appears in a de-identified dataset. Similarly to the k-map metric, we cannot compute δ-presence exactly without knowing the attack dataset, so we use a statistical model instead.
type GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseArgs struct {
	// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table.
	AuxiliaryTables GooglePrivacyDlpV2StatisticalTableResponseArrayInput `pulumi:"auxiliaryTables"`
	// Fields considered to be quasi-identifiers. No two fields can have the same tag.
	QuasiIds GooglePrivacyDlpV2QuasiIdResponseArrayInput `pulumi:"quasiIds"`
	// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
	RegionCode pulumi.StringInput `pulumi:"regionCode"`
}

func (GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput)
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput).ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrInput is an input type that accepts GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseArgs, GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtr and GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrInput` via:
//
//          GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput
	ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput
}

type googlePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrType GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseArgs

func GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtr(v *GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseArgs) GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrInput {
	return (*googlePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrType)(v)
}

func (*googlePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrType) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrType) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput)
}

// δ-presence metric, used to estimate how likely it is for an attacker to figure out that one given individual appears in a de-identified dataset. Similarly to the k-map metric, we cannot compute δ-presence exactly without knowing the attack dataset, so we use a statistical model instead.
type GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse) *GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse {
		return &v
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput)
}

// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput) AuxiliaryTables() GooglePrivacyDlpV2StatisticalTableResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse) []GooglePrivacyDlpV2StatisticalTableResponse {
		return v.AuxiliaryTables
	}).(GooglePrivacyDlpV2StatisticalTableResponseArrayOutput)
}

// Fields considered to be quasi-identifiers. No two fields can have the same tag.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput) QuasiIds() GooglePrivacyDlpV2QuasiIdResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse) []GooglePrivacyDlpV2QuasiIdResponse {
		return v.QuasiIds
	}).(GooglePrivacyDlpV2QuasiIdResponseArrayOutput)
}

// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput) RegionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse) string { return v.RegionCode }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput) Elem() GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse) GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse
		return ret
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput)
}

// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput) AuxiliaryTables() GooglePrivacyDlpV2StatisticalTableResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse) []GooglePrivacyDlpV2StatisticalTableResponse {
		if v == nil {
			return nil
		}
		return v.AuxiliaryTables
	}).(GooglePrivacyDlpV2StatisticalTableResponseArrayOutput)
}

// Fields considered to be quasi-identifiers. No two fields can have the same tag.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput) QuasiIds() GooglePrivacyDlpV2QuasiIdResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse) []GooglePrivacyDlpV2QuasiIdResponse {
		if v == nil {
			return nil
		}
		return v.QuasiIds
	}).(GooglePrivacyDlpV2QuasiIdResponseArrayOutput)
}

// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput) RegionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RegionCode
	}).(pulumi.StringPtrOutput)
}

// A DeltaPresenceEstimationHistogramBucket message with the following values: min_probability: 0.1 max_probability: 0.2 frequency: 42 means that there are 42 records for which δ is in [0.1, 0.2). An important particular case is when min_probability = max_probability = 1: then, every individual who shares this quasi-identifier combination is in the dataset.
type GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse struct {
	// Number of records within these probability bounds.
	BucketSize string `pulumi:"bucketSize"`
	// Total number of distinct quasi-identifier tuple values in this bucket.
	BucketValueCount string `pulumi:"bucketValueCount"`
	// Sample of quasi-identifier tuple values in this bucket. The total number of classes returned per bucket is capped at 20.
	BucketValues []GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponse `pulumi:"bucketValues"`
	// Always greater than or equal to min_probability.
	MaxProbability float64 `pulumi:"maxProbability"`
	// Between 0 and 1.
	MinProbability float64 `pulumi:"minProbability"`
}

// GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseInput is an input type that accepts GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArgs and GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseInput` via:
//
//          GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArgs{...}
type GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput() GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput
	ToGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutputWithContext(context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput
}

// A DeltaPresenceEstimationHistogramBucket message with the following values: min_probability: 0.1 max_probability: 0.2 frequency: 42 means that there are 42 records for which δ is in [0.1, 0.2). An important particular case is when min_probability = max_probability = 1: then, every individual who shares this quasi-identifier combination is in the dataset.
type GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArgs struct {
	// Number of records within these probability bounds.
	BucketSize pulumi.StringInput `pulumi:"bucketSize"`
	// Total number of distinct quasi-identifier tuple values in this bucket.
	BucketValueCount pulumi.StringInput `pulumi:"bucketValueCount"`
	// Sample of quasi-identifier tuple values in this bucket. The total number of classes returned per bucket is capped at 20.
	BucketValues GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayInput `pulumi:"bucketValues"`
	// Always greater than or equal to min_probability.
	MaxProbability pulumi.Float64Input `pulumi:"maxProbability"`
	// Between 0 and 1.
	MinProbability pulumi.Float64Input `pulumi:"minProbability"`
}

func (GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput() GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput {
	return i.ToGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput)
}

// GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayInput is an input type that accepts GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArray and GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayInput` via:
//
//          GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArray{ GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArgs{...} }
type GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput
	ToGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput
}

type GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArray []GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseInput

func (GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArray) ToGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArray) ToGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput)
}

// A DeltaPresenceEstimationHistogramBucket message with the following values: min_probability: 0.1 max_probability: 0.2 frequency: 42 means that there are 42 records for which δ is in [0.1, 0.2). An important particular case is when min_probability = max_probability = 1: then, every individual who shares this quasi-identifier combination is in the dataset.
type GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput() GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput {
	return o
}

// Number of records within these probability bounds.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput) BucketSize() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse) string { return v.BucketSize }).(pulumi.StringOutput)
}

// Total number of distinct quasi-identifier tuple values in this bucket.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput) BucketValueCount() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse) string {
		return v.BucketValueCount
	}).(pulumi.StringOutput)
}

// Sample of quasi-identifier tuple values in this bucket. The total number of classes returned per bucket is capped at 20.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput) BucketValues() GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse) []GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponse {
		return v.BucketValues
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput)
}

// Always greater than or equal to min_probability.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput) MaxProbability() pulumi.Float64Output {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse) float64 {
		return v.MaxProbability
	}).(pulumi.Float64Output)
}

// Between 0 and 1.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput) MinProbability() pulumi.Float64Output {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse) float64 {
		return v.MinProbability
	}).(pulumi.Float64Output)
}

type GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse {
		return vs[0].([]GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput)
}

// A tuple of values for the quasi-identifier columns.
type GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponse struct {
	// The estimated probability that a given individual sharing these quasi-identifier values is in the dataset. This value, typically called δ, is the ratio between the number of records in the dataset with these quasi-identifier values, and the total number of individuals (inside *and* outside the dataset) with these quasi-identifier values. For example, if there are 15 individuals in the dataset who share the same quasi-identifier values, and an estimated 100 people in the entire population with these values, then δ is 0.15.
	EstimatedProbability float64 `pulumi:"estimatedProbability"`
	// The quasi-identifier values.
	QuasiIdsValues []GooglePrivacyDlpV2ValueResponse `pulumi:"quasiIdsValues"`
}

// GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseInput is an input type that accepts GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArgs and GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseInput` via:
//
//          GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArgs{...}
type GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput() GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput
	ToGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutputWithContext(context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput
}

// A tuple of values for the quasi-identifier columns.
type GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArgs struct {
	// The estimated probability that a given individual sharing these quasi-identifier values is in the dataset. This value, typically called δ, is the ratio between the number of records in the dataset with these quasi-identifier values, and the total number of individuals (inside *and* outside the dataset) with these quasi-identifier values. For example, if there are 15 individuals in the dataset who share the same quasi-identifier values, and an estimated 100 people in the entire population with these values, then δ is 0.15.
	EstimatedProbability pulumi.Float64Input `pulumi:"estimatedProbability"`
	// The quasi-identifier values.
	QuasiIdsValues GooglePrivacyDlpV2ValueResponseArrayInput `pulumi:"quasiIdsValues"`
}

func (GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput() GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput {
	return i.ToGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput)
}

// GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayInput is an input type that accepts GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArray and GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayInput` via:
//
//          GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArray{ GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArgs{...} }
type GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput() GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput
	ToGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput
}

type GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArray []GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseInput

func (GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArray) ToGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput() GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArray) ToGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput)
}

// A tuple of values for the quasi-identifier columns.
type GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput() GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput {
	return o
}

// The estimated probability that a given individual sharing these quasi-identifier values is in the dataset. This value, typically called δ, is the ratio between the number of records in the dataset with these quasi-identifier values, and the total number of individuals (inside *and* outside the dataset) with these quasi-identifier values. For example, if there are 15 individuals in the dataset who share the same quasi-identifier values, and an estimated 100 people in the entire population with these values, then δ is 0.15.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput) EstimatedProbability() pulumi.Float64Output {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponse) float64 {
		return v.EstimatedProbability
	}).(pulumi.Float64Output)
}

// The quasi-identifier values.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput) QuasiIdsValues() GooglePrivacyDlpV2ValueResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponse) []GooglePrivacyDlpV2ValueResponse {
		return v.QuasiIdsValues
	}).(GooglePrivacyDlpV2ValueResponseArrayOutput)
}

type GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput() GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponse {
		return vs[0].([]GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput)
}

// Result of the δ-presence computation. Note that these results are an estimation, not exact values.
type GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse struct {
	// The intervals [min_probability, max_probability) do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following records: {min_probability: 0, max_probability: 0.1, frequency: 17} {min_probability: 0.2, max_probability: 0.3, frequency: 42} {min_probability: 0.3, max_probability: 0.4, frequency: 99} mean that there are no record with an estimated probability in [0.1, 0.2) nor larger or equal to 0.4.
	DeltaPresenceEstimationHistogram []GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse `pulumi:"deltaPresenceEstimationHistogram"`
}

// GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseInput is an input type that accepts GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseArgs and GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseInput` via:
//
//          GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseArgs{...}
type GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput() GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput
	ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutputWithContext(context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput
}

// Result of the δ-presence computation. Note that these results are an estimation, not exact values.
type GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseArgs struct {
	// The intervals [min_probability, max_probability) do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following records: {min_probability: 0, max_probability: 0.1, frequency: 17} {min_probability: 0.2, max_probability: 0.3, frequency: 42} {min_probability: 0.3, max_probability: 0.4, frequency: 99} mean that there are no record with an estimated probability in [0.1, 0.2) nor larger or equal to 0.4.
	DeltaPresenceEstimationHistogram GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayInput `pulumi:"deltaPresenceEstimationHistogram"`
}

func (GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput() GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput {
	return i.ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput)
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseArgs) ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput).ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrInput is an input type that accepts GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseArgs, GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtr and GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrInput` via:
//
//          GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput
	ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput
}

type googlePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrType GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseArgs

func GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtr(v *GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseArgs) GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrInput {
	return (*googlePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrType)(v)
}

func (*googlePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrType) ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrType) ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput)
}

// Result of the δ-presence computation. Note that these results are an estimation, not exact values.
type GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput() GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse) *GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse {
		return &v
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput)
}

// The intervals [min_probability, max_probability) do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following records: {min_probability: 0, max_probability: 0.1, frequency: 17} {min_probability: 0.2, max_probability: 0.3, frequency: 42} {min_probability: 0.3, max_probability: 0.4, frequency: 99} mean that there are no record with an estimated probability in [0.1, 0.2) nor larger or equal to 0.4.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput) DeltaPresenceEstimationHistogram() GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse) []GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse {
		return v.DeltaPresenceEstimationHistogram
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput)
}

type GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput() GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput) ToGooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput) Elem() GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse) GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse
		return ret
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput)
}

// The intervals [min_probability, max_probability) do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following records: {min_probability: 0, max_probability: 0.1, frequency: 17} {min_probability: 0.2, max_probability: 0.3, frequency: 42} {min_probability: 0.3, max_probability: 0.4, frequency: 99} mean that there are no record with an estimated probability in [0.1, 0.2) nor larger or equal to 0.4.
func (o GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput) DeltaPresenceEstimationHistogram() GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DeltaPresenceEstimationResultResponse) []GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse {
		if v == nil {
			return nil
		}
		return v.DeltaPresenceEstimationHistogram
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput)
}

// Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType.
type GooglePrivacyDlpV2DetectionRule struct {
	// Hotword-based detection rule.
	HotwordRule *GooglePrivacyDlpV2HotwordRule `pulumi:"hotwordRule"`
}

// GooglePrivacyDlpV2DetectionRuleInput is an input type that accepts GooglePrivacyDlpV2DetectionRuleArgs and GooglePrivacyDlpV2DetectionRuleOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DetectionRuleInput` via:
//
//          GooglePrivacyDlpV2DetectionRuleArgs{...}
type GooglePrivacyDlpV2DetectionRuleInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DetectionRuleOutput() GooglePrivacyDlpV2DetectionRuleOutput
	ToGooglePrivacyDlpV2DetectionRuleOutputWithContext(context.Context) GooglePrivacyDlpV2DetectionRuleOutput
}

// Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType.
type GooglePrivacyDlpV2DetectionRuleArgs struct {
	// Hotword-based detection rule.
	HotwordRule GooglePrivacyDlpV2HotwordRulePtrInput `pulumi:"hotwordRule"`
}

func (GooglePrivacyDlpV2DetectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DetectionRule)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DetectionRuleArgs) ToGooglePrivacyDlpV2DetectionRuleOutput() GooglePrivacyDlpV2DetectionRuleOutput {
	return i.ToGooglePrivacyDlpV2DetectionRuleOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DetectionRuleArgs) ToGooglePrivacyDlpV2DetectionRuleOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DetectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DetectionRuleOutput)
}

// GooglePrivacyDlpV2DetectionRuleArrayInput is an input type that accepts GooglePrivacyDlpV2DetectionRuleArray and GooglePrivacyDlpV2DetectionRuleArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DetectionRuleArrayInput` via:
//
//          GooglePrivacyDlpV2DetectionRuleArray{ GooglePrivacyDlpV2DetectionRuleArgs{...} }
type GooglePrivacyDlpV2DetectionRuleArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DetectionRuleArrayOutput() GooglePrivacyDlpV2DetectionRuleArrayOutput
	ToGooglePrivacyDlpV2DetectionRuleArrayOutputWithContext(context.Context) GooglePrivacyDlpV2DetectionRuleArrayOutput
}

type GooglePrivacyDlpV2DetectionRuleArray []GooglePrivacyDlpV2DetectionRuleInput

func (GooglePrivacyDlpV2DetectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2DetectionRule)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DetectionRuleArray) ToGooglePrivacyDlpV2DetectionRuleArrayOutput() GooglePrivacyDlpV2DetectionRuleArrayOutput {
	return i.ToGooglePrivacyDlpV2DetectionRuleArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DetectionRuleArray) ToGooglePrivacyDlpV2DetectionRuleArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DetectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DetectionRuleArrayOutput)
}

// Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType.
type GooglePrivacyDlpV2DetectionRuleOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DetectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DetectionRule)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DetectionRuleOutput) ToGooglePrivacyDlpV2DetectionRuleOutput() GooglePrivacyDlpV2DetectionRuleOutput {
	return o
}

func (o GooglePrivacyDlpV2DetectionRuleOutput) ToGooglePrivacyDlpV2DetectionRuleOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DetectionRuleOutput {
	return o
}

// Hotword-based detection rule.
func (o GooglePrivacyDlpV2DetectionRuleOutput) HotwordRule() GooglePrivacyDlpV2HotwordRulePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DetectionRule) *GooglePrivacyDlpV2HotwordRule { return v.HotwordRule }).(GooglePrivacyDlpV2HotwordRulePtrOutput)
}

type GooglePrivacyDlpV2DetectionRuleArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DetectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2DetectionRule)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DetectionRuleArrayOutput) ToGooglePrivacyDlpV2DetectionRuleArrayOutput() GooglePrivacyDlpV2DetectionRuleArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2DetectionRuleArrayOutput) ToGooglePrivacyDlpV2DetectionRuleArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DetectionRuleArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2DetectionRuleArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2DetectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2DetectionRule {
		return vs[0].([]GooglePrivacyDlpV2DetectionRule)[vs[1].(int)]
	}).(GooglePrivacyDlpV2DetectionRuleOutput)
}

// Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType.
type GooglePrivacyDlpV2DetectionRuleResponse struct {
	// Hotword-based detection rule.
	HotwordRule GooglePrivacyDlpV2HotwordRuleResponse `pulumi:"hotwordRule"`
}

// GooglePrivacyDlpV2DetectionRuleResponseInput is an input type that accepts GooglePrivacyDlpV2DetectionRuleResponseArgs and GooglePrivacyDlpV2DetectionRuleResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DetectionRuleResponseInput` via:
//
//          GooglePrivacyDlpV2DetectionRuleResponseArgs{...}
type GooglePrivacyDlpV2DetectionRuleResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DetectionRuleResponseOutput() GooglePrivacyDlpV2DetectionRuleResponseOutput
	ToGooglePrivacyDlpV2DetectionRuleResponseOutputWithContext(context.Context) GooglePrivacyDlpV2DetectionRuleResponseOutput
}

// Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType.
type GooglePrivacyDlpV2DetectionRuleResponseArgs struct {
	// Hotword-based detection rule.
	HotwordRule GooglePrivacyDlpV2HotwordRuleResponseInput `pulumi:"hotwordRule"`
}

func (GooglePrivacyDlpV2DetectionRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DetectionRuleResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DetectionRuleResponseArgs) ToGooglePrivacyDlpV2DetectionRuleResponseOutput() GooglePrivacyDlpV2DetectionRuleResponseOutput {
	return i.ToGooglePrivacyDlpV2DetectionRuleResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DetectionRuleResponseArgs) ToGooglePrivacyDlpV2DetectionRuleResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DetectionRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DetectionRuleResponseOutput)
}

// GooglePrivacyDlpV2DetectionRuleResponseArrayInput is an input type that accepts GooglePrivacyDlpV2DetectionRuleResponseArray and GooglePrivacyDlpV2DetectionRuleResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DetectionRuleResponseArrayInput` via:
//
//          GooglePrivacyDlpV2DetectionRuleResponseArray{ GooglePrivacyDlpV2DetectionRuleResponseArgs{...} }
type GooglePrivacyDlpV2DetectionRuleResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DetectionRuleResponseArrayOutput() GooglePrivacyDlpV2DetectionRuleResponseArrayOutput
	ToGooglePrivacyDlpV2DetectionRuleResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2DetectionRuleResponseArrayOutput
}

type GooglePrivacyDlpV2DetectionRuleResponseArray []GooglePrivacyDlpV2DetectionRuleResponseInput

func (GooglePrivacyDlpV2DetectionRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2DetectionRuleResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DetectionRuleResponseArray) ToGooglePrivacyDlpV2DetectionRuleResponseArrayOutput() GooglePrivacyDlpV2DetectionRuleResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2DetectionRuleResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DetectionRuleResponseArray) ToGooglePrivacyDlpV2DetectionRuleResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DetectionRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DetectionRuleResponseArrayOutput)
}

// Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType.
type GooglePrivacyDlpV2DetectionRuleResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DetectionRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DetectionRuleResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DetectionRuleResponseOutput) ToGooglePrivacyDlpV2DetectionRuleResponseOutput() GooglePrivacyDlpV2DetectionRuleResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2DetectionRuleResponseOutput) ToGooglePrivacyDlpV2DetectionRuleResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DetectionRuleResponseOutput {
	return o
}

// Hotword-based detection rule.
func (o GooglePrivacyDlpV2DetectionRuleResponseOutput) HotwordRule() GooglePrivacyDlpV2HotwordRuleResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DetectionRuleResponse) GooglePrivacyDlpV2HotwordRuleResponse {
		return v.HotwordRule
	}).(GooglePrivacyDlpV2HotwordRuleResponseOutput)
}

type GooglePrivacyDlpV2DetectionRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DetectionRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2DetectionRuleResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DetectionRuleResponseArrayOutput) ToGooglePrivacyDlpV2DetectionRuleResponseArrayOutput() GooglePrivacyDlpV2DetectionRuleResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2DetectionRuleResponseArrayOutput) ToGooglePrivacyDlpV2DetectionRuleResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DetectionRuleResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2DetectionRuleResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2DetectionRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2DetectionRuleResponse {
		return vs[0].([]GooglePrivacyDlpV2DetectionRuleResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2DetectionRuleResponseOutput)
}

// Custom information type based on a dictionary of words or phrases. This can be used to match sensitive information specific to the data, such as a list of employee IDs or job titles. Dictionary words are case-insensitive and all characters other than letters and digits in the unicode [Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane) will be replaced with whitespace when scanning for matches, so the dictionary phrase "Sam Johnson" will match all three phrases "sam johnson", "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters surrounding any match must be of a different type than the adjacent characters within the word, so letters must be next to non-letters and digits next to non-digits. For example, the dictionary word "jen" will match the first three letters of the text "jen123" but will return no matches for "jennifer". Dictionary words containing a large number of characters that are not letters or digits may result in unexpected findings because such characters are treated as whitespace. The [limits](https://cloud.google.com/dlp/limits) page contains details about the size limits of dictionaries. For dictionaries that do not fit within these constraints, consider using `LargeCustomDictionaryConfig` in the `StoredInfoType` API.
type GooglePrivacyDlpV2Dictionary struct {
	// Newline-delimited file of words in Cloud Storage. Only a single file is accepted.
	CloudStoragePath *GooglePrivacyDlpV2CloudStoragePath `pulumi:"cloudStoragePath"`
	// List of words or phrases to search for.
	WordList *GooglePrivacyDlpV2WordList `pulumi:"wordList"`
}

// GooglePrivacyDlpV2DictionaryInput is an input type that accepts GooglePrivacyDlpV2DictionaryArgs and GooglePrivacyDlpV2DictionaryOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DictionaryInput` via:
//
//          GooglePrivacyDlpV2DictionaryArgs{...}
type GooglePrivacyDlpV2DictionaryInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DictionaryOutput() GooglePrivacyDlpV2DictionaryOutput
	ToGooglePrivacyDlpV2DictionaryOutputWithContext(context.Context) GooglePrivacyDlpV2DictionaryOutput
}

// Custom information type based on a dictionary of words or phrases. This can be used to match sensitive information specific to the data, such as a list of employee IDs or job titles. Dictionary words are case-insensitive and all characters other than letters and digits in the unicode [Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane) will be replaced with whitespace when scanning for matches, so the dictionary phrase "Sam Johnson" will match all three phrases "sam johnson", "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters surrounding any match must be of a different type than the adjacent characters within the word, so letters must be next to non-letters and digits next to non-digits. For example, the dictionary word "jen" will match the first three letters of the text "jen123" but will return no matches for "jennifer". Dictionary words containing a large number of characters that are not letters or digits may result in unexpected findings because such characters are treated as whitespace. The [limits](https://cloud.google.com/dlp/limits) page contains details about the size limits of dictionaries. For dictionaries that do not fit within these constraints, consider using `LargeCustomDictionaryConfig` in the `StoredInfoType` API.
type GooglePrivacyDlpV2DictionaryArgs struct {
	// Newline-delimited file of words in Cloud Storage. Only a single file is accepted.
	CloudStoragePath GooglePrivacyDlpV2CloudStoragePathPtrInput `pulumi:"cloudStoragePath"`
	// List of words or phrases to search for.
	WordList GooglePrivacyDlpV2WordListPtrInput `pulumi:"wordList"`
}

func (GooglePrivacyDlpV2DictionaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Dictionary)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DictionaryArgs) ToGooglePrivacyDlpV2DictionaryOutput() GooglePrivacyDlpV2DictionaryOutput {
	return i.ToGooglePrivacyDlpV2DictionaryOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DictionaryArgs) ToGooglePrivacyDlpV2DictionaryOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DictionaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DictionaryOutput)
}

func (i GooglePrivacyDlpV2DictionaryArgs) ToGooglePrivacyDlpV2DictionaryPtrOutput() GooglePrivacyDlpV2DictionaryPtrOutput {
	return i.ToGooglePrivacyDlpV2DictionaryPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DictionaryArgs) ToGooglePrivacyDlpV2DictionaryPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DictionaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DictionaryOutput).ToGooglePrivacyDlpV2DictionaryPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2DictionaryPtrInput is an input type that accepts GooglePrivacyDlpV2DictionaryArgs, GooglePrivacyDlpV2DictionaryPtr and GooglePrivacyDlpV2DictionaryPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DictionaryPtrInput` via:
//
//          GooglePrivacyDlpV2DictionaryArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2DictionaryPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DictionaryPtrOutput() GooglePrivacyDlpV2DictionaryPtrOutput
	ToGooglePrivacyDlpV2DictionaryPtrOutputWithContext(context.Context) GooglePrivacyDlpV2DictionaryPtrOutput
}

type googlePrivacyDlpV2DictionaryPtrType GooglePrivacyDlpV2DictionaryArgs

func GooglePrivacyDlpV2DictionaryPtr(v *GooglePrivacyDlpV2DictionaryArgs) GooglePrivacyDlpV2DictionaryPtrInput {
	return (*googlePrivacyDlpV2DictionaryPtrType)(v)
}

func (*googlePrivacyDlpV2DictionaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Dictionary)(nil)).Elem()
}

func (i *googlePrivacyDlpV2DictionaryPtrType) ToGooglePrivacyDlpV2DictionaryPtrOutput() GooglePrivacyDlpV2DictionaryPtrOutput {
	return i.ToGooglePrivacyDlpV2DictionaryPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2DictionaryPtrType) ToGooglePrivacyDlpV2DictionaryPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DictionaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DictionaryPtrOutput)
}

// Custom information type based on a dictionary of words or phrases. This can be used to match sensitive information specific to the data, such as a list of employee IDs or job titles. Dictionary words are case-insensitive and all characters other than letters and digits in the unicode [Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane) will be replaced with whitespace when scanning for matches, so the dictionary phrase "Sam Johnson" will match all three phrases "sam johnson", "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters surrounding any match must be of a different type than the adjacent characters within the word, so letters must be next to non-letters and digits next to non-digits. For example, the dictionary word "jen" will match the first three letters of the text "jen123" but will return no matches for "jennifer". Dictionary words containing a large number of characters that are not letters or digits may result in unexpected findings because such characters are treated as whitespace. The [limits](https://cloud.google.com/dlp/limits) page contains details about the size limits of dictionaries. For dictionaries that do not fit within these constraints, consider using `LargeCustomDictionaryConfig` in the `StoredInfoType` API.
type GooglePrivacyDlpV2DictionaryOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DictionaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Dictionary)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DictionaryOutput) ToGooglePrivacyDlpV2DictionaryOutput() GooglePrivacyDlpV2DictionaryOutput {
	return o
}

func (o GooglePrivacyDlpV2DictionaryOutput) ToGooglePrivacyDlpV2DictionaryOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DictionaryOutput {
	return o
}

func (o GooglePrivacyDlpV2DictionaryOutput) ToGooglePrivacyDlpV2DictionaryPtrOutput() GooglePrivacyDlpV2DictionaryPtrOutput {
	return o.ToGooglePrivacyDlpV2DictionaryPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2DictionaryOutput) ToGooglePrivacyDlpV2DictionaryPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DictionaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2Dictionary) *GooglePrivacyDlpV2Dictionary {
		return &v
	}).(GooglePrivacyDlpV2DictionaryPtrOutput)
}

// Newline-delimited file of words in Cloud Storage. Only a single file is accepted.
func (o GooglePrivacyDlpV2DictionaryOutput) CloudStoragePath() GooglePrivacyDlpV2CloudStoragePathPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Dictionary) *GooglePrivacyDlpV2CloudStoragePath { return v.CloudStoragePath }).(GooglePrivacyDlpV2CloudStoragePathPtrOutput)
}

// List of words or phrases to search for.
func (o GooglePrivacyDlpV2DictionaryOutput) WordList() GooglePrivacyDlpV2WordListPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Dictionary) *GooglePrivacyDlpV2WordList { return v.WordList }).(GooglePrivacyDlpV2WordListPtrOutput)
}

type GooglePrivacyDlpV2DictionaryPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DictionaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Dictionary)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DictionaryPtrOutput) ToGooglePrivacyDlpV2DictionaryPtrOutput() GooglePrivacyDlpV2DictionaryPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DictionaryPtrOutput) ToGooglePrivacyDlpV2DictionaryPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DictionaryPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DictionaryPtrOutput) Elem() GooglePrivacyDlpV2DictionaryOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Dictionary) GooglePrivacyDlpV2Dictionary {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2Dictionary
		return ret
	}).(GooglePrivacyDlpV2DictionaryOutput)
}

// Newline-delimited file of words in Cloud Storage. Only a single file is accepted.
func (o GooglePrivacyDlpV2DictionaryPtrOutput) CloudStoragePath() GooglePrivacyDlpV2CloudStoragePathPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Dictionary) *GooglePrivacyDlpV2CloudStoragePath {
		if v == nil {
			return nil
		}
		return v.CloudStoragePath
	}).(GooglePrivacyDlpV2CloudStoragePathPtrOutput)
}

// List of words or phrases to search for.
func (o GooglePrivacyDlpV2DictionaryPtrOutput) WordList() GooglePrivacyDlpV2WordListPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Dictionary) *GooglePrivacyDlpV2WordList {
		if v == nil {
			return nil
		}
		return v.WordList
	}).(GooglePrivacyDlpV2WordListPtrOutput)
}

// Custom information type based on a dictionary of words or phrases. This can be used to match sensitive information specific to the data, such as a list of employee IDs or job titles. Dictionary words are case-insensitive and all characters other than letters and digits in the unicode [Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane) will be replaced with whitespace when scanning for matches, so the dictionary phrase "Sam Johnson" will match all three phrases "sam johnson", "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters surrounding any match must be of a different type than the adjacent characters within the word, so letters must be next to non-letters and digits next to non-digits. For example, the dictionary word "jen" will match the first three letters of the text "jen123" but will return no matches for "jennifer". Dictionary words containing a large number of characters that are not letters or digits may result in unexpected findings because such characters are treated as whitespace. The [limits](https://cloud.google.com/dlp/limits) page contains details about the size limits of dictionaries. For dictionaries that do not fit within these constraints, consider using `LargeCustomDictionaryConfig` in the `StoredInfoType` API.
type GooglePrivacyDlpV2DictionaryResponse struct {
	// Newline-delimited file of words in Cloud Storage. Only a single file is accepted.
	CloudStoragePath GooglePrivacyDlpV2CloudStoragePathResponse `pulumi:"cloudStoragePath"`
	// List of words or phrases to search for.
	WordList GooglePrivacyDlpV2WordListResponse `pulumi:"wordList"`
}

// GooglePrivacyDlpV2DictionaryResponseInput is an input type that accepts GooglePrivacyDlpV2DictionaryResponseArgs and GooglePrivacyDlpV2DictionaryResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DictionaryResponseInput` via:
//
//          GooglePrivacyDlpV2DictionaryResponseArgs{...}
type GooglePrivacyDlpV2DictionaryResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DictionaryResponseOutput() GooglePrivacyDlpV2DictionaryResponseOutput
	ToGooglePrivacyDlpV2DictionaryResponseOutputWithContext(context.Context) GooglePrivacyDlpV2DictionaryResponseOutput
}

// Custom information type based on a dictionary of words or phrases. This can be used to match sensitive information specific to the data, such as a list of employee IDs or job titles. Dictionary words are case-insensitive and all characters other than letters and digits in the unicode [Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane) will be replaced with whitespace when scanning for matches, so the dictionary phrase "Sam Johnson" will match all three phrases "sam johnson", "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters surrounding any match must be of a different type than the adjacent characters within the word, so letters must be next to non-letters and digits next to non-digits. For example, the dictionary word "jen" will match the first three letters of the text "jen123" but will return no matches for "jennifer". Dictionary words containing a large number of characters that are not letters or digits may result in unexpected findings because such characters are treated as whitespace. The [limits](https://cloud.google.com/dlp/limits) page contains details about the size limits of dictionaries. For dictionaries that do not fit within these constraints, consider using `LargeCustomDictionaryConfig` in the `StoredInfoType` API.
type GooglePrivacyDlpV2DictionaryResponseArgs struct {
	// Newline-delimited file of words in Cloud Storage. Only a single file is accepted.
	CloudStoragePath GooglePrivacyDlpV2CloudStoragePathResponseInput `pulumi:"cloudStoragePath"`
	// List of words or phrases to search for.
	WordList GooglePrivacyDlpV2WordListResponseInput `pulumi:"wordList"`
}

func (GooglePrivacyDlpV2DictionaryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DictionaryResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2DictionaryResponseArgs) ToGooglePrivacyDlpV2DictionaryResponseOutput() GooglePrivacyDlpV2DictionaryResponseOutput {
	return i.ToGooglePrivacyDlpV2DictionaryResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DictionaryResponseArgs) ToGooglePrivacyDlpV2DictionaryResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DictionaryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DictionaryResponseOutput)
}

func (i GooglePrivacyDlpV2DictionaryResponseArgs) ToGooglePrivacyDlpV2DictionaryResponsePtrOutput() GooglePrivacyDlpV2DictionaryResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2DictionaryResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2DictionaryResponseArgs) ToGooglePrivacyDlpV2DictionaryResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DictionaryResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DictionaryResponseOutput).ToGooglePrivacyDlpV2DictionaryResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2DictionaryResponsePtrInput is an input type that accepts GooglePrivacyDlpV2DictionaryResponseArgs, GooglePrivacyDlpV2DictionaryResponsePtr and GooglePrivacyDlpV2DictionaryResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2DictionaryResponsePtrInput` via:
//
//          GooglePrivacyDlpV2DictionaryResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2DictionaryResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2DictionaryResponsePtrOutput() GooglePrivacyDlpV2DictionaryResponsePtrOutput
	ToGooglePrivacyDlpV2DictionaryResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2DictionaryResponsePtrOutput
}

type googlePrivacyDlpV2DictionaryResponsePtrType GooglePrivacyDlpV2DictionaryResponseArgs

func GooglePrivacyDlpV2DictionaryResponsePtr(v *GooglePrivacyDlpV2DictionaryResponseArgs) GooglePrivacyDlpV2DictionaryResponsePtrInput {
	return (*googlePrivacyDlpV2DictionaryResponsePtrType)(v)
}

func (*googlePrivacyDlpV2DictionaryResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DictionaryResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2DictionaryResponsePtrType) ToGooglePrivacyDlpV2DictionaryResponsePtrOutput() GooglePrivacyDlpV2DictionaryResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2DictionaryResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2DictionaryResponsePtrType) ToGooglePrivacyDlpV2DictionaryResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DictionaryResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2DictionaryResponsePtrOutput)
}

// Custom information type based on a dictionary of words or phrases. This can be used to match sensitive information specific to the data, such as a list of employee IDs or job titles. Dictionary words are case-insensitive and all characters other than letters and digits in the unicode [Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane) will be replaced with whitespace when scanning for matches, so the dictionary phrase "Sam Johnson" will match all three phrases "sam johnson", "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters surrounding any match must be of a different type than the adjacent characters within the word, so letters must be next to non-letters and digits next to non-digits. For example, the dictionary word "jen" will match the first three letters of the text "jen123" but will return no matches for "jennifer". Dictionary words containing a large number of characters that are not letters or digits may result in unexpected findings because such characters are treated as whitespace. The [limits](https://cloud.google.com/dlp/limits) page contains details about the size limits of dictionaries. For dictionaries that do not fit within these constraints, consider using `LargeCustomDictionaryConfig` in the `StoredInfoType` API.
type GooglePrivacyDlpV2DictionaryResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DictionaryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2DictionaryResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DictionaryResponseOutput) ToGooglePrivacyDlpV2DictionaryResponseOutput() GooglePrivacyDlpV2DictionaryResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2DictionaryResponseOutput) ToGooglePrivacyDlpV2DictionaryResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DictionaryResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2DictionaryResponseOutput) ToGooglePrivacyDlpV2DictionaryResponsePtrOutput() GooglePrivacyDlpV2DictionaryResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2DictionaryResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2DictionaryResponseOutput) ToGooglePrivacyDlpV2DictionaryResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DictionaryResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2DictionaryResponse) *GooglePrivacyDlpV2DictionaryResponse {
		return &v
	}).(GooglePrivacyDlpV2DictionaryResponsePtrOutput)
}

// Newline-delimited file of words in Cloud Storage. Only a single file is accepted.
func (o GooglePrivacyDlpV2DictionaryResponseOutput) CloudStoragePath() GooglePrivacyDlpV2CloudStoragePathResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DictionaryResponse) GooglePrivacyDlpV2CloudStoragePathResponse {
		return v.CloudStoragePath
	}).(GooglePrivacyDlpV2CloudStoragePathResponseOutput)
}

// List of words or phrases to search for.
func (o GooglePrivacyDlpV2DictionaryResponseOutput) WordList() GooglePrivacyDlpV2WordListResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2DictionaryResponse) GooglePrivacyDlpV2WordListResponse { return v.WordList }).(GooglePrivacyDlpV2WordListResponseOutput)
}

type GooglePrivacyDlpV2DictionaryResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2DictionaryResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2DictionaryResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2DictionaryResponsePtrOutput) ToGooglePrivacyDlpV2DictionaryResponsePtrOutput() GooglePrivacyDlpV2DictionaryResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DictionaryResponsePtrOutput) ToGooglePrivacyDlpV2DictionaryResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2DictionaryResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2DictionaryResponsePtrOutput) Elem() GooglePrivacyDlpV2DictionaryResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DictionaryResponse) GooglePrivacyDlpV2DictionaryResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2DictionaryResponse
		return ret
	}).(GooglePrivacyDlpV2DictionaryResponseOutput)
}

// Newline-delimited file of words in Cloud Storage. Only a single file is accepted.
func (o GooglePrivacyDlpV2DictionaryResponsePtrOutput) CloudStoragePath() GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DictionaryResponse) *GooglePrivacyDlpV2CloudStoragePathResponse {
		if v == nil {
			return nil
		}
		return &v.CloudStoragePath
	}).(GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput)
}

// List of words or phrases to search for.
func (o GooglePrivacyDlpV2DictionaryResponsePtrOutput) WordList() GooglePrivacyDlpV2WordListResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2DictionaryResponse) *GooglePrivacyDlpV2WordListResponse {
		if v == nil {
			return nil
		}
		return &v.WordList
	}).(GooglePrivacyDlpV2WordListResponsePtrOutput)
}

// An entity in a dataset is a field or set of fields that correspond to a single person. For example, in medical records the `EntityId` might be a patient identifier, or for financial records it might be an account identifier. This message is used when generalizations or analysis must take into account that multiple rows correspond to the same entity.
type GooglePrivacyDlpV2EntityId struct {
	// Composite key indicating which field contains the entity identifier.
	Field *GooglePrivacyDlpV2FieldId `pulumi:"field"`
}

// GooglePrivacyDlpV2EntityIdInput is an input type that accepts GooglePrivacyDlpV2EntityIdArgs and GooglePrivacyDlpV2EntityIdOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2EntityIdInput` via:
//
//          GooglePrivacyDlpV2EntityIdArgs{...}
type GooglePrivacyDlpV2EntityIdInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2EntityIdOutput() GooglePrivacyDlpV2EntityIdOutput
	ToGooglePrivacyDlpV2EntityIdOutputWithContext(context.Context) GooglePrivacyDlpV2EntityIdOutput
}

// An entity in a dataset is a field or set of fields that correspond to a single person. For example, in medical records the `EntityId` might be a patient identifier, or for financial records it might be an account identifier. This message is used when generalizations or analysis must take into account that multiple rows correspond to the same entity.
type GooglePrivacyDlpV2EntityIdArgs struct {
	// Composite key indicating which field contains the entity identifier.
	Field GooglePrivacyDlpV2FieldIdPtrInput `pulumi:"field"`
}

func (GooglePrivacyDlpV2EntityIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2EntityId)(nil)).Elem()
}

func (i GooglePrivacyDlpV2EntityIdArgs) ToGooglePrivacyDlpV2EntityIdOutput() GooglePrivacyDlpV2EntityIdOutput {
	return i.ToGooglePrivacyDlpV2EntityIdOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2EntityIdArgs) ToGooglePrivacyDlpV2EntityIdOutputWithContext(ctx context.Context) GooglePrivacyDlpV2EntityIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2EntityIdOutput)
}

func (i GooglePrivacyDlpV2EntityIdArgs) ToGooglePrivacyDlpV2EntityIdPtrOutput() GooglePrivacyDlpV2EntityIdPtrOutput {
	return i.ToGooglePrivacyDlpV2EntityIdPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2EntityIdArgs) ToGooglePrivacyDlpV2EntityIdPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2EntityIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2EntityIdOutput).ToGooglePrivacyDlpV2EntityIdPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2EntityIdPtrInput is an input type that accepts GooglePrivacyDlpV2EntityIdArgs, GooglePrivacyDlpV2EntityIdPtr and GooglePrivacyDlpV2EntityIdPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2EntityIdPtrInput` via:
//
//          GooglePrivacyDlpV2EntityIdArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2EntityIdPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2EntityIdPtrOutput() GooglePrivacyDlpV2EntityIdPtrOutput
	ToGooglePrivacyDlpV2EntityIdPtrOutputWithContext(context.Context) GooglePrivacyDlpV2EntityIdPtrOutput
}

type googlePrivacyDlpV2EntityIdPtrType GooglePrivacyDlpV2EntityIdArgs

func GooglePrivacyDlpV2EntityIdPtr(v *GooglePrivacyDlpV2EntityIdArgs) GooglePrivacyDlpV2EntityIdPtrInput {
	return (*googlePrivacyDlpV2EntityIdPtrType)(v)
}

func (*googlePrivacyDlpV2EntityIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2EntityId)(nil)).Elem()
}

func (i *googlePrivacyDlpV2EntityIdPtrType) ToGooglePrivacyDlpV2EntityIdPtrOutput() GooglePrivacyDlpV2EntityIdPtrOutput {
	return i.ToGooglePrivacyDlpV2EntityIdPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2EntityIdPtrType) ToGooglePrivacyDlpV2EntityIdPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2EntityIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2EntityIdPtrOutput)
}

// An entity in a dataset is a field or set of fields that correspond to a single person. For example, in medical records the `EntityId` might be a patient identifier, or for financial records it might be an account identifier. This message is used when generalizations or analysis must take into account that multiple rows correspond to the same entity.
type GooglePrivacyDlpV2EntityIdOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2EntityIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2EntityId)(nil)).Elem()
}

func (o GooglePrivacyDlpV2EntityIdOutput) ToGooglePrivacyDlpV2EntityIdOutput() GooglePrivacyDlpV2EntityIdOutput {
	return o
}

func (o GooglePrivacyDlpV2EntityIdOutput) ToGooglePrivacyDlpV2EntityIdOutputWithContext(ctx context.Context) GooglePrivacyDlpV2EntityIdOutput {
	return o
}

func (o GooglePrivacyDlpV2EntityIdOutput) ToGooglePrivacyDlpV2EntityIdPtrOutput() GooglePrivacyDlpV2EntityIdPtrOutput {
	return o.ToGooglePrivacyDlpV2EntityIdPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2EntityIdOutput) ToGooglePrivacyDlpV2EntityIdPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2EntityIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2EntityId) *GooglePrivacyDlpV2EntityId {
		return &v
	}).(GooglePrivacyDlpV2EntityIdPtrOutput)
}

// Composite key indicating which field contains the entity identifier.
func (o GooglePrivacyDlpV2EntityIdOutput) Field() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2EntityId) *GooglePrivacyDlpV2FieldId { return v.Field }).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

type GooglePrivacyDlpV2EntityIdPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2EntityIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2EntityId)(nil)).Elem()
}

func (o GooglePrivacyDlpV2EntityIdPtrOutput) ToGooglePrivacyDlpV2EntityIdPtrOutput() GooglePrivacyDlpV2EntityIdPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2EntityIdPtrOutput) ToGooglePrivacyDlpV2EntityIdPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2EntityIdPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2EntityIdPtrOutput) Elem() GooglePrivacyDlpV2EntityIdOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2EntityId) GooglePrivacyDlpV2EntityId {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2EntityId
		return ret
	}).(GooglePrivacyDlpV2EntityIdOutput)
}

// Composite key indicating which field contains the entity identifier.
func (o GooglePrivacyDlpV2EntityIdPtrOutput) Field() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2EntityId) *GooglePrivacyDlpV2FieldId {
		if v == nil {
			return nil
		}
		return v.Field
	}).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// An entity in a dataset is a field or set of fields that correspond to a single person. For example, in medical records the `EntityId` might be a patient identifier, or for financial records it might be an account identifier. This message is used when generalizations or analysis must take into account that multiple rows correspond to the same entity.
type GooglePrivacyDlpV2EntityIdResponse struct {
	// Composite key indicating which field contains the entity identifier.
	Field GooglePrivacyDlpV2FieldIdResponse `pulumi:"field"`
}

// GooglePrivacyDlpV2EntityIdResponseInput is an input type that accepts GooglePrivacyDlpV2EntityIdResponseArgs and GooglePrivacyDlpV2EntityIdResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2EntityIdResponseInput` via:
//
//          GooglePrivacyDlpV2EntityIdResponseArgs{...}
type GooglePrivacyDlpV2EntityIdResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2EntityIdResponseOutput() GooglePrivacyDlpV2EntityIdResponseOutput
	ToGooglePrivacyDlpV2EntityIdResponseOutputWithContext(context.Context) GooglePrivacyDlpV2EntityIdResponseOutput
}

// An entity in a dataset is a field or set of fields that correspond to a single person. For example, in medical records the `EntityId` might be a patient identifier, or for financial records it might be an account identifier. This message is used when generalizations or analysis must take into account that multiple rows correspond to the same entity.
type GooglePrivacyDlpV2EntityIdResponseArgs struct {
	// Composite key indicating which field contains the entity identifier.
	Field GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"field"`
}

func (GooglePrivacyDlpV2EntityIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2EntityIdResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2EntityIdResponseArgs) ToGooglePrivacyDlpV2EntityIdResponseOutput() GooglePrivacyDlpV2EntityIdResponseOutput {
	return i.ToGooglePrivacyDlpV2EntityIdResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2EntityIdResponseArgs) ToGooglePrivacyDlpV2EntityIdResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2EntityIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2EntityIdResponseOutput)
}

func (i GooglePrivacyDlpV2EntityIdResponseArgs) ToGooglePrivacyDlpV2EntityIdResponsePtrOutput() GooglePrivacyDlpV2EntityIdResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2EntityIdResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2EntityIdResponseArgs) ToGooglePrivacyDlpV2EntityIdResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2EntityIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2EntityIdResponseOutput).ToGooglePrivacyDlpV2EntityIdResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2EntityIdResponsePtrInput is an input type that accepts GooglePrivacyDlpV2EntityIdResponseArgs, GooglePrivacyDlpV2EntityIdResponsePtr and GooglePrivacyDlpV2EntityIdResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2EntityIdResponsePtrInput` via:
//
//          GooglePrivacyDlpV2EntityIdResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2EntityIdResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2EntityIdResponsePtrOutput() GooglePrivacyDlpV2EntityIdResponsePtrOutput
	ToGooglePrivacyDlpV2EntityIdResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2EntityIdResponsePtrOutput
}

type googlePrivacyDlpV2EntityIdResponsePtrType GooglePrivacyDlpV2EntityIdResponseArgs

func GooglePrivacyDlpV2EntityIdResponsePtr(v *GooglePrivacyDlpV2EntityIdResponseArgs) GooglePrivacyDlpV2EntityIdResponsePtrInput {
	return (*googlePrivacyDlpV2EntityIdResponsePtrType)(v)
}

func (*googlePrivacyDlpV2EntityIdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2EntityIdResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2EntityIdResponsePtrType) ToGooglePrivacyDlpV2EntityIdResponsePtrOutput() GooglePrivacyDlpV2EntityIdResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2EntityIdResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2EntityIdResponsePtrType) ToGooglePrivacyDlpV2EntityIdResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2EntityIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2EntityIdResponsePtrOutput)
}

// An entity in a dataset is a field or set of fields that correspond to a single person. For example, in medical records the `EntityId` might be a patient identifier, or for financial records it might be an account identifier. This message is used when generalizations or analysis must take into account that multiple rows correspond to the same entity.
type GooglePrivacyDlpV2EntityIdResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2EntityIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2EntityIdResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2EntityIdResponseOutput) ToGooglePrivacyDlpV2EntityIdResponseOutput() GooglePrivacyDlpV2EntityIdResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2EntityIdResponseOutput) ToGooglePrivacyDlpV2EntityIdResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2EntityIdResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2EntityIdResponseOutput) ToGooglePrivacyDlpV2EntityIdResponsePtrOutput() GooglePrivacyDlpV2EntityIdResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2EntityIdResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2EntityIdResponseOutput) ToGooglePrivacyDlpV2EntityIdResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2EntityIdResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2EntityIdResponse) *GooglePrivacyDlpV2EntityIdResponse {
		return &v
	}).(GooglePrivacyDlpV2EntityIdResponsePtrOutput)
}

// Composite key indicating which field contains the entity identifier.
func (o GooglePrivacyDlpV2EntityIdResponseOutput) Field() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2EntityIdResponse) GooglePrivacyDlpV2FieldIdResponse { return v.Field }).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

type GooglePrivacyDlpV2EntityIdResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2EntityIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2EntityIdResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2EntityIdResponsePtrOutput) ToGooglePrivacyDlpV2EntityIdResponsePtrOutput() GooglePrivacyDlpV2EntityIdResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2EntityIdResponsePtrOutput) ToGooglePrivacyDlpV2EntityIdResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2EntityIdResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2EntityIdResponsePtrOutput) Elem() GooglePrivacyDlpV2EntityIdResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2EntityIdResponse) GooglePrivacyDlpV2EntityIdResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2EntityIdResponse
		return ret
	}).(GooglePrivacyDlpV2EntityIdResponseOutput)
}

// Composite key indicating which field contains the entity identifier.
func (o GooglePrivacyDlpV2EntityIdResponsePtrOutput) Field() GooglePrivacyDlpV2FieldIdResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2EntityIdResponse) *GooglePrivacyDlpV2FieldIdResponse {
		if v == nil {
			return nil
		}
		return &v.Field
	}).(GooglePrivacyDlpV2FieldIdResponsePtrOutput)
}

// Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger.
type GooglePrivacyDlpV2ErrorResponse struct {
	// Detailed error codes and messages.
	Details GoogleRpcStatusResponse `pulumi:"details"`
	// The times the error occurred.
	Timestamps []string `pulumi:"timestamps"`
}

// GooglePrivacyDlpV2ErrorResponseInput is an input type that accepts GooglePrivacyDlpV2ErrorResponseArgs and GooglePrivacyDlpV2ErrorResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ErrorResponseInput` via:
//
//          GooglePrivacyDlpV2ErrorResponseArgs{...}
type GooglePrivacyDlpV2ErrorResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ErrorResponseOutput() GooglePrivacyDlpV2ErrorResponseOutput
	ToGooglePrivacyDlpV2ErrorResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ErrorResponseOutput
}

// Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger.
type GooglePrivacyDlpV2ErrorResponseArgs struct {
	// Detailed error codes and messages.
	Details GoogleRpcStatusResponseInput `pulumi:"details"`
	// The times the error occurred.
	Timestamps pulumi.StringArrayInput `pulumi:"timestamps"`
}

func (GooglePrivacyDlpV2ErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ErrorResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ErrorResponseArgs) ToGooglePrivacyDlpV2ErrorResponseOutput() GooglePrivacyDlpV2ErrorResponseOutput {
	return i.ToGooglePrivacyDlpV2ErrorResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ErrorResponseArgs) ToGooglePrivacyDlpV2ErrorResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ErrorResponseOutput)
}

// GooglePrivacyDlpV2ErrorResponseArrayInput is an input type that accepts GooglePrivacyDlpV2ErrorResponseArray and GooglePrivacyDlpV2ErrorResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ErrorResponseArrayInput` via:
//
//          GooglePrivacyDlpV2ErrorResponseArray{ GooglePrivacyDlpV2ErrorResponseArgs{...} }
type GooglePrivacyDlpV2ErrorResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ErrorResponseArrayOutput() GooglePrivacyDlpV2ErrorResponseArrayOutput
	ToGooglePrivacyDlpV2ErrorResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2ErrorResponseArrayOutput
}

type GooglePrivacyDlpV2ErrorResponseArray []GooglePrivacyDlpV2ErrorResponseInput

func (GooglePrivacyDlpV2ErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2ErrorResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ErrorResponseArray) ToGooglePrivacyDlpV2ErrorResponseArrayOutput() GooglePrivacyDlpV2ErrorResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2ErrorResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ErrorResponseArray) ToGooglePrivacyDlpV2ErrorResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ErrorResponseArrayOutput)
}

// Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger.
type GooglePrivacyDlpV2ErrorResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ErrorResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ErrorResponseOutput) ToGooglePrivacyDlpV2ErrorResponseOutput() GooglePrivacyDlpV2ErrorResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ErrorResponseOutput) ToGooglePrivacyDlpV2ErrorResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ErrorResponseOutput {
	return o
}

// Detailed error codes and messages.
func (o GooglePrivacyDlpV2ErrorResponseOutput) Details() GoogleRpcStatusResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ErrorResponse) GoogleRpcStatusResponse { return v.Details }).(GoogleRpcStatusResponseOutput)
}

// The times the error occurred.
func (o GooglePrivacyDlpV2ErrorResponseOutput) Timestamps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ErrorResponse) []string { return v.Timestamps }).(pulumi.StringArrayOutput)
}

type GooglePrivacyDlpV2ErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2ErrorResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ErrorResponseArrayOutput) ToGooglePrivacyDlpV2ErrorResponseArrayOutput() GooglePrivacyDlpV2ErrorResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2ErrorResponseArrayOutput) ToGooglePrivacyDlpV2ErrorResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ErrorResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2ErrorResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2ErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2ErrorResponse {
		return vs[0].([]GooglePrivacyDlpV2ErrorResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2ErrorResponseOutput)
}

// List of exclude infoTypes.
type GooglePrivacyDlpV2ExcludeInfoTypes struct {
	// InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing "PHONE_NUMBER"`and`exclusion_rule`containing`exclude_info_types.info_types` with "EMAIL_ADDRESS" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to "555-222-2222@example.org" to generate only a single finding, namely email address.
	InfoTypes []GooglePrivacyDlpV2InfoType `pulumi:"infoTypes"`
}

// GooglePrivacyDlpV2ExcludeInfoTypesInput is an input type that accepts GooglePrivacyDlpV2ExcludeInfoTypesArgs and GooglePrivacyDlpV2ExcludeInfoTypesOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ExcludeInfoTypesInput` via:
//
//          GooglePrivacyDlpV2ExcludeInfoTypesArgs{...}
type GooglePrivacyDlpV2ExcludeInfoTypesInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ExcludeInfoTypesOutput() GooglePrivacyDlpV2ExcludeInfoTypesOutput
	ToGooglePrivacyDlpV2ExcludeInfoTypesOutputWithContext(context.Context) GooglePrivacyDlpV2ExcludeInfoTypesOutput
}

// List of exclude infoTypes.
type GooglePrivacyDlpV2ExcludeInfoTypesArgs struct {
	// InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing "PHONE_NUMBER"`and`exclusion_rule`containing`exclude_info_types.info_types` with "EMAIL_ADDRESS" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to "555-222-2222@example.org" to generate only a single finding, namely email address.
	InfoTypes GooglePrivacyDlpV2InfoTypeArrayInput `pulumi:"infoTypes"`
}

func (GooglePrivacyDlpV2ExcludeInfoTypesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ExcludeInfoTypes)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ExcludeInfoTypesArgs) ToGooglePrivacyDlpV2ExcludeInfoTypesOutput() GooglePrivacyDlpV2ExcludeInfoTypesOutput {
	return i.ToGooglePrivacyDlpV2ExcludeInfoTypesOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ExcludeInfoTypesArgs) ToGooglePrivacyDlpV2ExcludeInfoTypesOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExcludeInfoTypesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ExcludeInfoTypesOutput)
}

func (i GooglePrivacyDlpV2ExcludeInfoTypesArgs) ToGooglePrivacyDlpV2ExcludeInfoTypesPtrOutput() GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput {
	return i.ToGooglePrivacyDlpV2ExcludeInfoTypesPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ExcludeInfoTypesArgs) ToGooglePrivacyDlpV2ExcludeInfoTypesPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ExcludeInfoTypesOutput).ToGooglePrivacyDlpV2ExcludeInfoTypesPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2ExcludeInfoTypesPtrInput is an input type that accepts GooglePrivacyDlpV2ExcludeInfoTypesArgs, GooglePrivacyDlpV2ExcludeInfoTypesPtr and GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ExcludeInfoTypesPtrInput` via:
//
//          GooglePrivacyDlpV2ExcludeInfoTypesArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2ExcludeInfoTypesPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ExcludeInfoTypesPtrOutput() GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput
	ToGooglePrivacyDlpV2ExcludeInfoTypesPtrOutputWithContext(context.Context) GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput
}

type googlePrivacyDlpV2ExcludeInfoTypesPtrType GooglePrivacyDlpV2ExcludeInfoTypesArgs

func GooglePrivacyDlpV2ExcludeInfoTypesPtr(v *GooglePrivacyDlpV2ExcludeInfoTypesArgs) GooglePrivacyDlpV2ExcludeInfoTypesPtrInput {
	return (*googlePrivacyDlpV2ExcludeInfoTypesPtrType)(v)
}

func (*googlePrivacyDlpV2ExcludeInfoTypesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ExcludeInfoTypes)(nil)).Elem()
}

func (i *googlePrivacyDlpV2ExcludeInfoTypesPtrType) ToGooglePrivacyDlpV2ExcludeInfoTypesPtrOutput() GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput {
	return i.ToGooglePrivacyDlpV2ExcludeInfoTypesPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2ExcludeInfoTypesPtrType) ToGooglePrivacyDlpV2ExcludeInfoTypesPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput)
}

// List of exclude infoTypes.
type GooglePrivacyDlpV2ExcludeInfoTypesOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ExcludeInfoTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ExcludeInfoTypes)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ExcludeInfoTypesOutput) ToGooglePrivacyDlpV2ExcludeInfoTypesOutput() GooglePrivacyDlpV2ExcludeInfoTypesOutput {
	return o
}

func (o GooglePrivacyDlpV2ExcludeInfoTypesOutput) ToGooglePrivacyDlpV2ExcludeInfoTypesOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExcludeInfoTypesOutput {
	return o
}

func (o GooglePrivacyDlpV2ExcludeInfoTypesOutput) ToGooglePrivacyDlpV2ExcludeInfoTypesPtrOutput() GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput {
	return o.ToGooglePrivacyDlpV2ExcludeInfoTypesPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2ExcludeInfoTypesOutput) ToGooglePrivacyDlpV2ExcludeInfoTypesPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2ExcludeInfoTypes) *GooglePrivacyDlpV2ExcludeInfoTypes {
		return &v
	}).(GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput)
}

// InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing "PHONE_NUMBER"`and`exclusion_rule`containing`exclude_info_types.info_types` with "EMAIL_ADDRESS" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to "555-222-2222@example.org" to generate only a single finding, namely email address.
func (o GooglePrivacyDlpV2ExcludeInfoTypesOutput) InfoTypes() GooglePrivacyDlpV2InfoTypeArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ExcludeInfoTypes) []GooglePrivacyDlpV2InfoType { return v.InfoTypes }).(GooglePrivacyDlpV2InfoTypeArrayOutput)
}

type GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ExcludeInfoTypes)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput) ToGooglePrivacyDlpV2ExcludeInfoTypesPtrOutput() GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput) ToGooglePrivacyDlpV2ExcludeInfoTypesPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput) Elem() GooglePrivacyDlpV2ExcludeInfoTypesOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ExcludeInfoTypes) GooglePrivacyDlpV2ExcludeInfoTypes {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2ExcludeInfoTypes
		return ret
	}).(GooglePrivacyDlpV2ExcludeInfoTypesOutput)
}

// InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing "PHONE_NUMBER"`and`exclusion_rule`containing`exclude_info_types.info_types` with "EMAIL_ADDRESS" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to "555-222-2222@example.org" to generate only a single finding, namely email address.
func (o GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput) InfoTypes() GooglePrivacyDlpV2InfoTypeArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ExcludeInfoTypes) []GooglePrivacyDlpV2InfoType {
		if v == nil {
			return nil
		}
		return v.InfoTypes
	}).(GooglePrivacyDlpV2InfoTypeArrayOutput)
}

// List of exclude infoTypes.
type GooglePrivacyDlpV2ExcludeInfoTypesResponse struct {
	// InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing "PHONE_NUMBER"`and`exclusion_rule`containing`exclude_info_types.info_types` with "EMAIL_ADDRESS" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to "555-222-2222@example.org" to generate only a single finding, namely email address.
	InfoTypes []GooglePrivacyDlpV2InfoTypeResponse `pulumi:"infoTypes"`
}

// GooglePrivacyDlpV2ExcludeInfoTypesResponseInput is an input type that accepts GooglePrivacyDlpV2ExcludeInfoTypesResponseArgs and GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ExcludeInfoTypesResponseInput` via:
//
//          GooglePrivacyDlpV2ExcludeInfoTypesResponseArgs{...}
type GooglePrivacyDlpV2ExcludeInfoTypesResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ExcludeInfoTypesResponseOutput() GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput
	ToGooglePrivacyDlpV2ExcludeInfoTypesResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput
}

// List of exclude infoTypes.
type GooglePrivacyDlpV2ExcludeInfoTypesResponseArgs struct {
	// InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing "PHONE_NUMBER"`and`exclusion_rule`containing`exclude_info_types.info_types` with "EMAIL_ADDRESS" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to "555-222-2222@example.org" to generate only a single finding, namely email address.
	InfoTypes GooglePrivacyDlpV2InfoTypeResponseArrayInput `pulumi:"infoTypes"`
}

func (GooglePrivacyDlpV2ExcludeInfoTypesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ExcludeInfoTypesResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ExcludeInfoTypesResponseArgs) ToGooglePrivacyDlpV2ExcludeInfoTypesResponseOutput() GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput {
	return i.ToGooglePrivacyDlpV2ExcludeInfoTypesResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ExcludeInfoTypesResponseArgs) ToGooglePrivacyDlpV2ExcludeInfoTypesResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput)
}

// List of exclude infoTypes.
type GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ExcludeInfoTypesResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput) ToGooglePrivacyDlpV2ExcludeInfoTypesResponseOutput() GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput) ToGooglePrivacyDlpV2ExcludeInfoTypesResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput {
	return o
}

// InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing "PHONE_NUMBER"`and`exclusion_rule`containing`exclude_info_types.info_types` with "EMAIL_ADDRESS" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to "555-222-2222@example.org" to generate only a single finding, namely email address.
func (o GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput) InfoTypes() GooglePrivacyDlpV2InfoTypeResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ExcludeInfoTypesResponse) []GooglePrivacyDlpV2InfoTypeResponse {
		return v.InfoTypes
	}).(GooglePrivacyDlpV2InfoTypeResponseArrayOutput)
}

// The rule that specifies conditions when findings of infoTypes specified in `InspectionRuleSet` are removed from results.
type GooglePrivacyDlpV2ExclusionRule struct {
	// Dictionary which defines the rule.
	Dictionary *GooglePrivacyDlpV2Dictionary `pulumi:"dictionary"`
	// Set of infoTypes for which findings would affect this rule.
	ExcludeInfoTypes *GooglePrivacyDlpV2ExcludeInfoTypes `pulumi:"excludeInfoTypes"`
	// How the rule is applied, see MatchingType documentation for details.
	MatchingType *GooglePrivacyDlpV2ExclusionRuleMatchingType `pulumi:"matchingType"`
	// Regular expression which defines the rule.
	Regex *GooglePrivacyDlpV2Regex `pulumi:"regex"`
}

// GooglePrivacyDlpV2ExclusionRuleInput is an input type that accepts GooglePrivacyDlpV2ExclusionRuleArgs and GooglePrivacyDlpV2ExclusionRuleOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ExclusionRuleInput` via:
//
//          GooglePrivacyDlpV2ExclusionRuleArgs{...}
type GooglePrivacyDlpV2ExclusionRuleInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ExclusionRuleOutput() GooglePrivacyDlpV2ExclusionRuleOutput
	ToGooglePrivacyDlpV2ExclusionRuleOutputWithContext(context.Context) GooglePrivacyDlpV2ExclusionRuleOutput
}

// The rule that specifies conditions when findings of infoTypes specified in `InspectionRuleSet` are removed from results.
type GooglePrivacyDlpV2ExclusionRuleArgs struct {
	// Dictionary which defines the rule.
	Dictionary GooglePrivacyDlpV2DictionaryPtrInput `pulumi:"dictionary"`
	// Set of infoTypes for which findings would affect this rule.
	ExcludeInfoTypes GooglePrivacyDlpV2ExcludeInfoTypesPtrInput `pulumi:"excludeInfoTypes"`
	// How the rule is applied, see MatchingType documentation for details.
	MatchingType GooglePrivacyDlpV2ExclusionRuleMatchingTypePtrInput `pulumi:"matchingType"`
	// Regular expression which defines the rule.
	Regex GooglePrivacyDlpV2RegexPtrInput `pulumi:"regex"`
}

func (GooglePrivacyDlpV2ExclusionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ExclusionRule)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ExclusionRuleArgs) ToGooglePrivacyDlpV2ExclusionRuleOutput() GooglePrivacyDlpV2ExclusionRuleOutput {
	return i.ToGooglePrivacyDlpV2ExclusionRuleOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ExclusionRuleArgs) ToGooglePrivacyDlpV2ExclusionRuleOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExclusionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ExclusionRuleOutput)
}

func (i GooglePrivacyDlpV2ExclusionRuleArgs) ToGooglePrivacyDlpV2ExclusionRulePtrOutput() GooglePrivacyDlpV2ExclusionRulePtrOutput {
	return i.ToGooglePrivacyDlpV2ExclusionRulePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ExclusionRuleArgs) ToGooglePrivacyDlpV2ExclusionRulePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExclusionRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ExclusionRuleOutput).ToGooglePrivacyDlpV2ExclusionRulePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2ExclusionRulePtrInput is an input type that accepts GooglePrivacyDlpV2ExclusionRuleArgs, GooglePrivacyDlpV2ExclusionRulePtr and GooglePrivacyDlpV2ExclusionRulePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ExclusionRulePtrInput` via:
//
//          GooglePrivacyDlpV2ExclusionRuleArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2ExclusionRulePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ExclusionRulePtrOutput() GooglePrivacyDlpV2ExclusionRulePtrOutput
	ToGooglePrivacyDlpV2ExclusionRulePtrOutputWithContext(context.Context) GooglePrivacyDlpV2ExclusionRulePtrOutput
}

type googlePrivacyDlpV2ExclusionRulePtrType GooglePrivacyDlpV2ExclusionRuleArgs

func GooglePrivacyDlpV2ExclusionRulePtr(v *GooglePrivacyDlpV2ExclusionRuleArgs) GooglePrivacyDlpV2ExclusionRulePtrInput {
	return (*googlePrivacyDlpV2ExclusionRulePtrType)(v)
}

func (*googlePrivacyDlpV2ExclusionRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ExclusionRule)(nil)).Elem()
}

func (i *googlePrivacyDlpV2ExclusionRulePtrType) ToGooglePrivacyDlpV2ExclusionRulePtrOutput() GooglePrivacyDlpV2ExclusionRulePtrOutput {
	return i.ToGooglePrivacyDlpV2ExclusionRulePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2ExclusionRulePtrType) ToGooglePrivacyDlpV2ExclusionRulePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExclusionRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ExclusionRulePtrOutput)
}

// The rule that specifies conditions when findings of infoTypes specified in `InspectionRuleSet` are removed from results.
type GooglePrivacyDlpV2ExclusionRuleOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ExclusionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ExclusionRule)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ExclusionRuleOutput) ToGooglePrivacyDlpV2ExclusionRuleOutput() GooglePrivacyDlpV2ExclusionRuleOutput {
	return o
}

func (o GooglePrivacyDlpV2ExclusionRuleOutput) ToGooglePrivacyDlpV2ExclusionRuleOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExclusionRuleOutput {
	return o
}

func (o GooglePrivacyDlpV2ExclusionRuleOutput) ToGooglePrivacyDlpV2ExclusionRulePtrOutput() GooglePrivacyDlpV2ExclusionRulePtrOutput {
	return o.ToGooglePrivacyDlpV2ExclusionRulePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2ExclusionRuleOutput) ToGooglePrivacyDlpV2ExclusionRulePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExclusionRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2ExclusionRule) *GooglePrivacyDlpV2ExclusionRule {
		return &v
	}).(GooglePrivacyDlpV2ExclusionRulePtrOutput)
}

// Dictionary which defines the rule.
func (o GooglePrivacyDlpV2ExclusionRuleOutput) Dictionary() GooglePrivacyDlpV2DictionaryPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ExclusionRule) *GooglePrivacyDlpV2Dictionary { return v.Dictionary }).(GooglePrivacyDlpV2DictionaryPtrOutput)
}

// Set of infoTypes for which findings would affect this rule.
func (o GooglePrivacyDlpV2ExclusionRuleOutput) ExcludeInfoTypes() GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ExclusionRule) *GooglePrivacyDlpV2ExcludeInfoTypes { return v.ExcludeInfoTypes }).(GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput)
}

// How the rule is applied, see MatchingType documentation for details.
func (o GooglePrivacyDlpV2ExclusionRuleOutput) MatchingType() GooglePrivacyDlpV2ExclusionRuleMatchingTypePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ExclusionRule) *GooglePrivacyDlpV2ExclusionRuleMatchingType {
		return v.MatchingType
	}).(GooglePrivacyDlpV2ExclusionRuleMatchingTypePtrOutput)
}

// Regular expression which defines the rule.
func (o GooglePrivacyDlpV2ExclusionRuleOutput) Regex() GooglePrivacyDlpV2RegexPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ExclusionRule) *GooglePrivacyDlpV2Regex { return v.Regex }).(GooglePrivacyDlpV2RegexPtrOutput)
}

type GooglePrivacyDlpV2ExclusionRulePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ExclusionRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ExclusionRule)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ExclusionRulePtrOutput) ToGooglePrivacyDlpV2ExclusionRulePtrOutput() GooglePrivacyDlpV2ExclusionRulePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ExclusionRulePtrOutput) ToGooglePrivacyDlpV2ExclusionRulePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExclusionRulePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ExclusionRulePtrOutput) Elem() GooglePrivacyDlpV2ExclusionRuleOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ExclusionRule) GooglePrivacyDlpV2ExclusionRule {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2ExclusionRule
		return ret
	}).(GooglePrivacyDlpV2ExclusionRuleOutput)
}

// Dictionary which defines the rule.
func (o GooglePrivacyDlpV2ExclusionRulePtrOutput) Dictionary() GooglePrivacyDlpV2DictionaryPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ExclusionRule) *GooglePrivacyDlpV2Dictionary {
		if v == nil {
			return nil
		}
		return v.Dictionary
	}).(GooglePrivacyDlpV2DictionaryPtrOutput)
}

// Set of infoTypes for which findings would affect this rule.
func (o GooglePrivacyDlpV2ExclusionRulePtrOutput) ExcludeInfoTypes() GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ExclusionRule) *GooglePrivacyDlpV2ExcludeInfoTypes {
		if v == nil {
			return nil
		}
		return v.ExcludeInfoTypes
	}).(GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput)
}

// How the rule is applied, see MatchingType documentation for details.
func (o GooglePrivacyDlpV2ExclusionRulePtrOutput) MatchingType() GooglePrivacyDlpV2ExclusionRuleMatchingTypePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ExclusionRule) *GooglePrivacyDlpV2ExclusionRuleMatchingType {
		if v == nil {
			return nil
		}
		return v.MatchingType
	}).(GooglePrivacyDlpV2ExclusionRuleMatchingTypePtrOutput)
}

// Regular expression which defines the rule.
func (o GooglePrivacyDlpV2ExclusionRulePtrOutput) Regex() GooglePrivacyDlpV2RegexPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ExclusionRule) *GooglePrivacyDlpV2Regex {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(GooglePrivacyDlpV2RegexPtrOutput)
}

// The rule that specifies conditions when findings of infoTypes specified in `InspectionRuleSet` are removed from results.
type GooglePrivacyDlpV2ExclusionRuleResponse struct {
	// Dictionary which defines the rule.
	Dictionary GooglePrivacyDlpV2DictionaryResponse `pulumi:"dictionary"`
	// Set of infoTypes for which findings would affect this rule.
	ExcludeInfoTypes GooglePrivacyDlpV2ExcludeInfoTypesResponse `pulumi:"excludeInfoTypes"`
	// How the rule is applied, see MatchingType documentation for details.
	MatchingType string `pulumi:"matchingType"`
	// Regular expression which defines the rule.
	Regex GooglePrivacyDlpV2RegexResponse `pulumi:"regex"`
}

// GooglePrivacyDlpV2ExclusionRuleResponseInput is an input type that accepts GooglePrivacyDlpV2ExclusionRuleResponseArgs and GooglePrivacyDlpV2ExclusionRuleResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ExclusionRuleResponseInput` via:
//
//          GooglePrivacyDlpV2ExclusionRuleResponseArgs{...}
type GooglePrivacyDlpV2ExclusionRuleResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ExclusionRuleResponseOutput() GooglePrivacyDlpV2ExclusionRuleResponseOutput
	ToGooglePrivacyDlpV2ExclusionRuleResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ExclusionRuleResponseOutput
}

// The rule that specifies conditions when findings of infoTypes specified in `InspectionRuleSet` are removed from results.
type GooglePrivacyDlpV2ExclusionRuleResponseArgs struct {
	// Dictionary which defines the rule.
	Dictionary GooglePrivacyDlpV2DictionaryResponseInput `pulumi:"dictionary"`
	// Set of infoTypes for which findings would affect this rule.
	ExcludeInfoTypes GooglePrivacyDlpV2ExcludeInfoTypesResponseInput `pulumi:"excludeInfoTypes"`
	// How the rule is applied, see MatchingType documentation for details.
	MatchingType pulumi.StringInput `pulumi:"matchingType"`
	// Regular expression which defines the rule.
	Regex GooglePrivacyDlpV2RegexResponseInput `pulumi:"regex"`
}

func (GooglePrivacyDlpV2ExclusionRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ExclusionRuleResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ExclusionRuleResponseArgs) ToGooglePrivacyDlpV2ExclusionRuleResponseOutput() GooglePrivacyDlpV2ExclusionRuleResponseOutput {
	return i.ToGooglePrivacyDlpV2ExclusionRuleResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ExclusionRuleResponseArgs) ToGooglePrivacyDlpV2ExclusionRuleResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExclusionRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ExclusionRuleResponseOutput)
}

// The rule that specifies conditions when findings of infoTypes specified in `InspectionRuleSet` are removed from results.
type GooglePrivacyDlpV2ExclusionRuleResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ExclusionRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ExclusionRuleResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ExclusionRuleResponseOutput) ToGooglePrivacyDlpV2ExclusionRuleResponseOutput() GooglePrivacyDlpV2ExclusionRuleResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ExclusionRuleResponseOutput) ToGooglePrivacyDlpV2ExclusionRuleResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExclusionRuleResponseOutput {
	return o
}

// Dictionary which defines the rule.
func (o GooglePrivacyDlpV2ExclusionRuleResponseOutput) Dictionary() GooglePrivacyDlpV2DictionaryResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ExclusionRuleResponse) GooglePrivacyDlpV2DictionaryResponse {
		return v.Dictionary
	}).(GooglePrivacyDlpV2DictionaryResponseOutput)
}

// Set of infoTypes for which findings would affect this rule.
func (o GooglePrivacyDlpV2ExclusionRuleResponseOutput) ExcludeInfoTypes() GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ExclusionRuleResponse) GooglePrivacyDlpV2ExcludeInfoTypesResponse {
		return v.ExcludeInfoTypes
	}).(GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput)
}

// How the rule is applied, see MatchingType documentation for details.
func (o GooglePrivacyDlpV2ExclusionRuleResponseOutput) MatchingType() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ExclusionRuleResponse) string { return v.MatchingType }).(pulumi.StringOutput)
}

// Regular expression which defines the rule.
func (o GooglePrivacyDlpV2ExclusionRuleResponseOutput) Regex() GooglePrivacyDlpV2RegexResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ExclusionRuleResponse) GooglePrivacyDlpV2RegexResponse { return v.Regex }).(GooglePrivacyDlpV2RegexResponseOutput)
}

// An expression, consisting or an operator and conditions.
type GooglePrivacyDlpV2Expressions struct {
	// Conditions to apply to the expression.
	Conditions *GooglePrivacyDlpV2Conditions `pulumi:"conditions"`
	// The operator to apply to the result of conditions. Default and currently only supported value is `AND`.
	LogicalOperator *GooglePrivacyDlpV2ExpressionsLogicalOperator `pulumi:"logicalOperator"`
}

// GooglePrivacyDlpV2ExpressionsInput is an input type that accepts GooglePrivacyDlpV2ExpressionsArgs and GooglePrivacyDlpV2ExpressionsOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ExpressionsInput` via:
//
//          GooglePrivacyDlpV2ExpressionsArgs{...}
type GooglePrivacyDlpV2ExpressionsInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ExpressionsOutput() GooglePrivacyDlpV2ExpressionsOutput
	ToGooglePrivacyDlpV2ExpressionsOutputWithContext(context.Context) GooglePrivacyDlpV2ExpressionsOutput
}

// An expression, consisting or an operator and conditions.
type GooglePrivacyDlpV2ExpressionsArgs struct {
	// Conditions to apply to the expression.
	Conditions GooglePrivacyDlpV2ConditionsPtrInput `pulumi:"conditions"`
	// The operator to apply to the result of conditions. Default and currently only supported value is `AND`.
	LogicalOperator GooglePrivacyDlpV2ExpressionsLogicalOperatorPtrInput `pulumi:"logicalOperator"`
}

func (GooglePrivacyDlpV2ExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Expressions)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ExpressionsArgs) ToGooglePrivacyDlpV2ExpressionsOutput() GooglePrivacyDlpV2ExpressionsOutput {
	return i.ToGooglePrivacyDlpV2ExpressionsOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ExpressionsArgs) ToGooglePrivacyDlpV2ExpressionsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ExpressionsOutput)
}

func (i GooglePrivacyDlpV2ExpressionsArgs) ToGooglePrivacyDlpV2ExpressionsPtrOutput() GooglePrivacyDlpV2ExpressionsPtrOutput {
	return i.ToGooglePrivacyDlpV2ExpressionsPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ExpressionsArgs) ToGooglePrivacyDlpV2ExpressionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExpressionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ExpressionsOutput).ToGooglePrivacyDlpV2ExpressionsPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2ExpressionsPtrInput is an input type that accepts GooglePrivacyDlpV2ExpressionsArgs, GooglePrivacyDlpV2ExpressionsPtr and GooglePrivacyDlpV2ExpressionsPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ExpressionsPtrInput` via:
//
//          GooglePrivacyDlpV2ExpressionsArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2ExpressionsPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ExpressionsPtrOutput() GooglePrivacyDlpV2ExpressionsPtrOutput
	ToGooglePrivacyDlpV2ExpressionsPtrOutputWithContext(context.Context) GooglePrivacyDlpV2ExpressionsPtrOutput
}

type googlePrivacyDlpV2ExpressionsPtrType GooglePrivacyDlpV2ExpressionsArgs

func GooglePrivacyDlpV2ExpressionsPtr(v *GooglePrivacyDlpV2ExpressionsArgs) GooglePrivacyDlpV2ExpressionsPtrInput {
	return (*googlePrivacyDlpV2ExpressionsPtrType)(v)
}

func (*googlePrivacyDlpV2ExpressionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Expressions)(nil)).Elem()
}

func (i *googlePrivacyDlpV2ExpressionsPtrType) ToGooglePrivacyDlpV2ExpressionsPtrOutput() GooglePrivacyDlpV2ExpressionsPtrOutput {
	return i.ToGooglePrivacyDlpV2ExpressionsPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2ExpressionsPtrType) ToGooglePrivacyDlpV2ExpressionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExpressionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ExpressionsPtrOutput)
}

// An expression, consisting or an operator and conditions.
type GooglePrivacyDlpV2ExpressionsOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Expressions)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ExpressionsOutput) ToGooglePrivacyDlpV2ExpressionsOutput() GooglePrivacyDlpV2ExpressionsOutput {
	return o
}

func (o GooglePrivacyDlpV2ExpressionsOutput) ToGooglePrivacyDlpV2ExpressionsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExpressionsOutput {
	return o
}

func (o GooglePrivacyDlpV2ExpressionsOutput) ToGooglePrivacyDlpV2ExpressionsPtrOutput() GooglePrivacyDlpV2ExpressionsPtrOutput {
	return o.ToGooglePrivacyDlpV2ExpressionsPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2ExpressionsOutput) ToGooglePrivacyDlpV2ExpressionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExpressionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2Expressions) *GooglePrivacyDlpV2Expressions {
		return &v
	}).(GooglePrivacyDlpV2ExpressionsPtrOutput)
}

// Conditions to apply to the expression.
func (o GooglePrivacyDlpV2ExpressionsOutput) Conditions() GooglePrivacyDlpV2ConditionsPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Expressions) *GooglePrivacyDlpV2Conditions { return v.Conditions }).(GooglePrivacyDlpV2ConditionsPtrOutput)
}

// The operator to apply to the result of conditions. Default and currently only supported value is `AND`.
func (o GooglePrivacyDlpV2ExpressionsOutput) LogicalOperator() GooglePrivacyDlpV2ExpressionsLogicalOperatorPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Expressions) *GooglePrivacyDlpV2ExpressionsLogicalOperator {
		return v.LogicalOperator
	}).(GooglePrivacyDlpV2ExpressionsLogicalOperatorPtrOutput)
}

type GooglePrivacyDlpV2ExpressionsPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ExpressionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Expressions)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ExpressionsPtrOutput) ToGooglePrivacyDlpV2ExpressionsPtrOutput() GooglePrivacyDlpV2ExpressionsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ExpressionsPtrOutput) ToGooglePrivacyDlpV2ExpressionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExpressionsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ExpressionsPtrOutput) Elem() GooglePrivacyDlpV2ExpressionsOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Expressions) GooglePrivacyDlpV2Expressions {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2Expressions
		return ret
	}).(GooglePrivacyDlpV2ExpressionsOutput)
}

// Conditions to apply to the expression.
func (o GooglePrivacyDlpV2ExpressionsPtrOutput) Conditions() GooglePrivacyDlpV2ConditionsPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Expressions) *GooglePrivacyDlpV2Conditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(GooglePrivacyDlpV2ConditionsPtrOutput)
}

// The operator to apply to the result of conditions. Default and currently only supported value is `AND`.
func (o GooglePrivacyDlpV2ExpressionsPtrOutput) LogicalOperator() GooglePrivacyDlpV2ExpressionsLogicalOperatorPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Expressions) *GooglePrivacyDlpV2ExpressionsLogicalOperator {
		if v == nil {
			return nil
		}
		return v.LogicalOperator
	}).(GooglePrivacyDlpV2ExpressionsLogicalOperatorPtrOutput)
}

// An expression, consisting or an operator and conditions.
type GooglePrivacyDlpV2ExpressionsResponse struct {
	// Conditions to apply to the expression.
	Conditions GooglePrivacyDlpV2ConditionsResponse `pulumi:"conditions"`
	// The operator to apply to the result of conditions. Default and currently only supported value is `AND`.
	LogicalOperator string `pulumi:"logicalOperator"`
}

// GooglePrivacyDlpV2ExpressionsResponseInput is an input type that accepts GooglePrivacyDlpV2ExpressionsResponseArgs and GooglePrivacyDlpV2ExpressionsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ExpressionsResponseInput` via:
//
//          GooglePrivacyDlpV2ExpressionsResponseArgs{...}
type GooglePrivacyDlpV2ExpressionsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ExpressionsResponseOutput() GooglePrivacyDlpV2ExpressionsResponseOutput
	ToGooglePrivacyDlpV2ExpressionsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ExpressionsResponseOutput
}

// An expression, consisting or an operator and conditions.
type GooglePrivacyDlpV2ExpressionsResponseArgs struct {
	// Conditions to apply to the expression.
	Conditions GooglePrivacyDlpV2ConditionsResponseInput `pulumi:"conditions"`
	// The operator to apply to the result of conditions. Default and currently only supported value is `AND`.
	LogicalOperator pulumi.StringInput `pulumi:"logicalOperator"`
}

func (GooglePrivacyDlpV2ExpressionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ExpressionsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ExpressionsResponseArgs) ToGooglePrivacyDlpV2ExpressionsResponseOutput() GooglePrivacyDlpV2ExpressionsResponseOutput {
	return i.ToGooglePrivacyDlpV2ExpressionsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ExpressionsResponseArgs) ToGooglePrivacyDlpV2ExpressionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExpressionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ExpressionsResponseOutput)
}

// An expression, consisting or an operator and conditions.
type GooglePrivacyDlpV2ExpressionsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ExpressionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ExpressionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ExpressionsResponseOutput) ToGooglePrivacyDlpV2ExpressionsResponseOutput() GooglePrivacyDlpV2ExpressionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ExpressionsResponseOutput) ToGooglePrivacyDlpV2ExpressionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ExpressionsResponseOutput {
	return o
}

// Conditions to apply to the expression.
func (o GooglePrivacyDlpV2ExpressionsResponseOutput) Conditions() GooglePrivacyDlpV2ConditionsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ExpressionsResponse) GooglePrivacyDlpV2ConditionsResponse {
		return v.Conditions
	}).(GooglePrivacyDlpV2ConditionsResponseOutput)
}

// The operator to apply to the result of conditions. Default and currently only supported value is `AND`.
func (o GooglePrivacyDlpV2ExpressionsResponseOutput) LogicalOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ExpressionsResponse) string { return v.LogicalOperator }).(pulumi.StringOutput)
}

// General identifier of a data field in a storage service.
type GooglePrivacyDlpV2FieldId struct {
	// Name describing the field.
	Name *string `pulumi:"name"`
}

// GooglePrivacyDlpV2FieldIdInput is an input type that accepts GooglePrivacyDlpV2FieldIdArgs and GooglePrivacyDlpV2FieldIdOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FieldIdInput` via:
//
//          GooglePrivacyDlpV2FieldIdArgs{...}
type GooglePrivacyDlpV2FieldIdInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FieldIdOutput() GooglePrivacyDlpV2FieldIdOutput
	ToGooglePrivacyDlpV2FieldIdOutputWithContext(context.Context) GooglePrivacyDlpV2FieldIdOutput
}

// General identifier of a data field in a storage service.
type GooglePrivacyDlpV2FieldIdArgs struct {
	// Name describing the field.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GooglePrivacyDlpV2FieldIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FieldId)(nil)).Elem()
}

func (i GooglePrivacyDlpV2FieldIdArgs) ToGooglePrivacyDlpV2FieldIdOutput() GooglePrivacyDlpV2FieldIdOutput {
	return i.ToGooglePrivacyDlpV2FieldIdOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FieldIdArgs) ToGooglePrivacyDlpV2FieldIdOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FieldIdOutput)
}

func (i GooglePrivacyDlpV2FieldIdArgs) ToGooglePrivacyDlpV2FieldIdPtrOutput() GooglePrivacyDlpV2FieldIdPtrOutput {
	return i.ToGooglePrivacyDlpV2FieldIdPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FieldIdArgs) ToGooglePrivacyDlpV2FieldIdPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FieldIdOutput).ToGooglePrivacyDlpV2FieldIdPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2FieldIdPtrInput is an input type that accepts GooglePrivacyDlpV2FieldIdArgs, GooglePrivacyDlpV2FieldIdPtr and GooglePrivacyDlpV2FieldIdPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FieldIdPtrInput` via:
//
//          GooglePrivacyDlpV2FieldIdArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2FieldIdPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FieldIdPtrOutput() GooglePrivacyDlpV2FieldIdPtrOutput
	ToGooglePrivacyDlpV2FieldIdPtrOutputWithContext(context.Context) GooglePrivacyDlpV2FieldIdPtrOutput
}

type googlePrivacyDlpV2FieldIdPtrType GooglePrivacyDlpV2FieldIdArgs

func GooglePrivacyDlpV2FieldIdPtr(v *GooglePrivacyDlpV2FieldIdArgs) GooglePrivacyDlpV2FieldIdPtrInput {
	return (*googlePrivacyDlpV2FieldIdPtrType)(v)
}

func (*googlePrivacyDlpV2FieldIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2FieldId)(nil)).Elem()
}

func (i *googlePrivacyDlpV2FieldIdPtrType) ToGooglePrivacyDlpV2FieldIdPtrOutput() GooglePrivacyDlpV2FieldIdPtrOutput {
	return i.ToGooglePrivacyDlpV2FieldIdPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2FieldIdPtrType) ToGooglePrivacyDlpV2FieldIdPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// GooglePrivacyDlpV2FieldIdArrayInput is an input type that accepts GooglePrivacyDlpV2FieldIdArray and GooglePrivacyDlpV2FieldIdArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FieldIdArrayInput` via:
//
//          GooglePrivacyDlpV2FieldIdArray{ GooglePrivacyDlpV2FieldIdArgs{...} }
type GooglePrivacyDlpV2FieldIdArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FieldIdArrayOutput() GooglePrivacyDlpV2FieldIdArrayOutput
	ToGooglePrivacyDlpV2FieldIdArrayOutputWithContext(context.Context) GooglePrivacyDlpV2FieldIdArrayOutput
}

type GooglePrivacyDlpV2FieldIdArray []GooglePrivacyDlpV2FieldIdInput

func (GooglePrivacyDlpV2FieldIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2FieldId)(nil)).Elem()
}

func (i GooglePrivacyDlpV2FieldIdArray) ToGooglePrivacyDlpV2FieldIdArrayOutput() GooglePrivacyDlpV2FieldIdArrayOutput {
	return i.ToGooglePrivacyDlpV2FieldIdArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FieldIdArray) ToGooglePrivacyDlpV2FieldIdArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FieldIdArrayOutput)
}

// General identifier of a data field in a storage service.
type GooglePrivacyDlpV2FieldIdOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FieldIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FieldId)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FieldIdOutput) ToGooglePrivacyDlpV2FieldIdOutput() GooglePrivacyDlpV2FieldIdOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldIdOutput) ToGooglePrivacyDlpV2FieldIdOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldIdOutput) ToGooglePrivacyDlpV2FieldIdPtrOutput() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ToGooglePrivacyDlpV2FieldIdPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2FieldIdOutput) ToGooglePrivacyDlpV2FieldIdPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2FieldId) *GooglePrivacyDlpV2FieldId {
		return &v
	}).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// Name describing the field.
func (o GooglePrivacyDlpV2FieldIdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FieldId) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2FieldIdPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FieldIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2FieldId)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FieldIdPtrOutput) ToGooglePrivacyDlpV2FieldIdPtrOutput() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldIdPtrOutput) ToGooglePrivacyDlpV2FieldIdPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldIdPtrOutput) Elem() GooglePrivacyDlpV2FieldIdOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FieldId) GooglePrivacyDlpV2FieldId {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2FieldId
		return ret
	}).(GooglePrivacyDlpV2FieldIdOutput)
}

// Name describing the field.
func (o GooglePrivacyDlpV2FieldIdPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FieldId) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2FieldIdArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FieldIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2FieldId)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FieldIdArrayOutput) ToGooglePrivacyDlpV2FieldIdArrayOutput() GooglePrivacyDlpV2FieldIdArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldIdArrayOutput) ToGooglePrivacyDlpV2FieldIdArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldIdArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2FieldIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2FieldId {
		return vs[0].([]GooglePrivacyDlpV2FieldId)[vs[1].(int)]
	}).(GooglePrivacyDlpV2FieldIdOutput)
}

// General identifier of a data field in a storage service.
type GooglePrivacyDlpV2FieldIdResponse struct {
	// Name describing the field.
	Name string `pulumi:"name"`
}

// GooglePrivacyDlpV2FieldIdResponseInput is an input type that accepts GooglePrivacyDlpV2FieldIdResponseArgs and GooglePrivacyDlpV2FieldIdResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FieldIdResponseInput` via:
//
//          GooglePrivacyDlpV2FieldIdResponseArgs{...}
type GooglePrivacyDlpV2FieldIdResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FieldIdResponseOutput() GooglePrivacyDlpV2FieldIdResponseOutput
	ToGooglePrivacyDlpV2FieldIdResponseOutputWithContext(context.Context) GooglePrivacyDlpV2FieldIdResponseOutput
}

// General identifier of a data field in a storage service.
type GooglePrivacyDlpV2FieldIdResponseArgs struct {
	// Name describing the field.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GooglePrivacyDlpV2FieldIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FieldIdResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2FieldIdResponseArgs) ToGooglePrivacyDlpV2FieldIdResponseOutput() GooglePrivacyDlpV2FieldIdResponseOutput {
	return i.ToGooglePrivacyDlpV2FieldIdResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FieldIdResponseArgs) ToGooglePrivacyDlpV2FieldIdResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

func (i GooglePrivacyDlpV2FieldIdResponseArgs) ToGooglePrivacyDlpV2FieldIdResponsePtrOutput() GooglePrivacyDlpV2FieldIdResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2FieldIdResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FieldIdResponseArgs) ToGooglePrivacyDlpV2FieldIdResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FieldIdResponseOutput).ToGooglePrivacyDlpV2FieldIdResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2FieldIdResponsePtrInput is an input type that accepts GooglePrivacyDlpV2FieldIdResponseArgs, GooglePrivacyDlpV2FieldIdResponsePtr and GooglePrivacyDlpV2FieldIdResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FieldIdResponsePtrInput` via:
//
//          GooglePrivacyDlpV2FieldIdResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2FieldIdResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FieldIdResponsePtrOutput() GooglePrivacyDlpV2FieldIdResponsePtrOutput
	ToGooglePrivacyDlpV2FieldIdResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2FieldIdResponsePtrOutput
}

type googlePrivacyDlpV2FieldIdResponsePtrType GooglePrivacyDlpV2FieldIdResponseArgs

func GooglePrivacyDlpV2FieldIdResponsePtr(v *GooglePrivacyDlpV2FieldIdResponseArgs) GooglePrivacyDlpV2FieldIdResponsePtrInput {
	return (*googlePrivacyDlpV2FieldIdResponsePtrType)(v)
}

func (*googlePrivacyDlpV2FieldIdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2FieldIdResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2FieldIdResponsePtrType) ToGooglePrivacyDlpV2FieldIdResponsePtrOutput() GooglePrivacyDlpV2FieldIdResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2FieldIdResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2FieldIdResponsePtrType) ToGooglePrivacyDlpV2FieldIdResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FieldIdResponsePtrOutput)
}

// GooglePrivacyDlpV2FieldIdResponseArrayInput is an input type that accepts GooglePrivacyDlpV2FieldIdResponseArray and GooglePrivacyDlpV2FieldIdResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FieldIdResponseArrayInput` via:
//
//          GooglePrivacyDlpV2FieldIdResponseArray{ GooglePrivacyDlpV2FieldIdResponseArgs{...} }
type GooglePrivacyDlpV2FieldIdResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FieldIdResponseArrayOutput() GooglePrivacyDlpV2FieldIdResponseArrayOutput
	ToGooglePrivacyDlpV2FieldIdResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2FieldIdResponseArrayOutput
}

type GooglePrivacyDlpV2FieldIdResponseArray []GooglePrivacyDlpV2FieldIdResponseInput

func (GooglePrivacyDlpV2FieldIdResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2FieldIdResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2FieldIdResponseArray) ToGooglePrivacyDlpV2FieldIdResponseArrayOutput() GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2FieldIdResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FieldIdResponseArray) ToGooglePrivacyDlpV2FieldIdResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FieldIdResponseArrayOutput)
}

// General identifier of a data field in a storage service.
type GooglePrivacyDlpV2FieldIdResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FieldIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FieldIdResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FieldIdResponseOutput) ToGooglePrivacyDlpV2FieldIdResponseOutput() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldIdResponseOutput) ToGooglePrivacyDlpV2FieldIdResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldIdResponseOutput) ToGooglePrivacyDlpV2FieldIdResponsePtrOutput() GooglePrivacyDlpV2FieldIdResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2FieldIdResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2FieldIdResponseOutput) ToGooglePrivacyDlpV2FieldIdResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2FieldIdResponse) *GooglePrivacyDlpV2FieldIdResponse {
		return &v
	}).(GooglePrivacyDlpV2FieldIdResponsePtrOutput)
}

// Name describing the field.
func (o GooglePrivacyDlpV2FieldIdResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FieldIdResponse) string { return v.Name }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2FieldIdResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FieldIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2FieldIdResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FieldIdResponsePtrOutput) ToGooglePrivacyDlpV2FieldIdResponsePtrOutput() GooglePrivacyDlpV2FieldIdResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldIdResponsePtrOutput) ToGooglePrivacyDlpV2FieldIdResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldIdResponsePtrOutput) Elem() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FieldIdResponse) GooglePrivacyDlpV2FieldIdResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2FieldIdResponse
		return ret
	}).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

// Name describing the field.
func (o GooglePrivacyDlpV2FieldIdResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FieldIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2FieldIdResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FieldIdResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2FieldIdResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FieldIdResponseArrayOutput) ToGooglePrivacyDlpV2FieldIdResponseArrayOutput() GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldIdResponseArrayOutput) ToGooglePrivacyDlpV2FieldIdResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldIdResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2FieldIdResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2FieldIdResponse {
		return vs[0].([]GooglePrivacyDlpV2FieldIdResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

// The transformation to apply to the field.
type GooglePrivacyDlpV2FieldTransformation struct {
	// Only apply the transformation if the condition evaluates to true for the given `RecordCondition`. The conditions are allowed to reference fields that are not used in the actual transformation. Example Use Cases: - Apply a different bucket transformation to an age column if the zip code column for the same record is within a specific range. - Redact a field if the date of birth field is greater than 85.
	Condition *GooglePrivacyDlpV2RecordCondition `pulumi:"condition"`
	// Input field(s) to apply the transformation to. When you have columns that reference their position within a list, omit the index from the FieldId. FieldId name matching ignores the index. For example, instead of "contact.nums[0].type", use "contact.nums.type".
	Fields []GooglePrivacyDlpV2FieldId `pulumi:"fields"`
	// Treat the contents of the field as free text, and selectively transform content that matches an `InfoType`.
	InfoTypeTransformations *GooglePrivacyDlpV2InfoTypeTransformations `pulumi:"infoTypeTransformations"`
	// Apply the transformation to the entire field.
	PrimitiveTransformation *GooglePrivacyDlpV2PrimitiveTransformation `pulumi:"primitiveTransformation"`
}

// GooglePrivacyDlpV2FieldTransformationInput is an input type that accepts GooglePrivacyDlpV2FieldTransformationArgs and GooglePrivacyDlpV2FieldTransformationOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FieldTransformationInput` via:
//
//          GooglePrivacyDlpV2FieldTransformationArgs{...}
type GooglePrivacyDlpV2FieldTransformationInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FieldTransformationOutput() GooglePrivacyDlpV2FieldTransformationOutput
	ToGooglePrivacyDlpV2FieldTransformationOutputWithContext(context.Context) GooglePrivacyDlpV2FieldTransformationOutput
}

// The transformation to apply to the field.
type GooglePrivacyDlpV2FieldTransformationArgs struct {
	// Only apply the transformation if the condition evaluates to true for the given `RecordCondition`. The conditions are allowed to reference fields that are not used in the actual transformation. Example Use Cases: - Apply a different bucket transformation to an age column if the zip code column for the same record is within a specific range. - Redact a field if the date of birth field is greater than 85.
	Condition GooglePrivacyDlpV2RecordConditionPtrInput `pulumi:"condition"`
	// Input field(s) to apply the transformation to. When you have columns that reference their position within a list, omit the index from the FieldId. FieldId name matching ignores the index. For example, instead of "contact.nums[0].type", use "contact.nums.type".
	Fields GooglePrivacyDlpV2FieldIdArrayInput `pulumi:"fields"`
	// Treat the contents of the field as free text, and selectively transform content that matches an `InfoType`.
	InfoTypeTransformations GooglePrivacyDlpV2InfoTypeTransformationsPtrInput `pulumi:"infoTypeTransformations"`
	// Apply the transformation to the entire field.
	PrimitiveTransformation GooglePrivacyDlpV2PrimitiveTransformationPtrInput `pulumi:"primitiveTransformation"`
}

func (GooglePrivacyDlpV2FieldTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FieldTransformation)(nil)).Elem()
}

func (i GooglePrivacyDlpV2FieldTransformationArgs) ToGooglePrivacyDlpV2FieldTransformationOutput() GooglePrivacyDlpV2FieldTransformationOutput {
	return i.ToGooglePrivacyDlpV2FieldTransformationOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FieldTransformationArgs) ToGooglePrivacyDlpV2FieldTransformationOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FieldTransformationOutput)
}

// GooglePrivacyDlpV2FieldTransformationArrayInput is an input type that accepts GooglePrivacyDlpV2FieldTransformationArray and GooglePrivacyDlpV2FieldTransformationArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FieldTransformationArrayInput` via:
//
//          GooglePrivacyDlpV2FieldTransformationArray{ GooglePrivacyDlpV2FieldTransformationArgs{...} }
type GooglePrivacyDlpV2FieldTransformationArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FieldTransformationArrayOutput() GooglePrivacyDlpV2FieldTransformationArrayOutput
	ToGooglePrivacyDlpV2FieldTransformationArrayOutputWithContext(context.Context) GooglePrivacyDlpV2FieldTransformationArrayOutput
}

type GooglePrivacyDlpV2FieldTransformationArray []GooglePrivacyDlpV2FieldTransformationInput

func (GooglePrivacyDlpV2FieldTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2FieldTransformation)(nil)).Elem()
}

func (i GooglePrivacyDlpV2FieldTransformationArray) ToGooglePrivacyDlpV2FieldTransformationArrayOutput() GooglePrivacyDlpV2FieldTransformationArrayOutput {
	return i.ToGooglePrivacyDlpV2FieldTransformationArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FieldTransformationArray) ToGooglePrivacyDlpV2FieldTransformationArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FieldTransformationArrayOutput)
}

// The transformation to apply to the field.
type GooglePrivacyDlpV2FieldTransformationOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FieldTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FieldTransformation)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FieldTransformationOutput) ToGooglePrivacyDlpV2FieldTransformationOutput() GooglePrivacyDlpV2FieldTransformationOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldTransformationOutput) ToGooglePrivacyDlpV2FieldTransformationOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldTransformationOutput {
	return o
}

// Only apply the transformation if the condition evaluates to true for the given `RecordCondition`. The conditions are allowed to reference fields that are not used in the actual transformation. Example Use Cases: - Apply a different bucket transformation to an age column if the zip code column for the same record is within a specific range. - Redact a field if the date of birth field is greater than 85.
func (o GooglePrivacyDlpV2FieldTransformationOutput) Condition() GooglePrivacyDlpV2RecordConditionPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FieldTransformation) *GooglePrivacyDlpV2RecordCondition { return v.Condition }).(GooglePrivacyDlpV2RecordConditionPtrOutput)
}

// Input field(s) to apply the transformation to. When you have columns that reference their position within a list, omit the index from the FieldId. FieldId name matching ignores the index. For example, instead of "contact.nums[0].type", use "contact.nums.type".
func (o GooglePrivacyDlpV2FieldTransformationOutput) Fields() GooglePrivacyDlpV2FieldIdArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FieldTransformation) []GooglePrivacyDlpV2FieldId { return v.Fields }).(GooglePrivacyDlpV2FieldIdArrayOutput)
}

// Treat the contents of the field as free text, and selectively transform content that matches an `InfoType`.
func (o GooglePrivacyDlpV2FieldTransformationOutput) InfoTypeTransformations() GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FieldTransformation) *GooglePrivacyDlpV2InfoTypeTransformations {
		return v.InfoTypeTransformations
	}).(GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput)
}

// Apply the transformation to the entire field.
func (o GooglePrivacyDlpV2FieldTransformationOutput) PrimitiveTransformation() GooglePrivacyDlpV2PrimitiveTransformationPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FieldTransformation) *GooglePrivacyDlpV2PrimitiveTransformation {
		return v.PrimitiveTransformation
	}).(GooglePrivacyDlpV2PrimitiveTransformationPtrOutput)
}

type GooglePrivacyDlpV2FieldTransformationArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FieldTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2FieldTransformation)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FieldTransformationArrayOutput) ToGooglePrivacyDlpV2FieldTransformationArrayOutput() GooglePrivacyDlpV2FieldTransformationArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldTransformationArrayOutput) ToGooglePrivacyDlpV2FieldTransformationArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldTransformationArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldTransformationArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2FieldTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2FieldTransformation {
		return vs[0].([]GooglePrivacyDlpV2FieldTransformation)[vs[1].(int)]
	}).(GooglePrivacyDlpV2FieldTransformationOutput)
}

// The transformation to apply to the field.
type GooglePrivacyDlpV2FieldTransformationResponse struct {
	// Only apply the transformation if the condition evaluates to true for the given `RecordCondition`. The conditions are allowed to reference fields that are not used in the actual transformation. Example Use Cases: - Apply a different bucket transformation to an age column if the zip code column for the same record is within a specific range. - Redact a field if the date of birth field is greater than 85.
	Condition GooglePrivacyDlpV2RecordConditionResponse `pulumi:"condition"`
	// Input field(s) to apply the transformation to. When you have columns that reference their position within a list, omit the index from the FieldId. FieldId name matching ignores the index. For example, instead of "contact.nums[0].type", use "contact.nums.type".
	Fields []GooglePrivacyDlpV2FieldIdResponse `pulumi:"fields"`
	// Treat the contents of the field as free text, and selectively transform content that matches an `InfoType`.
	InfoTypeTransformations GooglePrivacyDlpV2InfoTypeTransformationsResponse `pulumi:"infoTypeTransformations"`
	// Apply the transformation to the entire field.
	PrimitiveTransformation GooglePrivacyDlpV2PrimitiveTransformationResponse `pulumi:"primitiveTransformation"`
}

// GooglePrivacyDlpV2FieldTransformationResponseInput is an input type that accepts GooglePrivacyDlpV2FieldTransformationResponseArgs and GooglePrivacyDlpV2FieldTransformationResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FieldTransformationResponseInput` via:
//
//          GooglePrivacyDlpV2FieldTransformationResponseArgs{...}
type GooglePrivacyDlpV2FieldTransformationResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FieldTransformationResponseOutput() GooglePrivacyDlpV2FieldTransformationResponseOutput
	ToGooglePrivacyDlpV2FieldTransformationResponseOutputWithContext(context.Context) GooglePrivacyDlpV2FieldTransformationResponseOutput
}

// The transformation to apply to the field.
type GooglePrivacyDlpV2FieldTransformationResponseArgs struct {
	// Only apply the transformation if the condition evaluates to true for the given `RecordCondition`. The conditions are allowed to reference fields that are not used in the actual transformation. Example Use Cases: - Apply a different bucket transformation to an age column if the zip code column for the same record is within a specific range. - Redact a field if the date of birth field is greater than 85.
	Condition GooglePrivacyDlpV2RecordConditionResponseInput `pulumi:"condition"`
	// Input field(s) to apply the transformation to. When you have columns that reference their position within a list, omit the index from the FieldId. FieldId name matching ignores the index. For example, instead of "contact.nums[0].type", use "contact.nums.type".
	Fields GooglePrivacyDlpV2FieldIdResponseArrayInput `pulumi:"fields"`
	// Treat the contents of the field as free text, and selectively transform content that matches an `InfoType`.
	InfoTypeTransformations GooglePrivacyDlpV2InfoTypeTransformationsResponseInput `pulumi:"infoTypeTransformations"`
	// Apply the transformation to the entire field.
	PrimitiveTransformation GooglePrivacyDlpV2PrimitiveTransformationResponseInput `pulumi:"primitiveTransformation"`
}

func (GooglePrivacyDlpV2FieldTransformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FieldTransformationResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2FieldTransformationResponseArgs) ToGooglePrivacyDlpV2FieldTransformationResponseOutput() GooglePrivacyDlpV2FieldTransformationResponseOutput {
	return i.ToGooglePrivacyDlpV2FieldTransformationResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FieldTransformationResponseArgs) ToGooglePrivacyDlpV2FieldTransformationResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldTransformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FieldTransformationResponseOutput)
}

// GooglePrivacyDlpV2FieldTransformationResponseArrayInput is an input type that accepts GooglePrivacyDlpV2FieldTransformationResponseArray and GooglePrivacyDlpV2FieldTransformationResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FieldTransformationResponseArrayInput` via:
//
//          GooglePrivacyDlpV2FieldTransformationResponseArray{ GooglePrivacyDlpV2FieldTransformationResponseArgs{...} }
type GooglePrivacyDlpV2FieldTransformationResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FieldTransformationResponseArrayOutput() GooglePrivacyDlpV2FieldTransformationResponseArrayOutput
	ToGooglePrivacyDlpV2FieldTransformationResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2FieldTransformationResponseArrayOutput
}

type GooglePrivacyDlpV2FieldTransformationResponseArray []GooglePrivacyDlpV2FieldTransformationResponseInput

func (GooglePrivacyDlpV2FieldTransformationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2FieldTransformationResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2FieldTransformationResponseArray) ToGooglePrivacyDlpV2FieldTransformationResponseArrayOutput() GooglePrivacyDlpV2FieldTransformationResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2FieldTransformationResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FieldTransformationResponseArray) ToGooglePrivacyDlpV2FieldTransformationResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldTransformationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FieldTransformationResponseArrayOutput)
}

// The transformation to apply to the field.
type GooglePrivacyDlpV2FieldTransformationResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FieldTransformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FieldTransformationResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FieldTransformationResponseOutput) ToGooglePrivacyDlpV2FieldTransformationResponseOutput() GooglePrivacyDlpV2FieldTransformationResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldTransformationResponseOutput) ToGooglePrivacyDlpV2FieldTransformationResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldTransformationResponseOutput {
	return o
}

// Only apply the transformation if the condition evaluates to true for the given `RecordCondition`. The conditions are allowed to reference fields that are not used in the actual transformation. Example Use Cases: - Apply a different bucket transformation to an age column if the zip code column for the same record is within a specific range. - Redact a field if the date of birth field is greater than 85.
func (o GooglePrivacyDlpV2FieldTransformationResponseOutput) Condition() GooglePrivacyDlpV2RecordConditionResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FieldTransformationResponse) GooglePrivacyDlpV2RecordConditionResponse {
		return v.Condition
	}).(GooglePrivacyDlpV2RecordConditionResponseOutput)
}

// Input field(s) to apply the transformation to. When you have columns that reference their position within a list, omit the index from the FieldId. FieldId name matching ignores the index. For example, instead of "contact.nums[0].type", use "contact.nums.type".
func (o GooglePrivacyDlpV2FieldTransformationResponseOutput) Fields() GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FieldTransformationResponse) []GooglePrivacyDlpV2FieldIdResponse {
		return v.Fields
	}).(GooglePrivacyDlpV2FieldIdResponseArrayOutput)
}

// Treat the contents of the field as free text, and selectively transform content that matches an `InfoType`.
func (o GooglePrivacyDlpV2FieldTransformationResponseOutput) InfoTypeTransformations() GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FieldTransformationResponse) GooglePrivacyDlpV2InfoTypeTransformationsResponse {
		return v.InfoTypeTransformations
	}).(GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput)
}

// Apply the transformation to the entire field.
func (o GooglePrivacyDlpV2FieldTransformationResponseOutput) PrimitiveTransformation() GooglePrivacyDlpV2PrimitiveTransformationResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FieldTransformationResponse) GooglePrivacyDlpV2PrimitiveTransformationResponse {
		return v.PrimitiveTransformation
	}).(GooglePrivacyDlpV2PrimitiveTransformationResponseOutput)
}

type GooglePrivacyDlpV2FieldTransformationResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FieldTransformationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2FieldTransformationResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FieldTransformationResponseArrayOutput) ToGooglePrivacyDlpV2FieldTransformationResponseArrayOutput() GooglePrivacyDlpV2FieldTransformationResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldTransformationResponseArrayOutput) ToGooglePrivacyDlpV2FieldTransformationResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FieldTransformationResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2FieldTransformationResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2FieldTransformationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2FieldTransformationResponse {
		return vs[0].([]GooglePrivacyDlpV2FieldTransformationResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2FieldTransformationResponseOutput)
}

// Set of files to scan.
type GooglePrivacyDlpV2FileSet struct {
	// The regex-filtered set of files to scan. Exactly one of `url` or `regex_file_set` must be set.
	RegexFileSet *GooglePrivacyDlpV2CloudStorageRegexFileSet `pulumi:"regexFileSet"`
	// The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set.
	Url *string `pulumi:"url"`
}

// GooglePrivacyDlpV2FileSetInput is an input type that accepts GooglePrivacyDlpV2FileSetArgs and GooglePrivacyDlpV2FileSetOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FileSetInput` via:
//
//          GooglePrivacyDlpV2FileSetArgs{...}
type GooglePrivacyDlpV2FileSetInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FileSetOutput() GooglePrivacyDlpV2FileSetOutput
	ToGooglePrivacyDlpV2FileSetOutputWithContext(context.Context) GooglePrivacyDlpV2FileSetOutput
}

// Set of files to scan.
type GooglePrivacyDlpV2FileSetArgs struct {
	// The regex-filtered set of files to scan. Exactly one of `url` or `regex_file_set` must be set.
	RegexFileSet GooglePrivacyDlpV2CloudStorageRegexFileSetPtrInput `pulumi:"regexFileSet"`
	// The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (GooglePrivacyDlpV2FileSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FileSet)(nil)).Elem()
}

func (i GooglePrivacyDlpV2FileSetArgs) ToGooglePrivacyDlpV2FileSetOutput() GooglePrivacyDlpV2FileSetOutput {
	return i.ToGooglePrivacyDlpV2FileSetOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FileSetArgs) ToGooglePrivacyDlpV2FileSetOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FileSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FileSetOutput)
}

func (i GooglePrivacyDlpV2FileSetArgs) ToGooglePrivacyDlpV2FileSetPtrOutput() GooglePrivacyDlpV2FileSetPtrOutput {
	return i.ToGooglePrivacyDlpV2FileSetPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FileSetArgs) ToGooglePrivacyDlpV2FileSetPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FileSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FileSetOutput).ToGooglePrivacyDlpV2FileSetPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2FileSetPtrInput is an input type that accepts GooglePrivacyDlpV2FileSetArgs, GooglePrivacyDlpV2FileSetPtr and GooglePrivacyDlpV2FileSetPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FileSetPtrInput` via:
//
//          GooglePrivacyDlpV2FileSetArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2FileSetPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FileSetPtrOutput() GooglePrivacyDlpV2FileSetPtrOutput
	ToGooglePrivacyDlpV2FileSetPtrOutputWithContext(context.Context) GooglePrivacyDlpV2FileSetPtrOutput
}

type googlePrivacyDlpV2FileSetPtrType GooglePrivacyDlpV2FileSetArgs

func GooglePrivacyDlpV2FileSetPtr(v *GooglePrivacyDlpV2FileSetArgs) GooglePrivacyDlpV2FileSetPtrInput {
	return (*googlePrivacyDlpV2FileSetPtrType)(v)
}

func (*googlePrivacyDlpV2FileSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2FileSet)(nil)).Elem()
}

func (i *googlePrivacyDlpV2FileSetPtrType) ToGooglePrivacyDlpV2FileSetPtrOutput() GooglePrivacyDlpV2FileSetPtrOutput {
	return i.ToGooglePrivacyDlpV2FileSetPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2FileSetPtrType) ToGooglePrivacyDlpV2FileSetPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FileSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FileSetPtrOutput)
}

// Set of files to scan.
type GooglePrivacyDlpV2FileSetOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FileSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FileSet)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FileSetOutput) ToGooglePrivacyDlpV2FileSetOutput() GooglePrivacyDlpV2FileSetOutput {
	return o
}

func (o GooglePrivacyDlpV2FileSetOutput) ToGooglePrivacyDlpV2FileSetOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FileSetOutput {
	return o
}

func (o GooglePrivacyDlpV2FileSetOutput) ToGooglePrivacyDlpV2FileSetPtrOutput() GooglePrivacyDlpV2FileSetPtrOutput {
	return o.ToGooglePrivacyDlpV2FileSetPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2FileSetOutput) ToGooglePrivacyDlpV2FileSetPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FileSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2FileSet) *GooglePrivacyDlpV2FileSet {
		return &v
	}).(GooglePrivacyDlpV2FileSetPtrOutput)
}

// The regex-filtered set of files to scan. Exactly one of `url` or `regex_file_set` must be set.
func (o GooglePrivacyDlpV2FileSetOutput) RegexFileSet() GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FileSet) *GooglePrivacyDlpV2CloudStorageRegexFileSet { return v.RegexFileSet }).(GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput)
}

// The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set.
func (o GooglePrivacyDlpV2FileSetOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FileSet) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2FileSetPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FileSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2FileSet)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FileSetPtrOutput) ToGooglePrivacyDlpV2FileSetPtrOutput() GooglePrivacyDlpV2FileSetPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2FileSetPtrOutput) ToGooglePrivacyDlpV2FileSetPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FileSetPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2FileSetPtrOutput) Elem() GooglePrivacyDlpV2FileSetOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FileSet) GooglePrivacyDlpV2FileSet {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2FileSet
		return ret
	}).(GooglePrivacyDlpV2FileSetOutput)
}

// The regex-filtered set of files to scan. Exactly one of `url` or `regex_file_set` must be set.
func (o GooglePrivacyDlpV2FileSetPtrOutput) RegexFileSet() GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FileSet) *GooglePrivacyDlpV2CloudStorageRegexFileSet {
		if v == nil {
			return nil
		}
		return v.RegexFileSet
	}).(GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput)
}

// The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set.
func (o GooglePrivacyDlpV2FileSetPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FileSet) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Set of files to scan.
type GooglePrivacyDlpV2FileSetResponse struct {
	// The regex-filtered set of files to scan. Exactly one of `url` or `regex_file_set` must be set.
	RegexFileSet GooglePrivacyDlpV2CloudStorageRegexFileSetResponse `pulumi:"regexFileSet"`
	// The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set.
	Url string `pulumi:"url"`
}

// GooglePrivacyDlpV2FileSetResponseInput is an input type that accepts GooglePrivacyDlpV2FileSetResponseArgs and GooglePrivacyDlpV2FileSetResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FileSetResponseInput` via:
//
//          GooglePrivacyDlpV2FileSetResponseArgs{...}
type GooglePrivacyDlpV2FileSetResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FileSetResponseOutput() GooglePrivacyDlpV2FileSetResponseOutput
	ToGooglePrivacyDlpV2FileSetResponseOutputWithContext(context.Context) GooglePrivacyDlpV2FileSetResponseOutput
}

// Set of files to scan.
type GooglePrivacyDlpV2FileSetResponseArgs struct {
	// The regex-filtered set of files to scan. Exactly one of `url` or `regex_file_set` must be set.
	RegexFileSet GooglePrivacyDlpV2CloudStorageRegexFileSetResponseInput `pulumi:"regexFileSet"`
	// The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GooglePrivacyDlpV2FileSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FileSetResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2FileSetResponseArgs) ToGooglePrivacyDlpV2FileSetResponseOutput() GooglePrivacyDlpV2FileSetResponseOutput {
	return i.ToGooglePrivacyDlpV2FileSetResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FileSetResponseArgs) ToGooglePrivacyDlpV2FileSetResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FileSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FileSetResponseOutput)
}

func (i GooglePrivacyDlpV2FileSetResponseArgs) ToGooglePrivacyDlpV2FileSetResponsePtrOutput() GooglePrivacyDlpV2FileSetResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2FileSetResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FileSetResponseArgs) ToGooglePrivacyDlpV2FileSetResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FileSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FileSetResponseOutput).ToGooglePrivacyDlpV2FileSetResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2FileSetResponsePtrInput is an input type that accepts GooglePrivacyDlpV2FileSetResponseArgs, GooglePrivacyDlpV2FileSetResponsePtr and GooglePrivacyDlpV2FileSetResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FileSetResponsePtrInput` via:
//
//          GooglePrivacyDlpV2FileSetResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2FileSetResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FileSetResponsePtrOutput() GooglePrivacyDlpV2FileSetResponsePtrOutput
	ToGooglePrivacyDlpV2FileSetResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2FileSetResponsePtrOutput
}

type googlePrivacyDlpV2FileSetResponsePtrType GooglePrivacyDlpV2FileSetResponseArgs

func GooglePrivacyDlpV2FileSetResponsePtr(v *GooglePrivacyDlpV2FileSetResponseArgs) GooglePrivacyDlpV2FileSetResponsePtrInput {
	return (*googlePrivacyDlpV2FileSetResponsePtrType)(v)
}

func (*googlePrivacyDlpV2FileSetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2FileSetResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2FileSetResponsePtrType) ToGooglePrivacyDlpV2FileSetResponsePtrOutput() GooglePrivacyDlpV2FileSetResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2FileSetResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2FileSetResponsePtrType) ToGooglePrivacyDlpV2FileSetResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FileSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FileSetResponsePtrOutput)
}

// Set of files to scan.
type GooglePrivacyDlpV2FileSetResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FileSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FileSetResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FileSetResponseOutput) ToGooglePrivacyDlpV2FileSetResponseOutput() GooglePrivacyDlpV2FileSetResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2FileSetResponseOutput) ToGooglePrivacyDlpV2FileSetResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FileSetResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2FileSetResponseOutput) ToGooglePrivacyDlpV2FileSetResponsePtrOutput() GooglePrivacyDlpV2FileSetResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2FileSetResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2FileSetResponseOutput) ToGooglePrivacyDlpV2FileSetResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FileSetResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2FileSetResponse) *GooglePrivacyDlpV2FileSetResponse {
		return &v
	}).(GooglePrivacyDlpV2FileSetResponsePtrOutput)
}

// The regex-filtered set of files to scan. Exactly one of `url` or `regex_file_set` must be set.
func (o GooglePrivacyDlpV2FileSetResponseOutput) RegexFileSet() GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FileSetResponse) GooglePrivacyDlpV2CloudStorageRegexFileSetResponse {
		return v.RegexFileSet
	}).(GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput)
}

// The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set.
func (o GooglePrivacyDlpV2FileSetResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FileSetResponse) string { return v.Url }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2FileSetResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FileSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2FileSetResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FileSetResponsePtrOutput) ToGooglePrivacyDlpV2FileSetResponsePtrOutput() GooglePrivacyDlpV2FileSetResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2FileSetResponsePtrOutput) ToGooglePrivacyDlpV2FileSetResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FileSetResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2FileSetResponsePtrOutput) Elem() GooglePrivacyDlpV2FileSetResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FileSetResponse) GooglePrivacyDlpV2FileSetResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2FileSetResponse
		return ret
	}).(GooglePrivacyDlpV2FileSetResponseOutput)
}

// The regex-filtered set of files to scan. Exactly one of `url` or `regex_file_set` must be set.
func (o GooglePrivacyDlpV2FileSetResponsePtrOutput) RegexFileSet() GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FileSetResponse) *GooglePrivacyDlpV2CloudStorageRegexFileSetResponse {
		if v == nil {
			return nil
		}
		return &v.RegexFileSet
	}).(GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput)
}

// The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set.
func (o GooglePrivacyDlpV2FileSetResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FileSetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// Configuration to control the number of findings returned. Cannot be set if de-identification is requested.
type GooglePrivacyDlpV2FindingLimits struct {
	// Configuration of findings limit given for specified infoTypes.
	MaxFindingsPerInfoType []GooglePrivacyDlpV2InfoTypeLimit `pulumi:"maxFindingsPerInfoType"`
	// Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored.
	MaxFindingsPerItem *int `pulumi:"maxFindingsPerItem"`
	// Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher.
	MaxFindingsPerRequest *int `pulumi:"maxFindingsPerRequest"`
}

// GooglePrivacyDlpV2FindingLimitsInput is an input type that accepts GooglePrivacyDlpV2FindingLimitsArgs and GooglePrivacyDlpV2FindingLimitsOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FindingLimitsInput` via:
//
//          GooglePrivacyDlpV2FindingLimitsArgs{...}
type GooglePrivacyDlpV2FindingLimitsInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FindingLimitsOutput() GooglePrivacyDlpV2FindingLimitsOutput
	ToGooglePrivacyDlpV2FindingLimitsOutputWithContext(context.Context) GooglePrivacyDlpV2FindingLimitsOutput
}

// Configuration to control the number of findings returned. Cannot be set if de-identification is requested.
type GooglePrivacyDlpV2FindingLimitsArgs struct {
	// Configuration of findings limit given for specified infoTypes.
	MaxFindingsPerInfoType GooglePrivacyDlpV2InfoTypeLimitArrayInput `pulumi:"maxFindingsPerInfoType"`
	// Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored.
	MaxFindingsPerItem pulumi.IntPtrInput `pulumi:"maxFindingsPerItem"`
	// Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher.
	MaxFindingsPerRequest pulumi.IntPtrInput `pulumi:"maxFindingsPerRequest"`
}

func (GooglePrivacyDlpV2FindingLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FindingLimits)(nil)).Elem()
}

func (i GooglePrivacyDlpV2FindingLimitsArgs) ToGooglePrivacyDlpV2FindingLimitsOutput() GooglePrivacyDlpV2FindingLimitsOutput {
	return i.ToGooglePrivacyDlpV2FindingLimitsOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FindingLimitsArgs) ToGooglePrivacyDlpV2FindingLimitsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FindingLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FindingLimitsOutput)
}

func (i GooglePrivacyDlpV2FindingLimitsArgs) ToGooglePrivacyDlpV2FindingLimitsPtrOutput() GooglePrivacyDlpV2FindingLimitsPtrOutput {
	return i.ToGooglePrivacyDlpV2FindingLimitsPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FindingLimitsArgs) ToGooglePrivacyDlpV2FindingLimitsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FindingLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FindingLimitsOutput).ToGooglePrivacyDlpV2FindingLimitsPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2FindingLimitsPtrInput is an input type that accepts GooglePrivacyDlpV2FindingLimitsArgs, GooglePrivacyDlpV2FindingLimitsPtr and GooglePrivacyDlpV2FindingLimitsPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FindingLimitsPtrInput` via:
//
//          GooglePrivacyDlpV2FindingLimitsArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2FindingLimitsPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FindingLimitsPtrOutput() GooglePrivacyDlpV2FindingLimitsPtrOutput
	ToGooglePrivacyDlpV2FindingLimitsPtrOutputWithContext(context.Context) GooglePrivacyDlpV2FindingLimitsPtrOutput
}

type googlePrivacyDlpV2FindingLimitsPtrType GooglePrivacyDlpV2FindingLimitsArgs

func GooglePrivacyDlpV2FindingLimitsPtr(v *GooglePrivacyDlpV2FindingLimitsArgs) GooglePrivacyDlpV2FindingLimitsPtrInput {
	return (*googlePrivacyDlpV2FindingLimitsPtrType)(v)
}

func (*googlePrivacyDlpV2FindingLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2FindingLimits)(nil)).Elem()
}

func (i *googlePrivacyDlpV2FindingLimitsPtrType) ToGooglePrivacyDlpV2FindingLimitsPtrOutput() GooglePrivacyDlpV2FindingLimitsPtrOutput {
	return i.ToGooglePrivacyDlpV2FindingLimitsPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2FindingLimitsPtrType) ToGooglePrivacyDlpV2FindingLimitsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FindingLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FindingLimitsPtrOutput)
}

// Configuration to control the number of findings returned. Cannot be set if de-identification is requested.
type GooglePrivacyDlpV2FindingLimitsOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FindingLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FindingLimits)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FindingLimitsOutput) ToGooglePrivacyDlpV2FindingLimitsOutput() GooglePrivacyDlpV2FindingLimitsOutput {
	return o
}

func (o GooglePrivacyDlpV2FindingLimitsOutput) ToGooglePrivacyDlpV2FindingLimitsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FindingLimitsOutput {
	return o
}

func (o GooglePrivacyDlpV2FindingLimitsOutput) ToGooglePrivacyDlpV2FindingLimitsPtrOutput() GooglePrivacyDlpV2FindingLimitsPtrOutput {
	return o.ToGooglePrivacyDlpV2FindingLimitsPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2FindingLimitsOutput) ToGooglePrivacyDlpV2FindingLimitsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FindingLimitsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2FindingLimits) *GooglePrivacyDlpV2FindingLimits {
		return &v
	}).(GooglePrivacyDlpV2FindingLimitsPtrOutput)
}

// Configuration of findings limit given for specified infoTypes.
func (o GooglePrivacyDlpV2FindingLimitsOutput) MaxFindingsPerInfoType() GooglePrivacyDlpV2InfoTypeLimitArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FindingLimits) []GooglePrivacyDlpV2InfoTypeLimit {
		return v.MaxFindingsPerInfoType
	}).(GooglePrivacyDlpV2InfoTypeLimitArrayOutput)
}

// Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored.
func (o GooglePrivacyDlpV2FindingLimitsOutput) MaxFindingsPerItem() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FindingLimits) *int { return v.MaxFindingsPerItem }).(pulumi.IntPtrOutput)
}

// Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher.
func (o GooglePrivacyDlpV2FindingLimitsOutput) MaxFindingsPerRequest() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FindingLimits) *int { return v.MaxFindingsPerRequest }).(pulumi.IntPtrOutput)
}

type GooglePrivacyDlpV2FindingLimitsPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FindingLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2FindingLimits)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FindingLimitsPtrOutput) ToGooglePrivacyDlpV2FindingLimitsPtrOutput() GooglePrivacyDlpV2FindingLimitsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2FindingLimitsPtrOutput) ToGooglePrivacyDlpV2FindingLimitsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FindingLimitsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2FindingLimitsPtrOutput) Elem() GooglePrivacyDlpV2FindingLimitsOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FindingLimits) GooglePrivacyDlpV2FindingLimits {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2FindingLimits
		return ret
	}).(GooglePrivacyDlpV2FindingLimitsOutput)
}

// Configuration of findings limit given for specified infoTypes.
func (o GooglePrivacyDlpV2FindingLimitsPtrOutput) MaxFindingsPerInfoType() GooglePrivacyDlpV2InfoTypeLimitArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FindingLimits) []GooglePrivacyDlpV2InfoTypeLimit {
		if v == nil {
			return nil
		}
		return v.MaxFindingsPerInfoType
	}).(GooglePrivacyDlpV2InfoTypeLimitArrayOutput)
}

// Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored.
func (o GooglePrivacyDlpV2FindingLimitsPtrOutput) MaxFindingsPerItem() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FindingLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxFindingsPerItem
	}).(pulumi.IntPtrOutput)
}

// Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher.
func (o GooglePrivacyDlpV2FindingLimitsPtrOutput) MaxFindingsPerRequest() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FindingLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxFindingsPerRequest
	}).(pulumi.IntPtrOutput)
}

// Configuration to control the number of findings returned. Cannot be set if de-identification is requested.
type GooglePrivacyDlpV2FindingLimitsResponse struct {
	// Configuration of findings limit given for specified infoTypes.
	MaxFindingsPerInfoType []GooglePrivacyDlpV2InfoTypeLimitResponse `pulumi:"maxFindingsPerInfoType"`
	// Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored.
	MaxFindingsPerItem int `pulumi:"maxFindingsPerItem"`
	// Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher.
	MaxFindingsPerRequest int `pulumi:"maxFindingsPerRequest"`
}

// GooglePrivacyDlpV2FindingLimitsResponseInput is an input type that accepts GooglePrivacyDlpV2FindingLimitsResponseArgs and GooglePrivacyDlpV2FindingLimitsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FindingLimitsResponseInput` via:
//
//          GooglePrivacyDlpV2FindingLimitsResponseArgs{...}
type GooglePrivacyDlpV2FindingLimitsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FindingLimitsResponseOutput() GooglePrivacyDlpV2FindingLimitsResponseOutput
	ToGooglePrivacyDlpV2FindingLimitsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2FindingLimitsResponseOutput
}

// Configuration to control the number of findings returned. Cannot be set if de-identification is requested.
type GooglePrivacyDlpV2FindingLimitsResponseArgs struct {
	// Configuration of findings limit given for specified infoTypes.
	MaxFindingsPerInfoType GooglePrivacyDlpV2InfoTypeLimitResponseArrayInput `pulumi:"maxFindingsPerInfoType"`
	// Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored.
	MaxFindingsPerItem pulumi.IntInput `pulumi:"maxFindingsPerItem"`
	// Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher.
	MaxFindingsPerRequest pulumi.IntInput `pulumi:"maxFindingsPerRequest"`
}

func (GooglePrivacyDlpV2FindingLimitsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FindingLimitsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2FindingLimitsResponseArgs) ToGooglePrivacyDlpV2FindingLimitsResponseOutput() GooglePrivacyDlpV2FindingLimitsResponseOutput {
	return i.ToGooglePrivacyDlpV2FindingLimitsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FindingLimitsResponseArgs) ToGooglePrivacyDlpV2FindingLimitsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FindingLimitsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FindingLimitsResponseOutput)
}

func (i GooglePrivacyDlpV2FindingLimitsResponseArgs) ToGooglePrivacyDlpV2FindingLimitsResponsePtrOutput() GooglePrivacyDlpV2FindingLimitsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2FindingLimitsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FindingLimitsResponseArgs) ToGooglePrivacyDlpV2FindingLimitsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FindingLimitsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FindingLimitsResponseOutput).ToGooglePrivacyDlpV2FindingLimitsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2FindingLimitsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2FindingLimitsResponseArgs, GooglePrivacyDlpV2FindingLimitsResponsePtr and GooglePrivacyDlpV2FindingLimitsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FindingLimitsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2FindingLimitsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2FindingLimitsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FindingLimitsResponsePtrOutput() GooglePrivacyDlpV2FindingLimitsResponsePtrOutput
	ToGooglePrivacyDlpV2FindingLimitsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2FindingLimitsResponsePtrOutput
}

type googlePrivacyDlpV2FindingLimitsResponsePtrType GooglePrivacyDlpV2FindingLimitsResponseArgs

func GooglePrivacyDlpV2FindingLimitsResponsePtr(v *GooglePrivacyDlpV2FindingLimitsResponseArgs) GooglePrivacyDlpV2FindingLimitsResponsePtrInput {
	return (*googlePrivacyDlpV2FindingLimitsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2FindingLimitsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2FindingLimitsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2FindingLimitsResponsePtrType) ToGooglePrivacyDlpV2FindingLimitsResponsePtrOutput() GooglePrivacyDlpV2FindingLimitsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2FindingLimitsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2FindingLimitsResponsePtrType) ToGooglePrivacyDlpV2FindingLimitsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FindingLimitsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FindingLimitsResponsePtrOutput)
}

// Configuration to control the number of findings returned. Cannot be set if de-identification is requested.
type GooglePrivacyDlpV2FindingLimitsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FindingLimitsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FindingLimitsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FindingLimitsResponseOutput) ToGooglePrivacyDlpV2FindingLimitsResponseOutput() GooglePrivacyDlpV2FindingLimitsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2FindingLimitsResponseOutput) ToGooglePrivacyDlpV2FindingLimitsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FindingLimitsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2FindingLimitsResponseOutput) ToGooglePrivacyDlpV2FindingLimitsResponsePtrOutput() GooglePrivacyDlpV2FindingLimitsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2FindingLimitsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2FindingLimitsResponseOutput) ToGooglePrivacyDlpV2FindingLimitsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FindingLimitsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2FindingLimitsResponse) *GooglePrivacyDlpV2FindingLimitsResponse {
		return &v
	}).(GooglePrivacyDlpV2FindingLimitsResponsePtrOutput)
}

// Configuration of findings limit given for specified infoTypes.
func (o GooglePrivacyDlpV2FindingLimitsResponseOutput) MaxFindingsPerInfoType() GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FindingLimitsResponse) []GooglePrivacyDlpV2InfoTypeLimitResponse {
		return v.MaxFindingsPerInfoType
	}).(GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput)
}

// Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored.
func (o GooglePrivacyDlpV2FindingLimitsResponseOutput) MaxFindingsPerItem() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FindingLimitsResponse) int { return v.MaxFindingsPerItem }).(pulumi.IntOutput)
}

// Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher.
func (o GooglePrivacyDlpV2FindingLimitsResponseOutput) MaxFindingsPerRequest() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FindingLimitsResponse) int { return v.MaxFindingsPerRequest }).(pulumi.IntOutput)
}

type GooglePrivacyDlpV2FindingLimitsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FindingLimitsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2FindingLimitsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FindingLimitsResponsePtrOutput) ToGooglePrivacyDlpV2FindingLimitsResponsePtrOutput() GooglePrivacyDlpV2FindingLimitsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2FindingLimitsResponsePtrOutput) ToGooglePrivacyDlpV2FindingLimitsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FindingLimitsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2FindingLimitsResponsePtrOutput) Elem() GooglePrivacyDlpV2FindingLimitsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FindingLimitsResponse) GooglePrivacyDlpV2FindingLimitsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2FindingLimitsResponse
		return ret
	}).(GooglePrivacyDlpV2FindingLimitsResponseOutput)
}

// Configuration of findings limit given for specified infoTypes.
func (o GooglePrivacyDlpV2FindingLimitsResponsePtrOutput) MaxFindingsPerInfoType() GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FindingLimitsResponse) []GooglePrivacyDlpV2InfoTypeLimitResponse {
		if v == nil {
			return nil
		}
		return v.MaxFindingsPerInfoType
	}).(GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput)
}

// Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored.
func (o GooglePrivacyDlpV2FindingLimitsResponsePtrOutput) MaxFindingsPerItem() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FindingLimitsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaxFindingsPerItem
	}).(pulumi.IntPtrOutput)
}

// Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher.
func (o GooglePrivacyDlpV2FindingLimitsResponsePtrOutput) MaxFindingsPerRequest() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FindingLimitsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MaxFindingsPerRequest
	}).(pulumi.IntPtrOutput)
}

// Buckets values based on fixed size ranges. The Bucketing transformation can provide all of this functionality, but requires more configuration. This message is provided as a convenience to the user for simple bucketing strategies. The transformed value will be a hyphenated string of {lower_bound}-{upper_bound}. For example, if lower_bound = 10 and upper_bound = 20, all values that are within this bucket will be replaced with "10-20". This can be used on data of type: double, long. If the bound Value type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
type GooglePrivacyDlpV2FixedSizeBucketingConfig struct {
	// Size of each bucket (except for minimum and maximum buckets). So if `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the following buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60, 60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works.
	BucketSize float64 `pulumi:"bucketSize"`
	// Lower bound value of buckets. All values less than `lower_bound` are grouped together into a single bucket; for example if `lower_bound` = 10, then all values less than 10 are replaced with the value "-10".
	LowerBound GooglePrivacyDlpV2Value `pulumi:"lowerBound"`
	// Upper bound value of buckets. All values greater than upper_bound are grouped together into a single bucket; for example if `upper_bound` = 89, then all values greater than 89 are replaced with the value "89+".
	UpperBound GooglePrivacyDlpV2Value `pulumi:"upperBound"`
}

// GooglePrivacyDlpV2FixedSizeBucketingConfigInput is an input type that accepts GooglePrivacyDlpV2FixedSizeBucketingConfigArgs and GooglePrivacyDlpV2FixedSizeBucketingConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FixedSizeBucketingConfigInput` via:
//
//          GooglePrivacyDlpV2FixedSizeBucketingConfigArgs{...}
type GooglePrivacyDlpV2FixedSizeBucketingConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FixedSizeBucketingConfigOutput() GooglePrivacyDlpV2FixedSizeBucketingConfigOutput
	ToGooglePrivacyDlpV2FixedSizeBucketingConfigOutputWithContext(context.Context) GooglePrivacyDlpV2FixedSizeBucketingConfigOutput
}

// Buckets values based on fixed size ranges. The Bucketing transformation can provide all of this functionality, but requires more configuration. This message is provided as a convenience to the user for simple bucketing strategies. The transformed value will be a hyphenated string of {lower_bound}-{upper_bound}. For example, if lower_bound = 10 and upper_bound = 20, all values that are within this bucket will be replaced with "10-20". This can be used on data of type: double, long. If the bound Value type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
type GooglePrivacyDlpV2FixedSizeBucketingConfigArgs struct {
	// Size of each bucket (except for minimum and maximum buckets). So if `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the following buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60, 60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works.
	BucketSize pulumi.Float64Input `pulumi:"bucketSize"`
	// Lower bound value of buckets. All values less than `lower_bound` are grouped together into a single bucket; for example if `lower_bound` = 10, then all values less than 10 are replaced with the value "-10".
	LowerBound GooglePrivacyDlpV2ValueInput `pulumi:"lowerBound"`
	// Upper bound value of buckets. All values greater than upper_bound are grouped together into a single bucket; for example if `upper_bound` = 89, then all values greater than 89 are replaced with the value "89+".
	UpperBound GooglePrivacyDlpV2ValueInput `pulumi:"upperBound"`
}

func (GooglePrivacyDlpV2FixedSizeBucketingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FixedSizeBucketingConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2FixedSizeBucketingConfigArgs) ToGooglePrivacyDlpV2FixedSizeBucketingConfigOutput() GooglePrivacyDlpV2FixedSizeBucketingConfigOutput {
	return i.ToGooglePrivacyDlpV2FixedSizeBucketingConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FixedSizeBucketingConfigArgs) ToGooglePrivacyDlpV2FixedSizeBucketingConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FixedSizeBucketingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FixedSizeBucketingConfigOutput)
}

func (i GooglePrivacyDlpV2FixedSizeBucketingConfigArgs) ToGooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput() GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FixedSizeBucketingConfigArgs) ToGooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FixedSizeBucketingConfigOutput).ToGooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2FixedSizeBucketingConfigPtrInput is an input type that accepts GooglePrivacyDlpV2FixedSizeBucketingConfigArgs, GooglePrivacyDlpV2FixedSizeBucketingConfigPtr and GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FixedSizeBucketingConfigPtrInput` via:
//
//          GooglePrivacyDlpV2FixedSizeBucketingConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2FixedSizeBucketingConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput() GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput
	ToGooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput
}

type googlePrivacyDlpV2FixedSizeBucketingConfigPtrType GooglePrivacyDlpV2FixedSizeBucketingConfigArgs

func GooglePrivacyDlpV2FixedSizeBucketingConfigPtr(v *GooglePrivacyDlpV2FixedSizeBucketingConfigArgs) GooglePrivacyDlpV2FixedSizeBucketingConfigPtrInput {
	return (*googlePrivacyDlpV2FixedSizeBucketingConfigPtrType)(v)
}

func (*googlePrivacyDlpV2FixedSizeBucketingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2FixedSizeBucketingConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2FixedSizeBucketingConfigPtrType) ToGooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput() GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2FixedSizeBucketingConfigPtrType) ToGooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput)
}

// Buckets values based on fixed size ranges. The Bucketing transformation can provide all of this functionality, but requires more configuration. This message is provided as a convenience to the user for simple bucketing strategies. The transformed value will be a hyphenated string of {lower_bound}-{upper_bound}. For example, if lower_bound = 10 and upper_bound = 20, all values that are within this bucket will be replaced with "10-20". This can be used on data of type: double, long. If the bound Value type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
type GooglePrivacyDlpV2FixedSizeBucketingConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FixedSizeBucketingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FixedSizeBucketingConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FixedSizeBucketingConfigOutput) ToGooglePrivacyDlpV2FixedSizeBucketingConfigOutput() GooglePrivacyDlpV2FixedSizeBucketingConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2FixedSizeBucketingConfigOutput) ToGooglePrivacyDlpV2FixedSizeBucketingConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FixedSizeBucketingConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2FixedSizeBucketingConfigOutput) ToGooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput() GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2FixedSizeBucketingConfigOutput) ToGooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2FixedSizeBucketingConfig) *GooglePrivacyDlpV2FixedSizeBucketingConfig {
		return &v
	}).(GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput)
}

// Size of each bucket (except for minimum and maximum buckets). So if `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the following buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60, 60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works.
func (o GooglePrivacyDlpV2FixedSizeBucketingConfigOutput) BucketSize() pulumi.Float64Output {
	return o.ApplyT(func(v GooglePrivacyDlpV2FixedSizeBucketingConfig) float64 { return v.BucketSize }).(pulumi.Float64Output)
}

// Lower bound value of buckets. All values less than `lower_bound` are grouped together into a single bucket; for example if `lower_bound` = 10, then all values less than 10 are replaced with the value "-10".
func (o GooglePrivacyDlpV2FixedSizeBucketingConfigOutput) LowerBound() GooglePrivacyDlpV2ValueOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FixedSizeBucketingConfig) GooglePrivacyDlpV2Value { return v.LowerBound }).(GooglePrivacyDlpV2ValueOutput)
}

// Upper bound value of buckets. All values greater than upper_bound are grouped together into a single bucket; for example if `upper_bound` = 89, then all values greater than 89 are replaced with the value "89+".
func (o GooglePrivacyDlpV2FixedSizeBucketingConfigOutput) UpperBound() GooglePrivacyDlpV2ValueOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FixedSizeBucketingConfig) GooglePrivacyDlpV2Value { return v.UpperBound }).(GooglePrivacyDlpV2ValueOutput)
}

type GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2FixedSizeBucketingConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput) ToGooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput() GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput) ToGooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput) Elem() GooglePrivacyDlpV2FixedSizeBucketingConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FixedSizeBucketingConfig) GooglePrivacyDlpV2FixedSizeBucketingConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2FixedSizeBucketingConfig
		return ret
	}).(GooglePrivacyDlpV2FixedSizeBucketingConfigOutput)
}

// Size of each bucket (except for minimum and maximum buckets). So if `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the following buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60, 60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works.
func (o GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput) BucketSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FixedSizeBucketingConfig) *float64 {
		if v == nil {
			return nil
		}
		return &v.BucketSize
	}).(pulumi.Float64PtrOutput)
}

// Lower bound value of buckets. All values less than `lower_bound` are grouped together into a single bucket; for example if `lower_bound` = 10, then all values less than 10 are replaced with the value "-10".
func (o GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput) LowerBound() GooglePrivacyDlpV2ValuePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FixedSizeBucketingConfig) *GooglePrivacyDlpV2Value {
		if v == nil {
			return nil
		}
		return &v.LowerBound
	}).(GooglePrivacyDlpV2ValuePtrOutput)
}

// Upper bound value of buckets. All values greater than upper_bound are grouped together into a single bucket; for example if `upper_bound` = 89, then all values greater than 89 are replaced with the value "89+".
func (o GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput) UpperBound() GooglePrivacyDlpV2ValuePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2FixedSizeBucketingConfig) *GooglePrivacyDlpV2Value {
		if v == nil {
			return nil
		}
		return &v.UpperBound
	}).(GooglePrivacyDlpV2ValuePtrOutput)
}

// Buckets values based on fixed size ranges. The Bucketing transformation can provide all of this functionality, but requires more configuration. This message is provided as a convenience to the user for simple bucketing strategies. The transformed value will be a hyphenated string of {lower_bound}-{upper_bound}. For example, if lower_bound = 10 and upper_bound = 20, all values that are within this bucket will be replaced with "10-20". This can be used on data of type: double, long. If the bound Value type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
type GooglePrivacyDlpV2FixedSizeBucketingConfigResponse struct {
	// Size of each bucket (except for minimum and maximum buckets). So if `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the following buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60, 60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works.
	BucketSize float64 `pulumi:"bucketSize"`
	// Lower bound value of buckets. All values less than `lower_bound` are grouped together into a single bucket; for example if `lower_bound` = 10, then all values less than 10 are replaced with the value "-10".
	LowerBound GooglePrivacyDlpV2ValueResponse `pulumi:"lowerBound"`
	// Upper bound value of buckets. All values greater than upper_bound are grouped together into a single bucket; for example if `upper_bound` = 89, then all values greater than 89 are replaced with the value "89+".
	UpperBound GooglePrivacyDlpV2ValueResponse `pulumi:"upperBound"`
}

// GooglePrivacyDlpV2FixedSizeBucketingConfigResponseInput is an input type that accepts GooglePrivacyDlpV2FixedSizeBucketingConfigResponseArgs and GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2FixedSizeBucketingConfigResponseInput` via:
//
//          GooglePrivacyDlpV2FixedSizeBucketingConfigResponseArgs{...}
type GooglePrivacyDlpV2FixedSizeBucketingConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput() GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput
	ToGooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput
}

// Buckets values based on fixed size ranges. The Bucketing transformation can provide all of this functionality, but requires more configuration. This message is provided as a convenience to the user for simple bucketing strategies. The transformed value will be a hyphenated string of {lower_bound}-{upper_bound}. For example, if lower_bound = 10 and upper_bound = 20, all values that are within this bucket will be replaced with "10-20". This can be used on data of type: double, long. If the bound Value type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
type GooglePrivacyDlpV2FixedSizeBucketingConfigResponseArgs struct {
	// Size of each bucket (except for minimum and maximum buckets). So if `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the following buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60, 60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works.
	BucketSize pulumi.Float64Input `pulumi:"bucketSize"`
	// Lower bound value of buckets. All values less than `lower_bound` are grouped together into a single bucket; for example if `lower_bound` = 10, then all values less than 10 are replaced with the value "-10".
	LowerBound GooglePrivacyDlpV2ValueResponseInput `pulumi:"lowerBound"`
	// Upper bound value of buckets. All values greater than upper_bound are grouped together into a single bucket; for example if `upper_bound` = 89, then all values greater than 89 are replaced with the value "89+".
	UpperBound GooglePrivacyDlpV2ValueResponseInput `pulumi:"upperBound"`
}

func (GooglePrivacyDlpV2FixedSizeBucketingConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FixedSizeBucketingConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2FixedSizeBucketingConfigResponseArgs) ToGooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput() GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2FixedSizeBucketingConfigResponseArgs) ToGooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput)
}

// Buckets values based on fixed size ranges. The Bucketing transformation can provide all of this functionality, but requires more configuration. This message is provided as a convenience to the user for simple bucketing strategies. The transformed value will be a hyphenated string of {lower_bound}-{upper_bound}. For example, if lower_bound = 10 and upper_bound = 20, all values that are within this bucket will be replaced with "10-20". This can be used on data of type: double, long. If the bound Value type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
type GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2FixedSizeBucketingConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput) ToGooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput() GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput) ToGooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput {
	return o
}

// Size of each bucket (except for minimum and maximum buckets). So if `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the following buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60, 60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works.
func (o GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput) BucketSize() pulumi.Float64Output {
	return o.ApplyT(func(v GooglePrivacyDlpV2FixedSizeBucketingConfigResponse) float64 { return v.BucketSize }).(pulumi.Float64Output)
}

// Lower bound value of buckets. All values less than `lower_bound` are grouped together into a single bucket; for example if `lower_bound` = 10, then all values less than 10 are replaced with the value "-10".
func (o GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput) LowerBound() GooglePrivacyDlpV2ValueResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FixedSizeBucketingConfigResponse) GooglePrivacyDlpV2ValueResponse {
		return v.LowerBound
	}).(GooglePrivacyDlpV2ValueResponseOutput)
}

// Upper bound value of buckets. All values greater than upper_bound are grouped together into a single bucket; for example if `upper_bound` = 89, then all values greater than 89 are replaced with the value "89+".
func (o GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput) UpperBound() GooglePrivacyDlpV2ValueResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2FixedSizeBucketingConfigResponse) GooglePrivacyDlpV2ValueResponse {
		return v.UpperBound
	}).(GooglePrivacyDlpV2ValueResponseOutput)
}

// The rule that adjusts the likelihood of findings within a certain proximity of hotwords.
type GooglePrivacyDlpV2HotwordRule struct {
	// Regular expression pattern defining what qualifies as a hotword.
	HotwordRegex *GooglePrivacyDlpV2Regex `pulumi:"hotwordRegex"`
	// Likelihood adjustment to apply to all matching findings.
	LikelihoodAdjustment *GooglePrivacyDlpV2LikelihoodAdjustment `pulumi:"likelihoodAdjustment"`
	// Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex "\(\d{3}\) \d{3}-\d{4}" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex "\(xxx\)", where "xxx" is the area code in question.
	Proximity *GooglePrivacyDlpV2Proximity `pulumi:"proximity"`
}

// GooglePrivacyDlpV2HotwordRuleInput is an input type that accepts GooglePrivacyDlpV2HotwordRuleArgs and GooglePrivacyDlpV2HotwordRuleOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2HotwordRuleInput` via:
//
//          GooglePrivacyDlpV2HotwordRuleArgs{...}
type GooglePrivacyDlpV2HotwordRuleInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2HotwordRuleOutput() GooglePrivacyDlpV2HotwordRuleOutput
	ToGooglePrivacyDlpV2HotwordRuleOutputWithContext(context.Context) GooglePrivacyDlpV2HotwordRuleOutput
}

// The rule that adjusts the likelihood of findings within a certain proximity of hotwords.
type GooglePrivacyDlpV2HotwordRuleArgs struct {
	// Regular expression pattern defining what qualifies as a hotword.
	HotwordRegex GooglePrivacyDlpV2RegexPtrInput `pulumi:"hotwordRegex"`
	// Likelihood adjustment to apply to all matching findings.
	LikelihoodAdjustment GooglePrivacyDlpV2LikelihoodAdjustmentPtrInput `pulumi:"likelihoodAdjustment"`
	// Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex "\(\d{3}\) \d{3}-\d{4}" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex "\(xxx\)", where "xxx" is the area code in question.
	Proximity GooglePrivacyDlpV2ProximityPtrInput `pulumi:"proximity"`
}

func (GooglePrivacyDlpV2HotwordRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2HotwordRule)(nil)).Elem()
}

func (i GooglePrivacyDlpV2HotwordRuleArgs) ToGooglePrivacyDlpV2HotwordRuleOutput() GooglePrivacyDlpV2HotwordRuleOutput {
	return i.ToGooglePrivacyDlpV2HotwordRuleOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2HotwordRuleArgs) ToGooglePrivacyDlpV2HotwordRuleOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HotwordRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2HotwordRuleOutput)
}

func (i GooglePrivacyDlpV2HotwordRuleArgs) ToGooglePrivacyDlpV2HotwordRulePtrOutput() GooglePrivacyDlpV2HotwordRulePtrOutput {
	return i.ToGooglePrivacyDlpV2HotwordRulePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2HotwordRuleArgs) ToGooglePrivacyDlpV2HotwordRulePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HotwordRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2HotwordRuleOutput).ToGooglePrivacyDlpV2HotwordRulePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2HotwordRulePtrInput is an input type that accepts GooglePrivacyDlpV2HotwordRuleArgs, GooglePrivacyDlpV2HotwordRulePtr and GooglePrivacyDlpV2HotwordRulePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2HotwordRulePtrInput` via:
//
//          GooglePrivacyDlpV2HotwordRuleArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2HotwordRulePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2HotwordRulePtrOutput() GooglePrivacyDlpV2HotwordRulePtrOutput
	ToGooglePrivacyDlpV2HotwordRulePtrOutputWithContext(context.Context) GooglePrivacyDlpV2HotwordRulePtrOutput
}

type googlePrivacyDlpV2HotwordRulePtrType GooglePrivacyDlpV2HotwordRuleArgs

func GooglePrivacyDlpV2HotwordRulePtr(v *GooglePrivacyDlpV2HotwordRuleArgs) GooglePrivacyDlpV2HotwordRulePtrInput {
	return (*googlePrivacyDlpV2HotwordRulePtrType)(v)
}

func (*googlePrivacyDlpV2HotwordRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2HotwordRule)(nil)).Elem()
}

func (i *googlePrivacyDlpV2HotwordRulePtrType) ToGooglePrivacyDlpV2HotwordRulePtrOutput() GooglePrivacyDlpV2HotwordRulePtrOutput {
	return i.ToGooglePrivacyDlpV2HotwordRulePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2HotwordRulePtrType) ToGooglePrivacyDlpV2HotwordRulePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HotwordRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2HotwordRulePtrOutput)
}

// The rule that adjusts the likelihood of findings within a certain proximity of hotwords.
type GooglePrivacyDlpV2HotwordRuleOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2HotwordRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2HotwordRule)(nil)).Elem()
}

func (o GooglePrivacyDlpV2HotwordRuleOutput) ToGooglePrivacyDlpV2HotwordRuleOutput() GooglePrivacyDlpV2HotwordRuleOutput {
	return o
}

func (o GooglePrivacyDlpV2HotwordRuleOutput) ToGooglePrivacyDlpV2HotwordRuleOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HotwordRuleOutput {
	return o
}

func (o GooglePrivacyDlpV2HotwordRuleOutput) ToGooglePrivacyDlpV2HotwordRulePtrOutput() GooglePrivacyDlpV2HotwordRulePtrOutput {
	return o.ToGooglePrivacyDlpV2HotwordRulePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2HotwordRuleOutput) ToGooglePrivacyDlpV2HotwordRulePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HotwordRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2HotwordRule) *GooglePrivacyDlpV2HotwordRule {
		return &v
	}).(GooglePrivacyDlpV2HotwordRulePtrOutput)
}

// Regular expression pattern defining what qualifies as a hotword.
func (o GooglePrivacyDlpV2HotwordRuleOutput) HotwordRegex() GooglePrivacyDlpV2RegexPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HotwordRule) *GooglePrivacyDlpV2Regex { return v.HotwordRegex }).(GooglePrivacyDlpV2RegexPtrOutput)
}

// Likelihood adjustment to apply to all matching findings.
func (o GooglePrivacyDlpV2HotwordRuleOutput) LikelihoodAdjustment() GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HotwordRule) *GooglePrivacyDlpV2LikelihoodAdjustment {
		return v.LikelihoodAdjustment
	}).(GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput)
}

// Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex "\(\d{3}\) \d{3}-\d{4}" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex "\(xxx\)", where "xxx" is the area code in question.
func (o GooglePrivacyDlpV2HotwordRuleOutput) Proximity() GooglePrivacyDlpV2ProximityPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HotwordRule) *GooglePrivacyDlpV2Proximity { return v.Proximity }).(GooglePrivacyDlpV2ProximityPtrOutput)
}

type GooglePrivacyDlpV2HotwordRulePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2HotwordRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2HotwordRule)(nil)).Elem()
}

func (o GooglePrivacyDlpV2HotwordRulePtrOutput) ToGooglePrivacyDlpV2HotwordRulePtrOutput() GooglePrivacyDlpV2HotwordRulePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2HotwordRulePtrOutput) ToGooglePrivacyDlpV2HotwordRulePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HotwordRulePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2HotwordRulePtrOutput) Elem() GooglePrivacyDlpV2HotwordRuleOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HotwordRule) GooglePrivacyDlpV2HotwordRule {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2HotwordRule
		return ret
	}).(GooglePrivacyDlpV2HotwordRuleOutput)
}

// Regular expression pattern defining what qualifies as a hotword.
func (o GooglePrivacyDlpV2HotwordRulePtrOutput) HotwordRegex() GooglePrivacyDlpV2RegexPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HotwordRule) *GooglePrivacyDlpV2Regex {
		if v == nil {
			return nil
		}
		return v.HotwordRegex
	}).(GooglePrivacyDlpV2RegexPtrOutput)
}

// Likelihood adjustment to apply to all matching findings.
func (o GooglePrivacyDlpV2HotwordRulePtrOutput) LikelihoodAdjustment() GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HotwordRule) *GooglePrivacyDlpV2LikelihoodAdjustment {
		if v == nil {
			return nil
		}
		return v.LikelihoodAdjustment
	}).(GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput)
}

// Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex "\(\d{3}\) \d{3}-\d{4}" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex "\(xxx\)", where "xxx" is the area code in question.
func (o GooglePrivacyDlpV2HotwordRulePtrOutput) Proximity() GooglePrivacyDlpV2ProximityPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HotwordRule) *GooglePrivacyDlpV2Proximity {
		if v == nil {
			return nil
		}
		return v.Proximity
	}).(GooglePrivacyDlpV2ProximityPtrOutput)
}

// The rule that adjusts the likelihood of findings within a certain proximity of hotwords.
type GooglePrivacyDlpV2HotwordRuleResponse struct {
	// Regular expression pattern defining what qualifies as a hotword.
	HotwordRegex GooglePrivacyDlpV2RegexResponse `pulumi:"hotwordRegex"`
	// Likelihood adjustment to apply to all matching findings.
	LikelihoodAdjustment GooglePrivacyDlpV2LikelihoodAdjustmentResponse `pulumi:"likelihoodAdjustment"`
	// Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex "\(\d{3}\) \d{3}-\d{4}" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex "\(xxx\)", where "xxx" is the area code in question.
	Proximity GooglePrivacyDlpV2ProximityResponse `pulumi:"proximity"`
}

// GooglePrivacyDlpV2HotwordRuleResponseInput is an input type that accepts GooglePrivacyDlpV2HotwordRuleResponseArgs and GooglePrivacyDlpV2HotwordRuleResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2HotwordRuleResponseInput` via:
//
//          GooglePrivacyDlpV2HotwordRuleResponseArgs{...}
type GooglePrivacyDlpV2HotwordRuleResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2HotwordRuleResponseOutput() GooglePrivacyDlpV2HotwordRuleResponseOutput
	ToGooglePrivacyDlpV2HotwordRuleResponseOutputWithContext(context.Context) GooglePrivacyDlpV2HotwordRuleResponseOutput
}

// The rule that adjusts the likelihood of findings within a certain proximity of hotwords.
type GooglePrivacyDlpV2HotwordRuleResponseArgs struct {
	// Regular expression pattern defining what qualifies as a hotword.
	HotwordRegex GooglePrivacyDlpV2RegexResponseInput `pulumi:"hotwordRegex"`
	// Likelihood adjustment to apply to all matching findings.
	LikelihoodAdjustment GooglePrivacyDlpV2LikelihoodAdjustmentResponseInput `pulumi:"likelihoodAdjustment"`
	// Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex "\(\d{3}\) \d{3}-\d{4}" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex "\(xxx\)", where "xxx" is the area code in question.
	Proximity GooglePrivacyDlpV2ProximityResponseInput `pulumi:"proximity"`
}

func (GooglePrivacyDlpV2HotwordRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2HotwordRuleResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2HotwordRuleResponseArgs) ToGooglePrivacyDlpV2HotwordRuleResponseOutput() GooglePrivacyDlpV2HotwordRuleResponseOutput {
	return i.ToGooglePrivacyDlpV2HotwordRuleResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2HotwordRuleResponseArgs) ToGooglePrivacyDlpV2HotwordRuleResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HotwordRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2HotwordRuleResponseOutput)
}

// The rule that adjusts the likelihood of findings within a certain proximity of hotwords.
type GooglePrivacyDlpV2HotwordRuleResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2HotwordRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2HotwordRuleResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2HotwordRuleResponseOutput) ToGooglePrivacyDlpV2HotwordRuleResponseOutput() GooglePrivacyDlpV2HotwordRuleResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2HotwordRuleResponseOutput) ToGooglePrivacyDlpV2HotwordRuleResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HotwordRuleResponseOutput {
	return o
}

// Regular expression pattern defining what qualifies as a hotword.
func (o GooglePrivacyDlpV2HotwordRuleResponseOutput) HotwordRegex() GooglePrivacyDlpV2RegexResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HotwordRuleResponse) GooglePrivacyDlpV2RegexResponse { return v.HotwordRegex }).(GooglePrivacyDlpV2RegexResponseOutput)
}

// Likelihood adjustment to apply to all matching findings.
func (o GooglePrivacyDlpV2HotwordRuleResponseOutput) LikelihoodAdjustment() GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HotwordRuleResponse) GooglePrivacyDlpV2LikelihoodAdjustmentResponse {
		return v.LikelihoodAdjustment
	}).(GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput)
}

// Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex "\(\d{3}\) \d{3}-\d{4}" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex "\(xxx\)", where "xxx" is the area code in question.
func (o GooglePrivacyDlpV2HotwordRuleResponseOutput) Proximity() GooglePrivacyDlpV2ProximityResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HotwordRuleResponse) GooglePrivacyDlpV2ProximityResponse { return v.Proximity }).(GooglePrivacyDlpV2ProximityResponseOutput)
}

// Statistics related to processing hybrid inspect requests.
type GooglePrivacyDlpV2HybridInspectStatisticsResponse struct {
	// The number of hybrid inspection requests aborted because the job ran out of quota or was ended before they could be processed.
	AbortedCount string `pulumi:"abortedCount"`
	// The number of hybrid requests currently being processed. Only populated when called via method `getDlpJob`. A burst of traffic may cause hybrid inspect requests to be enqueued. Processing will take place as quickly as possible, but resource limitations may impact how long a request is enqueued for.
	PendingCount string `pulumi:"pendingCount"`
	// The number of hybrid inspection requests processed within this job.
	ProcessedCount string `pulumi:"processedCount"`
}

// GooglePrivacyDlpV2HybridInspectStatisticsResponseInput is an input type that accepts GooglePrivacyDlpV2HybridInspectStatisticsResponseArgs and GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2HybridInspectStatisticsResponseInput` via:
//
//          GooglePrivacyDlpV2HybridInspectStatisticsResponseArgs{...}
type GooglePrivacyDlpV2HybridInspectStatisticsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2HybridInspectStatisticsResponseOutput() GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput
	ToGooglePrivacyDlpV2HybridInspectStatisticsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput
}

// Statistics related to processing hybrid inspect requests.
type GooglePrivacyDlpV2HybridInspectStatisticsResponseArgs struct {
	// The number of hybrid inspection requests aborted because the job ran out of quota or was ended before they could be processed.
	AbortedCount pulumi.StringInput `pulumi:"abortedCount"`
	// The number of hybrid requests currently being processed. Only populated when called via method `getDlpJob`. A burst of traffic may cause hybrid inspect requests to be enqueued. Processing will take place as quickly as possible, but resource limitations may impact how long a request is enqueued for.
	PendingCount pulumi.StringInput `pulumi:"pendingCount"`
	// The number of hybrid inspection requests processed within this job.
	ProcessedCount pulumi.StringInput `pulumi:"processedCount"`
}

func (GooglePrivacyDlpV2HybridInspectStatisticsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2HybridInspectStatisticsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2HybridInspectStatisticsResponseArgs) ToGooglePrivacyDlpV2HybridInspectStatisticsResponseOutput() GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput {
	return i.ToGooglePrivacyDlpV2HybridInspectStatisticsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2HybridInspectStatisticsResponseArgs) ToGooglePrivacyDlpV2HybridInspectStatisticsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput)
}

func (i GooglePrivacyDlpV2HybridInspectStatisticsResponseArgs) ToGooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput() GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2HybridInspectStatisticsResponseArgs) ToGooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput).ToGooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2HybridInspectStatisticsResponseArgs, GooglePrivacyDlpV2HybridInspectStatisticsResponsePtr and GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2HybridInspectStatisticsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput() GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput
	ToGooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput
}

type googlePrivacyDlpV2HybridInspectStatisticsResponsePtrType GooglePrivacyDlpV2HybridInspectStatisticsResponseArgs

func GooglePrivacyDlpV2HybridInspectStatisticsResponsePtr(v *GooglePrivacyDlpV2HybridInspectStatisticsResponseArgs) GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrInput {
	return (*googlePrivacyDlpV2HybridInspectStatisticsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2HybridInspectStatisticsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2HybridInspectStatisticsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2HybridInspectStatisticsResponsePtrType) ToGooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput() GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2HybridInspectStatisticsResponsePtrType) ToGooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput)
}

// Statistics related to processing hybrid inspect requests.
type GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2HybridInspectStatisticsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput) ToGooglePrivacyDlpV2HybridInspectStatisticsResponseOutput() GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput) ToGooglePrivacyDlpV2HybridInspectStatisticsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput) ToGooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput() GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput) ToGooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2HybridInspectStatisticsResponse) *GooglePrivacyDlpV2HybridInspectStatisticsResponse {
		return &v
	}).(GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput)
}

// The number of hybrid inspection requests aborted because the job ran out of quota or was ended before they could be processed.
func (o GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput) AbortedCount() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HybridInspectStatisticsResponse) string { return v.AbortedCount }).(pulumi.StringOutput)
}

// The number of hybrid requests currently being processed. Only populated when called via method `getDlpJob`. A burst of traffic may cause hybrid inspect requests to be enqueued. Processing will take place as quickly as possible, but resource limitations may impact how long a request is enqueued for.
func (o GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput) PendingCount() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HybridInspectStatisticsResponse) string { return v.PendingCount }).(pulumi.StringOutput)
}

// The number of hybrid inspection requests processed within this job.
func (o GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput) ProcessedCount() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HybridInspectStatisticsResponse) string { return v.ProcessedCount }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2HybridInspectStatisticsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput) ToGooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput() GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput) ToGooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput) Elem() GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HybridInspectStatisticsResponse) GooglePrivacyDlpV2HybridInspectStatisticsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2HybridInspectStatisticsResponse
		return ret
	}).(GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput)
}

// The number of hybrid inspection requests aborted because the job ran out of quota or was ended before they could be processed.
func (o GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput) AbortedCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HybridInspectStatisticsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AbortedCount
	}).(pulumi.StringPtrOutput)
}

// The number of hybrid requests currently being processed. Only populated when called via method `getDlpJob`. A burst of traffic may cause hybrid inspect requests to be enqueued. Processing will take place as quickly as possible, but resource limitations may impact how long a request is enqueued for.
func (o GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput) PendingCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HybridInspectStatisticsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PendingCount
	}).(pulumi.StringPtrOutput)
}

// The number of hybrid inspection requests processed within this job.
func (o GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput) ProcessedCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HybridInspectStatisticsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProcessedCount
	}).(pulumi.StringPtrOutput)
}

// Configuration to control jobs where the content being inspected is outside of Google Cloud Platform.
type GooglePrivacyDlpV2HybridOptions struct {
	// A short description of where the data is coming from. Will be stored once in the job. 256 max length.
	Description *string `pulumi:"description"`
	// To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
	Labels map[string]string `pulumi:"labels"`
	// These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.
	RequiredFindingLabelKeys []string `pulumi:"requiredFindingLabelKeys"`
	// If the container is a table, additional information to make findings meaningful such as the columns that are primary keys.
	TableOptions *GooglePrivacyDlpV2TableOptions `pulumi:"tableOptions"`
}

// GooglePrivacyDlpV2HybridOptionsInput is an input type that accepts GooglePrivacyDlpV2HybridOptionsArgs and GooglePrivacyDlpV2HybridOptionsOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2HybridOptionsInput` via:
//
//          GooglePrivacyDlpV2HybridOptionsArgs{...}
type GooglePrivacyDlpV2HybridOptionsInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2HybridOptionsOutput() GooglePrivacyDlpV2HybridOptionsOutput
	ToGooglePrivacyDlpV2HybridOptionsOutputWithContext(context.Context) GooglePrivacyDlpV2HybridOptionsOutput
}

// Configuration to control jobs where the content being inspected is outside of Google Cloud Platform.
type GooglePrivacyDlpV2HybridOptionsArgs struct {
	// A short description of where the data is coming from. Will be stored once in the job. 256 max length.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.
	RequiredFindingLabelKeys pulumi.StringArrayInput `pulumi:"requiredFindingLabelKeys"`
	// If the container is a table, additional information to make findings meaningful such as the columns that are primary keys.
	TableOptions GooglePrivacyDlpV2TableOptionsPtrInput `pulumi:"tableOptions"`
}

func (GooglePrivacyDlpV2HybridOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2HybridOptions)(nil)).Elem()
}

func (i GooglePrivacyDlpV2HybridOptionsArgs) ToGooglePrivacyDlpV2HybridOptionsOutput() GooglePrivacyDlpV2HybridOptionsOutput {
	return i.ToGooglePrivacyDlpV2HybridOptionsOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2HybridOptionsArgs) ToGooglePrivacyDlpV2HybridOptionsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2HybridOptionsOutput)
}

func (i GooglePrivacyDlpV2HybridOptionsArgs) ToGooglePrivacyDlpV2HybridOptionsPtrOutput() GooglePrivacyDlpV2HybridOptionsPtrOutput {
	return i.ToGooglePrivacyDlpV2HybridOptionsPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2HybridOptionsArgs) ToGooglePrivacyDlpV2HybridOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2HybridOptionsOutput).ToGooglePrivacyDlpV2HybridOptionsPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2HybridOptionsPtrInput is an input type that accepts GooglePrivacyDlpV2HybridOptionsArgs, GooglePrivacyDlpV2HybridOptionsPtr and GooglePrivacyDlpV2HybridOptionsPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2HybridOptionsPtrInput` via:
//
//          GooglePrivacyDlpV2HybridOptionsArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2HybridOptionsPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2HybridOptionsPtrOutput() GooglePrivacyDlpV2HybridOptionsPtrOutput
	ToGooglePrivacyDlpV2HybridOptionsPtrOutputWithContext(context.Context) GooglePrivacyDlpV2HybridOptionsPtrOutput
}

type googlePrivacyDlpV2HybridOptionsPtrType GooglePrivacyDlpV2HybridOptionsArgs

func GooglePrivacyDlpV2HybridOptionsPtr(v *GooglePrivacyDlpV2HybridOptionsArgs) GooglePrivacyDlpV2HybridOptionsPtrInput {
	return (*googlePrivacyDlpV2HybridOptionsPtrType)(v)
}

func (*googlePrivacyDlpV2HybridOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2HybridOptions)(nil)).Elem()
}

func (i *googlePrivacyDlpV2HybridOptionsPtrType) ToGooglePrivacyDlpV2HybridOptionsPtrOutput() GooglePrivacyDlpV2HybridOptionsPtrOutput {
	return i.ToGooglePrivacyDlpV2HybridOptionsPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2HybridOptionsPtrType) ToGooglePrivacyDlpV2HybridOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2HybridOptionsPtrOutput)
}

// Configuration to control jobs where the content being inspected is outside of Google Cloud Platform.
type GooglePrivacyDlpV2HybridOptionsOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2HybridOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2HybridOptions)(nil)).Elem()
}

func (o GooglePrivacyDlpV2HybridOptionsOutput) ToGooglePrivacyDlpV2HybridOptionsOutput() GooglePrivacyDlpV2HybridOptionsOutput {
	return o
}

func (o GooglePrivacyDlpV2HybridOptionsOutput) ToGooglePrivacyDlpV2HybridOptionsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridOptionsOutput {
	return o
}

func (o GooglePrivacyDlpV2HybridOptionsOutput) ToGooglePrivacyDlpV2HybridOptionsPtrOutput() GooglePrivacyDlpV2HybridOptionsPtrOutput {
	return o.ToGooglePrivacyDlpV2HybridOptionsPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2HybridOptionsOutput) ToGooglePrivacyDlpV2HybridOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2HybridOptions) *GooglePrivacyDlpV2HybridOptions {
		return &v
	}).(GooglePrivacyDlpV2HybridOptionsPtrOutput)
}

// A short description of where the data is coming from. Will be stored once in the job. 256 max length.
func (o GooglePrivacyDlpV2HybridOptionsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HybridOptions) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
func (o GooglePrivacyDlpV2HybridOptionsOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HybridOptions) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.
func (o GooglePrivacyDlpV2HybridOptionsOutput) RequiredFindingLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HybridOptions) []string { return v.RequiredFindingLabelKeys }).(pulumi.StringArrayOutput)
}

// If the container is a table, additional information to make findings meaningful such as the columns that are primary keys.
func (o GooglePrivacyDlpV2HybridOptionsOutput) TableOptions() GooglePrivacyDlpV2TableOptionsPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HybridOptions) *GooglePrivacyDlpV2TableOptions { return v.TableOptions }).(GooglePrivacyDlpV2TableOptionsPtrOutput)
}

type GooglePrivacyDlpV2HybridOptionsPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2HybridOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2HybridOptions)(nil)).Elem()
}

func (o GooglePrivacyDlpV2HybridOptionsPtrOutput) ToGooglePrivacyDlpV2HybridOptionsPtrOutput() GooglePrivacyDlpV2HybridOptionsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2HybridOptionsPtrOutput) ToGooglePrivacyDlpV2HybridOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridOptionsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2HybridOptionsPtrOutput) Elem() GooglePrivacyDlpV2HybridOptionsOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HybridOptions) GooglePrivacyDlpV2HybridOptions {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2HybridOptions
		return ret
	}).(GooglePrivacyDlpV2HybridOptionsOutput)
}

// A short description of where the data is coming from. Will be stored once in the job. 256 max length.
func (o GooglePrivacyDlpV2HybridOptionsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HybridOptions) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
func (o GooglePrivacyDlpV2HybridOptionsPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HybridOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.
func (o GooglePrivacyDlpV2HybridOptionsPtrOutput) RequiredFindingLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HybridOptions) []string {
		if v == nil {
			return nil
		}
		return v.RequiredFindingLabelKeys
	}).(pulumi.StringArrayOutput)
}

// If the container is a table, additional information to make findings meaningful such as the columns that are primary keys.
func (o GooglePrivacyDlpV2HybridOptionsPtrOutput) TableOptions() GooglePrivacyDlpV2TableOptionsPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HybridOptions) *GooglePrivacyDlpV2TableOptions {
		if v == nil {
			return nil
		}
		return v.TableOptions
	}).(GooglePrivacyDlpV2TableOptionsPtrOutput)
}

// Configuration to control jobs where the content being inspected is outside of Google Cloud Platform.
type GooglePrivacyDlpV2HybridOptionsResponse struct {
	// A short description of where the data is coming from. Will be stored once in the job. 256 max length.
	Description string `pulumi:"description"`
	// To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
	Labels map[string]string `pulumi:"labels"`
	// These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.
	RequiredFindingLabelKeys []string `pulumi:"requiredFindingLabelKeys"`
	// If the container is a table, additional information to make findings meaningful such as the columns that are primary keys.
	TableOptions GooglePrivacyDlpV2TableOptionsResponse `pulumi:"tableOptions"`
}

// GooglePrivacyDlpV2HybridOptionsResponseInput is an input type that accepts GooglePrivacyDlpV2HybridOptionsResponseArgs and GooglePrivacyDlpV2HybridOptionsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2HybridOptionsResponseInput` via:
//
//          GooglePrivacyDlpV2HybridOptionsResponseArgs{...}
type GooglePrivacyDlpV2HybridOptionsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2HybridOptionsResponseOutput() GooglePrivacyDlpV2HybridOptionsResponseOutput
	ToGooglePrivacyDlpV2HybridOptionsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2HybridOptionsResponseOutput
}

// Configuration to control jobs where the content being inspected is outside of Google Cloud Platform.
type GooglePrivacyDlpV2HybridOptionsResponseArgs struct {
	// A short description of where the data is coming from. Will be stored once in the job. 256 max length.
	Description pulumi.StringInput `pulumi:"description"`
	// To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.
	RequiredFindingLabelKeys pulumi.StringArrayInput `pulumi:"requiredFindingLabelKeys"`
	// If the container is a table, additional information to make findings meaningful such as the columns that are primary keys.
	TableOptions GooglePrivacyDlpV2TableOptionsResponseInput `pulumi:"tableOptions"`
}

func (GooglePrivacyDlpV2HybridOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2HybridOptionsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2HybridOptionsResponseArgs) ToGooglePrivacyDlpV2HybridOptionsResponseOutput() GooglePrivacyDlpV2HybridOptionsResponseOutput {
	return i.ToGooglePrivacyDlpV2HybridOptionsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2HybridOptionsResponseArgs) ToGooglePrivacyDlpV2HybridOptionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2HybridOptionsResponseOutput)
}

func (i GooglePrivacyDlpV2HybridOptionsResponseArgs) ToGooglePrivacyDlpV2HybridOptionsResponsePtrOutput() GooglePrivacyDlpV2HybridOptionsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2HybridOptionsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2HybridOptionsResponseArgs) ToGooglePrivacyDlpV2HybridOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2HybridOptionsResponseOutput).ToGooglePrivacyDlpV2HybridOptionsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2HybridOptionsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2HybridOptionsResponseArgs, GooglePrivacyDlpV2HybridOptionsResponsePtr and GooglePrivacyDlpV2HybridOptionsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2HybridOptionsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2HybridOptionsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2HybridOptionsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2HybridOptionsResponsePtrOutput() GooglePrivacyDlpV2HybridOptionsResponsePtrOutput
	ToGooglePrivacyDlpV2HybridOptionsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2HybridOptionsResponsePtrOutput
}

type googlePrivacyDlpV2HybridOptionsResponsePtrType GooglePrivacyDlpV2HybridOptionsResponseArgs

func GooglePrivacyDlpV2HybridOptionsResponsePtr(v *GooglePrivacyDlpV2HybridOptionsResponseArgs) GooglePrivacyDlpV2HybridOptionsResponsePtrInput {
	return (*googlePrivacyDlpV2HybridOptionsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2HybridOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2HybridOptionsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2HybridOptionsResponsePtrType) ToGooglePrivacyDlpV2HybridOptionsResponsePtrOutput() GooglePrivacyDlpV2HybridOptionsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2HybridOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2HybridOptionsResponsePtrType) ToGooglePrivacyDlpV2HybridOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2HybridOptionsResponsePtrOutput)
}

// Configuration to control jobs where the content being inspected is outside of Google Cloud Platform.
type GooglePrivacyDlpV2HybridOptionsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2HybridOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2HybridOptionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2HybridOptionsResponseOutput) ToGooglePrivacyDlpV2HybridOptionsResponseOutput() GooglePrivacyDlpV2HybridOptionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2HybridOptionsResponseOutput) ToGooglePrivacyDlpV2HybridOptionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridOptionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2HybridOptionsResponseOutput) ToGooglePrivacyDlpV2HybridOptionsResponsePtrOutput() GooglePrivacyDlpV2HybridOptionsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2HybridOptionsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2HybridOptionsResponseOutput) ToGooglePrivacyDlpV2HybridOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridOptionsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2HybridOptionsResponse) *GooglePrivacyDlpV2HybridOptionsResponse {
		return &v
	}).(GooglePrivacyDlpV2HybridOptionsResponsePtrOutput)
}

// A short description of where the data is coming from. Will be stored once in the job. 256 max length.
func (o GooglePrivacyDlpV2HybridOptionsResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HybridOptionsResponse) string { return v.Description }).(pulumi.StringOutput)
}

// To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
func (o GooglePrivacyDlpV2HybridOptionsResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HybridOptionsResponse) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.
func (o GooglePrivacyDlpV2HybridOptionsResponseOutput) RequiredFindingLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HybridOptionsResponse) []string { return v.RequiredFindingLabelKeys }).(pulumi.StringArrayOutput)
}

// If the container is a table, additional information to make findings meaningful such as the columns that are primary keys.
func (o GooglePrivacyDlpV2HybridOptionsResponseOutput) TableOptions() GooglePrivacyDlpV2TableOptionsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2HybridOptionsResponse) GooglePrivacyDlpV2TableOptionsResponse {
		return v.TableOptions
	}).(GooglePrivacyDlpV2TableOptionsResponseOutput)
}

type GooglePrivacyDlpV2HybridOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2HybridOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2HybridOptionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2HybridOptionsResponsePtrOutput) ToGooglePrivacyDlpV2HybridOptionsResponsePtrOutput() GooglePrivacyDlpV2HybridOptionsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2HybridOptionsResponsePtrOutput) ToGooglePrivacyDlpV2HybridOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2HybridOptionsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2HybridOptionsResponsePtrOutput) Elem() GooglePrivacyDlpV2HybridOptionsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HybridOptionsResponse) GooglePrivacyDlpV2HybridOptionsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2HybridOptionsResponse
		return ret
	}).(GooglePrivacyDlpV2HybridOptionsResponseOutput)
}

// A short description of where the data is coming from. Will be stored once in the job. 256 max length.
func (o GooglePrivacyDlpV2HybridOptionsResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HybridOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
func (o GooglePrivacyDlpV2HybridOptionsResponsePtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HybridOptionsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.
func (o GooglePrivacyDlpV2HybridOptionsResponsePtrOutput) RequiredFindingLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HybridOptionsResponse) []string {
		if v == nil {
			return nil
		}
		return v.RequiredFindingLabelKeys
	}).(pulumi.StringArrayOutput)
}

// If the container is a table, additional information to make findings meaningful such as the columns that are primary keys.
func (o GooglePrivacyDlpV2HybridOptionsResponsePtrOutput) TableOptions() GooglePrivacyDlpV2TableOptionsResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2HybridOptionsResponse) *GooglePrivacyDlpV2TableOptionsResponse {
		if v == nil {
			return nil
		}
		return &v.TableOptions
	}).(GooglePrivacyDlpV2TableOptionsResponsePtrOutput)
}

// Type of information detected by the API.
type GooglePrivacyDlpV2InfoType struct {
	// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`.
	Name *string `pulumi:"name"`
}

// GooglePrivacyDlpV2InfoTypeInput is an input type that accepts GooglePrivacyDlpV2InfoTypeArgs and GooglePrivacyDlpV2InfoTypeOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeInput` via:
//
//          GooglePrivacyDlpV2InfoTypeArgs{...}
type GooglePrivacyDlpV2InfoTypeInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeOutput() GooglePrivacyDlpV2InfoTypeOutput
	ToGooglePrivacyDlpV2InfoTypeOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeOutput
}

// Type of information detected by the API.
type GooglePrivacyDlpV2InfoTypeArgs struct {
	// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GooglePrivacyDlpV2InfoTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoType)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeArgs) ToGooglePrivacyDlpV2InfoTypeOutput() GooglePrivacyDlpV2InfoTypeOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeArgs) ToGooglePrivacyDlpV2InfoTypeOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeOutput)
}

func (i GooglePrivacyDlpV2InfoTypeArgs) ToGooglePrivacyDlpV2InfoTypePtrOutput() GooglePrivacyDlpV2InfoTypePtrOutput {
	return i.ToGooglePrivacyDlpV2InfoTypePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeArgs) ToGooglePrivacyDlpV2InfoTypePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeOutput).ToGooglePrivacyDlpV2InfoTypePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2InfoTypePtrInput is an input type that accepts GooglePrivacyDlpV2InfoTypeArgs, GooglePrivacyDlpV2InfoTypePtr and GooglePrivacyDlpV2InfoTypePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypePtrInput` via:
//
//          GooglePrivacyDlpV2InfoTypeArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2InfoTypePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypePtrOutput() GooglePrivacyDlpV2InfoTypePtrOutput
	ToGooglePrivacyDlpV2InfoTypePtrOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypePtrOutput
}

type googlePrivacyDlpV2InfoTypePtrType GooglePrivacyDlpV2InfoTypeArgs

func GooglePrivacyDlpV2InfoTypePtr(v *GooglePrivacyDlpV2InfoTypeArgs) GooglePrivacyDlpV2InfoTypePtrInput {
	return (*googlePrivacyDlpV2InfoTypePtrType)(v)
}

func (*googlePrivacyDlpV2InfoTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InfoType)(nil)).Elem()
}

func (i *googlePrivacyDlpV2InfoTypePtrType) ToGooglePrivacyDlpV2InfoTypePtrOutput() GooglePrivacyDlpV2InfoTypePtrOutput {
	return i.ToGooglePrivacyDlpV2InfoTypePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2InfoTypePtrType) ToGooglePrivacyDlpV2InfoTypePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypePtrOutput)
}

// GooglePrivacyDlpV2InfoTypeArrayInput is an input type that accepts GooglePrivacyDlpV2InfoTypeArray and GooglePrivacyDlpV2InfoTypeArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeArrayInput` via:
//
//          GooglePrivacyDlpV2InfoTypeArray{ GooglePrivacyDlpV2InfoTypeArgs{...} }
type GooglePrivacyDlpV2InfoTypeArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeArrayOutput() GooglePrivacyDlpV2InfoTypeArrayOutput
	ToGooglePrivacyDlpV2InfoTypeArrayOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeArrayOutput
}

type GooglePrivacyDlpV2InfoTypeArray []GooglePrivacyDlpV2InfoTypeInput

func (GooglePrivacyDlpV2InfoTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InfoType)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeArray) ToGooglePrivacyDlpV2InfoTypeArrayOutput() GooglePrivacyDlpV2InfoTypeArrayOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeArray) ToGooglePrivacyDlpV2InfoTypeArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeArrayOutput)
}

// Type of information detected by the API.
type GooglePrivacyDlpV2InfoTypeOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoType)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeOutput) ToGooglePrivacyDlpV2InfoTypeOutput() GooglePrivacyDlpV2InfoTypeOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeOutput) ToGooglePrivacyDlpV2InfoTypeOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeOutput) ToGooglePrivacyDlpV2InfoTypePtrOutput() GooglePrivacyDlpV2InfoTypePtrOutput {
	return o.ToGooglePrivacyDlpV2InfoTypePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2InfoTypeOutput) ToGooglePrivacyDlpV2InfoTypePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2InfoType) *GooglePrivacyDlpV2InfoType {
		return &v
	}).(GooglePrivacyDlpV2InfoTypePtrOutput)
}

// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`.
func (o GooglePrivacyDlpV2InfoTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InfoType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2InfoTypePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InfoType)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypePtrOutput) ToGooglePrivacyDlpV2InfoTypePtrOutput() GooglePrivacyDlpV2InfoTypePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypePtrOutput) ToGooglePrivacyDlpV2InfoTypePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypePtrOutput) Elem() GooglePrivacyDlpV2InfoTypeOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InfoType) GooglePrivacyDlpV2InfoType {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2InfoType
		return ret
	}).(GooglePrivacyDlpV2InfoTypeOutput)
}

// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`.
func (o GooglePrivacyDlpV2InfoTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InfoType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2InfoTypeArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InfoType)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeArrayOutput) ToGooglePrivacyDlpV2InfoTypeArrayOutput() GooglePrivacyDlpV2InfoTypeArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeArrayOutput) ToGooglePrivacyDlpV2InfoTypeArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2InfoTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2InfoType {
		return vs[0].([]GooglePrivacyDlpV2InfoType)[vs[1].(int)]
	}).(GooglePrivacyDlpV2InfoTypeOutput)
}

// Max findings configuration per infoType, per content item or long running DlpJob.
type GooglePrivacyDlpV2InfoTypeLimit struct {
	// Type of information the findings limit applies to. Only one limit per info_type should be provided. If InfoTypeLimit does not have an info_type, the DLP API applies the limit against all info_types that are found but not specified in another InfoTypeLimit.
	InfoType *GooglePrivacyDlpV2InfoType `pulumi:"infoType"`
	// Max findings limit for the given infoType.
	MaxFindings *int `pulumi:"maxFindings"`
}

// GooglePrivacyDlpV2InfoTypeLimitInput is an input type that accepts GooglePrivacyDlpV2InfoTypeLimitArgs and GooglePrivacyDlpV2InfoTypeLimitOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeLimitInput` via:
//
//          GooglePrivacyDlpV2InfoTypeLimitArgs{...}
type GooglePrivacyDlpV2InfoTypeLimitInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeLimitOutput() GooglePrivacyDlpV2InfoTypeLimitOutput
	ToGooglePrivacyDlpV2InfoTypeLimitOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeLimitOutput
}

// Max findings configuration per infoType, per content item or long running DlpJob.
type GooglePrivacyDlpV2InfoTypeLimitArgs struct {
	// Type of information the findings limit applies to. Only one limit per info_type should be provided. If InfoTypeLimit does not have an info_type, the DLP API applies the limit against all info_types that are found but not specified in another InfoTypeLimit.
	InfoType GooglePrivacyDlpV2InfoTypePtrInput `pulumi:"infoType"`
	// Max findings limit for the given infoType.
	MaxFindings pulumi.IntPtrInput `pulumi:"maxFindings"`
}

func (GooglePrivacyDlpV2InfoTypeLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeLimit)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeLimitArgs) ToGooglePrivacyDlpV2InfoTypeLimitOutput() GooglePrivacyDlpV2InfoTypeLimitOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeLimitOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeLimitArgs) ToGooglePrivacyDlpV2InfoTypeLimitOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeLimitOutput)
}

// GooglePrivacyDlpV2InfoTypeLimitArrayInput is an input type that accepts GooglePrivacyDlpV2InfoTypeLimitArray and GooglePrivacyDlpV2InfoTypeLimitArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeLimitArrayInput` via:
//
//          GooglePrivacyDlpV2InfoTypeLimitArray{ GooglePrivacyDlpV2InfoTypeLimitArgs{...} }
type GooglePrivacyDlpV2InfoTypeLimitArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeLimitArrayOutput() GooglePrivacyDlpV2InfoTypeLimitArrayOutput
	ToGooglePrivacyDlpV2InfoTypeLimitArrayOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeLimitArrayOutput
}

type GooglePrivacyDlpV2InfoTypeLimitArray []GooglePrivacyDlpV2InfoTypeLimitInput

func (GooglePrivacyDlpV2InfoTypeLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InfoTypeLimit)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeLimitArray) ToGooglePrivacyDlpV2InfoTypeLimitArrayOutput() GooglePrivacyDlpV2InfoTypeLimitArrayOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeLimitArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeLimitArray) ToGooglePrivacyDlpV2InfoTypeLimitArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeLimitArrayOutput)
}

// Max findings configuration per infoType, per content item or long running DlpJob.
type GooglePrivacyDlpV2InfoTypeLimitOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeLimit)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeLimitOutput) ToGooglePrivacyDlpV2InfoTypeLimitOutput() GooglePrivacyDlpV2InfoTypeLimitOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeLimitOutput) ToGooglePrivacyDlpV2InfoTypeLimitOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeLimitOutput {
	return o
}

// Type of information the findings limit applies to. Only one limit per info_type should be provided. If InfoTypeLimit does not have an info_type, the DLP API applies the limit against all info_types that are found but not specified in another InfoTypeLimit.
func (o GooglePrivacyDlpV2InfoTypeLimitOutput) InfoType() GooglePrivacyDlpV2InfoTypePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InfoTypeLimit) *GooglePrivacyDlpV2InfoType { return v.InfoType }).(GooglePrivacyDlpV2InfoTypePtrOutput)
}

// Max findings limit for the given infoType.
func (o GooglePrivacyDlpV2InfoTypeLimitOutput) MaxFindings() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InfoTypeLimit) *int { return v.MaxFindings }).(pulumi.IntPtrOutput)
}

type GooglePrivacyDlpV2InfoTypeLimitArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InfoTypeLimit)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeLimitArrayOutput) ToGooglePrivacyDlpV2InfoTypeLimitArrayOutput() GooglePrivacyDlpV2InfoTypeLimitArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeLimitArrayOutput) ToGooglePrivacyDlpV2InfoTypeLimitArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeLimitArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeLimitArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2InfoTypeLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2InfoTypeLimit {
		return vs[0].([]GooglePrivacyDlpV2InfoTypeLimit)[vs[1].(int)]
	}).(GooglePrivacyDlpV2InfoTypeLimitOutput)
}

// Max findings configuration per infoType, per content item or long running DlpJob.
type GooglePrivacyDlpV2InfoTypeLimitResponse struct {
	// Type of information the findings limit applies to. Only one limit per info_type should be provided. If InfoTypeLimit does not have an info_type, the DLP API applies the limit against all info_types that are found but not specified in another InfoTypeLimit.
	InfoType GooglePrivacyDlpV2InfoTypeResponse `pulumi:"infoType"`
	// Max findings limit for the given infoType.
	MaxFindings int `pulumi:"maxFindings"`
}

// GooglePrivacyDlpV2InfoTypeLimitResponseInput is an input type that accepts GooglePrivacyDlpV2InfoTypeLimitResponseArgs and GooglePrivacyDlpV2InfoTypeLimitResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeLimitResponseInput` via:
//
//          GooglePrivacyDlpV2InfoTypeLimitResponseArgs{...}
type GooglePrivacyDlpV2InfoTypeLimitResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeLimitResponseOutput() GooglePrivacyDlpV2InfoTypeLimitResponseOutput
	ToGooglePrivacyDlpV2InfoTypeLimitResponseOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeLimitResponseOutput
}

// Max findings configuration per infoType, per content item or long running DlpJob.
type GooglePrivacyDlpV2InfoTypeLimitResponseArgs struct {
	// Type of information the findings limit applies to. Only one limit per info_type should be provided. If InfoTypeLimit does not have an info_type, the DLP API applies the limit against all info_types that are found but not specified in another InfoTypeLimit.
	InfoType GooglePrivacyDlpV2InfoTypeResponseInput `pulumi:"infoType"`
	// Max findings limit for the given infoType.
	MaxFindings pulumi.IntInput `pulumi:"maxFindings"`
}

func (GooglePrivacyDlpV2InfoTypeLimitResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeLimitResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeLimitResponseArgs) ToGooglePrivacyDlpV2InfoTypeLimitResponseOutput() GooglePrivacyDlpV2InfoTypeLimitResponseOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeLimitResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeLimitResponseArgs) ToGooglePrivacyDlpV2InfoTypeLimitResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeLimitResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeLimitResponseOutput)
}

// GooglePrivacyDlpV2InfoTypeLimitResponseArrayInput is an input type that accepts GooglePrivacyDlpV2InfoTypeLimitResponseArray and GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeLimitResponseArrayInput` via:
//
//          GooglePrivacyDlpV2InfoTypeLimitResponseArray{ GooglePrivacyDlpV2InfoTypeLimitResponseArgs{...} }
type GooglePrivacyDlpV2InfoTypeLimitResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput() GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput
	ToGooglePrivacyDlpV2InfoTypeLimitResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput
}

type GooglePrivacyDlpV2InfoTypeLimitResponseArray []GooglePrivacyDlpV2InfoTypeLimitResponseInput

func (GooglePrivacyDlpV2InfoTypeLimitResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InfoTypeLimitResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeLimitResponseArray) ToGooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput() GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeLimitResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeLimitResponseArray) ToGooglePrivacyDlpV2InfoTypeLimitResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput)
}

// Max findings configuration per infoType, per content item or long running DlpJob.
type GooglePrivacyDlpV2InfoTypeLimitResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeLimitResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeLimitResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeLimitResponseOutput) ToGooglePrivacyDlpV2InfoTypeLimitResponseOutput() GooglePrivacyDlpV2InfoTypeLimitResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeLimitResponseOutput) ToGooglePrivacyDlpV2InfoTypeLimitResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeLimitResponseOutput {
	return o
}

// Type of information the findings limit applies to. Only one limit per info_type should be provided. If InfoTypeLimit does not have an info_type, the DLP API applies the limit against all info_types that are found but not specified in another InfoTypeLimit.
func (o GooglePrivacyDlpV2InfoTypeLimitResponseOutput) InfoType() GooglePrivacyDlpV2InfoTypeResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InfoTypeLimitResponse) GooglePrivacyDlpV2InfoTypeResponse { return v.InfoType }).(GooglePrivacyDlpV2InfoTypeResponseOutput)
}

// Max findings limit for the given infoType.
func (o GooglePrivacyDlpV2InfoTypeLimitResponseOutput) MaxFindings() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InfoTypeLimitResponse) int { return v.MaxFindings }).(pulumi.IntOutput)
}

type GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InfoTypeLimitResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput) ToGooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput() GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput) ToGooglePrivacyDlpV2InfoTypeLimitResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2InfoTypeLimitResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2InfoTypeLimitResponse {
		return vs[0].([]GooglePrivacyDlpV2InfoTypeLimitResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2InfoTypeLimitResponseOutput)
}

// Type of information detected by the API.
type GooglePrivacyDlpV2InfoTypeResponse struct {
	// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`.
	Name string `pulumi:"name"`
}

// GooglePrivacyDlpV2InfoTypeResponseInput is an input type that accepts GooglePrivacyDlpV2InfoTypeResponseArgs and GooglePrivacyDlpV2InfoTypeResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeResponseInput` via:
//
//          GooglePrivacyDlpV2InfoTypeResponseArgs{...}
type GooglePrivacyDlpV2InfoTypeResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeResponseOutput() GooglePrivacyDlpV2InfoTypeResponseOutput
	ToGooglePrivacyDlpV2InfoTypeResponseOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeResponseOutput
}

// Type of information detected by the API.
type GooglePrivacyDlpV2InfoTypeResponseArgs struct {
	// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GooglePrivacyDlpV2InfoTypeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeResponseArgs) ToGooglePrivacyDlpV2InfoTypeResponseOutput() GooglePrivacyDlpV2InfoTypeResponseOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeResponseArgs) ToGooglePrivacyDlpV2InfoTypeResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeResponseOutput)
}

// GooglePrivacyDlpV2InfoTypeResponseArrayInput is an input type that accepts GooglePrivacyDlpV2InfoTypeResponseArray and GooglePrivacyDlpV2InfoTypeResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeResponseArrayInput` via:
//
//          GooglePrivacyDlpV2InfoTypeResponseArray{ GooglePrivacyDlpV2InfoTypeResponseArgs{...} }
type GooglePrivacyDlpV2InfoTypeResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeResponseArrayOutput() GooglePrivacyDlpV2InfoTypeResponseArrayOutput
	ToGooglePrivacyDlpV2InfoTypeResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeResponseArrayOutput
}

type GooglePrivacyDlpV2InfoTypeResponseArray []GooglePrivacyDlpV2InfoTypeResponseInput

func (GooglePrivacyDlpV2InfoTypeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InfoTypeResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeResponseArray) ToGooglePrivacyDlpV2InfoTypeResponseArrayOutput() GooglePrivacyDlpV2InfoTypeResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeResponseArray) ToGooglePrivacyDlpV2InfoTypeResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeResponseArrayOutput)
}

// Type of information detected by the API.
type GooglePrivacyDlpV2InfoTypeResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeResponseOutput) ToGooglePrivacyDlpV2InfoTypeResponseOutput() GooglePrivacyDlpV2InfoTypeResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeResponseOutput) ToGooglePrivacyDlpV2InfoTypeResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeResponseOutput {
	return o
}

// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`.
func (o GooglePrivacyDlpV2InfoTypeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InfoTypeResponse) string { return v.Name }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2InfoTypeResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InfoTypeResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeResponseArrayOutput) ToGooglePrivacyDlpV2InfoTypeResponseArrayOutput() GooglePrivacyDlpV2InfoTypeResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeResponseArrayOutput) ToGooglePrivacyDlpV2InfoTypeResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2InfoTypeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2InfoTypeResponse {
		return vs[0].([]GooglePrivacyDlpV2InfoTypeResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2InfoTypeResponseOutput)
}

// Statistics regarding a specific InfoType.
type GooglePrivacyDlpV2InfoTypeStatsResponse struct {
	// Number of findings for this infoType.
	Count string `pulumi:"count"`
	// The type of finding this stat is for.
	InfoType GooglePrivacyDlpV2InfoTypeResponse `pulumi:"infoType"`
}

// GooglePrivacyDlpV2InfoTypeStatsResponseInput is an input type that accepts GooglePrivacyDlpV2InfoTypeStatsResponseArgs and GooglePrivacyDlpV2InfoTypeStatsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeStatsResponseInput` via:
//
//          GooglePrivacyDlpV2InfoTypeStatsResponseArgs{...}
type GooglePrivacyDlpV2InfoTypeStatsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeStatsResponseOutput() GooglePrivacyDlpV2InfoTypeStatsResponseOutput
	ToGooglePrivacyDlpV2InfoTypeStatsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeStatsResponseOutput
}

// Statistics regarding a specific InfoType.
type GooglePrivacyDlpV2InfoTypeStatsResponseArgs struct {
	// Number of findings for this infoType.
	Count pulumi.StringInput `pulumi:"count"`
	// The type of finding this stat is for.
	InfoType GooglePrivacyDlpV2InfoTypeResponseInput `pulumi:"infoType"`
}

func (GooglePrivacyDlpV2InfoTypeStatsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeStatsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeStatsResponseArgs) ToGooglePrivacyDlpV2InfoTypeStatsResponseOutput() GooglePrivacyDlpV2InfoTypeStatsResponseOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeStatsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeStatsResponseArgs) ToGooglePrivacyDlpV2InfoTypeStatsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeStatsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeStatsResponseOutput)
}

// GooglePrivacyDlpV2InfoTypeStatsResponseArrayInput is an input type that accepts GooglePrivacyDlpV2InfoTypeStatsResponseArray and GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeStatsResponseArrayInput` via:
//
//          GooglePrivacyDlpV2InfoTypeStatsResponseArray{ GooglePrivacyDlpV2InfoTypeStatsResponseArgs{...} }
type GooglePrivacyDlpV2InfoTypeStatsResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput() GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput
	ToGooglePrivacyDlpV2InfoTypeStatsResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput
}

type GooglePrivacyDlpV2InfoTypeStatsResponseArray []GooglePrivacyDlpV2InfoTypeStatsResponseInput

func (GooglePrivacyDlpV2InfoTypeStatsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InfoTypeStatsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeStatsResponseArray) ToGooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput() GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeStatsResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeStatsResponseArray) ToGooglePrivacyDlpV2InfoTypeStatsResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput)
}

// Statistics regarding a specific InfoType.
type GooglePrivacyDlpV2InfoTypeStatsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeStatsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeStatsResponseOutput) ToGooglePrivacyDlpV2InfoTypeStatsResponseOutput() GooglePrivacyDlpV2InfoTypeStatsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeStatsResponseOutput) ToGooglePrivacyDlpV2InfoTypeStatsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeStatsResponseOutput {
	return o
}

// Number of findings for this infoType.
func (o GooglePrivacyDlpV2InfoTypeStatsResponseOutput) Count() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InfoTypeStatsResponse) string { return v.Count }).(pulumi.StringOutput)
}

// The type of finding this stat is for.
func (o GooglePrivacyDlpV2InfoTypeStatsResponseOutput) InfoType() GooglePrivacyDlpV2InfoTypeResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InfoTypeStatsResponse) GooglePrivacyDlpV2InfoTypeResponse { return v.InfoType }).(GooglePrivacyDlpV2InfoTypeResponseOutput)
}

type GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InfoTypeStatsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput) ToGooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput() GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput) ToGooglePrivacyDlpV2InfoTypeStatsResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2InfoTypeStatsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2InfoTypeStatsResponse {
		return vs[0].([]GooglePrivacyDlpV2InfoTypeStatsResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2InfoTypeStatsResponseOutput)
}

// A transformation to apply to text that is identified as a specific info_type.
type GooglePrivacyDlpV2InfoTypeTransformation struct {
	// InfoTypes to apply the transformation to. An empty list will cause this transformation to apply to all findings that correspond to infoTypes that were requested in `InspectConfig`.
	InfoTypes []GooglePrivacyDlpV2InfoType `pulumi:"infoTypes"`
	// Primitive transformation to apply to the infoType.
	PrimitiveTransformation GooglePrivacyDlpV2PrimitiveTransformation `pulumi:"primitiveTransformation"`
}

// GooglePrivacyDlpV2InfoTypeTransformationInput is an input type that accepts GooglePrivacyDlpV2InfoTypeTransformationArgs and GooglePrivacyDlpV2InfoTypeTransformationOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeTransformationInput` via:
//
//          GooglePrivacyDlpV2InfoTypeTransformationArgs{...}
type GooglePrivacyDlpV2InfoTypeTransformationInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeTransformationOutput() GooglePrivacyDlpV2InfoTypeTransformationOutput
	ToGooglePrivacyDlpV2InfoTypeTransformationOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeTransformationOutput
}

// A transformation to apply to text that is identified as a specific info_type.
type GooglePrivacyDlpV2InfoTypeTransformationArgs struct {
	// InfoTypes to apply the transformation to. An empty list will cause this transformation to apply to all findings that correspond to infoTypes that were requested in `InspectConfig`.
	InfoTypes GooglePrivacyDlpV2InfoTypeArrayInput `pulumi:"infoTypes"`
	// Primitive transformation to apply to the infoType.
	PrimitiveTransformation GooglePrivacyDlpV2PrimitiveTransformationInput `pulumi:"primitiveTransformation"`
}

func (GooglePrivacyDlpV2InfoTypeTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeTransformation)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeTransformationArgs) ToGooglePrivacyDlpV2InfoTypeTransformationOutput() GooglePrivacyDlpV2InfoTypeTransformationOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeTransformationOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeTransformationArgs) ToGooglePrivacyDlpV2InfoTypeTransformationOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeTransformationOutput)
}

// GooglePrivacyDlpV2InfoTypeTransformationArrayInput is an input type that accepts GooglePrivacyDlpV2InfoTypeTransformationArray and GooglePrivacyDlpV2InfoTypeTransformationArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeTransformationArrayInput` via:
//
//          GooglePrivacyDlpV2InfoTypeTransformationArray{ GooglePrivacyDlpV2InfoTypeTransformationArgs{...} }
type GooglePrivacyDlpV2InfoTypeTransformationArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeTransformationArrayOutput() GooglePrivacyDlpV2InfoTypeTransformationArrayOutput
	ToGooglePrivacyDlpV2InfoTypeTransformationArrayOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeTransformationArrayOutput
}

type GooglePrivacyDlpV2InfoTypeTransformationArray []GooglePrivacyDlpV2InfoTypeTransformationInput

func (GooglePrivacyDlpV2InfoTypeTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InfoTypeTransformation)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeTransformationArray) ToGooglePrivacyDlpV2InfoTypeTransformationArrayOutput() GooglePrivacyDlpV2InfoTypeTransformationArrayOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeTransformationArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeTransformationArray) ToGooglePrivacyDlpV2InfoTypeTransformationArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeTransformationArrayOutput)
}

// A transformation to apply to text that is identified as a specific info_type.
type GooglePrivacyDlpV2InfoTypeTransformationOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeTransformation)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeTransformationOutput) ToGooglePrivacyDlpV2InfoTypeTransformationOutput() GooglePrivacyDlpV2InfoTypeTransformationOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeTransformationOutput) ToGooglePrivacyDlpV2InfoTypeTransformationOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationOutput {
	return o
}

// InfoTypes to apply the transformation to. An empty list will cause this transformation to apply to all findings that correspond to infoTypes that were requested in `InspectConfig`.
func (o GooglePrivacyDlpV2InfoTypeTransformationOutput) InfoTypes() GooglePrivacyDlpV2InfoTypeArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InfoTypeTransformation) []GooglePrivacyDlpV2InfoType { return v.InfoTypes }).(GooglePrivacyDlpV2InfoTypeArrayOutput)
}

// Primitive transformation to apply to the infoType.
func (o GooglePrivacyDlpV2InfoTypeTransformationOutput) PrimitiveTransformation() GooglePrivacyDlpV2PrimitiveTransformationOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InfoTypeTransformation) GooglePrivacyDlpV2PrimitiveTransformation {
		return v.PrimitiveTransformation
	}).(GooglePrivacyDlpV2PrimitiveTransformationOutput)
}

type GooglePrivacyDlpV2InfoTypeTransformationArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InfoTypeTransformation)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeTransformationArrayOutput) ToGooglePrivacyDlpV2InfoTypeTransformationArrayOutput() GooglePrivacyDlpV2InfoTypeTransformationArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeTransformationArrayOutput) ToGooglePrivacyDlpV2InfoTypeTransformationArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeTransformationArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2InfoTypeTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2InfoTypeTransformation {
		return vs[0].([]GooglePrivacyDlpV2InfoTypeTransformation)[vs[1].(int)]
	}).(GooglePrivacyDlpV2InfoTypeTransformationOutput)
}

// A transformation to apply to text that is identified as a specific info_type.
type GooglePrivacyDlpV2InfoTypeTransformationResponse struct {
	// InfoTypes to apply the transformation to. An empty list will cause this transformation to apply to all findings that correspond to infoTypes that were requested in `InspectConfig`.
	InfoTypes []GooglePrivacyDlpV2InfoTypeResponse `pulumi:"infoTypes"`
	// Primitive transformation to apply to the infoType.
	PrimitiveTransformation GooglePrivacyDlpV2PrimitiveTransformationResponse `pulumi:"primitiveTransformation"`
}

// GooglePrivacyDlpV2InfoTypeTransformationResponseInput is an input type that accepts GooglePrivacyDlpV2InfoTypeTransformationResponseArgs and GooglePrivacyDlpV2InfoTypeTransformationResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeTransformationResponseInput` via:
//
//          GooglePrivacyDlpV2InfoTypeTransformationResponseArgs{...}
type GooglePrivacyDlpV2InfoTypeTransformationResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeTransformationResponseOutput() GooglePrivacyDlpV2InfoTypeTransformationResponseOutput
	ToGooglePrivacyDlpV2InfoTypeTransformationResponseOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeTransformationResponseOutput
}

// A transformation to apply to text that is identified as a specific info_type.
type GooglePrivacyDlpV2InfoTypeTransformationResponseArgs struct {
	// InfoTypes to apply the transformation to. An empty list will cause this transformation to apply to all findings that correspond to infoTypes that were requested in `InspectConfig`.
	InfoTypes GooglePrivacyDlpV2InfoTypeResponseArrayInput `pulumi:"infoTypes"`
	// Primitive transformation to apply to the infoType.
	PrimitiveTransformation GooglePrivacyDlpV2PrimitiveTransformationResponseInput `pulumi:"primitiveTransformation"`
}

func (GooglePrivacyDlpV2InfoTypeTransformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeTransformationResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeTransformationResponseArgs) ToGooglePrivacyDlpV2InfoTypeTransformationResponseOutput() GooglePrivacyDlpV2InfoTypeTransformationResponseOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeTransformationResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeTransformationResponseArgs) ToGooglePrivacyDlpV2InfoTypeTransformationResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeTransformationResponseOutput)
}

// GooglePrivacyDlpV2InfoTypeTransformationResponseArrayInput is an input type that accepts GooglePrivacyDlpV2InfoTypeTransformationResponseArray and GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeTransformationResponseArrayInput` via:
//
//          GooglePrivacyDlpV2InfoTypeTransformationResponseArray{ GooglePrivacyDlpV2InfoTypeTransformationResponseArgs{...} }
type GooglePrivacyDlpV2InfoTypeTransformationResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput() GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput
	ToGooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput
}

type GooglePrivacyDlpV2InfoTypeTransformationResponseArray []GooglePrivacyDlpV2InfoTypeTransformationResponseInput

func (GooglePrivacyDlpV2InfoTypeTransformationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InfoTypeTransformationResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeTransformationResponseArray) ToGooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput() GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeTransformationResponseArray) ToGooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput)
}

// A transformation to apply to text that is identified as a specific info_type.
type GooglePrivacyDlpV2InfoTypeTransformationResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeTransformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeTransformationResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeTransformationResponseOutput) ToGooglePrivacyDlpV2InfoTypeTransformationResponseOutput() GooglePrivacyDlpV2InfoTypeTransformationResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeTransformationResponseOutput) ToGooglePrivacyDlpV2InfoTypeTransformationResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationResponseOutput {
	return o
}

// InfoTypes to apply the transformation to. An empty list will cause this transformation to apply to all findings that correspond to infoTypes that were requested in `InspectConfig`.
func (o GooglePrivacyDlpV2InfoTypeTransformationResponseOutput) InfoTypes() GooglePrivacyDlpV2InfoTypeResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InfoTypeTransformationResponse) []GooglePrivacyDlpV2InfoTypeResponse {
		return v.InfoTypes
	}).(GooglePrivacyDlpV2InfoTypeResponseArrayOutput)
}

// Primitive transformation to apply to the infoType.
func (o GooglePrivacyDlpV2InfoTypeTransformationResponseOutput) PrimitiveTransformation() GooglePrivacyDlpV2PrimitiveTransformationResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InfoTypeTransformationResponse) GooglePrivacyDlpV2PrimitiveTransformationResponse {
		return v.PrimitiveTransformation
	}).(GooglePrivacyDlpV2PrimitiveTransformationResponseOutput)
}

type GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InfoTypeTransformationResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput) ToGooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput() GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput) ToGooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2InfoTypeTransformationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2InfoTypeTransformationResponse {
		return vs[0].([]GooglePrivacyDlpV2InfoTypeTransformationResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2InfoTypeTransformationResponseOutput)
}

// A type of transformation that will scan unstructured text and apply various `PrimitiveTransformation`s to each finding, where the transformation is applied to only values that were identified as a specific info_type.
type GooglePrivacyDlpV2InfoTypeTransformations struct {
	// Transformation for each infoType. Cannot specify more than one for a given infoType.
	Transformations []GooglePrivacyDlpV2InfoTypeTransformation `pulumi:"transformations"`
}

// GooglePrivacyDlpV2InfoTypeTransformationsInput is an input type that accepts GooglePrivacyDlpV2InfoTypeTransformationsArgs and GooglePrivacyDlpV2InfoTypeTransformationsOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeTransformationsInput` via:
//
//          GooglePrivacyDlpV2InfoTypeTransformationsArgs{...}
type GooglePrivacyDlpV2InfoTypeTransformationsInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeTransformationsOutput() GooglePrivacyDlpV2InfoTypeTransformationsOutput
	ToGooglePrivacyDlpV2InfoTypeTransformationsOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeTransformationsOutput
}

// A type of transformation that will scan unstructured text and apply various `PrimitiveTransformation`s to each finding, where the transformation is applied to only values that were identified as a specific info_type.
type GooglePrivacyDlpV2InfoTypeTransformationsArgs struct {
	// Transformation for each infoType. Cannot specify more than one for a given infoType.
	Transformations GooglePrivacyDlpV2InfoTypeTransformationArrayInput `pulumi:"transformations"`
}

func (GooglePrivacyDlpV2InfoTypeTransformationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeTransformations)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeTransformationsArgs) ToGooglePrivacyDlpV2InfoTypeTransformationsOutput() GooglePrivacyDlpV2InfoTypeTransformationsOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeTransformationsOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeTransformationsArgs) ToGooglePrivacyDlpV2InfoTypeTransformationsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeTransformationsOutput)
}

func (i GooglePrivacyDlpV2InfoTypeTransformationsArgs) ToGooglePrivacyDlpV2InfoTypeTransformationsPtrOutput() GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeTransformationsPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeTransformationsArgs) ToGooglePrivacyDlpV2InfoTypeTransformationsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeTransformationsOutput).ToGooglePrivacyDlpV2InfoTypeTransformationsPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2InfoTypeTransformationsPtrInput is an input type that accepts GooglePrivacyDlpV2InfoTypeTransformationsArgs, GooglePrivacyDlpV2InfoTypeTransformationsPtr and GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeTransformationsPtrInput` via:
//
//          GooglePrivacyDlpV2InfoTypeTransformationsArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2InfoTypeTransformationsPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeTransformationsPtrOutput() GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput
	ToGooglePrivacyDlpV2InfoTypeTransformationsPtrOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput
}

type googlePrivacyDlpV2InfoTypeTransformationsPtrType GooglePrivacyDlpV2InfoTypeTransformationsArgs

func GooglePrivacyDlpV2InfoTypeTransformationsPtr(v *GooglePrivacyDlpV2InfoTypeTransformationsArgs) GooglePrivacyDlpV2InfoTypeTransformationsPtrInput {
	return (*googlePrivacyDlpV2InfoTypeTransformationsPtrType)(v)
}

func (*googlePrivacyDlpV2InfoTypeTransformationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InfoTypeTransformations)(nil)).Elem()
}

func (i *googlePrivacyDlpV2InfoTypeTransformationsPtrType) ToGooglePrivacyDlpV2InfoTypeTransformationsPtrOutput() GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeTransformationsPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2InfoTypeTransformationsPtrType) ToGooglePrivacyDlpV2InfoTypeTransformationsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput)
}

// A type of transformation that will scan unstructured text and apply various `PrimitiveTransformation`s to each finding, where the transformation is applied to only values that were identified as a specific info_type.
type GooglePrivacyDlpV2InfoTypeTransformationsOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeTransformationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeTransformations)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeTransformationsOutput) ToGooglePrivacyDlpV2InfoTypeTransformationsOutput() GooglePrivacyDlpV2InfoTypeTransformationsOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeTransformationsOutput) ToGooglePrivacyDlpV2InfoTypeTransformationsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationsOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeTransformationsOutput) ToGooglePrivacyDlpV2InfoTypeTransformationsPtrOutput() GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput {
	return o.ToGooglePrivacyDlpV2InfoTypeTransformationsPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2InfoTypeTransformationsOutput) ToGooglePrivacyDlpV2InfoTypeTransformationsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2InfoTypeTransformations) *GooglePrivacyDlpV2InfoTypeTransformations {
		return &v
	}).(GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput)
}

// Transformation for each infoType. Cannot specify more than one for a given infoType.
func (o GooglePrivacyDlpV2InfoTypeTransformationsOutput) Transformations() GooglePrivacyDlpV2InfoTypeTransformationArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InfoTypeTransformations) []GooglePrivacyDlpV2InfoTypeTransformation {
		return v.Transformations
	}).(GooglePrivacyDlpV2InfoTypeTransformationArrayOutput)
}

type GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InfoTypeTransformations)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput) ToGooglePrivacyDlpV2InfoTypeTransformationsPtrOutput() GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput) ToGooglePrivacyDlpV2InfoTypeTransformationsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput) Elem() GooglePrivacyDlpV2InfoTypeTransformationsOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InfoTypeTransformations) GooglePrivacyDlpV2InfoTypeTransformations {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2InfoTypeTransformations
		return ret
	}).(GooglePrivacyDlpV2InfoTypeTransformationsOutput)
}

// Transformation for each infoType. Cannot specify more than one for a given infoType.
func (o GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput) Transformations() GooglePrivacyDlpV2InfoTypeTransformationArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InfoTypeTransformations) []GooglePrivacyDlpV2InfoTypeTransformation {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(GooglePrivacyDlpV2InfoTypeTransformationArrayOutput)
}

// A type of transformation that will scan unstructured text and apply various `PrimitiveTransformation`s to each finding, where the transformation is applied to only values that were identified as a specific info_type.
type GooglePrivacyDlpV2InfoTypeTransformationsResponse struct {
	// Transformation for each infoType. Cannot specify more than one for a given infoType.
	Transformations []GooglePrivacyDlpV2InfoTypeTransformationResponse `pulumi:"transformations"`
}

// GooglePrivacyDlpV2InfoTypeTransformationsResponseInput is an input type that accepts GooglePrivacyDlpV2InfoTypeTransformationsResponseArgs and GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeTransformationsResponseInput` via:
//
//          GooglePrivacyDlpV2InfoTypeTransformationsResponseArgs{...}
type GooglePrivacyDlpV2InfoTypeTransformationsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeTransformationsResponseOutput() GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput
	ToGooglePrivacyDlpV2InfoTypeTransformationsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput
}

// A type of transformation that will scan unstructured text and apply various `PrimitiveTransformation`s to each finding, where the transformation is applied to only values that were identified as a specific info_type.
type GooglePrivacyDlpV2InfoTypeTransformationsResponseArgs struct {
	// Transformation for each infoType. Cannot specify more than one for a given infoType.
	Transformations GooglePrivacyDlpV2InfoTypeTransformationResponseArrayInput `pulumi:"transformations"`
}

func (GooglePrivacyDlpV2InfoTypeTransformationsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeTransformationsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InfoTypeTransformationsResponseArgs) ToGooglePrivacyDlpV2InfoTypeTransformationsResponseOutput() GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeTransformationsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeTransformationsResponseArgs) ToGooglePrivacyDlpV2InfoTypeTransformationsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput)
}

func (i GooglePrivacyDlpV2InfoTypeTransformationsResponseArgs) ToGooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput() GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InfoTypeTransformationsResponseArgs) ToGooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput).ToGooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2InfoTypeTransformationsResponseArgs, GooglePrivacyDlpV2InfoTypeTransformationsResponsePtr and GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2InfoTypeTransformationsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput() GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput
	ToGooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput
}

type googlePrivacyDlpV2InfoTypeTransformationsResponsePtrType GooglePrivacyDlpV2InfoTypeTransformationsResponseArgs

func GooglePrivacyDlpV2InfoTypeTransformationsResponsePtr(v *GooglePrivacyDlpV2InfoTypeTransformationsResponseArgs) GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrInput {
	return (*googlePrivacyDlpV2InfoTypeTransformationsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2InfoTypeTransformationsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InfoTypeTransformationsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2InfoTypeTransformationsResponsePtrType) ToGooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput() GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2InfoTypeTransformationsResponsePtrType) ToGooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput)
}

// A type of transformation that will scan unstructured text and apply various `PrimitiveTransformation`s to each finding, where the transformation is applied to only values that were identified as a specific info_type.
type GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InfoTypeTransformationsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput) ToGooglePrivacyDlpV2InfoTypeTransformationsResponseOutput() GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput) ToGooglePrivacyDlpV2InfoTypeTransformationsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput) ToGooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput() GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput) ToGooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2InfoTypeTransformationsResponse) *GooglePrivacyDlpV2InfoTypeTransformationsResponse {
		return &v
	}).(GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput)
}

// Transformation for each infoType. Cannot specify more than one for a given infoType.
func (o GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput) Transformations() GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InfoTypeTransformationsResponse) []GooglePrivacyDlpV2InfoTypeTransformationResponse {
		return v.Transformations
	}).(GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput)
}

type GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InfoTypeTransformationsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput) ToGooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput() GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput) ToGooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput) Elem() GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InfoTypeTransformationsResponse) GooglePrivacyDlpV2InfoTypeTransformationsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2InfoTypeTransformationsResponse
		return ret
	}).(GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput)
}

// Transformation for each infoType. Cannot specify more than one for a given infoType.
func (o GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput) Transformations() GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InfoTypeTransformationsResponse) []GooglePrivacyDlpV2InfoTypeTransformationResponse {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput)
}

// Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
type GooglePrivacyDlpV2InspectConfig struct {
	// List of options defining data content to scan. If empty, text, images, and other content will be included.
	ContentOptions []GooglePrivacyDlpV2InspectConfigContentOptionsItem `pulumi:"contentOptions"`
	// CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.
	CustomInfoTypes []GooglePrivacyDlpV2CustomInfoType `pulumi:"customInfoTypes"`
	// When true, excludes type information of the findings.
	ExcludeInfoTypes *bool `pulumi:"excludeInfoTypes"`
	// When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote.
	IncludeQuote *bool `pulumi:"includeQuote"`
	// Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.
	InfoTypes []GooglePrivacyDlpV2InfoType `pulumi:"infoTypes"`
	// Configuration to control the number of findings returned.
	Limits *GooglePrivacyDlpV2FindingLimits `pulumi:"limits"`
	// Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.
	MinLikelihood *GooglePrivacyDlpV2InspectConfigMinLikelihood `pulumi:"minLikelihood"`
	// Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type.
	RuleSet []GooglePrivacyDlpV2InspectionRuleSet `pulumi:"ruleSet"`
}

// GooglePrivacyDlpV2InspectConfigInput is an input type that accepts GooglePrivacyDlpV2InspectConfigArgs and GooglePrivacyDlpV2InspectConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectConfigInput` via:
//
//          GooglePrivacyDlpV2InspectConfigArgs{...}
type GooglePrivacyDlpV2InspectConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectConfigOutput() GooglePrivacyDlpV2InspectConfigOutput
	ToGooglePrivacyDlpV2InspectConfigOutputWithContext(context.Context) GooglePrivacyDlpV2InspectConfigOutput
}

// Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
type GooglePrivacyDlpV2InspectConfigArgs struct {
	// List of options defining data content to scan. If empty, text, images, and other content will be included.
	ContentOptions GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayInput `pulumi:"contentOptions"`
	// CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.
	CustomInfoTypes GooglePrivacyDlpV2CustomInfoTypeArrayInput `pulumi:"customInfoTypes"`
	// When true, excludes type information of the findings.
	ExcludeInfoTypes pulumi.BoolPtrInput `pulumi:"excludeInfoTypes"`
	// When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote.
	IncludeQuote pulumi.BoolPtrInput `pulumi:"includeQuote"`
	// Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.
	InfoTypes GooglePrivacyDlpV2InfoTypeArrayInput `pulumi:"infoTypes"`
	// Configuration to control the number of findings returned.
	Limits GooglePrivacyDlpV2FindingLimitsPtrInput `pulumi:"limits"`
	// Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.
	MinLikelihood GooglePrivacyDlpV2InspectConfigMinLikelihoodPtrInput `pulumi:"minLikelihood"`
	// Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type.
	RuleSet GooglePrivacyDlpV2InspectionRuleSetArrayInput `pulumi:"ruleSet"`
}

func (GooglePrivacyDlpV2InspectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectConfigArgs) ToGooglePrivacyDlpV2InspectConfigOutput() GooglePrivacyDlpV2InspectConfigOutput {
	return i.ToGooglePrivacyDlpV2InspectConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectConfigArgs) ToGooglePrivacyDlpV2InspectConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectConfigOutput)
}

func (i GooglePrivacyDlpV2InspectConfigArgs) ToGooglePrivacyDlpV2InspectConfigPtrOutput() GooglePrivacyDlpV2InspectConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2InspectConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectConfigArgs) ToGooglePrivacyDlpV2InspectConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectConfigOutput).ToGooglePrivacyDlpV2InspectConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2InspectConfigPtrInput is an input type that accepts GooglePrivacyDlpV2InspectConfigArgs, GooglePrivacyDlpV2InspectConfigPtr and GooglePrivacyDlpV2InspectConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectConfigPtrInput` via:
//
//          GooglePrivacyDlpV2InspectConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2InspectConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectConfigPtrOutput() GooglePrivacyDlpV2InspectConfigPtrOutput
	ToGooglePrivacyDlpV2InspectConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2InspectConfigPtrOutput
}

type googlePrivacyDlpV2InspectConfigPtrType GooglePrivacyDlpV2InspectConfigArgs

func GooglePrivacyDlpV2InspectConfigPtr(v *GooglePrivacyDlpV2InspectConfigArgs) GooglePrivacyDlpV2InspectConfigPtrInput {
	return (*googlePrivacyDlpV2InspectConfigPtrType)(v)
}

func (*googlePrivacyDlpV2InspectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InspectConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2InspectConfigPtrType) ToGooglePrivacyDlpV2InspectConfigPtrOutput() GooglePrivacyDlpV2InspectConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2InspectConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2InspectConfigPtrType) ToGooglePrivacyDlpV2InspectConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectConfigPtrOutput)
}

// Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
type GooglePrivacyDlpV2InspectConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectConfigOutput) ToGooglePrivacyDlpV2InspectConfigOutput() GooglePrivacyDlpV2InspectConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectConfigOutput) ToGooglePrivacyDlpV2InspectConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectConfigOutput) ToGooglePrivacyDlpV2InspectConfigPtrOutput() GooglePrivacyDlpV2InspectConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2InspectConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2InspectConfigOutput) ToGooglePrivacyDlpV2InspectConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2InspectConfig) *GooglePrivacyDlpV2InspectConfig {
		return &v
	}).(GooglePrivacyDlpV2InspectConfigPtrOutput)
}

// List of options defining data content to scan. If empty, text, images, and other content will be included.
func (o GooglePrivacyDlpV2InspectConfigOutput) ContentOptions() GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfig) []GooglePrivacyDlpV2InspectConfigContentOptionsItem {
		return v.ContentOptions
	}).(GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput)
}

// CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.
func (o GooglePrivacyDlpV2InspectConfigOutput) CustomInfoTypes() GooglePrivacyDlpV2CustomInfoTypeArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfig) []GooglePrivacyDlpV2CustomInfoType { return v.CustomInfoTypes }).(GooglePrivacyDlpV2CustomInfoTypeArrayOutput)
}

// When true, excludes type information of the findings.
func (o GooglePrivacyDlpV2InspectConfigOutput) ExcludeInfoTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfig) *bool { return v.ExcludeInfoTypes }).(pulumi.BoolPtrOutput)
}

// When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote.
func (o GooglePrivacyDlpV2InspectConfigOutput) IncludeQuote() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfig) *bool { return v.IncludeQuote }).(pulumi.BoolPtrOutput)
}

// Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.
func (o GooglePrivacyDlpV2InspectConfigOutput) InfoTypes() GooglePrivacyDlpV2InfoTypeArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfig) []GooglePrivacyDlpV2InfoType { return v.InfoTypes }).(GooglePrivacyDlpV2InfoTypeArrayOutput)
}

// Configuration to control the number of findings returned.
func (o GooglePrivacyDlpV2InspectConfigOutput) Limits() GooglePrivacyDlpV2FindingLimitsPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfig) *GooglePrivacyDlpV2FindingLimits { return v.Limits }).(GooglePrivacyDlpV2FindingLimitsPtrOutput)
}

// Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.
func (o GooglePrivacyDlpV2InspectConfigOutput) MinLikelihood() GooglePrivacyDlpV2InspectConfigMinLikelihoodPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfig) *GooglePrivacyDlpV2InspectConfigMinLikelihood {
		return v.MinLikelihood
	}).(GooglePrivacyDlpV2InspectConfigMinLikelihoodPtrOutput)
}

// Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type.
func (o GooglePrivacyDlpV2InspectConfigOutput) RuleSet() GooglePrivacyDlpV2InspectionRuleSetArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfig) []GooglePrivacyDlpV2InspectionRuleSet { return v.RuleSet }).(GooglePrivacyDlpV2InspectionRuleSetArrayOutput)
}

type GooglePrivacyDlpV2InspectConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InspectConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectConfigPtrOutput) ToGooglePrivacyDlpV2InspectConfigPtrOutput() GooglePrivacyDlpV2InspectConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectConfigPtrOutput) ToGooglePrivacyDlpV2InspectConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectConfigPtrOutput) Elem() GooglePrivacyDlpV2InspectConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfig) GooglePrivacyDlpV2InspectConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2InspectConfig
		return ret
	}).(GooglePrivacyDlpV2InspectConfigOutput)
}

// List of options defining data content to scan. If empty, text, images, and other content will be included.
func (o GooglePrivacyDlpV2InspectConfigPtrOutput) ContentOptions() GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfig) []GooglePrivacyDlpV2InspectConfigContentOptionsItem {
		if v == nil {
			return nil
		}
		return v.ContentOptions
	}).(GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput)
}

// CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.
func (o GooglePrivacyDlpV2InspectConfigPtrOutput) CustomInfoTypes() GooglePrivacyDlpV2CustomInfoTypeArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfig) []GooglePrivacyDlpV2CustomInfoType {
		if v == nil {
			return nil
		}
		return v.CustomInfoTypes
	}).(GooglePrivacyDlpV2CustomInfoTypeArrayOutput)
}

// When true, excludes type information of the findings.
func (o GooglePrivacyDlpV2InspectConfigPtrOutput) ExcludeInfoTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeInfoTypes
	}).(pulumi.BoolPtrOutput)
}

// When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote.
func (o GooglePrivacyDlpV2InspectConfigPtrOutput) IncludeQuote() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeQuote
	}).(pulumi.BoolPtrOutput)
}

// Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.
func (o GooglePrivacyDlpV2InspectConfigPtrOutput) InfoTypes() GooglePrivacyDlpV2InfoTypeArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfig) []GooglePrivacyDlpV2InfoType {
		if v == nil {
			return nil
		}
		return v.InfoTypes
	}).(GooglePrivacyDlpV2InfoTypeArrayOutput)
}

// Configuration to control the number of findings returned.
func (o GooglePrivacyDlpV2InspectConfigPtrOutput) Limits() GooglePrivacyDlpV2FindingLimitsPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfig) *GooglePrivacyDlpV2FindingLimits {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(GooglePrivacyDlpV2FindingLimitsPtrOutput)
}

// Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.
func (o GooglePrivacyDlpV2InspectConfigPtrOutput) MinLikelihood() GooglePrivacyDlpV2InspectConfigMinLikelihoodPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfig) *GooglePrivacyDlpV2InspectConfigMinLikelihood {
		if v == nil {
			return nil
		}
		return v.MinLikelihood
	}).(GooglePrivacyDlpV2InspectConfigMinLikelihoodPtrOutput)
}

// Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type.
func (o GooglePrivacyDlpV2InspectConfigPtrOutput) RuleSet() GooglePrivacyDlpV2InspectionRuleSetArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfig) []GooglePrivacyDlpV2InspectionRuleSet {
		if v == nil {
			return nil
		}
		return v.RuleSet
	}).(GooglePrivacyDlpV2InspectionRuleSetArrayOutput)
}

// Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
type GooglePrivacyDlpV2InspectConfigResponse struct {
	// List of options defining data content to scan. If empty, text, images, and other content will be included.
	ContentOptions []string `pulumi:"contentOptions"`
	// CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.
	CustomInfoTypes []GooglePrivacyDlpV2CustomInfoTypeResponse `pulumi:"customInfoTypes"`
	// When true, excludes type information of the findings.
	ExcludeInfoTypes bool `pulumi:"excludeInfoTypes"`
	// When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote.
	IncludeQuote bool `pulumi:"includeQuote"`
	// Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.
	InfoTypes []GooglePrivacyDlpV2InfoTypeResponse `pulumi:"infoTypes"`
	// Configuration to control the number of findings returned.
	Limits GooglePrivacyDlpV2FindingLimitsResponse `pulumi:"limits"`
	// Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.
	MinLikelihood string `pulumi:"minLikelihood"`
	// Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type.
	RuleSet []GooglePrivacyDlpV2InspectionRuleSetResponse `pulumi:"ruleSet"`
}

// GooglePrivacyDlpV2InspectConfigResponseInput is an input type that accepts GooglePrivacyDlpV2InspectConfigResponseArgs and GooglePrivacyDlpV2InspectConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectConfigResponseInput` via:
//
//          GooglePrivacyDlpV2InspectConfigResponseArgs{...}
type GooglePrivacyDlpV2InspectConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectConfigResponseOutput() GooglePrivacyDlpV2InspectConfigResponseOutput
	ToGooglePrivacyDlpV2InspectConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2InspectConfigResponseOutput
}

// Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
type GooglePrivacyDlpV2InspectConfigResponseArgs struct {
	// List of options defining data content to scan. If empty, text, images, and other content will be included.
	ContentOptions pulumi.StringArrayInput `pulumi:"contentOptions"`
	// CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.
	CustomInfoTypes GooglePrivacyDlpV2CustomInfoTypeResponseArrayInput `pulumi:"customInfoTypes"`
	// When true, excludes type information of the findings.
	ExcludeInfoTypes pulumi.BoolInput `pulumi:"excludeInfoTypes"`
	// When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote.
	IncludeQuote pulumi.BoolInput `pulumi:"includeQuote"`
	// Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.
	InfoTypes GooglePrivacyDlpV2InfoTypeResponseArrayInput `pulumi:"infoTypes"`
	// Configuration to control the number of findings returned.
	Limits GooglePrivacyDlpV2FindingLimitsResponseInput `pulumi:"limits"`
	// Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.
	MinLikelihood pulumi.StringInput `pulumi:"minLikelihood"`
	// Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type.
	RuleSet GooglePrivacyDlpV2InspectionRuleSetResponseArrayInput `pulumi:"ruleSet"`
}

func (GooglePrivacyDlpV2InspectConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectConfigResponseArgs) ToGooglePrivacyDlpV2InspectConfigResponseOutput() GooglePrivacyDlpV2InspectConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2InspectConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectConfigResponseArgs) ToGooglePrivacyDlpV2InspectConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectConfigResponseOutput)
}

func (i GooglePrivacyDlpV2InspectConfigResponseArgs) ToGooglePrivacyDlpV2InspectConfigResponsePtrOutput() GooglePrivacyDlpV2InspectConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2InspectConfigResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectConfigResponseArgs) ToGooglePrivacyDlpV2InspectConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectConfigResponseOutput).ToGooglePrivacyDlpV2InspectConfigResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2InspectConfigResponsePtrInput is an input type that accepts GooglePrivacyDlpV2InspectConfigResponseArgs, GooglePrivacyDlpV2InspectConfigResponsePtr and GooglePrivacyDlpV2InspectConfigResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectConfigResponsePtrInput` via:
//
//          GooglePrivacyDlpV2InspectConfigResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2InspectConfigResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectConfigResponsePtrOutput() GooglePrivacyDlpV2InspectConfigResponsePtrOutput
	ToGooglePrivacyDlpV2InspectConfigResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2InspectConfigResponsePtrOutput
}

type googlePrivacyDlpV2InspectConfigResponsePtrType GooglePrivacyDlpV2InspectConfigResponseArgs

func GooglePrivacyDlpV2InspectConfigResponsePtr(v *GooglePrivacyDlpV2InspectConfigResponseArgs) GooglePrivacyDlpV2InspectConfigResponsePtrInput {
	return (*googlePrivacyDlpV2InspectConfigResponsePtrType)(v)
}

func (*googlePrivacyDlpV2InspectConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InspectConfigResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2InspectConfigResponsePtrType) ToGooglePrivacyDlpV2InspectConfigResponsePtrOutput() GooglePrivacyDlpV2InspectConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2InspectConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2InspectConfigResponsePtrType) ToGooglePrivacyDlpV2InspectConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectConfigResponsePtrOutput)
}

// Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
type GooglePrivacyDlpV2InspectConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectConfigResponseOutput) ToGooglePrivacyDlpV2InspectConfigResponseOutput() GooglePrivacyDlpV2InspectConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectConfigResponseOutput) ToGooglePrivacyDlpV2InspectConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectConfigResponseOutput) ToGooglePrivacyDlpV2InspectConfigResponsePtrOutput() GooglePrivacyDlpV2InspectConfigResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2InspectConfigResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2InspectConfigResponseOutput) ToGooglePrivacyDlpV2InspectConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2InspectConfigResponse) *GooglePrivacyDlpV2InspectConfigResponse {
		return &v
	}).(GooglePrivacyDlpV2InspectConfigResponsePtrOutput)
}

// List of options defining data content to scan. If empty, text, images, and other content will be included.
func (o GooglePrivacyDlpV2InspectConfigResponseOutput) ContentOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfigResponse) []string { return v.ContentOptions }).(pulumi.StringArrayOutput)
}

// CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.
func (o GooglePrivacyDlpV2InspectConfigResponseOutput) CustomInfoTypes() GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfigResponse) []GooglePrivacyDlpV2CustomInfoTypeResponse {
		return v.CustomInfoTypes
	}).(GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput)
}

// When true, excludes type information of the findings.
func (o GooglePrivacyDlpV2InspectConfigResponseOutput) ExcludeInfoTypes() pulumi.BoolOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfigResponse) bool { return v.ExcludeInfoTypes }).(pulumi.BoolOutput)
}

// When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote.
func (o GooglePrivacyDlpV2InspectConfigResponseOutput) IncludeQuote() pulumi.BoolOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfigResponse) bool { return v.IncludeQuote }).(pulumi.BoolOutput)
}

// Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.
func (o GooglePrivacyDlpV2InspectConfigResponseOutput) InfoTypes() GooglePrivacyDlpV2InfoTypeResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfigResponse) []GooglePrivacyDlpV2InfoTypeResponse {
		return v.InfoTypes
	}).(GooglePrivacyDlpV2InfoTypeResponseArrayOutput)
}

// Configuration to control the number of findings returned.
func (o GooglePrivacyDlpV2InspectConfigResponseOutput) Limits() GooglePrivacyDlpV2FindingLimitsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfigResponse) GooglePrivacyDlpV2FindingLimitsResponse {
		return v.Limits
	}).(GooglePrivacyDlpV2FindingLimitsResponseOutput)
}

// Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.
func (o GooglePrivacyDlpV2InspectConfigResponseOutput) MinLikelihood() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfigResponse) string { return v.MinLikelihood }).(pulumi.StringOutput)
}

// Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type.
func (o GooglePrivacyDlpV2InspectConfigResponseOutput) RuleSet() GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectConfigResponse) []GooglePrivacyDlpV2InspectionRuleSetResponse {
		return v.RuleSet
	}).(GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput)
}

type GooglePrivacyDlpV2InspectConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InspectConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectConfigResponsePtrOutput) ToGooglePrivacyDlpV2InspectConfigResponsePtrOutput() GooglePrivacyDlpV2InspectConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectConfigResponsePtrOutput) ToGooglePrivacyDlpV2InspectConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectConfigResponsePtrOutput) Elem() GooglePrivacyDlpV2InspectConfigResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfigResponse) GooglePrivacyDlpV2InspectConfigResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2InspectConfigResponse
		return ret
	}).(GooglePrivacyDlpV2InspectConfigResponseOutput)
}

// List of options defining data content to scan. If empty, text, images, and other content will be included.
func (o GooglePrivacyDlpV2InspectConfigResponsePtrOutput) ContentOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.ContentOptions
	}).(pulumi.StringArrayOutput)
}

// CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.
func (o GooglePrivacyDlpV2InspectConfigResponsePtrOutput) CustomInfoTypes() GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfigResponse) []GooglePrivacyDlpV2CustomInfoTypeResponse {
		if v == nil {
			return nil
		}
		return v.CustomInfoTypes
	}).(GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput)
}

// When true, excludes type information of the findings.
func (o GooglePrivacyDlpV2InspectConfigResponsePtrOutput) ExcludeInfoTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ExcludeInfoTypes
	}).(pulumi.BoolPtrOutput)
}

// When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote.
func (o GooglePrivacyDlpV2InspectConfigResponsePtrOutput) IncludeQuote() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IncludeQuote
	}).(pulumi.BoolPtrOutput)
}

// Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.
func (o GooglePrivacyDlpV2InspectConfigResponsePtrOutput) InfoTypes() GooglePrivacyDlpV2InfoTypeResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfigResponse) []GooglePrivacyDlpV2InfoTypeResponse {
		if v == nil {
			return nil
		}
		return v.InfoTypes
	}).(GooglePrivacyDlpV2InfoTypeResponseArrayOutput)
}

// Configuration to control the number of findings returned.
func (o GooglePrivacyDlpV2InspectConfigResponsePtrOutput) Limits() GooglePrivacyDlpV2FindingLimitsResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfigResponse) *GooglePrivacyDlpV2FindingLimitsResponse {
		if v == nil {
			return nil
		}
		return &v.Limits
	}).(GooglePrivacyDlpV2FindingLimitsResponsePtrOutput)
}

// Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.
func (o GooglePrivacyDlpV2InspectConfigResponsePtrOutput) MinLikelihood() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MinLikelihood
	}).(pulumi.StringPtrOutput)
}

// Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type.
func (o GooglePrivacyDlpV2InspectConfigResponsePtrOutput) RuleSet() GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectConfigResponse) []GooglePrivacyDlpV2InspectionRuleSetResponse {
		if v == nil {
			return nil
		}
		return v.RuleSet
	}).(GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput)
}

// The results of an inspect DataSource job.
type GooglePrivacyDlpV2InspectDataSourceDetailsResponse struct {
	// The configuration used for this job.
	RequestedOptions GooglePrivacyDlpV2RequestedOptionsResponse `pulumi:"requestedOptions"`
	// A summary of the outcome of this inspection job.
	Result GooglePrivacyDlpV2ResultResponse `pulumi:"result"`
}

// GooglePrivacyDlpV2InspectDataSourceDetailsResponseInput is an input type that accepts GooglePrivacyDlpV2InspectDataSourceDetailsResponseArgs and GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectDataSourceDetailsResponseInput` via:
//
//          GooglePrivacyDlpV2InspectDataSourceDetailsResponseArgs{...}
type GooglePrivacyDlpV2InspectDataSourceDetailsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput() GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput
	ToGooglePrivacyDlpV2InspectDataSourceDetailsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput
}

// The results of an inspect DataSource job.
type GooglePrivacyDlpV2InspectDataSourceDetailsResponseArgs struct {
	// The configuration used for this job.
	RequestedOptions GooglePrivacyDlpV2RequestedOptionsResponseInput `pulumi:"requestedOptions"`
	// A summary of the outcome of this inspection job.
	Result GooglePrivacyDlpV2ResultResponseInput `pulumi:"result"`
}

func (GooglePrivacyDlpV2InspectDataSourceDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectDataSourceDetailsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectDataSourceDetailsResponseArgs) ToGooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput() GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput {
	return i.ToGooglePrivacyDlpV2InspectDataSourceDetailsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectDataSourceDetailsResponseArgs) ToGooglePrivacyDlpV2InspectDataSourceDetailsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput)
}

func (i GooglePrivacyDlpV2InspectDataSourceDetailsResponseArgs) ToGooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput() GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectDataSourceDetailsResponseArgs) ToGooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput).ToGooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2InspectDataSourceDetailsResponseArgs, GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtr and GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2InspectDataSourceDetailsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput() GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput
	ToGooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput
}

type googlePrivacyDlpV2InspectDataSourceDetailsResponsePtrType GooglePrivacyDlpV2InspectDataSourceDetailsResponseArgs

func GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtr(v *GooglePrivacyDlpV2InspectDataSourceDetailsResponseArgs) GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrInput {
	return (*googlePrivacyDlpV2InspectDataSourceDetailsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2InspectDataSourceDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InspectDataSourceDetailsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2InspectDataSourceDetailsResponsePtrType) ToGooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput() GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2InspectDataSourceDetailsResponsePtrType) ToGooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput)
}

// The results of an inspect DataSource job.
type GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectDataSourceDetailsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput) ToGooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput() GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput) ToGooglePrivacyDlpV2InspectDataSourceDetailsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput) ToGooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput() GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput) ToGooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2InspectDataSourceDetailsResponse) *GooglePrivacyDlpV2InspectDataSourceDetailsResponse {
		return &v
	}).(GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput)
}

// The configuration used for this job.
func (o GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput) RequestedOptions() GooglePrivacyDlpV2RequestedOptionsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectDataSourceDetailsResponse) GooglePrivacyDlpV2RequestedOptionsResponse {
		return v.RequestedOptions
	}).(GooglePrivacyDlpV2RequestedOptionsResponseOutput)
}

// A summary of the outcome of this inspection job.
func (o GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput) Result() GooglePrivacyDlpV2ResultResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectDataSourceDetailsResponse) GooglePrivacyDlpV2ResultResponse {
		return v.Result
	}).(GooglePrivacyDlpV2ResultResponseOutput)
}

type GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InspectDataSourceDetailsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput) ToGooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput() GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput) ToGooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput) Elem() GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectDataSourceDetailsResponse) GooglePrivacyDlpV2InspectDataSourceDetailsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2InspectDataSourceDetailsResponse
		return ret
	}).(GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput)
}

// The configuration used for this job.
func (o GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput) RequestedOptions() GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectDataSourceDetailsResponse) *GooglePrivacyDlpV2RequestedOptionsResponse {
		if v == nil {
			return nil
		}
		return &v.RequestedOptions
	}).(GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput)
}

// A summary of the outcome of this inspection job.
func (o GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput) Result() GooglePrivacyDlpV2ResultResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectDataSourceDetailsResponse) *GooglePrivacyDlpV2ResultResponse {
		if v == nil {
			return nil
		}
		return &v.Result
	}).(GooglePrivacyDlpV2ResultResponsePtrOutput)
}

// Controls what and how to inspect for findings.
type GooglePrivacyDlpV2InspectJobConfig struct {
	// Actions to execute at the completion of the job.
	Actions []GooglePrivacyDlpV2Action `pulumi:"actions"`
	// How and what to scan for.
	InspectConfig *GooglePrivacyDlpV2InspectConfig `pulumi:"inspectConfig"`
	// If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
	InspectTemplateName *string `pulumi:"inspectTemplateName"`
	// The data to scan.
	StorageConfig *GooglePrivacyDlpV2StorageConfig `pulumi:"storageConfig"`
}

// GooglePrivacyDlpV2InspectJobConfigInput is an input type that accepts GooglePrivacyDlpV2InspectJobConfigArgs and GooglePrivacyDlpV2InspectJobConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectJobConfigInput` via:
//
//          GooglePrivacyDlpV2InspectJobConfigArgs{...}
type GooglePrivacyDlpV2InspectJobConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectJobConfigOutput() GooglePrivacyDlpV2InspectJobConfigOutput
	ToGooglePrivacyDlpV2InspectJobConfigOutputWithContext(context.Context) GooglePrivacyDlpV2InspectJobConfigOutput
}

// Controls what and how to inspect for findings.
type GooglePrivacyDlpV2InspectJobConfigArgs struct {
	// Actions to execute at the completion of the job.
	Actions GooglePrivacyDlpV2ActionArrayInput `pulumi:"actions"`
	// How and what to scan for.
	InspectConfig GooglePrivacyDlpV2InspectConfigPtrInput `pulumi:"inspectConfig"`
	// If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
	InspectTemplateName pulumi.StringPtrInput `pulumi:"inspectTemplateName"`
	// The data to scan.
	StorageConfig GooglePrivacyDlpV2StorageConfigPtrInput `pulumi:"storageConfig"`
}

func (GooglePrivacyDlpV2InspectJobConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectJobConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectJobConfigArgs) ToGooglePrivacyDlpV2InspectJobConfigOutput() GooglePrivacyDlpV2InspectJobConfigOutput {
	return i.ToGooglePrivacyDlpV2InspectJobConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectJobConfigArgs) ToGooglePrivacyDlpV2InspectJobConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectJobConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectJobConfigOutput)
}

func (i GooglePrivacyDlpV2InspectJobConfigArgs) ToGooglePrivacyDlpV2InspectJobConfigPtrOutput() GooglePrivacyDlpV2InspectJobConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2InspectJobConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectJobConfigArgs) ToGooglePrivacyDlpV2InspectJobConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectJobConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectJobConfigOutput).ToGooglePrivacyDlpV2InspectJobConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2InspectJobConfigPtrInput is an input type that accepts GooglePrivacyDlpV2InspectJobConfigArgs, GooglePrivacyDlpV2InspectJobConfigPtr and GooglePrivacyDlpV2InspectJobConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectJobConfigPtrInput` via:
//
//          GooglePrivacyDlpV2InspectJobConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2InspectJobConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectJobConfigPtrOutput() GooglePrivacyDlpV2InspectJobConfigPtrOutput
	ToGooglePrivacyDlpV2InspectJobConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2InspectJobConfigPtrOutput
}

type googlePrivacyDlpV2InspectJobConfigPtrType GooglePrivacyDlpV2InspectJobConfigArgs

func GooglePrivacyDlpV2InspectJobConfigPtr(v *GooglePrivacyDlpV2InspectJobConfigArgs) GooglePrivacyDlpV2InspectJobConfigPtrInput {
	return (*googlePrivacyDlpV2InspectJobConfigPtrType)(v)
}

func (*googlePrivacyDlpV2InspectJobConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InspectJobConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2InspectJobConfigPtrType) ToGooglePrivacyDlpV2InspectJobConfigPtrOutput() GooglePrivacyDlpV2InspectJobConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2InspectJobConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2InspectJobConfigPtrType) ToGooglePrivacyDlpV2InspectJobConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectJobConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectJobConfigPtrOutput)
}

// Controls what and how to inspect for findings.
type GooglePrivacyDlpV2InspectJobConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectJobConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectJobConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectJobConfigOutput) ToGooglePrivacyDlpV2InspectJobConfigOutput() GooglePrivacyDlpV2InspectJobConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectJobConfigOutput) ToGooglePrivacyDlpV2InspectJobConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectJobConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectJobConfigOutput) ToGooglePrivacyDlpV2InspectJobConfigPtrOutput() GooglePrivacyDlpV2InspectJobConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2InspectJobConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2InspectJobConfigOutput) ToGooglePrivacyDlpV2InspectJobConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectJobConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2InspectJobConfig) *GooglePrivacyDlpV2InspectJobConfig {
		return &v
	}).(GooglePrivacyDlpV2InspectJobConfigPtrOutput)
}

// Actions to execute at the completion of the job.
func (o GooglePrivacyDlpV2InspectJobConfigOutput) Actions() GooglePrivacyDlpV2ActionArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectJobConfig) []GooglePrivacyDlpV2Action { return v.Actions }).(GooglePrivacyDlpV2ActionArrayOutput)
}

// How and what to scan for.
func (o GooglePrivacyDlpV2InspectJobConfigOutput) InspectConfig() GooglePrivacyDlpV2InspectConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectJobConfig) *GooglePrivacyDlpV2InspectConfig { return v.InspectConfig }).(GooglePrivacyDlpV2InspectConfigPtrOutput)
}

// If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
func (o GooglePrivacyDlpV2InspectJobConfigOutput) InspectTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectJobConfig) *string { return v.InspectTemplateName }).(pulumi.StringPtrOutput)
}

// The data to scan.
func (o GooglePrivacyDlpV2InspectJobConfigOutput) StorageConfig() GooglePrivacyDlpV2StorageConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectJobConfig) *GooglePrivacyDlpV2StorageConfig { return v.StorageConfig }).(GooglePrivacyDlpV2StorageConfigPtrOutput)
}

type GooglePrivacyDlpV2InspectJobConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectJobConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InspectJobConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectJobConfigPtrOutput) ToGooglePrivacyDlpV2InspectJobConfigPtrOutput() GooglePrivacyDlpV2InspectJobConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectJobConfigPtrOutput) ToGooglePrivacyDlpV2InspectJobConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectJobConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectJobConfigPtrOutput) Elem() GooglePrivacyDlpV2InspectJobConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectJobConfig) GooglePrivacyDlpV2InspectJobConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2InspectJobConfig
		return ret
	}).(GooglePrivacyDlpV2InspectJobConfigOutput)
}

// Actions to execute at the completion of the job.
func (o GooglePrivacyDlpV2InspectJobConfigPtrOutput) Actions() GooglePrivacyDlpV2ActionArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectJobConfig) []GooglePrivacyDlpV2Action {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(GooglePrivacyDlpV2ActionArrayOutput)
}

// How and what to scan for.
func (o GooglePrivacyDlpV2InspectJobConfigPtrOutput) InspectConfig() GooglePrivacyDlpV2InspectConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectJobConfig) *GooglePrivacyDlpV2InspectConfig {
		if v == nil {
			return nil
		}
		return v.InspectConfig
	}).(GooglePrivacyDlpV2InspectConfigPtrOutput)
}

// If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
func (o GooglePrivacyDlpV2InspectJobConfigPtrOutput) InspectTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectJobConfig) *string {
		if v == nil {
			return nil
		}
		return v.InspectTemplateName
	}).(pulumi.StringPtrOutput)
}

// The data to scan.
func (o GooglePrivacyDlpV2InspectJobConfigPtrOutput) StorageConfig() GooglePrivacyDlpV2StorageConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectJobConfig) *GooglePrivacyDlpV2StorageConfig {
		if v == nil {
			return nil
		}
		return v.StorageConfig
	}).(GooglePrivacyDlpV2StorageConfigPtrOutput)
}

// Controls what and how to inspect for findings.
type GooglePrivacyDlpV2InspectJobConfigResponse struct {
	// Actions to execute at the completion of the job.
	Actions []GooglePrivacyDlpV2ActionResponse `pulumi:"actions"`
	// How and what to scan for.
	InspectConfig GooglePrivacyDlpV2InspectConfigResponse `pulumi:"inspectConfig"`
	// If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
	InspectTemplateName string `pulumi:"inspectTemplateName"`
	// The data to scan.
	StorageConfig GooglePrivacyDlpV2StorageConfigResponse `pulumi:"storageConfig"`
}

// GooglePrivacyDlpV2InspectJobConfigResponseInput is an input type that accepts GooglePrivacyDlpV2InspectJobConfigResponseArgs and GooglePrivacyDlpV2InspectJobConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectJobConfigResponseInput` via:
//
//          GooglePrivacyDlpV2InspectJobConfigResponseArgs{...}
type GooglePrivacyDlpV2InspectJobConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectJobConfigResponseOutput() GooglePrivacyDlpV2InspectJobConfigResponseOutput
	ToGooglePrivacyDlpV2InspectJobConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2InspectJobConfigResponseOutput
}

// Controls what and how to inspect for findings.
type GooglePrivacyDlpV2InspectJobConfigResponseArgs struct {
	// Actions to execute at the completion of the job.
	Actions GooglePrivacyDlpV2ActionResponseArrayInput `pulumi:"actions"`
	// How and what to scan for.
	InspectConfig GooglePrivacyDlpV2InspectConfigResponseInput `pulumi:"inspectConfig"`
	// If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
	InspectTemplateName pulumi.StringInput `pulumi:"inspectTemplateName"`
	// The data to scan.
	StorageConfig GooglePrivacyDlpV2StorageConfigResponseInput `pulumi:"storageConfig"`
}

func (GooglePrivacyDlpV2InspectJobConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectJobConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectJobConfigResponseArgs) ToGooglePrivacyDlpV2InspectJobConfigResponseOutput() GooglePrivacyDlpV2InspectJobConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2InspectJobConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectJobConfigResponseArgs) ToGooglePrivacyDlpV2InspectJobConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectJobConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectJobConfigResponseOutput)
}

func (i GooglePrivacyDlpV2InspectJobConfigResponseArgs) ToGooglePrivacyDlpV2InspectJobConfigResponsePtrOutput() GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2InspectJobConfigResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectJobConfigResponseArgs) ToGooglePrivacyDlpV2InspectJobConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectJobConfigResponseOutput).ToGooglePrivacyDlpV2InspectJobConfigResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2InspectJobConfigResponsePtrInput is an input type that accepts GooglePrivacyDlpV2InspectJobConfigResponseArgs, GooglePrivacyDlpV2InspectJobConfigResponsePtr and GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectJobConfigResponsePtrInput` via:
//
//          GooglePrivacyDlpV2InspectJobConfigResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2InspectJobConfigResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectJobConfigResponsePtrOutput() GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput
	ToGooglePrivacyDlpV2InspectJobConfigResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput
}

type googlePrivacyDlpV2InspectJobConfigResponsePtrType GooglePrivacyDlpV2InspectJobConfigResponseArgs

func GooglePrivacyDlpV2InspectJobConfigResponsePtr(v *GooglePrivacyDlpV2InspectJobConfigResponseArgs) GooglePrivacyDlpV2InspectJobConfigResponsePtrInput {
	return (*googlePrivacyDlpV2InspectJobConfigResponsePtrType)(v)
}

func (*googlePrivacyDlpV2InspectJobConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InspectJobConfigResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2InspectJobConfigResponsePtrType) ToGooglePrivacyDlpV2InspectJobConfigResponsePtrOutput() GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2InspectJobConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2InspectJobConfigResponsePtrType) ToGooglePrivacyDlpV2InspectJobConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput)
}

// Controls what and how to inspect for findings.
type GooglePrivacyDlpV2InspectJobConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectJobConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectJobConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectJobConfigResponseOutput) ToGooglePrivacyDlpV2InspectJobConfigResponseOutput() GooglePrivacyDlpV2InspectJobConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectJobConfigResponseOutput) ToGooglePrivacyDlpV2InspectJobConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectJobConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectJobConfigResponseOutput) ToGooglePrivacyDlpV2InspectJobConfigResponsePtrOutput() GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2InspectJobConfigResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2InspectJobConfigResponseOutput) ToGooglePrivacyDlpV2InspectJobConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2InspectJobConfigResponse) *GooglePrivacyDlpV2InspectJobConfigResponse {
		return &v
	}).(GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput)
}

// Actions to execute at the completion of the job.
func (o GooglePrivacyDlpV2InspectJobConfigResponseOutput) Actions() GooglePrivacyDlpV2ActionResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectJobConfigResponse) []GooglePrivacyDlpV2ActionResponse {
		return v.Actions
	}).(GooglePrivacyDlpV2ActionResponseArrayOutput)
}

// How and what to scan for.
func (o GooglePrivacyDlpV2InspectJobConfigResponseOutput) InspectConfig() GooglePrivacyDlpV2InspectConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectJobConfigResponse) GooglePrivacyDlpV2InspectConfigResponse {
		return v.InspectConfig
	}).(GooglePrivacyDlpV2InspectConfigResponseOutput)
}

// If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
func (o GooglePrivacyDlpV2InspectJobConfigResponseOutput) InspectTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectJobConfigResponse) string { return v.InspectTemplateName }).(pulumi.StringOutput)
}

// The data to scan.
func (o GooglePrivacyDlpV2InspectJobConfigResponseOutput) StorageConfig() GooglePrivacyDlpV2StorageConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectJobConfigResponse) GooglePrivacyDlpV2StorageConfigResponse {
		return v.StorageConfig
	}).(GooglePrivacyDlpV2StorageConfigResponseOutput)
}

type GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InspectJobConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput) ToGooglePrivacyDlpV2InspectJobConfigResponsePtrOutput() GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput) ToGooglePrivacyDlpV2InspectJobConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput) Elem() GooglePrivacyDlpV2InspectJobConfigResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectJobConfigResponse) GooglePrivacyDlpV2InspectJobConfigResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2InspectJobConfigResponse
		return ret
	}).(GooglePrivacyDlpV2InspectJobConfigResponseOutput)
}

// Actions to execute at the completion of the job.
func (o GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput) Actions() GooglePrivacyDlpV2ActionResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectJobConfigResponse) []GooglePrivacyDlpV2ActionResponse {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(GooglePrivacyDlpV2ActionResponseArrayOutput)
}

// How and what to scan for.
func (o GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput) InspectConfig() GooglePrivacyDlpV2InspectConfigResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectJobConfigResponse) *GooglePrivacyDlpV2InspectConfigResponse {
		if v == nil {
			return nil
		}
		return &v.InspectConfig
	}).(GooglePrivacyDlpV2InspectConfigResponsePtrOutput)
}

// If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
func (o GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput) InspectTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectJobConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InspectTemplateName
	}).(pulumi.StringPtrOutput)
}

// The data to scan.
func (o GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput) StorageConfig() GooglePrivacyDlpV2StorageConfigResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectJobConfigResponse) *GooglePrivacyDlpV2StorageConfigResponse {
		if v == nil {
			return nil
		}
		return &v.StorageConfig
	}).(GooglePrivacyDlpV2StorageConfigResponsePtrOutput)
}

// The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
type GooglePrivacyDlpV2InspectTemplateResponse struct {
	// The creation timestamp of an inspectTemplate.
	CreateTime string `pulumi:"createTime"`
	// Short description (max 256 chars).
	Description string `pulumi:"description"`
	// Display name (max 256 chars).
	DisplayName string `pulumi:"displayName"`
	// The core content of the template. Configuration of the scanning process.
	InspectConfig GooglePrivacyDlpV2InspectConfigResponse `pulumi:"inspectConfig"`
	// The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;
	Name string `pulumi:"name"`
	// The last update timestamp of an inspectTemplate.
	UpdateTime string `pulumi:"updateTime"`
}

// GooglePrivacyDlpV2InspectTemplateResponseInput is an input type that accepts GooglePrivacyDlpV2InspectTemplateResponseArgs and GooglePrivacyDlpV2InspectTemplateResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectTemplateResponseInput` via:
//
//          GooglePrivacyDlpV2InspectTemplateResponseArgs{...}
type GooglePrivacyDlpV2InspectTemplateResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectTemplateResponseOutput() GooglePrivacyDlpV2InspectTemplateResponseOutput
	ToGooglePrivacyDlpV2InspectTemplateResponseOutputWithContext(context.Context) GooglePrivacyDlpV2InspectTemplateResponseOutput
}

// The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
type GooglePrivacyDlpV2InspectTemplateResponseArgs struct {
	// The creation timestamp of an inspectTemplate.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Short description (max 256 chars).
	Description pulumi.StringInput `pulumi:"description"`
	// Display name (max 256 chars).
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The core content of the template. Configuration of the scanning process.
	InspectConfig GooglePrivacyDlpV2InspectConfigResponseInput `pulumi:"inspectConfig"`
	// The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;
	Name pulumi.StringInput `pulumi:"name"`
	// The last update timestamp of an inspectTemplate.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GooglePrivacyDlpV2InspectTemplateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectTemplateResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectTemplateResponseArgs) ToGooglePrivacyDlpV2InspectTemplateResponseOutput() GooglePrivacyDlpV2InspectTemplateResponseOutput {
	return i.ToGooglePrivacyDlpV2InspectTemplateResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectTemplateResponseArgs) ToGooglePrivacyDlpV2InspectTemplateResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectTemplateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectTemplateResponseOutput)
}

func (i GooglePrivacyDlpV2InspectTemplateResponseArgs) ToGooglePrivacyDlpV2InspectTemplateResponsePtrOutput() GooglePrivacyDlpV2InspectTemplateResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2InspectTemplateResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectTemplateResponseArgs) ToGooglePrivacyDlpV2InspectTemplateResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectTemplateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectTemplateResponseOutput).ToGooglePrivacyDlpV2InspectTemplateResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2InspectTemplateResponsePtrInput is an input type that accepts GooglePrivacyDlpV2InspectTemplateResponseArgs, GooglePrivacyDlpV2InspectTemplateResponsePtr and GooglePrivacyDlpV2InspectTemplateResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectTemplateResponsePtrInput` via:
//
//          GooglePrivacyDlpV2InspectTemplateResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2InspectTemplateResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectTemplateResponsePtrOutput() GooglePrivacyDlpV2InspectTemplateResponsePtrOutput
	ToGooglePrivacyDlpV2InspectTemplateResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2InspectTemplateResponsePtrOutput
}

type googlePrivacyDlpV2InspectTemplateResponsePtrType GooglePrivacyDlpV2InspectTemplateResponseArgs

func GooglePrivacyDlpV2InspectTemplateResponsePtr(v *GooglePrivacyDlpV2InspectTemplateResponseArgs) GooglePrivacyDlpV2InspectTemplateResponsePtrInput {
	return (*googlePrivacyDlpV2InspectTemplateResponsePtrType)(v)
}

func (*googlePrivacyDlpV2InspectTemplateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InspectTemplateResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2InspectTemplateResponsePtrType) ToGooglePrivacyDlpV2InspectTemplateResponsePtrOutput() GooglePrivacyDlpV2InspectTemplateResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2InspectTemplateResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2InspectTemplateResponsePtrType) ToGooglePrivacyDlpV2InspectTemplateResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectTemplateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectTemplateResponsePtrOutput)
}

// The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
type GooglePrivacyDlpV2InspectTemplateResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectTemplateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectTemplateResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectTemplateResponseOutput) ToGooglePrivacyDlpV2InspectTemplateResponseOutput() GooglePrivacyDlpV2InspectTemplateResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectTemplateResponseOutput) ToGooglePrivacyDlpV2InspectTemplateResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectTemplateResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectTemplateResponseOutput) ToGooglePrivacyDlpV2InspectTemplateResponsePtrOutput() GooglePrivacyDlpV2InspectTemplateResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2InspectTemplateResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2InspectTemplateResponseOutput) ToGooglePrivacyDlpV2InspectTemplateResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectTemplateResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2InspectTemplateResponse) *GooglePrivacyDlpV2InspectTemplateResponse {
		return &v
	}).(GooglePrivacyDlpV2InspectTemplateResponsePtrOutput)
}

// The creation timestamp of an inspectTemplate.
func (o GooglePrivacyDlpV2InspectTemplateResponseOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectTemplateResponse) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Short description (max 256 chars).
func (o GooglePrivacyDlpV2InspectTemplateResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectTemplateResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Display name (max 256 chars).
func (o GooglePrivacyDlpV2InspectTemplateResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectTemplateResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The core content of the template. Configuration of the scanning process.
func (o GooglePrivacyDlpV2InspectTemplateResponseOutput) InspectConfig() GooglePrivacyDlpV2InspectConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectTemplateResponse) GooglePrivacyDlpV2InspectConfigResponse {
		return v.InspectConfig
	}).(GooglePrivacyDlpV2InspectConfigResponseOutput)
}

// The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;
func (o GooglePrivacyDlpV2InspectTemplateResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectTemplateResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The last update timestamp of an inspectTemplate.
func (o GooglePrivacyDlpV2InspectTemplateResponseOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectTemplateResponse) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2InspectTemplateResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectTemplateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2InspectTemplateResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectTemplateResponsePtrOutput) ToGooglePrivacyDlpV2InspectTemplateResponsePtrOutput() GooglePrivacyDlpV2InspectTemplateResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectTemplateResponsePtrOutput) ToGooglePrivacyDlpV2InspectTemplateResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectTemplateResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectTemplateResponsePtrOutput) Elem() GooglePrivacyDlpV2InspectTemplateResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectTemplateResponse) GooglePrivacyDlpV2InspectTemplateResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2InspectTemplateResponse
		return ret
	}).(GooglePrivacyDlpV2InspectTemplateResponseOutput)
}

// The creation timestamp of an inspectTemplate.
func (o GooglePrivacyDlpV2InspectTemplateResponsePtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectTemplateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// Short description (max 256 chars).
func (o GooglePrivacyDlpV2InspectTemplateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectTemplateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// Display name (max 256 chars).
func (o GooglePrivacyDlpV2InspectTemplateResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectTemplateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The core content of the template. Configuration of the scanning process.
func (o GooglePrivacyDlpV2InspectTemplateResponsePtrOutput) InspectConfig() GooglePrivacyDlpV2InspectConfigResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectTemplateResponse) *GooglePrivacyDlpV2InspectConfigResponse {
		if v == nil {
			return nil
		}
		return &v.InspectConfig
	}).(GooglePrivacyDlpV2InspectConfigResponsePtrOutput)
}

// The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;
func (o GooglePrivacyDlpV2InspectTemplateResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectTemplateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The last update timestamp of an inspectTemplate.
func (o GooglePrivacyDlpV2InspectTemplateResponsePtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2InspectTemplateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

// A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`.
type GooglePrivacyDlpV2InspectionRule struct {
	// Exclusion rule.
	ExclusionRule *GooglePrivacyDlpV2ExclusionRule `pulumi:"exclusionRule"`
	// Hotword-based detection rule.
	HotwordRule *GooglePrivacyDlpV2HotwordRule `pulumi:"hotwordRule"`
}

// GooglePrivacyDlpV2InspectionRuleInput is an input type that accepts GooglePrivacyDlpV2InspectionRuleArgs and GooglePrivacyDlpV2InspectionRuleOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectionRuleInput` via:
//
//          GooglePrivacyDlpV2InspectionRuleArgs{...}
type GooglePrivacyDlpV2InspectionRuleInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectionRuleOutput() GooglePrivacyDlpV2InspectionRuleOutput
	ToGooglePrivacyDlpV2InspectionRuleOutputWithContext(context.Context) GooglePrivacyDlpV2InspectionRuleOutput
}

// A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`.
type GooglePrivacyDlpV2InspectionRuleArgs struct {
	// Exclusion rule.
	ExclusionRule GooglePrivacyDlpV2ExclusionRulePtrInput `pulumi:"exclusionRule"`
	// Hotword-based detection rule.
	HotwordRule GooglePrivacyDlpV2HotwordRulePtrInput `pulumi:"hotwordRule"`
}

func (GooglePrivacyDlpV2InspectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectionRule)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectionRuleArgs) ToGooglePrivacyDlpV2InspectionRuleOutput() GooglePrivacyDlpV2InspectionRuleOutput {
	return i.ToGooglePrivacyDlpV2InspectionRuleOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectionRuleArgs) ToGooglePrivacyDlpV2InspectionRuleOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectionRuleOutput)
}

// GooglePrivacyDlpV2InspectionRuleArrayInput is an input type that accepts GooglePrivacyDlpV2InspectionRuleArray and GooglePrivacyDlpV2InspectionRuleArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectionRuleArrayInput` via:
//
//          GooglePrivacyDlpV2InspectionRuleArray{ GooglePrivacyDlpV2InspectionRuleArgs{...} }
type GooglePrivacyDlpV2InspectionRuleArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectionRuleArrayOutput() GooglePrivacyDlpV2InspectionRuleArrayOutput
	ToGooglePrivacyDlpV2InspectionRuleArrayOutputWithContext(context.Context) GooglePrivacyDlpV2InspectionRuleArrayOutput
}

type GooglePrivacyDlpV2InspectionRuleArray []GooglePrivacyDlpV2InspectionRuleInput

func (GooglePrivacyDlpV2InspectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InspectionRule)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectionRuleArray) ToGooglePrivacyDlpV2InspectionRuleArrayOutput() GooglePrivacyDlpV2InspectionRuleArrayOutput {
	return i.ToGooglePrivacyDlpV2InspectionRuleArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectionRuleArray) ToGooglePrivacyDlpV2InspectionRuleArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectionRuleArrayOutput)
}

// A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`.
type GooglePrivacyDlpV2InspectionRuleOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectionRule)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectionRuleOutput) ToGooglePrivacyDlpV2InspectionRuleOutput() GooglePrivacyDlpV2InspectionRuleOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectionRuleOutput) ToGooglePrivacyDlpV2InspectionRuleOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleOutput {
	return o
}

// Exclusion rule.
func (o GooglePrivacyDlpV2InspectionRuleOutput) ExclusionRule() GooglePrivacyDlpV2ExclusionRulePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectionRule) *GooglePrivacyDlpV2ExclusionRule { return v.ExclusionRule }).(GooglePrivacyDlpV2ExclusionRulePtrOutput)
}

// Hotword-based detection rule.
func (o GooglePrivacyDlpV2InspectionRuleOutput) HotwordRule() GooglePrivacyDlpV2HotwordRulePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectionRule) *GooglePrivacyDlpV2HotwordRule { return v.HotwordRule }).(GooglePrivacyDlpV2HotwordRulePtrOutput)
}

type GooglePrivacyDlpV2InspectionRuleArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InspectionRule)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectionRuleArrayOutput) ToGooglePrivacyDlpV2InspectionRuleArrayOutput() GooglePrivacyDlpV2InspectionRuleArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectionRuleArrayOutput) ToGooglePrivacyDlpV2InspectionRuleArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectionRuleArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2InspectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2InspectionRule {
		return vs[0].([]GooglePrivacyDlpV2InspectionRule)[vs[1].(int)]
	}).(GooglePrivacyDlpV2InspectionRuleOutput)
}

// A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`.
type GooglePrivacyDlpV2InspectionRuleResponse struct {
	// Exclusion rule.
	ExclusionRule GooglePrivacyDlpV2ExclusionRuleResponse `pulumi:"exclusionRule"`
	// Hotword-based detection rule.
	HotwordRule GooglePrivacyDlpV2HotwordRuleResponse `pulumi:"hotwordRule"`
}

// GooglePrivacyDlpV2InspectionRuleResponseInput is an input type that accepts GooglePrivacyDlpV2InspectionRuleResponseArgs and GooglePrivacyDlpV2InspectionRuleResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectionRuleResponseInput` via:
//
//          GooglePrivacyDlpV2InspectionRuleResponseArgs{...}
type GooglePrivacyDlpV2InspectionRuleResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectionRuleResponseOutput() GooglePrivacyDlpV2InspectionRuleResponseOutput
	ToGooglePrivacyDlpV2InspectionRuleResponseOutputWithContext(context.Context) GooglePrivacyDlpV2InspectionRuleResponseOutput
}

// A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`.
type GooglePrivacyDlpV2InspectionRuleResponseArgs struct {
	// Exclusion rule.
	ExclusionRule GooglePrivacyDlpV2ExclusionRuleResponseInput `pulumi:"exclusionRule"`
	// Hotword-based detection rule.
	HotwordRule GooglePrivacyDlpV2HotwordRuleResponseInput `pulumi:"hotwordRule"`
}

func (GooglePrivacyDlpV2InspectionRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectionRuleResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectionRuleResponseArgs) ToGooglePrivacyDlpV2InspectionRuleResponseOutput() GooglePrivacyDlpV2InspectionRuleResponseOutput {
	return i.ToGooglePrivacyDlpV2InspectionRuleResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectionRuleResponseArgs) ToGooglePrivacyDlpV2InspectionRuleResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectionRuleResponseOutput)
}

// GooglePrivacyDlpV2InspectionRuleResponseArrayInput is an input type that accepts GooglePrivacyDlpV2InspectionRuleResponseArray and GooglePrivacyDlpV2InspectionRuleResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectionRuleResponseArrayInput` via:
//
//          GooglePrivacyDlpV2InspectionRuleResponseArray{ GooglePrivacyDlpV2InspectionRuleResponseArgs{...} }
type GooglePrivacyDlpV2InspectionRuleResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectionRuleResponseArrayOutput() GooglePrivacyDlpV2InspectionRuleResponseArrayOutput
	ToGooglePrivacyDlpV2InspectionRuleResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2InspectionRuleResponseArrayOutput
}

type GooglePrivacyDlpV2InspectionRuleResponseArray []GooglePrivacyDlpV2InspectionRuleResponseInput

func (GooglePrivacyDlpV2InspectionRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InspectionRuleResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectionRuleResponseArray) ToGooglePrivacyDlpV2InspectionRuleResponseArrayOutput() GooglePrivacyDlpV2InspectionRuleResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2InspectionRuleResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectionRuleResponseArray) ToGooglePrivacyDlpV2InspectionRuleResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectionRuleResponseArrayOutput)
}

// A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`.
type GooglePrivacyDlpV2InspectionRuleResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectionRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectionRuleResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectionRuleResponseOutput) ToGooglePrivacyDlpV2InspectionRuleResponseOutput() GooglePrivacyDlpV2InspectionRuleResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectionRuleResponseOutput) ToGooglePrivacyDlpV2InspectionRuleResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleResponseOutput {
	return o
}

// Exclusion rule.
func (o GooglePrivacyDlpV2InspectionRuleResponseOutput) ExclusionRule() GooglePrivacyDlpV2ExclusionRuleResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectionRuleResponse) GooglePrivacyDlpV2ExclusionRuleResponse {
		return v.ExclusionRule
	}).(GooglePrivacyDlpV2ExclusionRuleResponseOutput)
}

// Hotword-based detection rule.
func (o GooglePrivacyDlpV2InspectionRuleResponseOutput) HotwordRule() GooglePrivacyDlpV2HotwordRuleResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectionRuleResponse) GooglePrivacyDlpV2HotwordRuleResponse {
		return v.HotwordRule
	}).(GooglePrivacyDlpV2HotwordRuleResponseOutput)
}

type GooglePrivacyDlpV2InspectionRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectionRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InspectionRuleResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectionRuleResponseArrayOutput) ToGooglePrivacyDlpV2InspectionRuleResponseArrayOutput() GooglePrivacyDlpV2InspectionRuleResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectionRuleResponseArrayOutput) ToGooglePrivacyDlpV2InspectionRuleResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectionRuleResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2InspectionRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2InspectionRuleResponse {
		return vs[0].([]GooglePrivacyDlpV2InspectionRuleResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2InspectionRuleResponseOutput)
}

// Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set.
type GooglePrivacyDlpV2InspectionRuleSet struct {
	// List of infoTypes this rule set is applied to.
	InfoTypes []GooglePrivacyDlpV2InfoType `pulumi:"infoTypes"`
	// Set of rules to be applied to infoTypes. The rules are applied in order.
	Rules []GooglePrivacyDlpV2InspectionRule `pulumi:"rules"`
}

// GooglePrivacyDlpV2InspectionRuleSetInput is an input type that accepts GooglePrivacyDlpV2InspectionRuleSetArgs and GooglePrivacyDlpV2InspectionRuleSetOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectionRuleSetInput` via:
//
//          GooglePrivacyDlpV2InspectionRuleSetArgs{...}
type GooglePrivacyDlpV2InspectionRuleSetInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectionRuleSetOutput() GooglePrivacyDlpV2InspectionRuleSetOutput
	ToGooglePrivacyDlpV2InspectionRuleSetOutputWithContext(context.Context) GooglePrivacyDlpV2InspectionRuleSetOutput
}

// Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set.
type GooglePrivacyDlpV2InspectionRuleSetArgs struct {
	// List of infoTypes this rule set is applied to.
	InfoTypes GooglePrivacyDlpV2InfoTypeArrayInput `pulumi:"infoTypes"`
	// Set of rules to be applied to infoTypes. The rules are applied in order.
	Rules GooglePrivacyDlpV2InspectionRuleArrayInput `pulumi:"rules"`
}

func (GooglePrivacyDlpV2InspectionRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectionRuleSet)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectionRuleSetArgs) ToGooglePrivacyDlpV2InspectionRuleSetOutput() GooglePrivacyDlpV2InspectionRuleSetOutput {
	return i.ToGooglePrivacyDlpV2InspectionRuleSetOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectionRuleSetArgs) ToGooglePrivacyDlpV2InspectionRuleSetOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectionRuleSetOutput)
}

// GooglePrivacyDlpV2InspectionRuleSetArrayInput is an input type that accepts GooglePrivacyDlpV2InspectionRuleSetArray and GooglePrivacyDlpV2InspectionRuleSetArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectionRuleSetArrayInput` via:
//
//          GooglePrivacyDlpV2InspectionRuleSetArray{ GooglePrivacyDlpV2InspectionRuleSetArgs{...} }
type GooglePrivacyDlpV2InspectionRuleSetArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectionRuleSetArrayOutput() GooglePrivacyDlpV2InspectionRuleSetArrayOutput
	ToGooglePrivacyDlpV2InspectionRuleSetArrayOutputWithContext(context.Context) GooglePrivacyDlpV2InspectionRuleSetArrayOutput
}

type GooglePrivacyDlpV2InspectionRuleSetArray []GooglePrivacyDlpV2InspectionRuleSetInput

func (GooglePrivacyDlpV2InspectionRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InspectionRuleSet)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectionRuleSetArray) ToGooglePrivacyDlpV2InspectionRuleSetArrayOutput() GooglePrivacyDlpV2InspectionRuleSetArrayOutput {
	return i.ToGooglePrivacyDlpV2InspectionRuleSetArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectionRuleSetArray) ToGooglePrivacyDlpV2InspectionRuleSetArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectionRuleSetArrayOutput)
}

// Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set.
type GooglePrivacyDlpV2InspectionRuleSetOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectionRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectionRuleSet)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectionRuleSetOutput) ToGooglePrivacyDlpV2InspectionRuleSetOutput() GooglePrivacyDlpV2InspectionRuleSetOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectionRuleSetOutput) ToGooglePrivacyDlpV2InspectionRuleSetOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleSetOutput {
	return o
}

// List of infoTypes this rule set is applied to.
func (o GooglePrivacyDlpV2InspectionRuleSetOutput) InfoTypes() GooglePrivacyDlpV2InfoTypeArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectionRuleSet) []GooglePrivacyDlpV2InfoType { return v.InfoTypes }).(GooglePrivacyDlpV2InfoTypeArrayOutput)
}

// Set of rules to be applied to infoTypes. The rules are applied in order.
func (o GooglePrivacyDlpV2InspectionRuleSetOutput) Rules() GooglePrivacyDlpV2InspectionRuleArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectionRuleSet) []GooglePrivacyDlpV2InspectionRule { return v.Rules }).(GooglePrivacyDlpV2InspectionRuleArrayOutput)
}

type GooglePrivacyDlpV2InspectionRuleSetArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectionRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InspectionRuleSet)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectionRuleSetArrayOutput) ToGooglePrivacyDlpV2InspectionRuleSetArrayOutput() GooglePrivacyDlpV2InspectionRuleSetArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectionRuleSetArrayOutput) ToGooglePrivacyDlpV2InspectionRuleSetArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleSetArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectionRuleSetArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2InspectionRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2InspectionRuleSet {
		return vs[0].([]GooglePrivacyDlpV2InspectionRuleSet)[vs[1].(int)]
	}).(GooglePrivacyDlpV2InspectionRuleSetOutput)
}

// Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set.
type GooglePrivacyDlpV2InspectionRuleSetResponse struct {
	// List of infoTypes this rule set is applied to.
	InfoTypes []GooglePrivacyDlpV2InfoTypeResponse `pulumi:"infoTypes"`
	// Set of rules to be applied to infoTypes. The rules are applied in order.
	Rules []GooglePrivacyDlpV2InspectionRuleResponse `pulumi:"rules"`
}

// GooglePrivacyDlpV2InspectionRuleSetResponseInput is an input type that accepts GooglePrivacyDlpV2InspectionRuleSetResponseArgs and GooglePrivacyDlpV2InspectionRuleSetResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectionRuleSetResponseInput` via:
//
//          GooglePrivacyDlpV2InspectionRuleSetResponseArgs{...}
type GooglePrivacyDlpV2InspectionRuleSetResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectionRuleSetResponseOutput() GooglePrivacyDlpV2InspectionRuleSetResponseOutput
	ToGooglePrivacyDlpV2InspectionRuleSetResponseOutputWithContext(context.Context) GooglePrivacyDlpV2InspectionRuleSetResponseOutput
}

// Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set.
type GooglePrivacyDlpV2InspectionRuleSetResponseArgs struct {
	// List of infoTypes this rule set is applied to.
	InfoTypes GooglePrivacyDlpV2InfoTypeResponseArrayInput `pulumi:"infoTypes"`
	// Set of rules to be applied to infoTypes. The rules are applied in order.
	Rules GooglePrivacyDlpV2InspectionRuleResponseArrayInput `pulumi:"rules"`
}

func (GooglePrivacyDlpV2InspectionRuleSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectionRuleSetResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectionRuleSetResponseArgs) ToGooglePrivacyDlpV2InspectionRuleSetResponseOutput() GooglePrivacyDlpV2InspectionRuleSetResponseOutput {
	return i.ToGooglePrivacyDlpV2InspectionRuleSetResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectionRuleSetResponseArgs) ToGooglePrivacyDlpV2InspectionRuleSetResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectionRuleSetResponseOutput)
}

// GooglePrivacyDlpV2InspectionRuleSetResponseArrayInput is an input type that accepts GooglePrivacyDlpV2InspectionRuleSetResponseArray and GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectionRuleSetResponseArrayInput` via:
//
//          GooglePrivacyDlpV2InspectionRuleSetResponseArray{ GooglePrivacyDlpV2InspectionRuleSetResponseArgs{...} }
type GooglePrivacyDlpV2InspectionRuleSetResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput() GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput
	ToGooglePrivacyDlpV2InspectionRuleSetResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput
}

type GooglePrivacyDlpV2InspectionRuleSetResponseArray []GooglePrivacyDlpV2InspectionRuleSetResponseInput

func (GooglePrivacyDlpV2InspectionRuleSetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InspectionRuleSetResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectionRuleSetResponseArray) ToGooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput() GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2InspectionRuleSetResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectionRuleSetResponseArray) ToGooglePrivacyDlpV2InspectionRuleSetResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput)
}

// Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set.
type GooglePrivacyDlpV2InspectionRuleSetResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectionRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2InspectionRuleSetResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectionRuleSetResponseOutput) ToGooglePrivacyDlpV2InspectionRuleSetResponseOutput() GooglePrivacyDlpV2InspectionRuleSetResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectionRuleSetResponseOutput) ToGooglePrivacyDlpV2InspectionRuleSetResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleSetResponseOutput {
	return o
}

// List of infoTypes this rule set is applied to.
func (o GooglePrivacyDlpV2InspectionRuleSetResponseOutput) InfoTypes() GooglePrivacyDlpV2InfoTypeResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectionRuleSetResponse) []GooglePrivacyDlpV2InfoTypeResponse {
		return v.InfoTypes
	}).(GooglePrivacyDlpV2InfoTypeResponseArrayOutput)
}

// Set of rules to be applied to infoTypes. The rules are applied in order.
func (o GooglePrivacyDlpV2InspectionRuleSetResponseOutput) Rules() GooglePrivacyDlpV2InspectionRuleResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2InspectionRuleSetResponse) []GooglePrivacyDlpV2InspectionRuleResponse {
		return v.Rules
	}).(GooglePrivacyDlpV2InspectionRuleResponseArrayOutput)
}

type GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InspectionRuleSetResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput) ToGooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput() GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput) ToGooglePrivacyDlpV2InspectionRuleSetResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2InspectionRuleSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2InspectionRuleSetResponse {
		return vs[0].([]GooglePrivacyDlpV2InspectionRuleSetResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2InspectionRuleSetResponseOutput)
}

// Enable email notification to project owners and editors on jobs's completion/failure.
type GooglePrivacyDlpV2JobNotificationEmails struct {
}

// GooglePrivacyDlpV2JobNotificationEmailsInput is an input type that accepts GooglePrivacyDlpV2JobNotificationEmailsArgs and GooglePrivacyDlpV2JobNotificationEmailsOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2JobNotificationEmailsInput` via:
//
//          GooglePrivacyDlpV2JobNotificationEmailsArgs{...}
type GooglePrivacyDlpV2JobNotificationEmailsInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2JobNotificationEmailsOutput() GooglePrivacyDlpV2JobNotificationEmailsOutput
	ToGooglePrivacyDlpV2JobNotificationEmailsOutputWithContext(context.Context) GooglePrivacyDlpV2JobNotificationEmailsOutput
}

// Enable email notification to project owners and editors on jobs's completion/failure.
type GooglePrivacyDlpV2JobNotificationEmailsArgs struct {
}

func (GooglePrivacyDlpV2JobNotificationEmailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2JobNotificationEmails)(nil)).Elem()
}

func (i GooglePrivacyDlpV2JobNotificationEmailsArgs) ToGooglePrivacyDlpV2JobNotificationEmailsOutput() GooglePrivacyDlpV2JobNotificationEmailsOutput {
	return i.ToGooglePrivacyDlpV2JobNotificationEmailsOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2JobNotificationEmailsArgs) ToGooglePrivacyDlpV2JobNotificationEmailsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2JobNotificationEmailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2JobNotificationEmailsOutput)
}

func (i GooglePrivacyDlpV2JobNotificationEmailsArgs) ToGooglePrivacyDlpV2JobNotificationEmailsPtrOutput() GooglePrivacyDlpV2JobNotificationEmailsPtrOutput {
	return i.ToGooglePrivacyDlpV2JobNotificationEmailsPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2JobNotificationEmailsArgs) ToGooglePrivacyDlpV2JobNotificationEmailsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2JobNotificationEmailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2JobNotificationEmailsOutput).ToGooglePrivacyDlpV2JobNotificationEmailsPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2JobNotificationEmailsPtrInput is an input type that accepts GooglePrivacyDlpV2JobNotificationEmailsArgs, GooglePrivacyDlpV2JobNotificationEmailsPtr and GooglePrivacyDlpV2JobNotificationEmailsPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2JobNotificationEmailsPtrInput` via:
//
//          GooglePrivacyDlpV2JobNotificationEmailsArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2JobNotificationEmailsPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2JobNotificationEmailsPtrOutput() GooglePrivacyDlpV2JobNotificationEmailsPtrOutput
	ToGooglePrivacyDlpV2JobNotificationEmailsPtrOutputWithContext(context.Context) GooglePrivacyDlpV2JobNotificationEmailsPtrOutput
}

type googlePrivacyDlpV2JobNotificationEmailsPtrType GooglePrivacyDlpV2JobNotificationEmailsArgs

func GooglePrivacyDlpV2JobNotificationEmailsPtr(v *GooglePrivacyDlpV2JobNotificationEmailsArgs) GooglePrivacyDlpV2JobNotificationEmailsPtrInput {
	return (*googlePrivacyDlpV2JobNotificationEmailsPtrType)(v)
}

func (*googlePrivacyDlpV2JobNotificationEmailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2JobNotificationEmails)(nil)).Elem()
}

func (i *googlePrivacyDlpV2JobNotificationEmailsPtrType) ToGooglePrivacyDlpV2JobNotificationEmailsPtrOutput() GooglePrivacyDlpV2JobNotificationEmailsPtrOutput {
	return i.ToGooglePrivacyDlpV2JobNotificationEmailsPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2JobNotificationEmailsPtrType) ToGooglePrivacyDlpV2JobNotificationEmailsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2JobNotificationEmailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2JobNotificationEmailsPtrOutput)
}

// Enable email notification to project owners and editors on jobs's completion/failure.
type GooglePrivacyDlpV2JobNotificationEmailsOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2JobNotificationEmailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2JobNotificationEmails)(nil)).Elem()
}

func (o GooglePrivacyDlpV2JobNotificationEmailsOutput) ToGooglePrivacyDlpV2JobNotificationEmailsOutput() GooglePrivacyDlpV2JobNotificationEmailsOutput {
	return o
}

func (o GooglePrivacyDlpV2JobNotificationEmailsOutput) ToGooglePrivacyDlpV2JobNotificationEmailsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2JobNotificationEmailsOutput {
	return o
}

func (o GooglePrivacyDlpV2JobNotificationEmailsOutput) ToGooglePrivacyDlpV2JobNotificationEmailsPtrOutput() GooglePrivacyDlpV2JobNotificationEmailsPtrOutput {
	return o.ToGooglePrivacyDlpV2JobNotificationEmailsPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2JobNotificationEmailsOutput) ToGooglePrivacyDlpV2JobNotificationEmailsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2JobNotificationEmailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2JobNotificationEmails) *GooglePrivacyDlpV2JobNotificationEmails {
		return &v
	}).(GooglePrivacyDlpV2JobNotificationEmailsPtrOutput)
}

type GooglePrivacyDlpV2JobNotificationEmailsPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2JobNotificationEmailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2JobNotificationEmails)(nil)).Elem()
}

func (o GooglePrivacyDlpV2JobNotificationEmailsPtrOutput) ToGooglePrivacyDlpV2JobNotificationEmailsPtrOutput() GooglePrivacyDlpV2JobNotificationEmailsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2JobNotificationEmailsPtrOutput) ToGooglePrivacyDlpV2JobNotificationEmailsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2JobNotificationEmailsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2JobNotificationEmailsPtrOutput) Elem() GooglePrivacyDlpV2JobNotificationEmailsOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2JobNotificationEmails) GooglePrivacyDlpV2JobNotificationEmails {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2JobNotificationEmails
		return ret
	}).(GooglePrivacyDlpV2JobNotificationEmailsOutput)
}

// Enable email notification to project owners and editors on jobs's completion/failure.
type GooglePrivacyDlpV2JobNotificationEmailsResponse struct {
}

// GooglePrivacyDlpV2JobNotificationEmailsResponseInput is an input type that accepts GooglePrivacyDlpV2JobNotificationEmailsResponseArgs and GooglePrivacyDlpV2JobNotificationEmailsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2JobNotificationEmailsResponseInput` via:
//
//          GooglePrivacyDlpV2JobNotificationEmailsResponseArgs{...}
type GooglePrivacyDlpV2JobNotificationEmailsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2JobNotificationEmailsResponseOutput() GooglePrivacyDlpV2JobNotificationEmailsResponseOutput
	ToGooglePrivacyDlpV2JobNotificationEmailsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2JobNotificationEmailsResponseOutput
}

// Enable email notification to project owners and editors on jobs's completion/failure.
type GooglePrivacyDlpV2JobNotificationEmailsResponseArgs struct {
}

func (GooglePrivacyDlpV2JobNotificationEmailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2JobNotificationEmailsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2JobNotificationEmailsResponseArgs) ToGooglePrivacyDlpV2JobNotificationEmailsResponseOutput() GooglePrivacyDlpV2JobNotificationEmailsResponseOutput {
	return i.ToGooglePrivacyDlpV2JobNotificationEmailsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2JobNotificationEmailsResponseArgs) ToGooglePrivacyDlpV2JobNotificationEmailsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2JobNotificationEmailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2JobNotificationEmailsResponseOutput)
}

// Enable email notification to project owners and editors on jobs's completion/failure.
type GooglePrivacyDlpV2JobNotificationEmailsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2JobNotificationEmailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2JobNotificationEmailsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2JobNotificationEmailsResponseOutput) ToGooglePrivacyDlpV2JobNotificationEmailsResponseOutput() GooglePrivacyDlpV2JobNotificationEmailsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2JobNotificationEmailsResponseOutput) ToGooglePrivacyDlpV2JobNotificationEmailsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2JobNotificationEmailsResponseOutput {
	return o
}

// k-anonymity metric, used for analysis of reidentification risk.
type GooglePrivacyDlpV2KAnonymityConfig struct {
	// Message indicating that multiple rows might be associated to a single individual. If the same entity_id is associated to multiple quasi-identifier tuples over distinct rows, we consider the entire collection of tuples as the composite quasi-identifier. This collection is a multiset: the order in which the different tuples appear in the dataset is ignored, but their frequency is taken into account. Important note: a maximum of 1000 rows can be associated to a single entity ID. If more rows are associated with the same entity ID, some might be ignored.
	EntityId *GooglePrivacyDlpV2EntityId `pulumi:"entityId"`
	// Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field.
	QuasiIds []GooglePrivacyDlpV2FieldId `pulumi:"quasiIds"`
}

// GooglePrivacyDlpV2KAnonymityConfigInput is an input type that accepts GooglePrivacyDlpV2KAnonymityConfigArgs and GooglePrivacyDlpV2KAnonymityConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KAnonymityConfigInput` via:
//
//          GooglePrivacyDlpV2KAnonymityConfigArgs{...}
type GooglePrivacyDlpV2KAnonymityConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KAnonymityConfigOutput() GooglePrivacyDlpV2KAnonymityConfigOutput
	ToGooglePrivacyDlpV2KAnonymityConfigOutputWithContext(context.Context) GooglePrivacyDlpV2KAnonymityConfigOutput
}

// k-anonymity metric, used for analysis of reidentification risk.
type GooglePrivacyDlpV2KAnonymityConfigArgs struct {
	// Message indicating that multiple rows might be associated to a single individual. If the same entity_id is associated to multiple quasi-identifier tuples over distinct rows, we consider the entire collection of tuples as the composite quasi-identifier. This collection is a multiset: the order in which the different tuples appear in the dataset is ignored, but their frequency is taken into account. Important note: a maximum of 1000 rows can be associated to a single entity ID. If more rows are associated with the same entity ID, some might be ignored.
	EntityId GooglePrivacyDlpV2EntityIdPtrInput `pulumi:"entityId"`
	// Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field.
	QuasiIds GooglePrivacyDlpV2FieldIdArrayInput `pulumi:"quasiIds"`
}

func (GooglePrivacyDlpV2KAnonymityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KAnonymityConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KAnonymityConfigArgs) ToGooglePrivacyDlpV2KAnonymityConfigOutput() GooglePrivacyDlpV2KAnonymityConfigOutput {
	return i.ToGooglePrivacyDlpV2KAnonymityConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KAnonymityConfigArgs) ToGooglePrivacyDlpV2KAnonymityConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KAnonymityConfigOutput)
}

func (i GooglePrivacyDlpV2KAnonymityConfigArgs) ToGooglePrivacyDlpV2KAnonymityConfigPtrOutput() GooglePrivacyDlpV2KAnonymityConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2KAnonymityConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KAnonymityConfigArgs) ToGooglePrivacyDlpV2KAnonymityConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KAnonymityConfigOutput).ToGooglePrivacyDlpV2KAnonymityConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2KAnonymityConfigPtrInput is an input type that accepts GooglePrivacyDlpV2KAnonymityConfigArgs, GooglePrivacyDlpV2KAnonymityConfigPtr and GooglePrivacyDlpV2KAnonymityConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KAnonymityConfigPtrInput` via:
//
//          GooglePrivacyDlpV2KAnonymityConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2KAnonymityConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KAnonymityConfigPtrOutput() GooglePrivacyDlpV2KAnonymityConfigPtrOutput
	ToGooglePrivacyDlpV2KAnonymityConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2KAnonymityConfigPtrOutput
}

type googlePrivacyDlpV2KAnonymityConfigPtrType GooglePrivacyDlpV2KAnonymityConfigArgs

func GooglePrivacyDlpV2KAnonymityConfigPtr(v *GooglePrivacyDlpV2KAnonymityConfigArgs) GooglePrivacyDlpV2KAnonymityConfigPtrInput {
	return (*googlePrivacyDlpV2KAnonymityConfigPtrType)(v)
}

func (*googlePrivacyDlpV2KAnonymityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KAnonymityConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2KAnonymityConfigPtrType) ToGooglePrivacyDlpV2KAnonymityConfigPtrOutput() GooglePrivacyDlpV2KAnonymityConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2KAnonymityConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2KAnonymityConfigPtrType) ToGooglePrivacyDlpV2KAnonymityConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KAnonymityConfigPtrOutput)
}

// k-anonymity metric, used for analysis of reidentification risk.
type GooglePrivacyDlpV2KAnonymityConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KAnonymityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KAnonymityConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KAnonymityConfigOutput) ToGooglePrivacyDlpV2KAnonymityConfigOutput() GooglePrivacyDlpV2KAnonymityConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityConfigOutput) ToGooglePrivacyDlpV2KAnonymityConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityConfigOutput) ToGooglePrivacyDlpV2KAnonymityConfigPtrOutput() GooglePrivacyDlpV2KAnonymityConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2KAnonymityConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2KAnonymityConfigOutput) ToGooglePrivacyDlpV2KAnonymityConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2KAnonymityConfig) *GooglePrivacyDlpV2KAnonymityConfig {
		return &v
	}).(GooglePrivacyDlpV2KAnonymityConfigPtrOutput)
}

// Message indicating that multiple rows might be associated to a single individual. If the same entity_id is associated to multiple quasi-identifier tuples over distinct rows, we consider the entire collection of tuples as the composite quasi-identifier. This collection is a multiset: the order in which the different tuples appear in the dataset is ignored, but their frequency is taken into account. Important note: a maximum of 1000 rows can be associated to a single entity ID. If more rows are associated with the same entity ID, some might be ignored.
func (o GooglePrivacyDlpV2KAnonymityConfigOutput) EntityId() GooglePrivacyDlpV2EntityIdPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KAnonymityConfig) *GooglePrivacyDlpV2EntityId { return v.EntityId }).(GooglePrivacyDlpV2EntityIdPtrOutput)
}

// Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field.
func (o GooglePrivacyDlpV2KAnonymityConfigOutput) QuasiIds() GooglePrivacyDlpV2FieldIdArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KAnonymityConfig) []GooglePrivacyDlpV2FieldId { return v.QuasiIds }).(GooglePrivacyDlpV2FieldIdArrayOutput)
}

type GooglePrivacyDlpV2KAnonymityConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KAnonymityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KAnonymityConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KAnonymityConfigPtrOutput) ToGooglePrivacyDlpV2KAnonymityConfigPtrOutput() GooglePrivacyDlpV2KAnonymityConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityConfigPtrOutput) ToGooglePrivacyDlpV2KAnonymityConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityConfigPtrOutput) Elem() GooglePrivacyDlpV2KAnonymityConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KAnonymityConfig) GooglePrivacyDlpV2KAnonymityConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2KAnonymityConfig
		return ret
	}).(GooglePrivacyDlpV2KAnonymityConfigOutput)
}

// Message indicating that multiple rows might be associated to a single individual. If the same entity_id is associated to multiple quasi-identifier tuples over distinct rows, we consider the entire collection of tuples as the composite quasi-identifier. This collection is a multiset: the order in which the different tuples appear in the dataset is ignored, but their frequency is taken into account. Important note: a maximum of 1000 rows can be associated to a single entity ID. If more rows are associated with the same entity ID, some might be ignored.
func (o GooglePrivacyDlpV2KAnonymityConfigPtrOutput) EntityId() GooglePrivacyDlpV2EntityIdPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KAnonymityConfig) *GooglePrivacyDlpV2EntityId {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(GooglePrivacyDlpV2EntityIdPtrOutput)
}

// Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field.
func (o GooglePrivacyDlpV2KAnonymityConfigPtrOutput) QuasiIds() GooglePrivacyDlpV2FieldIdArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KAnonymityConfig) []GooglePrivacyDlpV2FieldId {
		if v == nil {
			return nil
		}
		return v.QuasiIds
	}).(GooglePrivacyDlpV2FieldIdArrayOutput)
}

// k-anonymity metric, used for analysis of reidentification risk.
type GooglePrivacyDlpV2KAnonymityConfigResponse struct {
	// Message indicating that multiple rows might be associated to a single individual. If the same entity_id is associated to multiple quasi-identifier tuples over distinct rows, we consider the entire collection of tuples as the composite quasi-identifier. This collection is a multiset: the order in which the different tuples appear in the dataset is ignored, but their frequency is taken into account. Important note: a maximum of 1000 rows can be associated to a single entity ID. If more rows are associated with the same entity ID, some might be ignored.
	EntityId GooglePrivacyDlpV2EntityIdResponse `pulumi:"entityId"`
	// Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field.
	QuasiIds []GooglePrivacyDlpV2FieldIdResponse `pulumi:"quasiIds"`
}

// GooglePrivacyDlpV2KAnonymityConfigResponseInput is an input type that accepts GooglePrivacyDlpV2KAnonymityConfigResponseArgs and GooglePrivacyDlpV2KAnonymityConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KAnonymityConfigResponseInput` via:
//
//          GooglePrivacyDlpV2KAnonymityConfigResponseArgs{...}
type GooglePrivacyDlpV2KAnonymityConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KAnonymityConfigResponseOutput() GooglePrivacyDlpV2KAnonymityConfigResponseOutput
	ToGooglePrivacyDlpV2KAnonymityConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2KAnonymityConfigResponseOutput
}

// k-anonymity metric, used for analysis of reidentification risk.
type GooglePrivacyDlpV2KAnonymityConfigResponseArgs struct {
	// Message indicating that multiple rows might be associated to a single individual. If the same entity_id is associated to multiple quasi-identifier tuples over distinct rows, we consider the entire collection of tuples as the composite quasi-identifier. This collection is a multiset: the order in which the different tuples appear in the dataset is ignored, but their frequency is taken into account. Important note: a maximum of 1000 rows can be associated to a single entity ID. If more rows are associated with the same entity ID, some might be ignored.
	EntityId GooglePrivacyDlpV2EntityIdResponseInput `pulumi:"entityId"`
	// Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field.
	QuasiIds GooglePrivacyDlpV2FieldIdResponseArrayInput `pulumi:"quasiIds"`
}

func (GooglePrivacyDlpV2KAnonymityConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KAnonymityConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KAnonymityConfigResponseArgs) ToGooglePrivacyDlpV2KAnonymityConfigResponseOutput() GooglePrivacyDlpV2KAnonymityConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2KAnonymityConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KAnonymityConfigResponseArgs) ToGooglePrivacyDlpV2KAnonymityConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KAnonymityConfigResponseOutput)
}

func (i GooglePrivacyDlpV2KAnonymityConfigResponseArgs) ToGooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput() GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2KAnonymityConfigResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KAnonymityConfigResponseArgs) ToGooglePrivacyDlpV2KAnonymityConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KAnonymityConfigResponseOutput).ToGooglePrivacyDlpV2KAnonymityConfigResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2KAnonymityConfigResponsePtrInput is an input type that accepts GooglePrivacyDlpV2KAnonymityConfigResponseArgs, GooglePrivacyDlpV2KAnonymityConfigResponsePtr and GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KAnonymityConfigResponsePtrInput` via:
//
//          GooglePrivacyDlpV2KAnonymityConfigResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2KAnonymityConfigResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput() GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput
	ToGooglePrivacyDlpV2KAnonymityConfigResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput
}

type googlePrivacyDlpV2KAnonymityConfigResponsePtrType GooglePrivacyDlpV2KAnonymityConfigResponseArgs

func GooglePrivacyDlpV2KAnonymityConfigResponsePtr(v *GooglePrivacyDlpV2KAnonymityConfigResponseArgs) GooglePrivacyDlpV2KAnonymityConfigResponsePtrInput {
	return (*googlePrivacyDlpV2KAnonymityConfigResponsePtrType)(v)
}

func (*googlePrivacyDlpV2KAnonymityConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KAnonymityConfigResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2KAnonymityConfigResponsePtrType) ToGooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput() GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2KAnonymityConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2KAnonymityConfigResponsePtrType) ToGooglePrivacyDlpV2KAnonymityConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput)
}

// k-anonymity metric, used for analysis of reidentification risk.
type GooglePrivacyDlpV2KAnonymityConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KAnonymityConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KAnonymityConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KAnonymityConfigResponseOutput) ToGooglePrivacyDlpV2KAnonymityConfigResponseOutput() GooglePrivacyDlpV2KAnonymityConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityConfigResponseOutput) ToGooglePrivacyDlpV2KAnonymityConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityConfigResponseOutput) ToGooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput() GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2KAnonymityConfigResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2KAnonymityConfigResponseOutput) ToGooglePrivacyDlpV2KAnonymityConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2KAnonymityConfigResponse) *GooglePrivacyDlpV2KAnonymityConfigResponse {
		return &v
	}).(GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput)
}

// Message indicating that multiple rows might be associated to a single individual. If the same entity_id is associated to multiple quasi-identifier tuples over distinct rows, we consider the entire collection of tuples as the composite quasi-identifier. This collection is a multiset: the order in which the different tuples appear in the dataset is ignored, but their frequency is taken into account. Important note: a maximum of 1000 rows can be associated to a single entity ID. If more rows are associated with the same entity ID, some might be ignored.
func (o GooglePrivacyDlpV2KAnonymityConfigResponseOutput) EntityId() GooglePrivacyDlpV2EntityIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KAnonymityConfigResponse) GooglePrivacyDlpV2EntityIdResponse {
		return v.EntityId
	}).(GooglePrivacyDlpV2EntityIdResponseOutput)
}

// Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field.
func (o GooglePrivacyDlpV2KAnonymityConfigResponseOutput) QuasiIds() GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KAnonymityConfigResponse) []GooglePrivacyDlpV2FieldIdResponse {
		return v.QuasiIds
	}).(GooglePrivacyDlpV2FieldIdResponseArrayOutput)
}

type GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KAnonymityConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput) ToGooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput() GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput) ToGooglePrivacyDlpV2KAnonymityConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput) Elem() GooglePrivacyDlpV2KAnonymityConfigResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KAnonymityConfigResponse) GooglePrivacyDlpV2KAnonymityConfigResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2KAnonymityConfigResponse
		return ret
	}).(GooglePrivacyDlpV2KAnonymityConfigResponseOutput)
}

// Message indicating that multiple rows might be associated to a single individual. If the same entity_id is associated to multiple quasi-identifier tuples over distinct rows, we consider the entire collection of tuples as the composite quasi-identifier. This collection is a multiset: the order in which the different tuples appear in the dataset is ignored, but their frequency is taken into account. Important note: a maximum of 1000 rows can be associated to a single entity ID. If more rows are associated with the same entity ID, some might be ignored.
func (o GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput) EntityId() GooglePrivacyDlpV2EntityIdResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KAnonymityConfigResponse) *GooglePrivacyDlpV2EntityIdResponse {
		if v == nil {
			return nil
		}
		return &v.EntityId
	}).(GooglePrivacyDlpV2EntityIdResponsePtrOutput)
}

// Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field.
func (o GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput) QuasiIds() GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KAnonymityConfigResponse) []GooglePrivacyDlpV2FieldIdResponse {
		if v == nil {
			return nil
		}
		return v.QuasiIds
	}).(GooglePrivacyDlpV2FieldIdResponseArrayOutput)
}

// The set of columns' values that share the same ldiversity value
type GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse struct {
	// Size of the equivalence class, for example number of rows with the above set of values.
	EquivalenceClassSize string `pulumi:"equivalenceClassSize"`
	// Set of values defining the equivalence class. One value per quasi-identifier column in the original KAnonymity metric message. The order is always the same as the original request.
	QuasiIdsValues []GooglePrivacyDlpV2ValueResponse `pulumi:"quasiIdsValues"`
}

// GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseInput is an input type that accepts GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArgs and GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseInput` via:
//
//          GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArgs{...}
type GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput() GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput
	ToGooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutputWithContext(context.Context) GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput
}

// The set of columns' values that share the same ldiversity value
type GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArgs struct {
	// Size of the equivalence class, for example number of rows with the above set of values.
	EquivalenceClassSize pulumi.StringInput `pulumi:"equivalenceClassSize"`
	// Set of values defining the equivalence class. One value per quasi-identifier column in the original KAnonymity metric message. The order is always the same as the original request.
	QuasiIdsValues GooglePrivacyDlpV2ValueResponseArrayInput `pulumi:"quasiIdsValues"`
}

func (GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArgs) ToGooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput() GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput {
	return i.ToGooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArgs) ToGooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput)
}

// GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayInput is an input type that accepts GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArray and GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayInput` via:
//
//          GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArray{ GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArgs{...} }
type GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput() GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput
	ToGooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput
}

type GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArray []GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseInput

func (GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArray) ToGooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput() GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArray) ToGooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput)
}

// The set of columns' values that share the same ldiversity value
type GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput) ToGooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput() GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput) ToGooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput {
	return o
}

// Size of the equivalence class, for example number of rows with the above set of values.
func (o GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput) EquivalenceClassSize() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse) string { return v.EquivalenceClassSize }).(pulumi.StringOutput)
}

// Set of values defining the equivalence class. One value per quasi-identifier column in the original KAnonymity metric message. The order is always the same as the original request.
func (o GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput) QuasiIdsValues() GooglePrivacyDlpV2ValueResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse) []GooglePrivacyDlpV2ValueResponse {
		return v.QuasiIdsValues
	}).(GooglePrivacyDlpV2ValueResponseArrayOutput)
}

type GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput) ToGooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput() GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput) ToGooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse {
		return vs[0].([]GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput)
}

// Histogram of k-anonymity equivalence classes.
type GooglePrivacyDlpV2KAnonymityHistogramBucketResponse struct {
	// Total number of equivalence classes in this bucket.
	BucketSize string `pulumi:"bucketSize"`
	// Total number of distinct equivalence classes in this bucket.
	BucketValueCount string `pulumi:"bucketValueCount"`
	// Sample of equivalence classes in this bucket. The total number of classes returned per bucket is capped at 20.
	BucketValues []GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse `pulumi:"bucketValues"`
	// Lower bound on the size of the equivalence classes in this bucket.
	EquivalenceClassSizeLowerBound string `pulumi:"equivalenceClassSizeLowerBound"`
	// Upper bound on the size of the equivalence classes in this bucket.
	EquivalenceClassSizeUpperBound string `pulumi:"equivalenceClassSizeUpperBound"`
}

// GooglePrivacyDlpV2KAnonymityHistogramBucketResponseInput is an input type that accepts GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArgs and GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KAnonymityHistogramBucketResponseInput` via:
//
//          GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArgs{...}
type GooglePrivacyDlpV2KAnonymityHistogramBucketResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput() GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput
	ToGooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutputWithContext(context.Context) GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput
}

// Histogram of k-anonymity equivalence classes.
type GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArgs struct {
	// Total number of equivalence classes in this bucket.
	BucketSize pulumi.StringInput `pulumi:"bucketSize"`
	// Total number of distinct equivalence classes in this bucket.
	BucketValueCount pulumi.StringInput `pulumi:"bucketValueCount"`
	// Sample of equivalence classes in this bucket. The total number of classes returned per bucket is capped at 20.
	BucketValues GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayInput `pulumi:"bucketValues"`
	// Lower bound on the size of the equivalence classes in this bucket.
	EquivalenceClassSizeLowerBound pulumi.StringInput `pulumi:"equivalenceClassSizeLowerBound"`
	// Upper bound on the size of the equivalence classes in this bucket.
	EquivalenceClassSizeUpperBound pulumi.StringInput `pulumi:"equivalenceClassSizeUpperBound"`
}

func (GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KAnonymityHistogramBucketResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArgs) ToGooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput() GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput {
	return i.ToGooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArgs) ToGooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput)
}

// GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayInput is an input type that accepts GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArray and GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayInput` via:
//
//          GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArray{ GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArgs{...} }
type GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput
	ToGooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput
}

type GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArray []GooglePrivacyDlpV2KAnonymityHistogramBucketResponseInput

func (GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2KAnonymityHistogramBucketResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArray) ToGooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArray) ToGooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput)
}

// Histogram of k-anonymity equivalence classes.
type GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KAnonymityHistogramBucketResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput) ToGooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput() GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput) ToGooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput {
	return o
}

// Total number of equivalence classes in this bucket.
func (o GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput) BucketSize() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KAnonymityHistogramBucketResponse) string { return v.BucketSize }).(pulumi.StringOutput)
}

// Total number of distinct equivalence classes in this bucket.
func (o GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput) BucketValueCount() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KAnonymityHistogramBucketResponse) string { return v.BucketValueCount }).(pulumi.StringOutput)
}

// Sample of equivalence classes in this bucket. The total number of classes returned per bucket is capped at 20.
func (o GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput) BucketValues() GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KAnonymityHistogramBucketResponse) []GooglePrivacyDlpV2KAnonymityEquivalenceClassResponse {
		return v.BucketValues
	}).(GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput)
}

// Lower bound on the size of the equivalence classes in this bucket.
func (o GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput) EquivalenceClassSizeLowerBound() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KAnonymityHistogramBucketResponse) string {
		return v.EquivalenceClassSizeLowerBound
	}).(pulumi.StringOutput)
}

// Upper bound on the size of the equivalence classes in this bucket.
func (o GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput) EquivalenceClassSizeUpperBound() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KAnonymityHistogramBucketResponse) string {
		return v.EquivalenceClassSizeUpperBound
	}).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2KAnonymityHistogramBucketResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput) ToGooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput) ToGooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2KAnonymityHistogramBucketResponse {
		return vs[0].([]GooglePrivacyDlpV2KAnonymityHistogramBucketResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput)
}

// Result of the k-anonymity computation.
type GooglePrivacyDlpV2KAnonymityResultResponse struct {
	// Histogram of k-anonymity equivalence classes.
	EquivalenceClassHistogramBuckets []GooglePrivacyDlpV2KAnonymityHistogramBucketResponse `pulumi:"equivalenceClassHistogramBuckets"`
}

// GooglePrivacyDlpV2KAnonymityResultResponseInput is an input type that accepts GooglePrivacyDlpV2KAnonymityResultResponseArgs and GooglePrivacyDlpV2KAnonymityResultResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KAnonymityResultResponseInput` via:
//
//          GooglePrivacyDlpV2KAnonymityResultResponseArgs{...}
type GooglePrivacyDlpV2KAnonymityResultResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KAnonymityResultResponseOutput() GooglePrivacyDlpV2KAnonymityResultResponseOutput
	ToGooglePrivacyDlpV2KAnonymityResultResponseOutputWithContext(context.Context) GooglePrivacyDlpV2KAnonymityResultResponseOutput
}

// Result of the k-anonymity computation.
type GooglePrivacyDlpV2KAnonymityResultResponseArgs struct {
	// Histogram of k-anonymity equivalence classes.
	EquivalenceClassHistogramBuckets GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayInput `pulumi:"equivalenceClassHistogramBuckets"`
}

func (GooglePrivacyDlpV2KAnonymityResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KAnonymityResultResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KAnonymityResultResponseArgs) ToGooglePrivacyDlpV2KAnonymityResultResponseOutput() GooglePrivacyDlpV2KAnonymityResultResponseOutput {
	return i.ToGooglePrivacyDlpV2KAnonymityResultResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KAnonymityResultResponseArgs) ToGooglePrivacyDlpV2KAnonymityResultResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KAnonymityResultResponseOutput)
}

func (i GooglePrivacyDlpV2KAnonymityResultResponseArgs) ToGooglePrivacyDlpV2KAnonymityResultResponsePtrOutput() GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2KAnonymityResultResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KAnonymityResultResponseArgs) ToGooglePrivacyDlpV2KAnonymityResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KAnonymityResultResponseOutput).ToGooglePrivacyDlpV2KAnonymityResultResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2KAnonymityResultResponsePtrInput is an input type that accepts GooglePrivacyDlpV2KAnonymityResultResponseArgs, GooglePrivacyDlpV2KAnonymityResultResponsePtr and GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KAnonymityResultResponsePtrInput` via:
//
//          GooglePrivacyDlpV2KAnonymityResultResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2KAnonymityResultResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KAnonymityResultResponsePtrOutput() GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput
	ToGooglePrivacyDlpV2KAnonymityResultResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput
}

type googlePrivacyDlpV2KAnonymityResultResponsePtrType GooglePrivacyDlpV2KAnonymityResultResponseArgs

func GooglePrivacyDlpV2KAnonymityResultResponsePtr(v *GooglePrivacyDlpV2KAnonymityResultResponseArgs) GooglePrivacyDlpV2KAnonymityResultResponsePtrInput {
	return (*googlePrivacyDlpV2KAnonymityResultResponsePtrType)(v)
}

func (*googlePrivacyDlpV2KAnonymityResultResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KAnonymityResultResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2KAnonymityResultResponsePtrType) ToGooglePrivacyDlpV2KAnonymityResultResponsePtrOutput() GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2KAnonymityResultResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2KAnonymityResultResponsePtrType) ToGooglePrivacyDlpV2KAnonymityResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput)
}

// Result of the k-anonymity computation.
type GooglePrivacyDlpV2KAnonymityResultResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KAnonymityResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KAnonymityResultResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KAnonymityResultResponseOutput) ToGooglePrivacyDlpV2KAnonymityResultResponseOutput() GooglePrivacyDlpV2KAnonymityResultResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityResultResponseOutput) ToGooglePrivacyDlpV2KAnonymityResultResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityResultResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityResultResponseOutput) ToGooglePrivacyDlpV2KAnonymityResultResponsePtrOutput() GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2KAnonymityResultResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2KAnonymityResultResponseOutput) ToGooglePrivacyDlpV2KAnonymityResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2KAnonymityResultResponse) *GooglePrivacyDlpV2KAnonymityResultResponse {
		return &v
	}).(GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput)
}

// Histogram of k-anonymity equivalence classes.
func (o GooglePrivacyDlpV2KAnonymityResultResponseOutput) EquivalenceClassHistogramBuckets() GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KAnonymityResultResponse) []GooglePrivacyDlpV2KAnonymityHistogramBucketResponse {
		return v.EquivalenceClassHistogramBuckets
	}).(GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput)
}

type GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KAnonymityResultResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput) ToGooglePrivacyDlpV2KAnonymityResultResponsePtrOutput() GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput) ToGooglePrivacyDlpV2KAnonymityResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput) Elem() GooglePrivacyDlpV2KAnonymityResultResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KAnonymityResultResponse) GooglePrivacyDlpV2KAnonymityResultResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2KAnonymityResultResponse
		return ret
	}).(GooglePrivacyDlpV2KAnonymityResultResponseOutput)
}

// Histogram of k-anonymity equivalence classes.
func (o GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput) EquivalenceClassHistogramBuckets() GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KAnonymityResultResponse) []GooglePrivacyDlpV2KAnonymityHistogramBucketResponse {
		if v == nil {
			return nil
		}
		return v.EquivalenceClassHistogramBuckets
	}).(GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput)
}

// Reidentifiability metric. This corresponds to a risk model similar to what is called "journalist risk" in the literature, except the attack dataset is statistically modeled instead of being perfectly known. This can be done using publicly available data (like the US Census), or using a custom statistical model (indicated as one or several BigQuery tables), or by extrapolating from the distribution of values in the input dataset.
type GooglePrivacyDlpV2KMapEstimationConfig struct {
	// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.
	AuxiliaryTables []GooglePrivacyDlpV2AuxiliaryTable `pulumi:"auxiliaryTables"`
	// Fields considered to be quasi-identifiers. No two columns can have the same tag.
	QuasiIds []GooglePrivacyDlpV2TaggedField `pulumi:"quasiIds"`
	// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
	RegionCode *string `pulumi:"regionCode"`
}

// GooglePrivacyDlpV2KMapEstimationConfigInput is an input type that accepts GooglePrivacyDlpV2KMapEstimationConfigArgs and GooglePrivacyDlpV2KMapEstimationConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KMapEstimationConfigInput` via:
//
//          GooglePrivacyDlpV2KMapEstimationConfigArgs{...}
type GooglePrivacyDlpV2KMapEstimationConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KMapEstimationConfigOutput() GooglePrivacyDlpV2KMapEstimationConfigOutput
	ToGooglePrivacyDlpV2KMapEstimationConfigOutputWithContext(context.Context) GooglePrivacyDlpV2KMapEstimationConfigOutput
}

// Reidentifiability metric. This corresponds to a risk model similar to what is called "journalist risk" in the literature, except the attack dataset is statistically modeled instead of being perfectly known. This can be done using publicly available data (like the US Census), or using a custom statistical model (indicated as one or several BigQuery tables), or by extrapolating from the distribution of values in the input dataset.
type GooglePrivacyDlpV2KMapEstimationConfigArgs struct {
	// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.
	AuxiliaryTables GooglePrivacyDlpV2AuxiliaryTableArrayInput `pulumi:"auxiliaryTables"`
	// Fields considered to be quasi-identifiers. No two columns can have the same tag.
	QuasiIds GooglePrivacyDlpV2TaggedFieldArrayInput `pulumi:"quasiIds"`
	// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
	RegionCode pulumi.StringPtrInput `pulumi:"regionCode"`
}

func (GooglePrivacyDlpV2KMapEstimationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KMapEstimationConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KMapEstimationConfigArgs) ToGooglePrivacyDlpV2KMapEstimationConfigOutput() GooglePrivacyDlpV2KMapEstimationConfigOutput {
	return i.ToGooglePrivacyDlpV2KMapEstimationConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KMapEstimationConfigArgs) ToGooglePrivacyDlpV2KMapEstimationConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KMapEstimationConfigOutput)
}

func (i GooglePrivacyDlpV2KMapEstimationConfigArgs) ToGooglePrivacyDlpV2KMapEstimationConfigPtrOutput() GooglePrivacyDlpV2KMapEstimationConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2KMapEstimationConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KMapEstimationConfigArgs) ToGooglePrivacyDlpV2KMapEstimationConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KMapEstimationConfigOutput).ToGooglePrivacyDlpV2KMapEstimationConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2KMapEstimationConfigPtrInput is an input type that accepts GooglePrivacyDlpV2KMapEstimationConfigArgs, GooglePrivacyDlpV2KMapEstimationConfigPtr and GooglePrivacyDlpV2KMapEstimationConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KMapEstimationConfigPtrInput` via:
//
//          GooglePrivacyDlpV2KMapEstimationConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2KMapEstimationConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KMapEstimationConfigPtrOutput() GooglePrivacyDlpV2KMapEstimationConfigPtrOutput
	ToGooglePrivacyDlpV2KMapEstimationConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2KMapEstimationConfigPtrOutput
}

type googlePrivacyDlpV2KMapEstimationConfigPtrType GooglePrivacyDlpV2KMapEstimationConfigArgs

func GooglePrivacyDlpV2KMapEstimationConfigPtr(v *GooglePrivacyDlpV2KMapEstimationConfigArgs) GooglePrivacyDlpV2KMapEstimationConfigPtrInput {
	return (*googlePrivacyDlpV2KMapEstimationConfigPtrType)(v)
}

func (*googlePrivacyDlpV2KMapEstimationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KMapEstimationConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2KMapEstimationConfigPtrType) ToGooglePrivacyDlpV2KMapEstimationConfigPtrOutput() GooglePrivacyDlpV2KMapEstimationConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2KMapEstimationConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2KMapEstimationConfigPtrType) ToGooglePrivacyDlpV2KMapEstimationConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KMapEstimationConfigPtrOutput)
}

// Reidentifiability metric. This corresponds to a risk model similar to what is called "journalist risk" in the literature, except the attack dataset is statistically modeled instead of being perfectly known. This can be done using publicly available data (like the US Census), or using a custom statistical model (indicated as one or several BigQuery tables), or by extrapolating from the distribution of values in the input dataset.
type GooglePrivacyDlpV2KMapEstimationConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KMapEstimationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KMapEstimationConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KMapEstimationConfigOutput) ToGooglePrivacyDlpV2KMapEstimationConfigOutput() GooglePrivacyDlpV2KMapEstimationConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationConfigOutput) ToGooglePrivacyDlpV2KMapEstimationConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationConfigOutput) ToGooglePrivacyDlpV2KMapEstimationConfigPtrOutput() GooglePrivacyDlpV2KMapEstimationConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2KMapEstimationConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2KMapEstimationConfigOutput) ToGooglePrivacyDlpV2KMapEstimationConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2KMapEstimationConfig) *GooglePrivacyDlpV2KMapEstimationConfig {
		return &v
	}).(GooglePrivacyDlpV2KMapEstimationConfigPtrOutput)
}

// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.
func (o GooglePrivacyDlpV2KMapEstimationConfigOutput) AuxiliaryTables() GooglePrivacyDlpV2AuxiliaryTableArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KMapEstimationConfig) []GooglePrivacyDlpV2AuxiliaryTable {
		return v.AuxiliaryTables
	}).(GooglePrivacyDlpV2AuxiliaryTableArrayOutput)
}

// Fields considered to be quasi-identifiers. No two columns can have the same tag.
func (o GooglePrivacyDlpV2KMapEstimationConfigOutput) QuasiIds() GooglePrivacyDlpV2TaggedFieldArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KMapEstimationConfig) []GooglePrivacyDlpV2TaggedField { return v.QuasiIds }).(GooglePrivacyDlpV2TaggedFieldArrayOutput)
}

// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
func (o GooglePrivacyDlpV2KMapEstimationConfigOutput) RegionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KMapEstimationConfig) *string { return v.RegionCode }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2KMapEstimationConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KMapEstimationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KMapEstimationConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KMapEstimationConfigPtrOutput) ToGooglePrivacyDlpV2KMapEstimationConfigPtrOutput() GooglePrivacyDlpV2KMapEstimationConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationConfigPtrOutput) ToGooglePrivacyDlpV2KMapEstimationConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationConfigPtrOutput) Elem() GooglePrivacyDlpV2KMapEstimationConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KMapEstimationConfig) GooglePrivacyDlpV2KMapEstimationConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2KMapEstimationConfig
		return ret
	}).(GooglePrivacyDlpV2KMapEstimationConfigOutput)
}

// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.
func (o GooglePrivacyDlpV2KMapEstimationConfigPtrOutput) AuxiliaryTables() GooglePrivacyDlpV2AuxiliaryTableArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KMapEstimationConfig) []GooglePrivacyDlpV2AuxiliaryTable {
		if v == nil {
			return nil
		}
		return v.AuxiliaryTables
	}).(GooglePrivacyDlpV2AuxiliaryTableArrayOutput)
}

// Fields considered to be quasi-identifiers. No two columns can have the same tag.
func (o GooglePrivacyDlpV2KMapEstimationConfigPtrOutput) QuasiIds() GooglePrivacyDlpV2TaggedFieldArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KMapEstimationConfig) []GooglePrivacyDlpV2TaggedField {
		if v == nil {
			return nil
		}
		return v.QuasiIds
	}).(GooglePrivacyDlpV2TaggedFieldArrayOutput)
}

// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
func (o GooglePrivacyDlpV2KMapEstimationConfigPtrOutput) RegionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KMapEstimationConfig) *string {
		if v == nil {
			return nil
		}
		return v.RegionCode
	}).(pulumi.StringPtrOutput)
}

// Reidentifiability metric. This corresponds to a risk model similar to what is called "journalist risk" in the literature, except the attack dataset is statistically modeled instead of being perfectly known. This can be done using publicly available data (like the US Census), or using a custom statistical model (indicated as one or several BigQuery tables), or by extrapolating from the distribution of values in the input dataset.
type GooglePrivacyDlpV2KMapEstimationConfigResponse struct {
	// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.
	AuxiliaryTables []GooglePrivacyDlpV2AuxiliaryTableResponse `pulumi:"auxiliaryTables"`
	// Fields considered to be quasi-identifiers. No two columns can have the same tag.
	QuasiIds []GooglePrivacyDlpV2TaggedFieldResponse `pulumi:"quasiIds"`
	// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
	RegionCode string `pulumi:"regionCode"`
}

// GooglePrivacyDlpV2KMapEstimationConfigResponseInput is an input type that accepts GooglePrivacyDlpV2KMapEstimationConfigResponseArgs and GooglePrivacyDlpV2KMapEstimationConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KMapEstimationConfigResponseInput` via:
//
//          GooglePrivacyDlpV2KMapEstimationConfigResponseArgs{...}
type GooglePrivacyDlpV2KMapEstimationConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KMapEstimationConfigResponseOutput() GooglePrivacyDlpV2KMapEstimationConfigResponseOutput
	ToGooglePrivacyDlpV2KMapEstimationConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2KMapEstimationConfigResponseOutput
}

// Reidentifiability metric. This corresponds to a risk model similar to what is called "journalist risk" in the literature, except the attack dataset is statistically modeled instead of being perfectly known. This can be done using publicly available data (like the US Census), or using a custom statistical model (indicated as one or several BigQuery tables), or by extrapolating from the distribution of values in the input dataset.
type GooglePrivacyDlpV2KMapEstimationConfigResponseArgs struct {
	// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.
	AuxiliaryTables GooglePrivacyDlpV2AuxiliaryTableResponseArrayInput `pulumi:"auxiliaryTables"`
	// Fields considered to be quasi-identifiers. No two columns can have the same tag.
	QuasiIds GooglePrivacyDlpV2TaggedFieldResponseArrayInput `pulumi:"quasiIds"`
	// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
	RegionCode pulumi.StringInput `pulumi:"regionCode"`
}

func (GooglePrivacyDlpV2KMapEstimationConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KMapEstimationConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KMapEstimationConfigResponseArgs) ToGooglePrivacyDlpV2KMapEstimationConfigResponseOutput() GooglePrivacyDlpV2KMapEstimationConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2KMapEstimationConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KMapEstimationConfigResponseArgs) ToGooglePrivacyDlpV2KMapEstimationConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KMapEstimationConfigResponseOutput)
}

func (i GooglePrivacyDlpV2KMapEstimationConfigResponseArgs) ToGooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput() GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KMapEstimationConfigResponseArgs) ToGooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KMapEstimationConfigResponseOutput).ToGooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2KMapEstimationConfigResponsePtrInput is an input type that accepts GooglePrivacyDlpV2KMapEstimationConfigResponseArgs, GooglePrivacyDlpV2KMapEstimationConfigResponsePtr and GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KMapEstimationConfigResponsePtrInput` via:
//
//          GooglePrivacyDlpV2KMapEstimationConfigResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2KMapEstimationConfigResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput() GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput
	ToGooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput
}

type googlePrivacyDlpV2KMapEstimationConfigResponsePtrType GooglePrivacyDlpV2KMapEstimationConfigResponseArgs

func GooglePrivacyDlpV2KMapEstimationConfigResponsePtr(v *GooglePrivacyDlpV2KMapEstimationConfigResponseArgs) GooglePrivacyDlpV2KMapEstimationConfigResponsePtrInput {
	return (*googlePrivacyDlpV2KMapEstimationConfigResponsePtrType)(v)
}

func (*googlePrivacyDlpV2KMapEstimationConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KMapEstimationConfigResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2KMapEstimationConfigResponsePtrType) ToGooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput() GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2KMapEstimationConfigResponsePtrType) ToGooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput)
}

// Reidentifiability metric. This corresponds to a risk model similar to what is called "journalist risk" in the literature, except the attack dataset is statistically modeled instead of being perfectly known. This can be done using publicly available data (like the US Census), or using a custom statistical model (indicated as one or several BigQuery tables), or by extrapolating from the distribution of values in the input dataset.
type GooglePrivacyDlpV2KMapEstimationConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KMapEstimationConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KMapEstimationConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KMapEstimationConfigResponseOutput) ToGooglePrivacyDlpV2KMapEstimationConfigResponseOutput() GooglePrivacyDlpV2KMapEstimationConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationConfigResponseOutput) ToGooglePrivacyDlpV2KMapEstimationConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationConfigResponseOutput) ToGooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput() GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2KMapEstimationConfigResponseOutput) ToGooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2KMapEstimationConfigResponse) *GooglePrivacyDlpV2KMapEstimationConfigResponse {
		return &v
	}).(GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput)
}

// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.
func (o GooglePrivacyDlpV2KMapEstimationConfigResponseOutput) AuxiliaryTables() GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KMapEstimationConfigResponse) []GooglePrivacyDlpV2AuxiliaryTableResponse {
		return v.AuxiliaryTables
	}).(GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput)
}

// Fields considered to be quasi-identifiers. No two columns can have the same tag.
func (o GooglePrivacyDlpV2KMapEstimationConfigResponseOutput) QuasiIds() GooglePrivacyDlpV2TaggedFieldResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KMapEstimationConfigResponse) []GooglePrivacyDlpV2TaggedFieldResponse {
		return v.QuasiIds
	}).(GooglePrivacyDlpV2TaggedFieldResponseArrayOutput)
}

// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
func (o GooglePrivacyDlpV2KMapEstimationConfigResponseOutput) RegionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KMapEstimationConfigResponse) string { return v.RegionCode }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KMapEstimationConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput) ToGooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput() GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput) ToGooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput) Elem() GooglePrivacyDlpV2KMapEstimationConfigResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KMapEstimationConfigResponse) GooglePrivacyDlpV2KMapEstimationConfigResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2KMapEstimationConfigResponse
		return ret
	}).(GooglePrivacyDlpV2KMapEstimationConfigResponseOutput)
}

// Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.
func (o GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput) AuxiliaryTables() GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KMapEstimationConfigResponse) []GooglePrivacyDlpV2AuxiliaryTableResponse {
		if v == nil {
			return nil
		}
		return v.AuxiliaryTables
	}).(GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput)
}

// Fields considered to be quasi-identifiers. No two columns can have the same tag.
func (o GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput) QuasiIds() GooglePrivacyDlpV2TaggedFieldResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KMapEstimationConfigResponse) []GooglePrivacyDlpV2TaggedFieldResponse {
		if v == nil {
			return nil
		}
		return v.QuasiIds
	}).(GooglePrivacyDlpV2TaggedFieldResponseArrayOutput)
}

// ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
func (o GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput) RegionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KMapEstimationConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RegionCode
	}).(pulumi.StringPtrOutput)
}

// A KMapEstimationHistogramBucket message with the following values: min_anonymity: 3 max_anonymity: 5 frequency: 42 means that there are 42 records whose quasi-identifier values correspond to 3, 4 or 5 people in the overlying population. An important particular case is when min_anonymity = max_anonymity = 1: the frequency field then corresponds to the number of uniquely identifiable records.
type GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse struct {
	// Number of records within these anonymity bounds.
	BucketSize string `pulumi:"bucketSize"`
	// Total number of distinct quasi-identifier tuple values in this bucket.
	BucketValueCount string `pulumi:"bucketValueCount"`
	// Sample of quasi-identifier tuple values in this bucket. The total number of classes returned per bucket is capped at 20.
	BucketValues []GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponse `pulumi:"bucketValues"`
	// Always greater than or equal to min_anonymity.
	MaxAnonymity string `pulumi:"maxAnonymity"`
	// Always positive.
	MinAnonymity string `pulumi:"minAnonymity"`
}

// GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseInput is an input type that accepts GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArgs and GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseInput` via:
//
//          GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArgs{...}
type GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput() GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput
	ToGooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutputWithContext(context.Context) GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput
}

// A KMapEstimationHistogramBucket message with the following values: min_anonymity: 3 max_anonymity: 5 frequency: 42 means that there are 42 records whose quasi-identifier values correspond to 3, 4 or 5 people in the overlying population. An important particular case is when min_anonymity = max_anonymity = 1: the frequency field then corresponds to the number of uniquely identifiable records.
type GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArgs struct {
	// Number of records within these anonymity bounds.
	BucketSize pulumi.StringInput `pulumi:"bucketSize"`
	// Total number of distinct quasi-identifier tuple values in this bucket.
	BucketValueCount pulumi.StringInput `pulumi:"bucketValueCount"`
	// Sample of quasi-identifier tuple values in this bucket. The total number of classes returned per bucket is capped at 20.
	BucketValues GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayInput `pulumi:"bucketValues"`
	// Always greater than or equal to min_anonymity.
	MaxAnonymity pulumi.StringInput `pulumi:"maxAnonymity"`
	// Always positive.
	MinAnonymity pulumi.StringInput `pulumi:"minAnonymity"`
}

func (GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArgs) ToGooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput() GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput {
	return i.ToGooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArgs) ToGooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput)
}

// GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayInput is an input type that accepts GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArray and GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayInput` via:
//
//          GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArray{ GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArgs{...} }
type GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput
	ToGooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput
}

type GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArray []GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseInput

func (GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArray) ToGooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArray) ToGooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput)
}

// A KMapEstimationHistogramBucket message with the following values: min_anonymity: 3 max_anonymity: 5 frequency: 42 means that there are 42 records whose quasi-identifier values correspond to 3, 4 or 5 people in the overlying population. An important particular case is when min_anonymity = max_anonymity = 1: the frequency field then corresponds to the number of uniquely identifiable records.
type GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput) ToGooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput() GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput) ToGooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput {
	return o
}

// Number of records within these anonymity bounds.
func (o GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput) BucketSize() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse) string { return v.BucketSize }).(pulumi.StringOutput)
}

// Total number of distinct quasi-identifier tuple values in this bucket.
func (o GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput) BucketValueCount() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse) string { return v.BucketValueCount }).(pulumi.StringOutput)
}

// Sample of quasi-identifier tuple values in this bucket. The total number of classes returned per bucket is capped at 20.
func (o GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput) BucketValues() GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse) []GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponse {
		return v.BucketValues
	}).(GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput)
}

// Always greater than or equal to min_anonymity.
func (o GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput) MaxAnonymity() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse) string { return v.MaxAnonymity }).(pulumi.StringOutput)
}

// Always positive.
func (o GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput) MinAnonymity() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse) string { return v.MinAnonymity }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput) ToGooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput) ToGooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse {
		return vs[0].([]GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput)
}

// A tuple of values for the quasi-identifier columns.
type GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponse struct {
	// The estimated anonymity for these quasi-identifier values.
	EstimatedAnonymity string `pulumi:"estimatedAnonymity"`
	// The quasi-identifier values.
	QuasiIdsValues []GooglePrivacyDlpV2ValueResponse `pulumi:"quasiIdsValues"`
}

// GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseInput is an input type that accepts GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArgs and GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseInput` via:
//
//          GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArgs{...}
type GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput() GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput
	ToGooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutputWithContext(context.Context) GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput
}

// A tuple of values for the quasi-identifier columns.
type GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArgs struct {
	// The estimated anonymity for these quasi-identifier values.
	EstimatedAnonymity pulumi.StringInput `pulumi:"estimatedAnonymity"`
	// The quasi-identifier values.
	QuasiIdsValues GooglePrivacyDlpV2ValueResponseArrayInput `pulumi:"quasiIdsValues"`
}

func (GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArgs) ToGooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput() GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput {
	return i.ToGooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArgs) ToGooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput)
}

// GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayInput is an input type that accepts GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArray and GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayInput` via:
//
//          GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArray{ GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArgs{...} }
type GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput() GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput
	ToGooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput
}

type GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArray []GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseInput

func (GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArray) ToGooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput() GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArray) ToGooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput)
}

// A tuple of values for the quasi-identifier columns.
type GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput) ToGooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput() GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput) ToGooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput {
	return o
}

// The estimated anonymity for these quasi-identifier values.
func (o GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput) EstimatedAnonymity() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponse) string { return v.EstimatedAnonymity }).(pulumi.StringOutput)
}

// The quasi-identifier values.
func (o GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput) QuasiIdsValues() GooglePrivacyDlpV2ValueResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponse) []GooglePrivacyDlpV2ValueResponse {
		return v.QuasiIdsValues
	}).(GooglePrivacyDlpV2ValueResponseArrayOutput)
}

type GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput) ToGooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput() GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput) ToGooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponse {
		return vs[0].([]GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput)
}

// Result of the reidentifiability analysis. Note that these results are an estimation, not exact values.
type GooglePrivacyDlpV2KMapEstimationResultResponse struct {
	// The intervals [min_anonymity, max_anonymity] do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following records: {min_anonymity: 1, max_anonymity: 1, frequency: 17} {min_anonymity: 2, max_anonymity: 3, frequency: 42} {min_anonymity: 5, max_anonymity: 10, frequency: 99} mean that there are no record with an estimated anonymity of 4, 5, or larger than 10.
	KMapEstimationHistogram []GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse `pulumi:"kMapEstimationHistogram"`
}

// GooglePrivacyDlpV2KMapEstimationResultResponseInput is an input type that accepts GooglePrivacyDlpV2KMapEstimationResultResponseArgs and GooglePrivacyDlpV2KMapEstimationResultResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KMapEstimationResultResponseInput` via:
//
//          GooglePrivacyDlpV2KMapEstimationResultResponseArgs{...}
type GooglePrivacyDlpV2KMapEstimationResultResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KMapEstimationResultResponseOutput() GooglePrivacyDlpV2KMapEstimationResultResponseOutput
	ToGooglePrivacyDlpV2KMapEstimationResultResponseOutputWithContext(context.Context) GooglePrivacyDlpV2KMapEstimationResultResponseOutput
}

// Result of the reidentifiability analysis. Note that these results are an estimation, not exact values.
type GooglePrivacyDlpV2KMapEstimationResultResponseArgs struct {
	// The intervals [min_anonymity, max_anonymity] do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following records: {min_anonymity: 1, max_anonymity: 1, frequency: 17} {min_anonymity: 2, max_anonymity: 3, frequency: 42} {min_anonymity: 5, max_anonymity: 10, frequency: 99} mean that there are no record with an estimated anonymity of 4, 5, or larger than 10.
	KMapEstimationHistogram GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayInput `pulumi:"kMapEstimationHistogram"`
}

func (GooglePrivacyDlpV2KMapEstimationResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KMapEstimationResultResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KMapEstimationResultResponseArgs) ToGooglePrivacyDlpV2KMapEstimationResultResponseOutput() GooglePrivacyDlpV2KMapEstimationResultResponseOutput {
	return i.ToGooglePrivacyDlpV2KMapEstimationResultResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KMapEstimationResultResponseArgs) ToGooglePrivacyDlpV2KMapEstimationResultResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KMapEstimationResultResponseOutput)
}

func (i GooglePrivacyDlpV2KMapEstimationResultResponseArgs) ToGooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput() GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2KMapEstimationResultResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KMapEstimationResultResponseArgs) ToGooglePrivacyDlpV2KMapEstimationResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KMapEstimationResultResponseOutput).ToGooglePrivacyDlpV2KMapEstimationResultResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2KMapEstimationResultResponsePtrInput is an input type that accepts GooglePrivacyDlpV2KMapEstimationResultResponseArgs, GooglePrivacyDlpV2KMapEstimationResultResponsePtr and GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KMapEstimationResultResponsePtrInput` via:
//
//          GooglePrivacyDlpV2KMapEstimationResultResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2KMapEstimationResultResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput() GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput
	ToGooglePrivacyDlpV2KMapEstimationResultResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput
}

type googlePrivacyDlpV2KMapEstimationResultResponsePtrType GooglePrivacyDlpV2KMapEstimationResultResponseArgs

func GooglePrivacyDlpV2KMapEstimationResultResponsePtr(v *GooglePrivacyDlpV2KMapEstimationResultResponseArgs) GooglePrivacyDlpV2KMapEstimationResultResponsePtrInput {
	return (*googlePrivacyDlpV2KMapEstimationResultResponsePtrType)(v)
}

func (*googlePrivacyDlpV2KMapEstimationResultResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KMapEstimationResultResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2KMapEstimationResultResponsePtrType) ToGooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput() GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2KMapEstimationResultResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2KMapEstimationResultResponsePtrType) ToGooglePrivacyDlpV2KMapEstimationResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput)
}

// Result of the reidentifiability analysis. Note that these results are an estimation, not exact values.
type GooglePrivacyDlpV2KMapEstimationResultResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KMapEstimationResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KMapEstimationResultResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KMapEstimationResultResponseOutput) ToGooglePrivacyDlpV2KMapEstimationResultResponseOutput() GooglePrivacyDlpV2KMapEstimationResultResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationResultResponseOutput) ToGooglePrivacyDlpV2KMapEstimationResultResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationResultResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationResultResponseOutput) ToGooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput() GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2KMapEstimationResultResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2KMapEstimationResultResponseOutput) ToGooglePrivacyDlpV2KMapEstimationResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2KMapEstimationResultResponse) *GooglePrivacyDlpV2KMapEstimationResultResponse {
		return &v
	}).(GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput)
}

// The intervals [min_anonymity, max_anonymity] do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following records: {min_anonymity: 1, max_anonymity: 1, frequency: 17} {min_anonymity: 2, max_anonymity: 3, frequency: 42} {min_anonymity: 5, max_anonymity: 10, frequency: 99} mean that there are no record with an estimated anonymity of 4, 5, or larger than 10.
func (o GooglePrivacyDlpV2KMapEstimationResultResponseOutput) KMapEstimationHistogram() GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KMapEstimationResultResponse) []GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse {
		return v.KMapEstimationHistogram
	}).(GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput)
}

type GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KMapEstimationResultResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput) ToGooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput() GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput) ToGooglePrivacyDlpV2KMapEstimationResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput) Elem() GooglePrivacyDlpV2KMapEstimationResultResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KMapEstimationResultResponse) GooglePrivacyDlpV2KMapEstimationResultResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2KMapEstimationResultResponse
		return ret
	}).(GooglePrivacyDlpV2KMapEstimationResultResponseOutput)
}

// The intervals [min_anonymity, max_anonymity] do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following records: {min_anonymity: 1, max_anonymity: 1, frequency: 17} {min_anonymity: 2, max_anonymity: 3, frequency: 42} {min_anonymity: 5, max_anonymity: 10, frequency: 99} mean that there are no record with an estimated anonymity of 4, 5, or larger than 10.
func (o GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput) KMapEstimationHistogram() GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KMapEstimationResultResponse) []GooglePrivacyDlpV2KMapEstimationHistogramBucketResponse {
		if v == nil {
			return nil
		}
		return v.KMapEstimationHistogram
	}).(GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput)
}

// A representation of a Datastore kind.
type GooglePrivacyDlpV2KindExpression struct {
	// The name of the kind.
	Name *string `pulumi:"name"`
}

// GooglePrivacyDlpV2KindExpressionInput is an input type that accepts GooglePrivacyDlpV2KindExpressionArgs and GooglePrivacyDlpV2KindExpressionOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KindExpressionInput` via:
//
//          GooglePrivacyDlpV2KindExpressionArgs{...}
type GooglePrivacyDlpV2KindExpressionInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KindExpressionOutput() GooglePrivacyDlpV2KindExpressionOutput
	ToGooglePrivacyDlpV2KindExpressionOutputWithContext(context.Context) GooglePrivacyDlpV2KindExpressionOutput
}

// A representation of a Datastore kind.
type GooglePrivacyDlpV2KindExpressionArgs struct {
	// The name of the kind.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GooglePrivacyDlpV2KindExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KindExpression)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KindExpressionArgs) ToGooglePrivacyDlpV2KindExpressionOutput() GooglePrivacyDlpV2KindExpressionOutput {
	return i.ToGooglePrivacyDlpV2KindExpressionOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KindExpressionArgs) ToGooglePrivacyDlpV2KindExpressionOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KindExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KindExpressionOutput)
}

func (i GooglePrivacyDlpV2KindExpressionArgs) ToGooglePrivacyDlpV2KindExpressionPtrOutput() GooglePrivacyDlpV2KindExpressionPtrOutput {
	return i.ToGooglePrivacyDlpV2KindExpressionPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KindExpressionArgs) ToGooglePrivacyDlpV2KindExpressionPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KindExpressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KindExpressionOutput).ToGooglePrivacyDlpV2KindExpressionPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2KindExpressionPtrInput is an input type that accepts GooglePrivacyDlpV2KindExpressionArgs, GooglePrivacyDlpV2KindExpressionPtr and GooglePrivacyDlpV2KindExpressionPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KindExpressionPtrInput` via:
//
//          GooglePrivacyDlpV2KindExpressionArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2KindExpressionPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KindExpressionPtrOutput() GooglePrivacyDlpV2KindExpressionPtrOutput
	ToGooglePrivacyDlpV2KindExpressionPtrOutputWithContext(context.Context) GooglePrivacyDlpV2KindExpressionPtrOutput
}

type googlePrivacyDlpV2KindExpressionPtrType GooglePrivacyDlpV2KindExpressionArgs

func GooglePrivacyDlpV2KindExpressionPtr(v *GooglePrivacyDlpV2KindExpressionArgs) GooglePrivacyDlpV2KindExpressionPtrInput {
	return (*googlePrivacyDlpV2KindExpressionPtrType)(v)
}

func (*googlePrivacyDlpV2KindExpressionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KindExpression)(nil)).Elem()
}

func (i *googlePrivacyDlpV2KindExpressionPtrType) ToGooglePrivacyDlpV2KindExpressionPtrOutput() GooglePrivacyDlpV2KindExpressionPtrOutput {
	return i.ToGooglePrivacyDlpV2KindExpressionPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2KindExpressionPtrType) ToGooglePrivacyDlpV2KindExpressionPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KindExpressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KindExpressionPtrOutput)
}

// A representation of a Datastore kind.
type GooglePrivacyDlpV2KindExpressionOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KindExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KindExpression)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KindExpressionOutput) ToGooglePrivacyDlpV2KindExpressionOutput() GooglePrivacyDlpV2KindExpressionOutput {
	return o
}

func (o GooglePrivacyDlpV2KindExpressionOutput) ToGooglePrivacyDlpV2KindExpressionOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KindExpressionOutput {
	return o
}

func (o GooglePrivacyDlpV2KindExpressionOutput) ToGooglePrivacyDlpV2KindExpressionPtrOutput() GooglePrivacyDlpV2KindExpressionPtrOutput {
	return o.ToGooglePrivacyDlpV2KindExpressionPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2KindExpressionOutput) ToGooglePrivacyDlpV2KindExpressionPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KindExpressionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2KindExpression) *GooglePrivacyDlpV2KindExpression {
		return &v
	}).(GooglePrivacyDlpV2KindExpressionPtrOutput)
}

// The name of the kind.
func (o GooglePrivacyDlpV2KindExpressionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KindExpression) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2KindExpressionPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KindExpressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KindExpression)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KindExpressionPtrOutput) ToGooglePrivacyDlpV2KindExpressionPtrOutput() GooglePrivacyDlpV2KindExpressionPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KindExpressionPtrOutput) ToGooglePrivacyDlpV2KindExpressionPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KindExpressionPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KindExpressionPtrOutput) Elem() GooglePrivacyDlpV2KindExpressionOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KindExpression) GooglePrivacyDlpV2KindExpression {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2KindExpression
		return ret
	}).(GooglePrivacyDlpV2KindExpressionOutput)
}

// The name of the kind.
func (o GooglePrivacyDlpV2KindExpressionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KindExpression) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A representation of a Datastore kind.
type GooglePrivacyDlpV2KindExpressionResponse struct {
	// The name of the kind.
	Name string `pulumi:"name"`
}

// GooglePrivacyDlpV2KindExpressionResponseInput is an input type that accepts GooglePrivacyDlpV2KindExpressionResponseArgs and GooglePrivacyDlpV2KindExpressionResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KindExpressionResponseInput` via:
//
//          GooglePrivacyDlpV2KindExpressionResponseArgs{...}
type GooglePrivacyDlpV2KindExpressionResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KindExpressionResponseOutput() GooglePrivacyDlpV2KindExpressionResponseOutput
	ToGooglePrivacyDlpV2KindExpressionResponseOutputWithContext(context.Context) GooglePrivacyDlpV2KindExpressionResponseOutput
}

// A representation of a Datastore kind.
type GooglePrivacyDlpV2KindExpressionResponseArgs struct {
	// The name of the kind.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GooglePrivacyDlpV2KindExpressionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KindExpressionResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KindExpressionResponseArgs) ToGooglePrivacyDlpV2KindExpressionResponseOutput() GooglePrivacyDlpV2KindExpressionResponseOutput {
	return i.ToGooglePrivacyDlpV2KindExpressionResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KindExpressionResponseArgs) ToGooglePrivacyDlpV2KindExpressionResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KindExpressionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KindExpressionResponseOutput)
}

func (i GooglePrivacyDlpV2KindExpressionResponseArgs) ToGooglePrivacyDlpV2KindExpressionResponsePtrOutput() GooglePrivacyDlpV2KindExpressionResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2KindExpressionResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KindExpressionResponseArgs) ToGooglePrivacyDlpV2KindExpressionResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KindExpressionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KindExpressionResponseOutput).ToGooglePrivacyDlpV2KindExpressionResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2KindExpressionResponsePtrInput is an input type that accepts GooglePrivacyDlpV2KindExpressionResponseArgs, GooglePrivacyDlpV2KindExpressionResponsePtr and GooglePrivacyDlpV2KindExpressionResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KindExpressionResponsePtrInput` via:
//
//          GooglePrivacyDlpV2KindExpressionResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2KindExpressionResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KindExpressionResponsePtrOutput() GooglePrivacyDlpV2KindExpressionResponsePtrOutput
	ToGooglePrivacyDlpV2KindExpressionResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2KindExpressionResponsePtrOutput
}

type googlePrivacyDlpV2KindExpressionResponsePtrType GooglePrivacyDlpV2KindExpressionResponseArgs

func GooglePrivacyDlpV2KindExpressionResponsePtr(v *GooglePrivacyDlpV2KindExpressionResponseArgs) GooglePrivacyDlpV2KindExpressionResponsePtrInput {
	return (*googlePrivacyDlpV2KindExpressionResponsePtrType)(v)
}

func (*googlePrivacyDlpV2KindExpressionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KindExpressionResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2KindExpressionResponsePtrType) ToGooglePrivacyDlpV2KindExpressionResponsePtrOutput() GooglePrivacyDlpV2KindExpressionResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2KindExpressionResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2KindExpressionResponsePtrType) ToGooglePrivacyDlpV2KindExpressionResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KindExpressionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KindExpressionResponsePtrOutput)
}

// A representation of a Datastore kind.
type GooglePrivacyDlpV2KindExpressionResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KindExpressionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KindExpressionResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KindExpressionResponseOutput) ToGooglePrivacyDlpV2KindExpressionResponseOutput() GooglePrivacyDlpV2KindExpressionResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KindExpressionResponseOutput) ToGooglePrivacyDlpV2KindExpressionResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KindExpressionResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KindExpressionResponseOutput) ToGooglePrivacyDlpV2KindExpressionResponsePtrOutput() GooglePrivacyDlpV2KindExpressionResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2KindExpressionResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2KindExpressionResponseOutput) ToGooglePrivacyDlpV2KindExpressionResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KindExpressionResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2KindExpressionResponse) *GooglePrivacyDlpV2KindExpressionResponse {
		return &v
	}).(GooglePrivacyDlpV2KindExpressionResponsePtrOutput)
}

// The name of the kind.
func (o GooglePrivacyDlpV2KindExpressionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KindExpressionResponse) string { return v.Name }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2KindExpressionResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KindExpressionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KindExpressionResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KindExpressionResponsePtrOutput) ToGooglePrivacyDlpV2KindExpressionResponsePtrOutput() GooglePrivacyDlpV2KindExpressionResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KindExpressionResponsePtrOutput) ToGooglePrivacyDlpV2KindExpressionResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KindExpressionResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KindExpressionResponsePtrOutput) Elem() GooglePrivacyDlpV2KindExpressionResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KindExpressionResponse) GooglePrivacyDlpV2KindExpressionResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2KindExpressionResponse
		return ret
	}).(GooglePrivacyDlpV2KindExpressionResponseOutput)
}

// The name of the kind.
func (o GooglePrivacyDlpV2KindExpressionResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KindExpressionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Include to use an existing data crypto key wrapped by KMS. The wrapped key must be a 128-, 192-, or 256-bit key. Authorization requires the following IAM permissions when sending a request to perform a crypto transformation using a KMS-wrapped crypto key: dlp.kms.encrypt For more information, see [Creating a wrapped key] (https://cloud.google.com/dlp/docs/create-wrapped-key). Note: When you use Cloud KMS for cryptographic operations, [charges apply](https://cloud.google.com/kms/pricing).
type GooglePrivacyDlpV2KmsWrappedCryptoKey struct {
	// The resource name of the KMS CryptoKey to use for unwrapping.
	CryptoKeyName string `pulumi:"cryptoKeyName"`
	// The wrapped data crypto key.
	WrappedKey string `pulumi:"wrappedKey"`
}

// GooglePrivacyDlpV2KmsWrappedCryptoKeyInput is an input type that accepts GooglePrivacyDlpV2KmsWrappedCryptoKeyArgs and GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KmsWrappedCryptoKeyInput` via:
//
//          GooglePrivacyDlpV2KmsWrappedCryptoKeyArgs{...}
type GooglePrivacyDlpV2KmsWrappedCryptoKeyInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KmsWrappedCryptoKeyOutput() GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput
	ToGooglePrivacyDlpV2KmsWrappedCryptoKeyOutputWithContext(context.Context) GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput
}

// Include to use an existing data crypto key wrapped by KMS. The wrapped key must be a 128-, 192-, or 256-bit key. Authorization requires the following IAM permissions when sending a request to perform a crypto transformation using a KMS-wrapped crypto key: dlp.kms.encrypt For more information, see [Creating a wrapped key] (https://cloud.google.com/dlp/docs/create-wrapped-key). Note: When you use Cloud KMS for cryptographic operations, [charges apply](https://cloud.google.com/kms/pricing).
type GooglePrivacyDlpV2KmsWrappedCryptoKeyArgs struct {
	// The resource name of the KMS CryptoKey to use for unwrapping.
	CryptoKeyName pulumi.StringInput `pulumi:"cryptoKeyName"`
	// The wrapped data crypto key.
	WrappedKey pulumi.StringInput `pulumi:"wrappedKey"`
}

func (GooglePrivacyDlpV2KmsWrappedCryptoKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KmsWrappedCryptoKey)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KmsWrappedCryptoKeyArgs) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyOutput() GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput {
	return i.ToGooglePrivacyDlpV2KmsWrappedCryptoKeyOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KmsWrappedCryptoKeyArgs) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput)
}

func (i GooglePrivacyDlpV2KmsWrappedCryptoKeyArgs) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput() GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput {
	return i.ToGooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KmsWrappedCryptoKeyArgs) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput).ToGooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrInput is an input type that accepts GooglePrivacyDlpV2KmsWrappedCryptoKeyArgs, GooglePrivacyDlpV2KmsWrappedCryptoKeyPtr and GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrInput` via:
//
//          GooglePrivacyDlpV2KmsWrappedCryptoKeyArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput() GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput
	ToGooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutputWithContext(context.Context) GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput
}

type googlePrivacyDlpV2KmsWrappedCryptoKeyPtrType GooglePrivacyDlpV2KmsWrappedCryptoKeyArgs

func GooglePrivacyDlpV2KmsWrappedCryptoKeyPtr(v *GooglePrivacyDlpV2KmsWrappedCryptoKeyArgs) GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrInput {
	return (*googlePrivacyDlpV2KmsWrappedCryptoKeyPtrType)(v)
}

func (*googlePrivacyDlpV2KmsWrappedCryptoKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KmsWrappedCryptoKey)(nil)).Elem()
}

func (i *googlePrivacyDlpV2KmsWrappedCryptoKeyPtrType) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput() GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput {
	return i.ToGooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2KmsWrappedCryptoKeyPtrType) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput)
}

// Include to use an existing data crypto key wrapped by KMS. The wrapped key must be a 128-, 192-, or 256-bit key. Authorization requires the following IAM permissions when sending a request to perform a crypto transformation using a KMS-wrapped crypto key: dlp.kms.encrypt For more information, see [Creating a wrapped key] (https://cloud.google.com/dlp/docs/create-wrapped-key). Note: When you use Cloud KMS for cryptographic operations, [charges apply](https://cloud.google.com/kms/pricing).
type GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KmsWrappedCryptoKey)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyOutput() GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput {
	return o
}

func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput {
	return o
}

func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput() GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput {
	return o.ToGooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2KmsWrappedCryptoKey) *GooglePrivacyDlpV2KmsWrappedCryptoKey {
		return &v
	}).(GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput)
}

// The resource name of the KMS CryptoKey to use for unwrapping.
func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput) CryptoKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KmsWrappedCryptoKey) string { return v.CryptoKeyName }).(pulumi.StringOutput)
}

// The wrapped data crypto key.
func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput) WrappedKey() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KmsWrappedCryptoKey) string { return v.WrappedKey }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2KmsWrappedCryptoKey)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput() GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput) Elem() GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KmsWrappedCryptoKey) GooglePrivacyDlpV2KmsWrappedCryptoKey {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2KmsWrappedCryptoKey
		return ret
	}).(GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput)
}

// The resource name of the KMS CryptoKey to use for unwrapping.
func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput) CryptoKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KmsWrappedCryptoKey) *string {
		if v == nil {
			return nil
		}
		return &v.CryptoKeyName
	}).(pulumi.StringPtrOutput)
}

// The wrapped data crypto key.
func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput) WrappedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2KmsWrappedCryptoKey) *string {
		if v == nil {
			return nil
		}
		return &v.WrappedKey
	}).(pulumi.StringPtrOutput)
}

// Include to use an existing data crypto key wrapped by KMS. The wrapped key must be a 128-, 192-, or 256-bit key. Authorization requires the following IAM permissions when sending a request to perform a crypto transformation using a KMS-wrapped crypto key: dlp.kms.encrypt For more information, see [Creating a wrapped key] (https://cloud.google.com/dlp/docs/create-wrapped-key). Note: When you use Cloud KMS for cryptographic operations, [charges apply](https://cloud.google.com/kms/pricing).
type GooglePrivacyDlpV2KmsWrappedCryptoKeyResponse struct {
	// The resource name of the KMS CryptoKey to use for unwrapping.
	CryptoKeyName string `pulumi:"cryptoKeyName"`
	// The wrapped data crypto key.
	WrappedKey string `pulumi:"wrappedKey"`
}

// GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseInput is an input type that accepts GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseArgs and GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseInput` via:
//
//          GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseArgs{...}
type GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput() GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput
	ToGooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutputWithContext(context.Context) GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput
}

// Include to use an existing data crypto key wrapped by KMS. The wrapped key must be a 128-, 192-, or 256-bit key. Authorization requires the following IAM permissions when sending a request to perform a crypto transformation using a KMS-wrapped crypto key: dlp.kms.encrypt For more information, see [Creating a wrapped key] (https://cloud.google.com/dlp/docs/create-wrapped-key). Note: When you use Cloud KMS for cryptographic operations, [charges apply](https://cloud.google.com/kms/pricing).
type GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseArgs struct {
	// The resource name of the KMS CryptoKey to use for unwrapping.
	CryptoKeyName pulumi.StringInput `pulumi:"cryptoKeyName"`
	// The wrapped data crypto key.
	WrappedKey pulumi.StringInput `pulumi:"wrappedKey"`
}

func (GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KmsWrappedCryptoKeyResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseArgs) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput() GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput {
	return i.ToGooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseArgs) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput)
}

// Include to use an existing data crypto key wrapped by KMS. The wrapped key must be a 128-, 192-, or 256-bit key. Authorization requires the following IAM permissions when sending a request to perform a crypto transformation using a KMS-wrapped crypto key: dlp.kms.encrypt For more information, see [Creating a wrapped key] (https://cloud.google.com/dlp/docs/create-wrapped-key). Note: When you use Cloud KMS for cryptographic operations, [charges apply](https://cloud.google.com/kms/pricing).
type GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2KmsWrappedCryptoKeyResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput() GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput) ToGooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput {
	return o
}

// The resource name of the KMS CryptoKey to use for unwrapping.
func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput) CryptoKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KmsWrappedCryptoKeyResponse) string { return v.CryptoKeyName }).(pulumi.StringOutput)
}

// The wrapped data crypto key.
func (o GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput) WrappedKey() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2KmsWrappedCryptoKeyResponse) string { return v.WrappedKey }).(pulumi.StringOutput)
}

// l-diversity metric, used for analysis of reidentification risk.
type GooglePrivacyDlpV2LDiversityConfig struct {
	// Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.
	QuasiIds []GooglePrivacyDlpV2FieldId `pulumi:"quasiIds"`
	// Sensitive field for computing the l-value.
	SensitiveAttribute *GooglePrivacyDlpV2FieldId `pulumi:"sensitiveAttribute"`
}

// GooglePrivacyDlpV2LDiversityConfigInput is an input type that accepts GooglePrivacyDlpV2LDiversityConfigArgs and GooglePrivacyDlpV2LDiversityConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LDiversityConfigInput` via:
//
//          GooglePrivacyDlpV2LDiversityConfigArgs{...}
type GooglePrivacyDlpV2LDiversityConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LDiversityConfigOutput() GooglePrivacyDlpV2LDiversityConfigOutput
	ToGooglePrivacyDlpV2LDiversityConfigOutputWithContext(context.Context) GooglePrivacyDlpV2LDiversityConfigOutput
}

// l-diversity metric, used for analysis of reidentification risk.
type GooglePrivacyDlpV2LDiversityConfigArgs struct {
	// Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.
	QuasiIds GooglePrivacyDlpV2FieldIdArrayInput `pulumi:"quasiIds"`
	// Sensitive field for computing the l-value.
	SensitiveAttribute GooglePrivacyDlpV2FieldIdPtrInput `pulumi:"sensitiveAttribute"`
}

func (GooglePrivacyDlpV2LDiversityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LDiversityConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2LDiversityConfigArgs) ToGooglePrivacyDlpV2LDiversityConfigOutput() GooglePrivacyDlpV2LDiversityConfigOutput {
	return i.ToGooglePrivacyDlpV2LDiversityConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LDiversityConfigArgs) ToGooglePrivacyDlpV2LDiversityConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LDiversityConfigOutput)
}

func (i GooglePrivacyDlpV2LDiversityConfigArgs) ToGooglePrivacyDlpV2LDiversityConfigPtrOutput() GooglePrivacyDlpV2LDiversityConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2LDiversityConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LDiversityConfigArgs) ToGooglePrivacyDlpV2LDiversityConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LDiversityConfigOutput).ToGooglePrivacyDlpV2LDiversityConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2LDiversityConfigPtrInput is an input type that accepts GooglePrivacyDlpV2LDiversityConfigArgs, GooglePrivacyDlpV2LDiversityConfigPtr and GooglePrivacyDlpV2LDiversityConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LDiversityConfigPtrInput` via:
//
//          GooglePrivacyDlpV2LDiversityConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2LDiversityConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LDiversityConfigPtrOutput() GooglePrivacyDlpV2LDiversityConfigPtrOutput
	ToGooglePrivacyDlpV2LDiversityConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2LDiversityConfigPtrOutput
}

type googlePrivacyDlpV2LDiversityConfigPtrType GooglePrivacyDlpV2LDiversityConfigArgs

func GooglePrivacyDlpV2LDiversityConfigPtr(v *GooglePrivacyDlpV2LDiversityConfigArgs) GooglePrivacyDlpV2LDiversityConfigPtrInput {
	return (*googlePrivacyDlpV2LDiversityConfigPtrType)(v)
}

func (*googlePrivacyDlpV2LDiversityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LDiversityConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2LDiversityConfigPtrType) ToGooglePrivacyDlpV2LDiversityConfigPtrOutput() GooglePrivacyDlpV2LDiversityConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2LDiversityConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2LDiversityConfigPtrType) ToGooglePrivacyDlpV2LDiversityConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LDiversityConfigPtrOutput)
}

// l-diversity metric, used for analysis of reidentification risk.
type GooglePrivacyDlpV2LDiversityConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LDiversityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LDiversityConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LDiversityConfigOutput) ToGooglePrivacyDlpV2LDiversityConfigOutput() GooglePrivacyDlpV2LDiversityConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityConfigOutput) ToGooglePrivacyDlpV2LDiversityConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityConfigOutput) ToGooglePrivacyDlpV2LDiversityConfigPtrOutput() GooglePrivacyDlpV2LDiversityConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2LDiversityConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2LDiversityConfigOutput) ToGooglePrivacyDlpV2LDiversityConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2LDiversityConfig) *GooglePrivacyDlpV2LDiversityConfig {
		return &v
	}).(GooglePrivacyDlpV2LDiversityConfigPtrOutput)
}

// Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.
func (o GooglePrivacyDlpV2LDiversityConfigOutput) QuasiIds() GooglePrivacyDlpV2FieldIdArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LDiversityConfig) []GooglePrivacyDlpV2FieldId { return v.QuasiIds }).(GooglePrivacyDlpV2FieldIdArrayOutput)
}

// Sensitive field for computing the l-value.
func (o GooglePrivacyDlpV2LDiversityConfigOutput) SensitiveAttribute() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LDiversityConfig) *GooglePrivacyDlpV2FieldId { return v.SensitiveAttribute }).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

type GooglePrivacyDlpV2LDiversityConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LDiversityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LDiversityConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LDiversityConfigPtrOutput) ToGooglePrivacyDlpV2LDiversityConfigPtrOutput() GooglePrivacyDlpV2LDiversityConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityConfigPtrOutput) ToGooglePrivacyDlpV2LDiversityConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityConfigPtrOutput) Elem() GooglePrivacyDlpV2LDiversityConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LDiversityConfig) GooglePrivacyDlpV2LDiversityConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2LDiversityConfig
		return ret
	}).(GooglePrivacyDlpV2LDiversityConfigOutput)
}

// Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.
func (o GooglePrivacyDlpV2LDiversityConfigPtrOutput) QuasiIds() GooglePrivacyDlpV2FieldIdArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LDiversityConfig) []GooglePrivacyDlpV2FieldId {
		if v == nil {
			return nil
		}
		return v.QuasiIds
	}).(GooglePrivacyDlpV2FieldIdArrayOutput)
}

// Sensitive field for computing the l-value.
func (o GooglePrivacyDlpV2LDiversityConfigPtrOutput) SensitiveAttribute() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LDiversityConfig) *GooglePrivacyDlpV2FieldId {
		if v == nil {
			return nil
		}
		return v.SensitiveAttribute
	}).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// l-diversity metric, used for analysis of reidentification risk.
type GooglePrivacyDlpV2LDiversityConfigResponse struct {
	// Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.
	QuasiIds []GooglePrivacyDlpV2FieldIdResponse `pulumi:"quasiIds"`
	// Sensitive field for computing the l-value.
	SensitiveAttribute GooglePrivacyDlpV2FieldIdResponse `pulumi:"sensitiveAttribute"`
}

// GooglePrivacyDlpV2LDiversityConfigResponseInput is an input type that accepts GooglePrivacyDlpV2LDiversityConfigResponseArgs and GooglePrivacyDlpV2LDiversityConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LDiversityConfigResponseInput` via:
//
//          GooglePrivacyDlpV2LDiversityConfigResponseArgs{...}
type GooglePrivacyDlpV2LDiversityConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LDiversityConfigResponseOutput() GooglePrivacyDlpV2LDiversityConfigResponseOutput
	ToGooglePrivacyDlpV2LDiversityConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2LDiversityConfigResponseOutput
}

// l-diversity metric, used for analysis of reidentification risk.
type GooglePrivacyDlpV2LDiversityConfigResponseArgs struct {
	// Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.
	QuasiIds GooglePrivacyDlpV2FieldIdResponseArrayInput `pulumi:"quasiIds"`
	// Sensitive field for computing the l-value.
	SensitiveAttribute GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"sensitiveAttribute"`
}

func (GooglePrivacyDlpV2LDiversityConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LDiversityConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2LDiversityConfigResponseArgs) ToGooglePrivacyDlpV2LDiversityConfigResponseOutput() GooglePrivacyDlpV2LDiversityConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2LDiversityConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LDiversityConfigResponseArgs) ToGooglePrivacyDlpV2LDiversityConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LDiversityConfigResponseOutput)
}

func (i GooglePrivacyDlpV2LDiversityConfigResponseArgs) ToGooglePrivacyDlpV2LDiversityConfigResponsePtrOutput() GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2LDiversityConfigResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LDiversityConfigResponseArgs) ToGooglePrivacyDlpV2LDiversityConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LDiversityConfigResponseOutput).ToGooglePrivacyDlpV2LDiversityConfigResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2LDiversityConfigResponsePtrInput is an input type that accepts GooglePrivacyDlpV2LDiversityConfigResponseArgs, GooglePrivacyDlpV2LDiversityConfigResponsePtr and GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LDiversityConfigResponsePtrInput` via:
//
//          GooglePrivacyDlpV2LDiversityConfigResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2LDiversityConfigResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LDiversityConfigResponsePtrOutput() GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput
	ToGooglePrivacyDlpV2LDiversityConfigResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput
}

type googlePrivacyDlpV2LDiversityConfigResponsePtrType GooglePrivacyDlpV2LDiversityConfigResponseArgs

func GooglePrivacyDlpV2LDiversityConfigResponsePtr(v *GooglePrivacyDlpV2LDiversityConfigResponseArgs) GooglePrivacyDlpV2LDiversityConfigResponsePtrInput {
	return (*googlePrivacyDlpV2LDiversityConfigResponsePtrType)(v)
}

func (*googlePrivacyDlpV2LDiversityConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LDiversityConfigResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2LDiversityConfigResponsePtrType) ToGooglePrivacyDlpV2LDiversityConfigResponsePtrOutput() GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2LDiversityConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2LDiversityConfigResponsePtrType) ToGooglePrivacyDlpV2LDiversityConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput)
}

// l-diversity metric, used for analysis of reidentification risk.
type GooglePrivacyDlpV2LDiversityConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LDiversityConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LDiversityConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LDiversityConfigResponseOutput) ToGooglePrivacyDlpV2LDiversityConfigResponseOutput() GooglePrivacyDlpV2LDiversityConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityConfigResponseOutput) ToGooglePrivacyDlpV2LDiversityConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityConfigResponseOutput) ToGooglePrivacyDlpV2LDiversityConfigResponsePtrOutput() GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2LDiversityConfigResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2LDiversityConfigResponseOutput) ToGooglePrivacyDlpV2LDiversityConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2LDiversityConfigResponse) *GooglePrivacyDlpV2LDiversityConfigResponse {
		return &v
	}).(GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput)
}

// Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.
func (o GooglePrivacyDlpV2LDiversityConfigResponseOutput) QuasiIds() GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LDiversityConfigResponse) []GooglePrivacyDlpV2FieldIdResponse {
		return v.QuasiIds
	}).(GooglePrivacyDlpV2FieldIdResponseArrayOutput)
}

// Sensitive field for computing the l-value.
func (o GooglePrivacyDlpV2LDiversityConfigResponseOutput) SensitiveAttribute() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LDiversityConfigResponse) GooglePrivacyDlpV2FieldIdResponse {
		return v.SensitiveAttribute
	}).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

type GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LDiversityConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput) ToGooglePrivacyDlpV2LDiversityConfigResponsePtrOutput() GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput) ToGooglePrivacyDlpV2LDiversityConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput) Elem() GooglePrivacyDlpV2LDiversityConfigResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LDiversityConfigResponse) GooglePrivacyDlpV2LDiversityConfigResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2LDiversityConfigResponse
		return ret
	}).(GooglePrivacyDlpV2LDiversityConfigResponseOutput)
}

// Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.
func (o GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput) QuasiIds() GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LDiversityConfigResponse) []GooglePrivacyDlpV2FieldIdResponse {
		if v == nil {
			return nil
		}
		return v.QuasiIds
	}).(GooglePrivacyDlpV2FieldIdResponseArrayOutput)
}

// Sensitive field for computing the l-value.
func (o GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput) SensitiveAttribute() GooglePrivacyDlpV2FieldIdResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LDiversityConfigResponse) *GooglePrivacyDlpV2FieldIdResponse {
		if v == nil {
			return nil
		}
		return &v.SensitiveAttribute
	}).(GooglePrivacyDlpV2FieldIdResponsePtrOutput)
}

// The set of columns' values that share the same ldiversity value.
type GooglePrivacyDlpV2LDiversityEquivalenceClassResponse struct {
	// Size of the k-anonymity equivalence class.
	EquivalenceClassSize string `pulumi:"equivalenceClassSize"`
	// Number of distinct sensitive values in this equivalence class.
	NumDistinctSensitiveValues string `pulumi:"numDistinctSensitiveValues"`
	// Quasi-identifier values defining the k-anonymity equivalence class. The order is always the same as the original request.
	QuasiIdsValues []GooglePrivacyDlpV2ValueResponse `pulumi:"quasiIdsValues"`
	// Estimated frequencies of top sensitive values.
	TopSensitiveValues []GooglePrivacyDlpV2ValueFrequencyResponse `pulumi:"topSensitiveValues"`
}

// GooglePrivacyDlpV2LDiversityEquivalenceClassResponseInput is an input type that accepts GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArgs and GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LDiversityEquivalenceClassResponseInput` via:
//
//          GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArgs{...}
type GooglePrivacyDlpV2LDiversityEquivalenceClassResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput() GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput
	ToGooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutputWithContext(context.Context) GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput
}

// The set of columns' values that share the same ldiversity value.
type GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArgs struct {
	// Size of the k-anonymity equivalence class.
	EquivalenceClassSize pulumi.StringInput `pulumi:"equivalenceClassSize"`
	// Number of distinct sensitive values in this equivalence class.
	NumDistinctSensitiveValues pulumi.StringInput `pulumi:"numDistinctSensitiveValues"`
	// Quasi-identifier values defining the k-anonymity equivalence class. The order is always the same as the original request.
	QuasiIdsValues GooglePrivacyDlpV2ValueResponseArrayInput `pulumi:"quasiIdsValues"`
	// Estimated frequencies of top sensitive values.
	TopSensitiveValues GooglePrivacyDlpV2ValueFrequencyResponseArrayInput `pulumi:"topSensitiveValues"`
}

func (GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LDiversityEquivalenceClassResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArgs) ToGooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput() GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput {
	return i.ToGooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArgs) ToGooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput)
}

// GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayInput is an input type that accepts GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArray and GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayInput` via:
//
//          GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArray{ GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArgs{...} }
type GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput() GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput
	ToGooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput
}

type GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArray []GooglePrivacyDlpV2LDiversityEquivalenceClassResponseInput

func (GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2LDiversityEquivalenceClassResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArray) ToGooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput() GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArray) ToGooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput)
}

// The set of columns' values that share the same ldiversity value.
type GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LDiversityEquivalenceClassResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput) ToGooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput() GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput) ToGooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput {
	return o
}

// Size of the k-anonymity equivalence class.
func (o GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput) EquivalenceClassSize() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LDiversityEquivalenceClassResponse) string { return v.EquivalenceClassSize }).(pulumi.StringOutput)
}

// Number of distinct sensitive values in this equivalence class.
func (o GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput) NumDistinctSensitiveValues() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LDiversityEquivalenceClassResponse) string {
		return v.NumDistinctSensitiveValues
	}).(pulumi.StringOutput)
}

// Quasi-identifier values defining the k-anonymity equivalence class. The order is always the same as the original request.
func (o GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput) QuasiIdsValues() GooglePrivacyDlpV2ValueResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LDiversityEquivalenceClassResponse) []GooglePrivacyDlpV2ValueResponse {
		return v.QuasiIdsValues
	}).(GooglePrivacyDlpV2ValueResponseArrayOutput)
}

// Estimated frequencies of top sensitive values.
func (o GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput) TopSensitiveValues() GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LDiversityEquivalenceClassResponse) []GooglePrivacyDlpV2ValueFrequencyResponse {
		return v.TopSensitiveValues
	}).(GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput)
}

type GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2LDiversityEquivalenceClassResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput) ToGooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput() GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput) ToGooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2LDiversityEquivalenceClassResponse {
		return vs[0].([]GooglePrivacyDlpV2LDiversityEquivalenceClassResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput)
}

// Histogram of l-diversity equivalence class sensitive value frequencies.
type GooglePrivacyDlpV2LDiversityHistogramBucketResponse struct {
	// Total number of equivalence classes in this bucket.
	BucketSize string `pulumi:"bucketSize"`
	// Total number of distinct equivalence classes in this bucket.
	BucketValueCount string `pulumi:"bucketValueCount"`
	// Sample of equivalence classes in this bucket. The total number of classes returned per bucket is capped at 20.
	BucketValues []GooglePrivacyDlpV2LDiversityEquivalenceClassResponse `pulumi:"bucketValues"`
	// Lower bound on the sensitive value frequencies of the equivalence classes in this bucket.
	SensitiveValueFrequencyLowerBound string `pulumi:"sensitiveValueFrequencyLowerBound"`
	// Upper bound on the sensitive value frequencies of the equivalence classes in this bucket.
	SensitiveValueFrequencyUpperBound string `pulumi:"sensitiveValueFrequencyUpperBound"`
}

// GooglePrivacyDlpV2LDiversityHistogramBucketResponseInput is an input type that accepts GooglePrivacyDlpV2LDiversityHistogramBucketResponseArgs and GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LDiversityHistogramBucketResponseInput` via:
//
//          GooglePrivacyDlpV2LDiversityHistogramBucketResponseArgs{...}
type GooglePrivacyDlpV2LDiversityHistogramBucketResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput() GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput
	ToGooglePrivacyDlpV2LDiversityHistogramBucketResponseOutputWithContext(context.Context) GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput
}

// Histogram of l-diversity equivalence class sensitive value frequencies.
type GooglePrivacyDlpV2LDiversityHistogramBucketResponseArgs struct {
	// Total number of equivalence classes in this bucket.
	BucketSize pulumi.StringInput `pulumi:"bucketSize"`
	// Total number of distinct equivalence classes in this bucket.
	BucketValueCount pulumi.StringInput `pulumi:"bucketValueCount"`
	// Sample of equivalence classes in this bucket. The total number of classes returned per bucket is capped at 20.
	BucketValues GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayInput `pulumi:"bucketValues"`
	// Lower bound on the sensitive value frequencies of the equivalence classes in this bucket.
	SensitiveValueFrequencyLowerBound pulumi.StringInput `pulumi:"sensitiveValueFrequencyLowerBound"`
	// Upper bound on the sensitive value frequencies of the equivalence classes in this bucket.
	SensitiveValueFrequencyUpperBound pulumi.StringInput `pulumi:"sensitiveValueFrequencyUpperBound"`
}

func (GooglePrivacyDlpV2LDiversityHistogramBucketResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LDiversityHistogramBucketResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2LDiversityHistogramBucketResponseArgs) ToGooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput() GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput {
	return i.ToGooglePrivacyDlpV2LDiversityHistogramBucketResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LDiversityHistogramBucketResponseArgs) ToGooglePrivacyDlpV2LDiversityHistogramBucketResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput)
}

// GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayInput is an input type that accepts GooglePrivacyDlpV2LDiversityHistogramBucketResponseArray and GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayInput` via:
//
//          GooglePrivacyDlpV2LDiversityHistogramBucketResponseArray{ GooglePrivacyDlpV2LDiversityHistogramBucketResponseArgs{...} }
type GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput
	ToGooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput
}

type GooglePrivacyDlpV2LDiversityHistogramBucketResponseArray []GooglePrivacyDlpV2LDiversityHistogramBucketResponseInput

func (GooglePrivacyDlpV2LDiversityHistogramBucketResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2LDiversityHistogramBucketResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2LDiversityHistogramBucketResponseArray) ToGooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LDiversityHistogramBucketResponseArray) ToGooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput)
}

// Histogram of l-diversity equivalence class sensitive value frequencies.
type GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LDiversityHistogramBucketResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput) ToGooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput() GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput) ToGooglePrivacyDlpV2LDiversityHistogramBucketResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput {
	return o
}

// Total number of equivalence classes in this bucket.
func (o GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput) BucketSize() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LDiversityHistogramBucketResponse) string { return v.BucketSize }).(pulumi.StringOutput)
}

// Total number of distinct equivalence classes in this bucket.
func (o GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput) BucketValueCount() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LDiversityHistogramBucketResponse) string { return v.BucketValueCount }).(pulumi.StringOutput)
}

// Sample of equivalence classes in this bucket. The total number of classes returned per bucket is capped at 20.
func (o GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput) BucketValues() GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LDiversityHistogramBucketResponse) []GooglePrivacyDlpV2LDiversityEquivalenceClassResponse {
		return v.BucketValues
	}).(GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput)
}

// Lower bound on the sensitive value frequencies of the equivalence classes in this bucket.
func (o GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput) SensitiveValueFrequencyLowerBound() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LDiversityHistogramBucketResponse) string {
		return v.SensitiveValueFrequencyLowerBound
	}).(pulumi.StringOutput)
}

// Upper bound on the sensitive value frequencies of the equivalence classes in this bucket.
func (o GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput) SensitiveValueFrequencyUpperBound() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LDiversityHistogramBucketResponse) string {
		return v.SensitiveValueFrequencyUpperBound
	}).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2LDiversityHistogramBucketResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput) ToGooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput() GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput) ToGooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2LDiversityHistogramBucketResponse {
		return vs[0].([]GooglePrivacyDlpV2LDiversityHistogramBucketResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput)
}

// Result of the l-diversity computation.
type GooglePrivacyDlpV2LDiversityResultResponse struct {
	// Histogram of l-diversity equivalence class sensitive value frequencies.
	SensitiveValueFrequencyHistogramBuckets []GooglePrivacyDlpV2LDiversityHistogramBucketResponse `pulumi:"sensitiveValueFrequencyHistogramBuckets"`
}

// GooglePrivacyDlpV2LDiversityResultResponseInput is an input type that accepts GooglePrivacyDlpV2LDiversityResultResponseArgs and GooglePrivacyDlpV2LDiversityResultResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LDiversityResultResponseInput` via:
//
//          GooglePrivacyDlpV2LDiversityResultResponseArgs{...}
type GooglePrivacyDlpV2LDiversityResultResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LDiversityResultResponseOutput() GooglePrivacyDlpV2LDiversityResultResponseOutput
	ToGooglePrivacyDlpV2LDiversityResultResponseOutputWithContext(context.Context) GooglePrivacyDlpV2LDiversityResultResponseOutput
}

// Result of the l-diversity computation.
type GooglePrivacyDlpV2LDiversityResultResponseArgs struct {
	// Histogram of l-diversity equivalence class sensitive value frequencies.
	SensitiveValueFrequencyHistogramBuckets GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayInput `pulumi:"sensitiveValueFrequencyHistogramBuckets"`
}

func (GooglePrivacyDlpV2LDiversityResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LDiversityResultResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2LDiversityResultResponseArgs) ToGooglePrivacyDlpV2LDiversityResultResponseOutput() GooglePrivacyDlpV2LDiversityResultResponseOutput {
	return i.ToGooglePrivacyDlpV2LDiversityResultResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LDiversityResultResponseArgs) ToGooglePrivacyDlpV2LDiversityResultResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LDiversityResultResponseOutput)
}

func (i GooglePrivacyDlpV2LDiversityResultResponseArgs) ToGooglePrivacyDlpV2LDiversityResultResponsePtrOutput() GooglePrivacyDlpV2LDiversityResultResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2LDiversityResultResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LDiversityResultResponseArgs) ToGooglePrivacyDlpV2LDiversityResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LDiversityResultResponseOutput).ToGooglePrivacyDlpV2LDiversityResultResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2LDiversityResultResponsePtrInput is an input type that accepts GooglePrivacyDlpV2LDiversityResultResponseArgs, GooglePrivacyDlpV2LDiversityResultResponsePtr and GooglePrivacyDlpV2LDiversityResultResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LDiversityResultResponsePtrInput` via:
//
//          GooglePrivacyDlpV2LDiversityResultResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2LDiversityResultResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LDiversityResultResponsePtrOutput() GooglePrivacyDlpV2LDiversityResultResponsePtrOutput
	ToGooglePrivacyDlpV2LDiversityResultResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2LDiversityResultResponsePtrOutput
}

type googlePrivacyDlpV2LDiversityResultResponsePtrType GooglePrivacyDlpV2LDiversityResultResponseArgs

func GooglePrivacyDlpV2LDiversityResultResponsePtr(v *GooglePrivacyDlpV2LDiversityResultResponseArgs) GooglePrivacyDlpV2LDiversityResultResponsePtrInput {
	return (*googlePrivacyDlpV2LDiversityResultResponsePtrType)(v)
}

func (*googlePrivacyDlpV2LDiversityResultResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LDiversityResultResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2LDiversityResultResponsePtrType) ToGooglePrivacyDlpV2LDiversityResultResponsePtrOutput() GooglePrivacyDlpV2LDiversityResultResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2LDiversityResultResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2LDiversityResultResponsePtrType) ToGooglePrivacyDlpV2LDiversityResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LDiversityResultResponsePtrOutput)
}

// Result of the l-diversity computation.
type GooglePrivacyDlpV2LDiversityResultResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LDiversityResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LDiversityResultResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LDiversityResultResponseOutput) ToGooglePrivacyDlpV2LDiversityResultResponseOutput() GooglePrivacyDlpV2LDiversityResultResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityResultResponseOutput) ToGooglePrivacyDlpV2LDiversityResultResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityResultResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityResultResponseOutput) ToGooglePrivacyDlpV2LDiversityResultResponsePtrOutput() GooglePrivacyDlpV2LDiversityResultResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2LDiversityResultResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2LDiversityResultResponseOutput) ToGooglePrivacyDlpV2LDiversityResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityResultResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2LDiversityResultResponse) *GooglePrivacyDlpV2LDiversityResultResponse {
		return &v
	}).(GooglePrivacyDlpV2LDiversityResultResponsePtrOutput)
}

// Histogram of l-diversity equivalence class sensitive value frequencies.
func (o GooglePrivacyDlpV2LDiversityResultResponseOutput) SensitiveValueFrequencyHistogramBuckets() GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LDiversityResultResponse) []GooglePrivacyDlpV2LDiversityHistogramBucketResponse {
		return v.SensitiveValueFrequencyHistogramBuckets
	}).(GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput)
}

type GooglePrivacyDlpV2LDiversityResultResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LDiversityResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LDiversityResultResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LDiversityResultResponsePtrOutput) ToGooglePrivacyDlpV2LDiversityResultResponsePtrOutput() GooglePrivacyDlpV2LDiversityResultResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityResultResponsePtrOutput) ToGooglePrivacyDlpV2LDiversityResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LDiversityResultResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LDiversityResultResponsePtrOutput) Elem() GooglePrivacyDlpV2LDiversityResultResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LDiversityResultResponse) GooglePrivacyDlpV2LDiversityResultResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2LDiversityResultResponse
		return ret
	}).(GooglePrivacyDlpV2LDiversityResultResponseOutput)
}

// Histogram of l-diversity equivalence class sensitive value frequencies.
func (o GooglePrivacyDlpV2LDiversityResultResponsePtrOutput) SensitiveValueFrequencyHistogramBuckets() GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LDiversityResultResponse) []GooglePrivacyDlpV2LDiversityHistogramBucketResponse {
		if v == nil {
			return nil
		}
		return v.SensitiveValueFrequencyHistogramBuckets
	}).(GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput)
}

// Configuration for a custom dictionary created from a data source of any size up to the maximum size defined in the [limits](https://cloud.google.com/dlp/limits) page. The artifacts of dictionary creation are stored in the specified Google Cloud Storage location. Consider using `CustomInfoType.Dictionary` for smaller dictionaries that satisfy the size requirements.
type GooglePrivacyDlpV2LargeCustomDictionaryConfig struct {
	// Field in a BigQuery table where each cell represents a dictionary phrase.
	BigQueryField *GooglePrivacyDlpV2BigQueryField `pulumi:"bigQueryField"`
	// Set of files containing newline-delimited lists of dictionary phrases.
	CloudStorageFileSet *GooglePrivacyDlpV2CloudStorageFileSet `pulumi:"cloudStorageFileSet"`
	// Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used.
	OutputPath *GooglePrivacyDlpV2CloudStoragePath `pulumi:"outputPath"`
}

// GooglePrivacyDlpV2LargeCustomDictionaryConfigInput is an input type that accepts GooglePrivacyDlpV2LargeCustomDictionaryConfigArgs and GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LargeCustomDictionaryConfigInput` via:
//
//          GooglePrivacyDlpV2LargeCustomDictionaryConfigArgs{...}
type GooglePrivacyDlpV2LargeCustomDictionaryConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LargeCustomDictionaryConfigOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput
	ToGooglePrivacyDlpV2LargeCustomDictionaryConfigOutputWithContext(context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput
}

// Configuration for a custom dictionary created from a data source of any size up to the maximum size defined in the [limits](https://cloud.google.com/dlp/limits) page. The artifacts of dictionary creation are stored in the specified Google Cloud Storage location. Consider using `CustomInfoType.Dictionary` for smaller dictionaries that satisfy the size requirements.
type GooglePrivacyDlpV2LargeCustomDictionaryConfigArgs struct {
	// Field in a BigQuery table where each cell represents a dictionary phrase.
	BigQueryField GooglePrivacyDlpV2BigQueryFieldPtrInput `pulumi:"bigQueryField"`
	// Set of files containing newline-delimited lists of dictionary phrases.
	CloudStorageFileSet GooglePrivacyDlpV2CloudStorageFileSetPtrInput `pulumi:"cloudStorageFileSet"`
	// Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used.
	OutputPath GooglePrivacyDlpV2CloudStoragePathPtrInput `pulumi:"outputPath"`
}

func (GooglePrivacyDlpV2LargeCustomDictionaryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LargeCustomDictionaryConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2LargeCustomDictionaryConfigArgs) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput {
	return i.ToGooglePrivacyDlpV2LargeCustomDictionaryConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LargeCustomDictionaryConfigArgs) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput)
}

func (i GooglePrivacyDlpV2LargeCustomDictionaryConfigArgs) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LargeCustomDictionaryConfigArgs) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput).ToGooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrInput is an input type that accepts GooglePrivacyDlpV2LargeCustomDictionaryConfigArgs, GooglePrivacyDlpV2LargeCustomDictionaryConfigPtr and GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrInput` via:
//
//          GooglePrivacyDlpV2LargeCustomDictionaryConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput
	ToGooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput
}

type googlePrivacyDlpV2LargeCustomDictionaryConfigPtrType GooglePrivacyDlpV2LargeCustomDictionaryConfigArgs

func GooglePrivacyDlpV2LargeCustomDictionaryConfigPtr(v *GooglePrivacyDlpV2LargeCustomDictionaryConfigArgs) GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrInput {
	return (*googlePrivacyDlpV2LargeCustomDictionaryConfigPtrType)(v)
}

func (*googlePrivacyDlpV2LargeCustomDictionaryConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LargeCustomDictionaryConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2LargeCustomDictionaryConfigPtrType) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2LargeCustomDictionaryConfigPtrType) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput)
}

// Configuration for a custom dictionary created from a data source of any size up to the maximum size defined in the [limits](https://cloud.google.com/dlp/limits) page. The artifacts of dictionary creation are stored in the specified Google Cloud Storage location. Consider using `CustomInfoType.Dictionary` for smaller dictionaries that satisfy the size requirements.
type GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LargeCustomDictionaryConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2LargeCustomDictionaryConfig) *GooglePrivacyDlpV2LargeCustomDictionaryConfig {
		return &v
	}).(GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput)
}

// Field in a BigQuery table where each cell represents a dictionary phrase.
func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput) BigQueryField() GooglePrivacyDlpV2BigQueryFieldPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LargeCustomDictionaryConfig) *GooglePrivacyDlpV2BigQueryField {
		return v.BigQueryField
	}).(GooglePrivacyDlpV2BigQueryFieldPtrOutput)
}

// Set of files containing newline-delimited lists of dictionary phrases.
func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput) CloudStorageFileSet() GooglePrivacyDlpV2CloudStorageFileSetPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LargeCustomDictionaryConfig) *GooglePrivacyDlpV2CloudStorageFileSet {
		return v.CloudStorageFileSet
	}).(GooglePrivacyDlpV2CloudStorageFileSetPtrOutput)
}

// Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used.
func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput) OutputPath() GooglePrivacyDlpV2CloudStoragePathPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LargeCustomDictionaryConfig) *GooglePrivacyDlpV2CloudStoragePath {
		return v.OutputPath
	}).(GooglePrivacyDlpV2CloudStoragePathPtrOutput)
}

type GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LargeCustomDictionaryConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput) Elem() GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LargeCustomDictionaryConfig) GooglePrivacyDlpV2LargeCustomDictionaryConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2LargeCustomDictionaryConfig
		return ret
	}).(GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput)
}

// Field in a BigQuery table where each cell represents a dictionary phrase.
func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput) BigQueryField() GooglePrivacyDlpV2BigQueryFieldPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LargeCustomDictionaryConfig) *GooglePrivacyDlpV2BigQueryField {
		if v == nil {
			return nil
		}
		return v.BigQueryField
	}).(GooglePrivacyDlpV2BigQueryFieldPtrOutput)
}

// Set of files containing newline-delimited lists of dictionary phrases.
func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput) CloudStorageFileSet() GooglePrivacyDlpV2CloudStorageFileSetPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LargeCustomDictionaryConfig) *GooglePrivacyDlpV2CloudStorageFileSet {
		if v == nil {
			return nil
		}
		return v.CloudStorageFileSet
	}).(GooglePrivacyDlpV2CloudStorageFileSetPtrOutput)
}

// Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used.
func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput) OutputPath() GooglePrivacyDlpV2CloudStoragePathPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LargeCustomDictionaryConfig) *GooglePrivacyDlpV2CloudStoragePath {
		if v == nil {
			return nil
		}
		return v.OutputPath
	}).(GooglePrivacyDlpV2CloudStoragePathPtrOutput)
}

// Configuration for a custom dictionary created from a data source of any size up to the maximum size defined in the [limits](https://cloud.google.com/dlp/limits) page. The artifacts of dictionary creation are stored in the specified Google Cloud Storage location. Consider using `CustomInfoType.Dictionary` for smaller dictionaries that satisfy the size requirements.
type GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse struct {
	// Field in a BigQuery table where each cell represents a dictionary phrase.
	BigQueryField GooglePrivacyDlpV2BigQueryFieldResponse `pulumi:"bigQueryField"`
	// Set of files containing newline-delimited lists of dictionary phrases.
	CloudStorageFileSet GooglePrivacyDlpV2CloudStorageFileSetResponse `pulumi:"cloudStorageFileSet"`
	// Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used.
	OutputPath GooglePrivacyDlpV2CloudStoragePathResponse `pulumi:"outputPath"`
}

// GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseInput is an input type that accepts GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseArgs and GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseInput` via:
//
//          GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseArgs{...}
type GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput
	ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput
}

// Configuration for a custom dictionary created from a data source of any size up to the maximum size defined in the [limits](https://cloud.google.com/dlp/limits) page. The artifacts of dictionary creation are stored in the specified Google Cloud Storage location. Consider using `CustomInfoType.Dictionary` for smaller dictionaries that satisfy the size requirements.
type GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseArgs struct {
	// Field in a BigQuery table where each cell represents a dictionary phrase.
	BigQueryField GooglePrivacyDlpV2BigQueryFieldResponseInput `pulumi:"bigQueryField"`
	// Set of files containing newline-delimited lists of dictionary phrases.
	CloudStorageFileSet GooglePrivacyDlpV2CloudStorageFileSetResponseInput `pulumi:"cloudStorageFileSet"`
	// Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used.
	OutputPath GooglePrivacyDlpV2CloudStoragePathResponseInput `pulumi:"outputPath"`
}

func (GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseArgs) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseArgs) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput)
}

func (i GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseArgs) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseArgs) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput).ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrInput is an input type that accepts GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseArgs, GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtr and GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrInput` via:
//
//          GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput
	ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput
}

type googlePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrType GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseArgs

func GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtr(v *GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseArgs) GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrInput {
	return (*googlePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrType)(v)
}

func (*googlePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrType) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrType) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput)
}

// Configuration for a custom dictionary created from a data source of any size up to the maximum size defined in the [limits](https://cloud.google.com/dlp/limits) page. The artifacts of dictionary creation are stored in the specified Google Cloud Storage location. Consider using `CustomInfoType.Dictionary` for smaller dictionaries that satisfy the size requirements.
type GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse) *GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse {
		return &v
	}).(GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput)
}

// Field in a BigQuery table where each cell represents a dictionary phrase.
func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput) BigQueryField() GooglePrivacyDlpV2BigQueryFieldResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse) GooglePrivacyDlpV2BigQueryFieldResponse {
		return v.BigQueryField
	}).(GooglePrivacyDlpV2BigQueryFieldResponseOutput)
}

// Set of files containing newline-delimited lists of dictionary phrases.
func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput) CloudStorageFileSet() GooglePrivacyDlpV2CloudStorageFileSetResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse) GooglePrivacyDlpV2CloudStorageFileSetResponse {
		return v.CloudStorageFileSet
	}).(GooglePrivacyDlpV2CloudStorageFileSetResponseOutput)
}

// Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used.
func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput) OutputPath() GooglePrivacyDlpV2CloudStoragePathResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse) GooglePrivacyDlpV2CloudStoragePathResponse {
		return v.OutputPath
	}).(GooglePrivacyDlpV2CloudStoragePathResponseOutput)
}

type GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput) Elem() GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse) GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse
		return ret
	}).(GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput)
}

// Field in a BigQuery table where each cell represents a dictionary phrase.
func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput) BigQueryField() GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse) *GooglePrivacyDlpV2BigQueryFieldResponse {
		if v == nil {
			return nil
		}
		return &v.BigQueryField
	}).(GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput)
}

// Set of files containing newline-delimited lists of dictionary phrases.
func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput) CloudStorageFileSet() GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse) *GooglePrivacyDlpV2CloudStorageFileSetResponse {
		if v == nil {
			return nil
		}
		return &v.CloudStorageFileSet
	}).(GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput)
}

// Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used.
func (o GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput) OutputPath() GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse) *GooglePrivacyDlpV2CloudStoragePathResponse {
		if v == nil {
			return nil
		}
		return &v.OutputPath
	}).(GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput)
}

// Summary statistics of a custom dictionary.
type GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse struct {
	// Approximate number of distinct phrases in the dictionary.
	ApproxNumPhrases string `pulumi:"approxNumPhrases"`
}

// GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseInput is an input type that accepts GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseArgs and GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseInput` via:
//
//          GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseArgs{...}
type GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput() GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput
	ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput
}

// Summary statistics of a custom dictionary.
type GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseArgs struct {
	// Approximate number of distinct phrases in the dictionary.
	ApproxNumPhrases pulumi.StringInput `pulumi:"approxNumPhrases"`
}

func (GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseArgs) ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput() GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput {
	return i.ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseArgs) ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput)
}

func (i GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseArgs) ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseArgs) ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput).ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseArgs, GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtr and GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput
	ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput
}

type googlePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrType GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseArgs

func GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtr(v *GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseArgs) GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrInput {
	return (*googlePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrType) ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrType) ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput)
}

// Summary statistics of a custom dictionary.
type GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput() GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse) *GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse {
		return &v
	}).(GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput)
}

// Approximate number of distinct phrases in the dictionary.
func (o GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput) ApproxNumPhrases() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse) string { return v.ApproxNumPhrases }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput() GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput) ToGooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput) Elem() GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse) GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse
		return ret
	}).(GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput)
}

// Approximate number of distinct phrases in the dictionary.
func (o GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput) ApproxNumPhrases() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ApproxNumPhrases
	}).(pulumi.StringPtrOutput)
}

// Skips the data without modifying it if the requested transformation would cause an error. For example, if a `DateShift` transformation were applied an an IP address, this mode would leave the IP address unchanged in the response.
type GooglePrivacyDlpV2LeaveUntransformed struct {
}

// GooglePrivacyDlpV2LeaveUntransformedInput is an input type that accepts GooglePrivacyDlpV2LeaveUntransformedArgs and GooglePrivacyDlpV2LeaveUntransformedOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LeaveUntransformedInput` via:
//
//          GooglePrivacyDlpV2LeaveUntransformedArgs{...}
type GooglePrivacyDlpV2LeaveUntransformedInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LeaveUntransformedOutput() GooglePrivacyDlpV2LeaveUntransformedOutput
	ToGooglePrivacyDlpV2LeaveUntransformedOutputWithContext(context.Context) GooglePrivacyDlpV2LeaveUntransformedOutput
}

// Skips the data without modifying it if the requested transformation would cause an error. For example, if a `DateShift` transformation were applied an an IP address, this mode would leave the IP address unchanged in the response.
type GooglePrivacyDlpV2LeaveUntransformedArgs struct {
}

func (GooglePrivacyDlpV2LeaveUntransformedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LeaveUntransformed)(nil)).Elem()
}

func (i GooglePrivacyDlpV2LeaveUntransformedArgs) ToGooglePrivacyDlpV2LeaveUntransformedOutput() GooglePrivacyDlpV2LeaveUntransformedOutput {
	return i.ToGooglePrivacyDlpV2LeaveUntransformedOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LeaveUntransformedArgs) ToGooglePrivacyDlpV2LeaveUntransformedOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LeaveUntransformedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LeaveUntransformedOutput)
}

func (i GooglePrivacyDlpV2LeaveUntransformedArgs) ToGooglePrivacyDlpV2LeaveUntransformedPtrOutput() GooglePrivacyDlpV2LeaveUntransformedPtrOutput {
	return i.ToGooglePrivacyDlpV2LeaveUntransformedPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LeaveUntransformedArgs) ToGooglePrivacyDlpV2LeaveUntransformedPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LeaveUntransformedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LeaveUntransformedOutput).ToGooglePrivacyDlpV2LeaveUntransformedPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2LeaveUntransformedPtrInput is an input type that accepts GooglePrivacyDlpV2LeaveUntransformedArgs, GooglePrivacyDlpV2LeaveUntransformedPtr and GooglePrivacyDlpV2LeaveUntransformedPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LeaveUntransformedPtrInput` via:
//
//          GooglePrivacyDlpV2LeaveUntransformedArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2LeaveUntransformedPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LeaveUntransformedPtrOutput() GooglePrivacyDlpV2LeaveUntransformedPtrOutput
	ToGooglePrivacyDlpV2LeaveUntransformedPtrOutputWithContext(context.Context) GooglePrivacyDlpV2LeaveUntransformedPtrOutput
}

type googlePrivacyDlpV2LeaveUntransformedPtrType GooglePrivacyDlpV2LeaveUntransformedArgs

func GooglePrivacyDlpV2LeaveUntransformedPtr(v *GooglePrivacyDlpV2LeaveUntransformedArgs) GooglePrivacyDlpV2LeaveUntransformedPtrInput {
	return (*googlePrivacyDlpV2LeaveUntransformedPtrType)(v)
}

func (*googlePrivacyDlpV2LeaveUntransformedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LeaveUntransformed)(nil)).Elem()
}

func (i *googlePrivacyDlpV2LeaveUntransformedPtrType) ToGooglePrivacyDlpV2LeaveUntransformedPtrOutput() GooglePrivacyDlpV2LeaveUntransformedPtrOutput {
	return i.ToGooglePrivacyDlpV2LeaveUntransformedPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2LeaveUntransformedPtrType) ToGooglePrivacyDlpV2LeaveUntransformedPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LeaveUntransformedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LeaveUntransformedPtrOutput)
}

// Skips the data without modifying it if the requested transformation would cause an error. For example, if a `DateShift` transformation were applied an an IP address, this mode would leave the IP address unchanged in the response.
type GooglePrivacyDlpV2LeaveUntransformedOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LeaveUntransformedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LeaveUntransformed)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LeaveUntransformedOutput) ToGooglePrivacyDlpV2LeaveUntransformedOutput() GooglePrivacyDlpV2LeaveUntransformedOutput {
	return o
}

func (o GooglePrivacyDlpV2LeaveUntransformedOutput) ToGooglePrivacyDlpV2LeaveUntransformedOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LeaveUntransformedOutput {
	return o
}

func (o GooglePrivacyDlpV2LeaveUntransformedOutput) ToGooglePrivacyDlpV2LeaveUntransformedPtrOutput() GooglePrivacyDlpV2LeaveUntransformedPtrOutput {
	return o.ToGooglePrivacyDlpV2LeaveUntransformedPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2LeaveUntransformedOutput) ToGooglePrivacyDlpV2LeaveUntransformedPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LeaveUntransformedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2LeaveUntransformed) *GooglePrivacyDlpV2LeaveUntransformed {
		return &v
	}).(GooglePrivacyDlpV2LeaveUntransformedPtrOutput)
}

type GooglePrivacyDlpV2LeaveUntransformedPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LeaveUntransformedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LeaveUntransformed)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LeaveUntransformedPtrOutput) ToGooglePrivacyDlpV2LeaveUntransformedPtrOutput() GooglePrivacyDlpV2LeaveUntransformedPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LeaveUntransformedPtrOutput) ToGooglePrivacyDlpV2LeaveUntransformedPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LeaveUntransformedPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LeaveUntransformedPtrOutput) Elem() GooglePrivacyDlpV2LeaveUntransformedOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LeaveUntransformed) GooglePrivacyDlpV2LeaveUntransformed {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2LeaveUntransformed
		return ret
	}).(GooglePrivacyDlpV2LeaveUntransformedOutput)
}

// Skips the data without modifying it if the requested transformation would cause an error. For example, if a `DateShift` transformation were applied an an IP address, this mode would leave the IP address unchanged in the response.
type GooglePrivacyDlpV2LeaveUntransformedResponse struct {
}

// GooglePrivacyDlpV2LeaveUntransformedResponseInput is an input type that accepts GooglePrivacyDlpV2LeaveUntransformedResponseArgs and GooglePrivacyDlpV2LeaveUntransformedResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LeaveUntransformedResponseInput` via:
//
//          GooglePrivacyDlpV2LeaveUntransformedResponseArgs{...}
type GooglePrivacyDlpV2LeaveUntransformedResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LeaveUntransformedResponseOutput() GooglePrivacyDlpV2LeaveUntransformedResponseOutput
	ToGooglePrivacyDlpV2LeaveUntransformedResponseOutputWithContext(context.Context) GooglePrivacyDlpV2LeaveUntransformedResponseOutput
}

// Skips the data without modifying it if the requested transformation would cause an error. For example, if a `DateShift` transformation were applied an an IP address, this mode would leave the IP address unchanged in the response.
type GooglePrivacyDlpV2LeaveUntransformedResponseArgs struct {
}

func (GooglePrivacyDlpV2LeaveUntransformedResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LeaveUntransformedResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2LeaveUntransformedResponseArgs) ToGooglePrivacyDlpV2LeaveUntransformedResponseOutput() GooglePrivacyDlpV2LeaveUntransformedResponseOutput {
	return i.ToGooglePrivacyDlpV2LeaveUntransformedResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LeaveUntransformedResponseArgs) ToGooglePrivacyDlpV2LeaveUntransformedResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LeaveUntransformedResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LeaveUntransformedResponseOutput)
}

func (i GooglePrivacyDlpV2LeaveUntransformedResponseArgs) ToGooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput() GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2LeaveUntransformedResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LeaveUntransformedResponseArgs) ToGooglePrivacyDlpV2LeaveUntransformedResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LeaveUntransformedResponseOutput).ToGooglePrivacyDlpV2LeaveUntransformedResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2LeaveUntransformedResponsePtrInput is an input type that accepts GooglePrivacyDlpV2LeaveUntransformedResponseArgs, GooglePrivacyDlpV2LeaveUntransformedResponsePtr and GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LeaveUntransformedResponsePtrInput` via:
//
//          GooglePrivacyDlpV2LeaveUntransformedResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2LeaveUntransformedResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput() GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput
	ToGooglePrivacyDlpV2LeaveUntransformedResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput
}

type googlePrivacyDlpV2LeaveUntransformedResponsePtrType GooglePrivacyDlpV2LeaveUntransformedResponseArgs

func GooglePrivacyDlpV2LeaveUntransformedResponsePtr(v *GooglePrivacyDlpV2LeaveUntransformedResponseArgs) GooglePrivacyDlpV2LeaveUntransformedResponsePtrInput {
	return (*googlePrivacyDlpV2LeaveUntransformedResponsePtrType)(v)
}

func (*googlePrivacyDlpV2LeaveUntransformedResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LeaveUntransformedResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2LeaveUntransformedResponsePtrType) ToGooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput() GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2LeaveUntransformedResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2LeaveUntransformedResponsePtrType) ToGooglePrivacyDlpV2LeaveUntransformedResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput)
}

// Skips the data without modifying it if the requested transformation would cause an error. For example, if a `DateShift` transformation were applied an an IP address, this mode would leave the IP address unchanged in the response.
type GooglePrivacyDlpV2LeaveUntransformedResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LeaveUntransformedResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LeaveUntransformedResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LeaveUntransformedResponseOutput) ToGooglePrivacyDlpV2LeaveUntransformedResponseOutput() GooglePrivacyDlpV2LeaveUntransformedResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2LeaveUntransformedResponseOutput) ToGooglePrivacyDlpV2LeaveUntransformedResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LeaveUntransformedResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2LeaveUntransformedResponseOutput) ToGooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput() GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2LeaveUntransformedResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2LeaveUntransformedResponseOutput) ToGooglePrivacyDlpV2LeaveUntransformedResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2LeaveUntransformedResponse) *GooglePrivacyDlpV2LeaveUntransformedResponse {
		return &v
	}).(GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput)
}

type GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LeaveUntransformedResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput) ToGooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput() GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput) ToGooglePrivacyDlpV2LeaveUntransformedResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput) Elem() GooglePrivacyDlpV2LeaveUntransformedResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LeaveUntransformedResponse) GooglePrivacyDlpV2LeaveUntransformedResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2LeaveUntransformedResponse
		return ret
	}).(GooglePrivacyDlpV2LeaveUntransformedResponseOutput)
}

// Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.
type GooglePrivacyDlpV2LikelihoodAdjustment struct {
	// Set the likelihood of a finding to a fixed value.
	FixedLikelihood *GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood `pulumi:"fixedLikelihood"`
	// Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
	RelativeLikelihood *int `pulumi:"relativeLikelihood"`
}

// GooglePrivacyDlpV2LikelihoodAdjustmentInput is an input type that accepts GooglePrivacyDlpV2LikelihoodAdjustmentArgs and GooglePrivacyDlpV2LikelihoodAdjustmentOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LikelihoodAdjustmentInput` via:
//
//          GooglePrivacyDlpV2LikelihoodAdjustmentArgs{...}
type GooglePrivacyDlpV2LikelihoodAdjustmentInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LikelihoodAdjustmentOutput() GooglePrivacyDlpV2LikelihoodAdjustmentOutput
	ToGooglePrivacyDlpV2LikelihoodAdjustmentOutputWithContext(context.Context) GooglePrivacyDlpV2LikelihoodAdjustmentOutput
}

// Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.
type GooglePrivacyDlpV2LikelihoodAdjustmentArgs struct {
	// Set the likelihood of a finding to a fixed value.
	FixedLikelihood GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodPtrInput `pulumi:"fixedLikelihood"`
	// Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
	RelativeLikelihood pulumi.IntPtrInput `pulumi:"relativeLikelihood"`
}

func (GooglePrivacyDlpV2LikelihoodAdjustmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LikelihoodAdjustment)(nil)).Elem()
}

func (i GooglePrivacyDlpV2LikelihoodAdjustmentArgs) ToGooglePrivacyDlpV2LikelihoodAdjustmentOutput() GooglePrivacyDlpV2LikelihoodAdjustmentOutput {
	return i.ToGooglePrivacyDlpV2LikelihoodAdjustmentOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LikelihoodAdjustmentArgs) ToGooglePrivacyDlpV2LikelihoodAdjustmentOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LikelihoodAdjustmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LikelihoodAdjustmentOutput)
}

func (i GooglePrivacyDlpV2LikelihoodAdjustmentArgs) ToGooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput() GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput {
	return i.ToGooglePrivacyDlpV2LikelihoodAdjustmentPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LikelihoodAdjustmentArgs) ToGooglePrivacyDlpV2LikelihoodAdjustmentPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LikelihoodAdjustmentOutput).ToGooglePrivacyDlpV2LikelihoodAdjustmentPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2LikelihoodAdjustmentPtrInput is an input type that accepts GooglePrivacyDlpV2LikelihoodAdjustmentArgs, GooglePrivacyDlpV2LikelihoodAdjustmentPtr and GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LikelihoodAdjustmentPtrInput` via:
//
//          GooglePrivacyDlpV2LikelihoodAdjustmentArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2LikelihoodAdjustmentPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput() GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput
	ToGooglePrivacyDlpV2LikelihoodAdjustmentPtrOutputWithContext(context.Context) GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput
}

type googlePrivacyDlpV2LikelihoodAdjustmentPtrType GooglePrivacyDlpV2LikelihoodAdjustmentArgs

func GooglePrivacyDlpV2LikelihoodAdjustmentPtr(v *GooglePrivacyDlpV2LikelihoodAdjustmentArgs) GooglePrivacyDlpV2LikelihoodAdjustmentPtrInput {
	return (*googlePrivacyDlpV2LikelihoodAdjustmentPtrType)(v)
}

func (*googlePrivacyDlpV2LikelihoodAdjustmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LikelihoodAdjustment)(nil)).Elem()
}

func (i *googlePrivacyDlpV2LikelihoodAdjustmentPtrType) ToGooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput() GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput {
	return i.ToGooglePrivacyDlpV2LikelihoodAdjustmentPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2LikelihoodAdjustmentPtrType) ToGooglePrivacyDlpV2LikelihoodAdjustmentPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput)
}

// Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.
type GooglePrivacyDlpV2LikelihoodAdjustmentOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LikelihoodAdjustmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LikelihoodAdjustment)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LikelihoodAdjustmentOutput) ToGooglePrivacyDlpV2LikelihoodAdjustmentOutput() GooglePrivacyDlpV2LikelihoodAdjustmentOutput {
	return o
}

func (o GooglePrivacyDlpV2LikelihoodAdjustmentOutput) ToGooglePrivacyDlpV2LikelihoodAdjustmentOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LikelihoodAdjustmentOutput {
	return o
}

func (o GooglePrivacyDlpV2LikelihoodAdjustmentOutput) ToGooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput() GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput {
	return o.ToGooglePrivacyDlpV2LikelihoodAdjustmentPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2LikelihoodAdjustmentOutput) ToGooglePrivacyDlpV2LikelihoodAdjustmentPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2LikelihoodAdjustment) *GooglePrivacyDlpV2LikelihoodAdjustment {
		return &v
	}).(GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput)
}

// Set the likelihood of a finding to a fixed value.
func (o GooglePrivacyDlpV2LikelihoodAdjustmentOutput) FixedLikelihood() GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LikelihoodAdjustment) *GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood {
		return v.FixedLikelihood
	}).(GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodPtrOutput)
}

// Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
func (o GooglePrivacyDlpV2LikelihoodAdjustmentOutput) RelativeLikelihood() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LikelihoodAdjustment) *int { return v.RelativeLikelihood }).(pulumi.IntPtrOutput)
}

type GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2LikelihoodAdjustment)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput) ToGooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput() GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput) ToGooglePrivacyDlpV2LikelihoodAdjustmentPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput) Elem() GooglePrivacyDlpV2LikelihoodAdjustmentOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LikelihoodAdjustment) GooglePrivacyDlpV2LikelihoodAdjustment {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2LikelihoodAdjustment
		return ret
	}).(GooglePrivacyDlpV2LikelihoodAdjustmentOutput)
}

// Set the likelihood of a finding to a fixed value.
func (o GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput) FixedLikelihood() GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LikelihoodAdjustment) *GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood {
		if v == nil {
			return nil
		}
		return v.FixedLikelihood
	}).(GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodPtrOutput)
}

// Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
func (o GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput) RelativeLikelihood() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2LikelihoodAdjustment) *int {
		if v == nil {
			return nil
		}
		return v.RelativeLikelihood
	}).(pulumi.IntPtrOutput)
}

// Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.
type GooglePrivacyDlpV2LikelihoodAdjustmentResponse struct {
	// Set the likelihood of a finding to a fixed value.
	FixedLikelihood string `pulumi:"fixedLikelihood"`
	// Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
	RelativeLikelihood int `pulumi:"relativeLikelihood"`
}

// GooglePrivacyDlpV2LikelihoodAdjustmentResponseInput is an input type that accepts GooglePrivacyDlpV2LikelihoodAdjustmentResponseArgs and GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2LikelihoodAdjustmentResponseInput` via:
//
//          GooglePrivacyDlpV2LikelihoodAdjustmentResponseArgs{...}
type GooglePrivacyDlpV2LikelihoodAdjustmentResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput() GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput
	ToGooglePrivacyDlpV2LikelihoodAdjustmentResponseOutputWithContext(context.Context) GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput
}

// Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.
type GooglePrivacyDlpV2LikelihoodAdjustmentResponseArgs struct {
	// Set the likelihood of a finding to a fixed value.
	FixedLikelihood pulumi.StringInput `pulumi:"fixedLikelihood"`
	// Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
	RelativeLikelihood pulumi.IntInput `pulumi:"relativeLikelihood"`
}

func (GooglePrivacyDlpV2LikelihoodAdjustmentResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LikelihoodAdjustmentResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2LikelihoodAdjustmentResponseArgs) ToGooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput() GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput {
	return i.ToGooglePrivacyDlpV2LikelihoodAdjustmentResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2LikelihoodAdjustmentResponseArgs) ToGooglePrivacyDlpV2LikelihoodAdjustmentResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput)
}

// Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.
type GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2LikelihoodAdjustmentResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput) ToGooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput() GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput) ToGooglePrivacyDlpV2LikelihoodAdjustmentResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput {
	return o
}

// Set the likelihood of a finding to a fixed value.
func (o GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput) FixedLikelihood() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LikelihoodAdjustmentResponse) string { return v.FixedLikelihood }).(pulumi.StringOutput)
}

// Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
func (o GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput) RelativeLikelihood() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2LikelihoodAdjustmentResponse) int { return v.RelativeLikelihood }).(pulumi.IntOutput)
}

// Job trigger option for hybrid jobs. Jobs must be manually created and finished.
type GooglePrivacyDlpV2Manual struct {
}

// GooglePrivacyDlpV2ManualInput is an input type that accepts GooglePrivacyDlpV2ManualArgs and GooglePrivacyDlpV2ManualOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ManualInput` via:
//
//          GooglePrivacyDlpV2ManualArgs{...}
type GooglePrivacyDlpV2ManualInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ManualOutput() GooglePrivacyDlpV2ManualOutput
	ToGooglePrivacyDlpV2ManualOutputWithContext(context.Context) GooglePrivacyDlpV2ManualOutput
}

// Job trigger option for hybrid jobs. Jobs must be manually created and finished.
type GooglePrivacyDlpV2ManualArgs struct {
}

func (GooglePrivacyDlpV2ManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Manual)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ManualArgs) ToGooglePrivacyDlpV2ManualOutput() GooglePrivacyDlpV2ManualOutput {
	return i.ToGooglePrivacyDlpV2ManualOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ManualArgs) ToGooglePrivacyDlpV2ManualOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ManualOutput)
}

func (i GooglePrivacyDlpV2ManualArgs) ToGooglePrivacyDlpV2ManualPtrOutput() GooglePrivacyDlpV2ManualPtrOutput {
	return i.ToGooglePrivacyDlpV2ManualPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ManualArgs) ToGooglePrivacyDlpV2ManualPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ManualOutput).ToGooglePrivacyDlpV2ManualPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2ManualPtrInput is an input type that accepts GooglePrivacyDlpV2ManualArgs, GooglePrivacyDlpV2ManualPtr and GooglePrivacyDlpV2ManualPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ManualPtrInput` via:
//
//          GooglePrivacyDlpV2ManualArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2ManualPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ManualPtrOutput() GooglePrivacyDlpV2ManualPtrOutput
	ToGooglePrivacyDlpV2ManualPtrOutputWithContext(context.Context) GooglePrivacyDlpV2ManualPtrOutput
}

type googlePrivacyDlpV2ManualPtrType GooglePrivacyDlpV2ManualArgs

func GooglePrivacyDlpV2ManualPtr(v *GooglePrivacyDlpV2ManualArgs) GooglePrivacyDlpV2ManualPtrInput {
	return (*googlePrivacyDlpV2ManualPtrType)(v)
}

func (*googlePrivacyDlpV2ManualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Manual)(nil)).Elem()
}

func (i *googlePrivacyDlpV2ManualPtrType) ToGooglePrivacyDlpV2ManualPtrOutput() GooglePrivacyDlpV2ManualPtrOutput {
	return i.ToGooglePrivacyDlpV2ManualPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2ManualPtrType) ToGooglePrivacyDlpV2ManualPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ManualPtrOutput)
}

// Job trigger option for hybrid jobs. Jobs must be manually created and finished.
type GooglePrivacyDlpV2ManualOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Manual)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ManualOutput) ToGooglePrivacyDlpV2ManualOutput() GooglePrivacyDlpV2ManualOutput {
	return o
}

func (o GooglePrivacyDlpV2ManualOutput) ToGooglePrivacyDlpV2ManualOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ManualOutput {
	return o
}

func (o GooglePrivacyDlpV2ManualOutput) ToGooglePrivacyDlpV2ManualPtrOutput() GooglePrivacyDlpV2ManualPtrOutput {
	return o.ToGooglePrivacyDlpV2ManualPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2ManualOutput) ToGooglePrivacyDlpV2ManualPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ManualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2Manual) *GooglePrivacyDlpV2Manual {
		return &v
	}).(GooglePrivacyDlpV2ManualPtrOutput)
}

type GooglePrivacyDlpV2ManualPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ManualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Manual)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ManualPtrOutput) ToGooglePrivacyDlpV2ManualPtrOutput() GooglePrivacyDlpV2ManualPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ManualPtrOutput) ToGooglePrivacyDlpV2ManualPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ManualPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ManualPtrOutput) Elem() GooglePrivacyDlpV2ManualOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Manual) GooglePrivacyDlpV2Manual {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2Manual
		return ret
	}).(GooglePrivacyDlpV2ManualOutput)
}

// Job trigger option for hybrid jobs. Jobs must be manually created and finished.
type GooglePrivacyDlpV2ManualResponse struct {
}

// GooglePrivacyDlpV2ManualResponseInput is an input type that accepts GooglePrivacyDlpV2ManualResponseArgs and GooglePrivacyDlpV2ManualResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ManualResponseInput` via:
//
//          GooglePrivacyDlpV2ManualResponseArgs{...}
type GooglePrivacyDlpV2ManualResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ManualResponseOutput() GooglePrivacyDlpV2ManualResponseOutput
	ToGooglePrivacyDlpV2ManualResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ManualResponseOutput
}

// Job trigger option for hybrid jobs. Jobs must be manually created and finished.
type GooglePrivacyDlpV2ManualResponseArgs struct {
}

func (GooglePrivacyDlpV2ManualResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ManualResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ManualResponseArgs) ToGooglePrivacyDlpV2ManualResponseOutput() GooglePrivacyDlpV2ManualResponseOutput {
	return i.ToGooglePrivacyDlpV2ManualResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ManualResponseArgs) ToGooglePrivacyDlpV2ManualResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ManualResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ManualResponseOutput)
}

// Job trigger option for hybrid jobs. Jobs must be manually created and finished.
type GooglePrivacyDlpV2ManualResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ManualResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ManualResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ManualResponseOutput) ToGooglePrivacyDlpV2ManualResponseOutput() GooglePrivacyDlpV2ManualResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ManualResponseOutput) ToGooglePrivacyDlpV2ManualResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ManualResponseOutput {
	return o
}

// Compute numerical stats over an individual column, including min, max, and quantiles.
type GooglePrivacyDlpV2NumericalStatsConfig struct {
	// Field to compute numerical stats on. Supported types are integer, float, date, datetime, timestamp, time.
	Field *GooglePrivacyDlpV2FieldId `pulumi:"field"`
}

// GooglePrivacyDlpV2NumericalStatsConfigInput is an input type that accepts GooglePrivacyDlpV2NumericalStatsConfigArgs and GooglePrivacyDlpV2NumericalStatsConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2NumericalStatsConfigInput` via:
//
//          GooglePrivacyDlpV2NumericalStatsConfigArgs{...}
type GooglePrivacyDlpV2NumericalStatsConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2NumericalStatsConfigOutput() GooglePrivacyDlpV2NumericalStatsConfigOutput
	ToGooglePrivacyDlpV2NumericalStatsConfigOutputWithContext(context.Context) GooglePrivacyDlpV2NumericalStatsConfigOutput
}

// Compute numerical stats over an individual column, including min, max, and quantiles.
type GooglePrivacyDlpV2NumericalStatsConfigArgs struct {
	// Field to compute numerical stats on. Supported types are integer, float, date, datetime, timestamp, time.
	Field GooglePrivacyDlpV2FieldIdPtrInput `pulumi:"field"`
}

func (GooglePrivacyDlpV2NumericalStatsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2NumericalStatsConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2NumericalStatsConfigArgs) ToGooglePrivacyDlpV2NumericalStatsConfigOutput() GooglePrivacyDlpV2NumericalStatsConfigOutput {
	return i.ToGooglePrivacyDlpV2NumericalStatsConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2NumericalStatsConfigArgs) ToGooglePrivacyDlpV2NumericalStatsConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2NumericalStatsConfigOutput)
}

func (i GooglePrivacyDlpV2NumericalStatsConfigArgs) ToGooglePrivacyDlpV2NumericalStatsConfigPtrOutput() GooglePrivacyDlpV2NumericalStatsConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2NumericalStatsConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2NumericalStatsConfigArgs) ToGooglePrivacyDlpV2NumericalStatsConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2NumericalStatsConfigOutput).ToGooglePrivacyDlpV2NumericalStatsConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2NumericalStatsConfigPtrInput is an input type that accepts GooglePrivacyDlpV2NumericalStatsConfigArgs, GooglePrivacyDlpV2NumericalStatsConfigPtr and GooglePrivacyDlpV2NumericalStatsConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2NumericalStatsConfigPtrInput` via:
//
//          GooglePrivacyDlpV2NumericalStatsConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2NumericalStatsConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2NumericalStatsConfigPtrOutput() GooglePrivacyDlpV2NumericalStatsConfigPtrOutput
	ToGooglePrivacyDlpV2NumericalStatsConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2NumericalStatsConfigPtrOutput
}

type googlePrivacyDlpV2NumericalStatsConfigPtrType GooglePrivacyDlpV2NumericalStatsConfigArgs

func GooglePrivacyDlpV2NumericalStatsConfigPtr(v *GooglePrivacyDlpV2NumericalStatsConfigArgs) GooglePrivacyDlpV2NumericalStatsConfigPtrInput {
	return (*googlePrivacyDlpV2NumericalStatsConfigPtrType)(v)
}

func (*googlePrivacyDlpV2NumericalStatsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2NumericalStatsConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2NumericalStatsConfigPtrType) ToGooglePrivacyDlpV2NumericalStatsConfigPtrOutput() GooglePrivacyDlpV2NumericalStatsConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2NumericalStatsConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2NumericalStatsConfigPtrType) ToGooglePrivacyDlpV2NumericalStatsConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2NumericalStatsConfigPtrOutput)
}

// Compute numerical stats over an individual column, including min, max, and quantiles.
type GooglePrivacyDlpV2NumericalStatsConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2NumericalStatsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2NumericalStatsConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2NumericalStatsConfigOutput) ToGooglePrivacyDlpV2NumericalStatsConfigOutput() GooglePrivacyDlpV2NumericalStatsConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2NumericalStatsConfigOutput) ToGooglePrivacyDlpV2NumericalStatsConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2NumericalStatsConfigOutput) ToGooglePrivacyDlpV2NumericalStatsConfigPtrOutput() GooglePrivacyDlpV2NumericalStatsConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2NumericalStatsConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2NumericalStatsConfigOutput) ToGooglePrivacyDlpV2NumericalStatsConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2NumericalStatsConfig) *GooglePrivacyDlpV2NumericalStatsConfig {
		return &v
	}).(GooglePrivacyDlpV2NumericalStatsConfigPtrOutput)
}

// Field to compute numerical stats on. Supported types are integer, float, date, datetime, timestamp, time.
func (o GooglePrivacyDlpV2NumericalStatsConfigOutput) Field() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2NumericalStatsConfig) *GooglePrivacyDlpV2FieldId { return v.Field }).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

type GooglePrivacyDlpV2NumericalStatsConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2NumericalStatsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2NumericalStatsConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2NumericalStatsConfigPtrOutput) ToGooglePrivacyDlpV2NumericalStatsConfigPtrOutput() GooglePrivacyDlpV2NumericalStatsConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2NumericalStatsConfigPtrOutput) ToGooglePrivacyDlpV2NumericalStatsConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2NumericalStatsConfigPtrOutput) Elem() GooglePrivacyDlpV2NumericalStatsConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2NumericalStatsConfig) GooglePrivacyDlpV2NumericalStatsConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2NumericalStatsConfig
		return ret
	}).(GooglePrivacyDlpV2NumericalStatsConfigOutput)
}

// Field to compute numerical stats on. Supported types are integer, float, date, datetime, timestamp, time.
func (o GooglePrivacyDlpV2NumericalStatsConfigPtrOutput) Field() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2NumericalStatsConfig) *GooglePrivacyDlpV2FieldId {
		if v == nil {
			return nil
		}
		return v.Field
	}).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// Compute numerical stats over an individual column, including min, max, and quantiles.
type GooglePrivacyDlpV2NumericalStatsConfigResponse struct {
	// Field to compute numerical stats on. Supported types are integer, float, date, datetime, timestamp, time.
	Field GooglePrivacyDlpV2FieldIdResponse `pulumi:"field"`
}

// GooglePrivacyDlpV2NumericalStatsConfigResponseInput is an input type that accepts GooglePrivacyDlpV2NumericalStatsConfigResponseArgs and GooglePrivacyDlpV2NumericalStatsConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2NumericalStatsConfigResponseInput` via:
//
//          GooglePrivacyDlpV2NumericalStatsConfigResponseArgs{...}
type GooglePrivacyDlpV2NumericalStatsConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2NumericalStatsConfigResponseOutput() GooglePrivacyDlpV2NumericalStatsConfigResponseOutput
	ToGooglePrivacyDlpV2NumericalStatsConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2NumericalStatsConfigResponseOutput
}

// Compute numerical stats over an individual column, including min, max, and quantiles.
type GooglePrivacyDlpV2NumericalStatsConfigResponseArgs struct {
	// Field to compute numerical stats on. Supported types are integer, float, date, datetime, timestamp, time.
	Field GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"field"`
}

func (GooglePrivacyDlpV2NumericalStatsConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2NumericalStatsConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2NumericalStatsConfigResponseArgs) ToGooglePrivacyDlpV2NumericalStatsConfigResponseOutput() GooglePrivacyDlpV2NumericalStatsConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2NumericalStatsConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2NumericalStatsConfigResponseArgs) ToGooglePrivacyDlpV2NumericalStatsConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2NumericalStatsConfigResponseOutput)
}

func (i GooglePrivacyDlpV2NumericalStatsConfigResponseArgs) ToGooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput() GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2NumericalStatsConfigResponseArgs) ToGooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2NumericalStatsConfigResponseOutput).ToGooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2NumericalStatsConfigResponsePtrInput is an input type that accepts GooglePrivacyDlpV2NumericalStatsConfigResponseArgs, GooglePrivacyDlpV2NumericalStatsConfigResponsePtr and GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2NumericalStatsConfigResponsePtrInput` via:
//
//          GooglePrivacyDlpV2NumericalStatsConfigResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2NumericalStatsConfigResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput() GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput
	ToGooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput
}

type googlePrivacyDlpV2NumericalStatsConfigResponsePtrType GooglePrivacyDlpV2NumericalStatsConfigResponseArgs

func GooglePrivacyDlpV2NumericalStatsConfigResponsePtr(v *GooglePrivacyDlpV2NumericalStatsConfigResponseArgs) GooglePrivacyDlpV2NumericalStatsConfigResponsePtrInput {
	return (*googlePrivacyDlpV2NumericalStatsConfigResponsePtrType)(v)
}

func (*googlePrivacyDlpV2NumericalStatsConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2NumericalStatsConfigResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2NumericalStatsConfigResponsePtrType) ToGooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput() GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2NumericalStatsConfigResponsePtrType) ToGooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput)
}

// Compute numerical stats over an individual column, including min, max, and quantiles.
type GooglePrivacyDlpV2NumericalStatsConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2NumericalStatsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2NumericalStatsConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2NumericalStatsConfigResponseOutput) ToGooglePrivacyDlpV2NumericalStatsConfigResponseOutput() GooglePrivacyDlpV2NumericalStatsConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2NumericalStatsConfigResponseOutput) ToGooglePrivacyDlpV2NumericalStatsConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2NumericalStatsConfigResponseOutput) ToGooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput() GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2NumericalStatsConfigResponseOutput) ToGooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2NumericalStatsConfigResponse) *GooglePrivacyDlpV2NumericalStatsConfigResponse {
		return &v
	}).(GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput)
}

// Field to compute numerical stats on. Supported types are integer, float, date, datetime, timestamp, time.
func (o GooglePrivacyDlpV2NumericalStatsConfigResponseOutput) Field() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2NumericalStatsConfigResponse) GooglePrivacyDlpV2FieldIdResponse {
		return v.Field
	}).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

type GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2NumericalStatsConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput) ToGooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput() GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput) ToGooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput) Elem() GooglePrivacyDlpV2NumericalStatsConfigResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2NumericalStatsConfigResponse) GooglePrivacyDlpV2NumericalStatsConfigResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2NumericalStatsConfigResponse
		return ret
	}).(GooglePrivacyDlpV2NumericalStatsConfigResponseOutput)
}

// Field to compute numerical stats on. Supported types are integer, float, date, datetime, timestamp, time.
func (o GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput) Field() GooglePrivacyDlpV2FieldIdResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2NumericalStatsConfigResponse) *GooglePrivacyDlpV2FieldIdResponse {
		if v == nil {
			return nil
		}
		return &v.Field
	}).(GooglePrivacyDlpV2FieldIdResponsePtrOutput)
}

// Result of the numerical stats computation.
type GooglePrivacyDlpV2NumericalStatsResultResponse struct {
	// Maximum value appearing in the column.
	MaxValue GooglePrivacyDlpV2ValueResponse `pulumi:"maxValue"`
	// Minimum value appearing in the column.
	MinValue GooglePrivacyDlpV2ValueResponse `pulumi:"minValue"`
	// List of 99 values that partition the set of field values into 100 equal sized buckets.
	QuantileValues []GooglePrivacyDlpV2ValueResponse `pulumi:"quantileValues"`
}

// GooglePrivacyDlpV2NumericalStatsResultResponseInput is an input type that accepts GooglePrivacyDlpV2NumericalStatsResultResponseArgs and GooglePrivacyDlpV2NumericalStatsResultResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2NumericalStatsResultResponseInput` via:
//
//          GooglePrivacyDlpV2NumericalStatsResultResponseArgs{...}
type GooglePrivacyDlpV2NumericalStatsResultResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2NumericalStatsResultResponseOutput() GooglePrivacyDlpV2NumericalStatsResultResponseOutput
	ToGooglePrivacyDlpV2NumericalStatsResultResponseOutputWithContext(context.Context) GooglePrivacyDlpV2NumericalStatsResultResponseOutput
}

// Result of the numerical stats computation.
type GooglePrivacyDlpV2NumericalStatsResultResponseArgs struct {
	// Maximum value appearing in the column.
	MaxValue GooglePrivacyDlpV2ValueResponseInput `pulumi:"maxValue"`
	// Minimum value appearing in the column.
	MinValue GooglePrivacyDlpV2ValueResponseInput `pulumi:"minValue"`
	// List of 99 values that partition the set of field values into 100 equal sized buckets.
	QuantileValues GooglePrivacyDlpV2ValueResponseArrayInput `pulumi:"quantileValues"`
}

func (GooglePrivacyDlpV2NumericalStatsResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2NumericalStatsResultResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2NumericalStatsResultResponseArgs) ToGooglePrivacyDlpV2NumericalStatsResultResponseOutput() GooglePrivacyDlpV2NumericalStatsResultResponseOutput {
	return i.ToGooglePrivacyDlpV2NumericalStatsResultResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2NumericalStatsResultResponseArgs) ToGooglePrivacyDlpV2NumericalStatsResultResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2NumericalStatsResultResponseOutput)
}

func (i GooglePrivacyDlpV2NumericalStatsResultResponseArgs) ToGooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput() GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2NumericalStatsResultResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2NumericalStatsResultResponseArgs) ToGooglePrivacyDlpV2NumericalStatsResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2NumericalStatsResultResponseOutput).ToGooglePrivacyDlpV2NumericalStatsResultResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2NumericalStatsResultResponsePtrInput is an input type that accepts GooglePrivacyDlpV2NumericalStatsResultResponseArgs, GooglePrivacyDlpV2NumericalStatsResultResponsePtr and GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2NumericalStatsResultResponsePtrInput` via:
//
//          GooglePrivacyDlpV2NumericalStatsResultResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2NumericalStatsResultResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput() GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput
	ToGooglePrivacyDlpV2NumericalStatsResultResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput
}

type googlePrivacyDlpV2NumericalStatsResultResponsePtrType GooglePrivacyDlpV2NumericalStatsResultResponseArgs

func GooglePrivacyDlpV2NumericalStatsResultResponsePtr(v *GooglePrivacyDlpV2NumericalStatsResultResponseArgs) GooglePrivacyDlpV2NumericalStatsResultResponsePtrInput {
	return (*googlePrivacyDlpV2NumericalStatsResultResponsePtrType)(v)
}

func (*googlePrivacyDlpV2NumericalStatsResultResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2NumericalStatsResultResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2NumericalStatsResultResponsePtrType) ToGooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput() GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2NumericalStatsResultResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2NumericalStatsResultResponsePtrType) ToGooglePrivacyDlpV2NumericalStatsResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput)
}

// Result of the numerical stats computation.
type GooglePrivacyDlpV2NumericalStatsResultResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2NumericalStatsResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2NumericalStatsResultResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2NumericalStatsResultResponseOutput) ToGooglePrivacyDlpV2NumericalStatsResultResponseOutput() GooglePrivacyDlpV2NumericalStatsResultResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2NumericalStatsResultResponseOutput) ToGooglePrivacyDlpV2NumericalStatsResultResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsResultResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2NumericalStatsResultResponseOutput) ToGooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput() GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2NumericalStatsResultResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2NumericalStatsResultResponseOutput) ToGooglePrivacyDlpV2NumericalStatsResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2NumericalStatsResultResponse) *GooglePrivacyDlpV2NumericalStatsResultResponse {
		return &v
	}).(GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput)
}

// Maximum value appearing in the column.
func (o GooglePrivacyDlpV2NumericalStatsResultResponseOutput) MaxValue() GooglePrivacyDlpV2ValueResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2NumericalStatsResultResponse) GooglePrivacyDlpV2ValueResponse {
		return v.MaxValue
	}).(GooglePrivacyDlpV2ValueResponseOutput)
}

// Minimum value appearing in the column.
func (o GooglePrivacyDlpV2NumericalStatsResultResponseOutput) MinValue() GooglePrivacyDlpV2ValueResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2NumericalStatsResultResponse) GooglePrivacyDlpV2ValueResponse {
		return v.MinValue
	}).(GooglePrivacyDlpV2ValueResponseOutput)
}

// List of 99 values that partition the set of field values into 100 equal sized buckets.
func (o GooglePrivacyDlpV2NumericalStatsResultResponseOutput) QuantileValues() GooglePrivacyDlpV2ValueResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2NumericalStatsResultResponse) []GooglePrivacyDlpV2ValueResponse {
		return v.QuantileValues
	}).(GooglePrivacyDlpV2ValueResponseArrayOutput)
}

type GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2NumericalStatsResultResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput) ToGooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput() GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput) ToGooglePrivacyDlpV2NumericalStatsResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput) Elem() GooglePrivacyDlpV2NumericalStatsResultResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2NumericalStatsResultResponse) GooglePrivacyDlpV2NumericalStatsResultResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2NumericalStatsResultResponse
		return ret
	}).(GooglePrivacyDlpV2NumericalStatsResultResponseOutput)
}

// Maximum value appearing in the column.
func (o GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput) MaxValue() GooglePrivacyDlpV2ValueResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2NumericalStatsResultResponse) *GooglePrivacyDlpV2ValueResponse {
		if v == nil {
			return nil
		}
		return &v.MaxValue
	}).(GooglePrivacyDlpV2ValueResponsePtrOutput)
}

// Minimum value appearing in the column.
func (o GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput) MinValue() GooglePrivacyDlpV2ValueResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2NumericalStatsResultResponse) *GooglePrivacyDlpV2ValueResponse {
		if v == nil {
			return nil
		}
		return &v.MinValue
	}).(GooglePrivacyDlpV2ValueResponsePtrOutput)
}

// List of 99 values that partition the set of field values into 100 equal sized buckets.
func (o GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput) QuantileValues() GooglePrivacyDlpV2ValueResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2NumericalStatsResultResponse) []GooglePrivacyDlpV2ValueResponse {
		if v == nil {
			return nil
		}
		return v.QuantileValues
	}).(GooglePrivacyDlpV2ValueResponseArrayOutput)
}

// Cloud repository for storing output.
type GooglePrivacyDlpV2OutputStorageConfig struct {
	// Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.
	OutputSchema *GooglePrivacyDlpV2OutputStorageConfigOutputSchema `pulumi:"outputSchema"`
	// Store findings in an existing table or a new table in an existing dataset. If table_id is not set a new one will be generated for you with the following format: dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for generating the date details. For Inspect, each column in an existing output table must have the same name, type, and mode of a field in the `Finding` object. For Risk, an existing output table should be the output of a previous Risk analysis job run on the same source table, with the same privacy metric and quasi-identifiers. Risk jobs that analyze the same table but compute a different privacy metric, or use different sets of quasi-identifiers, cannot store their results in the same table.
	Table *GooglePrivacyDlpV2BigQueryTable `pulumi:"table"`
}

// GooglePrivacyDlpV2OutputStorageConfigInput is an input type that accepts GooglePrivacyDlpV2OutputStorageConfigArgs and GooglePrivacyDlpV2OutputStorageConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2OutputStorageConfigInput` via:
//
//          GooglePrivacyDlpV2OutputStorageConfigArgs{...}
type GooglePrivacyDlpV2OutputStorageConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2OutputStorageConfigOutput() GooglePrivacyDlpV2OutputStorageConfigOutput
	ToGooglePrivacyDlpV2OutputStorageConfigOutputWithContext(context.Context) GooglePrivacyDlpV2OutputStorageConfigOutput
}

// Cloud repository for storing output.
type GooglePrivacyDlpV2OutputStorageConfigArgs struct {
	// Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.
	OutputSchema GooglePrivacyDlpV2OutputStorageConfigOutputSchemaPtrInput `pulumi:"outputSchema"`
	// Store findings in an existing table or a new table in an existing dataset. If table_id is not set a new one will be generated for you with the following format: dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for generating the date details. For Inspect, each column in an existing output table must have the same name, type, and mode of a field in the `Finding` object. For Risk, an existing output table should be the output of a previous Risk analysis job run on the same source table, with the same privacy metric and quasi-identifiers. Risk jobs that analyze the same table but compute a different privacy metric, or use different sets of quasi-identifiers, cannot store their results in the same table.
	Table GooglePrivacyDlpV2BigQueryTablePtrInput `pulumi:"table"`
}

func (GooglePrivacyDlpV2OutputStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2OutputStorageConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2OutputStorageConfigArgs) ToGooglePrivacyDlpV2OutputStorageConfigOutput() GooglePrivacyDlpV2OutputStorageConfigOutput {
	return i.ToGooglePrivacyDlpV2OutputStorageConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2OutputStorageConfigArgs) ToGooglePrivacyDlpV2OutputStorageConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2OutputStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2OutputStorageConfigOutput)
}

func (i GooglePrivacyDlpV2OutputStorageConfigArgs) ToGooglePrivacyDlpV2OutputStorageConfigPtrOutput() GooglePrivacyDlpV2OutputStorageConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2OutputStorageConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2OutputStorageConfigArgs) ToGooglePrivacyDlpV2OutputStorageConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2OutputStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2OutputStorageConfigOutput).ToGooglePrivacyDlpV2OutputStorageConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2OutputStorageConfigPtrInput is an input type that accepts GooglePrivacyDlpV2OutputStorageConfigArgs, GooglePrivacyDlpV2OutputStorageConfigPtr and GooglePrivacyDlpV2OutputStorageConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2OutputStorageConfigPtrInput` via:
//
//          GooglePrivacyDlpV2OutputStorageConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2OutputStorageConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2OutputStorageConfigPtrOutput() GooglePrivacyDlpV2OutputStorageConfigPtrOutput
	ToGooglePrivacyDlpV2OutputStorageConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2OutputStorageConfigPtrOutput
}

type googlePrivacyDlpV2OutputStorageConfigPtrType GooglePrivacyDlpV2OutputStorageConfigArgs

func GooglePrivacyDlpV2OutputStorageConfigPtr(v *GooglePrivacyDlpV2OutputStorageConfigArgs) GooglePrivacyDlpV2OutputStorageConfigPtrInput {
	return (*googlePrivacyDlpV2OutputStorageConfigPtrType)(v)
}

func (*googlePrivacyDlpV2OutputStorageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2OutputStorageConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2OutputStorageConfigPtrType) ToGooglePrivacyDlpV2OutputStorageConfigPtrOutput() GooglePrivacyDlpV2OutputStorageConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2OutputStorageConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2OutputStorageConfigPtrType) ToGooglePrivacyDlpV2OutputStorageConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2OutputStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2OutputStorageConfigPtrOutput)
}

// Cloud repository for storing output.
type GooglePrivacyDlpV2OutputStorageConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2OutputStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2OutputStorageConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2OutputStorageConfigOutput) ToGooglePrivacyDlpV2OutputStorageConfigOutput() GooglePrivacyDlpV2OutputStorageConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2OutputStorageConfigOutput) ToGooglePrivacyDlpV2OutputStorageConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2OutputStorageConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2OutputStorageConfigOutput) ToGooglePrivacyDlpV2OutputStorageConfigPtrOutput() GooglePrivacyDlpV2OutputStorageConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2OutputStorageConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2OutputStorageConfigOutput) ToGooglePrivacyDlpV2OutputStorageConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2OutputStorageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2OutputStorageConfig) *GooglePrivacyDlpV2OutputStorageConfig {
		return &v
	}).(GooglePrivacyDlpV2OutputStorageConfigPtrOutput)
}

// Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.
func (o GooglePrivacyDlpV2OutputStorageConfigOutput) OutputSchema() GooglePrivacyDlpV2OutputStorageConfigOutputSchemaPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2OutputStorageConfig) *GooglePrivacyDlpV2OutputStorageConfigOutputSchema {
		return v.OutputSchema
	}).(GooglePrivacyDlpV2OutputStorageConfigOutputSchemaPtrOutput)
}

// Store findings in an existing table or a new table in an existing dataset. If table_id is not set a new one will be generated for you with the following format: dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for generating the date details. For Inspect, each column in an existing output table must have the same name, type, and mode of a field in the `Finding` object. For Risk, an existing output table should be the output of a previous Risk analysis job run on the same source table, with the same privacy metric and quasi-identifiers. Risk jobs that analyze the same table but compute a different privacy metric, or use different sets of quasi-identifiers, cannot store their results in the same table.
func (o GooglePrivacyDlpV2OutputStorageConfigOutput) Table() GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2OutputStorageConfig) *GooglePrivacyDlpV2BigQueryTable { return v.Table }).(GooglePrivacyDlpV2BigQueryTablePtrOutput)
}

type GooglePrivacyDlpV2OutputStorageConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2OutputStorageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2OutputStorageConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2OutputStorageConfigPtrOutput) ToGooglePrivacyDlpV2OutputStorageConfigPtrOutput() GooglePrivacyDlpV2OutputStorageConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2OutputStorageConfigPtrOutput) ToGooglePrivacyDlpV2OutputStorageConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2OutputStorageConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2OutputStorageConfigPtrOutput) Elem() GooglePrivacyDlpV2OutputStorageConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2OutputStorageConfig) GooglePrivacyDlpV2OutputStorageConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2OutputStorageConfig
		return ret
	}).(GooglePrivacyDlpV2OutputStorageConfigOutput)
}

// Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.
func (o GooglePrivacyDlpV2OutputStorageConfigPtrOutput) OutputSchema() GooglePrivacyDlpV2OutputStorageConfigOutputSchemaPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2OutputStorageConfig) *GooglePrivacyDlpV2OutputStorageConfigOutputSchema {
		if v == nil {
			return nil
		}
		return v.OutputSchema
	}).(GooglePrivacyDlpV2OutputStorageConfigOutputSchemaPtrOutput)
}

// Store findings in an existing table or a new table in an existing dataset. If table_id is not set a new one will be generated for you with the following format: dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for generating the date details. For Inspect, each column in an existing output table must have the same name, type, and mode of a field in the `Finding` object. For Risk, an existing output table should be the output of a previous Risk analysis job run on the same source table, with the same privacy metric and quasi-identifiers. Risk jobs that analyze the same table but compute a different privacy metric, or use different sets of quasi-identifiers, cannot store their results in the same table.
func (o GooglePrivacyDlpV2OutputStorageConfigPtrOutput) Table() GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2OutputStorageConfig) *GooglePrivacyDlpV2BigQueryTable {
		if v == nil {
			return nil
		}
		return v.Table
	}).(GooglePrivacyDlpV2BigQueryTablePtrOutput)
}

// Cloud repository for storing output.
type GooglePrivacyDlpV2OutputStorageConfigResponse struct {
	// Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.
	OutputSchema string `pulumi:"outputSchema"`
	// Store findings in an existing table or a new table in an existing dataset. If table_id is not set a new one will be generated for you with the following format: dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for generating the date details. For Inspect, each column in an existing output table must have the same name, type, and mode of a field in the `Finding` object. For Risk, an existing output table should be the output of a previous Risk analysis job run on the same source table, with the same privacy metric and quasi-identifiers. Risk jobs that analyze the same table but compute a different privacy metric, or use different sets of quasi-identifiers, cannot store their results in the same table.
	Table GooglePrivacyDlpV2BigQueryTableResponse `pulumi:"table"`
}

// GooglePrivacyDlpV2OutputStorageConfigResponseInput is an input type that accepts GooglePrivacyDlpV2OutputStorageConfigResponseArgs and GooglePrivacyDlpV2OutputStorageConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2OutputStorageConfigResponseInput` via:
//
//          GooglePrivacyDlpV2OutputStorageConfigResponseArgs{...}
type GooglePrivacyDlpV2OutputStorageConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2OutputStorageConfigResponseOutput() GooglePrivacyDlpV2OutputStorageConfigResponseOutput
	ToGooglePrivacyDlpV2OutputStorageConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2OutputStorageConfigResponseOutput
}

// Cloud repository for storing output.
type GooglePrivacyDlpV2OutputStorageConfigResponseArgs struct {
	// Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.
	OutputSchema pulumi.StringInput `pulumi:"outputSchema"`
	// Store findings in an existing table or a new table in an existing dataset. If table_id is not set a new one will be generated for you with the following format: dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for generating the date details. For Inspect, each column in an existing output table must have the same name, type, and mode of a field in the `Finding` object. For Risk, an existing output table should be the output of a previous Risk analysis job run on the same source table, with the same privacy metric and quasi-identifiers. Risk jobs that analyze the same table but compute a different privacy metric, or use different sets of quasi-identifiers, cannot store their results in the same table.
	Table GooglePrivacyDlpV2BigQueryTableResponseInput `pulumi:"table"`
}

func (GooglePrivacyDlpV2OutputStorageConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2OutputStorageConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2OutputStorageConfigResponseArgs) ToGooglePrivacyDlpV2OutputStorageConfigResponseOutput() GooglePrivacyDlpV2OutputStorageConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2OutputStorageConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2OutputStorageConfigResponseArgs) ToGooglePrivacyDlpV2OutputStorageConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2OutputStorageConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2OutputStorageConfigResponseOutput)
}

// Cloud repository for storing output.
type GooglePrivacyDlpV2OutputStorageConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2OutputStorageConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2OutputStorageConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2OutputStorageConfigResponseOutput) ToGooglePrivacyDlpV2OutputStorageConfigResponseOutput() GooglePrivacyDlpV2OutputStorageConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2OutputStorageConfigResponseOutput) ToGooglePrivacyDlpV2OutputStorageConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2OutputStorageConfigResponseOutput {
	return o
}

// Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.
func (o GooglePrivacyDlpV2OutputStorageConfigResponseOutput) OutputSchema() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2OutputStorageConfigResponse) string { return v.OutputSchema }).(pulumi.StringOutput)
}

// Store findings in an existing table or a new table in an existing dataset. If table_id is not set a new one will be generated for you with the following format: dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for generating the date details. For Inspect, each column in an existing output table must have the same name, type, and mode of a field in the `Finding` object. For Risk, an existing output table should be the output of a previous Risk analysis job run on the same source table, with the same privacy metric and quasi-identifiers. Risk jobs that analyze the same table but compute a different privacy metric, or use different sets of quasi-identifiers, cannot store their results in the same table.
func (o GooglePrivacyDlpV2OutputStorageConfigResponseOutput) Table() GooglePrivacyDlpV2BigQueryTableResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2OutputStorageConfigResponse) GooglePrivacyDlpV2BigQueryTableResponse {
		return v.Table
	}).(GooglePrivacyDlpV2BigQueryTableResponseOutput)
}

// Datastore partition ID. A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. A partition ID contains several dimensions: project ID and namespace ID.
type GooglePrivacyDlpV2PartitionId struct {
	// If not empty, the ID of the namespace to which the entities belong.
	NamespaceId *string `pulumi:"namespaceId"`
	// The ID of the project to which the entities belong.
	Project *string `pulumi:"project"`
}

// GooglePrivacyDlpV2PartitionIdInput is an input type that accepts GooglePrivacyDlpV2PartitionIdArgs and GooglePrivacyDlpV2PartitionIdOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PartitionIdInput` via:
//
//          GooglePrivacyDlpV2PartitionIdArgs{...}
type GooglePrivacyDlpV2PartitionIdInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PartitionIdOutput() GooglePrivacyDlpV2PartitionIdOutput
	ToGooglePrivacyDlpV2PartitionIdOutputWithContext(context.Context) GooglePrivacyDlpV2PartitionIdOutput
}

// Datastore partition ID. A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. A partition ID contains several dimensions: project ID and namespace ID.
type GooglePrivacyDlpV2PartitionIdArgs struct {
	// If not empty, the ID of the namespace to which the entities belong.
	NamespaceId pulumi.StringPtrInput `pulumi:"namespaceId"`
	// The ID of the project to which the entities belong.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GooglePrivacyDlpV2PartitionIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PartitionId)(nil)).Elem()
}

func (i GooglePrivacyDlpV2PartitionIdArgs) ToGooglePrivacyDlpV2PartitionIdOutput() GooglePrivacyDlpV2PartitionIdOutput {
	return i.ToGooglePrivacyDlpV2PartitionIdOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PartitionIdArgs) ToGooglePrivacyDlpV2PartitionIdOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PartitionIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PartitionIdOutput)
}

func (i GooglePrivacyDlpV2PartitionIdArgs) ToGooglePrivacyDlpV2PartitionIdPtrOutput() GooglePrivacyDlpV2PartitionIdPtrOutput {
	return i.ToGooglePrivacyDlpV2PartitionIdPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PartitionIdArgs) ToGooglePrivacyDlpV2PartitionIdPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PartitionIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PartitionIdOutput).ToGooglePrivacyDlpV2PartitionIdPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2PartitionIdPtrInput is an input type that accepts GooglePrivacyDlpV2PartitionIdArgs, GooglePrivacyDlpV2PartitionIdPtr and GooglePrivacyDlpV2PartitionIdPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PartitionIdPtrInput` via:
//
//          GooglePrivacyDlpV2PartitionIdArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2PartitionIdPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PartitionIdPtrOutput() GooglePrivacyDlpV2PartitionIdPtrOutput
	ToGooglePrivacyDlpV2PartitionIdPtrOutputWithContext(context.Context) GooglePrivacyDlpV2PartitionIdPtrOutput
}

type googlePrivacyDlpV2PartitionIdPtrType GooglePrivacyDlpV2PartitionIdArgs

func GooglePrivacyDlpV2PartitionIdPtr(v *GooglePrivacyDlpV2PartitionIdArgs) GooglePrivacyDlpV2PartitionIdPtrInput {
	return (*googlePrivacyDlpV2PartitionIdPtrType)(v)
}

func (*googlePrivacyDlpV2PartitionIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PartitionId)(nil)).Elem()
}

func (i *googlePrivacyDlpV2PartitionIdPtrType) ToGooglePrivacyDlpV2PartitionIdPtrOutput() GooglePrivacyDlpV2PartitionIdPtrOutput {
	return i.ToGooglePrivacyDlpV2PartitionIdPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2PartitionIdPtrType) ToGooglePrivacyDlpV2PartitionIdPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PartitionIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PartitionIdPtrOutput)
}

// Datastore partition ID. A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. A partition ID contains several dimensions: project ID and namespace ID.
type GooglePrivacyDlpV2PartitionIdOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PartitionIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PartitionId)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PartitionIdOutput) ToGooglePrivacyDlpV2PartitionIdOutput() GooglePrivacyDlpV2PartitionIdOutput {
	return o
}

func (o GooglePrivacyDlpV2PartitionIdOutput) ToGooglePrivacyDlpV2PartitionIdOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PartitionIdOutput {
	return o
}

func (o GooglePrivacyDlpV2PartitionIdOutput) ToGooglePrivacyDlpV2PartitionIdPtrOutput() GooglePrivacyDlpV2PartitionIdPtrOutput {
	return o.ToGooglePrivacyDlpV2PartitionIdPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2PartitionIdOutput) ToGooglePrivacyDlpV2PartitionIdPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PartitionIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2PartitionId) *GooglePrivacyDlpV2PartitionId {
		return &v
	}).(GooglePrivacyDlpV2PartitionIdPtrOutput)
}

// If not empty, the ID of the namespace to which the entities belong.
func (o GooglePrivacyDlpV2PartitionIdOutput) NamespaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PartitionId) *string { return v.NamespaceId }).(pulumi.StringPtrOutput)
}

// The ID of the project to which the entities belong.
func (o GooglePrivacyDlpV2PartitionIdOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PartitionId) *string { return v.Project }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2PartitionIdPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PartitionIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PartitionId)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PartitionIdPtrOutput) ToGooglePrivacyDlpV2PartitionIdPtrOutput() GooglePrivacyDlpV2PartitionIdPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PartitionIdPtrOutput) ToGooglePrivacyDlpV2PartitionIdPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PartitionIdPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PartitionIdPtrOutput) Elem() GooglePrivacyDlpV2PartitionIdOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PartitionId) GooglePrivacyDlpV2PartitionId {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2PartitionId
		return ret
	}).(GooglePrivacyDlpV2PartitionIdOutput)
}

// If not empty, the ID of the namespace to which the entities belong.
func (o GooglePrivacyDlpV2PartitionIdPtrOutput) NamespaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PartitionId) *string {
		if v == nil {
			return nil
		}
		return v.NamespaceId
	}).(pulumi.StringPtrOutput)
}

// The ID of the project to which the entities belong.
func (o GooglePrivacyDlpV2PartitionIdPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PartitionId) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

// Datastore partition ID. A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. A partition ID contains several dimensions: project ID and namespace ID.
type GooglePrivacyDlpV2PartitionIdResponse struct {
	// If not empty, the ID of the namespace to which the entities belong.
	NamespaceId string `pulumi:"namespaceId"`
	// The ID of the project to which the entities belong.
	Project string `pulumi:"project"`
}

// GooglePrivacyDlpV2PartitionIdResponseInput is an input type that accepts GooglePrivacyDlpV2PartitionIdResponseArgs and GooglePrivacyDlpV2PartitionIdResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PartitionIdResponseInput` via:
//
//          GooglePrivacyDlpV2PartitionIdResponseArgs{...}
type GooglePrivacyDlpV2PartitionIdResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PartitionIdResponseOutput() GooglePrivacyDlpV2PartitionIdResponseOutput
	ToGooglePrivacyDlpV2PartitionIdResponseOutputWithContext(context.Context) GooglePrivacyDlpV2PartitionIdResponseOutput
}

// Datastore partition ID. A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. A partition ID contains several dimensions: project ID and namespace ID.
type GooglePrivacyDlpV2PartitionIdResponseArgs struct {
	// If not empty, the ID of the namespace to which the entities belong.
	NamespaceId pulumi.StringInput `pulumi:"namespaceId"`
	// The ID of the project to which the entities belong.
	Project pulumi.StringInput `pulumi:"project"`
}

func (GooglePrivacyDlpV2PartitionIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PartitionIdResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2PartitionIdResponseArgs) ToGooglePrivacyDlpV2PartitionIdResponseOutput() GooglePrivacyDlpV2PartitionIdResponseOutput {
	return i.ToGooglePrivacyDlpV2PartitionIdResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PartitionIdResponseArgs) ToGooglePrivacyDlpV2PartitionIdResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PartitionIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PartitionIdResponseOutput)
}

func (i GooglePrivacyDlpV2PartitionIdResponseArgs) ToGooglePrivacyDlpV2PartitionIdResponsePtrOutput() GooglePrivacyDlpV2PartitionIdResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2PartitionIdResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PartitionIdResponseArgs) ToGooglePrivacyDlpV2PartitionIdResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PartitionIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PartitionIdResponseOutput).ToGooglePrivacyDlpV2PartitionIdResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2PartitionIdResponsePtrInput is an input type that accepts GooglePrivacyDlpV2PartitionIdResponseArgs, GooglePrivacyDlpV2PartitionIdResponsePtr and GooglePrivacyDlpV2PartitionIdResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PartitionIdResponsePtrInput` via:
//
//          GooglePrivacyDlpV2PartitionIdResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2PartitionIdResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PartitionIdResponsePtrOutput() GooglePrivacyDlpV2PartitionIdResponsePtrOutput
	ToGooglePrivacyDlpV2PartitionIdResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2PartitionIdResponsePtrOutput
}

type googlePrivacyDlpV2PartitionIdResponsePtrType GooglePrivacyDlpV2PartitionIdResponseArgs

func GooglePrivacyDlpV2PartitionIdResponsePtr(v *GooglePrivacyDlpV2PartitionIdResponseArgs) GooglePrivacyDlpV2PartitionIdResponsePtrInput {
	return (*googlePrivacyDlpV2PartitionIdResponsePtrType)(v)
}

func (*googlePrivacyDlpV2PartitionIdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PartitionIdResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2PartitionIdResponsePtrType) ToGooglePrivacyDlpV2PartitionIdResponsePtrOutput() GooglePrivacyDlpV2PartitionIdResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2PartitionIdResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2PartitionIdResponsePtrType) ToGooglePrivacyDlpV2PartitionIdResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PartitionIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PartitionIdResponsePtrOutput)
}

// Datastore partition ID. A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. A partition ID contains several dimensions: project ID and namespace ID.
type GooglePrivacyDlpV2PartitionIdResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PartitionIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PartitionIdResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PartitionIdResponseOutput) ToGooglePrivacyDlpV2PartitionIdResponseOutput() GooglePrivacyDlpV2PartitionIdResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2PartitionIdResponseOutput) ToGooglePrivacyDlpV2PartitionIdResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PartitionIdResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2PartitionIdResponseOutput) ToGooglePrivacyDlpV2PartitionIdResponsePtrOutput() GooglePrivacyDlpV2PartitionIdResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2PartitionIdResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2PartitionIdResponseOutput) ToGooglePrivacyDlpV2PartitionIdResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PartitionIdResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2PartitionIdResponse) *GooglePrivacyDlpV2PartitionIdResponse {
		return &v
	}).(GooglePrivacyDlpV2PartitionIdResponsePtrOutput)
}

// If not empty, the ID of the namespace to which the entities belong.
func (o GooglePrivacyDlpV2PartitionIdResponseOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PartitionIdResponse) string { return v.NamespaceId }).(pulumi.StringOutput)
}

// The ID of the project to which the entities belong.
func (o GooglePrivacyDlpV2PartitionIdResponseOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PartitionIdResponse) string { return v.Project }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2PartitionIdResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PartitionIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PartitionIdResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PartitionIdResponsePtrOutput) ToGooglePrivacyDlpV2PartitionIdResponsePtrOutput() GooglePrivacyDlpV2PartitionIdResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PartitionIdResponsePtrOutput) ToGooglePrivacyDlpV2PartitionIdResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PartitionIdResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PartitionIdResponsePtrOutput) Elem() GooglePrivacyDlpV2PartitionIdResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PartitionIdResponse) GooglePrivacyDlpV2PartitionIdResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2PartitionIdResponse
		return ret
	}).(GooglePrivacyDlpV2PartitionIdResponseOutput)
}

// If not empty, the ID of the namespace to which the entities belong.
func (o GooglePrivacyDlpV2PartitionIdResponsePtrOutput) NamespaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PartitionIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NamespaceId
	}).(pulumi.StringPtrOutput)
}

// The ID of the project to which the entities belong.
func (o GooglePrivacyDlpV2PartitionIdResponsePtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PartitionIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// A rule for transforming a value.
type GooglePrivacyDlpV2PrimitiveTransformation struct {
	// Bucketing
	BucketingConfig *GooglePrivacyDlpV2BucketingConfig `pulumi:"bucketingConfig"`
	// Mask
	CharacterMaskConfig *GooglePrivacyDlpV2CharacterMaskConfig `pulumi:"characterMaskConfig"`
	// Deterministic Crypto
	CryptoDeterministicConfig *GooglePrivacyDlpV2CryptoDeterministicConfig `pulumi:"cryptoDeterministicConfig"`
	// Crypto
	CryptoHashConfig *GooglePrivacyDlpV2CryptoHashConfig `pulumi:"cryptoHashConfig"`
	// Ffx-Fpe
	CryptoReplaceFfxFpeConfig *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig `pulumi:"cryptoReplaceFfxFpeConfig"`
	// Date Shift
	DateShiftConfig *GooglePrivacyDlpV2DateShiftConfig `pulumi:"dateShiftConfig"`
	// Fixed size bucketing
	FixedSizeBucketingConfig *GooglePrivacyDlpV2FixedSizeBucketingConfig `pulumi:"fixedSizeBucketingConfig"`
	// Redact
	RedactConfig *GooglePrivacyDlpV2RedactConfig `pulumi:"redactConfig"`
	// Replace
	ReplaceConfig *GooglePrivacyDlpV2ReplaceValueConfig `pulumi:"replaceConfig"`
	// Replace with infotype
	ReplaceWithInfoTypeConfig *GooglePrivacyDlpV2ReplaceWithInfoTypeConfig `pulumi:"replaceWithInfoTypeConfig"`
	// Time extraction
	TimePartConfig *GooglePrivacyDlpV2TimePartConfig `pulumi:"timePartConfig"`
}

// GooglePrivacyDlpV2PrimitiveTransformationInput is an input type that accepts GooglePrivacyDlpV2PrimitiveTransformationArgs and GooglePrivacyDlpV2PrimitiveTransformationOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PrimitiveTransformationInput` via:
//
//          GooglePrivacyDlpV2PrimitiveTransformationArgs{...}
type GooglePrivacyDlpV2PrimitiveTransformationInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PrimitiveTransformationOutput() GooglePrivacyDlpV2PrimitiveTransformationOutput
	ToGooglePrivacyDlpV2PrimitiveTransformationOutputWithContext(context.Context) GooglePrivacyDlpV2PrimitiveTransformationOutput
}

// A rule for transforming a value.
type GooglePrivacyDlpV2PrimitiveTransformationArgs struct {
	// Bucketing
	BucketingConfig GooglePrivacyDlpV2BucketingConfigPtrInput `pulumi:"bucketingConfig"`
	// Mask
	CharacterMaskConfig GooglePrivacyDlpV2CharacterMaskConfigPtrInput `pulumi:"characterMaskConfig"`
	// Deterministic Crypto
	CryptoDeterministicConfig GooglePrivacyDlpV2CryptoDeterministicConfigPtrInput `pulumi:"cryptoDeterministicConfig"`
	// Crypto
	CryptoHashConfig GooglePrivacyDlpV2CryptoHashConfigPtrInput `pulumi:"cryptoHashConfig"`
	// Ffx-Fpe
	CryptoReplaceFfxFpeConfig GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrInput `pulumi:"cryptoReplaceFfxFpeConfig"`
	// Date Shift
	DateShiftConfig GooglePrivacyDlpV2DateShiftConfigPtrInput `pulumi:"dateShiftConfig"`
	// Fixed size bucketing
	FixedSizeBucketingConfig GooglePrivacyDlpV2FixedSizeBucketingConfigPtrInput `pulumi:"fixedSizeBucketingConfig"`
	// Redact
	RedactConfig GooglePrivacyDlpV2RedactConfigPtrInput `pulumi:"redactConfig"`
	// Replace
	ReplaceConfig GooglePrivacyDlpV2ReplaceValueConfigPtrInput `pulumi:"replaceConfig"`
	// Replace with infotype
	ReplaceWithInfoTypeConfig GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrInput `pulumi:"replaceWithInfoTypeConfig"`
	// Time extraction
	TimePartConfig GooglePrivacyDlpV2TimePartConfigPtrInput `pulumi:"timePartConfig"`
}

func (GooglePrivacyDlpV2PrimitiveTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PrimitiveTransformation)(nil)).Elem()
}

func (i GooglePrivacyDlpV2PrimitiveTransformationArgs) ToGooglePrivacyDlpV2PrimitiveTransformationOutput() GooglePrivacyDlpV2PrimitiveTransformationOutput {
	return i.ToGooglePrivacyDlpV2PrimitiveTransformationOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PrimitiveTransformationArgs) ToGooglePrivacyDlpV2PrimitiveTransformationOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrimitiveTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PrimitiveTransformationOutput)
}

func (i GooglePrivacyDlpV2PrimitiveTransformationArgs) ToGooglePrivacyDlpV2PrimitiveTransformationPtrOutput() GooglePrivacyDlpV2PrimitiveTransformationPtrOutput {
	return i.ToGooglePrivacyDlpV2PrimitiveTransformationPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PrimitiveTransformationArgs) ToGooglePrivacyDlpV2PrimitiveTransformationPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrimitiveTransformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PrimitiveTransformationOutput).ToGooglePrivacyDlpV2PrimitiveTransformationPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2PrimitiveTransformationPtrInput is an input type that accepts GooglePrivacyDlpV2PrimitiveTransformationArgs, GooglePrivacyDlpV2PrimitiveTransformationPtr and GooglePrivacyDlpV2PrimitiveTransformationPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PrimitiveTransformationPtrInput` via:
//
//          GooglePrivacyDlpV2PrimitiveTransformationArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2PrimitiveTransformationPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PrimitiveTransformationPtrOutput() GooglePrivacyDlpV2PrimitiveTransformationPtrOutput
	ToGooglePrivacyDlpV2PrimitiveTransformationPtrOutputWithContext(context.Context) GooglePrivacyDlpV2PrimitiveTransformationPtrOutput
}

type googlePrivacyDlpV2PrimitiveTransformationPtrType GooglePrivacyDlpV2PrimitiveTransformationArgs

func GooglePrivacyDlpV2PrimitiveTransformationPtr(v *GooglePrivacyDlpV2PrimitiveTransformationArgs) GooglePrivacyDlpV2PrimitiveTransformationPtrInput {
	return (*googlePrivacyDlpV2PrimitiveTransformationPtrType)(v)
}

func (*googlePrivacyDlpV2PrimitiveTransformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PrimitiveTransformation)(nil)).Elem()
}

func (i *googlePrivacyDlpV2PrimitiveTransformationPtrType) ToGooglePrivacyDlpV2PrimitiveTransformationPtrOutput() GooglePrivacyDlpV2PrimitiveTransformationPtrOutput {
	return i.ToGooglePrivacyDlpV2PrimitiveTransformationPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2PrimitiveTransformationPtrType) ToGooglePrivacyDlpV2PrimitiveTransformationPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrimitiveTransformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PrimitiveTransformationPtrOutput)
}

// A rule for transforming a value.
type GooglePrivacyDlpV2PrimitiveTransformationOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PrimitiveTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PrimitiveTransformation)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) ToGooglePrivacyDlpV2PrimitiveTransformationOutput() GooglePrivacyDlpV2PrimitiveTransformationOutput {
	return o
}

func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) ToGooglePrivacyDlpV2PrimitiveTransformationOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrimitiveTransformationOutput {
	return o
}

func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) ToGooglePrivacyDlpV2PrimitiveTransformationPtrOutput() GooglePrivacyDlpV2PrimitiveTransformationPtrOutput {
	return o.ToGooglePrivacyDlpV2PrimitiveTransformationPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) ToGooglePrivacyDlpV2PrimitiveTransformationPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrimitiveTransformationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2PrimitiveTransformation {
		return &v
	}).(GooglePrivacyDlpV2PrimitiveTransformationPtrOutput)
}

// Bucketing
func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) BucketingConfig() GooglePrivacyDlpV2BucketingConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2BucketingConfig {
		return v.BucketingConfig
	}).(GooglePrivacyDlpV2BucketingConfigPtrOutput)
}

// Mask
func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) CharacterMaskConfig() GooglePrivacyDlpV2CharacterMaskConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2CharacterMaskConfig {
		return v.CharacterMaskConfig
	}).(GooglePrivacyDlpV2CharacterMaskConfigPtrOutput)
}

// Deterministic Crypto
func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) CryptoDeterministicConfig() GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2CryptoDeterministicConfig {
		return v.CryptoDeterministicConfig
	}).(GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput)
}

// Crypto
func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) CryptoHashConfig() GooglePrivacyDlpV2CryptoHashConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2CryptoHashConfig {
		return v.CryptoHashConfig
	}).(GooglePrivacyDlpV2CryptoHashConfigPtrOutput)
}

// Ffx-Fpe
func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) CryptoReplaceFfxFpeConfig() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig {
		return v.CryptoReplaceFfxFpeConfig
	}).(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput)
}

// Date Shift
func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) DateShiftConfig() GooglePrivacyDlpV2DateShiftConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2DateShiftConfig {
		return v.DateShiftConfig
	}).(GooglePrivacyDlpV2DateShiftConfigPtrOutput)
}

// Fixed size bucketing
func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) FixedSizeBucketingConfig() GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2FixedSizeBucketingConfig {
		return v.FixedSizeBucketingConfig
	}).(GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput)
}

// Redact
func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) RedactConfig() GooglePrivacyDlpV2RedactConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2RedactConfig {
		return v.RedactConfig
	}).(GooglePrivacyDlpV2RedactConfigPtrOutput)
}

// Replace
func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) ReplaceConfig() GooglePrivacyDlpV2ReplaceValueConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2ReplaceValueConfig {
		return v.ReplaceConfig
	}).(GooglePrivacyDlpV2ReplaceValueConfigPtrOutput)
}

// Replace with infotype
func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) ReplaceWithInfoTypeConfig() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2ReplaceWithInfoTypeConfig {
		return v.ReplaceWithInfoTypeConfig
	}).(GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput)
}

// Time extraction
func (o GooglePrivacyDlpV2PrimitiveTransformationOutput) TimePartConfig() GooglePrivacyDlpV2TimePartConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2TimePartConfig {
		return v.TimePartConfig
	}).(GooglePrivacyDlpV2TimePartConfigPtrOutput)
}

type GooglePrivacyDlpV2PrimitiveTransformationPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PrimitiveTransformation)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) ToGooglePrivacyDlpV2PrimitiveTransformationPtrOutput() GooglePrivacyDlpV2PrimitiveTransformationPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) ToGooglePrivacyDlpV2PrimitiveTransformationPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrimitiveTransformationPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) Elem() GooglePrivacyDlpV2PrimitiveTransformationOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrimitiveTransformation) GooglePrivacyDlpV2PrimitiveTransformation {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2PrimitiveTransformation
		return ret
	}).(GooglePrivacyDlpV2PrimitiveTransformationOutput)
}

// Bucketing
func (o GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) BucketingConfig() GooglePrivacyDlpV2BucketingConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2BucketingConfig {
		if v == nil {
			return nil
		}
		return v.BucketingConfig
	}).(GooglePrivacyDlpV2BucketingConfigPtrOutput)
}

// Mask
func (o GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) CharacterMaskConfig() GooglePrivacyDlpV2CharacterMaskConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2CharacterMaskConfig {
		if v == nil {
			return nil
		}
		return v.CharacterMaskConfig
	}).(GooglePrivacyDlpV2CharacterMaskConfigPtrOutput)
}

// Deterministic Crypto
func (o GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) CryptoDeterministicConfig() GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2CryptoDeterministicConfig {
		if v == nil {
			return nil
		}
		return v.CryptoDeterministicConfig
	}).(GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput)
}

// Crypto
func (o GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) CryptoHashConfig() GooglePrivacyDlpV2CryptoHashConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2CryptoHashConfig {
		if v == nil {
			return nil
		}
		return v.CryptoHashConfig
	}).(GooglePrivacyDlpV2CryptoHashConfigPtrOutput)
}

// Ffx-Fpe
func (o GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) CryptoReplaceFfxFpeConfig() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig {
		if v == nil {
			return nil
		}
		return v.CryptoReplaceFfxFpeConfig
	}).(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput)
}

// Date Shift
func (o GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) DateShiftConfig() GooglePrivacyDlpV2DateShiftConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2DateShiftConfig {
		if v == nil {
			return nil
		}
		return v.DateShiftConfig
	}).(GooglePrivacyDlpV2DateShiftConfigPtrOutput)
}

// Fixed size bucketing
func (o GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) FixedSizeBucketingConfig() GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2FixedSizeBucketingConfig {
		if v == nil {
			return nil
		}
		return v.FixedSizeBucketingConfig
	}).(GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput)
}

// Redact
func (o GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) RedactConfig() GooglePrivacyDlpV2RedactConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2RedactConfig {
		if v == nil {
			return nil
		}
		return v.RedactConfig
	}).(GooglePrivacyDlpV2RedactConfigPtrOutput)
}

// Replace
func (o GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) ReplaceConfig() GooglePrivacyDlpV2ReplaceValueConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2ReplaceValueConfig {
		if v == nil {
			return nil
		}
		return v.ReplaceConfig
	}).(GooglePrivacyDlpV2ReplaceValueConfigPtrOutput)
}

// Replace with infotype
func (o GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) ReplaceWithInfoTypeConfig() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2ReplaceWithInfoTypeConfig {
		if v == nil {
			return nil
		}
		return v.ReplaceWithInfoTypeConfig
	}).(GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput)
}

// Time extraction
func (o GooglePrivacyDlpV2PrimitiveTransformationPtrOutput) TimePartConfig() GooglePrivacyDlpV2TimePartConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrimitiveTransformation) *GooglePrivacyDlpV2TimePartConfig {
		if v == nil {
			return nil
		}
		return v.TimePartConfig
	}).(GooglePrivacyDlpV2TimePartConfigPtrOutput)
}

// A rule for transforming a value.
type GooglePrivacyDlpV2PrimitiveTransformationResponse struct {
	// Bucketing
	BucketingConfig GooglePrivacyDlpV2BucketingConfigResponse `pulumi:"bucketingConfig"`
	// Mask
	CharacterMaskConfig GooglePrivacyDlpV2CharacterMaskConfigResponse `pulumi:"characterMaskConfig"`
	// Deterministic Crypto
	CryptoDeterministicConfig GooglePrivacyDlpV2CryptoDeterministicConfigResponse `pulumi:"cryptoDeterministicConfig"`
	// Crypto
	CryptoHashConfig GooglePrivacyDlpV2CryptoHashConfigResponse `pulumi:"cryptoHashConfig"`
	// Ffx-Fpe
	CryptoReplaceFfxFpeConfig GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse `pulumi:"cryptoReplaceFfxFpeConfig"`
	// Date Shift
	DateShiftConfig GooglePrivacyDlpV2DateShiftConfigResponse `pulumi:"dateShiftConfig"`
	// Fixed size bucketing
	FixedSizeBucketingConfig GooglePrivacyDlpV2FixedSizeBucketingConfigResponse `pulumi:"fixedSizeBucketingConfig"`
	// Redact
	RedactConfig GooglePrivacyDlpV2RedactConfigResponse `pulumi:"redactConfig"`
	// Replace
	ReplaceConfig GooglePrivacyDlpV2ReplaceValueConfigResponse `pulumi:"replaceConfig"`
	// Replace with infotype
	ReplaceWithInfoTypeConfig GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse `pulumi:"replaceWithInfoTypeConfig"`
	// Time extraction
	TimePartConfig GooglePrivacyDlpV2TimePartConfigResponse `pulumi:"timePartConfig"`
}

// GooglePrivacyDlpV2PrimitiveTransformationResponseInput is an input type that accepts GooglePrivacyDlpV2PrimitiveTransformationResponseArgs and GooglePrivacyDlpV2PrimitiveTransformationResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PrimitiveTransformationResponseInput` via:
//
//          GooglePrivacyDlpV2PrimitiveTransformationResponseArgs{...}
type GooglePrivacyDlpV2PrimitiveTransformationResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PrimitiveTransformationResponseOutput() GooglePrivacyDlpV2PrimitiveTransformationResponseOutput
	ToGooglePrivacyDlpV2PrimitiveTransformationResponseOutputWithContext(context.Context) GooglePrivacyDlpV2PrimitiveTransformationResponseOutput
}

// A rule for transforming a value.
type GooglePrivacyDlpV2PrimitiveTransformationResponseArgs struct {
	// Bucketing
	BucketingConfig GooglePrivacyDlpV2BucketingConfigResponseInput `pulumi:"bucketingConfig"`
	// Mask
	CharacterMaskConfig GooglePrivacyDlpV2CharacterMaskConfigResponseInput `pulumi:"characterMaskConfig"`
	// Deterministic Crypto
	CryptoDeterministicConfig GooglePrivacyDlpV2CryptoDeterministicConfigResponseInput `pulumi:"cryptoDeterministicConfig"`
	// Crypto
	CryptoHashConfig GooglePrivacyDlpV2CryptoHashConfigResponseInput `pulumi:"cryptoHashConfig"`
	// Ffx-Fpe
	CryptoReplaceFfxFpeConfig GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseInput `pulumi:"cryptoReplaceFfxFpeConfig"`
	// Date Shift
	DateShiftConfig GooglePrivacyDlpV2DateShiftConfigResponseInput `pulumi:"dateShiftConfig"`
	// Fixed size bucketing
	FixedSizeBucketingConfig GooglePrivacyDlpV2FixedSizeBucketingConfigResponseInput `pulumi:"fixedSizeBucketingConfig"`
	// Redact
	RedactConfig GooglePrivacyDlpV2RedactConfigResponseInput `pulumi:"redactConfig"`
	// Replace
	ReplaceConfig GooglePrivacyDlpV2ReplaceValueConfigResponseInput `pulumi:"replaceConfig"`
	// Replace with infotype
	ReplaceWithInfoTypeConfig GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseInput `pulumi:"replaceWithInfoTypeConfig"`
	// Time extraction
	TimePartConfig GooglePrivacyDlpV2TimePartConfigResponseInput `pulumi:"timePartConfig"`
}

func (GooglePrivacyDlpV2PrimitiveTransformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PrimitiveTransformationResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2PrimitiveTransformationResponseArgs) ToGooglePrivacyDlpV2PrimitiveTransformationResponseOutput() GooglePrivacyDlpV2PrimitiveTransformationResponseOutput {
	return i.ToGooglePrivacyDlpV2PrimitiveTransformationResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PrimitiveTransformationResponseArgs) ToGooglePrivacyDlpV2PrimitiveTransformationResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrimitiveTransformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PrimitiveTransformationResponseOutput)
}

// A rule for transforming a value.
type GooglePrivacyDlpV2PrimitiveTransformationResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PrimitiveTransformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PrimitiveTransformationResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PrimitiveTransformationResponseOutput) ToGooglePrivacyDlpV2PrimitiveTransformationResponseOutput() GooglePrivacyDlpV2PrimitiveTransformationResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2PrimitiveTransformationResponseOutput) ToGooglePrivacyDlpV2PrimitiveTransformationResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrimitiveTransformationResponseOutput {
	return o
}

// Bucketing
func (o GooglePrivacyDlpV2PrimitiveTransformationResponseOutput) BucketingConfig() GooglePrivacyDlpV2BucketingConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformationResponse) GooglePrivacyDlpV2BucketingConfigResponse {
		return v.BucketingConfig
	}).(GooglePrivacyDlpV2BucketingConfigResponseOutput)
}

// Mask
func (o GooglePrivacyDlpV2PrimitiveTransformationResponseOutput) CharacterMaskConfig() GooglePrivacyDlpV2CharacterMaskConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformationResponse) GooglePrivacyDlpV2CharacterMaskConfigResponse {
		return v.CharacterMaskConfig
	}).(GooglePrivacyDlpV2CharacterMaskConfigResponseOutput)
}

// Deterministic Crypto
func (o GooglePrivacyDlpV2PrimitiveTransformationResponseOutput) CryptoDeterministicConfig() GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformationResponse) GooglePrivacyDlpV2CryptoDeterministicConfigResponse {
		return v.CryptoDeterministicConfig
	}).(GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput)
}

// Crypto
func (o GooglePrivacyDlpV2PrimitiveTransformationResponseOutput) CryptoHashConfig() GooglePrivacyDlpV2CryptoHashConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformationResponse) GooglePrivacyDlpV2CryptoHashConfigResponse {
		return v.CryptoHashConfig
	}).(GooglePrivacyDlpV2CryptoHashConfigResponseOutput)
}

// Ffx-Fpe
func (o GooglePrivacyDlpV2PrimitiveTransformationResponseOutput) CryptoReplaceFfxFpeConfig() GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformationResponse) GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse {
		return v.CryptoReplaceFfxFpeConfig
	}).(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput)
}

// Date Shift
func (o GooglePrivacyDlpV2PrimitiveTransformationResponseOutput) DateShiftConfig() GooglePrivacyDlpV2DateShiftConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformationResponse) GooglePrivacyDlpV2DateShiftConfigResponse {
		return v.DateShiftConfig
	}).(GooglePrivacyDlpV2DateShiftConfigResponseOutput)
}

// Fixed size bucketing
func (o GooglePrivacyDlpV2PrimitiveTransformationResponseOutput) FixedSizeBucketingConfig() GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformationResponse) GooglePrivacyDlpV2FixedSizeBucketingConfigResponse {
		return v.FixedSizeBucketingConfig
	}).(GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput)
}

// Redact
func (o GooglePrivacyDlpV2PrimitiveTransformationResponseOutput) RedactConfig() GooglePrivacyDlpV2RedactConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformationResponse) GooglePrivacyDlpV2RedactConfigResponse {
		return v.RedactConfig
	}).(GooglePrivacyDlpV2RedactConfigResponseOutput)
}

// Replace
func (o GooglePrivacyDlpV2PrimitiveTransformationResponseOutput) ReplaceConfig() GooglePrivacyDlpV2ReplaceValueConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformationResponse) GooglePrivacyDlpV2ReplaceValueConfigResponse {
		return v.ReplaceConfig
	}).(GooglePrivacyDlpV2ReplaceValueConfigResponseOutput)
}

// Replace with infotype
func (o GooglePrivacyDlpV2PrimitiveTransformationResponseOutput) ReplaceWithInfoTypeConfig() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformationResponse) GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse {
		return v.ReplaceWithInfoTypeConfig
	}).(GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput)
}

// Time extraction
func (o GooglePrivacyDlpV2PrimitiveTransformationResponseOutput) TimePartConfig() GooglePrivacyDlpV2TimePartConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrimitiveTransformationResponse) GooglePrivacyDlpV2TimePartConfigResponse {
		return v.TimePartConfig
	}).(GooglePrivacyDlpV2TimePartConfigResponseOutput)
}

// Privacy metric to compute for reidentification risk analysis.
type GooglePrivacyDlpV2PrivacyMetric struct {
	// Categorical stats
	CategoricalStatsConfig *GooglePrivacyDlpV2CategoricalStatsConfig `pulumi:"categoricalStatsConfig"`
	// delta-presence
	DeltaPresenceEstimationConfig *GooglePrivacyDlpV2DeltaPresenceEstimationConfig `pulumi:"deltaPresenceEstimationConfig"`
	// K-anonymity
	KAnonymityConfig *GooglePrivacyDlpV2KAnonymityConfig `pulumi:"kAnonymityConfig"`
	// k-map
	KMapEstimationConfig *GooglePrivacyDlpV2KMapEstimationConfig `pulumi:"kMapEstimationConfig"`
	// l-diversity
	LDiversityConfig *GooglePrivacyDlpV2LDiversityConfig `pulumi:"lDiversityConfig"`
	// Numerical stats
	NumericalStatsConfig *GooglePrivacyDlpV2NumericalStatsConfig `pulumi:"numericalStatsConfig"`
}

// GooglePrivacyDlpV2PrivacyMetricInput is an input type that accepts GooglePrivacyDlpV2PrivacyMetricArgs and GooglePrivacyDlpV2PrivacyMetricOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PrivacyMetricInput` via:
//
//          GooglePrivacyDlpV2PrivacyMetricArgs{...}
type GooglePrivacyDlpV2PrivacyMetricInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PrivacyMetricOutput() GooglePrivacyDlpV2PrivacyMetricOutput
	ToGooglePrivacyDlpV2PrivacyMetricOutputWithContext(context.Context) GooglePrivacyDlpV2PrivacyMetricOutput
}

// Privacy metric to compute for reidentification risk analysis.
type GooglePrivacyDlpV2PrivacyMetricArgs struct {
	// Categorical stats
	CategoricalStatsConfig GooglePrivacyDlpV2CategoricalStatsConfigPtrInput `pulumi:"categoricalStatsConfig"`
	// delta-presence
	DeltaPresenceEstimationConfig GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrInput `pulumi:"deltaPresenceEstimationConfig"`
	// K-anonymity
	KAnonymityConfig GooglePrivacyDlpV2KAnonymityConfigPtrInput `pulumi:"kAnonymityConfig"`
	// k-map
	KMapEstimationConfig GooglePrivacyDlpV2KMapEstimationConfigPtrInput `pulumi:"kMapEstimationConfig"`
	// l-diversity
	LDiversityConfig GooglePrivacyDlpV2LDiversityConfigPtrInput `pulumi:"lDiversityConfig"`
	// Numerical stats
	NumericalStatsConfig GooglePrivacyDlpV2NumericalStatsConfigPtrInput `pulumi:"numericalStatsConfig"`
}

func (GooglePrivacyDlpV2PrivacyMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PrivacyMetric)(nil)).Elem()
}

func (i GooglePrivacyDlpV2PrivacyMetricArgs) ToGooglePrivacyDlpV2PrivacyMetricOutput() GooglePrivacyDlpV2PrivacyMetricOutput {
	return i.ToGooglePrivacyDlpV2PrivacyMetricOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PrivacyMetricArgs) ToGooglePrivacyDlpV2PrivacyMetricOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrivacyMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PrivacyMetricOutput)
}

func (i GooglePrivacyDlpV2PrivacyMetricArgs) ToGooglePrivacyDlpV2PrivacyMetricPtrOutput() GooglePrivacyDlpV2PrivacyMetricPtrOutput {
	return i.ToGooglePrivacyDlpV2PrivacyMetricPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PrivacyMetricArgs) ToGooglePrivacyDlpV2PrivacyMetricPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrivacyMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PrivacyMetricOutput).ToGooglePrivacyDlpV2PrivacyMetricPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2PrivacyMetricPtrInput is an input type that accepts GooglePrivacyDlpV2PrivacyMetricArgs, GooglePrivacyDlpV2PrivacyMetricPtr and GooglePrivacyDlpV2PrivacyMetricPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PrivacyMetricPtrInput` via:
//
//          GooglePrivacyDlpV2PrivacyMetricArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2PrivacyMetricPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PrivacyMetricPtrOutput() GooglePrivacyDlpV2PrivacyMetricPtrOutput
	ToGooglePrivacyDlpV2PrivacyMetricPtrOutputWithContext(context.Context) GooglePrivacyDlpV2PrivacyMetricPtrOutput
}

type googlePrivacyDlpV2PrivacyMetricPtrType GooglePrivacyDlpV2PrivacyMetricArgs

func GooglePrivacyDlpV2PrivacyMetricPtr(v *GooglePrivacyDlpV2PrivacyMetricArgs) GooglePrivacyDlpV2PrivacyMetricPtrInput {
	return (*googlePrivacyDlpV2PrivacyMetricPtrType)(v)
}

func (*googlePrivacyDlpV2PrivacyMetricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PrivacyMetric)(nil)).Elem()
}

func (i *googlePrivacyDlpV2PrivacyMetricPtrType) ToGooglePrivacyDlpV2PrivacyMetricPtrOutput() GooglePrivacyDlpV2PrivacyMetricPtrOutput {
	return i.ToGooglePrivacyDlpV2PrivacyMetricPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2PrivacyMetricPtrType) ToGooglePrivacyDlpV2PrivacyMetricPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrivacyMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PrivacyMetricPtrOutput)
}

// Privacy metric to compute for reidentification risk analysis.
type GooglePrivacyDlpV2PrivacyMetricOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PrivacyMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PrivacyMetric)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PrivacyMetricOutput) ToGooglePrivacyDlpV2PrivacyMetricOutput() GooglePrivacyDlpV2PrivacyMetricOutput {
	return o
}

func (o GooglePrivacyDlpV2PrivacyMetricOutput) ToGooglePrivacyDlpV2PrivacyMetricOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrivacyMetricOutput {
	return o
}

func (o GooglePrivacyDlpV2PrivacyMetricOutput) ToGooglePrivacyDlpV2PrivacyMetricPtrOutput() GooglePrivacyDlpV2PrivacyMetricPtrOutput {
	return o.ToGooglePrivacyDlpV2PrivacyMetricPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2PrivacyMetricOutput) ToGooglePrivacyDlpV2PrivacyMetricPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrivacyMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2PrivacyMetric) *GooglePrivacyDlpV2PrivacyMetric {
		return &v
	}).(GooglePrivacyDlpV2PrivacyMetricPtrOutput)
}

// Categorical stats
func (o GooglePrivacyDlpV2PrivacyMetricOutput) CategoricalStatsConfig() GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrivacyMetric) *GooglePrivacyDlpV2CategoricalStatsConfig {
		return v.CategoricalStatsConfig
	}).(GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput)
}

// delta-presence
func (o GooglePrivacyDlpV2PrivacyMetricOutput) DeltaPresenceEstimationConfig() GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrivacyMetric) *GooglePrivacyDlpV2DeltaPresenceEstimationConfig {
		return v.DeltaPresenceEstimationConfig
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput)
}

// K-anonymity
func (o GooglePrivacyDlpV2PrivacyMetricOutput) KAnonymityConfig() GooglePrivacyDlpV2KAnonymityConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrivacyMetric) *GooglePrivacyDlpV2KAnonymityConfig { return v.KAnonymityConfig }).(GooglePrivacyDlpV2KAnonymityConfigPtrOutput)
}

// k-map
func (o GooglePrivacyDlpV2PrivacyMetricOutput) KMapEstimationConfig() GooglePrivacyDlpV2KMapEstimationConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrivacyMetric) *GooglePrivacyDlpV2KMapEstimationConfig {
		return v.KMapEstimationConfig
	}).(GooglePrivacyDlpV2KMapEstimationConfigPtrOutput)
}

// l-diversity
func (o GooglePrivacyDlpV2PrivacyMetricOutput) LDiversityConfig() GooglePrivacyDlpV2LDiversityConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrivacyMetric) *GooglePrivacyDlpV2LDiversityConfig { return v.LDiversityConfig }).(GooglePrivacyDlpV2LDiversityConfigPtrOutput)
}

// Numerical stats
func (o GooglePrivacyDlpV2PrivacyMetricOutput) NumericalStatsConfig() GooglePrivacyDlpV2NumericalStatsConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrivacyMetric) *GooglePrivacyDlpV2NumericalStatsConfig {
		return v.NumericalStatsConfig
	}).(GooglePrivacyDlpV2NumericalStatsConfigPtrOutput)
}

type GooglePrivacyDlpV2PrivacyMetricPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PrivacyMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PrivacyMetric)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PrivacyMetricPtrOutput) ToGooglePrivacyDlpV2PrivacyMetricPtrOutput() GooglePrivacyDlpV2PrivacyMetricPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PrivacyMetricPtrOutput) ToGooglePrivacyDlpV2PrivacyMetricPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrivacyMetricPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PrivacyMetricPtrOutput) Elem() GooglePrivacyDlpV2PrivacyMetricOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrivacyMetric) GooglePrivacyDlpV2PrivacyMetric {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2PrivacyMetric
		return ret
	}).(GooglePrivacyDlpV2PrivacyMetricOutput)
}

// Categorical stats
func (o GooglePrivacyDlpV2PrivacyMetricPtrOutput) CategoricalStatsConfig() GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrivacyMetric) *GooglePrivacyDlpV2CategoricalStatsConfig {
		if v == nil {
			return nil
		}
		return v.CategoricalStatsConfig
	}).(GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput)
}

// delta-presence
func (o GooglePrivacyDlpV2PrivacyMetricPtrOutput) DeltaPresenceEstimationConfig() GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrivacyMetric) *GooglePrivacyDlpV2DeltaPresenceEstimationConfig {
		if v == nil {
			return nil
		}
		return v.DeltaPresenceEstimationConfig
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput)
}

// K-anonymity
func (o GooglePrivacyDlpV2PrivacyMetricPtrOutput) KAnonymityConfig() GooglePrivacyDlpV2KAnonymityConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrivacyMetric) *GooglePrivacyDlpV2KAnonymityConfig {
		if v == nil {
			return nil
		}
		return v.KAnonymityConfig
	}).(GooglePrivacyDlpV2KAnonymityConfigPtrOutput)
}

// k-map
func (o GooglePrivacyDlpV2PrivacyMetricPtrOutput) KMapEstimationConfig() GooglePrivacyDlpV2KMapEstimationConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrivacyMetric) *GooglePrivacyDlpV2KMapEstimationConfig {
		if v == nil {
			return nil
		}
		return v.KMapEstimationConfig
	}).(GooglePrivacyDlpV2KMapEstimationConfigPtrOutput)
}

// l-diversity
func (o GooglePrivacyDlpV2PrivacyMetricPtrOutput) LDiversityConfig() GooglePrivacyDlpV2LDiversityConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrivacyMetric) *GooglePrivacyDlpV2LDiversityConfig {
		if v == nil {
			return nil
		}
		return v.LDiversityConfig
	}).(GooglePrivacyDlpV2LDiversityConfigPtrOutput)
}

// Numerical stats
func (o GooglePrivacyDlpV2PrivacyMetricPtrOutput) NumericalStatsConfig() GooglePrivacyDlpV2NumericalStatsConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrivacyMetric) *GooglePrivacyDlpV2NumericalStatsConfig {
		if v == nil {
			return nil
		}
		return v.NumericalStatsConfig
	}).(GooglePrivacyDlpV2NumericalStatsConfigPtrOutput)
}

// Privacy metric to compute for reidentification risk analysis.
type GooglePrivacyDlpV2PrivacyMetricResponse struct {
	// Categorical stats
	CategoricalStatsConfig GooglePrivacyDlpV2CategoricalStatsConfigResponse `pulumi:"categoricalStatsConfig"`
	// delta-presence
	DeltaPresenceEstimationConfig GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse `pulumi:"deltaPresenceEstimationConfig"`
	// K-anonymity
	KAnonymityConfig GooglePrivacyDlpV2KAnonymityConfigResponse `pulumi:"kAnonymityConfig"`
	// k-map
	KMapEstimationConfig GooglePrivacyDlpV2KMapEstimationConfigResponse `pulumi:"kMapEstimationConfig"`
	// l-diversity
	LDiversityConfig GooglePrivacyDlpV2LDiversityConfigResponse `pulumi:"lDiversityConfig"`
	// Numerical stats
	NumericalStatsConfig GooglePrivacyDlpV2NumericalStatsConfigResponse `pulumi:"numericalStatsConfig"`
}

// GooglePrivacyDlpV2PrivacyMetricResponseInput is an input type that accepts GooglePrivacyDlpV2PrivacyMetricResponseArgs and GooglePrivacyDlpV2PrivacyMetricResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PrivacyMetricResponseInput` via:
//
//          GooglePrivacyDlpV2PrivacyMetricResponseArgs{...}
type GooglePrivacyDlpV2PrivacyMetricResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PrivacyMetricResponseOutput() GooglePrivacyDlpV2PrivacyMetricResponseOutput
	ToGooglePrivacyDlpV2PrivacyMetricResponseOutputWithContext(context.Context) GooglePrivacyDlpV2PrivacyMetricResponseOutput
}

// Privacy metric to compute for reidentification risk analysis.
type GooglePrivacyDlpV2PrivacyMetricResponseArgs struct {
	// Categorical stats
	CategoricalStatsConfig GooglePrivacyDlpV2CategoricalStatsConfigResponseInput `pulumi:"categoricalStatsConfig"`
	// delta-presence
	DeltaPresenceEstimationConfig GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseInput `pulumi:"deltaPresenceEstimationConfig"`
	// K-anonymity
	KAnonymityConfig GooglePrivacyDlpV2KAnonymityConfigResponseInput `pulumi:"kAnonymityConfig"`
	// k-map
	KMapEstimationConfig GooglePrivacyDlpV2KMapEstimationConfigResponseInput `pulumi:"kMapEstimationConfig"`
	// l-diversity
	LDiversityConfig GooglePrivacyDlpV2LDiversityConfigResponseInput `pulumi:"lDiversityConfig"`
	// Numerical stats
	NumericalStatsConfig GooglePrivacyDlpV2NumericalStatsConfigResponseInput `pulumi:"numericalStatsConfig"`
}

func (GooglePrivacyDlpV2PrivacyMetricResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PrivacyMetricResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2PrivacyMetricResponseArgs) ToGooglePrivacyDlpV2PrivacyMetricResponseOutput() GooglePrivacyDlpV2PrivacyMetricResponseOutput {
	return i.ToGooglePrivacyDlpV2PrivacyMetricResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PrivacyMetricResponseArgs) ToGooglePrivacyDlpV2PrivacyMetricResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrivacyMetricResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PrivacyMetricResponseOutput)
}

func (i GooglePrivacyDlpV2PrivacyMetricResponseArgs) ToGooglePrivacyDlpV2PrivacyMetricResponsePtrOutput() GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2PrivacyMetricResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PrivacyMetricResponseArgs) ToGooglePrivacyDlpV2PrivacyMetricResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PrivacyMetricResponseOutput).ToGooglePrivacyDlpV2PrivacyMetricResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2PrivacyMetricResponsePtrInput is an input type that accepts GooglePrivacyDlpV2PrivacyMetricResponseArgs, GooglePrivacyDlpV2PrivacyMetricResponsePtr and GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PrivacyMetricResponsePtrInput` via:
//
//          GooglePrivacyDlpV2PrivacyMetricResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2PrivacyMetricResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PrivacyMetricResponsePtrOutput() GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput
	ToGooglePrivacyDlpV2PrivacyMetricResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput
}

type googlePrivacyDlpV2PrivacyMetricResponsePtrType GooglePrivacyDlpV2PrivacyMetricResponseArgs

func GooglePrivacyDlpV2PrivacyMetricResponsePtr(v *GooglePrivacyDlpV2PrivacyMetricResponseArgs) GooglePrivacyDlpV2PrivacyMetricResponsePtrInput {
	return (*googlePrivacyDlpV2PrivacyMetricResponsePtrType)(v)
}

func (*googlePrivacyDlpV2PrivacyMetricResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PrivacyMetricResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2PrivacyMetricResponsePtrType) ToGooglePrivacyDlpV2PrivacyMetricResponsePtrOutput() GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2PrivacyMetricResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2PrivacyMetricResponsePtrType) ToGooglePrivacyDlpV2PrivacyMetricResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput)
}

// Privacy metric to compute for reidentification risk analysis.
type GooglePrivacyDlpV2PrivacyMetricResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PrivacyMetricResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PrivacyMetricResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PrivacyMetricResponseOutput) ToGooglePrivacyDlpV2PrivacyMetricResponseOutput() GooglePrivacyDlpV2PrivacyMetricResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2PrivacyMetricResponseOutput) ToGooglePrivacyDlpV2PrivacyMetricResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrivacyMetricResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2PrivacyMetricResponseOutput) ToGooglePrivacyDlpV2PrivacyMetricResponsePtrOutput() GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2PrivacyMetricResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2PrivacyMetricResponseOutput) ToGooglePrivacyDlpV2PrivacyMetricResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2PrivacyMetricResponse) *GooglePrivacyDlpV2PrivacyMetricResponse {
		return &v
	}).(GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput)
}

// Categorical stats
func (o GooglePrivacyDlpV2PrivacyMetricResponseOutput) CategoricalStatsConfig() GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrivacyMetricResponse) GooglePrivacyDlpV2CategoricalStatsConfigResponse {
		return v.CategoricalStatsConfig
	}).(GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput)
}

// delta-presence
func (o GooglePrivacyDlpV2PrivacyMetricResponseOutput) DeltaPresenceEstimationConfig() GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrivacyMetricResponse) GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse {
		return v.DeltaPresenceEstimationConfig
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput)
}

// K-anonymity
func (o GooglePrivacyDlpV2PrivacyMetricResponseOutput) KAnonymityConfig() GooglePrivacyDlpV2KAnonymityConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrivacyMetricResponse) GooglePrivacyDlpV2KAnonymityConfigResponse {
		return v.KAnonymityConfig
	}).(GooglePrivacyDlpV2KAnonymityConfigResponseOutput)
}

// k-map
func (o GooglePrivacyDlpV2PrivacyMetricResponseOutput) KMapEstimationConfig() GooglePrivacyDlpV2KMapEstimationConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrivacyMetricResponse) GooglePrivacyDlpV2KMapEstimationConfigResponse {
		return v.KMapEstimationConfig
	}).(GooglePrivacyDlpV2KMapEstimationConfigResponseOutput)
}

// l-diversity
func (o GooglePrivacyDlpV2PrivacyMetricResponseOutput) LDiversityConfig() GooglePrivacyDlpV2LDiversityConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrivacyMetricResponse) GooglePrivacyDlpV2LDiversityConfigResponse {
		return v.LDiversityConfig
	}).(GooglePrivacyDlpV2LDiversityConfigResponseOutput)
}

// Numerical stats
func (o GooglePrivacyDlpV2PrivacyMetricResponseOutput) NumericalStatsConfig() GooglePrivacyDlpV2NumericalStatsConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PrivacyMetricResponse) GooglePrivacyDlpV2NumericalStatsConfigResponse {
		return v.NumericalStatsConfig
	}).(GooglePrivacyDlpV2NumericalStatsConfigResponseOutput)
}

type GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PrivacyMetricResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput) ToGooglePrivacyDlpV2PrivacyMetricResponsePtrOutput() GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput) ToGooglePrivacyDlpV2PrivacyMetricResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput) Elem() GooglePrivacyDlpV2PrivacyMetricResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrivacyMetricResponse) GooglePrivacyDlpV2PrivacyMetricResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2PrivacyMetricResponse
		return ret
	}).(GooglePrivacyDlpV2PrivacyMetricResponseOutput)
}

// Categorical stats
func (o GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput) CategoricalStatsConfig() GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrivacyMetricResponse) *GooglePrivacyDlpV2CategoricalStatsConfigResponse {
		if v == nil {
			return nil
		}
		return &v.CategoricalStatsConfig
	}).(GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput)
}

// delta-presence
func (o GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput) DeltaPresenceEstimationConfig() GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrivacyMetricResponse) *GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponse {
		if v == nil {
			return nil
		}
		return &v.DeltaPresenceEstimationConfig
	}).(GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput)
}

// K-anonymity
func (o GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput) KAnonymityConfig() GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrivacyMetricResponse) *GooglePrivacyDlpV2KAnonymityConfigResponse {
		if v == nil {
			return nil
		}
		return &v.KAnonymityConfig
	}).(GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput)
}

// k-map
func (o GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput) KMapEstimationConfig() GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrivacyMetricResponse) *GooglePrivacyDlpV2KMapEstimationConfigResponse {
		if v == nil {
			return nil
		}
		return &v.KMapEstimationConfig
	}).(GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput)
}

// l-diversity
func (o GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput) LDiversityConfig() GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrivacyMetricResponse) *GooglePrivacyDlpV2LDiversityConfigResponse {
		if v == nil {
			return nil
		}
		return &v.LDiversityConfig
	}).(GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput)
}

// Numerical stats
func (o GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput) NumericalStatsConfig() GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PrivacyMetricResponse) *GooglePrivacyDlpV2NumericalStatsConfigResponse {
		if v == nil {
			return nil
		}
		return &v.NumericalStatsConfig
	}).(GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput)
}

// Message for specifying a window around a finding to apply a detection rule.
type GooglePrivacyDlpV2Proximity struct {
	// Number of characters after the finding to consider.
	WindowAfter *int `pulumi:"windowAfter"`
	// Number of characters before the finding to consider.
	WindowBefore *int `pulumi:"windowBefore"`
}

// GooglePrivacyDlpV2ProximityInput is an input type that accepts GooglePrivacyDlpV2ProximityArgs and GooglePrivacyDlpV2ProximityOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ProximityInput` via:
//
//          GooglePrivacyDlpV2ProximityArgs{...}
type GooglePrivacyDlpV2ProximityInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ProximityOutput() GooglePrivacyDlpV2ProximityOutput
	ToGooglePrivacyDlpV2ProximityOutputWithContext(context.Context) GooglePrivacyDlpV2ProximityOutput
}

// Message for specifying a window around a finding to apply a detection rule.
type GooglePrivacyDlpV2ProximityArgs struct {
	// Number of characters after the finding to consider.
	WindowAfter pulumi.IntPtrInput `pulumi:"windowAfter"`
	// Number of characters before the finding to consider.
	WindowBefore pulumi.IntPtrInput `pulumi:"windowBefore"`
}

func (GooglePrivacyDlpV2ProximityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Proximity)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ProximityArgs) ToGooglePrivacyDlpV2ProximityOutput() GooglePrivacyDlpV2ProximityOutput {
	return i.ToGooglePrivacyDlpV2ProximityOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ProximityArgs) ToGooglePrivacyDlpV2ProximityOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ProximityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ProximityOutput)
}

func (i GooglePrivacyDlpV2ProximityArgs) ToGooglePrivacyDlpV2ProximityPtrOutput() GooglePrivacyDlpV2ProximityPtrOutput {
	return i.ToGooglePrivacyDlpV2ProximityPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ProximityArgs) ToGooglePrivacyDlpV2ProximityPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ProximityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ProximityOutput).ToGooglePrivacyDlpV2ProximityPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2ProximityPtrInput is an input type that accepts GooglePrivacyDlpV2ProximityArgs, GooglePrivacyDlpV2ProximityPtr and GooglePrivacyDlpV2ProximityPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ProximityPtrInput` via:
//
//          GooglePrivacyDlpV2ProximityArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2ProximityPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ProximityPtrOutput() GooglePrivacyDlpV2ProximityPtrOutput
	ToGooglePrivacyDlpV2ProximityPtrOutputWithContext(context.Context) GooglePrivacyDlpV2ProximityPtrOutput
}

type googlePrivacyDlpV2ProximityPtrType GooglePrivacyDlpV2ProximityArgs

func GooglePrivacyDlpV2ProximityPtr(v *GooglePrivacyDlpV2ProximityArgs) GooglePrivacyDlpV2ProximityPtrInput {
	return (*googlePrivacyDlpV2ProximityPtrType)(v)
}

func (*googlePrivacyDlpV2ProximityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Proximity)(nil)).Elem()
}

func (i *googlePrivacyDlpV2ProximityPtrType) ToGooglePrivacyDlpV2ProximityPtrOutput() GooglePrivacyDlpV2ProximityPtrOutput {
	return i.ToGooglePrivacyDlpV2ProximityPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2ProximityPtrType) ToGooglePrivacyDlpV2ProximityPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ProximityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ProximityPtrOutput)
}

// Message for specifying a window around a finding to apply a detection rule.
type GooglePrivacyDlpV2ProximityOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ProximityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Proximity)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ProximityOutput) ToGooglePrivacyDlpV2ProximityOutput() GooglePrivacyDlpV2ProximityOutput {
	return o
}

func (o GooglePrivacyDlpV2ProximityOutput) ToGooglePrivacyDlpV2ProximityOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ProximityOutput {
	return o
}

func (o GooglePrivacyDlpV2ProximityOutput) ToGooglePrivacyDlpV2ProximityPtrOutput() GooglePrivacyDlpV2ProximityPtrOutput {
	return o.ToGooglePrivacyDlpV2ProximityPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2ProximityOutput) ToGooglePrivacyDlpV2ProximityPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ProximityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2Proximity) *GooglePrivacyDlpV2Proximity {
		return &v
	}).(GooglePrivacyDlpV2ProximityPtrOutput)
}

// Number of characters after the finding to consider.
func (o GooglePrivacyDlpV2ProximityOutput) WindowAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Proximity) *int { return v.WindowAfter }).(pulumi.IntPtrOutput)
}

// Number of characters before the finding to consider.
func (o GooglePrivacyDlpV2ProximityOutput) WindowBefore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Proximity) *int { return v.WindowBefore }).(pulumi.IntPtrOutput)
}

type GooglePrivacyDlpV2ProximityPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ProximityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Proximity)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ProximityPtrOutput) ToGooglePrivacyDlpV2ProximityPtrOutput() GooglePrivacyDlpV2ProximityPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ProximityPtrOutput) ToGooglePrivacyDlpV2ProximityPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ProximityPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ProximityPtrOutput) Elem() GooglePrivacyDlpV2ProximityOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Proximity) GooglePrivacyDlpV2Proximity {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2Proximity
		return ret
	}).(GooglePrivacyDlpV2ProximityOutput)
}

// Number of characters after the finding to consider.
func (o GooglePrivacyDlpV2ProximityPtrOutput) WindowAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Proximity) *int {
		if v == nil {
			return nil
		}
		return v.WindowAfter
	}).(pulumi.IntPtrOutput)
}

// Number of characters before the finding to consider.
func (o GooglePrivacyDlpV2ProximityPtrOutput) WindowBefore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Proximity) *int {
		if v == nil {
			return nil
		}
		return v.WindowBefore
	}).(pulumi.IntPtrOutput)
}

// Message for specifying a window around a finding to apply a detection rule.
type GooglePrivacyDlpV2ProximityResponse struct {
	// Number of characters after the finding to consider.
	WindowAfter int `pulumi:"windowAfter"`
	// Number of characters before the finding to consider.
	WindowBefore int `pulumi:"windowBefore"`
}

// GooglePrivacyDlpV2ProximityResponseInput is an input type that accepts GooglePrivacyDlpV2ProximityResponseArgs and GooglePrivacyDlpV2ProximityResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ProximityResponseInput` via:
//
//          GooglePrivacyDlpV2ProximityResponseArgs{...}
type GooglePrivacyDlpV2ProximityResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ProximityResponseOutput() GooglePrivacyDlpV2ProximityResponseOutput
	ToGooglePrivacyDlpV2ProximityResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ProximityResponseOutput
}

// Message for specifying a window around a finding to apply a detection rule.
type GooglePrivacyDlpV2ProximityResponseArgs struct {
	// Number of characters after the finding to consider.
	WindowAfter pulumi.IntInput `pulumi:"windowAfter"`
	// Number of characters before the finding to consider.
	WindowBefore pulumi.IntInput `pulumi:"windowBefore"`
}

func (GooglePrivacyDlpV2ProximityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ProximityResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ProximityResponseArgs) ToGooglePrivacyDlpV2ProximityResponseOutput() GooglePrivacyDlpV2ProximityResponseOutput {
	return i.ToGooglePrivacyDlpV2ProximityResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ProximityResponseArgs) ToGooglePrivacyDlpV2ProximityResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ProximityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ProximityResponseOutput)
}

// Message for specifying a window around a finding to apply a detection rule.
type GooglePrivacyDlpV2ProximityResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ProximityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ProximityResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ProximityResponseOutput) ToGooglePrivacyDlpV2ProximityResponseOutput() GooglePrivacyDlpV2ProximityResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ProximityResponseOutput) ToGooglePrivacyDlpV2ProximityResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ProximityResponseOutput {
	return o
}

// Number of characters after the finding to consider.
func (o GooglePrivacyDlpV2ProximityResponseOutput) WindowAfter() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ProximityResponse) int { return v.WindowAfter }).(pulumi.IntOutput)
}

// Number of characters before the finding to consider.
func (o GooglePrivacyDlpV2ProximityResponseOutput) WindowBefore() pulumi.IntOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ProximityResponse) int { return v.WindowBefore }).(pulumi.IntOutput)
}

// Publish findings of a DlpJob to Cloud Data Catalog. Labels summarizing the results of the DlpJob will be applied to the entry for the resource scanned in Cloud Data Catalog. Any labels previously written by another DlpJob will be deleted. InfoType naming patterns are strictly enforced when using this feature. Note that the findings will be persisted in Cloud Data Catalog storage and are governed by Data Catalog service-specific policy, see https://cloud.google.com/terms/service-terms Only a single instance of this action can be specified and only allowed if all resources being scanned are BigQuery tables. Compatible with: Inspect
type GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog struct {
}

// GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogInput is an input type that accepts GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogArgs and GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogInput` via:
//
//          GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogArgs{...}
type GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput() GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput
	ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutputWithContext(context.Context) GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput
}

// Publish findings of a DlpJob to Cloud Data Catalog. Labels summarizing the results of the DlpJob will be applied to the entry for the resource scanned in Cloud Data Catalog. Any labels previously written by another DlpJob will be deleted. InfoType naming patterns are strictly enforced when using this feature. Note that the findings will be persisted in Cloud Data Catalog storage and are governed by Data Catalog service-specific policy, see https://cloud.google.com/terms/service-terms Only a single instance of this action can be specified and only allowed if all resources being scanned are BigQuery tables. Compatible with: Inspect
type GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogArgs struct {
}

func (GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog)(nil)).Elem()
}

func (i GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogArgs) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput() GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput {
	return i.ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogArgs) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput)
}

func (i GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogArgs) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput() GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput {
	return i.ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogArgs) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput).ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrInput is an input type that accepts GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogArgs, GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtr and GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrInput` via:
//
//          GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput() GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput
	ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutputWithContext(context.Context) GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput
}

type googlePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrType GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogArgs

func GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtr(v *GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogArgs) GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrInput {
	return (*googlePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrType)(v)
}

func (*googlePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog)(nil)).Elem()
}

func (i *googlePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrType) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput() GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput {
	return i.ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrType) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput)
}

// Publish findings of a DlpJob to Cloud Data Catalog. Labels summarizing the results of the DlpJob will be applied to the entry for the resource scanned in Cloud Data Catalog. Any labels previously written by another DlpJob will be deleted. InfoType naming patterns are strictly enforced when using this feature. Note that the findings will be persisted in Cloud Data Catalog storage and are governed by Data Catalog service-specific policy, see https://cloud.google.com/terms/service-terms Only a single instance of this action can be specified and only allowed if all resources being scanned are BigQuery tables. Compatible with: Inspect
type GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput() GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput() GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput {
	return o.ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog) *GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog {
		return &v
	}).(GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput)
}

type GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput() GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput) Elem() GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog) GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog
		return ret
	}).(GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput)
}

// Publish findings of a DlpJob to Cloud Data Catalog. Labels summarizing the results of the DlpJob will be applied to the entry for the resource scanned in Cloud Data Catalog. Any labels previously written by another DlpJob will be deleted. InfoType naming patterns are strictly enforced when using this feature. Note that the findings will be persisted in Cloud Data Catalog storage and are governed by Data Catalog service-specific policy, see https://cloud.google.com/terms/service-terms Only a single instance of this action can be specified and only allowed if all resources being scanned are BigQuery tables. Compatible with: Inspect
type GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponse struct {
}

// GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseInput is an input type that accepts GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseArgs and GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseInput` via:
//
//          GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseArgs{...}
type GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput() GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput
	ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutputWithContext(context.Context) GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput
}

// Publish findings of a DlpJob to Cloud Data Catalog. Labels summarizing the results of the DlpJob will be applied to the entry for the resource scanned in Cloud Data Catalog. Any labels previously written by another DlpJob will be deleted. InfoType naming patterns are strictly enforced when using this feature. Note that the findings will be persisted in Cloud Data Catalog storage and are governed by Data Catalog service-specific policy, see https://cloud.google.com/terms/service-terms Only a single instance of this action can be specified and only allowed if all resources being scanned are BigQuery tables. Compatible with: Inspect
type GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseArgs struct {
}

func (GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseArgs) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput() GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput {
	return i.ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseArgs) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput)
}

// Publish findings of a DlpJob to Cloud Data Catalog. Labels summarizing the results of the DlpJob will be applied to the entry for the resource scanned in Cloud Data Catalog. Any labels previously written by another DlpJob will be deleted. InfoType naming patterns are strictly enforced when using this feature. Note that the findings will be persisted in Cloud Data Catalog storage and are governed by Data Catalog service-specific policy, see https://cloud.google.com/terms/service-terms Only a single instance of this action can be specified and only allowed if all resources being scanned are BigQuery tables. Compatible with: Inspect
type GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput() GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput) ToGooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput {
	return o
}

// Publish the result summary of a DlpJob to the Cloud Security Command Center (CSCC Alpha). This action is only available for projects which are parts of an organization and whitelisted for the alpha Cloud Security Command Center. The action will publish count of finding instances and their info types. The summary of findings will be persisted in CSCC and are governed by CSCC service-specific policy, see https://cloud.google.com/terms/service-terms Only a single instance of this action can be specified. Compatible with: Inspect
type GooglePrivacyDlpV2PublishSummaryToCscc struct {
}

// GooglePrivacyDlpV2PublishSummaryToCsccInput is an input type that accepts GooglePrivacyDlpV2PublishSummaryToCsccArgs and GooglePrivacyDlpV2PublishSummaryToCsccOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PublishSummaryToCsccInput` via:
//
//          GooglePrivacyDlpV2PublishSummaryToCsccArgs{...}
type GooglePrivacyDlpV2PublishSummaryToCsccInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PublishSummaryToCsccOutput() GooglePrivacyDlpV2PublishSummaryToCsccOutput
	ToGooglePrivacyDlpV2PublishSummaryToCsccOutputWithContext(context.Context) GooglePrivacyDlpV2PublishSummaryToCsccOutput
}

// Publish the result summary of a DlpJob to the Cloud Security Command Center (CSCC Alpha). This action is only available for projects which are parts of an organization and whitelisted for the alpha Cloud Security Command Center. The action will publish count of finding instances and their info types. The summary of findings will be persisted in CSCC and are governed by CSCC service-specific policy, see https://cloud.google.com/terms/service-terms Only a single instance of this action can be specified. Compatible with: Inspect
type GooglePrivacyDlpV2PublishSummaryToCsccArgs struct {
}

func (GooglePrivacyDlpV2PublishSummaryToCsccArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishSummaryToCscc)(nil)).Elem()
}

func (i GooglePrivacyDlpV2PublishSummaryToCsccArgs) ToGooglePrivacyDlpV2PublishSummaryToCsccOutput() GooglePrivacyDlpV2PublishSummaryToCsccOutput {
	return i.ToGooglePrivacyDlpV2PublishSummaryToCsccOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PublishSummaryToCsccArgs) ToGooglePrivacyDlpV2PublishSummaryToCsccOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishSummaryToCsccOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishSummaryToCsccOutput)
}

func (i GooglePrivacyDlpV2PublishSummaryToCsccArgs) ToGooglePrivacyDlpV2PublishSummaryToCsccPtrOutput() GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput {
	return i.ToGooglePrivacyDlpV2PublishSummaryToCsccPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PublishSummaryToCsccArgs) ToGooglePrivacyDlpV2PublishSummaryToCsccPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishSummaryToCsccOutput).ToGooglePrivacyDlpV2PublishSummaryToCsccPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2PublishSummaryToCsccPtrInput is an input type that accepts GooglePrivacyDlpV2PublishSummaryToCsccArgs, GooglePrivacyDlpV2PublishSummaryToCsccPtr and GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PublishSummaryToCsccPtrInput` via:
//
//          GooglePrivacyDlpV2PublishSummaryToCsccArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2PublishSummaryToCsccPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PublishSummaryToCsccPtrOutput() GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput
	ToGooglePrivacyDlpV2PublishSummaryToCsccPtrOutputWithContext(context.Context) GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput
}

type googlePrivacyDlpV2PublishSummaryToCsccPtrType GooglePrivacyDlpV2PublishSummaryToCsccArgs

func GooglePrivacyDlpV2PublishSummaryToCsccPtr(v *GooglePrivacyDlpV2PublishSummaryToCsccArgs) GooglePrivacyDlpV2PublishSummaryToCsccPtrInput {
	return (*googlePrivacyDlpV2PublishSummaryToCsccPtrType)(v)
}

func (*googlePrivacyDlpV2PublishSummaryToCsccPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PublishSummaryToCscc)(nil)).Elem()
}

func (i *googlePrivacyDlpV2PublishSummaryToCsccPtrType) ToGooglePrivacyDlpV2PublishSummaryToCsccPtrOutput() GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput {
	return i.ToGooglePrivacyDlpV2PublishSummaryToCsccPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2PublishSummaryToCsccPtrType) ToGooglePrivacyDlpV2PublishSummaryToCsccPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput)
}

// Publish the result summary of a DlpJob to the Cloud Security Command Center (CSCC Alpha). This action is only available for projects which are parts of an organization and whitelisted for the alpha Cloud Security Command Center. The action will publish count of finding instances and their info types. The summary of findings will be persisted in CSCC and are governed by CSCC service-specific policy, see https://cloud.google.com/terms/service-terms Only a single instance of this action can be specified. Compatible with: Inspect
type GooglePrivacyDlpV2PublishSummaryToCsccOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PublishSummaryToCsccOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishSummaryToCscc)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PublishSummaryToCsccOutput) ToGooglePrivacyDlpV2PublishSummaryToCsccOutput() GooglePrivacyDlpV2PublishSummaryToCsccOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishSummaryToCsccOutput) ToGooglePrivacyDlpV2PublishSummaryToCsccOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishSummaryToCsccOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishSummaryToCsccOutput) ToGooglePrivacyDlpV2PublishSummaryToCsccPtrOutput() GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput {
	return o.ToGooglePrivacyDlpV2PublishSummaryToCsccPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2PublishSummaryToCsccOutput) ToGooglePrivacyDlpV2PublishSummaryToCsccPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2PublishSummaryToCscc) *GooglePrivacyDlpV2PublishSummaryToCscc {
		return &v
	}).(GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput)
}

type GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PublishSummaryToCscc)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput) ToGooglePrivacyDlpV2PublishSummaryToCsccPtrOutput() GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput) ToGooglePrivacyDlpV2PublishSummaryToCsccPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput) Elem() GooglePrivacyDlpV2PublishSummaryToCsccOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PublishSummaryToCscc) GooglePrivacyDlpV2PublishSummaryToCscc {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2PublishSummaryToCscc
		return ret
	}).(GooglePrivacyDlpV2PublishSummaryToCsccOutput)
}

// Publish the result summary of a DlpJob to the Cloud Security Command Center (CSCC Alpha). This action is only available for projects which are parts of an organization and whitelisted for the alpha Cloud Security Command Center. The action will publish count of finding instances and their info types. The summary of findings will be persisted in CSCC and are governed by CSCC service-specific policy, see https://cloud.google.com/terms/service-terms Only a single instance of this action can be specified. Compatible with: Inspect
type GooglePrivacyDlpV2PublishSummaryToCsccResponse struct {
}

// GooglePrivacyDlpV2PublishSummaryToCsccResponseInput is an input type that accepts GooglePrivacyDlpV2PublishSummaryToCsccResponseArgs and GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PublishSummaryToCsccResponseInput` via:
//
//          GooglePrivacyDlpV2PublishSummaryToCsccResponseArgs{...}
type GooglePrivacyDlpV2PublishSummaryToCsccResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PublishSummaryToCsccResponseOutput() GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput
	ToGooglePrivacyDlpV2PublishSummaryToCsccResponseOutputWithContext(context.Context) GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput
}

// Publish the result summary of a DlpJob to the Cloud Security Command Center (CSCC Alpha). This action is only available for projects which are parts of an organization and whitelisted for the alpha Cloud Security Command Center. The action will publish count of finding instances and their info types. The summary of findings will be persisted in CSCC and are governed by CSCC service-specific policy, see https://cloud.google.com/terms/service-terms Only a single instance of this action can be specified. Compatible with: Inspect
type GooglePrivacyDlpV2PublishSummaryToCsccResponseArgs struct {
}

func (GooglePrivacyDlpV2PublishSummaryToCsccResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishSummaryToCsccResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2PublishSummaryToCsccResponseArgs) ToGooglePrivacyDlpV2PublishSummaryToCsccResponseOutput() GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput {
	return i.ToGooglePrivacyDlpV2PublishSummaryToCsccResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PublishSummaryToCsccResponseArgs) ToGooglePrivacyDlpV2PublishSummaryToCsccResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput)
}

// Publish the result summary of a DlpJob to the Cloud Security Command Center (CSCC Alpha). This action is only available for projects which are parts of an organization and whitelisted for the alpha Cloud Security Command Center. The action will publish count of finding instances and their info types. The summary of findings will be persisted in CSCC and are governed by CSCC service-specific policy, see https://cloud.google.com/terms/service-terms Only a single instance of this action can be specified. Compatible with: Inspect
type GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishSummaryToCsccResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput) ToGooglePrivacyDlpV2PublishSummaryToCsccResponseOutput() GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput) ToGooglePrivacyDlpV2PublishSummaryToCsccResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput {
	return o
}

// Publish a message into given Pub/Sub topic when DlpJob has completed. The message contains a single field, `DlpJobName`, which is equal to the finished job's [`DlpJob.name`](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs#DlpJob). Compatible with: Inspect, Risk
type GooglePrivacyDlpV2PublishToPubSub struct {
	// Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}.
	Topic *string `pulumi:"topic"`
}

// GooglePrivacyDlpV2PublishToPubSubInput is an input type that accepts GooglePrivacyDlpV2PublishToPubSubArgs and GooglePrivacyDlpV2PublishToPubSubOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PublishToPubSubInput` via:
//
//          GooglePrivacyDlpV2PublishToPubSubArgs{...}
type GooglePrivacyDlpV2PublishToPubSubInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PublishToPubSubOutput() GooglePrivacyDlpV2PublishToPubSubOutput
	ToGooglePrivacyDlpV2PublishToPubSubOutputWithContext(context.Context) GooglePrivacyDlpV2PublishToPubSubOutput
}

// Publish a message into given Pub/Sub topic when DlpJob has completed. The message contains a single field, `DlpJobName`, which is equal to the finished job's [`DlpJob.name`](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs#DlpJob). Compatible with: Inspect, Risk
type GooglePrivacyDlpV2PublishToPubSubArgs struct {
	// Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}.
	Topic pulumi.StringPtrInput `pulumi:"topic"`
}

func (GooglePrivacyDlpV2PublishToPubSubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishToPubSub)(nil)).Elem()
}

func (i GooglePrivacyDlpV2PublishToPubSubArgs) ToGooglePrivacyDlpV2PublishToPubSubOutput() GooglePrivacyDlpV2PublishToPubSubOutput {
	return i.ToGooglePrivacyDlpV2PublishToPubSubOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PublishToPubSubArgs) ToGooglePrivacyDlpV2PublishToPubSubOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToPubSubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishToPubSubOutput)
}

func (i GooglePrivacyDlpV2PublishToPubSubArgs) ToGooglePrivacyDlpV2PublishToPubSubPtrOutput() GooglePrivacyDlpV2PublishToPubSubPtrOutput {
	return i.ToGooglePrivacyDlpV2PublishToPubSubPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PublishToPubSubArgs) ToGooglePrivacyDlpV2PublishToPubSubPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToPubSubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishToPubSubOutput).ToGooglePrivacyDlpV2PublishToPubSubPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2PublishToPubSubPtrInput is an input type that accepts GooglePrivacyDlpV2PublishToPubSubArgs, GooglePrivacyDlpV2PublishToPubSubPtr and GooglePrivacyDlpV2PublishToPubSubPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PublishToPubSubPtrInput` via:
//
//          GooglePrivacyDlpV2PublishToPubSubArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2PublishToPubSubPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PublishToPubSubPtrOutput() GooglePrivacyDlpV2PublishToPubSubPtrOutput
	ToGooglePrivacyDlpV2PublishToPubSubPtrOutputWithContext(context.Context) GooglePrivacyDlpV2PublishToPubSubPtrOutput
}

type googlePrivacyDlpV2PublishToPubSubPtrType GooglePrivacyDlpV2PublishToPubSubArgs

func GooglePrivacyDlpV2PublishToPubSubPtr(v *GooglePrivacyDlpV2PublishToPubSubArgs) GooglePrivacyDlpV2PublishToPubSubPtrInput {
	return (*googlePrivacyDlpV2PublishToPubSubPtrType)(v)
}

func (*googlePrivacyDlpV2PublishToPubSubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PublishToPubSub)(nil)).Elem()
}

func (i *googlePrivacyDlpV2PublishToPubSubPtrType) ToGooglePrivacyDlpV2PublishToPubSubPtrOutput() GooglePrivacyDlpV2PublishToPubSubPtrOutput {
	return i.ToGooglePrivacyDlpV2PublishToPubSubPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2PublishToPubSubPtrType) ToGooglePrivacyDlpV2PublishToPubSubPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToPubSubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishToPubSubPtrOutput)
}

// Publish a message into given Pub/Sub topic when DlpJob has completed. The message contains a single field, `DlpJobName`, which is equal to the finished job's [`DlpJob.name`](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs#DlpJob). Compatible with: Inspect, Risk
type GooglePrivacyDlpV2PublishToPubSubOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PublishToPubSubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishToPubSub)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PublishToPubSubOutput) ToGooglePrivacyDlpV2PublishToPubSubOutput() GooglePrivacyDlpV2PublishToPubSubOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishToPubSubOutput) ToGooglePrivacyDlpV2PublishToPubSubOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToPubSubOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishToPubSubOutput) ToGooglePrivacyDlpV2PublishToPubSubPtrOutput() GooglePrivacyDlpV2PublishToPubSubPtrOutput {
	return o.ToGooglePrivacyDlpV2PublishToPubSubPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2PublishToPubSubOutput) ToGooglePrivacyDlpV2PublishToPubSubPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToPubSubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2PublishToPubSub) *GooglePrivacyDlpV2PublishToPubSub {
		return &v
	}).(GooglePrivacyDlpV2PublishToPubSubPtrOutput)
}

// Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}.
func (o GooglePrivacyDlpV2PublishToPubSubOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PublishToPubSub) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2PublishToPubSubPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PublishToPubSubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PublishToPubSub)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PublishToPubSubPtrOutput) ToGooglePrivacyDlpV2PublishToPubSubPtrOutput() GooglePrivacyDlpV2PublishToPubSubPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishToPubSubPtrOutput) ToGooglePrivacyDlpV2PublishToPubSubPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToPubSubPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishToPubSubPtrOutput) Elem() GooglePrivacyDlpV2PublishToPubSubOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PublishToPubSub) GooglePrivacyDlpV2PublishToPubSub {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2PublishToPubSub
		return ret
	}).(GooglePrivacyDlpV2PublishToPubSubOutput)
}

// Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}.
func (o GooglePrivacyDlpV2PublishToPubSubPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PublishToPubSub) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

// Publish a message into given Pub/Sub topic when DlpJob has completed. The message contains a single field, `DlpJobName`, which is equal to the finished job's [`DlpJob.name`](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs#DlpJob). Compatible with: Inspect, Risk
type GooglePrivacyDlpV2PublishToPubSubResponse struct {
	// Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}.
	Topic string `pulumi:"topic"`
}

// GooglePrivacyDlpV2PublishToPubSubResponseInput is an input type that accepts GooglePrivacyDlpV2PublishToPubSubResponseArgs and GooglePrivacyDlpV2PublishToPubSubResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PublishToPubSubResponseInput` via:
//
//          GooglePrivacyDlpV2PublishToPubSubResponseArgs{...}
type GooglePrivacyDlpV2PublishToPubSubResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PublishToPubSubResponseOutput() GooglePrivacyDlpV2PublishToPubSubResponseOutput
	ToGooglePrivacyDlpV2PublishToPubSubResponseOutputWithContext(context.Context) GooglePrivacyDlpV2PublishToPubSubResponseOutput
}

// Publish a message into given Pub/Sub topic when DlpJob has completed. The message contains a single field, `DlpJobName`, which is equal to the finished job's [`DlpJob.name`](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs#DlpJob). Compatible with: Inspect, Risk
type GooglePrivacyDlpV2PublishToPubSubResponseArgs struct {
	// Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (GooglePrivacyDlpV2PublishToPubSubResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishToPubSubResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2PublishToPubSubResponseArgs) ToGooglePrivacyDlpV2PublishToPubSubResponseOutput() GooglePrivacyDlpV2PublishToPubSubResponseOutput {
	return i.ToGooglePrivacyDlpV2PublishToPubSubResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PublishToPubSubResponseArgs) ToGooglePrivacyDlpV2PublishToPubSubResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToPubSubResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishToPubSubResponseOutput)
}

// Publish a message into given Pub/Sub topic when DlpJob has completed. The message contains a single field, `DlpJobName`, which is equal to the finished job's [`DlpJob.name`](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs#DlpJob). Compatible with: Inspect, Risk
type GooglePrivacyDlpV2PublishToPubSubResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PublishToPubSubResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishToPubSubResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PublishToPubSubResponseOutput) ToGooglePrivacyDlpV2PublishToPubSubResponseOutput() GooglePrivacyDlpV2PublishToPubSubResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishToPubSubResponseOutput) ToGooglePrivacyDlpV2PublishToPubSubResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToPubSubResponseOutput {
	return o
}

// Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}.
func (o GooglePrivacyDlpV2PublishToPubSubResponseOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2PublishToPubSubResponse) string { return v.Topic }).(pulumi.StringOutput)
}

// Enable Stackdriver metric dlp.googleapis.com/finding_count. This will publish a metric to stack driver on each infotype requested and how many findings were found for it. CustomDetectors will be bucketed as 'Custom' under the Stackdriver label 'info_type'.
type GooglePrivacyDlpV2PublishToStackdriver struct {
}

// GooglePrivacyDlpV2PublishToStackdriverInput is an input type that accepts GooglePrivacyDlpV2PublishToStackdriverArgs and GooglePrivacyDlpV2PublishToStackdriverOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PublishToStackdriverInput` via:
//
//          GooglePrivacyDlpV2PublishToStackdriverArgs{...}
type GooglePrivacyDlpV2PublishToStackdriverInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PublishToStackdriverOutput() GooglePrivacyDlpV2PublishToStackdriverOutput
	ToGooglePrivacyDlpV2PublishToStackdriverOutputWithContext(context.Context) GooglePrivacyDlpV2PublishToStackdriverOutput
}

// Enable Stackdriver metric dlp.googleapis.com/finding_count. This will publish a metric to stack driver on each infotype requested and how many findings were found for it. CustomDetectors will be bucketed as 'Custom' under the Stackdriver label 'info_type'.
type GooglePrivacyDlpV2PublishToStackdriverArgs struct {
}

func (GooglePrivacyDlpV2PublishToStackdriverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishToStackdriver)(nil)).Elem()
}

func (i GooglePrivacyDlpV2PublishToStackdriverArgs) ToGooglePrivacyDlpV2PublishToStackdriverOutput() GooglePrivacyDlpV2PublishToStackdriverOutput {
	return i.ToGooglePrivacyDlpV2PublishToStackdriverOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PublishToStackdriverArgs) ToGooglePrivacyDlpV2PublishToStackdriverOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToStackdriverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishToStackdriverOutput)
}

func (i GooglePrivacyDlpV2PublishToStackdriverArgs) ToGooglePrivacyDlpV2PublishToStackdriverPtrOutput() GooglePrivacyDlpV2PublishToStackdriverPtrOutput {
	return i.ToGooglePrivacyDlpV2PublishToStackdriverPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PublishToStackdriverArgs) ToGooglePrivacyDlpV2PublishToStackdriverPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToStackdriverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishToStackdriverOutput).ToGooglePrivacyDlpV2PublishToStackdriverPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2PublishToStackdriverPtrInput is an input type that accepts GooglePrivacyDlpV2PublishToStackdriverArgs, GooglePrivacyDlpV2PublishToStackdriverPtr and GooglePrivacyDlpV2PublishToStackdriverPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PublishToStackdriverPtrInput` via:
//
//          GooglePrivacyDlpV2PublishToStackdriverArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2PublishToStackdriverPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PublishToStackdriverPtrOutput() GooglePrivacyDlpV2PublishToStackdriverPtrOutput
	ToGooglePrivacyDlpV2PublishToStackdriverPtrOutputWithContext(context.Context) GooglePrivacyDlpV2PublishToStackdriverPtrOutput
}

type googlePrivacyDlpV2PublishToStackdriverPtrType GooglePrivacyDlpV2PublishToStackdriverArgs

func GooglePrivacyDlpV2PublishToStackdriverPtr(v *GooglePrivacyDlpV2PublishToStackdriverArgs) GooglePrivacyDlpV2PublishToStackdriverPtrInput {
	return (*googlePrivacyDlpV2PublishToStackdriverPtrType)(v)
}

func (*googlePrivacyDlpV2PublishToStackdriverPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PublishToStackdriver)(nil)).Elem()
}

func (i *googlePrivacyDlpV2PublishToStackdriverPtrType) ToGooglePrivacyDlpV2PublishToStackdriverPtrOutput() GooglePrivacyDlpV2PublishToStackdriverPtrOutput {
	return i.ToGooglePrivacyDlpV2PublishToStackdriverPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2PublishToStackdriverPtrType) ToGooglePrivacyDlpV2PublishToStackdriverPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToStackdriverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishToStackdriverPtrOutput)
}

// Enable Stackdriver metric dlp.googleapis.com/finding_count. This will publish a metric to stack driver on each infotype requested and how many findings were found for it. CustomDetectors will be bucketed as 'Custom' under the Stackdriver label 'info_type'.
type GooglePrivacyDlpV2PublishToStackdriverOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PublishToStackdriverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishToStackdriver)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PublishToStackdriverOutput) ToGooglePrivacyDlpV2PublishToStackdriverOutput() GooglePrivacyDlpV2PublishToStackdriverOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishToStackdriverOutput) ToGooglePrivacyDlpV2PublishToStackdriverOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToStackdriverOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishToStackdriverOutput) ToGooglePrivacyDlpV2PublishToStackdriverPtrOutput() GooglePrivacyDlpV2PublishToStackdriverPtrOutput {
	return o.ToGooglePrivacyDlpV2PublishToStackdriverPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2PublishToStackdriverOutput) ToGooglePrivacyDlpV2PublishToStackdriverPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToStackdriverPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2PublishToStackdriver) *GooglePrivacyDlpV2PublishToStackdriver {
		return &v
	}).(GooglePrivacyDlpV2PublishToStackdriverPtrOutput)
}

type GooglePrivacyDlpV2PublishToStackdriverPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PublishToStackdriverPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2PublishToStackdriver)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PublishToStackdriverPtrOutput) ToGooglePrivacyDlpV2PublishToStackdriverPtrOutput() GooglePrivacyDlpV2PublishToStackdriverPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishToStackdriverPtrOutput) ToGooglePrivacyDlpV2PublishToStackdriverPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToStackdriverPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishToStackdriverPtrOutput) Elem() GooglePrivacyDlpV2PublishToStackdriverOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2PublishToStackdriver) GooglePrivacyDlpV2PublishToStackdriver {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2PublishToStackdriver
		return ret
	}).(GooglePrivacyDlpV2PublishToStackdriverOutput)
}

// Enable Stackdriver metric dlp.googleapis.com/finding_count. This will publish a metric to stack driver on each infotype requested and how many findings were found for it. CustomDetectors will be bucketed as 'Custom' under the Stackdriver label 'info_type'.
type GooglePrivacyDlpV2PublishToStackdriverResponse struct {
}

// GooglePrivacyDlpV2PublishToStackdriverResponseInput is an input type that accepts GooglePrivacyDlpV2PublishToStackdriverResponseArgs and GooglePrivacyDlpV2PublishToStackdriverResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2PublishToStackdriverResponseInput` via:
//
//          GooglePrivacyDlpV2PublishToStackdriverResponseArgs{...}
type GooglePrivacyDlpV2PublishToStackdriverResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2PublishToStackdriverResponseOutput() GooglePrivacyDlpV2PublishToStackdriverResponseOutput
	ToGooglePrivacyDlpV2PublishToStackdriverResponseOutputWithContext(context.Context) GooglePrivacyDlpV2PublishToStackdriverResponseOutput
}

// Enable Stackdriver metric dlp.googleapis.com/finding_count. This will publish a metric to stack driver on each infotype requested and how many findings were found for it. CustomDetectors will be bucketed as 'Custom' under the Stackdriver label 'info_type'.
type GooglePrivacyDlpV2PublishToStackdriverResponseArgs struct {
}

func (GooglePrivacyDlpV2PublishToStackdriverResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishToStackdriverResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2PublishToStackdriverResponseArgs) ToGooglePrivacyDlpV2PublishToStackdriverResponseOutput() GooglePrivacyDlpV2PublishToStackdriverResponseOutput {
	return i.ToGooglePrivacyDlpV2PublishToStackdriverResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2PublishToStackdriverResponseArgs) ToGooglePrivacyDlpV2PublishToStackdriverResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToStackdriverResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2PublishToStackdriverResponseOutput)
}

// Enable Stackdriver metric dlp.googleapis.com/finding_count. This will publish a metric to stack driver on each infotype requested and how many findings were found for it. CustomDetectors will be bucketed as 'Custom' under the Stackdriver label 'info_type'.
type GooglePrivacyDlpV2PublishToStackdriverResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2PublishToStackdriverResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2PublishToStackdriverResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2PublishToStackdriverResponseOutput) ToGooglePrivacyDlpV2PublishToStackdriverResponseOutput() GooglePrivacyDlpV2PublishToStackdriverResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2PublishToStackdriverResponseOutput) ToGooglePrivacyDlpV2PublishToStackdriverResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2PublishToStackdriverResponseOutput {
	return o
}

// A column with a semantic tag attached.
type GooglePrivacyDlpV2QuasiId struct {
	// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
	CustomTag *string `pulumi:"customTag"`
	// Identifies the column.
	Field GooglePrivacyDlpV2FieldId `pulumi:"field"`
	// If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data
	Inferred *GoogleProtobufEmpty `pulumi:"inferred"`
	// A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
	InfoType *GooglePrivacyDlpV2InfoType `pulumi:"infoType"`
}

// GooglePrivacyDlpV2QuasiIdInput is an input type that accepts GooglePrivacyDlpV2QuasiIdArgs and GooglePrivacyDlpV2QuasiIdOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2QuasiIdInput` via:
//
//          GooglePrivacyDlpV2QuasiIdArgs{...}
type GooglePrivacyDlpV2QuasiIdInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2QuasiIdOutput() GooglePrivacyDlpV2QuasiIdOutput
	ToGooglePrivacyDlpV2QuasiIdOutputWithContext(context.Context) GooglePrivacyDlpV2QuasiIdOutput
}

// A column with a semantic tag attached.
type GooglePrivacyDlpV2QuasiIdArgs struct {
	// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
	CustomTag pulumi.StringPtrInput `pulumi:"customTag"`
	// Identifies the column.
	Field GooglePrivacyDlpV2FieldIdInput `pulumi:"field"`
	// If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data
	Inferred GoogleProtobufEmptyPtrInput `pulumi:"inferred"`
	// A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
	InfoType GooglePrivacyDlpV2InfoTypePtrInput `pulumi:"infoType"`
}

func (GooglePrivacyDlpV2QuasiIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2QuasiId)(nil)).Elem()
}

func (i GooglePrivacyDlpV2QuasiIdArgs) ToGooglePrivacyDlpV2QuasiIdOutput() GooglePrivacyDlpV2QuasiIdOutput {
	return i.ToGooglePrivacyDlpV2QuasiIdOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2QuasiIdArgs) ToGooglePrivacyDlpV2QuasiIdOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2QuasiIdOutput)
}

// GooglePrivacyDlpV2QuasiIdArrayInput is an input type that accepts GooglePrivacyDlpV2QuasiIdArray and GooglePrivacyDlpV2QuasiIdArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2QuasiIdArrayInput` via:
//
//          GooglePrivacyDlpV2QuasiIdArray{ GooglePrivacyDlpV2QuasiIdArgs{...} }
type GooglePrivacyDlpV2QuasiIdArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2QuasiIdArrayOutput() GooglePrivacyDlpV2QuasiIdArrayOutput
	ToGooglePrivacyDlpV2QuasiIdArrayOutputWithContext(context.Context) GooglePrivacyDlpV2QuasiIdArrayOutput
}

type GooglePrivacyDlpV2QuasiIdArray []GooglePrivacyDlpV2QuasiIdInput

func (GooglePrivacyDlpV2QuasiIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2QuasiId)(nil)).Elem()
}

func (i GooglePrivacyDlpV2QuasiIdArray) ToGooglePrivacyDlpV2QuasiIdArrayOutput() GooglePrivacyDlpV2QuasiIdArrayOutput {
	return i.ToGooglePrivacyDlpV2QuasiIdArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2QuasiIdArray) ToGooglePrivacyDlpV2QuasiIdArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2QuasiIdArrayOutput)
}

// A column with a semantic tag attached.
type GooglePrivacyDlpV2QuasiIdOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2QuasiIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2QuasiId)(nil)).Elem()
}

func (o GooglePrivacyDlpV2QuasiIdOutput) ToGooglePrivacyDlpV2QuasiIdOutput() GooglePrivacyDlpV2QuasiIdOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdOutput) ToGooglePrivacyDlpV2QuasiIdOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdOutput {
	return o
}

// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
func (o GooglePrivacyDlpV2QuasiIdOutput) CustomTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiId) *string { return v.CustomTag }).(pulumi.StringPtrOutput)
}

// Identifies the column.
func (o GooglePrivacyDlpV2QuasiIdOutput) Field() GooglePrivacyDlpV2FieldIdOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiId) GooglePrivacyDlpV2FieldId { return v.Field }).(GooglePrivacyDlpV2FieldIdOutput)
}

// If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data
func (o GooglePrivacyDlpV2QuasiIdOutput) Inferred() GoogleProtobufEmptyPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiId) *GoogleProtobufEmpty { return v.Inferred }).(GoogleProtobufEmptyPtrOutput)
}

// A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
func (o GooglePrivacyDlpV2QuasiIdOutput) InfoType() GooglePrivacyDlpV2InfoTypePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiId) *GooglePrivacyDlpV2InfoType { return v.InfoType }).(GooglePrivacyDlpV2InfoTypePtrOutput)
}

type GooglePrivacyDlpV2QuasiIdArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2QuasiIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2QuasiId)(nil)).Elem()
}

func (o GooglePrivacyDlpV2QuasiIdArrayOutput) ToGooglePrivacyDlpV2QuasiIdArrayOutput() GooglePrivacyDlpV2QuasiIdArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdArrayOutput) ToGooglePrivacyDlpV2QuasiIdArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2QuasiIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2QuasiId {
		return vs[0].([]GooglePrivacyDlpV2QuasiId)[vs[1].(int)]
	}).(GooglePrivacyDlpV2QuasiIdOutput)
}

// A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
type GooglePrivacyDlpV2QuasiIdField struct {
	// A auxiliary field.
	CustomTag *string `pulumi:"customTag"`
	// Identifies the column.
	Field *GooglePrivacyDlpV2FieldId `pulumi:"field"`
}

// GooglePrivacyDlpV2QuasiIdFieldInput is an input type that accepts GooglePrivacyDlpV2QuasiIdFieldArgs and GooglePrivacyDlpV2QuasiIdFieldOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2QuasiIdFieldInput` via:
//
//          GooglePrivacyDlpV2QuasiIdFieldArgs{...}
type GooglePrivacyDlpV2QuasiIdFieldInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2QuasiIdFieldOutput() GooglePrivacyDlpV2QuasiIdFieldOutput
	ToGooglePrivacyDlpV2QuasiIdFieldOutputWithContext(context.Context) GooglePrivacyDlpV2QuasiIdFieldOutput
}

// A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
type GooglePrivacyDlpV2QuasiIdFieldArgs struct {
	// A auxiliary field.
	CustomTag pulumi.StringPtrInput `pulumi:"customTag"`
	// Identifies the column.
	Field GooglePrivacyDlpV2FieldIdPtrInput `pulumi:"field"`
}

func (GooglePrivacyDlpV2QuasiIdFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2QuasiIdField)(nil)).Elem()
}

func (i GooglePrivacyDlpV2QuasiIdFieldArgs) ToGooglePrivacyDlpV2QuasiIdFieldOutput() GooglePrivacyDlpV2QuasiIdFieldOutput {
	return i.ToGooglePrivacyDlpV2QuasiIdFieldOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2QuasiIdFieldArgs) ToGooglePrivacyDlpV2QuasiIdFieldOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2QuasiIdFieldOutput)
}

// GooglePrivacyDlpV2QuasiIdFieldArrayInput is an input type that accepts GooglePrivacyDlpV2QuasiIdFieldArray and GooglePrivacyDlpV2QuasiIdFieldArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2QuasiIdFieldArrayInput` via:
//
//          GooglePrivacyDlpV2QuasiIdFieldArray{ GooglePrivacyDlpV2QuasiIdFieldArgs{...} }
type GooglePrivacyDlpV2QuasiIdFieldArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2QuasiIdFieldArrayOutput() GooglePrivacyDlpV2QuasiIdFieldArrayOutput
	ToGooglePrivacyDlpV2QuasiIdFieldArrayOutputWithContext(context.Context) GooglePrivacyDlpV2QuasiIdFieldArrayOutput
}

type GooglePrivacyDlpV2QuasiIdFieldArray []GooglePrivacyDlpV2QuasiIdFieldInput

func (GooglePrivacyDlpV2QuasiIdFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2QuasiIdField)(nil)).Elem()
}

func (i GooglePrivacyDlpV2QuasiIdFieldArray) ToGooglePrivacyDlpV2QuasiIdFieldArrayOutput() GooglePrivacyDlpV2QuasiIdFieldArrayOutput {
	return i.ToGooglePrivacyDlpV2QuasiIdFieldArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2QuasiIdFieldArray) ToGooglePrivacyDlpV2QuasiIdFieldArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2QuasiIdFieldArrayOutput)
}

// A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
type GooglePrivacyDlpV2QuasiIdFieldOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2QuasiIdFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2QuasiIdField)(nil)).Elem()
}

func (o GooglePrivacyDlpV2QuasiIdFieldOutput) ToGooglePrivacyDlpV2QuasiIdFieldOutput() GooglePrivacyDlpV2QuasiIdFieldOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdFieldOutput) ToGooglePrivacyDlpV2QuasiIdFieldOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdFieldOutput {
	return o
}

// A auxiliary field.
func (o GooglePrivacyDlpV2QuasiIdFieldOutput) CustomTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiIdField) *string { return v.CustomTag }).(pulumi.StringPtrOutput)
}

// Identifies the column.
func (o GooglePrivacyDlpV2QuasiIdFieldOutput) Field() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiIdField) *GooglePrivacyDlpV2FieldId { return v.Field }).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

type GooglePrivacyDlpV2QuasiIdFieldArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2QuasiIdFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2QuasiIdField)(nil)).Elem()
}

func (o GooglePrivacyDlpV2QuasiIdFieldArrayOutput) ToGooglePrivacyDlpV2QuasiIdFieldArrayOutput() GooglePrivacyDlpV2QuasiIdFieldArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdFieldArrayOutput) ToGooglePrivacyDlpV2QuasiIdFieldArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdFieldArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdFieldArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2QuasiIdFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2QuasiIdField {
		return vs[0].([]GooglePrivacyDlpV2QuasiIdField)[vs[1].(int)]
	}).(GooglePrivacyDlpV2QuasiIdFieldOutput)
}

// A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
type GooglePrivacyDlpV2QuasiIdFieldResponse struct {
	// A auxiliary field.
	CustomTag string `pulumi:"customTag"`
	// Identifies the column.
	Field GooglePrivacyDlpV2FieldIdResponse `pulumi:"field"`
}

// GooglePrivacyDlpV2QuasiIdFieldResponseInput is an input type that accepts GooglePrivacyDlpV2QuasiIdFieldResponseArgs and GooglePrivacyDlpV2QuasiIdFieldResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2QuasiIdFieldResponseInput` via:
//
//          GooglePrivacyDlpV2QuasiIdFieldResponseArgs{...}
type GooglePrivacyDlpV2QuasiIdFieldResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2QuasiIdFieldResponseOutput() GooglePrivacyDlpV2QuasiIdFieldResponseOutput
	ToGooglePrivacyDlpV2QuasiIdFieldResponseOutputWithContext(context.Context) GooglePrivacyDlpV2QuasiIdFieldResponseOutput
}

// A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
type GooglePrivacyDlpV2QuasiIdFieldResponseArgs struct {
	// A auxiliary field.
	CustomTag pulumi.StringInput `pulumi:"customTag"`
	// Identifies the column.
	Field GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"field"`
}

func (GooglePrivacyDlpV2QuasiIdFieldResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2QuasiIdFieldResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2QuasiIdFieldResponseArgs) ToGooglePrivacyDlpV2QuasiIdFieldResponseOutput() GooglePrivacyDlpV2QuasiIdFieldResponseOutput {
	return i.ToGooglePrivacyDlpV2QuasiIdFieldResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2QuasiIdFieldResponseArgs) ToGooglePrivacyDlpV2QuasiIdFieldResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdFieldResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2QuasiIdFieldResponseOutput)
}

// GooglePrivacyDlpV2QuasiIdFieldResponseArrayInput is an input type that accepts GooglePrivacyDlpV2QuasiIdFieldResponseArray and GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2QuasiIdFieldResponseArrayInput` via:
//
//          GooglePrivacyDlpV2QuasiIdFieldResponseArray{ GooglePrivacyDlpV2QuasiIdFieldResponseArgs{...} }
type GooglePrivacyDlpV2QuasiIdFieldResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput() GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput
	ToGooglePrivacyDlpV2QuasiIdFieldResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput
}

type GooglePrivacyDlpV2QuasiIdFieldResponseArray []GooglePrivacyDlpV2QuasiIdFieldResponseInput

func (GooglePrivacyDlpV2QuasiIdFieldResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2QuasiIdFieldResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2QuasiIdFieldResponseArray) ToGooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput() GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2QuasiIdFieldResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2QuasiIdFieldResponseArray) ToGooglePrivacyDlpV2QuasiIdFieldResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput)
}

// A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
type GooglePrivacyDlpV2QuasiIdFieldResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2QuasiIdFieldResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2QuasiIdFieldResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2QuasiIdFieldResponseOutput) ToGooglePrivacyDlpV2QuasiIdFieldResponseOutput() GooglePrivacyDlpV2QuasiIdFieldResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdFieldResponseOutput) ToGooglePrivacyDlpV2QuasiIdFieldResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdFieldResponseOutput {
	return o
}

// A auxiliary field.
func (o GooglePrivacyDlpV2QuasiIdFieldResponseOutput) CustomTag() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiIdFieldResponse) string { return v.CustomTag }).(pulumi.StringOutput)
}

// Identifies the column.
func (o GooglePrivacyDlpV2QuasiIdFieldResponseOutput) Field() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiIdFieldResponse) GooglePrivacyDlpV2FieldIdResponse { return v.Field }).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

type GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2QuasiIdFieldResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput) ToGooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput() GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput) ToGooglePrivacyDlpV2QuasiIdFieldResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2QuasiIdFieldResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2QuasiIdFieldResponse {
		return vs[0].([]GooglePrivacyDlpV2QuasiIdFieldResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2QuasiIdFieldResponseOutput)
}

// A column with a semantic tag attached.
type GooglePrivacyDlpV2QuasiIdResponse struct {
	// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
	CustomTag string `pulumi:"customTag"`
	// Identifies the column.
	Field GooglePrivacyDlpV2FieldIdResponse `pulumi:"field"`
	// If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data
	Inferred GoogleProtobufEmptyResponse `pulumi:"inferred"`
	// A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
	InfoType GooglePrivacyDlpV2InfoTypeResponse `pulumi:"infoType"`
}

// GooglePrivacyDlpV2QuasiIdResponseInput is an input type that accepts GooglePrivacyDlpV2QuasiIdResponseArgs and GooglePrivacyDlpV2QuasiIdResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2QuasiIdResponseInput` via:
//
//          GooglePrivacyDlpV2QuasiIdResponseArgs{...}
type GooglePrivacyDlpV2QuasiIdResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2QuasiIdResponseOutput() GooglePrivacyDlpV2QuasiIdResponseOutput
	ToGooglePrivacyDlpV2QuasiIdResponseOutputWithContext(context.Context) GooglePrivacyDlpV2QuasiIdResponseOutput
}

// A column with a semantic tag attached.
type GooglePrivacyDlpV2QuasiIdResponseArgs struct {
	// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
	CustomTag pulumi.StringInput `pulumi:"customTag"`
	// Identifies the column.
	Field GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"field"`
	// If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data
	Inferred GoogleProtobufEmptyResponseInput `pulumi:"inferred"`
	// A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
	InfoType GooglePrivacyDlpV2InfoTypeResponseInput `pulumi:"infoType"`
}

func (GooglePrivacyDlpV2QuasiIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2QuasiIdResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2QuasiIdResponseArgs) ToGooglePrivacyDlpV2QuasiIdResponseOutput() GooglePrivacyDlpV2QuasiIdResponseOutput {
	return i.ToGooglePrivacyDlpV2QuasiIdResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2QuasiIdResponseArgs) ToGooglePrivacyDlpV2QuasiIdResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2QuasiIdResponseOutput)
}

// GooglePrivacyDlpV2QuasiIdResponseArrayInput is an input type that accepts GooglePrivacyDlpV2QuasiIdResponseArray and GooglePrivacyDlpV2QuasiIdResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2QuasiIdResponseArrayInput` via:
//
//          GooglePrivacyDlpV2QuasiIdResponseArray{ GooglePrivacyDlpV2QuasiIdResponseArgs{...} }
type GooglePrivacyDlpV2QuasiIdResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2QuasiIdResponseArrayOutput() GooglePrivacyDlpV2QuasiIdResponseArrayOutput
	ToGooglePrivacyDlpV2QuasiIdResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2QuasiIdResponseArrayOutput
}

type GooglePrivacyDlpV2QuasiIdResponseArray []GooglePrivacyDlpV2QuasiIdResponseInput

func (GooglePrivacyDlpV2QuasiIdResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2QuasiIdResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2QuasiIdResponseArray) ToGooglePrivacyDlpV2QuasiIdResponseArrayOutput() GooglePrivacyDlpV2QuasiIdResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2QuasiIdResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2QuasiIdResponseArray) ToGooglePrivacyDlpV2QuasiIdResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2QuasiIdResponseArrayOutput)
}

// A column with a semantic tag attached.
type GooglePrivacyDlpV2QuasiIdResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2QuasiIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2QuasiIdResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2QuasiIdResponseOutput) ToGooglePrivacyDlpV2QuasiIdResponseOutput() GooglePrivacyDlpV2QuasiIdResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdResponseOutput) ToGooglePrivacyDlpV2QuasiIdResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdResponseOutput {
	return o
}

// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
func (o GooglePrivacyDlpV2QuasiIdResponseOutput) CustomTag() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiIdResponse) string { return v.CustomTag }).(pulumi.StringOutput)
}

// Identifies the column.
func (o GooglePrivacyDlpV2QuasiIdResponseOutput) Field() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiIdResponse) GooglePrivacyDlpV2FieldIdResponse { return v.Field }).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

// If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data
func (o GooglePrivacyDlpV2QuasiIdResponseOutput) Inferred() GoogleProtobufEmptyResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiIdResponse) GoogleProtobufEmptyResponse { return v.Inferred }).(GoogleProtobufEmptyResponseOutput)
}

// A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
func (o GooglePrivacyDlpV2QuasiIdResponseOutput) InfoType() GooglePrivacyDlpV2InfoTypeResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiIdResponse) GooglePrivacyDlpV2InfoTypeResponse { return v.InfoType }).(GooglePrivacyDlpV2InfoTypeResponseOutput)
}

type GooglePrivacyDlpV2QuasiIdResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2QuasiIdResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2QuasiIdResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2QuasiIdResponseArrayOutput) ToGooglePrivacyDlpV2QuasiIdResponseArrayOutput() GooglePrivacyDlpV2QuasiIdResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdResponseArrayOutput) ToGooglePrivacyDlpV2QuasiIdResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2QuasiIdResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2QuasiIdResponse {
		return vs[0].([]GooglePrivacyDlpV2QuasiIdResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2QuasiIdResponseOutput)
}

// A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
type GooglePrivacyDlpV2QuasiIdentifierField struct {
	// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
	CustomTag *string `pulumi:"customTag"`
	// Identifies the column.
	Field *GooglePrivacyDlpV2FieldId `pulumi:"field"`
}

// GooglePrivacyDlpV2QuasiIdentifierFieldInput is an input type that accepts GooglePrivacyDlpV2QuasiIdentifierFieldArgs and GooglePrivacyDlpV2QuasiIdentifierFieldOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2QuasiIdentifierFieldInput` via:
//
//          GooglePrivacyDlpV2QuasiIdentifierFieldArgs{...}
type GooglePrivacyDlpV2QuasiIdentifierFieldInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2QuasiIdentifierFieldOutput() GooglePrivacyDlpV2QuasiIdentifierFieldOutput
	ToGooglePrivacyDlpV2QuasiIdentifierFieldOutputWithContext(context.Context) GooglePrivacyDlpV2QuasiIdentifierFieldOutput
}

// A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
type GooglePrivacyDlpV2QuasiIdentifierFieldArgs struct {
	// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
	CustomTag pulumi.StringPtrInput `pulumi:"customTag"`
	// Identifies the column.
	Field GooglePrivacyDlpV2FieldIdPtrInput `pulumi:"field"`
}

func (GooglePrivacyDlpV2QuasiIdentifierFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2QuasiIdentifierField)(nil)).Elem()
}

func (i GooglePrivacyDlpV2QuasiIdentifierFieldArgs) ToGooglePrivacyDlpV2QuasiIdentifierFieldOutput() GooglePrivacyDlpV2QuasiIdentifierFieldOutput {
	return i.ToGooglePrivacyDlpV2QuasiIdentifierFieldOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2QuasiIdentifierFieldArgs) ToGooglePrivacyDlpV2QuasiIdentifierFieldOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdentifierFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2QuasiIdentifierFieldOutput)
}

// GooglePrivacyDlpV2QuasiIdentifierFieldArrayInput is an input type that accepts GooglePrivacyDlpV2QuasiIdentifierFieldArray and GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2QuasiIdentifierFieldArrayInput` via:
//
//          GooglePrivacyDlpV2QuasiIdentifierFieldArray{ GooglePrivacyDlpV2QuasiIdentifierFieldArgs{...} }
type GooglePrivacyDlpV2QuasiIdentifierFieldArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput() GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput
	ToGooglePrivacyDlpV2QuasiIdentifierFieldArrayOutputWithContext(context.Context) GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput
}

type GooglePrivacyDlpV2QuasiIdentifierFieldArray []GooglePrivacyDlpV2QuasiIdentifierFieldInput

func (GooglePrivacyDlpV2QuasiIdentifierFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2QuasiIdentifierField)(nil)).Elem()
}

func (i GooglePrivacyDlpV2QuasiIdentifierFieldArray) ToGooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput() GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput {
	return i.ToGooglePrivacyDlpV2QuasiIdentifierFieldArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2QuasiIdentifierFieldArray) ToGooglePrivacyDlpV2QuasiIdentifierFieldArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput)
}

// A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
type GooglePrivacyDlpV2QuasiIdentifierFieldOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2QuasiIdentifierFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2QuasiIdentifierField)(nil)).Elem()
}

func (o GooglePrivacyDlpV2QuasiIdentifierFieldOutput) ToGooglePrivacyDlpV2QuasiIdentifierFieldOutput() GooglePrivacyDlpV2QuasiIdentifierFieldOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdentifierFieldOutput) ToGooglePrivacyDlpV2QuasiIdentifierFieldOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdentifierFieldOutput {
	return o
}

// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
func (o GooglePrivacyDlpV2QuasiIdentifierFieldOutput) CustomTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiIdentifierField) *string { return v.CustomTag }).(pulumi.StringPtrOutput)
}

// Identifies the column.
func (o GooglePrivacyDlpV2QuasiIdentifierFieldOutput) Field() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiIdentifierField) *GooglePrivacyDlpV2FieldId { return v.Field }).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

type GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2QuasiIdentifierField)(nil)).Elem()
}

func (o GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput) ToGooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput() GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput) ToGooglePrivacyDlpV2QuasiIdentifierFieldArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2QuasiIdentifierFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2QuasiIdentifierField {
		return vs[0].([]GooglePrivacyDlpV2QuasiIdentifierField)[vs[1].(int)]
	}).(GooglePrivacyDlpV2QuasiIdentifierFieldOutput)
}

// A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
type GooglePrivacyDlpV2QuasiIdentifierFieldResponse struct {
	// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
	CustomTag string `pulumi:"customTag"`
	// Identifies the column.
	Field GooglePrivacyDlpV2FieldIdResponse `pulumi:"field"`
}

// GooglePrivacyDlpV2QuasiIdentifierFieldResponseInput is an input type that accepts GooglePrivacyDlpV2QuasiIdentifierFieldResponseArgs and GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2QuasiIdentifierFieldResponseInput` via:
//
//          GooglePrivacyDlpV2QuasiIdentifierFieldResponseArgs{...}
type GooglePrivacyDlpV2QuasiIdentifierFieldResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput() GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput
	ToGooglePrivacyDlpV2QuasiIdentifierFieldResponseOutputWithContext(context.Context) GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput
}

// A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
type GooglePrivacyDlpV2QuasiIdentifierFieldResponseArgs struct {
	// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
	CustomTag pulumi.StringInput `pulumi:"customTag"`
	// Identifies the column.
	Field GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"field"`
}

func (GooglePrivacyDlpV2QuasiIdentifierFieldResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2QuasiIdentifierFieldResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2QuasiIdentifierFieldResponseArgs) ToGooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput() GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput {
	return i.ToGooglePrivacyDlpV2QuasiIdentifierFieldResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2QuasiIdentifierFieldResponseArgs) ToGooglePrivacyDlpV2QuasiIdentifierFieldResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput)
}

// GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayInput is an input type that accepts GooglePrivacyDlpV2QuasiIdentifierFieldResponseArray and GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayInput` via:
//
//          GooglePrivacyDlpV2QuasiIdentifierFieldResponseArray{ GooglePrivacyDlpV2QuasiIdentifierFieldResponseArgs{...} }
type GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput() GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput
	ToGooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput
}

type GooglePrivacyDlpV2QuasiIdentifierFieldResponseArray []GooglePrivacyDlpV2QuasiIdentifierFieldResponseInput

func (GooglePrivacyDlpV2QuasiIdentifierFieldResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2QuasiIdentifierFieldResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2QuasiIdentifierFieldResponseArray) ToGooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput() GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2QuasiIdentifierFieldResponseArray) ToGooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput)
}

// A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
type GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2QuasiIdentifierFieldResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput) ToGooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput() GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput) ToGooglePrivacyDlpV2QuasiIdentifierFieldResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput {
	return o
}

// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
func (o GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput) CustomTag() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiIdentifierFieldResponse) string { return v.CustomTag }).(pulumi.StringOutput)
}

// Identifies the column.
func (o GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput) Field() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2QuasiIdentifierFieldResponse) GooglePrivacyDlpV2FieldIdResponse {
		return v.Field
	}).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

type GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2QuasiIdentifierFieldResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput) ToGooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput() GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput) ToGooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2QuasiIdentifierFieldResponse {
		return vs[0].([]GooglePrivacyDlpV2QuasiIdentifierFieldResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput)
}

// A condition for determining whether a transformation should be applied to a field.
type GooglePrivacyDlpV2RecordCondition struct {
	// An expression.
	Expressions *GooglePrivacyDlpV2Expressions `pulumi:"expressions"`
}

// GooglePrivacyDlpV2RecordConditionInput is an input type that accepts GooglePrivacyDlpV2RecordConditionArgs and GooglePrivacyDlpV2RecordConditionOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RecordConditionInput` via:
//
//          GooglePrivacyDlpV2RecordConditionArgs{...}
type GooglePrivacyDlpV2RecordConditionInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RecordConditionOutput() GooglePrivacyDlpV2RecordConditionOutput
	ToGooglePrivacyDlpV2RecordConditionOutputWithContext(context.Context) GooglePrivacyDlpV2RecordConditionOutput
}

// A condition for determining whether a transformation should be applied to a field.
type GooglePrivacyDlpV2RecordConditionArgs struct {
	// An expression.
	Expressions GooglePrivacyDlpV2ExpressionsPtrInput `pulumi:"expressions"`
}

func (GooglePrivacyDlpV2RecordConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RecordCondition)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RecordConditionArgs) ToGooglePrivacyDlpV2RecordConditionOutput() GooglePrivacyDlpV2RecordConditionOutput {
	return i.ToGooglePrivacyDlpV2RecordConditionOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RecordConditionArgs) ToGooglePrivacyDlpV2RecordConditionOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RecordConditionOutput)
}

func (i GooglePrivacyDlpV2RecordConditionArgs) ToGooglePrivacyDlpV2RecordConditionPtrOutput() GooglePrivacyDlpV2RecordConditionPtrOutput {
	return i.ToGooglePrivacyDlpV2RecordConditionPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RecordConditionArgs) ToGooglePrivacyDlpV2RecordConditionPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RecordConditionOutput).ToGooglePrivacyDlpV2RecordConditionPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2RecordConditionPtrInput is an input type that accepts GooglePrivacyDlpV2RecordConditionArgs, GooglePrivacyDlpV2RecordConditionPtr and GooglePrivacyDlpV2RecordConditionPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RecordConditionPtrInput` via:
//
//          GooglePrivacyDlpV2RecordConditionArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2RecordConditionPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RecordConditionPtrOutput() GooglePrivacyDlpV2RecordConditionPtrOutput
	ToGooglePrivacyDlpV2RecordConditionPtrOutputWithContext(context.Context) GooglePrivacyDlpV2RecordConditionPtrOutput
}

type googlePrivacyDlpV2RecordConditionPtrType GooglePrivacyDlpV2RecordConditionArgs

func GooglePrivacyDlpV2RecordConditionPtr(v *GooglePrivacyDlpV2RecordConditionArgs) GooglePrivacyDlpV2RecordConditionPtrInput {
	return (*googlePrivacyDlpV2RecordConditionPtrType)(v)
}

func (*googlePrivacyDlpV2RecordConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RecordCondition)(nil)).Elem()
}

func (i *googlePrivacyDlpV2RecordConditionPtrType) ToGooglePrivacyDlpV2RecordConditionPtrOutput() GooglePrivacyDlpV2RecordConditionPtrOutput {
	return i.ToGooglePrivacyDlpV2RecordConditionPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2RecordConditionPtrType) ToGooglePrivacyDlpV2RecordConditionPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RecordConditionPtrOutput)
}

// A condition for determining whether a transformation should be applied to a field.
type GooglePrivacyDlpV2RecordConditionOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RecordConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RecordCondition)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RecordConditionOutput) ToGooglePrivacyDlpV2RecordConditionOutput() GooglePrivacyDlpV2RecordConditionOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordConditionOutput) ToGooglePrivacyDlpV2RecordConditionOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordConditionOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordConditionOutput) ToGooglePrivacyDlpV2RecordConditionPtrOutput() GooglePrivacyDlpV2RecordConditionPtrOutput {
	return o.ToGooglePrivacyDlpV2RecordConditionPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2RecordConditionOutput) ToGooglePrivacyDlpV2RecordConditionPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2RecordCondition) *GooglePrivacyDlpV2RecordCondition {
		return &v
	}).(GooglePrivacyDlpV2RecordConditionPtrOutput)
}

// An expression.
func (o GooglePrivacyDlpV2RecordConditionOutput) Expressions() GooglePrivacyDlpV2ExpressionsPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RecordCondition) *GooglePrivacyDlpV2Expressions { return v.Expressions }).(GooglePrivacyDlpV2ExpressionsPtrOutput)
}

type GooglePrivacyDlpV2RecordConditionPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RecordConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RecordCondition)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RecordConditionPtrOutput) ToGooglePrivacyDlpV2RecordConditionPtrOutput() GooglePrivacyDlpV2RecordConditionPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordConditionPtrOutput) ToGooglePrivacyDlpV2RecordConditionPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordConditionPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordConditionPtrOutput) Elem() GooglePrivacyDlpV2RecordConditionOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RecordCondition) GooglePrivacyDlpV2RecordCondition {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2RecordCondition
		return ret
	}).(GooglePrivacyDlpV2RecordConditionOutput)
}

// An expression.
func (o GooglePrivacyDlpV2RecordConditionPtrOutput) Expressions() GooglePrivacyDlpV2ExpressionsPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RecordCondition) *GooglePrivacyDlpV2Expressions {
		if v == nil {
			return nil
		}
		return v.Expressions
	}).(GooglePrivacyDlpV2ExpressionsPtrOutput)
}

// A condition for determining whether a transformation should be applied to a field.
type GooglePrivacyDlpV2RecordConditionResponse struct {
	// An expression.
	Expressions GooglePrivacyDlpV2ExpressionsResponse `pulumi:"expressions"`
}

// GooglePrivacyDlpV2RecordConditionResponseInput is an input type that accepts GooglePrivacyDlpV2RecordConditionResponseArgs and GooglePrivacyDlpV2RecordConditionResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RecordConditionResponseInput` via:
//
//          GooglePrivacyDlpV2RecordConditionResponseArgs{...}
type GooglePrivacyDlpV2RecordConditionResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RecordConditionResponseOutput() GooglePrivacyDlpV2RecordConditionResponseOutput
	ToGooglePrivacyDlpV2RecordConditionResponseOutputWithContext(context.Context) GooglePrivacyDlpV2RecordConditionResponseOutput
}

// A condition for determining whether a transformation should be applied to a field.
type GooglePrivacyDlpV2RecordConditionResponseArgs struct {
	// An expression.
	Expressions GooglePrivacyDlpV2ExpressionsResponseInput `pulumi:"expressions"`
}

func (GooglePrivacyDlpV2RecordConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RecordConditionResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RecordConditionResponseArgs) ToGooglePrivacyDlpV2RecordConditionResponseOutput() GooglePrivacyDlpV2RecordConditionResponseOutput {
	return i.ToGooglePrivacyDlpV2RecordConditionResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RecordConditionResponseArgs) ToGooglePrivacyDlpV2RecordConditionResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RecordConditionResponseOutput)
}

// A condition for determining whether a transformation should be applied to a field.
type GooglePrivacyDlpV2RecordConditionResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RecordConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RecordConditionResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RecordConditionResponseOutput) ToGooglePrivacyDlpV2RecordConditionResponseOutput() GooglePrivacyDlpV2RecordConditionResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordConditionResponseOutput) ToGooglePrivacyDlpV2RecordConditionResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordConditionResponseOutput {
	return o
}

// An expression.
func (o GooglePrivacyDlpV2RecordConditionResponseOutput) Expressions() GooglePrivacyDlpV2ExpressionsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RecordConditionResponse) GooglePrivacyDlpV2ExpressionsResponse {
		return v.Expressions
	}).(GooglePrivacyDlpV2ExpressionsResponseOutput)
}

// Configuration to suppress records whose suppression conditions evaluate to true.
type GooglePrivacyDlpV2RecordSuppression struct {
	// A condition that when it evaluates to true will result in the record being evaluated to be suppressed from the transformed content.
	Condition *GooglePrivacyDlpV2RecordCondition `pulumi:"condition"`
}

// GooglePrivacyDlpV2RecordSuppressionInput is an input type that accepts GooglePrivacyDlpV2RecordSuppressionArgs and GooglePrivacyDlpV2RecordSuppressionOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RecordSuppressionInput` via:
//
//          GooglePrivacyDlpV2RecordSuppressionArgs{...}
type GooglePrivacyDlpV2RecordSuppressionInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RecordSuppressionOutput() GooglePrivacyDlpV2RecordSuppressionOutput
	ToGooglePrivacyDlpV2RecordSuppressionOutputWithContext(context.Context) GooglePrivacyDlpV2RecordSuppressionOutput
}

// Configuration to suppress records whose suppression conditions evaluate to true.
type GooglePrivacyDlpV2RecordSuppressionArgs struct {
	// A condition that when it evaluates to true will result in the record being evaluated to be suppressed from the transformed content.
	Condition GooglePrivacyDlpV2RecordConditionPtrInput `pulumi:"condition"`
}

func (GooglePrivacyDlpV2RecordSuppressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RecordSuppression)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RecordSuppressionArgs) ToGooglePrivacyDlpV2RecordSuppressionOutput() GooglePrivacyDlpV2RecordSuppressionOutput {
	return i.ToGooglePrivacyDlpV2RecordSuppressionOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RecordSuppressionArgs) ToGooglePrivacyDlpV2RecordSuppressionOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordSuppressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RecordSuppressionOutput)
}

// GooglePrivacyDlpV2RecordSuppressionArrayInput is an input type that accepts GooglePrivacyDlpV2RecordSuppressionArray and GooglePrivacyDlpV2RecordSuppressionArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RecordSuppressionArrayInput` via:
//
//          GooglePrivacyDlpV2RecordSuppressionArray{ GooglePrivacyDlpV2RecordSuppressionArgs{...} }
type GooglePrivacyDlpV2RecordSuppressionArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RecordSuppressionArrayOutput() GooglePrivacyDlpV2RecordSuppressionArrayOutput
	ToGooglePrivacyDlpV2RecordSuppressionArrayOutputWithContext(context.Context) GooglePrivacyDlpV2RecordSuppressionArrayOutput
}

type GooglePrivacyDlpV2RecordSuppressionArray []GooglePrivacyDlpV2RecordSuppressionInput

func (GooglePrivacyDlpV2RecordSuppressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2RecordSuppression)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RecordSuppressionArray) ToGooglePrivacyDlpV2RecordSuppressionArrayOutput() GooglePrivacyDlpV2RecordSuppressionArrayOutput {
	return i.ToGooglePrivacyDlpV2RecordSuppressionArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RecordSuppressionArray) ToGooglePrivacyDlpV2RecordSuppressionArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordSuppressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RecordSuppressionArrayOutput)
}

// Configuration to suppress records whose suppression conditions evaluate to true.
type GooglePrivacyDlpV2RecordSuppressionOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RecordSuppressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RecordSuppression)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RecordSuppressionOutput) ToGooglePrivacyDlpV2RecordSuppressionOutput() GooglePrivacyDlpV2RecordSuppressionOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordSuppressionOutput) ToGooglePrivacyDlpV2RecordSuppressionOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordSuppressionOutput {
	return o
}

// A condition that when it evaluates to true will result in the record being evaluated to be suppressed from the transformed content.
func (o GooglePrivacyDlpV2RecordSuppressionOutput) Condition() GooglePrivacyDlpV2RecordConditionPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RecordSuppression) *GooglePrivacyDlpV2RecordCondition { return v.Condition }).(GooglePrivacyDlpV2RecordConditionPtrOutput)
}

type GooglePrivacyDlpV2RecordSuppressionArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RecordSuppressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2RecordSuppression)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RecordSuppressionArrayOutput) ToGooglePrivacyDlpV2RecordSuppressionArrayOutput() GooglePrivacyDlpV2RecordSuppressionArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordSuppressionArrayOutput) ToGooglePrivacyDlpV2RecordSuppressionArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordSuppressionArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordSuppressionArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2RecordSuppressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2RecordSuppression {
		return vs[0].([]GooglePrivacyDlpV2RecordSuppression)[vs[1].(int)]
	}).(GooglePrivacyDlpV2RecordSuppressionOutput)
}

// Configuration to suppress records whose suppression conditions evaluate to true.
type GooglePrivacyDlpV2RecordSuppressionResponse struct {
	// A condition that when it evaluates to true will result in the record being evaluated to be suppressed from the transformed content.
	Condition GooglePrivacyDlpV2RecordConditionResponse `pulumi:"condition"`
}

// GooglePrivacyDlpV2RecordSuppressionResponseInput is an input type that accepts GooglePrivacyDlpV2RecordSuppressionResponseArgs and GooglePrivacyDlpV2RecordSuppressionResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RecordSuppressionResponseInput` via:
//
//          GooglePrivacyDlpV2RecordSuppressionResponseArgs{...}
type GooglePrivacyDlpV2RecordSuppressionResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RecordSuppressionResponseOutput() GooglePrivacyDlpV2RecordSuppressionResponseOutput
	ToGooglePrivacyDlpV2RecordSuppressionResponseOutputWithContext(context.Context) GooglePrivacyDlpV2RecordSuppressionResponseOutput
}

// Configuration to suppress records whose suppression conditions evaluate to true.
type GooglePrivacyDlpV2RecordSuppressionResponseArgs struct {
	// A condition that when it evaluates to true will result in the record being evaluated to be suppressed from the transformed content.
	Condition GooglePrivacyDlpV2RecordConditionResponseInput `pulumi:"condition"`
}

func (GooglePrivacyDlpV2RecordSuppressionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RecordSuppressionResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RecordSuppressionResponseArgs) ToGooglePrivacyDlpV2RecordSuppressionResponseOutput() GooglePrivacyDlpV2RecordSuppressionResponseOutput {
	return i.ToGooglePrivacyDlpV2RecordSuppressionResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RecordSuppressionResponseArgs) ToGooglePrivacyDlpV2RecordSuppressionResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordSuppressionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RecordSuppressionResponseOutput)
}

// GooglePrivacyDlpV2RecordSuppressionResponseArrayInput is an input type that accepts GooglePrivacyDlpV2RecordSuppressionResponseArray and GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RecordSuppressionResponseArrayInput` via:
//
//          GooglePrivacyDlpV2RecordSuppressionResponseArray{ GooglePrivacyDlpV2RecordSuppressionResponseArgs{...} }
type GooglePrivacyDlpV2RecordSuppressionResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RecordSuppressionResponseArrayOutput() GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput
	ToGooglePrivacyDlpV2RecordSuppressionResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput
}

type GooglePrivacyDlpV2RecordSuppressionResponseArray []GooglePrivacyDlpV2RecordSuppressionResponseInput

func (GooglePrivacyDlpV2RecordSuppressionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2RecordSuppressionResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RecordSuppressionResponseArray) ToGooglePrivacyDlpV2RecordSuppressionResponseArrayOutput() GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2RecordSuppressionResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RecordSuppressionResponseArray) ToGooglePrivacyDlpV2RecordSuppressionResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput)
}

// Configuration to suppress records whose suppression conditions evaluate to true.
type GooglePrivacyDlpV2RecordSuppressionResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RecordSuppressionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RecordSuppressionResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RecordSuppressionResponseOutput) ToGooglePrivacyDlpV2RecordSuppressionResponseOutput() GooglePrivacyDlpV2RecordSuppressionResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordSuppressionResponseOutput) ToGooglePrivacyDlpV2RecordSuppressionResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordSuppressionResponseOutput {
	return o
}

// A condition that when it evaluates to true will result in the record being evaluated to be suppressed from the transformed content.
func (o GooglePrivacyDlpV2RecordSuppressionResponseOutput) Condition() GooglePrivacyDlpV2RecordConditionResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RecordSuppressionResponse) GooglePrivacyDlpV2RecordConditionResponse {
		return v.Condition
	}).(GooglePrivacyDlpV2RecordConditionResponseOutput)
}

type GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2RecordSuppressionResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput) ToGooglePrivacyDlpV2RecordSuppressionResponseArrayOutput() GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput) ToGooglePrivacyDlpV2RecordSuppressionResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2RecordSuppressionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2RecordSuppressionResponse {
		return vs[0].([]GooglePrivacyDlpV2RecordSuppressionResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2RecordSuppressionResponseOutput)
}

// A type of transformation that is applied over structured data such as a table.
type GooglePrivacyDlpV2RecordTransformations struct {
	// Transform the record by applying various field transformations.
	FieldTransformations []GooglePrivacyDlpV2FieldTransformation `pulumi:"fieldTransformations"`
	// Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output.
	RecordSuppressions []GooglePrivacyDlpV2RecordSuppression `pulumi:"recordSuppressions"`
}

// GooglePrivacyDlpV2RecordTransformationsInput is an input type that accepts GooglePrivacyDlpV2RecordTransformationsArgs and GooglePrivacyDlpV2RecordTransformationsOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RecordTransformationsInput` via:
//
//          GooglePrivacyDlpV2RecordTransformationsArgs{...}
type GooglePrivacyDlpV2RecordTransformationsInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RecordTransformationsOutput() GooglePrivacyDlpV2RecordTransformationsOutput
	ToGooglePrivacyDlpV2RecordTransformationsOutputWithContext(context.Context) GooglePrivacyDlpV2RecordTransformationsOutput
}

// A type of transformation that is applied over structured data such as a table.
type GooglePrivacyDlpV2RecordTransformationsArgs struct {
	// Transform the record by applying various field transformations.
	FieldTransformations GooglePrivacyDlpV2FieldTransformationArrayInput `pulumi:"fieldTransformations"`
	// Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output.
	RecordSuppressions GooglePrivacyDlpV2RecordSuppressionArrayInput `pulumi:"recordSuppressions"`
}

func (GooglePrivacyDlpV2RecordTransformationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RecordTransformations)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RecordTransformationsArgs) ToGooglePrivacyDlpV2RecordTransformationsOutput() GooglePrivacyDlpV2RecordTransformationsOutput {
	return i.ToGooglePrivacyDlpV2RecordTransformationsOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RecordTransformationsArgs) ToGooglePrivacyDlpV2RecordTransformationsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordTransformationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RecordTransformationsOutput)
}

func (i GooglePrivacyDlpV2RecordTransformationsArgs) ToGooglePrivacyDlpV2RecordTransformationsPtrOutput() GooglePrivacyDlpV2RecordTransformationsPtrOutput {
	return i.ToGooglePrivacyDlpV2RecordTransformationsPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RecordTransformationsArgs) ToGooglePrivacyDlpV2RecordTransformationsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RecordTransformationsOutput).ToGooglePrivacyDlpV2RecordTransformationsPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2RecordTransformationsPtrInput is an input type that accepts GooglePrivacyDlpV2RecordTransformationsArgs, GooglePrivacyDlpV2RecordTransformationsPtr and GooglePrivacyDlpV2RecordTransformationsPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RecordTransformationsPtrInput` via:
//
//          GooglePrivacyDlpV2RecordTransformationsArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2RecordTransformationsPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RecordTransformationsPtrOutput() GooglePrivacyDlpV2RecordTransformationsPtrOutput
	ToGooglePrivacyDlpV2RecordTransformationsPtrOutputWithContext(context.Context) GooglePrivacyDlpV2RecordTransformationsPtrOutput
}

type googlePrivacyDlpV2RecordTransformationsPtrType GooglePrivacyDlpV2RecordTransformationsArgs

func GooglePrivacyDlpV2RecordTransformationsPtr(v *GooglePrivacyDlpV2RecordTransformationsArgs) GooglePrivacyDlpV2RecordTransformationsPtrInput {
	return (*googlePrivacyDlpV2RecordTransformationsPtrType)(v)
}

func (*googlePrivacyDlpV2RecordTransformationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RecordTransformations)(nil)).Elem()
}

func (i *googlePrivacyDlpV2RecordTransformationsPtrType) ToGooglePrivacyDlpV2RecordTransformationsPtrOutput() GooglePrivacyDlpV2RecordTransformationsPtrOutput {
	return i.ToGooglePrivacyDlpV2RecordTransformationsPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2RecordTransformationsPtrType) ToGooglePrivacyDlpV2RecordTransformationsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RecordTransformationsPtrOutput)
}

// A type of transformation that is applied over structured data such as a table.
type GooglePrivacyDlpV2RecordTransformationsOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RecordTransformationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RecordTransformations)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RecordTransformationsOutput) ToGooglePrivacyDlpV2RecordTransformationsOutput() GooglePrivacyDlpV2RecordTransformationsOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordTransformationsOutput) ToGooglePrivacyDlpV2RecordTransformationsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordTransformationsOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordTransformationsOutput) ToGooglePrivacyDlpV2RecordTransformationsPtrOutput() GooglePrivacyDlpV2RecordTransformationsPtrOutput {
	return o.ToGooglePrivacyDlpV2RecordTransformationsPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2RecordTransformationsOutput) ToGooglePrivacyDlpV2RecordTransformationsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordTransformationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2RecordTransformations) *GooglePrivacyDlpV2RecordTransformations {
		return &v
	}).(GooglePrivacyDlpV2RecordTransformationsPtrOutput)
}

// Transform the record by applying various field transformations.
func (o GooglePrivacyDlpV2RecordTransformationsOutput) FieldTransformations() GooglePrivacyDlpV2FieldTransformationArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RecordTransformations) []GooglePrivacyDlpV2FieldTransformation {
		return v.FieldTransformations
	}).(GooglePrivacyDlpV2FieldTransformationArrayOutput)
}

// Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output.
func (o GooglePrivacyDlpV2RecordTransformationsOutput) RecordSuppressions() GooglePrivacyDlpV2RecordSuppressionArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RecordTransformations) []GooglePrivacyDlpV2RecordSuppression {
		return v.RecordSuppressions
	}).(GooglePrivacyDlpV2RecordSuppressionArrayOutput)
}

type GooglePrivacyDlpV2RecordTransformationsPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RecordTransformationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RecordTransformations)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RecordTransformationsPtrOutput) ToGooglePrivacyDlpV2RecordTransformationsPtrOutput() GooglePrivacyDlpV2RecordTransformationsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordTransformationsPtrOutput) ToGooglePrivacyDlpV2RecordTransformationsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordTransformationsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordTransformationsPtrOutput) Elem() GooglePrivacyDlpV2RecordTransformationsOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RecordTransformations) GooglePrivacyDlpV2RecordTransformations {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2RecordTransformations
		return ret
	}).(GooglePrivacyDlpV2RecordTransformationsOutput)
}

// Transform the record by applying various field transformations.
func (o GooglePrivacyDlpV2RecordTransformationsPtrOutput) FieldTransformations() GooglePrivacyDlpV2FieldTransformationArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RecordTransformations) []GooglePrivacyDlpV2FieldTransformation {
		if v == nil {
			return nil
		}
		return v.FieldTransformations
	}).(GooglePrivacyDlpV2FieldTransformationArrayOutput)
}

// Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output.
func (o GooglePrivacyDlpV2RecordTransformationsPtrOutput) RecordSuppressions() GooglePrivacyDlpV2RecordSuppressionArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RecordTransformations) []GooglePrivacyDlpV2RecordSuppression {
		if v == nil {
			return nil
		}
		return v.RecordSuppressions
	}).(GooglePrivacyDlpV2RecordSuppressionArrayOutput)
}

// A type of transformation that is applied over structured data such as a table.
type GooglePrivacyDlpV2RecordTransformationsResponse struct {
	// Transform the record by applying various field transformations.
	FieldTransformations []GooglePrivacyDlpV2FieldTransformationResponse `pulumi:"fieldTransformations"`
	// Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output.
	RecordSuppressions []GooglePrivacyDlpV2RecordSuppressionResponse `pulumi:"recordSuppressions"`
}

// GooglePrivacyDlpV2RecordTransformationsResponseInput is an input type that accepts GooglePrivacyDlpV2RecordTransformationsResponseArgs and GooglePrivacyDlpV2RecordTransformationsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RecordTransformationsResponseInput` via:
//
//          GooglePrivacyDlpV2RecordTransformationsResponseArgs{...}
type GooglePrivacyDlpV2RecordTransformationsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RecordTransformationsResponseOutput() GooglePrivacyDlpV2RecordTransformationsResponseOutput
	ToGooglePrivacyDlpV2RecordTransformationsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2RecordTransformationsResponseOutput
}

// A type of transformation that is applied over structured data such as a table.
type GooglePrivacyDlpV2RecordTransformationsResponseArgs struct {
	// Transform the record by applying various field transformations.
	FieldTransformations GooglePrivacyDlpV2FieldTransformationResponseArrayInput `pulumi:"fieldTransformations"`
	// Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output.
	RecordSuppressions GooglePrivacyDlpV2RecordSuppressionResponseArrayInput `pulumi:"recordSuppressions"`
}

func (GooglePrivacyDlpV2RecordTransformationsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RecordTransformationsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RecordTransformationsResponseArgs) ToGooglePrivacyDlpV2RecordTransformationsResponseOutput() GooglePrivacyDlpV2RecordTransformationsResponseOutput {
	return i.ToGooglePrivacyDlpV2RecordTransformationsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RecordTransformationsResponseArgs) ToGooglePrivacyDlpV2RecordTransformationsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordTransformationsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RecordTransformationsResponseOutput)
}

func (i GooglePrivacyDlpV2RecordTransformationsResponseArgs) ToGooglePrivacyDlpV2RecordTransformationsResponsePtrOutput() GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2RecordTransformationsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RecordTransformationsResponseArgs) ToGooglePrivacyDlpV2RecordTransformationsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RecordTransformationsResponseOutput).ToGooglePrivacyDlpV2RecordTransformationsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2RecordTransformationsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2RecordTransformationsResponseArgs, GooglePrivacyDlpV2RecordTransformationsResponsePtr and GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RecordTransformationsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2RecordTransformationsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2RecordTransformationsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RecordTransformationsResponsePtrOutput() GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput
	ToGooglePrivacyDlpV2RecordTransformationsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput
}

type googlePrivacyDlpV2RecordTransformationsResponsePtrType GooglePrivacyDlpV2RecordTransformationsResponseArgs

func GooglePrivacyDlpV2RecordTransformationsResponsePtr(v *GooglePrivacyDlpV2RecordTransformationsResponseArgs) GooglePrivacyDlpV2RecordTransformationsResponsePtrInput {
	return (*googlePrivacyDlpV2RecordTransformationsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2RecordTransformationsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RecordTransformationsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2RecordTransformationsResponsePtrType) ToGooglePrivacyDlpV2RecordTransformationsResponsePtrOutput() GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2RecordTransformationsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2RecordTransformationsResponsePtrType) ToGooglePrivacyDlpV2RecordTransformationsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput)
}

// A type of transformation that is applied over structured data such as a table.
type GooglePrivacyDlpV2RecordTransformationsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RecordTransformationsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RecordTransformationsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RecordTransformationsResponseOutput) ToGooglePrivacyDlpV2RecordTransformationsResponseOutput() GooglePrivacyDlpV2RecordTransformationsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordTransformationsResponseOutput) ToGooglePrivacyDlpV2RecordTransformationsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordTransformationsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordTransformationsResponseOutput) ToGooglePrivacyDlpV2RecordTransformationsResponsePtrOutput() GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2RecordTransformationsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2RecordTransformationsResponseOutput) ToGooglePrivacyDlpV2RecordTransformationsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2RecordTransformationsResponse) *GooglePrivacyDlpV2RecordTransformationsResponse {
		return &v
	}).(GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput)
}

// Transform the record by applying various field transformations.
func (o GooglePrivacyDlpV2RecordTransformationsResponseOutput) FieldTransformations() GooglePrivacyDlpV2FieldTransformationResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RecordTransformationsResponse) []GooglePrivacyDlpV2FieldTransformationResponse {
		return v.FieldTransformations
	}).(GooglePrivacyDlpV2FieldTransformationResponseArrayOutput)
}

// Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output.
func (o GooglePrivacyDlpV2RecordTransformationsResponseOutput) RecordSuppressions() GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RecordTransformationsResponse) []GooglePrivacyDlpV2RecordSuppressionResponse {
		return v.RecordSuppressions
	}).(GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput)
}

type GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RecordTransformationsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput) ToGooglePrivacyDlpV2RecordTransformationsResponsePtrOutput() GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput) ToGooglePrivacyDlpV2RecordTransformationsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput) Elem() GooglePrivacyDlpV2RecordTransformationsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RecordTransformationsResponse) GooglePrivacyDlpV2RecordTransformationsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2RecordTransformationsResponse
		return ret
	}).(GooglePrivacyDlpV2RecordTransformationsResponseOutput)
}

// Transform the record by applying various field transformations.
func (o GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput) FieldTransformations() GooglePrivacyDlpV2FieldTransformationResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RecordTransformationsResponse) []GooglePrivacyDlpV2FieldTransformationResponse {
		if v == nil {
			return nil
		}
		return v.FieldTransformations
	}).(GooglePrivacyDlpV2FieldTransformationResponseArrayOutput)
}

// Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output.
func (o GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput) RecordSuppressions() GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RecordTransformationsResponse) []GooglePrivacyDlpV2RecordSuppressionResponse {
		if v == nil {
			return nil
		}
		return v.RecordSuppressions
	}).(GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput)
}

// Redact a given value. For example, if used with an `InfoTypeTransformation` transforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the output would be 'My phone number is '.
type GooglePrivacyDlpV2RedactConfig struct {
}

// GooglePrivacyDlpV2RedactConfigInput is an input type that accepts GooglePrivacyDlpV2RedactConfigArgs and GooglePrivacyDlpV2RedactConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RedactConfigInput` via:
//
//          GooglePrivacyDlpV2RedactConfigArgs{...}
type GooglePrivacyDlpV2RedactConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RedactConfigOutput() GooglePrivacyDlpV2RedactConfigOutput
	ToGooglePrivacyDlpV2RedactConfigOutputWithContext(context.Context) GooglePrivacyDlpV2RedactConfigOutput
}

// Redact a given value. For example, if used with an `InfoTypeTransformation` transforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the output would be 'My phone number is '.
type GooglePrivacyDlpV2RedactConfigArgs struct {
}

func (GooglePrivacyDlpV2RedactConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RedactConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RedactConfigArgs) ToGooglePrivacyDlpV2RedactConfigOutput() GooglePrivacyDlpV2RedactConfigOutput {
	return i.ToGooglePrivacyDlpV2RedactConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RedactConfigArgs) ToGooglePrivacyDlpV2RedactConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RedactConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RedactConfigOutput)
}

func (i GooglePrivacyDlpV2RedactConfigArgs) ToGooglePrivacyDlpV2RedactConfigPtrOutput() GooglePrivacyDlpV2RedactConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2RedactConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RedactConfigArgs) ToGooglePrivacyDlpV2RedactConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RedactConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RedactConfigOutput).ToGooglePrivacyDlpV2RedactConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2RedactConfigPtrInput is an input type that accepts GooglePrivacyDlpV2RedactConfigArgs, GooglePrivacyDlpV2RedactConfigPtr and GooglePrivacyDlpV2RedactConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RedactConfigPtrInput` via:
//
//          GooglePrivacyDlpV2RedactConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2RedactConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RedactConfigPtrOutput() GooglePrivacyDlpV2RedactConfigPtrOutput
	ToGooglePrivacyDlpV2RedactConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2RedactConfigPtrOutput
}

type googlePrivacyDlpV2RedactConfigPtrType GooglePrivacyDlpV2RedactConfigArgs

func GooglePrivacyDlpV2RedactConfigPtr(v *GooglePrivacyDlpV2RedactConfigArgs) GooglePrivacyDlpV2RedactConfigPtrInput {
	return (*googlePrivacyDlpV2RedactConfigPtrType)(v)
}

func (*googlePrivacyDlpV2RedactConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RedactConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2RedactConfigPtrType) ToGooglePrivacyDlpV2RedactConfigPtrOutput() GooglePrivacyDlpV2RedactConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2RedactConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2RedactConfigPtrType) ToGooglePrivacyDlpV2RedactConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RedactConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RedactConfigPtrOutput)
}

// Redact a given value. For example, if used with an `InfoTypeTransformation` transforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the output would be 'My phone number is '.
type GooglePrivacyDlpV2RedactConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RedactConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RedactConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RedactConfigOutput) ToGooglePrivacyDlpV2RedactConfigOutput() GooglePrivacyDlpV2RedactConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2RedactConfigOutput) ToGooglePrivacyDlpV2RedactConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RedactConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2RedactConfigOutput) ToGooglePrivacyDlpV2RedactConfigPtrOutput() GooglePrivacyDlpV2RedactConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2RedactConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2RedactConfigOutput) ToGooglePrivacyDlpV2RedactConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RedactConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2RedactConfig) *GooglePrivacyDlpV2RedactConfig {
		return &v
	}).(GooglePrivacyDlpV2RedactConfigPtrOutput)
}

type GooglePrivacyDlpV2RedactConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RedactConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RedactConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RedactConfigPtrOutput) ToGooglePrivacyDlpV2RedactConfigPtrOutput() GooglePrivacyDlpV2RedactConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RedactConfigPtrOutput) ToGooglePrivacyDlpV2RedactConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RedactConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RedactConfigPtrOutput) Elem() GooglePrivacyDlpV2RedactConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RedactConfig) GooglePrivacyDlpV2RedactConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2RedactConfig
		return ret
	}).(GooglePrivacyDlpV2RedactConfigOutput)
}

// Redact a given value. For example, if used with an `InfoTypeTransformation` transforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the output would be 'My phone number is '.
type GooglePrivacyDlpV2RedactConfigResponse struct {
}

// GooglePrivacyDlpV2RedactConfigResponseInput is an input type that accepts GooglePrivacyDlpV2RedactConfigResponseArgs and GooglePrivacyDlpV2RedactConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RedactConfigResponseInput` via:
//
//          GooglePrivacyDlpV2RedactConfigResponseArgs{...}
type GooglePrivacyDlpV2RedactConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RedactConfigResponseOutput() GooglePrivacyDlpV2RedactConfigResponseOutput
	ToGooglePrivacyDlpV2RedactConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2RedactConfigResponseOutput
}

// Redact a given value. For example, if used with an `InfoTypeTransformation` transforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the output would be 'My phone number is '.
type GooglePrivacyDlpV2RedactConfigResponseArgs struct {
}

func (GooglePrivacyDlpV2RedactConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RedactConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RedactConfigResponseArgs) ToGooglePrivacyDlpV2RedactConfigResponseOutput() GooglePrivacyDlpV2RedactConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2RedactConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RedactConfigResponseArgs) ToGooglePrivacyDlpV2RedactConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RedactConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RedactConfigResponseOutput)
}

// Redact a given value. For example, if used with an `InfoTypeTransformation` transforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the output would be 'My phone number is '.
type GooglePrivacyDlpV2RedactConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RedactConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RedactConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RedactConfigResponseOutput) ToGooglePrivacyDlpV2RedactConfigResponseOutput() GooglePrivacyDlpV2RedactConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2RedactConfigResponseOutput) ToGooglePrivacyDlpV2RedactConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RedactConfigResponseOutput {
	return o
}

// Message defining a custom regular expression.
type GooglePrivacyDlpV2Regex struct {
	// The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.
	GroupIndexes []int `pulumi:"groupIndexes"`
	// Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub.
	Pattern *string `pulumi:"pattern"`
}

// GooglePrivacyDlpV2RegexInput is an input type that accepts GooglePrivacyDlpV2RegexArgs and GooglePrivacyDlpV2RegexOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RegexInput` via:
//
//          GooglePrivacyDlpV2RegexArgs{...}
type GooglePrivacyDlpV2RegexInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RegexOutput() GooglePrivacyDlpV2RegexOutput
	ToGooglePrivacyDlpV2RegexOutputWithContext(context.Context) GooglePrivacyDlpV2RegexOutput
}

// Message defining a custom regular expression.
type GooglePrivacyDlpV2RegexArgs struct {
	// The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.
	GroupIndexes pulumi.IntArrayInput `pulumi:"groupIndexes"`
	// Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
}

func (GooglePrivacyDlpV2RegexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Regex)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RegexArgs) ToGooglePrivacyDlpV2RegexOutput() GooglePrivacyDlpV2RegexOutput {
	return i.ToGooglePrivacyDlpV2RegexOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RegexArgs) ToGooglePrivacyDlpV2RegexOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RegexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RegexOutput)
}

func (i GooglePrivacyDlpV2RegexArgs) ToGooglePrivacyDlpV2RegexPtrOutput() GooglePrivacyDlpV2RegexPtrOutput {
	return i.ToGooglePrivacyDlpV2RegexPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RegexArgs) ToGooglePrivacyDlpV2RegexPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RegexPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RegexOutput).ToGooglePrivacyDlpV2RegexPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2RegexPtrInput is an input type that accepts GooglePrivacyDlpV2RegexArgs, GooglePrivacyDlpV2RegexPtr and GooglePrivacyDlpV2RegexPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RegexPtrInput` via:
//
//          GooglePrivacyDlpV2RegexArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2RegexPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RegexPtrOutput() GooglePrivacyDlpV2RegexPtrOutput
	ToGooglePrivacyDlpV2RegexPtrOutputWithContext(context.Context) GooglePrivacyDlpV2RegexPtrOutput
}

type googlePrivacyDlpV2RegexPtrType GooglePrivacyDlpV2RegexArgs

func GooglePrivacyDlpV2RegexPtr(v *GooglePrivacyDlpV2RegexArgs) GooglePrivacyDlpV2RegexPtrInput {
	return (*googlePrivacyDlpV2RegexPtrType)(v)
}

func (*googlePrivacyDlpV2RegexPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Regex)(nil)).Elem()
}

func (i *googlePrivacyDlpV2RegexPtrType) ToGooglePrivacyDlpV2RegexPtrOutput() GooglePrivacyDlpV2RegexPtrOutput {
	return i.ToGooglePrivacyDlpV2RegexPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2RegexPtrType) ToGooglePrivacyDlpV2RegexPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RegexPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RegexPtrOutput)
}

// Message defining a custom regular expression.
type GooglePrivacyDlpV2RegexOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RegexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Regex)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RegexOutput) ToGooglePrivacyDlpV2RegexOutput() GooglePrivacyDlpV2RegexOutput {
	return o
}

func (o GooglePrivacyDlpV2RegexOutput) ToGooglePrivacyDlpV2RegexOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RegexOutput {
	return o
}

func (o GooglePrivacyDlpV2RegexOutput) ToGooglePrivacyDlpV2RegexPtrOutput() GooglePrivacyDlpV2RegexPtrOutput {
	return o.ToGooglePrivacyDlpV2RegexPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2RegexOutput) ToGooglePrivacyDlpV2RegexPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RegexPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2Regex) *GooglePrivacyDlpV2Regex {
		return &v
	}).(GooglePrivacyDlpV2RegexPtrOutput)
}

// The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.
func (o GooglePrivacyDlpV2RegexOutput) GroupIndexes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Regex) []int { return v.GroupIndexes }).(pulumi.IntArrayOutput)
}

// Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub.
func (o GooglePrivacyDlpV2RegexOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Regex) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2RegexPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RegexPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Regex)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RegexPtrOutput) ToGooglePrivacyDlpV2RegexPtrOutput() GooglePrivacyDlpV2RegexPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RegexPtrOutput) ToGooglePrivacyDlpV2RegexPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RegexPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RegexPtrOutput) Elem() GooglePrivacyDlpV2RegexOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Regex) GooglePrivacyDlpV2Regex {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2Regex
		return ret
	}).(GooglePrivacyDlpV2RegexOutput)
}

// The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.
func (o GooglePrivacyDlpV2RegexPtrOutput) GroupIndexes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Regex) []int {
		if v == nil {
			return nil
		}
		return v.GroupIndexes
	}).(pulumi.IntArrayOutput)
}

// Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub.
func (o GooglePrivacyDlpV2RegexPtrOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Regex) *string {
		if v == nil {
			return nil
		}
		return v.Pattern
	}).(pulumi.StringPtrOutput)
}

// Message defining a custom regular expression.
type GooglePrivacyDlpV2RegexResponse struct {
	// The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.
	GroupIndexes []int `pulumi:"groupIndexes"`
	// Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub.
	Pattern string `pulumi:"pattern"`
}

// GooglePrivacyDlpV2RegexResponseInput is an input type that accepts GooglePrivacyDlpV2RegexResponseArgs and GooglePrivacyDlpV2RegexResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RegexResponseInput` via:
//
//          GooglePrivacyDlpV2RegexResponseArgs{...}
type GooglePrivacyDlpV2RegexResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RegexResponseOutput() GooglePrivacyDlpV2RegexResponseOutput
	ToGooglePrivacyDlpV2RegexResponseOutputWithContext(context.Context) GooglePrivacyDlpV2RegexResponseOutput
}

// Message defining a custom regular expression.
type GooglePrivacyDlpV2RegexResponseArgs struct {
	// The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.
	GroupIndexes pulumi.IntArrayInput `pulumi:"groupIndexes"`
	// Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub.
	Pattern pulumi.StringInput `pulumi:"pattern"`
}

func (GooglePrivacyDlpV2RegexResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RegexResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RegexResponseArgs) ToGooglePrivacyDlpV2RegexResponseOutput() GooglePrivacyDlpV2RegexResponseOutput {
	return i.ToGooglePrivacyDlpV2RegexResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RegexResponseArgs) ToGooglePrivacyDlpV2RegexResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RegexResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RegexResponseOutput)
}

func (i GooglePrivacyDlpV2RegexResponseArgs) ToGooglePrivacyDlpV2RegexResponsePtrOutput() GooglePrivacyDlpV2RegexResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2RegexResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RegexResponseArgs) ToGooglePrivacyDlpV2RegexResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RegexResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RegexResponseOutput).ToGooglePrivacyDlpV2RegexResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2RegexResponsePtrInput is an input type that accepts GooglePrivacyDlpV2RegexResponseArgs, GooglePrivacyDlpV2RegexResponsePtr and GooglePrivacyDlpV2RegexResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RegexResponsePtrInput` via:
//
//          GooglePrivacyDlpV2RegexResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2RegexResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RegexResponsePtrOutput() GooglePrivacyDlpV2RegexResponsePtrOutput
	ToGooglePrivacyDlpV2RegexResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2RegexResponsePtrOutput
}

type googlePrivacyDlpV2RegexResponsePtrType GooglePrivacyDlpV2RegexResponseArgs

func GooglePrivacyDlpV2RegexResponsePtr(v *GooglePrivacyDlpV2RegexResponseArgs) GooglePrivacyDlpV2RegexResponsePtrInput {
	return (*googlePrivacyDlpV2RegexResponsePtrType)(v)
}

func (*googlePrivacyDlpV2RegexResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RegexResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2RegexResponsePtrType) ToGooglePrivacyDlpV2RegexResponsePtrOutput() GooglePrivacyDlpV2RegexResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2RegexResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2RegexResponsePtrType) ToGooglePrivacyDlpV2RegexResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RegexResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RegexResponsePtrOutput)
}

// Message defining a custom regular expression.
type GooglePrivacyDlpV2RegexResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RegexResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RegexResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RegexResponseOutput) ToGooglePrivacyDlpV2RegexResponseOutput() GooglePrivacyDlpV2RegexResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2RegexResponseOutput) ToGooglePrivacyDlpV2RegexResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RegexResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2RegexResponseOutput) ToGooglePrivacyDlpV2RegexResponsePtrOutput() GooglePrivacyDlpV2RegexResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2RegexResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2RegexResponseOutput) ToGooglePrivacyDlpV2RegexResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RegexResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2RegexResponse) *GooglePrivacyDlpV2RegexResponse {
		return &v
	}).(GooglePrivacyDlpV2RegexResponsePtrOutput)
}

// The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.
func (o GooglePrivacyDlpV2RegexResponseOutput) GroupIndexes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RegexResponse) []int { return v.GroupIndexes }).(pulumi.IntArrayOutput)
}

// Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub.
func (o GooglePrivacyDlpV2RegexResponseOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RegexResponse) string { return v.Pattern }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2RegexResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RegexResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RegexResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RegexResponsePtrOutput) ToGooglePrivacyDlpV2RegexResponsePtrOutput() GooglePrivacyDlpV2RegexResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RegexResponsePtrOutput) ToGooglePrivacyDlpV2RegexResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RegexResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RegexResponsePtrOutput) Elem() GooglePrivacyDlpV2RegexResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RegexResponse) GooglePrivacyDlpV2RegexResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2RegexResponse
		return ret
	}).(GooglePrivacyDlpV2RegexResponseOutput)
}

// The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.
func (o GooglePrivacyDlpV2RegexResponsePtrOutput) GroupIndexes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RegexResponse) []int {
		if v == nil {
			return nil
		}
		return v.GroupIndexes
	}).(pulumi.IntArrayOutput)
}

// Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub.
func (o GooglePrivacyDlpV2RegexResponsePtrOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RegexResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Pattern
	}).(pulumi.StringPtrOutput)
}

// Replace each input value with a given `Value`.
type GooglePrivacyDlpV2ReplaceValueConfig struct {
	// Value to replace it with.
	NewValue *GooglePrivacyDlpV2Value `pulumi:"newValue"`
}

// GooglePrivacyDlpV2ReplaceValueConfigInput is an input type that accepts GooglePrivacyDlpV2ReplaceValueConfigArgs and GooglePrivacyDlpV2ReplaceValueConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ReplaceValueConfigInput` via:
//
//          GooglePrivacyDlpV2ReplaceValueConfigArgs{...}
type GooglePrivacyDlpV2ReplaceValueConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ReplaceValueConfigOutput() GooglePrivacyDlpV2ReplaceValueConfigOutput
	ToGooglePrivacyDlpV2ReplaceValueConfigOutputWithContext(context.Context) GooglePrivacyDlpV2ReplaceValueConfigOutput
}

// Replace each input value with a given `Value`.
type GooglePrivacyDlpV2ReplaceValueConfigArgs struct {
	// Value to replace it with.
	NewValue GooglePrivacyDlpV2ValuePtrInput `pulumi:"newValue"`
}

func (GooglePrivacyDlpV2ReplaceValueConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ReplaceValueConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ReplaceValueConfigArgs) ToGooglePrivacyDlpV2ReplaceValueConfigOutput() GooglePrivacyDlpV2ReplaceValueConfigOutput {
	return i.ToGooglePrivacyDlpV2ReplaceValueConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ReplaceValueConfigArgs) ToGooglePrivacyDlpV2ReplaceValueConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceValueConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ReplaceValueConfigOutput)
}

func (i GooglePrivacyDlpV2ReplaceValueConfigArgs) ToGooglePrivacyDlpV2ReplaceValueConfigPtrOutput() GooglePrivacyDlpV2ReplaceValueConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2ReplaceValueConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ReplaceValueConfigArgs) ToGooglePrivacyDlpV2ReplaceValueConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceValueConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ReplaceValueConfigOutput).ToGooglePrivacyDlpV2ReplaceValueConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2ReplaceValueConfigPtrInput is an input type that accepts GooglePrivacyDlpV2ReplaceValueConfigArgs, GooglePrivacyDlpV2ReplaceValueConfigPtr and GooglePrivacyDlpV2ReplaceValueConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ReplaceValueConfigPtrInput` via:
//
//          GooglePrivacyDlpV2ReplaceValueConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2ReplaceValueConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ReplaceValueConfigPtrOutput() GooglePrivacyDlpV2ReplaceValueConfigPtrOutput
	ToGooglePrivacyDlpV2ReplaceValueConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2ReplaceValueConfigPtrOutput
}

type googlePrivacyDlpV2ReplaceValueConfigPtrType GooglePrivacyDlpV2ReplaceValueConfigArgs

func GooglePrivacyDlpV2ReplaceValueConfigPtr(v *GooglePrivacyDlpV2ReplaceValueConfigArgs) GooglePrivacyDlpV2ReplaceValueConfigPtrInput {
	return (*googlePrivacyDlpV2ReplaceValueConfigPtrType)(v)
}

func (*googlePrivacyDlpV2ReplaceValueConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ReplaceValueConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2ReplaceValueConfigPtrType) ToGooglePrivacyDlpV2ReplaceValueConfigPtrOutput() GooglePrivacyDlpV2ReplaceValueConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2ReplaceValueConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2ReplaceValueConfigPtrType) ToGooglePrivacyDlpV2ReplaceValueConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceValueConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ReplaceValueConfigPtrOutput)
}

// Replace each input value with a given `Value`.
type GooglePrivacyDlpV2ReplaceValueConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ReplaceValueConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ReplaceValueConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ReplaceValueConfigOutput) ToGooglePrivacyDlpV2ReplaceValueConfigOutput() GooglePrivacyDlpV2ReplaceValueConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2ReplaceValueConfigOutput) ToGooglePrivacyDlpV2ReplaceValueConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceValueConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2ReplaceValueConfigOutput) ToGooglePrivacyDlpV2ReplaceValueConfigPtrOutput() GooglePrivacyDlpV2ReplaceValueConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2ReplaceValueConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2ReplaceValueConfigOutput) ToGooglePrivacyDlpV2ReplaceValueConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceValueConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2ReplaceValueConfig) *GooglePrivacyDlpV2ReplaceValueConfig {
		return &v
	}).(GooglePrivacyDlpV2ReplaceValueConfigPtrOutput)
}

// Value to replace it with.
func (o GooglePrivacyDlpV2ReplaceValueConfigOutput) NewValue() GooglePrivacyDlpV2ValuePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ReplaceValueConfig) *GooglePrivacyDlpV2Value { return v.NewValue }).(GooglePrivacyDlpV2ValuePtrOutput)
}

type GooglePrivacyDlpV2ReplaceValueConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ReplaceValueConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ReplaceValueConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ReplaceValueConfigPtrOutput) ToGooglePrivacyDlpV2ReplaceValueConfigPtrOutput() GooglePrivacyDlpV2ReplaceValueConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ReplaceValueConfigPtrOutput) ToGooglePrivacyDlpV2ReplaceValueConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceValueConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ReplaceValueConfigPtrOutput) Elem() GooglePrivacyDlpV2ReplaceValueConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ReplaceValueConfig) GooglePrivacyDlpV2ReplaceValueConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2ReplaceValueConfig
		return ret
	}).(GooglePrivacyDlpV2ReplaceValueConfigOutput)
}

// Value to replace it with.
func (o GooglePrivacyDlpV2ReplaceValueConfigPtrOutput) NewValue() GooglePrivacyDlpV2ValuePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ReplaceValueConfig) *GooglePrivacyDlpV2Value {
		if v == nil {
			return nil
		}
		return v.NewValue
	}).(GooglePrivacyDlpV2ValuePtrOutput)
}

// Replace each input value with a given `Value`.
type GooglePrivacyDlpV2ReplaceValueConfigResponse struct {
	// Value to replace it with.
	NewValue GooglePrivacyDlpV2ValueResponse `pulumi:"newValue"`
}

// GooglePrivacyDlpV2ReplaceValueConfigResponseInput is an input type that accepts GooglePrivacyDlpV2ReplaceValueConfigResponseArgs and GooglePrivacyDlpV2ReplaceValueConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ReplaceValueConfigResponseInput` via:
//
//          GooglePrivacyDlpV2ReplaceValueConfigResponseArgs{...}
type GooglePrivacyDlpV2ReplaceValueConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ReplaceValueConfigResponseOutput() GooglePrivacyDlpV2ReplaceValueConfigResponseOutput
	ToGooglePrivacyDlpV2ReplaceValueConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ReplaceValueConfigResponseOutput
}

// Replace each input value with a given `Value`.
type GooglePrivacyDlpV2ReplaceValueConfigResponseArgs struct {
	// Value to replace it with.
	NewValue GooglePrivacyDlpV2ValueResponseInput `pulumi:"newValue"`
}

func (GooglePrivacyDlpV2ReplaceValueConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ReplaceValueConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ReplaceValueConfigResponseArgs) ToGooglePrivacyDlpV2ReplaceValueConfigResponseOutput() GooglePrivacyDlpV2ReplaceValueConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2ReplaceValueConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ReplaceValueConfigResponseArgs) ToGooglePrivacyDlpV2ReplaceValueConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceValueConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ReplaceValueConfigResponseOutput)
}

// Replace each input value with a given `Value`.
type GooglePrivacyDlpV2ReplaceValueConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ReplaceValueConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ReplaceValueConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ReplaceValueConfigResponseOutput) ToGooglePrivacyDlpV2ReplaceValueConfigResponseOutput() GooglePrivacyDlpV2ReplaceValueConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ReplaceValueConfigResponseOutput) ToGooglePrivacyDlpV2ReplaceValueConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceValueConfigResponseOutput {
	return o
}

// Value to replace it with.
func (o GooglePrivacyDlpV2ReplaceValueConfigResponseOutput) NewValue() GooglePrivacyDlpV2ValueResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ReplaceValueConfigResponse) GooglePrivacyDlpV2ValueResponse {
		return v.NewValue
	}).(GooglePrivacyDlpV2ValueResponseOutput)
}

// Replace each matching finding with the name of the info_type.
type GooglePrivacyDlpV2ReplaceWithInfoTypeConfig struct {
}

// GooglePrivacyDlpV2ReplaceWithInfoTypeConfigInput is an input type that accepts GooglePrivacyDlpV2ReplaceWithInfoTypeConfigArgs and GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ReplaceWithInfoTypeConfigInput` via:
//
//          GooglePrivacyDlpV2ReplaceWithInfoTypeConfigArgs{...}
type GooglePrivacyDlpV2ReplaceWithInfoTypeConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput
	ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutputWithContext(context.Context) GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput
}

// Replace each matching finding with the name of the info_type.
type GooglePrivacyDlpV2ReplaceWithInfoTypeConfigArgs struct {
}

func (GooglePrivacyDlpV2ReplaceWithInfoTypeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ReplaceWithInfoTypeConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ReplaceWithInfoTypeConfigArgs) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput {
	return i.ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ReplaceWithInfoTypeConfigArgs) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput)
}

func (i GooglePrivacyDlpV2ReplaceWithInfoTypeConfigArgs) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ReplaceWithInfoTypeConfigArgs) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput).ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrInput is an input type that accepts GooglePrivacyDlpV2ReplaceWithInfoTypeConfigArgs, GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtr and GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrInput` via:
//
//          GooglePrivacyDlpV2ReplaceWithInfoTypeConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput
	ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput
}

type googlePrivacyDlpV2ReplaceWithInfoTypeConfigPtrType GooglePrivacyDlpV2ReplaceWithInfoTypeConfigArgs

func GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtr(v *GooglePrivacyDlpV2ReplaceWithInfoTypeConfigArgs) GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrInput {
	return (*googlePrivacyDlpV2ReplaceWithInfoTypeConfigPtrType)(v)
}

func (*googlePrivacyDlpV2ReplaceWithInfoTypeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ReplaceWithInfoTypeConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2ReplaceWithInfoTypeConfigPtrType) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2ReplaceWithInfoTypeConfigPtrType) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput)
}

// Replace each matching finding with the name of the info_type.
type GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ReplaceWithInfoTypeConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2ReplaceWithInfoTypeConfig) *GooglePrivacyDlpV2ReplaceWithInfoTypeConfig {
		return &v
	}).(GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput)
}

type GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ReplaceWithInfoTypeConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput) Elem() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ReplaceWithInfoTypeConfig) GooglePrivacyDlpV2ReplaceWithInfoTypeConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2ReplaceWithInfoTypeConfig
		return ret
	}).(GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput)
}

// Replace each matching finding with the name of the info_type.
type GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse struct {
}

// GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseInput is an input type that accepts GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseArgs and GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseInput` via:
//
//          GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseArgs{...}
type GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput
	ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput
}

// Replace each matching finding with the name of the info_type.
type GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseArgs struct {
}

func (GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseArgs) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseArgs) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput)
}

// Replace each matching finding with the name of the info_type.
type GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput() GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput) ToGooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput {
	return o
}

// Snapshot of the inspection configuration.
type GooglePrivacyDlpV2RequestedOptionsResponse struct {
	// Inspect config.
	JobConfig GooglePrivacyDlpV2InspectJobConfigResponse `pulumi:"jobConfig"`
	// If run with an InspectTemplate, a snapshot of its state at the time of this run.
	SnapshotInspectTemplate GooglePrivacyDlpV2InspectTemplateResponse `pulumi:"snapshotInspectTemplate"`
}

// GooglePrivacyDlpV2RequestedOptionsResponseInput is an input type that accepts GooglePrivacyDlpV2RequestedOptionsResponseArgs and GooglePrivacyDlpV2RequestedOptionsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RequestedOptionsResponseInput` via:
//
//          GooglePrivacyDlpV2RequestedOptionsResponseArgs{...}
type GooglePrivacyDlpV2RequestedOptionsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RequestedOptionsResponseOutput() GooglePrivacyDlpV2RequestedOptionsResponseOutput
	ToGooglePrivacyDlpV2RequestedOptionsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2RequestedOptionsResponseOutput
}

// Snapshot of the inspection configuration.
type GooglePrivacyDlpV2RequestedOptionsResponseArgs struct {
	// Inspect config.
	JobConfig GooglePrivacyDlpV2InspectJobConfigResponseInput `pulumi:"jobConfig"`
	// If run with an InspectTemplate, a snapshot of its state at the time of this run.
	SnapshotInspectTemplate GooglePrivacyDlpV2InspectTemplateResponseInput `pulumi:"snapshotInspectTemplate"`
}

func (GooglePrivacyDlpV2RequestedOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RequestedOptionsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RequestedOptionsResponseArgs) ToGooglePrivacyDlpV2RequestedOptionsResponseOutput() GooglePrivacyDlpV2RequestedOptionsResponseOutput {
	return i.ToGooglePrivacyDlpV2RequestedOptionsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RequestedOptionsResponseArgs) ToGooglePrivacyDlpV2RequestedOptionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RequestedOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RequestedOptionsResponseOutput)
}

func (i GooglePrivacyDlpV2RequestedOptionsResponseArgs) ToGooglePrivacyDlpV2RequestedOptionsResponsePtrOutput() GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2RequestedOptionsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RequestedOptionsResponseArgs) ToGooglePrivacyDlpV2RequestedOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RequestedOptionsResponseOutput).ToGooglePrivacyDlpV2RequestedOptionsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2RequestedOptionsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2RequestedOptionsResponseArgs, GooglePrivacyDlpV2RequestedOptionsResponsePtr and GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RequestedOptionsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2RequestedOptionsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2RequestedOptionsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RequestedOptionsResponsePtrOutput() GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput
	ToGooglePrivacyDlpV2RequestedOptionsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput
}

type googlePrivacyDlpV2RequestedOptionsResponsePtrType GooglePrivacyDlpV2RequestedOptionsResponseArgs

func GooglePrivacyDlpV2RequestedOptionsResponsePtr(v *GooglePrivacyDlpV2RequestedOptionsResponseArgs) GooglePrivacyDlpV2RequestedOptionsResponsePtrInput {
	return (*googlePrivacyDlpV2RequestedOptionsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2RequestedOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RequestedOptionsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2RequestedOptionsResponsePtrType) ToGooglePrivacyDlpV2RequestedOptionsResponsePtrOutput() GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2RequestedOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2RequestedOptionsResponsePtrType) ToGooglePrivacyDlpV2RequestedOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput)
}

// Snapshot of the inspection configuration.
type GooglePrivacyDlpV2RequestedOptionsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RequestedOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RequestedOptionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RequestedOptionsResponseOutput) ToGooglePrivacyDlpV2RequestedOptionsResponseOutput() GooglePrivacyDlpV2RequestedOptionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2RequestedOptionsResponseOutput) ToGooglePrivacyDlpV2RequestedOptionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RequestedOptionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2RequestedOptionsResponseOutput) ToGooglePrivacyDlpV2RequestedOptionsResponsePtrOutput() GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2RequestedOptionsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2RequestedOptionsResponseOutput) ToGooglePrivacyDlpV2RequestedOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2RequestedOptionsResponse) *GooglePrivacyDlpV2RequestedOptionsResponse {
		return &v
	}).(GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput)
}

// Inspect config.
func (o GooglePrivacyDlpV2RequestedOptionsResponseOutput) JobConfig() GooglePrivacyDlpV2InspectJobConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RequestedOptionsResponse) GooglePrivacyDlpV2InspectJobConfigResponse {
		return v.JobConfig
	}).(GooglePrivacyDlpV2InspectJobConfigResponseOutput)
}

// If run with an InspectTemplate, a snapshot of its state at the time of this run.
func (o GooglePrivacyDlpV2RequestedOptionsResponseOutput) SnapshotInspectTemplate() GooglePrivacyDlpV2InspectTemplateResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RequestedOptionsResponse) GooglePrivacyDlpV2InspectTemplateResponse {
		return v.SnapshotInspectTemplate
	}).(GooglePrivacyDlpV2InspectTemplateResponseOutput)
}

type GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RequestedOptionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput) ToGooglePrivacyDlpV2RequestedOptionsResponsePtrOutput() GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput) ToGooglePrivacyDlpV2RequestedOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput) Elem() GooglePrivacyDlpV2RequestedOptionsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RequestedOptionsResponse) GooglePrivacyDlpV2RequestedOptionsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2RequestedOptionsResponse
		return ret
	}).(GooglePrivacyDlpV2RequestedOptionsResponseOutput)
}

// Inspect config.
func (o GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput) JobConfig() GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RequestedOptionsResponse) *GooglePrivacyDlpV2InspectJobConfigResponse {
		if v == nil {
			return nil
		}
		return &v.JobConfig
	}).(GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput)
}

// If run with an InspectTemplate, a snapshot of its state at the time of this run.
func (o GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput) SnapshotInspectTemplate() GooglePrivacyDlpV2InspectTemplateResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RequestedOptionsResponse) *GooglePrivacyDlpV2InspectTemplateResponse {
		if v == nil {
			return nil
		}
		return &v.SnapshotInspectTemplate
	}).(GooglePrivacyDlpV2InspectTemplateResponsePtrOutput)
}

// Risk analysis options.
type GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse struct {
	// The job config for the risk job.
	JobConfig GooglePrivacyDlpV2RiskAnalysisJobConfigResponse `pulumi:"jobConfig"`
}

// GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseInput is an input type that accepts GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseArgs and GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseInput` via:
//
//          GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseArgs{...}
type GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput() GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput
	ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput
}

// Risk analysis options.
type GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseArgs struct {
	// The job config for the risk job.
	JobConfig GooglePrivacyDlpV2RiskAnalysisJobConfigResponseInput `pulumi:"jobConfig"`
}

func (GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseArgs) ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput() GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput {
	return i.ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseArgs) ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput)
}

func (i GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseArgs) ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput() GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseArgs) ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput).ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseArgs, GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtr and GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput() GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput
	ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput
}

type googlePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrType GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseArgs

func GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtr(v *GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseArgs) GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrInput {
	return (*googlePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrType) ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput() GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrType) ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput)
}

// Risk analysis options.
type GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput) ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput() GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput) ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput) ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput() GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput) ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse) *GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse {
		return &v
	}).(GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput)
}

// The job config for the risk job.
func (o GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput) JobConfig() GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse) GooglePrivacyDlpV2RiskAnalysisJobConfigResponse {
		return v.JobConfig
	}).(GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput)
}

type GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput) ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput() GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput) ToGooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput) Elem() GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse) GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse
		return ret
	}).(GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput)
}

// The job config for the risk job.
func (o GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput) JobConfig() GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponse) *GooglePrivacyDlpV2RiskAnalysisJobConfigResponse {
		if v == nil {
			return nil
		}
		return &v.JobConfig
	}).(GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput)
}

// All result fields mentioned below are updated while the job is processing.
type GooglePrivacyDlpV2ResultResponse struct {
	// Statistics related to the processing of hybrid inspect.
	HybridStats GooglePrivacyDlpV2HybridInspectStatisticsResponse `pulumi:"hybridStats"`
	// Statistics of how many instances of each info type were found during inspect job.
	InfoTypeStats []GooglePrivacyDlpV2InfoTypeStatsResponse `pulumi:"infoTypeStats"`
	// Total size in bytes that were processed.
	ProcessedBytes string `pulumi:"processedBytes"`
	// Estimate of the number of bytes to process.
	TotalEstimatedBytes string `pulumi:"totalEstimatedBytes"`
}

// GooglePrivacyDlpV2ResultResponseInput is an input type that accepts GooglePrivacyDlpV2ResultResponseArgs and GooglePrivacyDlpV2ResultResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ResultResponseInput` via:
//
//          GooglePrivacyDlpV2ResultResponseArgs{...}
type GooglePrivacyDlpV2ResultResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ResultResponseOutput() GooglePrivacyDlpV2ResultResponseOutput
	ToGooglePrivacyDlpV2ResultResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ResultResponseOutput
}

// All result fields mentioned below are updated while the job is processing.
type GooglePrivacyDlpV2ResultResponseArgs struct {
	// Statistics related to the processing of hybrid inspect.
	HybridStats GooglePrivacyDlpV2HybridInspectStatisticsResponseInput `pulumi:"hybridStats"`
	// Statistics of how many instances of each info type were found during inspect job.
	InfoTypeStats GooglePrivacyDlpV2InfoTypeStatsResponseArrayInput `pulumi:"infoTypeStats"`
	// Total size in bytes that were processed.
	ProcessedBytes pulumi.StringInput `pulumi:"processedBytes"`
	// Estimate of the number of bytes to process.
	TotalEstimatedBytes pulumi.StringInput `pulumi:"totalEstimatedBytes"`
}

func (GooglePrivacyDlpV2ResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ResultResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ResultResponseArgs) ToGooglePrivacyDlpV2ResultResponseOutput() GooglePrivacyDlpV2ResultResponseOutput {
	return i.ToGooglePrivacyDlpV2ResultResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ResultResponseArgs) ToGooglePrivacyDlpV2ResultResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ResultResponseOutput)
}

func (i GooglePrivacyDlpV2ResultResponseArgs) ToGooglePrivacyDlpV2ResultResponsePtrOutput() GooglePrivacyDlpV2ResultResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2ResultResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ResultResponseArgs) ToGooglePrivacyDlpV2ResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ResultResponseOutput).ToGooglePrivacyDlpV2ResultResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2ResultResponsePtrInput is an input type that accepts GooglePrivacyDlpV2ResultResponseArgs, GooglePrivacyDlpV2ResultResponsePtr and GooglePrivacyDlpV2ResultResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ResultResponsePtrInput` via:
//
//          GooglePrivacyDlpV2ResultResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2ResultResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ResultResponsePtrOutput() GooglePrivacyDlpV2ResultResponsePtrOutput
	ToGooglePrivacyDlpV2ResultResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2ResultResponsePtrOutput
}

type googlePrivacyDlpV2ResultResponsePtrType GooglePrivacyDlpV2ResultResponseArgs

func GooglePrivacyDlpV2ResultResponsePtr(v *GooglePrivacyDlpV2ResultResponseArgs) GooglePrivacyDlpV2ResultResponsePtrInput {
	return (*googlePrivacyDlpV2ResultResponsePtrType)(v)
}

func (*googlePrivacyDlpV2ResultResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ResultResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2ResultResponsePtrType) ToGooglePrivacyDlpV2ResultResponsePtrOutput() GooglePrivacyDlpV2ResultResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2ResultResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2ResultResponsePtrType) ToGooglePrivacyDlpV2ResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ResultResponsePtrOutput)
}

// All result fields mentioned below are updated while the job is processing.
type GooglePrivacyDlpV2ResultResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ResultResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ResultResponseOutput) ToGooglePrivacyDlpV2ResultResponseOutput() GooglePrivacyDlpV2ResultResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ResultResponseOutput) ToGooglePrivacyDlpV2ResultResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ResultResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ResultResponseOutput) ToGooglePrivacyDlpV2ResultResponsePtrOutput() GooglePrivacyDlpV2ResultResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2ResultResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2ResultResponseOutput) ToGooglePrivacyDlpV2ResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ResultResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2ResultResponse) *GooglePrivacyDlpV2ResultResponse {
		return &v
	}).(GooglePrivacyDlpV2ResultResponsePtrOutput)
}

// Statistics related to the processing of hybrid inspect.
func (o GooglePrivacyDlpV2ResultResponseOutput) HybridStats() GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ResultResponse) GooglePrivacyDlpV2HybridInspectStatisticsResponse {
		return v.HybridStats
	}).(GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput)
}

// Statistics of how many instances of each info type were found during inspect job.
func (o GooglePrivacyDlpV2ResultResponseOutput) InfoTypeStats() GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ResultResponse) []GooglePrivacyDlpV2InfoTypeStatsResponse {
		return v.InfoTypeStats
	}).(GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput)
}

// Total size in bytes that were processed.
func (o GooglePrivacyDlpV2ResultResponseOutput) ProcessedBytes() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ResultResponse) string { return v.ProcessedBytes }).(pulumi.StringOutput)
}

// Estimate of the number of bytes to process.
func (o GooglePrivacyDlpV2ResultResponseOutput) TotalEstimatedBytes() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ResultResponse) string { return v.TotalEstimatedBytes }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2ResultResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ResultResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ResultResponsePtrOutput) ToGooglePrivacyDlpV2ResultResponsePtrOutput() GooglePrivacyDlpV2ResultResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ResultResponsePtrOutput) ToGooglePrivacyDlpV2ResultResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ResultResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ResultResponsePtrOutput) Elem() GooglePrivacyDlpV2ResultResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ResultResponse) GooglePrivacyDlpV2ResultResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2ResultResponse
		return ret
	}).(GooglePrivacyDlpV2ResultResponseOutput)
}

// Statistics related to the processing of hybrid inspect.
func (o GooglePrivacyDlpV2ResultResponsePtrOutput) HybridStats() GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ResultResponse) *GooglePrivacyDlpV2HybridInspectStatisticsResponse {
		if v == nil {
			return nil
		}
		return &v.HybridStats
	}).(GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput)
}

// Statistics of how many instances of each info type were found during inspect job.
func (o GooglePrivacyDlpV2ResultResponsePtrOutput) InfoTypeStats() GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ResultResponse) []GooglePrivacyDlpV2InfoTypeStatsResponse {
		if v == nil {
			return nil
		}
		return v.InfoTypeStats
	}).(GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput)
}

// Total size in bytes that were processed.
func (o GooglePrivacyDlpV2ResultResponsePtrOutput) ProcessedBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProcessedBytes
	}).(pulumi.StringPtrOutput)
}

// Estimate of the number of bytes to process.
func (o GooglePrivacyDlpV2ResultResponsePtrOutput) TotalEstimatedBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TotalEstimatedBytes
	}).(pulumi.StringPtrOutput)
}

// Configuration for a risk analysis job. See https://cloud.google.com/dlp/docs/concepts-risk-analysis to learn more.
type GooglePrivacyDlpV2RiskAnalysisJobConfig struct {
	// Actions to execute at the completion of the job. Are executed in the order provided.
	Actions []GooglePrivacyDlpV2Action `pulumi:"actions"`
	// Privacy metric to compute.
	PrivacyMetric *GooglePrivacyDlpV2PrivacyMetric `pulumi:"privacyMetric"`
	// Input dataset to compute metrics over.
	SourceTable *GooglePrivacyDlpV2BigQueryTable `pulumi:"sourceTable"`
}

// GooglePrivacyDlpV2RiskAnalysisJobConfigInput is an input type that accepts GooglePrivacyDlpV2RiskAnalysisJobConfigArgs and GooglePrivacyDlpV2RiskAnalysisJobConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RiskAnalysisJobConfigInput` via:
//
//          GooglePrivacyDlpV2RiskAnalysisJobConfigArgs{...}
type GooglePrivacyDlpV2RiskAnalysisJobConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RiskAnalysisJobConfigOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigOutput
	ToGooglePrivacyDlpV2RiskAnalysisJobConfigOutputWithContext(context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigOutput
}

// Configuration for a risk analysis job. See https://cloud.google.com/dlp/docs/concepts-risk-analysis to learn more.
type GooglePrivacyDlpV2RiskAnalysisJobConfigArgs struct {
	// Actions to execute at the completion of the job. Are executed in the order provided.
	Actions GooglePrivacyDlpV2ActionArrayInput `pulumi:"actions"`
	// Privacy metric to compute.
	PrivacyMetric GooglePrivacyDlpV2PrivacyMetricPtrInput `pulumi:"privacyMetric"`
	// Input dataset to compute metrics over.
	SourceTable GooglePrivacyDlpV2BigQueryTablePtrInput `pulumi:"sourceTable"`
}

func (GooglePrivacyDlpV2RiskAnalysisJobConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RiskAnalysisJobConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RiskAnalysisJobConfigArgs) ToGooglePrivacyDlpV2RiskAnalysisJobConfigOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigOutput {
	return i.ToGooglePrivacyDlpV2RiskAnalysisJobConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RiskAnalysisJobConfigArgs) ToGooglePrivacyDlpV2RiskAnalysisJobConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RiskAnalysisJobConfigOutput)
}

func (i GooglePrivacyDlpV2RiskAnalysisJobConfigArgs) ToGooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RiskAnalysisJobConfigArgs) ToGooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RiskAnalysisJobConfigOutput).ToGooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2RiskAnalysisJobConfigPtrInput is an input type that accepts GooglePrivacyDlpV2RiskAnalysisJobConfigArgs, GooglePrivacyDlpV2RiskAnalysisJobConfigPtr and GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RiskAnalysisJobConfigPtrInput` via:
//
//          GooglePrivacyDlpV2RiskAnalysisJobConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2RiskAnalysisJobConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput
	ToGooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput
}

type googlePrivacyDlpV2RiskAnalysisJobConfigPtrType GooglePrivacyDlpV2RiskAnalysisJobConfigArgs

func GooglePrivacyDlpV2RiskAnalysisJobConfigPtr(v *GooglePrivacyDlpV2RiskAnalysisJobConfigArgs) GooglePrivacyDlpV2RiskAnalysisJobConfigPtrInput {
	return (*googlePrivacyDlpV2RiskAnalysisJobConfigPtrType)(v)
}

func (*googlePrivacyDlpV2RiskAnalysisJobConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RiskAnalysisJobConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2RiskAnalysisJobConfigPtrType) ToGooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2RiskAnalysisJobConfigPtrType) ToGooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput)
}

// Configuration for a risk analysis job. See https://cloud.google.com/dlp/docs/concepts-risk-analysis to learn more.
type GooglePrivacyDlpV2RiskAnalysisJobConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RiskAnalysisJobConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RiskAnalysisJobConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RiskAnalysisJobConfigOutput) ToGooglePrivacyDlpV2RiskAnalysisJobConfigOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2RiskAnalysisJobConfigOutput) ToGooglePrivacyDlpV2RiskAnalysisJobConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2RiskAnalysisJobConfigOutput) ToGooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2RiskAnalysisJobConfigOutput) ToGooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2RiskAnalysisJobConfig) *GooglePrivacyDlpV2RiskAnalysisJobConfig {
		return &v
	}).(GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput)
}

// Actions to execute at the completion of the job. Are executed in the order provided.
func (o GooglePrivacyDlpV2RiskAnalysisJobConfigOutput) Actions() GooglePrivacyDlpV2ActionArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RiskAnalysisJobConfig) []GooglePrivacyDlpV2Action { return v.Actions }).(GooglePrivacyDlpV2ActionArrayOutput)
}

// Privacy metric to compute.
func (o GooglePrivacyDlpV2RiskAnalysisJobConfigOutput) PrivacyMetric() GooglePrivacyDlpV2PrivacyMetricPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RiskAnalysisJobConfig) *GooglePrivacyDlpV2PrivacyMetric {
		return v.PrivacyMetric
	}).(GooglePrivacyDlpV2PrivacyMetricPtrOutput)
}

// Input dataset to compute metrics over.
func (o GooglePrivacyDlpV2RiskAnalysisJobConfigOutput) SourceTable() GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RiskAnalysisJobConfig) *GooglePrivacyDlpV2BigQueryTable { return v.SourceTable }).(GooglePrivacyDlpV2BigQueryTablePtrOutput)
}

type GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RiskAnalysisJobConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput) ToGooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput) ToGooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput) Elem() GooglePrivacyDlpV2RiskAnalysisJobConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RiskAnalysisJobConfig) GooglePrivacyDlpV2RiskAnalysisJobConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2RiskAnalysisJobConfig
		return ret
	}).(GooglePrivacyDlpV2RiskAnalysisJobConfigOutput)
}

// Actions to execute at the completion of the job. Are executed in the order provided.
func (o GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput) Actions() GooglePrivacyDlpV2ActionArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RiskAnalysisJobConfig) []GooglePrivacyDlpV2Action {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(GooglePrivacyDlpV2ActionArrayOutput)
}

// Privacy metric to compute.
func (o GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput) PrivacyMetric() GooglePrivacyDlpV2PrivacyMetricPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RiskAnalysisJobConfig) *GooglePrivacyDlpV2PrivacyMetric {
		if v == nil {
			return nil
		}
		return v.PrivacyMetric
	}).(GooglePrivacyDlpV2PrivacyMetricPtrOutput)
}

// Input dataset to compute metrics over.
func (o GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput) SourceTable() GooglePrivacyDlpV2BigQueryTablePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RiskAnalysisJobConfig) *GooglePrivacyDlpV2BigQueryTable {
		if v == nil {
			return nil
		}
		return v.SourceTable
	}).(GooglePrivacyDlpV2BigQueryTablePtrOutput)
}

// Configuration for a risk analysis job. See https://cloud.google.com/dlp/docs/concepts-risk-analysis to learn more.
type GooglePrivacyDlpV2RiskAnalysisJobConfigResponse struct {
	// Actions to execute at the completion of the job. Are executed in the order provided.
	Actions []GooglePrivacyDlpV2ActionResponse `pulumi:"actions"`
	// Privacy metric to compute.
	PrivacyMetric GooglePrivacyDlpV2PrivacyMetricResponse `pulumi:"privacyMetric"`
	// Input dataset to compute metrics over.
	SourceTable GooglePrivacyDlpV2BigQueryTableResponse `pulumi:"sourceTable"`
}

// GooglePrivacyDlpV2RiskAnalysisJobConfigResponseInput is an input type that accepts GooglePrivacyDlpV2RiskAnalysisJobConfigResponseArgs and GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RiskAnalysisJobConfigResponseInput` via:
//
//          GooglePrivacyDlpV2RiskAnalysisJobConfigResponseArgs{...}
type GooglePrivacyDlpV2RiskAnalysisJobConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput
	ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput
}

// Configuration for a risk analysis job. See https://cloud.google.com/dlp/docs/concepts-risk-analysis to learn more.
type GooglePrivacyDlpV2RiskAnalysisJobConfigResponseArgs struct {
	// Actions to execute at the completion of the job. Are executed in the order provided.
	Actions GooglePrivacyDlpV2ActionResponseArrayInput `pulumi:"actions"`
	// Privacy metric to compute.
	PrivacyMetric GooglePrivacyDlpV2PrivacyMetricResponseInput `pulumi:"privacyMetric"`
	// Input dataset to compute metrics over.
	SourceTable GooglePrivacyDlpV2BigQueryTableResponseInput `pulumi:"sourceTable"`
}

func (GooglePrivacyDlpV2RiskAnalysisJobConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RiskAnalysisJobConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2RiskAnalysisJobConfigResponseArgs) ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RiskAnalysisJobConfigResponseArgs) ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput)
}

func (i GooglePrivacyDlpV2RiskAnalysisJobConfigResponseArgs) ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2RiskAnalysisJobConfigResponseArgs) ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput).ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrInput is an input type that accepts GooglePrivacyDlpV2RiskAnalysisJobConfigResponseArgs, GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtr and GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrInput` via:
//
//          GooglePrivacyDlpV2RiskAnalysisJobConfigResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput
	ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput
}

type googlePrivacyDlpV2RiskAnalysisJobConfigResponsePtrType GooglePrivacyDlpV2RiskAnalysisJobConfigResponseArgs

func GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtr(v *GooglePrivacyDlpV2RiskAnalysisJobConfigResponseArgs) GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrInput {
	return (*googlePrivacyDlpV2RiskAnalysisJobConfigResponsePtrType)(v)
}

func (*googlePrivacyDlpV2RiskAnalysisJobConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RiskAnalysisJobConfigResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2RiskAnalysisJobConfigResponsePtrType) ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2RiskAnalysisJobConfigResponsePtrType) ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput)
}

// Configuration for a risk analysis job. See https://cloud.google.com/dlp/docs/concepts-risk-analysis to learn more.
type GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2RiskAnalysisJobConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput) ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput) ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput) ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput) ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2RiskAnalysisJobConfigResponse) *GooglePrivacyDlpV2RiskAnalysisJobConfigResponse {
		return &v
	}).(GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput)
}

// Actions to execute at the completion of the job. Are executed in the order provided.
func (o GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput) Actions() GooglePrivacyDlpV2ActionResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RiskAnalysisJobConfigResponse) []GooglePrivacyDlpV2ActionResponse {
		return v.Actions
	}).(GooglePrivacyDlpV2ActionResponseArrayOutput)
}

// Privacy metric to compute.
func (o GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput) PrivacyMetric() GooglePrivacyDlpV2PrivacyMetricResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RiskAnalysisJobConfigResponse) GooglePrivacyDlpV2PrivacyMetricResponse {
		return v.PrivacyMetric
	}).(GooglePrivacyDlpV2PrivacyMetricResponseOutput)
}

// Input dataset to compute metrics over.
func (o GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput) SourceTable() GooglePrivacyDlpV2BigQueryTableResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2RiskAnalysisJobConfigResponse) GooglePrivacyDlpV2BigQueryTableResponse {
		return v.SourceTable
	}).(GooglePrivacyDlpV2BigQueryTableResponseOutput)
}

type GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2RiskAnalysisJobConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput) ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput() GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput) ToGooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput) Elem() GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RiskAnalysisJobConfigResponse) GooglePrivacyDlpV2RiskAnalysisJobConfigResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2RiskAnalysisJobConfigResponse
		return ret
	}).(GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput)
}

// Actions to execute at the completion of the job. Are executed in the order provided.
func (o GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput) Actions() GooglePrivacyDlpV2ActionResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RiskAnalysisJobConfigResponse) []GooglePrivacyDlpV2ActionResponse {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(GooglePrivacyDlpV2ActionResponseArrayOutput)
}

// Privacy metric to compute.
func (o GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput) PrivacyMetric() GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RiskAnalysisJobConfigResponse) *GooglePrivacyDlpV2PrivacyMetricResponse {
		if v == nil {
			return nil
		}
		return &v.PrivacyMetric
	}).(GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput)
}

// Input dataset to compute metrics over.
func (o GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput) SourceTable() GooglePrivacyDlpV2BigQueryTableResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2RiskAnalysisJobConfigResponse) *GooglePrivacyDlpV2BigQueryTableResponse {
		if v == nil {
			return nil
		}
		return &v.SourceTable
	}).(GooglePrivacyDlpV2BigQueryTableResponsePtrOutput)
}

// If set, the detailed findings will be persisted to the specified OutputStorageConfig. Only a single instance of this action can be specified. Compatible with: Inspect, Risk
type GooglePrivacyDlpV2SaveFindings struct {
	// Location to store findings outside of DLP.
	OutputConfig *GooglePrivacyDlpV2OutputStorageConfig `pulumi:"outputConfig"`
}

// GooglePrivacyDlpV2SaveFindingsInput is an input type that accepts GooglePrivacyDlpV2SaveFindingsArgs and GooglePrivacyDlpV2SaveFindingsOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2SaveFindingsInput` via:
//
//          GooglePrivacyDlpV2SaveFindingsArgs{...}
type GooglePrivacyDlpV2SaveFindingsInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2SaveFindingsOutput() GooglePrivacyDlpV2SaveFindingsOutput
	ToGooglePrivacyDlpV2SaveFindingsOutputWithContext(context.Context) GooglePrivacyDlpV2SaveFindingsOutput
}

// If set, the detailed findings will be persisted to the specified OutputStorageConfig. Only a single instance of this action can be specified. Compatible with: Inspect, Risk
type GooglePrivacyDlpV2SaveFindingsArgs struct {
	// Location to store findings outside of DLP.
	OutputConfig GooglePrivacyDlpV2OutputStorageConfigPtrInput `pulumi:"outputConfig"`
}

func (GooglePrivacyDlpV2SaveFindingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2SaveFindings)(nil)).Elem()
}

func (i GooglePrivacyDlpV2SaveFindingsArgs) ToGooglePrivacyDlpV2SaveFindingsOutput() GooglePrivacyDlpV2SaveFindingsOutput {
	return i.ToGooglePrivacyDlpV2SaveFindingsOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2SaveFindingsArgs) ToGooglePrivacyDlpV2SaveFindingsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SaveFindingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2SaveFindingsOutput)
}

func (i GooglePrivacyDlpV2SaveFindingsArgs) ToGooglePrivacyDlpV2SaveFindingsPtrOutput() GooglePrivacyDlpV2SaveFindingsPtrOutput {
	return i.ToGooglePrivacyDlpV2SaveFindingsPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2SaveFindingsArgs) ToGooglePrivacyDlpV2SaveFindingsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SaveFindingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2SaveFindingsOutput).ToGooglePrivacyDlpV2SaveFindingsPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2SaveFindingsPtrInput is an input type that accepts GooglePrivacyDlpV2SaveFindingsArgs, GooglePrivacyDlpV2SaveFindingsPtr and GooglePrivacyDlpV2SaveFindingsPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2SaveFindingsPtrInput` via:
//
//          GooglePrivacyDlpV2SaveFindingsArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2SaveFindingsPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2SaveFindingsPtrOutput() GooglePrivacyDlpV2SaveFindingsPtrOutput
	ToGooglePrivacyDlpV2SaveFindingsPtrOutputWithContext(context.Context) GooglePrivacyDlpV2SaveFindingsPtrOutput
}

type googlePrivacyDlpV2SaveFindingsPtrType GooglePrivacyDlpV2SaveFindingsArgs

func GooglePrivacyDlpV2SaveFindingsPtr(v *GooglePrivacyDlpV2SaveFindingsArgs) GooglePrivacyDlpV2SaveFindingsPtrInput {
	return (*googlePrivacyDlpV2SaveFindingsPtrType)(v)
}

func (*googlePrivacyDlpV2SaveFindingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2SaveFindings)(nil)).Elem()
}

func (i *googlePrivacyDlpV2SaveFindingsPtrType) ToGooglePrivacyDlpV2SaveFindingsPtrOutput() GooglePrivacyDlpV2SaveFindingsPtrOutput {
	return i.ToGooglePrivacyDlpV2SaveFindingsPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2SaveFindingsPtrType) ToGooglePrivacyDlpV2SaveFindingsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SaveFindingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2SaveFindingsPtrOutput)
}

// If set, the detailed findings will be persisted to the specified OutputStorageConfig. Only a single instance of this action can be specified. Compatible with: Inspect, Risk
type GooglePrivacyDlpV2SaveFindingsOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2SaveFindingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2SaveFindings)(nil)).Elem()
}

func (o GooglePrivacyDlpV2SaveFindingsOutput) ToGooglePrivacyDlpV2SaveFindingsOutput() GooglePrivacyDlpV2SaveFindingsOutput {
	return o
}

func (o GooglePrivacyDlpV2SaveFindingsOutput) ToGooglePrivacyDlpV2SaveFindingsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SaveFindingsOutput {
	return o
}

func (o GooglePrivacyDlpV2SaveFindingsOutput) ToGooglePrivacyDlpV2SaveFindingsPtrOutput() GooglePrivacyDlpV2SaveFindingsPtrOutput {
	return o.ToGooglePrivacyDlpV2SaveFindingsPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2SaveFindingsOutput) ToGooglePrivacyDlpV2SaveFindingsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SaveFindingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2SaveFindings) *GooglePrivacyDlpV2SaveFindings {
		return &v
	}).(GooglePrivacyDlpV2SaveFindingsPtrOutput)
}

// Location to store findings outside of DLP.
func (o GooglePrivacyDlpV2SaveFindingsOutput) OutputConfig() GooglePrivacyDlpV2OutputStorageConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2SaveFindings) *GooglePrivacyDlpV2OutputStorageConfig { return v.OutputConfig }).(GooglePrivacyDlpV2OutputStorageConfigPtrOutput)
}

type GooglePrivacyDlpV2SaveFindingsPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2SaveFindingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2SaveFindings)(nil)).Elem()
}

func (o GooglePrivacyDlpV2SaveFindingsPtrOutput) ToGooglePrivacyDlpV2SaveFindingsPtrOutput() GooglePrivacyDlpV2SaveFindingsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2SaveFindingsPtrOutput) ToGooglePrivacyDlpV2SaveFindingsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SaveFindingsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2SaveFindingsPtrOutput) Elem() GooglePrivacyDlpV2SaveFindingsOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2SaveFindings) GooglePrivacyDlpV2SaveFindings {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2SaveFindings
		return ret
	}).(GooglePrivacyDlpV2SaveFindingsOutput)
}

// Location to store findings outside of DLP.
func (o GooglePrivacyDlpV2SaveFindingsPtrOutput) OutputConfig() GooglePrivacyDlpV2OutputStorageConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2SaveFindings) *GooglePrivacyDlpV2OutputStorageConfig {
		if v == nil {
			return nil
		}
		return v.OutputConfig
	}).(GooglePrivacyDlpV2OutputStorageConfigPtrOutput)
}

// If set, the detailed findings will be persisted to the specified OutputStorageConfig. Only a single instance of this action can be specified. Compatible with: Inspect, Risk
type GooglePrivacyDlpV2SaveFindingsResponse struct {
	// Location to store findings outside of DLP.
	OutputConfig GooglePrivacyDlpV2OutputStorageConfigResponse `pulumi:"outputConfig"`
}

// GooglePrivacyDlpV2SaveFindingsResponseInput is an input type that accepts GooglePrivacyDlpV2SaveFindingsResponseArgs and GooglePrivacyDlpV2SaveFindingsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2SaveFindingsResponseInput` via:
//
//          GooglePrivacyDlpV2SaveFindingsResponseArgs{...}
type GooglePrivacyDlpV2SaveFindingsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2SaveFindingsResponseOutput() GooglePrivacyDlpV2SaveFindingsResponseOutput
	ToGooglePrivacyDlpV2SaveFindingsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2SaveFindingsResponseOutput
}

// If set, the detailed findings will be persisted to the specified OutputStorageConfig. Only a single instance of this action can be specified. Compatible with: Inspect, Risk
type GooglePrivacyDlpV2SaveFindingsResponseArgs struct {
	// Location to store findings outside of DLP.
	OutputConfig GooglePrivacyDlpV2OutputStorageConfigResponseInput `pulumi:"outputConfig"`
}

func (GooglePrivacyDlpV2SaveFindingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2SaveFindingsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2SaveFindingsResponseArgs) ToGooglePrivacyDlpV2SaveFindingsResponseOutput() GooglePrivacyDlpV2SaveFindingsResponseOutput {
	return i.ToGooglePrivacyDlpV2SaveFindingsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2SaveFindingsResponseArgs) ToGooglePrivacyDlpV2SaveFindingsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SaveFindingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2SaveFindingsResponseOutput)
}

// If set, the detailed findings will be persisted to the specified OutputStorageConfig. Only a single instance of this action can be specified. Compatible with: Inspect, Risk
type GooglePrivacyDlpV2SaveFindingsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2SaveFindingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2SaveFindingsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2SaveFindingsResponseOutput) ToGooglePrivacyDlpV2SaveFindingsResponseOutput() GooglePrivacyDlpV2SaveFindingsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2SaveFindingsResponseOutput) ToGooglePrivacyDlpV2SaveFindingsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SaveFindingsResponseOutput {
	return o
}

// Location to store findings outside of DLP.
func (o GooglePrivacyDlpV2SaveFindingsResponseOutput) OutputConfig() GooglePrivacyDlpV2OutputStorageConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2SaveFindingsResponse) GooglePrivacyDlpV2OutputStorageConfigResponse {
		return v.OutputConfig
	}).(GooglePrivacyDlpV2OutputStorageConfigResponseOutput)
}

// Schedule for inspect job triggers.
type GooglePrivacyDlpV2Schedule struct {
	// With this option a job is started a regular periodic basis. For example: every day (86400 seconds). A scheduled start time will be skipped if the previous execution has not ended when its scheduled time occurs. This value must be set to a time duration greater than or equal to 1 day and can be no longer than 60 days.
	RecurrencePeriodDuration *string `pulumi:"recurrencePeriodDuration"`
}

// GooglePrivacyDlpV2ScheduleInput is an input type that accepts GooglePrivacyDlpV2ScheduleArgs and GooglePrivacyDlpV2ScheduleOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ScheduleInput` via:
//
//          GooglePrivacyDlpV2ScheduleArgs{...}
type GooglePrivacyDlpV2ScheduleInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ScheduleOutput() GooglePrivacyDlpV2ScheduleOutput
	ToGooglePrivacyDlpV2ScheduleOutputWithContext(context.Context) GooglePrivacyDlpV2ScheduleOutput
}

// Schedule for inspect job triggers.
type GooglePrivacyDlpV2ScheduleArgs struct {
	// With this option a job is started a regular periodic basis. For example: every day (86400 seconds). A scheduled start time will be skipped if the previous execution has not ended when its scheduled time occurs. This value must be set to a time duration greater than or equal to 1 day and can be no longer than 60 days.
	RecurrencePeriodDuration pulumi.StringPtrInput `pulumi:"recurrencePeriodDuration"`
}

func (GooglePrivacyDlpV2ScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Schedule)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ScheduleArgs) ToGooglePrivacyDlpV2ScheduleOutput() GooglePrivacyDlpV2ScheduleOutput {
	return i.ToGooglePrivacyDlpV2ScheduleOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ScheduleArgs) ToGooglePrivacyDlpV2ScheduleOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ScheduleOutput)
}

func (i GooglePrivacyDlpV2ScheduleArgs) ToGooglePrivacyDlpV2SchedulePtrOutput() GooglePrivacyDlpV2SchedulePtrOutput {
	return i.ToGooglePrivacyDlpV2SchedulePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ScheduleArgs) ToGooglePrivacyDlpV2SchedulePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ScheduleOutput).ToGooglePrivacyDlpV2SchedulePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2SchedulePtrInput is an input type that accepts GooglePrivacyDlpV2ScheduleArgs, GooglePrivacyDlpV2SchedulePtr and GooglePrivacyDlpV2SchedulePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2SchedulePtrInput` via:
//
//          GooglePrivacyDlpV2ScheduleArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2SchedulePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2SchedulePtrOutput() GooglePrivacyDlpV2SchedulePtrOutput
	ToGooglePrivacyDlpV2SchedulePtrOutputWithContext(context.Context) GooglePrivacyDlpV2SchedulePtrOutput
}

type googlePrivacyDlpV2SchedulePtrType GooglePrivacyDlpV2ScheduleArgs

func GooglePrivacyDlpV2SchedulePtr(v *GooglePrivacyDlpV2ScheduleArgs) GooglePrivacyDlpV2SchedulePtrInput {
	return (*googlePrivacyDlpV2SchedulePtrType)(v)
}

func (*googlePrivacyDlpV2SchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Schedule)(nil)).Elem()
}

func (i *googlePrivacyDlpV2SchedulePtrType) ToGooglePrivacyDlpV2SchedulePtrOutput() GooglePrivacyDlpV2SchedulePtrOutput {
	return i.ToGooglePrivacyDlpV2SchedulePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2SchedulePtrType) ToGooglePrivacyDlpV2SchedulePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2SchedulePtrOutput)
}

// Schedule for inspect job triggers.
type GooglePrivacyDlpV2ScheduleOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Schedule)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ScheduleOutput) ToGooglePrivacyDlpV2ScheduleOutput() GooglePrivacyDlpV2ScheduleOutput {
	return o
}

func (o GooglePrivacyDlpV2ScheduleOutput) ToGooglePrivacyDlpV2ScheduleOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ScheduleOutput {
	return o
}

func (o GooglePrivacyDlpV2ScheduleOutput) ToGooglePrivacyDlpV2SchedulePtrOutput() GooglePrivacyDlpV2SchedulePtrOutput {
	return o.ToGooglePrivacyDlpV2SchedulePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2ScheduleOutput) ToGooglePrivacyDlpV2SchedulePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2Schedule) *GooglePrivacyDlpV2Schedule {
		return &v
	}).(GooglePrivacyDlpV2SchedulePtrOutput)
}

// With this option a job is started a regular periodic basis. For example: every day (86400 seconds). A scheduled start time will be skipped if the previous execution has not ended when its scheduled time occurs. This value must be set to a time duration greater than or equal to 1 day and can be no longer than 60 days.
func (o GooglePrivacyDlpV2ScheduleOutput) RecurrencePeriodDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Schedule) *string { return v.RecurrencePeriodDuration }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2SchedulePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2SchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Schedule)(nil)).Elem()
}

func (o GooglePrivacyDlpV2SchedulePtrOutput) ToGooglePrivacyDlpV2SchedulePtrOutput() GooglePrivacyDlpV2SchedulePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2SchedulePtrOutput) ToGooglePrivacyDlpV2SchedulePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SchedulePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2SchedulePtrOutput) Elem() GooglePrivacyDlpV2ScheduleOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Schedule) GooglePrivacyDlpV2Schedule {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2Schedule
		return ret
	}).(GooglePrivacyDlpV2ScheduleOutput)
}

// With this option a job is started a regular periodic basis. For example: every day (86400 seconds). A scheduled start time will be skipped if the previous execution has not ended when its scheduled time occurs. This value must be set to a time duration greater than or equal to 1 day and can be no longer than 60 days.
func (o GooglePrivacyDlpV2SchedulePtrOutput) RecurrencePeriodDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Schedule) *string {
		if v == nil {
			return nil
		}
		return v.RecurrencePeriodDuration
	}).(pulumi.StringPtrOutput)
}

// Schedule for inspect job triggers.
type GooglePrivacyDlpV2ScheduleResponse struct {
	// With this option a job is started a regular periodic basis. For example: every day (86400 seconds). A scheduled start time will be skipped if the previous execution has not ended when its scheduled time occurs. This value must be set to a time duration greater than or equal to 1 day and can be no longer than 60 days.
	RecurrencePeriodDuration string `pulumi:"recurrencePeriodDuration"`
}

// GooglePrivacyDlpV2ScheduleResponseInput is an input type that accepts GooglePrivacyDlpV2ScheduleResponseArgs and GooglePrivacyDlpV2ScheduleResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ScheduleResponseInput` via:
//
//          GooglePrivacyDlpV2ScheduleResponseArgs{...}
type GooglePrivacyDlpV2ScheduleResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ScheduleResponseOutput() GooglePrivacyDlpV2ScheduleResponseOutput
	ToGooglePrivacyDlpV2ScheduleResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ScheduleResponseOutput
}

// Schedule for inspect job triggers.
type GooglePrivacyDlpV2ScheduleResponseArgs struct {
	// With this option a job is started a regular periodic basis. For example: every day (86400 seconds). A scheduled start time will be skipped if the previous execution has not ended when its scheduled time occurs. This value must be set to a time duration greater than or equal to 1 day and can be no longer than 60 days.
	RecurrencePeriodDuration pulumi.StringInput `pulumi:"recurrencePeriodDuration"`
}

func (GooglePrivacyDlpV2ScheduleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ScheduleResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ScheduleResponseArgs) ToGooglePrivacyDlpV2ScheduleResponseOutput() GooglePrivacyDlpV2ScheduleResponseOutput {
	return i.ToGooglePrivacyDlpV2ScheduleResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ScheduleResponseArgs) ToGooglePrivacyDlpV2ScheduleResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ScheduleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ScheduleResponseOutput)
}

// Schedule for inspect job triggers.
type GooglePrivacyDlpV2ScheduleResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ScheduleResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ScheduleResponseOutput) ToGooglePrivacyDlpV2ScheduleResponseOutput() GooglePrivacyDlpV2ScheduleResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ScheduleResponseOutput) ToGooglePrivacyDlpV2ScheduleResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ScheduleResponseOutput {
	return o
}

// With this option a job is started a regular periodic basis. For example: every day (86400 seconds). A scheduled start time will be skipped if the previous execution has not ended when its scheduled time occurs. This value must be set to a time duration greater than or equal to 1 day and can be no longer than 60 days.
func (o GooglePrivacyDlpV2ScheduleResponseOutput) RecurrencePeriodDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ScheduleResponse) string { return v.RecurrencePeriodDuration }).(pulumi.StringOutput)
}

// An auxiliary table containing statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
type GooglePrivacyDlpV2StatisticalTable struct {
	// Quasi-identifier columns.
	QuasiIds []GooglePrivacyDlpV2QuasiIdentifierField `pulumi:"quasiIds"`
	// The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
	RelativeFrequency GooglePrivacyDlpV2FieldId `pulumi:"relativeFrequency"`
	// Auxiliary table location.
	Table GooglePrivacyDlpV2BigQueryTable `pulumi:"table"`
}

// GooglePrivacyDlpV2StatisticalTableInput is an input type that accepts GooglePrivacyDlpV2StatisticalTableArgs and GooglePrivacyDlpV2StatisticalTableOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StatisticalTableInput` via:
//
//          GooglePrivacyDlpV2StatisticalTableArgs{...}
type GooglePrivacyDlpV2StatisticalTableInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StatisticalTableOutput() GooglePrivacyDlpV2StatisticalTableOutput
	ToGooglePrivacyDlpV2StatisticalTableOutputWithContext(context.Context) GooglePrivacyDlpV2StatisticalTableOutput
}

// An auxiliary table containing statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
type GooglePrivacyDlpV2StatisticalTableArgs struct {
	// Quasi-identifier columns.
	QuasiIds GooglePrivacyDlpV2QuasiIdentifierFieldArrayInput `pulumi:"quasiIds"`
	// The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
	RelativeFrequency GooglePrivacyDlpV2FieldIdInput `pulumi:"relativeFrequency"`
	// Auxiliary table location.
	Table GooglePrivacyDlpV2BigQueryTableInput `pulumi:"table"`
}

func (GooglePrivacyDlpV2StatisticalTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StatisticalTable)(nil)).Elem()
}

func (i GooglePrivacyDlpV2StatisticalTableArgs) ToGooglePrivacyDlpV2StatisticalTableOutput() GooglePrivacyDlpV2StatisticalTableOutput {
	return i.ToGooglePrivacyDlpV2StatisticalTableOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StatisticalTableArgs) ToGooglePrivacyDlpV2StatisticalTableOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StatisticalTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StatisticalTableOutput)
}

// GooglePrivacyDlpV2StatisticalTableArrayInput is an input type that accepts GooglePrivacyDlpV2StatisticalTableArray and GooglePrivacyDlpV2StatisticalTableArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StatisticalTableArrayInput` via:
//
//          GooglePrivacyDlpV2StatisticalTableArray{ GooglePrivacyDlpV2StatisticalTableArgs{...} }
type GooglePrivacyDlpV2StatisticalTableArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StatisticalTableArrayOutput() GooglePrivacyDlpV2StatisticalTableArrayOutput
	ToGooglePrivacyDlpV2StatisticalTableArrayOutputWithContext(context.Context) GooglePrivacyDlpV2StatisticalTableArrayOutput
}

type GooglePrivacyDlpV2StatisticalTableArray []GooglePrivacyDlpV2StatisticalTableInput

func (GooglePrivacyDlpV2StatisticalTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2StatisticalTable)(nil)).Elem()
}

func (i GooglePrivacyDlpV2StatisticalTableArray) ToGooglePrivacyDlpV2StatisticalTableArrayOutput() GooglePrivacyDlpV2StatisticalTableArrayOutput {
	return i.ToGooglePrivacyDlpV2StatisticalTableArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StatisticalTableArray) ToGooglePrivacyDlpV2StatisticalTableArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StatisticalTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StatisticalTableArrayOutput)
}

// An auxiliary table containing statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
type GooglePrivacyDlpV2StatisticalTableOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StatisticalTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StatisticalTable)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StatisticalTableOutput) ToGooglePrivacyDlpV2StatisticalTableOutput() GooglePrivacyDlpV2StatisticalTableOutput {
	return o
}

func (o GooglePrivacyDlpV2StatisticalTableOutput) ToGooglePrivacyDlpV2StatisticalTableOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StatisticalTableOutput {
	return o
}

// Quasi-identifier columns.
func (o GooglePrivacyDlpV2StatisticalTableOutput) QuasiIds() GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StatisticalTable) []GooglePrivacyDlpV2QuasiIdentifierField { return v.QuasiIds }).(GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput)
}

// The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
func (o GooglePrivacyDlpV2StatisticalTableOutput) RelativeFrequency() GooglePrivacyDlpV2FieldIdOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StatisticalTable) GooglePrivacyDlpV2FieldId { return v.RelativeFrequency }).(GooglePrivacyDlpV2FieldIdOutput)
}

// Auxiliary table location.
func (o GooglePrivacyDlpV2StatisticalTableOutput) Table() GooglePrivacyDlpV2BigQueryTableOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StatisticalTable) GooglePrivacyDlpV2BigQueryTable { return v.Table }).(GooglePrivacyDlpV2BigQueryTableOutput)
}

type GooglePrivacyDlpV2StatisticalTableArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StatisticalTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2StatisticalTable)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StatisticalTableArrayOutput) ToGooglePrivacyDlpV2StatisticalTableArrayOutput() GooglePrivacyDlpV2StatisticalTableArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2StatisticalTableArrayOutput) ToGooglePrivacyDlpV2StatisticalTableArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StatisticalTableArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2StatisticalTableArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2StatisticalTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2StatisticalTable {
		return vs[0].([]GooglePrivacyDlpV2StatisticalTable)[vs[1].(int)]
	}).(GooglePrivacyDlpV2StatisticalTableOutput)
}

// An auxiliary table containing statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
type GooglePrivacyDlpV2StatisticalTableResponse struct {
	// Quasi-identifier columns.
	QuasiIds []GooglePrivacyDlpV2QuasiIdentifierFieldResponse `pulumi:"quasiIds"`
	// The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
	RelativeFrequency GooglePrivacyDlpV2FieldIdResponse `pulumi:"relativeFrequency"`
	// Auxiliary table location.
	Table GooglePrivacyDlpV2BigQueryTableResponse `pulumi:"table"`
}

// GooglePrivacyDlpV2StatisticalTableResponseInput is an input type that accepts GooglePrivacyDlpV2StatisticalTableResponseArgs and GooglePrivacyDlpV2StatisticalTableResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StatisticalTableResponseInput` via:
//
//          GooglePrivacyDlpV2StatisticalTableResponseArgs{...}
type GooglePrivacyDlpV2StatisticalTableResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StatisticalTableResponseOutput() GooglePrivacyDlpV2StatisticalTableResponseOutput
	ToGooglePrivacyDlpV2StatisticalTableResponseOutputWithContext(context.Context) GooglePrivacyDlpV2StatisticalTableResponseOutput
}

// An auxiliary table containing statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
type GooglePrivacyDlpV2StatisticalTableResponseArgs struct {
	// Quasi-identifier columns.
	QuasiIds GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayInput `pulumi:"quasiIds"`
	// The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
	RelativeFrequency GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"relativeFrequency"`
	// Auxiliary table location.
	Table GooglePrivacyDlpV2BigQueryTableResponseInput `pulumi:"table"`
}

func (GooglePrivacyDlpV2StatisticalTableResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StatisticalTableResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2StatisticalTableResponseArgs) ToGooglePrivacyDlpV2StatisticalTableResponseOutput() GooglePrivacyDlpV2StatisticalTableResponseOutput {
	return i.ToGooglePrivacyDlpV2StatisticalTableResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StatisticalTableResponseArgs) ToGooglePrivacyDlpV2StatisticalTableResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StatisticalTableResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StatisticalTableResponseOutput)
}

// GooglePrivacyDlpV2StatisticalTableResponseArrayInput is an input type that accepts GooglePrivacyDlpV2StatisticalTableResponseArray and GooglePrivacyDlpV2StatisticalTableResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StatisticalTableResponseArrayInput` via:
//
//          GooglePrivacyDlpV2StatisticalTableResponseArray{ GooglePrivacyDlpV2StatisticalTableResponseArgs{...} }
type GooglePrivacyDlpV2StatisticalTableResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StatisticalTableResponseArrayOutput() GooglePrivacyDlpV2StatisticalTableResponseArrayOutput
	ToGooglePrivacyDlpV2StatisticalTableResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2StatisticalTableResponseArrayOutput
}

type GooglePrivacyDlpV2StatisticalTableResponseArray []GooglePrivacyDlpV2StatisticalTableResponseInput

func (GooglePrivacyDlpV2StatisticalTableResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2StatisticalTableResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2StatisticalTableResponseArray) ToGooglePrivacyDlpV2StatisticalTableResponseArrayOutput() GooglePrivacyDlpV2StatisticalTableResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2StatisticalTableResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StatisticalTableResponseArray) ToGooglePrivacyDlpV2StatisticalTableResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StatisticalTableResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StatisticalTableResponseArrayOutput)
}

// An auxiliary table containing statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
type GooglePrivacyDlpV2StatisticalTableResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StatisticalTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StatisticalTableResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StatisticalTableResponseOutput) ToGooglePrivacyDlpV2StatisticalTableResponseOutput() GooglePrivacyDlpV2StatisticalTableResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2StatisticalTableResponseOutput) ToGooglePrivacyDlpV2StatisticalTableResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StatisticalTableResponseOutput {
	return o
}

// Quasi-identifier columns.
func (o GooglePrivacyDlpV2StatisticalTableResponseOutput) QuasiIds() GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StatisticalTableResponse) []GooglePrivacyDlpV2QuasiIdentifierFieldResponse {
		return v.QuasiIds
	}).(GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput)
}

// The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
func (o GooglePrivacyDlpV2StatisticalTableResponseOutput) RelativeFrequency() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StatisticalTableResponse) GooglePrivacyDlpV2FieldIdResponse {
		return v.RelativeFrequency
	}).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

// Auxiliary table location.
func (o GooglePrivacyDlpV2StatisticalTableResponseOutput) Table() GooglePrivacyDlpV2BigQueryTableResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StatisticalTableResponse) GooglePrivacyDlpV2BigQueryTableResponse {
		return v.Table
	}).(GooglePrivacyDlpV2BigQueryTableResponseOutput)
}

type GooglePrivacyDlpV2StatisticalTableResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StatisticalTableResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2StatisticalTableResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StatisticalTableResponseArrayOutput) ToGooglePrivacyDlpV2StatisticalTableResponseArrayOutput() GooglePrivacyDlpV2StatisticalTableResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2StatisticalTableResponseArrayOutput) ToGooglePrivacyDlpV2StatisticalTableResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StatisticalTableResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2StatisticalTableResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2StatisticalTableResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2StatisticalTableResponse {
		return vs[0].([]GooglePrivacyDlpV2StatisticalTableResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2StatisticalTableResponseOutput)
}

// Shared message indicating Cloud storage type.
type GooglePrivacyDlpV2StorageConfig struct {
	// BigQuery options.
	BigQueryOptions *GooglePrivacyDlpV2BigQueryOptions `pulumi:"bigQueryOptions"`
	// Google Cloud Storage options.
	CloudStorageOptions *GooglePrivacyDlpV2CloudStorageOptions `pulumi:"cloudStorageOptions"`
	// Google Cloud Datastore options.
	DatastoreOptions *GooglePrivacyDlpV2DatastoreOptions `pulumi:"datastoreOptions"`
	// Hybrid inspection options.
	HybridOptions  *GooglePrivacyDlpV2HybridOptions  `pulumi:"hybridOptions"`
	TimespanConfig *GooglePrivacyDlpV2TimespanConfig `pulumi:"timespanConfig"`
}

// GooglePrivacyDlpV2StorageConfigInput is an input type that accepts GooglePrivacyDlpV2StorageConfigArgs and GooglePrivacyDlpV2StorageConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StorageConfigInput` via:
//
//          GooglePrivacyDlpV2StorageConfigArgs{...}
type GooglePrivacyDlpV2StorageConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StorageConfigOutput() GooglePrivacyDlpV2StorageConfigOutput
	ToGooglePrivacyDlpV2StorageConfigOutputWithContext(context.Context) GooglePrivacyDlpV2StorageConfigOutput
}

// Shared message indicating Cloud storage type.
type GooglePrivacyDlpV2StorageConfigArgs struct {
	// BigQuery options.
	BigQueryOptions GooglePrivacyDlpV2BigQueryOptionsPtrInput `pulumi:"bigQueryOptions"`
	// Google Cloud Storage options.
	CloudStorageOptions GooglePrivacyDlpV2CloudStorageOptionsPtrInput `pulumi:"cloudStorageOptions"`
	// Google Cloud Datastore options.
	DatastoreOptions GooglePrivacyDlpV2DatastoreOptionsPtrInput `pulumi:"datastoreOptions"`
	// Hybrid inspection options.
	HybridOptions  GooglePrivacyDlpV2HybridOptionsPtrInput  `pulumi:"hybridOptions"`
	TimespanConfig GooglePrivacyDlpV2TimespanConfigPtrInput `pulumi:"timespanConfig"`
}

func (GooglePrivacyDlpV2StorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StorageConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2StorageConfigArgs) ToGooglePrivacyDlpV2StorageConfigOutput() GooglePrivacyDlpV2StorageConfigOutput {
	return i.ToGooglePrivacyDlpV2StorageConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StorageConfigArgs) ToGooglePrivacyDlpV2StorageConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StorageConfigOutput)
}

func (i GooglePrivacyDlpV2StorageConfigArgs) ToGooglePrivacyDlpV2StorageConfigPtrOutput() GooglePrivacyDlpV2StorageConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2StorageConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StorageConfigArgs) ToGooglePrivacyDlpV2StorageConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StorageConfigOutput).ToGooglePrivacyDlpV2StorageConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2StorageConfigPtrInput is an input type that accepts GooglePrivacyDlpV2StorageConfigArgs, GooglePrivacyDlpV2StorageConfigPtr and GooglePrivacyDlpV2StorageConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StorageConfigPtrInput` via:
//
//          GooglePrivacyDlpV2StorageConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2StorageConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StorageConfigPtrOutput() GooglePrivacyDlpV2StorageConfigPtrOutput
	ToGooglePrivacyDlpV2StorageConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2StorageConfigPtrOutput
}

type googlePrivacyDlpV2StorageConfigPtrType GooglePrivacyDlpV2StorageConfigArgs

func GooglePrivacyDlpV2StorageConfigPtr(v *GooglePrivacyDlpV2StorageConfigArgs) GooglePrivacyDlpV2StorageConfigPtrInput {
	return (*googlePrivacyDlpV2StorageConfigPtrType)(v)
}

func (*googlePrivacyDlpV2StorageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2StorageConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2StorageConfigPtrType) ToGooglePrivacyDlpV2StorageConfigPtrOutput() GooglePrivacyDlpV2StorageConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2StorageConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2StorageConfigPtrType) ToGooglePrivacyDlpV2StorageConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StorageConfigPtrOutput)
}

// Shared message indicating Cloud storage type.
type GooglePrivacyDlpV2StorageConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StorageConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StorageConfigOutput) ToGooglePrivacyDlpV2StorageConfigOutput() GooglePrivacyDlpV2StorageConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2StorageConfigOutput) ToGooglePrivacyDlpV2StorageConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StorageConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2StorageConfigOutput) ToGooglePrivacyDlpV2StorageConfigPtrOutput() GooglePrivacyDlpV2StorageConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2StorageConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2StorageConfigOutput) ToGooglePrivacyDlpV2StorageConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StorageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2StorageConfig) *GooglePrivacyDlpV2StorageConfig {
		return &v
	}).(GooglePrivacyDlpV2StorageConfigPtrOutput)
}

// BigQuery options.
func (o GooglePrivacyDlpV2StorageConfigOutput) BigQueryOptions() GooglePrivacyDlpV2BigQueryOptionsPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StorageConfig) *GooglePrivacyDlpV2BigQueryOptions { return v.BigQueryOptions }).(GooglePrivacyDlpV2BigQueryOptionsPtrOutput)
}

// Google Cloud Storage options.
func (o GooglePrivacyDlpV2StorageConfigOutput) CloudStorageOptions() GooglePrivacyDlpV2CloudStorageOptionsPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StorageConfig) *GooglePrivacyDlpV2CloudStorageOptions {
		return v.CloudStorageOptions
	}).(GooglePrivacyDlpV2CloudStorageOptionsPtrOutput)
}

// Google Cloud Datastore options.
func (o GooglePrivacyDlpV2StorageConfigOutput) DatastoreOptions() GooglePrivacyDlpV2DatastoreOptionsPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StorageConfig) *GooglePrivacyDlpV2DatastoreOptions { return v.DatastoreOptions }).(GooglePrivacyDlpV2DatastoreOptionsPtrOutput)
}

// Hybrid inspection options.
func (o GooglePrivacyDlpV2StorageConfigOutput) HybridOptions() GooglePrivacyDlpV2HybridOptionsPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StorageConfig) *GooglePrivacyDlpV2HybridOptions { return v.HybridOptions }).(GooglePrivacyDlpV2HybridOptionsPtrOutput)
}

func (o GooglePrivacyDlpV2StorageConfigOutput) TimespanConfig() GooglePrivacyDlpV2TimespanConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StorageConfig) *GooglePrivacyDlpV2TimespanConfig { return v.TimespanConfig }).(GooglePrivacyDlpV2TimespanConfigPtrOutput)
}

type GooglePrivacyDlpV2StorageConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StorageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2StorageConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StorageConfigPtrOutput) ToGooglePrivacyDlpV2StorageConfigPtrOutput() GooglePrivacyDlpV2StorageConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2StorageConfigPtrOutput) ToGooglePrivacyDlpV2StorageConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StorageConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2StorageConfigPtrOutput) Elem() GooglePrivacyDlpV2StorageConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StorageConfig) GooglePrivacyDlpV2StorageConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2StorageConfig
		return ret
	}).(GooglePrivacyDlpV2StorageConfigOutput)
}

// BigQuery options.
func (o GooglePrivacyDlpV2StorageConfigPtrOutput) BigQueryOptions() GooglePrivacyDlpV2BigQueryOptionsPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StorageConfig) *GooglePrivacyDlpV2BigQueryOptions {
		if v == nil {
			return nil
		}
		return v.BigQueryOptions
	}).(GooglePrivacyDlpV2BigQueryOptionsPtrOutput)
}

// Google Cloud Storage options.
func (o GooglePrivacyDlpV2StorageConfigPtrOutput) CloudStorageOptions() GooglePrivacyDlpV2CloudStorageOptionsPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StorageConfig) *GooglePrivacyDlpV2CloudStorageOptions {
		if v == nil {
			return nil
		}
		return v.CloudStorageOptions
	}).(GooglePrivacyDlpV2CloudStorageOptionsPtrOutput)
}

// Google Cloud Datastore options.
func (o GooglePrivacyDlpV2StorageConfigPtrOutput) DatastoreOptions() GooglePrivacyDlpV2DatastoreOptionsPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StorageConfig) *GooglePrivacyDlpV2DatastoreOptions {
		if v == nil {
			return nil
		}
		return v.DatastoreOptions
	}).(GooglePrivacyDlpV2DatastoreOptionsPtrOutput)
}

// Hybrid inspection options.
func (o GooglePrivacyDlpV2StorageConfigPtrOutput) HybridOptions() GooglePrivacyDlpV2HybridOptionsPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StorageConfig) *GooglePrivacyDlpV2HybridOptions {
		if v == nil {
			return nil
		}
		return v.HybridOptions
	}).(GooglePrivacyDlpV2HybridOptionsPtrOutput)
}

func (o GooglePrivacyDlpV2StorageConfigPtrOutput) TimespanConfig() GooglePrivacyDlpV2TimespanConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StorageConfig) *GooglePrivacyDlpV2TimespanConfig {
		if v == nil {
			return nil
		}
		return v.TimespanConfig
	}).(GooglePrivacyDlpV2TimespanConfigPtrOutput)
}

// Shared message indicating Cloud storage type.
type GooglePrivacyDlpV2StorageConfigResponse struct {
	// BigQuery options.
	BigQueryOptions GooglePrivacyDlpV2BigQueryOptionsResponse `pulumi:"bigQueryOptions"`
	// Google Cloud Storage options.
	CloudStorageOptions GooglePrivacyDlpV2CloudStorageOptionsResponse `pulumi:"cloudStorageOptions"`
	// Google Cloud Datastore options.
	DatastoreOptions GooglePrivacyDlpV2DatastoreOptionsResponse `pulumi:"datastoreOptions"`
	// Hybrid inspection options.
	HybridOptions  GooglePrivacyDlpV2HybridOptionsResponse  `pulumi:"hybridOptions"`
	TimespanConfig GooglePrivacyDlpV2TimespanConfigResponse `pulumi:"timespanConfig"`
}

// GooglePrivacyDlpV2StorageConfigResponseInput is an input type that accepts GooglePrivacyDlpV2StorageConfigResponseArgs and GooglePrivacyDlpV2StorageConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StorageConfigResponseInput` via:
//
//          GooglePrivacyDlpV2StorageConfigResponseArgs{...}
type GooglePrivacyDlpV2StorageConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StorageConfigResponseOutput() GooglePrivacyDlpV2StorageConfigResponseOutput
	ToGooglePrivacyDlpV2StorageConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2StorageConfigResponseOutput
}

// Shared message indicating Cloud storage type.
type GooglePrivacyDlpV2StorageConfigResponseArgs struct {
	// BigQuery options.
	BigQueryOptions GooglePrivacyDlpV2BigQueryOptionsResponseInput `pulumi:"bigQueryOptions"`
	// Google Cloud Storage options.
	CloudStorageOptions GooglePrivacyDlpV2CloudStorageOptionsResponseInput `pulumi:"cloudStorageOptions"`
	// Google Cloud Datastore options.
	DatastoreOptions GooglePrivacyDlpV2DatastoreOptionsResponseInput `pulumi:"datastoreOptions"`
	// Hybrid inspection options.
	HybridOptions  GooglePrivacyDlpV2HybridOptionsResponseInput  `pulumi:"hybridOptions"`
	TimespanConfig GooglePrivacyDlpV2TimespanConfigResponseInput `pulumi:"timespanConfig"`
}

func (GooglePrivacyDlpV2StorageConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StorageConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2StorageConfigResponseArgs) ToGooglePrivacyDlpV2StorageConfigResponseOutput() GooglePrivacyDlpV2StorageConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2StorageConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StorageConfigResponseArgs) ToGooglePrivacyDlpV2StorageConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StorageConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StorageConfigResponseOutput)
}

func (i GooglePrivacyDlpV2StorageConfigResponseArgs) ToGooglePrivacyDlpV2StorageConfigResponsePtrOutput() GooglePrivacyDlpV2StorageConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2StorageConfigResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StorageConfigResponseArgs) ToGooglePrivacyDlpV2StorageConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StorageConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StorageConfigResponseOutput).ToGooglePrivacyDlpV2StorageConfigResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2StorageConfigResponsePtrInput is an input type that accepts GooglePrivacyDlpV2StorageConfigResponseArgs, GooglePrivacyDlpV2StorageConfigResponsePtr and GooglePrivacyDlpV2StorageConfigResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StorageConfigResponsePtrInput` via:
//
//          GooglePrivacyDlpV2StorageConfigResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2StorageConfigResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StorageConfigResponsePtrOutput() GooglePrivacyDlpV2StorageConfigResponsePtrOutput
	ToGooglePrivacyDlpV2StorageConfigResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2StorageConfigResponsePtrOutput
}

type googlePrivacyDlpV2StorageConfigResponsePtrType GooglePrivacyDlpV2StorageConfigResponseArgs

func GooglePrivacyDlpV2StorageConfigResponsePtr(v *GooglePrivacyDlpV2StorageConfigResponseArgs) GooglePrivacyDlpV2StorageConfigResponsePtrInput {
	return (*googlePrivacyDlpV2StorageConfigResponsePtrType)(v)
}

func (*googlePrivacyDlpV2StorageConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2StorageConfigResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2StorageConfigResponsePtrType) ToGooglePrivacyDlpV2StorageConfigResponsePtrOutput() GooglePrivacyDlpV2StorageConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2StorageConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2StorageConfigResponsePtrType) ToGooglePrivacyDlpV2StorageConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StorageConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StorageConfigResponsePtrOutput)
}

// Shared message indicating Cloud storage type.
type GooglePrivacyDlpV2StorageConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StorageConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StorageConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StorageConfigResponseOutput) ToGooglePrivacyDlpV2StorageConfigResponseOutput() GooglePrivacyDlpV2StorageConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2StorageConfigResponseOutput) ToGooglePrivacyDlpV2StorageConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StorageConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2StorageConfigResponseOutput) ToGooglePrivacyDlpV2StorageConfigResponsePtrOutput() GooglePrivacyDlpV2StorageConfigResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2StorageConfigResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2StorageConfigResponseOutput) ToGooglePrivacyDlpV2StorageConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StorageConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2StorageConfigResponse) *GooglePrivacyDlpV2StorageConfigResponse {
		return &v
	}).(GooglePrivacyDlpV2StorageConfigResponsePtrOutput)
}

// BigQuery options.
func (o GooglePrivacyDlpV2StorageConfigResponseOutput) BigQueryOptions() GooglePrivacyDlpV2BigQueryOptionsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StorageConfigResponse) GooglePrivacyDlpV2BigQueryOptionsResponse {
		return v.BigQueryOptions
	}).(GooglePrivacyDlpV2BigQueryOptionsResponseOutput)
}

// Google Cloud Storage options.
func (o GooglePrivacyDlpV2StorageConfigResponseOutput) CloudStorageOptions() GooglePrivacyDlpV2CloudStorageOptionsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StorageConfigResponse) GooglePrivacyDlpV2CloudStorageOptionsResponse {
		return v.CloudStorageOptions
	}).(GooglePrivacyDlpV2CloudStorageOptionsResponseOutput)
}

// Google Cloud Datastore options.
func (o GooglePrivacyDlpV2StorageConfigResponseOutput) DatastoreOptions() GooglePrivacyDlpV2DatastoreOptionsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StorageConfigResponse) GooglePrivacyDlpV2DatastoreOptionsResponse {
		return v.DatastoreOptions
	}).(GooglePrivacyDlpV2DatastoreOptionsResponseOutput)
}

// Hybrid inspection options.
func (o GooglePrivacyDlpV2StorageConfigResponseOutput) HybridOptions() GooglePrivacyDlpV2HybridOptionsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StorageConfigResponse) GooglePrivacyDlpV2HybridOptionsResponse {
		return v.HybridOptions
	}).(GooglePrivacyDlpV2HybridOptionsResponseOutput)
}

func (o GooglePrivacyDlpV2StorageConfigResponseOutput) TimespanConfig() GooglePrivacyDlpV2TimespanConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StorageConfigResponse) GooglePrivacyDlpV2TimespanConfigResponse {
		return v.TimespanConfig
	}).(GooglePrivacyDlpV2TimespanConfigResponseOutput)
}

type GooglePrivacyDlpV2StorageConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StorageConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2StorageConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StorageConfigResponsePtrOutput) ToGooglePrivacyDlpV2StorageConfigResponsePtrOutput() GooglePrivacyDlpV2StorageConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2StorageConfigResponsePtrOutput) ToGooglePrivacyDlpV2StorageConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StorageConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2StorageConfigResponsePtrOutput) Elem() GooglePrivacyDlpV2StorageConfigResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StorageConfigResponse) GooglePrivacyDlpV2StorageConfigResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2StorageConfigResponse
		return ret
	}).(GooglePrivacyDlpV2StorageConfigResponseOutput)
}

// BigQuery options.
func (o GooglePrivacyDlpV2StorageConfigResponsePtrOutput) BigQueryOptions() GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StorageConfigResponse) *GooglePrivacyDlpV2BigQueryOptionsResponse {
		if v == nil {
			return nil
		}
		return &v.BigQueryOptions
	}).(GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput)
}

// Google Cloud Storage options.
func (o GooglePrivacyDlpV2StorageConfigResponsePtrOutput) CloudStorageOptions() GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StorageConfigResponse) *GooglePrivacyDlpV2CloudStorageOptionsResponse {
		if v == nil {
			return nil
		}
		return &v.CloudStorageOptions
	}).(GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput)
}

// Google Cloud Datastore options.
func (o GooglePrivacyDlpV2StorageConfigResponsePtrOutput) DatastoreOptions() GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StorageConfigResponse) *GooglePrivacyDlpV2DatastoreOptionsResponse {
		if v == nil {
			return nil
		}
		return &v.DatastoreOptions
	}).(GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput)
}

// Hybrid inspection options.
func (o GooglePrivacyDlpV2StorageConfigResponsePtrOutput) HybridOptions() GooglePrivacyDlpV2HybridOptionsResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StorageConfigResponse) *GooglePrivacyDlpV2HybridOptionsResponse {
		if v == nil {
			return nil
		}
		return &v.HybridOptions
	}).(GooglePrivacyDlpV2HybridOptionsResponsePtrOutput)
}

func (o GooglePrivacyDlpV2StorageConfigResponsePtrOutput) TimespanConfig() GooglePrivacyDlpV2TimespanConfigResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StorageConfigResponse) *GooglePrivacyDlpV2TimespanConfigResponse {
		if v == nil {
			return nil
		}
		return &v.TimespanConfig
	}).(GooglePrivacyDlpV2TimespanConfigResponsePtrOutput)
}

// Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
type GooglePrivacyDlpV2StoredInfoTypeConfig struct {
	// Description of the StoredInfoType (max 256 characters).
	Description *string `pulumi:"description"`
	// Store dictionary-based CustomInfoType.
	Dictionary *GooglePrivacyDlpV2Dictionary `pulumi:"dictionary"`
	// Display name of the StoredInfoType (max 256 characters).
	DisplayName *string `pulumi:"displayName"`
	// StoredInfoType where findings are defined by a dictionary of phrases.
	LargeCustomDictionary *GooglePrivacyDlpV2LargeCustomDictionaryConfig `pulumi:"largeCustomDictionary"`
	// Store regular expression-based StoredInfoType.
	Regex *GooglePrivacyDlpV2Regex `pulumi:"regex"`
}

// GooglePrivacyDlpV2StoredInfoTypeConfigInput is an input type that accepts GooglePrivacyDlpV2StoredInfoTypeConfigArgs and GooglePrivacyDlpV2StoredInfoTypeConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StoredInfoTypeConfigInput` via:
//
//          GooglePrivacyDlpV2StoredInfoTypeConfigArgs{...}
type GooglePrivacyDlpV2StoredInfoTypeConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StoredInfoTypeConfigOutput() GooglePrivacyDlpV2StoredInfoTypeConfigOutput
	ToGooglePrivacyDlpV2StoredInfoTypeConfigOutputWithContext(context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigOutput
}

// Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
type GooglePrivacyDlpV2StoredInfoTypeConfigArgs struct {
	// Description of the StoredInfoType (max 256 characters).
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Store dictionary-based CustomInfoType.
	Dictionary GooglePrivacyDlpV2DictionaryPtrInput `pulumi:"dictionary"`
	// Display name of the StoredInfoType (max 256 characters).
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// StoredInfoType where findings are defined by a dictionary of phrases.
	LargeCustomDictionary GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrInput `pulumi:"largeCustomDictionary"`
	// Store regular expression-based StoredInfoType.
	Regex GooglePrivacyDlpV2RegexPtrInput `pulumi:"regex"`
}

func (GooglePrivacyDlpV2StoredInfoTypeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StoredInfoTypeConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2StoredInfoTypeConfigArgs) ToGooglePrivacyDlpV2StoredInfoTypeConfigOutput() GooglePrivacyDlpV2StoredInfoTypeConfigOutput {
	return i.ToGooglePrivacyDlpV2StoredInfoTypeConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StoredInfoTypeConfigArgs) ToGooglePrivacyDlpV2StoredInfoTypeConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredInfoTypeConfigOutput)
}

func (i GooglePrivacyDlpV2StoredInfoTypeConfigArgs) ToGooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput() GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2StoredInfoTypeConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StoredInfoTypeConfigArgs) ToGooglePrivacyDlpV2StoredInfoTypeConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredInfoTypeConfigOutput).ToGooglePrivacyDlpV2StoredInfoTypeConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2StoredInfoTypeConfigPtrInput is an input type that accepts GooglePrivacyDlpV2StoredInfoTypeConfigArgs, GooglePrivacyDlpV2StoredInfoTypeConfigPtr and GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StoredInfoTypeConfigPtrInput` via:
//
//          GooglePrivacyDlpV2StoredInfoTypeConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2StoredInfoTypeConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput() GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput
	ToGooglePrivacyDlpV2StoredInfoTypeConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput
}

type googlePrivacyDlpV2StoredInfoTypeConfigPtrType GooglePrivacyDlpV2StoredInfoTypeConfigArgs

func GooglePrivacyDlpV2StoredInfoTypeConfigPtr(v *GooglePrivacyDlpV2StoredInfoTypeConfigArgs) GooglePrivacyDlpV2StoredInfoTypeConfigPtrInput {
	return (*googlePrivacyDlpV2StoredInfoTypeConfigPtrType)(v)
}

func (*googlePrivacyDlpV2StoredInfoTypeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2StoredInfoTypeConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2StoredInfoTypeConfigPtrType) ToGooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput() GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2StoredInfoTypeConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2StoredInfoTypeConfigPtrType) ToGooglePrivacyDlpV2StoredInfoTypeConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput)
}

// Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
type GooglePrivacyDlpV2StoredInfoTypeConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StoredInfoTypeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StoredInfoTypeConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StoredInfoTypeConfigOutput) ToGooglePrivacyDlpV2StoredInfoTypeConfigOutput() GooglePrivacyDlpV2StoredInfoTypeConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeConfigOutput) ToGooglePrivacyDlpV2StoredInfoTypeConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeConfigOutput) ToGooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput() GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2StoredInfoTypeConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2StoredInfoTypeConfigOutput) ToGooglePrivacyDlpV2StoredInfoTypeConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2StoredInfoTypeConfig) *GooglePrivacyDlpV2StoredInfoTypeConfig {
		return &v
	}).(GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput)
}

// Description of the StoredInfoType (max 256 characters).
func (o GooglePrivacyDlpV2StoredInfoTypeConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeConfig) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Store dictionary-based CustomInfoType.
func (o GooglePrivacyDlpV2StoredInfoTypeConfigOutput) Dictionary() GooglePrivacyDlpV2DictionaryPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeConfig) *GooglePrivacyDlpV2Dictionary { return v.Dictionary }).(GooglePrivacyDlpV2DictionaryPtrOutput)
}

// Display name of the StoredInfoType (max 256 characters).
func (o GooglePrivacyDlpV2StoredInfoTypeConfigOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeConfig) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// StoredInfoType where findings are defined by a dictionary of phrases.
func (o GooglePrivacyDlpV2StoredInfoTypeConfigOutput) LargeCustomDictionary() GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeConfig) *GooglePrivacyDlpV2LargeCustomDictionaryConfig {
		return v.LargeCustomDictionary
	}).(GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput)
}

// Store regular expression-based StoredInfoType.
func (o GooglePrivacyDlpV2StoredInfoTypeConfigOutput) Regex() GooglePrivacyDlpV2RegexPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeConfig) *GooglePrivacyDlpV2Regex { return v.Regex }).(GooglePrivacyDlpV2RegexPtrOutput)
}

type GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2StoredInfoTypeConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput) ToGooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput() GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput) ToGooglePrivacyDlpV2StoredInfoTypeConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput) Elem() GooglePrivacyDlpV2StoredInfoTypeConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeConfig) GooglePrivacyDlpV2StoredInfoTypeConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2StoredInfoTypeConfig
		return ret
	}).(GooglePrivacyDlpV2StoredInfoTypeConfigOutput)
}

// Description of the StoredInfoType (max 256 characters).
func (o GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeConfig) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Store dictionary-based CustomInfoType.
func (o GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput) Dictionary() GooglePrivacyDlpV2DictionaryPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeConfig) *GooglePrivacyDlpV2Dictionary {
		if v == nil {
			return nil
		}
		return v.Dictionary
	}).(GooglePrivacyDlpV2DictionaryPtrOutput)
}

// Display name of the StoredInfoType (max 256 characters).
func (o GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeConfig) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// StoredInfoType where findings are defined by a dictionary of phrases.
func (o GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput) LargeCustomDictionary() GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeConfig) *GooglePrivacyDlpV2LargeCustomDictionaryConfig {
		if v == nil {
			return nil
		}
		return v.LargeCustomDictionary
	}).(GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput)
}

// Store regular expression-based StoredInfoType.
func (o GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput) Regex() GooglePrivacyDlpV2RegexPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeConfig) *GooglePrivacyDlpV2Regex {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(GooglePrivacyDlpV2RegexPtrOutput)
}

// Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
type GooglePrivacyDlpV2StoredInfoTypeConfigResponse struct {
	// Description of the StoredInfoType (max 256 characters).
	Description string `pulumi:"description"`
	// Store dictionary-based CustomInfoType.
	Dictionary GooglePrivacyDlpV2DictionaryResponse `pulumi:"dictionary"`
	// Display name of the StoredInfoType (max 256 characters).
	DisplayName string `pulumi:"displayName"`
	// StoredInfoType where findings are defined by a dictionary of phrases.
	LargeCustomDictionary GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse `pulumi:"largeCustomDictionary"`
	// Store regular expression-based StoredInfoType.
	Regex GooglePrivacyDlpV2RegexResponse `pulumi:"regex"`
}

// GooglePrivacyDlpV2StoredInfoTypeConfigResponseInput is an input type that accepts GooglePrivacyDlpV2StoredInfoTypeConfigResponseArgs and GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StoredInfoTypeConfigResponseInput` via:
//
//          GooglePrivacyDlpV2StoredInfoTypeConfigResponseArgs{...}
type GooglePrivacyDlpV2StoredInfoTypeConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput() GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput
	ToGooglePrivacyDlpV2StoredInfoTypeConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput
}

// Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
type GooglePrivacyDlpV2StoredInfoTypeConfigResponseArgs struct {
	// Description of the StoredInfoType (max 256 characters).
	Description pulumi.StringInput `pulumi:"description"`
	// Store dictionary-based CustomInfoType.
	Dictionary GooglePrivacyDlpV2DictionaryResponseInput `pulumi:"dictionary"`
	// Display name of the StoredInfoType (max 256 characters).
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// StoredInfoType where findings are defined by a dictionary of phrases.
	LargeCustomDictionary GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseInput `pulumi:"largeCustomDictionary"`
	// Store regular expression-based StoredInfoType.
	Regex GooglePrivacyDlpV2RegexResponseInput `pulumi:"regex"`
}

func (GooglePrivacyDlpV2StoredInfoTypeConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StoredInfoTypeConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2StoredInfoTypeConfigResponseArgs) ToGooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput() GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2StoredInfoTypeConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StoredInfoTypeConfigResponseArgs) ToGooglePrivacyDlpV2StoredInfoTypeConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput)
}

func (i GooglePrivacyDlpV2StoredInfoTypeConfigResponseArgs) ToGooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StoredInfoTypeConfigResponseArgs) ToGooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput).ToGooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrInput is an input type that accepts GooglePrivacyDlpV2StoredInfoTypeConfigResponseArgs, GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtr and GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrInput` via:
//
//          GooglePrivacyDlpV2StoredInfoTypeConfigResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput
	ToGooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput
}

type googlePrivacyDlpV2StoredInfoTypeConfigResponsePtrType GooglePrivacyDlpV2StoredInfoTypeConfigResponseArgs

func GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtr(v *GooglePrivacyDlpV2StoredInfoTypeConfigResponseArgs) GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrInput {
	return (*googlePrivacyDlpV2StoredInfoTypeConfigResponsePtrType)(v)
}

func (*googlePrivacyDlpV2StoredInfoTypeConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2StoredInfoTypeConfigResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2StoredInfoTypeConfigResponsePtrType) ToGooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2StoredInfoTypeConfigResponsePtrType) ToGooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput)
}

// Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
type GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StoredInfoTypeConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput) ToGooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput() GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput) ToGooglePrivacyDlpV2StoredInfoTypeConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput) ToGooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput) ToGooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2StoredInfoTypeConfigResponse) *GooglePrivacyDlpV2StoredInfoTypeConfigResponse {
		return &v
	}).(GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput)
}

// Description of the StoredInfoType (max 256 characters).
func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeConfigResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Store dictionary-based CustomInfoType.
func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput) Dictionary() GooglePrivacyDlpV2DictionaryResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeConfigResponse) GooglePrivacyDlpV2DictionaryResponse {
		return v.Dictionary
	}).(GooglePrivacyDlpV2DictionaryResponseOutput)
}

// Display name of the StoredInfoType (max 256 characters).
func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeConfigResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// StoredInfoType where findings are defined by a dictionary of phrases.
func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput) LargeCustomDictionary() GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeConfigResponse) GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse {
		return v.LargeCustomDictionary
	}).(GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput)
}

// Store regular expression-based StoredInfoType.
func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput) Regex() GooglePrivacyDlpV2RegexResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeConfigResponse) GooglePrivacyDlpV2RegexResponse { return v.Regex }).(GooglePrivacyDlpV2RegexResponseOutput)
}

type GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2StoredInfoTypeConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput) ToGooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput) ToGooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput) Elem() GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeConfigResponse) GooglePrivacyDlpV2StoredInfoTypeConfigResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2StoredInfoTypeConfigResponse
		return ret
	}).(GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput)
}

// Description of the StoredInfoType (max 256 characters).
func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// Store dictionary-based CustomInfoType.
func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput) Dictionary() GooglePrivacyDlpV2DictionaryResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeConfigResponse) *GooglePrivacyDlpV2DictionaryResponse {
		if v == nil {
			return nil
		}
		return &v.Dictionary
	}).(GooglePrivacyDlpV2DictionaryResponsePtrOutput)
}

// Display name of the StoredInfoType (max 256 characters).
func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// StoredInfoType where findings are defined by a dictionary of phrases.
func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput) LargeCustomDictionary() GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeConfigResponse) *GooglePrivacyDlpV2LargeCustomDictionaryConfigResponse {
		if v == nil {
			return nil
		}
		return &v.LargeCustomDictionary
	}).(GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput)
}

// Store regular expression-based StoredInfoType.
func (o GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput) Regex() GooglePrivacyDlpV2RegexResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeConfigResponse) *GooglePrivacyDlpV2RegexResponse {
		if v == nil {
			return nil
		}
		return &v.Regex
	}).(GooglePrivacyDlpV2RegexResponsePtrOutput)
}

// Statistics for a StoredInfoType.
type GooglePrivacyDlpV2StoredInfoTypeStatsResponse struct {
	// StoredInfoType where findings are defined by a dictionary of phrases.
	LargeCustomDictionary GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse `pulumi:"largeCustomDictionary"`
}

// GooglePrivacyDlpV2StoredInfoTypeStatsResponseInput is an input type that accepts GooglePrivacyDlpV2StoredInfoTypeStatsResponseArgs and GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StoredInfoTypeStatsResponseInput` via:
//
//          GooglePrivacyDlpV2StoredInfoTypeStatsResponseArgs{...}
type GooglePrivacyDlpV2StoredInfoTypeStatsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput() GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput
	ToGooglePrivacyDlpV2StoredInfoTypeStatsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput
}

// Statistics for a StoredInfoType.
type GooglePrivacyDlpV2StoredInfoTypeStatsResponseArgs struct {
	// StoredInfoType where findings are defined by a dictionary of phrases.
	LargeCustomDictionary GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseInput `pulumi:"largeCustomDictionary"`
}

func (GooglePrivacyDlpV2StoredInfoTypeStatsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StoredInfoTypeStatsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2StoredInfoTypeStatsResponseArgs) ToGooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput() GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput {
	return i.ToGooglePrivacyDlpV2StoredInfoTypeStatsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StoredInfoTypeStatsResponseArgs) ToGooglePrivacyDlpV2StoredInfoTypeStatsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput)
}

func (i GooglePrivacyDlpV2StoredInfoTypeStatsResponseArgs) ToGooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StoredInfoTypeStatsResponseArgs) ToGooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput).ToGooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2StoredInfoTypeStatsResponseArgs, GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtr and GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2StoredInfoTypeStatsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput
	ToGooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput
}

type googlePrivacyDlpV2StoredInfoTypeStatsResponsePtrType GooglePrivacyDlpV2StoredInfoTypeStatsResponseArgs

func GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtr(v *GooglePrivacyDlpV2StoredInfoTypeStatsResponseArgs) GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrInput {
	return (*googlePrivacyDlpV2StoredInfoTypeStatsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2StoredInfoTypeStatsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2StoredInfoTypeStatsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2StoredInfoTypeStatsResponsePtrType) ToGooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2StoredInfoTypeStatsResponsePtrType) ToGooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput)
}

// Statistics for a StoredInfoType.
type GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StoredInfoTypeStatsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput) ToGooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput() GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput) ToGooglePrivacyDlpV2StoredInfoTypeStatsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput) ToGooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput) ToGooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2StoredInfoTypeStatsResponse) *GooglePrivacyDlpV2StoredInfoTypeStatsResponse {
		return &v
	}).(GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput)
}

// StoredInfoType where findings are defined by a dictionary of phrases.
func (o GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput) LargeCustomDictionary() GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeStatsResponse) GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse {
		return v.LargeCustomDictionary
	}).(GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput)
}

type GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2StoredInfoTypeStatsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput) ToGooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput) ToGooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput) Elem() GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeStatsResponse) GooglePrivacyDlpV2StoredInfoTypeStatsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2StoredInfoTypeStatsResponse
		return ret
	}).(GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput)
}

// StoredInfoType where findings are defined by a dictionary of phrases.
func (o GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput) LargeCustomDictionary() GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeStatsResponse) *GooglePrivacyDlpV2LargeCustomDictionaryStatsResponse {
		if v == nil {
			return nil
		}
		return &v.LargeCustomDictionary
	}).(GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput)
}

// Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state.
type GooglePrivacyDlpV2StoredInfoTypeVersionResponse struct {
	// StoredInfoType configuration.
	Config GooglePrivacyDlpV2StoredInfoTypeConfigResponse `pulumi:"config"`
	// Create timestamp of the version. Read-only, determined by the system when the version is created.
	CreateTime string `pulumi:"createTime"`
	// Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error.
	Errors []GooglePrivacyDlpV2ErrorResponse `pulumi:"errors"`
	// Stored info type version state. Read-only, updated by the system during dictionary creation.
	State string `pulumi:"state"`
	// Statistics about this storedInfoType version.
	Stats GooglePrivacyDlpV2StoredInfoTypeStatsResponse `pulumi:"stats"`
}

// GooglePrivacyDlpV2StoredInfoTypeVersionResponseInput is an input type that accepts GooglePrivacyDlpV2StoredInfoTypeVersionResponseArgs and GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StoredInfoTypeVersionResponseInput` via:
//
//          GooglePrivacyDlpV2StoredInfoTypeVersionResponseArgs{...}
type GooglePrivacyDlpV2StoredInfoTypeVersionResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput() GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput
	ToGooglePrivacyDlpV2StoredInfoTypeVersionResponseOutputWithContext(context.Context) GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput
}

// Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state.
type GooglePrivacyDlpV2StoredInfoTypeVersionResponseArgs struct {
	// StoredInfoType configuration.
	Config GooglePrivacyDlpV2StoredInfoTypeConfigResponseInput `pulumi:"config"`
	// Create timestamp of the version. Read-only, determined by the system when the version is created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error.
	Errors GooglePrivacyDlpV2ErrorResponseArrayInput `pulumi:"errors"`
	// Stored info type version state. Read-only, updated by the system during dictionary creation.
	State pulumi.StringInput `pulumi:"state"`
	// Statistics about this storedInfoType version.
	Stats GooglePrivacyDlpV2StoredInfoTypeStatsResponseInput `pulumi:"stats"`
}

func (GooglePrivacyDlpV2StoredInfoTypeVersionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StoredInfoTypeVersionResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2StoredInfoTypeVersionResponseArgs) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput() GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput {
	return i.ToGooglePrivacyDlpV2StoredInfoTypeVersionResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StoredInfoTypeVersionResponseArgs) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput)
}

func (i GooglePrivacyDlpV2StoredInfoTypeVersionResponseArgs) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StoredInfoTypeVersionResponseArgs) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput).ToGooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrInput is an input type that accepts GooglePrivacyDlpV2StoredInfoTypeVersionResponseArgs, GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtr and GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrInput` via:
//
//          GooglePrivacyDlpV2StoredInfoTypeVersionResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput
	ToGooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput
}

type googlePrivacyDlpV2StoredInfoTypeVersionResponsePtrType GooglePrivacyDlpV2StoredInfoTypeVersionResponseArgs

func GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtr(v *GooglePrivacyDlpV2StoredInfoTypeVersionResponseArgs) GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrInput {
	return (*googlePrivacyDlpV2StoredInfoTypeVersionResponsePtrType)(v)
}

func (*googlePrivacyDlpV2StoredInfoTypeVersionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2StoredInfoTypeVersionResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2StoredInfoTypeVersionResponsePtrType) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2StoredInfoTypeVersionResponsePtrType) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput)
}

// GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayInput is an input type that accepts GooglePrivacyDlpV2StoredInfoTypeVersionResponseArray and GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayInput` via:
//
//          GooglePrivacyDlpV2StoredInfoTypeVersionResponseArray{ GooglePrivacyDlpV2StoredInfoTypeVersionResponseArgs{...} }
type GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput() GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput
	ToGooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput
}

type GooglePrivacyDlpV2StoredInfoTypeVersionResponseArray []GooglePrivacyDlpV2StoredInfoTypeVersionResponseInput

func (GooglePrivacyDlpV2StoredInfoTypeVersionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2StoredInfoTypeVersionResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2StoredInfoTypeVersionResponseArray) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput() GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StoredInfoTypeVersionResponseArray) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput)
}

// Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state.
type GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StoredInfoTypeVersionResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput() GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2StoredInfoTypeVersionResponse) *GooglePrivacyDlpV2StoredInfoTypeVersionResponse {
		return &v
	}).(GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput)
}

// StoredInfoType configuration.
func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput) Config() GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeVersionResponse) GooglePrivacyDlpV2StoredInfoTypeConfigResponse {
		return v.Config
	}).(GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput)
}

// Create timestamp of the version. Read-only, determined by the system when the version is created.
func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeVersionResponse) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error.
func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput) Errors() GooglePrivacyDlpV2ErrorResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeVersionResponse) []GooglePrivacyDlpV2ErrorResponse {
		return v.Errors
	}).(GooglePrivacyDlpV2ErrorResponseArrayOutput)
}

// Stored info type version state. Read-only, updated by the system during dictionary creation.
func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeVersionResponse) string { return v.State }).(pulumi.StringOutput)
}

// Statistics about this storedInfoType version.
func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput) Stats() GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredInfoTypeVersionResponse) GooglePrivacyDlpV2StoredInfoTypeStatsResponse {
		return v.Stats
	}).(GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput)
}

type GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2StoredInfoTypeVersionResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput() GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput) Elem() GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeVersionResponse) GooglePrivacyDlpV2StoredInfoTypeVersionResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2StoredInfoTypeVersionResponse
		return ret
	}).(GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput)
}

// StoredInfoType configuration.
func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput) Config() GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeVersionResponse) *GooglePrivacyDlpV2StoredInfoTypeConfigResponse {
		if v == nil {
			return nil
		}
		return &v.Config
	}).(GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput)
}

// Create timestamp of the version. Read-only, determined by the system when the version is created.
func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeVersionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error.
func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput) Errors() GooglePrivacyDlpV2ErrorResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeVersionResponse) []GooglePrivacyDlpV2ErrorResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(GooglePrivacyDlpV2ErrorResponseArrayOutput)
}

// Stored info type version state. Read-only, updated by the system during dictionary creation.
func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeVersionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Statistics about this storedInfoType version.
func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput) Stats() GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredInfoTypeVersionResponse) *GooglePrivacyDlpV2StoredInfoTypeStatsResponse {
		if v == nil {
			return nil
		}
		return &v.Stats
	}).(GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput)
}

type GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2StoredInfoTypeVersionResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput() GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput) ToGooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2StoredInfoTypeVersionResponse {
		return vs[0].([]GooglePrivacyDlpV2StoredInfoTypeVersionResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput)
}

// A reference to a StoredInfoType to use with scanning.
type GooglePrivacyDlpV2StoredType struct {
	// Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system.
	CreateTime *string `pulumi:"createTime"`
	// Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`.
	Name *string `pulumi:"name"`
}

// GooglePrivacyDlpV2StoredTypeInput is an input type that accepts GooglePrivacyDlpV2StoredTypeArgs and GooglePrivacyDlpV2StoredTypeOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StoredTypeInput` via:
//
//          GooglePrivacyDlpV2StoredTypeArgs{...}
type GooglePrivacyDlpV2StoredTypeInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StoredTypeOutput() GooglePrivacyDlpV2StoredTypeOutput
	ToGooglePrivacyDlpV2StoredTypeOutputWithContext(context.Context) GooglePrivacyDlpV2StoredTypeOutput
}

// A reference to a StoredInfoType to use with scanning.
type GooglePrivacyDlpV2StoredTypeArgs struct {
	// Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GooglePrivacyDlpV2StoredTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StoredType)(nil)).Elem()
}

func (i GooglePrivacyDlpV2StoredTypeArgs) ToGooglePrivacyDlpV2StoredTypeOutput() GooglePrivacyDlpV2StoredTypeOutput {
	return i.ToGooglePrivacyDlpV2StoredTypeOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StoredTypeArgs) ToGooglePrivacyDlpV2StoredTypeOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredTypeOutput)
}

func (i GooglePrivacyDlpV2StoredTypeArgs) ToGooglePrivacyDlpV2StoredTypePtrOutput() GooglePrivacyDlpV2StoredTypePtrOutput {
	return i.ToGooglePrivacyDlpV2StoredTypePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StoredTypeArgs) ToGooglePrivacyDlpV2StoredTypePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredTypeOutput).ToGooglePrivacyDlpV2StoredTypePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2StoredTypePtrInput is an input type that accepts GooglePrivacyDlpV2StoredTypeArgs, GooglePrivacyDlpV2StoredTypePtr and GooglePrivacyDlpV2StoredTypePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StoredTypePtrInput` via:
//
//          GooglePrivacyDlpV2StoredTypeArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2StoredTypePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StoredTypePtrOutput() GooglePrivacyDlpV2StoredTypePtrOutput
	ToGooglePrivacyDlpV2StoredTypePtrOutputWithContext(context.Context) GooglePrivacyDlpV2StoredTypePtrOutput
}

type googlePrivacyDlpV2StoredTypePtrType GooglePrivacyDlpV2StoredTypeArgs

func GooglePrivacyDlpV2StoredTypePtr(v *GooglePrivacyDlpV2StoredTypeArgs) GooglePrivacyDlpV2StoredTypePtrInput {
	return (*googlePrivacyDlpV2StoredTypePtrType)(v)
}

func (*googlePrivacyDlpV2StoredTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2StoredType)(nil)).Elem()
}

func (i *googlePrivacyDlpV2StoredTypePtrType) ToGooglePrivacyDlpV2StoredTypePtrOutput() GooglePrivacyDlpV2StoredTypePtrOutput {
	return i.ToGooglePrivacyDlpV2StoredTypePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2StoredTypePtrType) ToGooglePrivacyDlpV2StoredTypePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredTypePtrOutput)
}

// A reference to a StoredInfoType to use with scanning.
type GooglePrivacyDlpV2StoredTypeOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StoredTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StoredType)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StoredTypeOutput) ToGooglePrivacyDlpV2StoredTypeOutput() GooglePrivacyDlpV2StoredTypeOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredTypeOutput) ToGooglePrivacyDlpV2StoredTypeOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredTypeOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredTypeOutput) ToGooglePrivacyDlpV2StoredTypePtrOutput() GooglePrivacyDlpV2StoredTypePtrOutput {
	return o.ToGooglePrivacyDlpV2StoredTypePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2StoredTypeOutput) ToGooglePrivacyDlpV2StoredTypePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2StoredType) *GooglePrivacyDlpV2StoredType {
		return &v
	}).(GooglePrivacyDlpV2StoredTypePtrOutput)
}

// Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system.
func (o GooglePrivacyDlpV2StoredTypeOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredType) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`.
func (o GooglePrivacyDlpV2StoredTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2StoredTypePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StoredTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2StoredType)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StoredTypePtrOutput) ToGooglePrivacyDlpV2StoredTypePtrOutput() GooglePrivacyDlpV2StoredTypePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredTypePtrOutput) ToGooglePrivacyDlpV2StoredTypePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredTypePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredTypePtrOutput) Elem() GooglePrivacyDlpV2StoredTypeOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredType) GooglePrivacyDlpV2StoredType {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2StoredType
		return ret
	}).(GooglePrivacyDlpV2StoredTypeOutput)
}

// Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system.
func (o GooglePrivacyDlpV2StoredTypePtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredType) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`.
func (o GooglePrivacyDlpV2StoredTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2StoredType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A reference to a StoredInfoType to use with scanning.
type GooglePrivacyDlpV2StoredTypeResponse struct {
	// Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system.
	CreateTime string `pulumi:"createTime"`
	// Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`.
	Name string `pulumi:"name"`
}

// GooglePrivacyDlpV2StoredTypeResponseInput is an input type that accepts GooglePrivacyDlpV2StoredTypeResponseArgs and GooglePrivacyDlpV2StoredTypeResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2StoredTypeResponseInput` via:
//
//          GooglePrivacyDlpV2StoredTypeResponseArgs{...}
type GooglePrivacyDlpV2StoredTypeResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2StoredTypeResponseOutput() GooglePrivacyDlpV2StoredTypeResponseOutput
	ToGooglePrivacyDlpV2StoredTypeResponseOutputWithContext(context.Context) GooglePrivacyDlpV2StoredTypeResponseOutput
}

// A reference to a StoredInfoType to use with scanning.
type GooglePrivacyDlpV2StoredTypeResponseArgs struct {
	// Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GooglePrivacyDlpV2StoredTypeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StoredTypeResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2StoredTypeResponseArgs) ToGooglePrivacyDlpV2StoredTypeResponseOutput() GooglePrivacyDlpV2StoredTypeResponseOutput {
	return i.ToGooglePrivacyDlpV2StoredTypeResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2StoredTypeResponseArgs) ToGooglePrivacyDlpV2StoredTypeResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredTypeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2StoredTypeResponseOutput)
}

// A reference to a StoredInfoType to use with scanning.
type GooglePrivacyDlpV2StoredTypeResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2StoredTypeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2StoredTypeResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2StoredTypeResponseOutput) ToGooglePrivacyDlpV2StoredTypeResponseOutput() GooglePrivacyDlpV2StoredTypeResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2StoredTypeResponseOutput) ToGooglePrivacyDlpV2StoredTypeResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2StoredTypeResponseOutput {
	return o
}

// Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system.
func (o GooglePrivacyDlpV2StoredTypeResponseOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredTypeResponse) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`.
func (o GooglePrivacyDlpV2StoredTypeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2StoredTypeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Message for detecting output from deidentification transformations such as [`CryptoReplaceFfxFpeConfig`](https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates#cryptoreplaceffxfpeconfig). These types of transformations are those that perform pseudonymization, thereby producing a "surrogate" as output. This should be used in conjunction with a field on the transformation such as `surrogate_info_type`. This CustomInfoType does not support the use of `detection_rules`.
type GooglePrivacyDlpV2SurrogateType struct {
}

// GooglePrivacyDlpV2SurrogateTypeInput is an input type that accepts GooglePrivacyDlpV2SurrogateTypeArgs and GooglePrivacyDlpV2SurrogateTypeOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2SurrogateTypeInput` via:
//
//          GooglePrivacyDlpV2SurrogateTypeArgs{...}
type GooglePrivacyDlpV2SurrogateTypeInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2SurrogateTypeOutput() GooglePrivacyDlpV2SurrogateTypeOutput
	ToGooglePrivacyDlpV2SurrogateTypeOutputWithContext(context.Context) GooglePrivacyDlpV2SurrogateTypeOutput
}

// Message for detecting output from deidentification transformations such as [`CryptoReplaceFfxFpeConfig`](https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates#cryptoreplaceffxfpeconfig). These types of transformations are those that perform pseudonymization, thereby producing a "surrogate" as output. This should be used in conjunction with a field on the transformation such as `surrogate_info_type`. This CustomInfoType does not support the use of `detection_rules`.
type GooglePrivacyDlpV2SurrogateTypeArgs struct {
}

func (GooglePrivacyDlpV2SurrogateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2SurrogateType)(nil)).Elem()
}

func (i GooglePrivacyDlpV2SurrogateTypeArgs) ToGooglePrivacyDlpV2SurrogateTypeOutput() GooglePrivacyDlpV2SurrogateTypeOutput {
	return i.ToGooglePrivacyDlpV2SurrogateTypeOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2SurrogateTypeArgs) ToGooglePrivacyDlpV2SurrogateTypeOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SurrogateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2SurrogateTypeOutput)
}

func (i GooglePrivacyDlpV2SurrogateTypeArgs) ToGooglePrivacyDlpV2SurrogateTypePtrOutput() GooglePrivacyDlpV2SurrogateTypePtrOutput {
	return i.ToGooglePrivacyDlpV2SurrogateTypePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2SurrogateTypeArgs) ToGooglePrivacyDlpV2SurrogateTypePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SurrogateTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2SurrogateTypeOutput).ToGooglePrivacyDlpV2SurrogateTypePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2SurrogateTypePtrInput is an input type that accepts GooglePrivacyDlpV2SurrogateTypeArgs, GooglePrivacyDlpV2SurrogateTypePtr and GooglePrivacyDlpV2SurrogateTypePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2SurrogateTypePtrInput` via:
//
//          GooglePrivacyDlpV2SurrogateTypeArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2SurrogateTypePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2SurrogateTypePtrOutput() GooglePrivacyDlpV2SurrogateTypePtrOutput
	ToGooglePrivacyDlpV2SurrogateTypePtrOutputWithContext(context.Context) GooglePrivacyDlpV2SurrogateTypePtrOutput
}

type googlePrivacyDlpV2SurrogateTypePtrType GooglePrivacyDlpV2SurrogateTypeArgs

func GooglePrivacyDlpV2SurrogateTypePtr(v *GooglePrivacyDlpV2SurrogateTypeArgs) GooglePrivacyDlpV2SurrogateTypePtrInput {
	return (*googlePrivacyDlpV2SurrogateTypePtrType)(v)
}

func (*googlePrivacyDlpV2SurrogateTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2SurrogateType)(nil)).Elem()
}

func (i *googlePrivacyDlpV2SurrogateTypePtrType) ToGooglePrivacyDlpV2SurrogateTypePtrOutput() GooglePrivacyDlpV2SurrogateTypePtrOutput {
	return i.ToGooglePrivacyDlpV2SurrogateTypePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2SurrogateTypePtrType) ToGooglePrivacyDlpV2SurrogateTypePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SurrogateTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2SurrogateTypePtrOutput)
}

// Message for detecting output from deidentification transformations such as [`CryptoReplaceFfxFpeConfig`](https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates#cryptoreplaceffxfpeconfig). These types of transformations are those that perform pseudonymization, thereby producing a "surrogate" as output. This should be used in conjunction with a field on the transformation such as `surrogate_info_type`. This CustomInfoType does not support the use of `detection_rules`.
type GooglePrivacyDlpV2SurrogateTypeOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2SurrogateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2SurrogateType)(nil)).Elem()
}

func (o GooglePrivacyDlpV2SurrogateTypeOutput) ToGooglePrivacyDlpV2SurrogateTypeOutput() GooglePrivacyDlpV2SurrogateTypeOutput {
	return o
}

func (o GooglePrivacyDlpV2SurrogateTypeOutput) ToGooglePrivacyDlpV2SurrogateTypeOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SurrogateTypeOutput {
	return o
}

func (o GooglePrivacyDlpV2SurrogateTypeOutput) ToGooglePrivacyDlpV2SurrogateTypePtrOutput() GooglePrivacyDlpV2SurrogateTypePtrOutput {
	return o.ToGooglePrivacyDlpV2SurrogateTypePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2SurrogateTypeOutput) ToGooglePrivacyDlpV2SurrogateTypePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SurrogateTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2SurrogateType) *GooglePrivacyDlpV2SurrogateType {
		return &v
	}).(GooglePrivacyDlpV2SurrogateTypePtrOutput)
}

type GooglePrivacyDlpV2SurrogateTypePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2SurrogateTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2SurrogateType)(nil)).Elem()
}

func (o GooglePrivacyDlpV2SurrogateTypePtrOutput) ToGooglePrivacyDlpV2SurrogateTypePtrOutput() GooglePrivacyDlpV2SurrogateTypePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2SurrogateTypePtrOutput) ToGooglePrivacyDlpV2SurrogateTypePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SurrogateTypePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2SurrogateTypePtrOutput) Elem() GooglePrivacyDlpV2SurrogateTypeOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2SurrogateType) GooglePrivacyDlpV2SurrogateType {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2SurrogateType
		return ret
	}).(GooglePrivacyDlpV2SurrogateTypeOutput)
}

// Message for detecting output from deidentification transformations such as [`CryptoReplaceFfxFpeConfig`](https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates#cryptoreplaceffxfpeconfig). These types of transformations are those that perform pseudonymization, thereby producing a "surrogate" as output. This should be used in conjunction with a field on the transformation such as `surrogate_info_type`. This CustomInfoType does not support the use of `detection_rules`.
type GooglePrivacyDlpV2SurrogateTypeResponse struct {
}

// GooglePrivacyDlpV2SurrogateTypeResponseInput is an input type that accepts GooglePrivacyDlpV2SurrogateTypeResponseArgs and GooglePrivacyDlpV2SurrogateTypeResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2SurrogateTypeResponseInput` via:
//
//          GooglePrivacyDlpV2SurrogateTypeResponseArgs{...}
type GooglePrivacyDlpV2SurrogateTypeResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2SurrogateTypeResponseOutput() GooglePrivacyDlpV2SurrogateTypeResponseOutput
	ToGooglePrivacyDlpV2SurrogateTypeResponseOutputWithContext(context.Context) GooglePrivacyDlpV2SurrogateTypeResponseOutput
}

// Message for detecting output from deidentification transformations such as [`CryptoReplaceFfxFpeConfig`](https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates#cryptoreplaceffxfpeconfig). These types of transformations are those that perform pseudonymization, thereby producing a "surrogate" as output. This should be used in conjunction with a field on the transformation such as `surrogate_info_type`. This CustomInfoType does not support the use of `detection_rules`.
type GooglePrivacyDlpV2SurrogateTypeResponseArgs struct {
}

func (GooglePrivacyDlpV2SurrogateTypeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2SurrogateTypeResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2SurrogateTypeResponseArgs) ToGooglePrivacyDlpV2SurrogateTypeResponseOutput() GooglePrivacyDlpV2SurrogateTypeResponseOutput {
	return i.ToGooglePrivacyDlpV2SurrogateTypeResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2SurrogateTypeResponseArgs) ToGooglePrivacyDlpV2SurrogateTypeResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SurrogateTypeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2SurrogateTypeResponseOutput)
}

// Message for detecting output from deidentification transformations such as [`CryptoReplaceFfxFpeConfig`](https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates#cryptoreplaceffxfpeconfig). These types of transformations are those that perform pseudonymization, thereby producing a "surrogate" as output. This should be used in conjunction with a field on the transformation such as `surrogate_info_type`. This CustomInfoType does not support the use of `detection_rules`.
type GooglePrivacyDlpV2SurrogateTypeResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2SurrogateTypeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2SurrogateTypeResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2SurrogateTypeResponseOutput) ToGooglePrivacyDlpV2SurrogateTypeResponseOutput() GooglePrivacyDlpV2SurrogateTypeResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2SurrogateTypeResponseOutput) ToGooglePrivacyDlpV2SurrogateTypeResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2SurrogateTypeResponseOutput {
	return o
}

// Instructions regarding the table content being inspected.
type GooglePrivacyDlpV2TableOptions struct {
	// The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided.
	IdentifyingFields []GooglePrivacyDlpV2FieldId `pulumi:"identifyingFields"`
}

// GooglePrivacyDlpV2TableOptionsInput is an input type that accepts GooglePrivacyDlpV2TableOptionsArgs and GooglePrivacyDlpV2TableOptionsOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TableOptionsInput` via:
//
//          GooglePrivacyDlpV2TableOptionsArgs{...}
type GooglePrivacyDlpV2TableOptionsInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TableOptionsOutput() GooglePrivacyDlpV2TableOptionsOutput
	ToGooglePrivacyDlpV2TableOptionsOutputWithContext(context.Context) GooglePrivacyDlpV2TableOptionsOutput
}

// Instructions regarding the table content being inspected.
type GooglePrivacyDlpV2TableOptionsArgs struct {
	// The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided.
	IdentifyingFields GooglePrivacyDlpV2FieldIdArrayInput `pulumi:"identifyingFields"`
}

func (GooglePrivacyDlpV2TableOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TableOptions)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TableOptionsArgs) ToGooglePrivacyDlpV2TableOptionsOutput() GooglePrivacyDlpV2TableOptionsOutput {
	return i.ToGooglePrivacyDlpV2TableOptionsOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TableOptionsArgs) ToGooglePrivacyDlpV2TableOptionsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TableOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TableOptionsOutput)
}

func (i GooglePrivacyDlpV2TableOptionsArgs) ToGooglePrivacyDlpV2TableOptionsPtrOutput() GooglePrivacyDlpV2TableOptionsPtrOutput {
	return i.ToGooglePrivacyDlpV2TableOptionsPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TableOptionsArgs) ToGooglePrivacyDlpV2TableOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TableOptionsOutput).ToGooglePrivacyDlpV2TableOptionsPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2TableOptionsPtrInput is an input type that accepts GooglePrivacyDlpV2TableOptionsArgs, GooglePrivacyDlpV2TableOptionsPtr and GooglePrivacyDlpV2TableOptionsPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TableOptionsPtrInput` via:
//
//          GooglePrivacyDlpV2TableOptionsArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2TableOptionsPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TableOptionsPtrOutput() GooglePrivacyDlpV2TableOptionsPtrOutput
	ToGooglePrivacyDlpV2TableOptionsPtrOutputWithContext(context.Context) GooglePrivacyDlpV2TableOptionsPtrOutput
}

type googlePrivacyDlpV2TableOptionsPtrType GooglePrivacyDlpV2TableOptionsArgs

func GooglePrivacyDlpV2TableOptionsPtr(v *GooglePrivacyDlpV2TableOptionsArgs) GooglePrivacyDlpV2TableOptionsPtrInput {
	return (*googlePrivacyDlpV2TableOptionsPtrType)(v)
}

func (*googlePrivacyDlpV2TableOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TableOptions)(nil)).Elem()
}

func (i *googlePrivacyDlpV2TableOptionsPtrType) ToGooglePrivacyDlpV2TableOptionsPtrOutput() GooglePrivacyDlpV2TableOptionsPtrOutput {
	return i.ToGooglePrivacyDlpV2TableOptionsPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2TableOptionsPtrType) ToGooglePrivacyDlpV2TableOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TableOptionsPtrOutput)
}

// Instructions regarding the table content being inspected.
type GooglePrivacyDlpV2TableOptionsOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TableOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TableOptions)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TableOptionsOutput) ToGooglePrivacyDlpV2TableOptionsOutput() GooglePrivacyDlpV2TableOptionsOutput {
	return o
}

func (o GooglePrivacyDlpV2TableOptionsOutput) ToGooglePrivacyDlpV2TableOptionsOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TableOptionsOutput {
	return o
}

func (o GooglePrivacyDlpV2TableOptionsOutput) ToGooglePrivacyDlpV2TableOptionsPtrOutput() GooglePrivacyDlpV2TableOptionsPtrOutput {
	return o.ToGooglePrivacyDlpV2TableOptionsPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2TableOptionsOutput) ToGooglePrivacyDlpV2TableOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TableOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2TableOptions) *GooglePrivacyDlpV2TableOptions {
		return &v
	}).(GooglePrivacyDlpV2TableOptionsPtrOutput)
}

// The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided.
func (o GooglePrivacyDlpV2TableOptionsOutput) IdentifyingFields() GooglePrivacyDlpV2FieldIdArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TableOptions) []GooglePrivacyDlpV2FieldId { return v.IdentifyingFields }).(GooglePrivacyDlpV2FieldIdArrayOutput)
}

type GooglePrivacyDlpV2TableOptionsPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TableOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TableOptions)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TableOptionsPtrOutput) ToGooglePrivacyDlpV2TableOptionsPtrOutput() GooglePrivacyDlpV2TableOptionsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TableOptionsPtrOutput) ToGooglePrivacyDlpV2TableOptionsPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TableOptionsPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TableOptionsPtrOutput) Elem() GooglePrivacyDlpV2TableOptionsOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TableOptions) GooglePrivacyDlpV2TableOptions {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2TableOptions
		return ret
	}).(GooglePrivacyDlpV2TableOptionsOutput)
}

// The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided.
func (o GooglePrivacyDlpV2TableOptionsPtrOutput) IdentifyingFields() GooglePrivacyDlpV2FieldIdArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TableOptions) []GooglePrivacyDlpV2FieldId {
		if v == nil {
			return nil
		}
		return v.IdentifyingFields
	}).(GooglePrivacyDlpV2FieldIdArrayOutput)
}

// Instructions regarding the table content being inspected.
type GooglePrivacyDlpV2TableOptionsResponse struct {
	// The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided.
	IdentifyingFields []GooglePrivacyDlpV2FieldIdResponse `pulumi:"identifyingFields"`
}

// GooglePrivacyDlpV2TableOptionsResponseInput is an input type that accepts GooglePrivacyDlpV2TableOptionsResponseArgs and GooglePrivacyDlpV2TableOptionsResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TableOptionsResponseInput` via:
//
//          GooglePrivacyDlpV2TableOptionsResponseArgs{...}
type GooglePrivacyDlpV2TableOptionsResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TableOptionsResponseOutput() GooglePrivacyDlpV2TableOptionsResponseOutput
	ToGooglePrivacyDlpV2TableOptionsResponseOutputWithContext(context.Context) GooglePrivacyDlpV2TableOptionsResponseOutput
}

// Instructions regarding the table content being inspected.
type GooglePrivacyDlpV2TableOptionsResponseArgs struct {
	// The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided.
	IdentifyingFields GooglePrivacyDlpV2FieldIdResponseArrayInput `pulumi:"identifyingFields"`
}

func (GooglePrivacyDlpV2TableOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TableOptionsResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TableOptionsResponseArgs) ToGooglePrivacyDlpV2TableOptionsResponseOutput() GooglePrivacyDlpV2TableOptionsResponseOutput {
	return i.ToGooglePrivacyDlpV2TableOptionsResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TableOptionsResponseArgs) ToGooglePrivacyDlpV2TableOptionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TableOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TableOptionsResponseOutput)
}

func (i GooglePrivacyDlpV2TableOptionsResponseArgs) ToGooglePrivacyDlpV2TableOptionsResponsePtrOutput() GooglePrivacyDlpV2TableOptionsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2TableOptionsResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TableOptionsResponseArgs) ToGooglePrivacyDlpV2TableOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TableOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TableOptionsResponseOutput).ToGooglePrivacyDlpV2TableOptionsResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2TableOptionsResponsePtrInput is an input type that accepts GooglePrivacyDlpV2TableOptionsResponseArgs, GooglePrivacyDlpV2TableOptionsResponsePtr and GooglePrivacyDlpV2TableOptionsResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TableOptionsResponsePtrInput` via:
//
//          GooglePrivacyDlpV2TableOptionsResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2TableOptionsResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TableOptionsResponsePtrOutput() GooglePrivacyDlpV2TableOptionsResponsePtrOutput
	ToGooglePrivacyDlpV2TableOptionsResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2TableOptionsResponsePtrOutput
}

type googlePrivacyDlpV2TableOptionsResponsePtrType GooglePrivacyDlpV2TableOptionsResponseArgs

func GooglePrivacyDlpV2TableOptionsResponsePtr(v *GooglePrivacyDlpV2TableOptionsResponseArgs) GooglePrivacyDlpV2TableOptionsResponsePtrInput {
	return (*googlePrivacyDlpV2TableOptionsResponsePtrType)(v)
}

func (*googlePrivacyDlpV2TableOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TableOptionsResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2TableOptionsResponsePtrType) ToGooglePrivacyDlpV2TableOptionsResponsePtrOutput() GooglePrivacyDlpV2TableOptionsResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2TableOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2TableOptionsResponsePtrType) ToGooglePrivacyDlpV2TableOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TableOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TableOptionsResponsePtrOutput)
}

// Instructions regarding the table content being inspected.
type GooglePrivacyDlpV2TableOptionsResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TableOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TableOptionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TableOptionsResponseOutput) ToGooglePrivacyDlpV2TableOptionsResponseOutput() GooglePrivacyDlpV2TableOptionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2TableOptionsResponseOutput) ToGooglePrivacyDlpV2TableOptionsResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TableOptionsResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2TableOptionsResponseOutput) ToGooglePrivacyDlpV2TableOptionsResponsePtrOutput() GooglePrivacyDlpV2TableOptionsResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2TableOptionsResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2TableOptionsResponseOutput) ToGooglePrivacyDlpV2TableOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TableOptionsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2TableOptionsResponse) *GooglePrivacyDlpV2TableOptionsResponse {
		return &v
	}).(GooglePrivacyDlpV2TableOptionsResponsePtrOutput)
}

// The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided.
func (o GooglePrivacyDlpV2TableOptionsResponseOutput) IdentifyingFields() GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TableOptionsResponse) []GooglePrivacyDlpV2FieldIdResponse {
		return v.IdentifyingFields
	}).(GooglePrivacyDlpV2FieldIdResponseArrayOutput)
}

type GooglePrivacyDlpV2TableOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TableOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TableOptionsResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TableOptionsResponsePtrOutput) ToGooglePrivacyDlpV2TableOptionsResponsePtrOutput() GooglePrivacyDlpV2TableOptionsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TableOptionsResponsePtrOutput) ToGooglePrivacyDlpV2TableOptionsResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TableOptionsResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TableOptionsResponsePtrOutput) Elem() GooglePrivacyDlpV2TableOptionsResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TableOptionsResponse) GooglePrivacyDlpV2TableOptionsResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2TableOptionsResponse
		return ret
	}).(GooglePrivacyDlpV2TableOptionsResponseOutput)
}

// The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided.
func (o GooglePrivacyDlpV2TableOptionsResponsePtrOutput) IdentifyingFields() GooglePrivacyDlpV2FieldIdResponseArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TableOptionsResponse) []GooglePrivacyDlpV2FieldIdResponse {
		if v == nil {
			return nil
		}
		return v.IdentifyingFields
	}).(GooglePrivacyDlpV2FieldIdResponseArrayOutput)
}

// A column with a semantic tag attached.
type GooglePrivacyDlpV2TaggedField struct {
	// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
	CustomTag *string `pulumi:"customTag"`
	// Identifies the column.
	Field GooglePrivacyDlpV2FieldId `pulumi:"field"`
	// If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data
	Inferred *GoogleProtobufEmpty `pulumi:"inferred"`
	// A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
	InfoType *GooglePrivacyDlpV2InfoType `pulumi:"infoType"`
}

// GooglePrivacyDlpV2TaggedFieldInput is an input type that accepts GooglePrivacyDlpV2TaggedFieldArgs and GooglePrivacyDlpV2TaggedFieldOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TaggedFieldInput` via:
//
//          GooglePrivacyDlpV2TaggedFieldArgs{...}
type GooglePrivacyDlpV2TaggedFieldInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TaggedFieldOutput() GooglePrivacyDlpV2TaggedFieldOutput
	ToGooglePrivacyDlpV2TaggedFieldOutputWithContext(context.Context) GooglePrivacyDlpV2TaggedFieldOutput
}

// A column with a semantic tag attached.
type GooglePrivacyDlpV2TaggedFieldArgs struct {
	// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
	CustomTag pulumi.StringPtrInput `pulumi:"customTag"`
	// Identifies the column.
	Field GooglePrivacyDlpV2FieldIdInput `pulumi:"field"`
	// If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data
	Inferred GoogleProtobufEmptyPtrInput `pulumi:"inferred"`
	// A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
	InfoType GooglePrivacyDlpV2InfoTypePtrInput `pulumi:"infoType"`
}

func (GooglePrivacyDlpV2TaggedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TaggedField)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TaggedFieldArgs) ToGooglePrivacyDlpV2TaggedFieldOutput() GooglePrivacyDlpV2TaggedFieldOutput {
	return i.ToGooglePrivacyDlpV2TaggedFieldOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TaggedFieldArgs) ToGooglePrivacyDlpV2TaggedFieldOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TaggedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TaggedFieldOutput)
}

// GooglePrivacyDlpV2TaggedFieldArrayInput is an input type that accepts GooglePrivacyDlpV2TaggedFieldArray and GooglePrivacyDlpV2TaggedFieldArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TaggedFieldArrayInput` via:
//
//          GooglePrivacyDlpV2TaggedFieldArray{ GooglePrivacyDlpV2TaggedFieldArgs{...} }
type GooglePrivacyDlpV2TaggedFieldArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TaggedFieldArrayOutput() GooglePrivacyDlpV2TaggedFieldArrayOutput
	ToGooglePrivacyDlpV2TaggedFieldArrayOutputWithContext(context.Context) GooglePrivacyDlpV2TaggedFieldArrayOutput
}

type GooglePrivacyDlpV2TaggedFieldArray []GooglePrivacyDlpV2TaggedFieldInput

func (GooglePrivacyDlpV2TaggedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2TaggedField)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TaggedFieldArray) ToGooglePrivacyDlpV2TaggedFieldArrayOutput() GooglePrivacyDlpV2TaggedFieldArrayOutput {
	return i.ToGooglePrivacyDlpV2TaggedFieldArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TaggedFieldArray) ToGooglePrivacyDlpV2TaggedFieldArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TaggedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TaggedFieldArrayOutput)
}

// A column with a semantic tag attached.
type GooglePrivacyDlpV2TaggedFieldOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TaggedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TaggedField)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TaggedFieldOutput) ToGooglePrivacyDlpV2TaggedFieldOutput() GooglePrivacyDlpV2TaggedFieldOutput {
	return o
}

func (o GooglePrivacyDlpV2TaggedFieldOutput) ToGooglePrivacyDlpV2TaggedFieldOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TaggedFieldOutput {
	return o
}

// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
func (o GooglePrivacyDlpV2TaggedFieldOutput) CustomTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TaggedField) *string { return v.CustomTag }).(pulumi.StringPtrOutput)
}

// Identifies the column.
func (o GooglePrivacyDlpV2TaggedFieldOutput) Field() GooglePrivacyDlpV2FieldIdOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TaggedField) GooglePrivacyDlpV2FieldId { return v.Field }).(GooglePrivacyDlpV2FieldIdOutput)
}

// If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data
func (o GooglePrivacyDlpV2TaggedFieldOutput) Inferred() GoogleProtobufEmptyPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TaggedField) *GoogleProtobufEmpty { return v.Inferred }).(GoogleProtobufEmptyPtrOutput)
}

// A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
func (o GooglePrivacyDlpV2TaggedFieldOutput) InfoType() GooglePrivacyDlpV2InfoTypePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TaggedField) *GooglePrivacyDlpV2InfoType { return v.InfoType }).(GooglePrivacyDlpV2InfoTypePtrOutput)
}

type GooglePrivacyDlpV2TaggedFieldArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TaggedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2TaggedField)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TaggedFieldArrayOutput) ToGooglePrivacyDlpV2TaggedFieldArrayOutput() GooglePrivacyDlpV2TaggedFieldArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2TaggedFieldArrayOutput) ToGooglePrivacyDlpV2TaggedFieldArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TaggedFieldArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2TaggedFieldArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2TaggedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2TaggedField {
		return vs[0].([]GooglePrivacyDlpV2TaggedField)[vs[1].(int)]
	}).(GooglePrivacyDlpV2TaggedFieldOutput)
}

// A column with a semantic tag attached.
type GooglePrivacyDlpV2TaggedFieldResponse struct {
	// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
	CustomTag string `pulumi:"customTag"`
	// Identifies the column.
	Field GooglePrivacyDlpV2FieldIdResponse `pulumi:"field"`
	// If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data
	Inferred GoogleProtobufEmptyResponse `pulumi:"inferred"`
	// A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
	InfoType GooglePrivacyDlpV2InfoTypeResponse `pulumi:"infoType"`
}

// GooglePrivacyDlpV2TaggedFieldResponseInput is an input type that accepts GooglePrivacyDlpV2TaggedFieldResponseArgs and GooglePrivacyDlpV2TaggedFieldResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TaggedFieldResponseInput` via:
//
//          GooglePrivacyDlpV2TaggedFieldResponseArgs{...}
type GooglePrivacyDlpV2TaggedFieldResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TaggedFieldResponseOutput() GooglePrivacyDlpV2TaggedFieldResponseOutput
	ToGooglePrivacyDlpV2TaggedFieldResponseOutputWithContext(context.Context) GooglePrivacyDlpV2TaggedFieldResponseOutput
}

// A column with a semantic tag attached.
type GooglePrivacyDlpV2TaggedFieldResponseArgs struct {
	// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
	CustomTag pulumi.StringInput `pulumi:"customTag"`
	// Identifies the column.
	Field GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"field"`
	// If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data
	Inferred GoogleProtobufEmptyResponseInput `pulumi:"inferred"`
	// A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
	InfoType GooglePrivacyDlpV2InfoTypeResponseInput `pulumi:"infoType"`
}

func (GooglePrivacyDlpV2TaggedFieldResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TaggedFieldResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TaggedFieldResponseArgs) ToGooglePrivacyDlpV2TaggedFieldResponseOutput() GooglePrivacyDlpV2TaggedFieldResponseOutput {
	return i.ToGooglePrivacyDlpV2TaggedFieldResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TaggedFieldResponseArgs) ToGooglePrivacyDlpV2TaggedFieldResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TaggedFieldResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TaggedFieldResponseOutput)
}

// GooglePrivacyDlpV2TaggedFieldResponseArrayInput is an input type that accepts GooglePrivacyDlpV2TaggedFieldResponseArray and GooglePrivacyDlpV2TaggedFieldResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TaggedFieldResponseArrayInput` via:
//
//          GooglePrivacyDlpV2TaggedFieldResponseArray{ GooglePrivacyDlpV2TaggedFieldResponseArgs{...} }
type GooglePrivacyDlpV2TaggedFieldResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TaggedFieldResponseArrayOutput() GooglePrivacyDlpV2TaggedFieldResponseArrayOutput
	ToGooglePrivacyDlpV2TaggedFieldResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2TaggedFieldResponseArrayOutput
}

type GooglePrivacyDlpV2TaggedFieldResponseArray []GooglePrivacyDlpV2TaggedFieldResponseInput

func (GooglePrivacyDlpV2TaggedFieldResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2TaggedFieldResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TaggedFieldResponseArray) ToGooglePrivacyDlpV2TaggedFieldResponseArrayOutput() GooglePrivacyDlpV2TaggedFieldResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2TaggedFieldResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TaggedFieldResponseArray) ToGooglePrivacyDlpV2TaggedFieldResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TaggedFieldResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TaggedFieldResponseArrayOutput)
}

// A column with a semantic tag attached.
type GooglePrivacyDlpV2TaggedFieldResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TaggedFieldResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TaggedFieldResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TaggedFieldResponseOutput) ToGooglePrivacyDlpV2TaggedFieldResponseOutput() GooglePrivacyDlpV2TaggedFieldResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2TaggedFieldResponseOutput) ToGooglePrivacyDlpV2TaggedFieldResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TaggedFieldResponseOutput {
	return o
}

// A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
func (o GooglePrivacyDlpV2TaggedFieldResponseOutput) CustomTag() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TaggedFieldResponse) string { return v.CustomTag }).(pulumi.StringOutput)
}

// Identifies the column.
func (o GooglePrivacyDlpV2TaggedFieldResponseOutput) Field() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TaggedFieldResponse) GooglePrivacyDlpV2FieldIdResponse { return v.Field }).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

// If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data
func (o GooglePrivacyDlpV2TaggedFieldResponseOutput) Inferred() GoogleProtobufEmptyResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TaggedFieldResponse) GoogleProtobufEmptyResponse { return v.Inferred }).(GoogleProtobufEmptyResponseOutput)
}

// A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
func (o GooglePrivacyDlpV2TaggedFieldResponseOutput) InfoType() GooglePrivacyDlpV2InfoTypeResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TaggedFieldResponse) GooglePrivacyDlpV2InfoTypeResponse { return v.InfoType }).(GooglePrivacyDlpV2InfoTypeResponseOutput)
}

type GooglePrivacyDlpV2TaggedFieldResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TaggedFieldResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2TaggedFieldResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TaggedFieldResponseArrayOutput) ToGooglePrivacyDlpV2TaggedFieldResponseArrayOutput() GooglePrivacyDlpV2TaggedFieldResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2TaggedFieldResponseArrayOutput) ToGooglePrivacyDlpV2TaggedFieldResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TaggedFieldResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2TaggedFieldResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2TaggedFieldResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2TaggedFieldResponse {
		return vs[0].([]GooglePrivacyDlpV2TaggedFieldResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2TaggedFieldResponseOutput)
}

// Throw an error and fail the request when a transformation error occurs.
type GooglePrivacyDlpV2ThrowError struct {
}

// GooglePrivacyDlpV2ThrowErrorInput is an input type that accepts GooglePrivacyDlpV2ThrowErrorArgs and GooglePrivacyDlpV2ThrowErrorOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ThrowErrorInput` via:
//
//          GooglePrivacyDlpV2ThrowErrorArgs{...}
type GooglePrivacyDlpV2ThrowErrorInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ThrowErrorOutput() GooglePrivacyDlpV2ThrowErrorOutput
	ToGooglePrivacyDlpV2ThrowErrorOutputWithContext(context.Context) GooglePrivacyDlpV2ThrowErrorOutput
}

// Throw an error and fail the request when a transformation error occurs.
type GooglePrivacyDlpV2ThrowErrorArgs struct {
}

func (GooglePrivacyDlpV2ThrowErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ThrowError)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ThrowErrorArgs) ToGooglePrivacyDlpV2ThrowErrorOutput() GooglePrivacyDlpV2ThrowErrorOutput {
	return i.ToGooglePrivacyDlpV2ThrowErrorOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ThrowErrorArgs) ToGooglePrivacyDlpV2ThrowErrorOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ThrowErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ThrowErrorOutput)
}

func (i GooglePrivacyDlpV2ThrowErrorArgs) ToGooglePrivacyDlpV2ThrowErrorPtrOutput() GooglePrivacyDlpV2ThrowErrorPtrOutput {
	return i.ToGooglePrivacyDlpV2ThrowErrorPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ThrowErrorArgs) ToGooglePrivacyDlpV2ThrowErrorPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ThrowErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ThrowErrorOutput).ToGooglePrivacyDlpV2ThrowErrorPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2ThrowErrorPtrInput is an input type that accepts GooglePrivacyDlpV2ThrowErrorArgs, GooglePrivacyDlpV2ThrowErrorPtr and GooglePrivacyDlpV2ThrowErrorPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ThrowErrorPtrInput` via:
//
//          GooglePrivacyDlpV2ThrowErrorArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2ThrowErrorPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ThrowErrorPtrOutput() GooglePrivacyDlpV2ThrowErrorPtrOutput
	ToGooglePrivacyDlpV2ThrowErrorPtrOutputWithContext(context.Context) GooglePrivacyDlpV2ThrowErrorPtrOutput
}

type googlePrivacyDlpV2ThrowErrorPtrType GooglePrivacyDlpV2ThrowErrorArgs

func GooglePrivacyDlpV2ThrowErrorPtr(v *GooglePrivacyDlpV2ThrowErrorArgs) GooglePrivacyDlpV2ThrowErrorPtrInput {
	return (*googlePrivacyDlpV2ThrowErrorPtrType)(v)
}

func (*googlePrivacyDlpV2ThrowErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ThrowError)(nil)).Elem()
}

func (i *googlePrivacyDlpV2ThrowErrorPtrType) ToGooglePrivacyDlpV2ThrowErrorPtrOutput() GooglePrivacyDlpV2ThrowErrorPtrOutput {
	return i.ToGooglePrivacyDlpV2ThrowErrorPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2ThrowErrorPtrType) ToGooglePrivacyDlpV2ThrowErrorPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ThrowErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ThrowErrorPtrOutput)
}

// Throw an error and fail the request when a transformation error occurs.
type GooglePrivacyDlpV2ThrowErrorOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ThrowErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ThrowError)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ThrowErrorOutput) ToGooglePrivacyDlpV2ThrowErrorOutput() GooglePrivacyDlpV2ThrowErrorOutput {
	return o
}

func (o GooglePrivacyDlpV2ThrowErrorOutput) ToGooglePrivacyDlpV2ThrowErrorOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ThrowErrorOutput {
	return o
}

func (o GooglePrivacyDlpV2ThrowErrorOutput) ToGooglePrivacyDlpV2ThrowErrorPtrOutput() GooglePrivacyDlpV2ThrowErrorPtrOutput {
	return o.ToGooglePrivacyDlpV2ThrowErrorPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2ThrowErrorOutput) ToGooglePrivacyDlpV2ThrowErrorPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ThrowErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2ThrowError) *GooglePrivacyDlpV2ThrowError {
		return &v
	}).(GooglePrivacyDlpV2ThrowErrorPtrOutput)
}

type GooglePrivacyDlpV2ThrowErrorPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ThrowErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ThrowError)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ThrowErrorPtrOutput) ToGooglePrivacyDlpV2ThrowErrorPtrOutput() GooglePrivacyDlpV2ThrowErrorPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ThrowErrorPtrOutput) ToGooglePrivacyDlpV2ThrowErrorPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ThrowErrorPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ThrowErrorPtrOutput) Elem() GooglePrivacyDlpV2ThrowErrorOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ThrowError) GooglePrivacyDlpV2ThrowError {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2ThrowError
		return ret
	}).(GooglePrivacyDlpV2ThrowErrorOutput)
}

// Throw an error and fail the request when a transformation error occurs.
type GooglePrivacyDlpV2ThrowErrorResponse struct {
}

// GooglePrivacyDlpV2ThrowErrorResponseInput is an input type that accepts GooglePrivacyDlpV2ThrowErrorResponseArgs and GooglePrivacyDlpV2ThrowErrorResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ThrowErrorResponseInput` via:
//
//          GooglePrivacyDlpV2ThrowErrorResponseArgs{...}
type GooglePrivacyDlpV2ThrowErrorResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ThrowErrorResponseOutput() GooglePrivacyDlpV2ThrowErrorResponseOutput
	ToGooglePrivacyDlpV2ThrowErrorResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ThrowErrorResponseOutput
}

// Throw an error and fail the request when a transformation error occurs.
type GooglePrivacyDlpV2ThrowErrorResponseArgs struct {
}

func (GooglePrivacyDlpV2ThrowErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ThrowErrorResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ThrowErrorResponseArgs) ToGooglePrivacyDlpV2ThrowErrorResponseOutput() GooglePrivacyDlpV2ThrowErrorResponseOutput {
	return i.ToGooglePrivacyDlpV2ThrowErrorResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ThrowErrorResponseArgs) ToGooglePrivacyDlpV2ThrowErrorResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ThrowErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ThrowErrorResponseOutput)
}

func (i GooglePrivacyDlpV2ThrowErrorResponseArgs) ToGooglePrivacyDlpV2ThrowErrorResponsePtrOutput() GooglePrivacyDlpV2ThrowErrorResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2ThrowErrorResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ThrowErrorResponseArgs) ToGooglePrivacyDlpV2ThrowErrorResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ThrowErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ThrowErrorResponseOutput).ToGooglePrivacyDlpV2ThrowErrorResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2ThrowErrorResponsePtrInput is an input type that accepts GooglePrivacyDlpV2ThrowErrorResponseArgs, GooglePrivacyDlpV2ThrowErrorResponsePtr and GooglePrivacyDlpV2ThrowErrorResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ThrowErrorResponsePtrInput` via:
//
//          GooglePrivacyDlpV2ThrowErrorResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2ThrowErrorResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ThrowErrorResponsePtrOutput() GooglePrivacyDlpV2ThrowErrorResponsePtrOutput
	ToGooglePrivacyDlpV2ThrowErrorResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2ThrowErrorResponsePtrOutput
}

type googlePrivacyDlpV2ThrowErrorResponsePtrType GooglePrivacyDlpV2ThrowErrorResponseArgs

func GooglePrivacyDlpV2ThrowErrorResponsePtr(v *GooglePrivacyDlpV2ThrowErrorResponseArgs) GooglePrivacyDlpV2ThrowErrorResponsePtrInput {
	return (*googlePrivacyDlpV2ThrowErrorResponsePtrType)(v)
}

func (*googlePrivacyDlpV2ThrowErrorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ThrowErrorResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2ThrowErrorResponsePtrType) ToGooglePrivacyDlpV2ThrowErrorResponsePtrOutput() GooglePrivacyDlpV2ThrowErrorResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2ThrowErrorResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2ThrowErrorResponsePtrType) ToGooglePrivacyDlpV2ThrowErrorResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ThrowErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ThrowErrorResponsePtrOutput)
}

// Throw an error and fail the request when a transformation error occurs.
type GooglePrivacyDlpV2ThrowErrorResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ThrowErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ThrowErrorResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ThrowErrorResponseOutput) ToGooglePrivacyDlpV2ThrowErrorResponseOutput() GooglePrivacyDlpV2ThrowErrorResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ThrowErrorResponseOutput) ToGooglePrivacyDlpV2ThrowErrorResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ThrowErrorResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ThrowErrorResponseOutput) ToGooglePrivacyDlpV2ThrowErrorResponsePtrOutput() GooglePrivacyDlpV2ThrowErrorResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2ThrowErrorResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2ThrowErrorResponseOutput) ToGooglePrivacyDlpV2ThrowErrorResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ThrowErrorResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2ThrowErrorResponse) *GooglePrivacyDlpV2ThrowErrorResponse {
		return &v
	}).(GooglePrivacyDlpV2ThrowErrorResponsePtrOutput)
}

type GooglePrivacyDlpV2ThrowErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ThrowErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ThrowErrorResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ThrowErrorResponsePtrOutput) ToGooglePrivacyDlpV2ThrowErrorResponsePtrOutput() GooglePrivacyDlpV2ThrowErrorResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ThrowErrorResponsePtrOutput) ToGooglePrivacyDlpV2ThrowErrorResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ThrowErrorResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ThrowErrorResponsePtrOutput) Elem() GooglePrivacyDlpV2ThrowErrorResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ThrowErrorResponse) GooglePrivacyDlpV2ThrowErrorResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2ThrowErrorResponse
		return ret
	}).(GooglePrivacyDlpV2ThrowErrorResponseOutput)
}

// For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a portion of the value.
type GooglePrivacyDlpV2TimePartConfig struct {
	// The part of the time to keep.
	PartToExtract *GooglePrivacyDlpV2TimePartConfigPartToExtract `pulumi:"partToExtract"`
}

// GooglePrivacyDlpV2TimePartConfigInput is an input type that accepts GooglePrivacyDlpV2TimePartConfigArgs and GooglePrivacyDlpV2TimePartConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TimePartConfigInput` via:
//
//          GooglePrivacyDlpV2TimePartConfigArgs{...}
type GooglePrivacyDlpV2TimePartConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TimePartConfigOutput() GooglePrivacyDlpV2TimePartConfigOutput
	ToGooglePrivacyDlpV2TimePartConfigOutputWithContext(context.Context) GooglePrivacyDlpV2TimePartConfigOutput
}

// For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a portion of the value.
type GooglePrivacyDlpV2TimePartConfigArgs struct {
	// The part of the time to keep.
	PartToExtract GooglePrivacyDlpV2TimePartConfigPartToExtractPtrInput `pulumi:"partToExtract"`
}

func (GooglePrivacyDlpV2TimePartConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TimePartConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TimePartConfigArgs) ToGooglePrivacyDlpV2TimePartConfigOutput() GooglePrivacyDlpV2TimePartConfigOutput {
	return i.ToGooglePrivacyDlpV2TimePartConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TimePartConfigArgs) ToGooglePrivacyDlpV2TimePartConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimePartConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TimePartConfigOutput)
}

func (i GooglePrivacyDlpV2TimePartConfigArgs) ToGooglePrivacyDlpV2TimePartConfigPtrOutput() GooglePrivacyDlpV2TimePartConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2TimePartConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TimePartConfigArgs) ToGooglePrivacyDlpV2TimePartConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimePartConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TimePartConfigOutput).ToGooglePrivacyDlpV2TimePartConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2TimePartConfigPtrInput is an input type that accepts GooglePrivacyDlpV2TimePartConfigArgs, GooglePrivacyDlpV2TimePartConfigPtr and GooglePrivacyDlpV2TimePartConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TimePartConfigPtrInput` via:
//
//          GooglePrivacyDlpV2TimePartConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2TimePartConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TimePartConfigPtrOutput() GooglePrivacyDlpV2TimePartConfigPtrOutput
	ToGooglePrivacyDlpV2TimePartConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2TimePartConfigPtrOutput
}

type googlePrivacyDlpV2TimePartConfigPtrType GooglePrivacyDlpV2TimePartConfigArgs

func GooglePrivacyDlpV2TimePartConfigPtr(v *GooglePrivacyDlpV2TimePartConfigArgs) GooglePrivacyDlpV2TimePartConfigPtrInput {
	return (*googlePrivacyDlpV2TimePartConfigPtrType)(v)
}

func (*googlePrivacyDlpV2TimePartConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TimePartConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2TimePartConfigPtrType) ToGooglePrivacyDlpV2TimePartConfigPtrOutput() GooglePrivacyDlpV2TimePartConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2TimePartConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2TimePartConfigPtrType) ToGooglePrivacyDlpV2TimePartConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimePartConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TimePartConfigPtrOutput)
}

// For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a portion of the value.
type GooglePrivacyDlpV2TimePartConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TimePartConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TimePartConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TimePartConfigOutput) ToGooglePrivacyDlpV2TimePartConfigOutput() GooglePrivacyDlpV2TimePartConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2TimePartConfigOutput) ToGooglePrivacyDlpV2TimePartConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimePartConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2TimePartConfigOutput) ToGooglePrivacyDlpV2TimePartConfigPtrOutput() GooglePrivacyDlpV2TimePartConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2TimePartConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2TimePartConfigOutput) ToGooglePrivacyDlpV2TimePartConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimePartConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2TimePartConfig) *GooglePrivacyDlpV2TimePartConfig {
		return &v
	}).(GooglePrivacyDlpV2TimePartConfigPtrOutput)
}

// The part of the time to keep.
func (o GooglePrivacyDlpV2TimePartConfigOutput) PartToExtract() GooglePrivacyDlpV2TimePartConfigPartToExtractPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TimePartConfig) *GooglePrivacyDlpV2TimePartConfigPartToExtract {
		return v.PartToExtract
	}).(GooglePrivacyDlpV2TimePartConfigPartToExtractPtrOutput)
}

type GooglePrivacyDlpV2TimePartConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TimePartConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TimePartConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TimePartConfigPtrOutput) ToGooglePrivacyDlpV2TimePartConfigPtrOutput() GooglePrivacyDlpV2TimePartConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TimePartConfigPtrOutput) ToGooglePrivacyDlpV2TimePartConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimePartConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TimePartConfigPtrOutput) Elem() GooglePrivacyDlpV2TimePartConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TimePartConfig) GooglePrivacyDlpV2TimePartConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2TimePartConfig
		return ret
	}).(GooglePrivacyDlpV2TimePartConfigOutput)
}

// The part of the time to keep.
func (o GooglePrivacyDlpV2TimePartConfigPtrOutput) PartToExtract() GooglePrivacyDlpV2TimePartConfigPartToExtractPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TimePartConfig) *GooglePrivacyDlpV2TimePartConfigPartToExtract {
		if v == nil {
			return nil
		}
		return v.PartToExtract
	}).(GooglePrivacyDlpV2TimePartConfigPartToExtractPtrOutput)
}

// For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a portion of the value.
type GooglePrivacyDlpV2TimePartConfigResponse struct {
	// The part of the time to keep.
	PartToExtract string `pulumi:"partToExtract"`
}

// GooglePrivacyDlpV2TimePartConfigResponseInput is an input type that accepts GooglePrivacyDlpV2TimePartConfigResponseArgs and GooglePrivacyDlpV2TimePartConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TimePartConfigResponseInput` via:
//
//          GooglePrivacyDlpV2TimePartConfigResponseArgs{...}
type GooglePrivacyDlpV2TimePartConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TimePartConfigResponseOutput() GooglePrivacyDlpV2TimePartConfigResponseOutput
	ToGooglePrivacyDlpV2TimePartConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2TimePartConfigResponseOutput
}

// For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a portion of the value.
type GooglePrivacyDlpV2TimePartConfigResponseArgs struct {
	// The part of the time to keep.
	PartToExtract pulumi.StringInput `pulumi:"partToExtract"`
}

func (GooglePrivacyDlpV2TimePartConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TimePartConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TimePartConfigResponseArgs) ToGooglePrivacyDlpV2TimePartConfigResponseOutput() GooglePrivacyDlpV2TimePartConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2TimePartConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TimePartConfigResponseArgs) ToGooglePrivacyDlpV2TimePartConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimePartConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TimePartConfigResponseOutput)
}

// For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a portion of the value.
type GooglePrivacyDlpV2TimePartConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TimePartConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TimePartConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TimePartConfigResponseOutput) ToGooglePrivacyDlpV2TimePartConfigResponseOutput() GooglePrivacyDlpV2TimePartConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2TimePartConfigResponseOutput) ToGooglePrivacyDlpV2TimePartConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimePartConfigResponseOutput {
	return o
}

// The part of the time to keep.
func (o GooglePrivacyDlpV2TimePartConfigResponseOutput) PartToExtract() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TimePartConfigResponse) string { return v.PartToExtract }).(pulumi.StringOutput)
}

// Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Google Cloud Storage and BigQuery.
type GooglePrivacyDlpV2TimespanConfig struct {
	// When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger.
	EnableAutoPopulationOfTimespanConfig *bool `pulumi:"enableAutoPopulationOfTimespanConfig"`
	// Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.
	EndTime *string `pulumi:"endTime"`
	// Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.
	StartTime *string `pulumi:"startTime"`
	// Specification of the field containing the timestamp of scanned items. Used for data sources like Datastore and BigQuery. For BigQuery: If this value is not specified and the table was modified between the given start and end times, the entire table will be scanned. If this value is specified, then rows are filtered based on the given start and end times. Rows with a `NULL` value in the provided BigQuery column are skipped. Valid data types of the provided BigQuery column are: `INTEGER`, `DATE`, `TIMESTAMP`, and `DATETIME`. For Datastore: If this value is specified, then entities are filtered based on the given start and end times. If an entity does not contain the provided timestamp property or contains empty or invalid values, then it is included. Valid data types of the provided timestamp property are: `TIMESTAMP`.
	TimestampField *GooglePrivacyDlpV2FieldId `pulumi:"timestampField"`
}

// GooglePrivacyDlpV2TimespanConfigInput is an input type that accepts GooglePrivacyDlpV2TimespanConfigArgs and GooglePrivacyDlpV2TimespanConfigOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TimespanConfigInput` via:
//
//          GooglePrivacyDlpV2TimespanConfigArgs{...}
type GooglePrivacyDlpV2TimespanConfigInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TimespanConfigOutput() GooglePrivacyDlpV2TimespanConfigOutput
	ToGooglePrivacyDlpV2TimespanConfigOutputWithContext(context.Context) GooglePrivacyDlpV2TimespanConfigOutput
}

// Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Google Cloud Storage and BigQuery.
type GooglePrivacyDlpV2TimespanConfigArgs struct {
	// When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger.
	EnableAutoPopulationOfTimespanConfig pulumi.BoolPtrInput `pulumi:"enableAutoPopulationOfTimespanConfig"`
	// Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// Specification of the field containing the timestamp of scanned items. Used for data sources like Datastore and BigQuery. For BigQuery: If this value is not specified and the table was modified between the given start and end times, the entire table will be scanned. If this value is specified, then rows are filtered based on the given start and end times. Rows with a `NULL` value in the provided BigQuery column are skipped. Valid data types of the provided BigQuery column are: `INTEGER`, `DATE`, `TIMESTAMP`, and `DATETIME`. For Datastore: If this value is specified, then entities are filtered based on the given start and end times. If an entity does not contain the provided timestamp property or contains empty or invalid values, then it is included. Valid data types of the provided timestamp property are: `TIMESTAMP`.
	TimestampField GooglePrivacyDlpV2FieldIdPtrInput `pulumi:"timestampField"`
}

func (GooglePrivacyDlpV2TimespanConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TimespanConfig)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TimespanConfigArgs) ToGooglePrivacyDlpV2TimespanConfigOutput() GooglePrivacyDlpV2TimespanConfigOutput {
	return i.ToGooglePrivacyDlpV2TimespanConfigOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TimespanConfigArgs) ToGooglePrivacyDlpV2TimespanConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimespanConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TimespanConfigOutput)
}

func (i GooglePrivacyDlpV2TimespanConfigArgs) ToGooglePrivacyDlpV2TimespanConfigPtrOutput() GooglePrivacyDlpV2TimespanConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2TimespanConfigPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TimespanConfigArgs) ToGooglePrivacyDlpV2TimespanConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimespanConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TimespanConfigOutput).ToGooglePrivacyDlpV2TimespanConfigPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2TimespanConfigPtrInput is an input type that accepts GooglePrivacyDlpV2TimespanConfigArgs, GooglePrivacyDlpV2TimespanConfigPtr and GooglePrivacyDlpV2TimespanConfigPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TimespanConfigPtrInput` via:
//
//          GooglePrivacyDlpV2TimespanConfigArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2TimespanConfigPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TimespanConfigPtrOutput() GooglePrivacyDlpV2TimespanConfigPtrOutput
	ToGooglePrivacyDlpV2TimespanConfigPtrOutputWithContext(context.Context) GooglePrivacyDlpV2TimespanConfigPtrOutput
}

type googlePrivacyDlpV2TimespanConfigPtrType GooglePrivacyDlpV2TimespanConfigArgs

func GooglePrivacyDlpV2TimespanConfigPtr(v *GooglePrivacyDlpV2TimespanConfigArgs) GooglePrivacyDlpV2TimespanConfigPtrInput {
	return (*googlePrivacyDlpV2TimespanConfigPtrType)(v)
}

func (*googlePrivacyDlpV2TimespanConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TimespanConfig)(nil)).Elem()
}

func (i *googlePrivacyDlpV2TimespanConfigPtrType) ToGooglePrivacyDlpV2TimespanConfigPtrOutput() GooglePrivacyDlpV2TimespanConfigPtrOutput {
	return i.ToGooglePrivacyDlpV2TimespanConfigPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2TimespanConfigPtrType) ToGooglePrivacyDlpV2TimespanConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimespanConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TimespanConfigPtrOutput)
}

// Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Google Cloud Storage and BigQuery.
type GooglePrivacyDlpV2TimespanConfigOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TimespanConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TimespanConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TimespanConfigOutput) ToGooglePrivacyDlpV2TimespanConfigOutput() GooglePrivacyDlpV2TimespanConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2TimespanConfigOutput) ToGooglePrivacyDlpV2TimespanConfigOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimespanConfigOutput {
	return o
}

func (o GooglePrivacyDlpV2TimespanConfigOutput) ToGooglePrivacyDlpV2TimespanConfigPtrOutput() GooglePrivacyDlpV2TimespanConfigPtrOutput {
	return o.ToGooglePrivacyDlpV2TimespanConfigPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2TimespanConfigOutput) ToGooglePrivacyDlpV2TimespanConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimespanConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2TimespanConfig) *GooglePrivacyDlpV2TimespanConfig {
		return &v
	}).(GooglePrivacyDlpV2TimespanConfigPtrOutput)
}

// When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger.
func (o GooglePrivacyDlpV2TimespanConfigOutput) EnableAutoPopulationOfTimespanConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TimespanConfig) *bool { return v.EnableAutoPopulationOfTimespanConfig }).(pulumi.BoolPtrOutput)
}

// Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.
func (o GooglePrivacyDlpV2TimespanConfigOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TimespanConfig) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.
func (o GooglePrivacyDlpV2TimespanConfigOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TimespanConfig) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Specification of the field containing the timestamp of scanned items. Used for data sources like Datastore and BigQuery. For BigQuery: If this value is not specified and the table was modified between the given start and end times, the entire table will be scanned. If this value is specified, then rows are filtered based on the given start and end times. Rows with a `NULL` value in the provided BigQuery column are skipped. Valid data types of the provided BigQuery column are: `INTEGER`, `DATE`, `TIMESTAMP`, and `DATETIME`. For Datastore: If this value is specified, then entities are filtered based on the given start and end times. If an entity does not contain the provided timestamp property or contains empty or invalid values, then it is included. Valid data types of the provided timestamp property are: `TIMESTAMP`.
func (o GooglePrivacyDlpV2TimespanConfigOutput) TimestampField() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TimespanConfig) *GooglePrivacyDlpV2FieldId { return v.TimestampField }).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

type GooglePrivacyDlpV2TimespanConfigPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TimespanConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TimespanConfig)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TimespanConfigPtrOutput) ToGooglePrivacyDlpV2TimespanConfigPtrOutput() GooglePrivacyDlpV2TimespanConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TimespanConfigPtrOutput) ToGooglePrivacyDlpV2TimespanConfigPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimespanConfigPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TimespanConfigPtrOutput) Elem() GooglePrivacyDlpV2TimespanConfigOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TimespanConfig) GooglePrivacyDlpV2TimespanConfig {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2TimespanConfig
		return ret
	}).(GooglePrivacyDlpV2TimespanConfigOutput)
}

// When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger.
func (o GooglePrivacyDlpV2TimespanConfigPtrOutput) EnableAutoPopulationOfTimespanConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TimespanConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutoPopulationOfTimespanConfig
	}).(pulumi.BoolPtrOutput)
}

// Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.
func (o GooglePrivacyDlpV2TimespanConfigPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TimespanConfig) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.
func (o GooglePrivacyDlpV2TimespanConfigPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TimespanConfig) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Specification of the field containing the timestamp of scanned items. Used for data sources like Datastore and BigQuery. For BigQuery: If this value is not specified and the table was modified between the given start and end times, the entire table will be scanned. If this value is specified, then rows are filtered based on the given start and end times. Rows with a `NULL` value in the provided BigQuery column are skipped. Valid data types of the provided BigQuery column are: `INTEGER`, `DATE`, `TIMESTAMP`, and `DATETIME`. For Datastore: If this value is specified, then entities are filtered based on the given start and end times. If an entity does not contain the provided timestamp property or contains empty or invalid values, then it is included. Valid data types of the provided timestamp property are: `TIMESTAMP`.
func (o GooglePrivacyDlpV2TimespanConfigPtrOutput) TimestampField() GooglePrivacyDlpV2FieldIdPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TimespanConfig) *GooglePrivacyDlpV2FieldId {
		if v == nil {
			return nil
		}
		return v.TimestampField
	}).(GooglePrivacyDlpV2FieldIdPtrOutput)
}

// Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Google Cloud Storage and BigQuery.
type GooglePrivacyDlpV2TimespanConfigResponse struct {
	// When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger.
	EnableAutoPopulationOfTimespanConfig bool `pulumi:"enableAutoPopulationOfTimespanConfig"`
	// Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.
	EndTime string `pulumi:"endTime"`
	// Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.
	StartTime string `pulumi:"startTime"`
	// Specification of the field containing the timestamp of scanned items. Used for data sources like Datastore and BigQuery. For BigQuery: If this value is not specified and the table was modified between the given start and end times, the entire table will be scanned. If this value is specified, then rows are filtered based on the given start and end times. Rows with a `NULL` value in the provided BigQuery column are skipped. Valid data types of the provided BigQuery column are: `INTEGER`, `DATE`, `TIMESTAMP`, and `DATETIME`. For Datastore: If this value is specified, then entities are filtered based on the given start and end times. If an entity does not contain the provided timestamp property or contains empty or invalid values, then it is included. Valid data types of the provided timestamp property are: `TIMESTAMP`.
	TimestampField GooglePrivacyDlpV2FieldIdResponse `pulumi:"timestampField"`
}

// GooglePrivacyDlpV2TimespanConfigResponseInput is an input type that accepts GooglePrivacyDlpV2TimespanConfigResponseArgs and GooglePrivacyDlpV2TimespanConfigResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TimespanConfigResponseInput` via:
//
//          GooglePrivacyDlpV2TimespanConfigResponseArgs{...}
type GooglePrivacyDlpV2TimespanConfigResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TimespanConfigResponseOutput() GooglePrivacyDlpV2TimespanConfigResponseOutput
	ToGooglePrivacyDlpV2TimespanConfigResponseOutputWithContext(context.Context) GooglePrivacyDlpV2TimespanConfigResponseOutput
}

// Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Google Cloud Storage and BigQuery.
type GooglePrivacyDlpV2TimespanConfigResponseArgs struct {
	// When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger.
	EnableAutoPopulationOfTimespanConfig pulumi.BoolInput `pulumi:"enableAutoPopulationOfTimespanConfig"`
	// Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Specification of the field containing the timestamp of scanned items. Used for data sources like Datastore and BigQuery. For BigQuery: If this value is not specified and the table was modified between the given start and end times, the entire table will be scanned. If this value is specified, then rows are filtered based on the given start and end times. Rows with a `NULL` value in the provided BigQuery column are skipped. Valid data types of the provided BigQuery column are: `INTEGER`, `DATE`, `TIMESTAMP`, and `DATETIME`. For Datastore: If this value is specified, then entities are filtered based on the given start and end times. If an entity does not contain the provided timestamp property or contains empty or invalid values, then it is included. Valid data types of the provided timestamp property are: `TIMESTAMP`.
	TimestampField GooglePrivacyDlpV2FieldIdResponseInput `pulumi:"timestampField"`
}

func (GooglePrivacyDlpV2TimespanConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TimespanConfigResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TimespanConfigResponseArgs) ToGooglePrivacyDlpV2TimespanConfigResponseOutput() GooglePrivacyDlpV2TimespanConfigResponseOutput {
	return i.ToGooglePrivacyDlpV2TimespanConfigResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TimespanConfigResponseArgs) ToGooglePrivacyDlpV2TimespanConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimespanConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TimespanConfigResponseOutput)
}

func (i GooglePrivacyDlpV2TimespanConfigResponseArgs) ToGooglePrivacyDlpV2TimespanConfigResponsePtrOutput() GooglePrivacyDlpV2TimespanConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2TimespanConfigResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TimespanConfigResponseArgs) ToGooglePrivacyDlpV2TimespanConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimespanConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TimespanConfigResponseOutput).ToGooglePrivacyDlpV2TimespanConfigResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2TimespanConfigResponsePtrInput is an input type that accepts GooglePrivacyDlpV2TimespanConfigResponseArgs, GooglePrivacyDlpV2TimespanConfigResponsePtr and GooglePrivacyDlpV2TimespanConfigResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TimespanConfigResponsePtrInput` via:
//
//          GooglePrivacyDlpV2TimespanConfigResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2TimespanConfigResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TimespanConfigResponsePtrOutput() GooglePrivacyDlpV2TimespanConfigResponsePtrOutput
	ToGooglePrivacyDlpV2TimespanConfigResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2TimespanConfigResponsePtrOutput
}

type googlePrivacyDlpV2TimespanConfigResponsePtrType GooglePrivacyDlpV2TimespanConfigResponseArgs

func GooglePrivacyDlpV2TimespanConfigResponsePtr(v *GooglePrivacyDlpV2TimespanConfigResponseArgs) GooglePrivacyDlpV2TimespanConfigResponsePtrInput {
	return (*googlePrivacyDlpV2TimespanConfigResponsePtrType)(v)
}

func (*googlePrivacyDlpV2TimespanConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TimespanConfigResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2TimespanConfigResponsePtrType) ToGooglePrivacyDlpV2TimespanConfigResponsePtrOutput() GooglePrivacyDlpV2TimespanConfigResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2TimespanConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2TimespanConfigResponsePtrType) ToGooglePrivacyDlpV2TimespanConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimespanConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TimespanConfigResponsePtrOutput)
}

// Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Google Cloud Storage and BigQuery.
type GooglePrivacyDlpV2TimespanConfigResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TimespanConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TimespanConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TimespanConfigResponseOutput) ToGooglePrivacyDlpV2TimespanConfigResponseOutput() GooglePrivacyDlpV2TimespanConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2TimespanConfigResponseOutput) ToGooglePrivacyDlpV2TimespanConfigResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimespanConfigResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2TimespanConfigResponseOutput) ToGooglePrivacyDlpV2TimespanConfigResponsePtrOutput() GooglePrivacyDlpV2TimespanConfigResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2TimespanConfigResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2TimespanConfigResponseOutput) ToGooglePrivacyDlpV2TimespanConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimespanConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2TimespanConfigResponse) *GooglePrivacyDlpV2TimespanConfigResponse {
		return &v
	}).(GooglePrivacyDlpV2TimespanConfigResponsePtrOutput)
}

// When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger.
func (o GooglePrivacyDlpV2TimespanConfigResponseOutput) EnableAutoPopulationOfTimespanConfig() pulumi.BoolOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TimespanConfigResponse) bool { return v.EnableAutoPopulationOfTimespanConfig }).(pulumi.BoolOutput)
}

// Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.
func (o GooglePrivacyDlpV2TimespanConfigResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TimespanConfigResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.
func (o GooglePrivacyDlpV2TimespanConfigResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TimespanConfigResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Specification of the field containing the timestamp of scanned items. Used for data sources like Datastore and BigQuery. For BigQuery: If this value is not specified and the table was modified between the given start and end times, the entire table will be scanned. If this value is specified, then rows are filtered based on the given start and end times. Rows with a `NULL` value in the provided BigQuery column are skipped. Valid data types of the provided BigQuery column are: `INTEGER`, `DATE`, `TIMESTAMP`, and `DATETIME`. For Datastore: If this value is specified, then entities are filtered based on the given start and end times. If an entity does not contain the provided timestamp property or contains empty or invalid values, then it is included. Valid data types of the provided timestamp property are: `TIMESTAMP`.
func (o GooglePrivacyDlpV2TimespanConfigResponseOutput) TimestampField() GooglePrivacyDlpV2FieldIdResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TimespanConfigResponse) GooglePrivacyDlpV2FieldIdResponse {
		return v.TimestampField
	}).(GooglePrivacyDlpV2FieldIdResponseOutput)
}

type GooglePrivacyDlpV2TimespanConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TimespanConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TimespanConfigResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TimespanConfigResponsePtrOutput) ToGooglePrivacyDlpV2TimespanConfigResponsePtrOutput() GooglePrivacyDlpV2TimespanConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TimespanConfigResponsePtrOutput) ToGooglePrivacyDlpV2TimespanConfigResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TimespanConfigResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TimespanConfigResponsePtrOutput) Elem() GooglePrivacyDlpV2TimespanConfigResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TimespanConfigResponse) GooglePrivacyDlpV2TimespanConfigResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2TimespanConfigResponse
		return ret
	}).(GooglePrivacyDlpV2TimespanConfigResponseOutput)
}

// When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger.
func (o GooglePrivacyDlpV2TimespanConfigResponsePtrOutput) EnableAutoPopulationOfTimespanConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TimespanConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableAutoPopulationOfTimespanConfig
	}).(pulumi.BoolPtrOutput)
}

// Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.
func (o GooglePrivacyDlpV2TimespanConfigResponsePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TimespanConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.
func (o GooglePrivacyDlpV2TimespanConfigResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TimespanConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Specification of the field containing the timestamp of scanned items. Used for data sources like Datastore and BigQuery. For BigQuery: If this value is not specified and the table was modified between the given start and end times, the entire table will be scanned. If this value is specified, then rows are filtered based on the given start and end times. Rows with a `NULL` value in the provided BigQuery column are skipped. Valid data types of the provided BigQuery column are: `INTEGER`, `DATE`, `TIMESTAMP`, and `DATETIME`. For Datastore: If this value is specified, then entities are filtered based on the given start and end times. If an entity does not contain the provided timestamp property or contains empty or invalid values, then it is included. Valid data types of the provided timestamp property are: `TIMESTAMP`.
func (o GooglePrivacyDlpV2TimespanConfigResponsePtrOutput) TimestampField() GooglePrivacyDlpV2FieldIdResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TimespanConfigResponse) *GooglePrivacyDlpV2FieldIdResponse {
		if v == nil {
			return nil
		}
		return &v.TimestampField
	}).(GooglePrivacyDlpV2FieldIdResponsePtrOutput)
}

// How to handle transformation errors during de-identification. A transformation error occurs when the requested transformation is incompatible with the data. For example, trying to de-identify an IP address using a `DateShift` transformation would result in a transformation error, since date info cannot be extracted from an IP address. Information about any incompatible transformations, and how they were handled, is returned in the response as part of the `TransformationOverviews`.
type GooglePrivacyDlpV2TransformationErrorHandling struct {
	// Ignore errors
	LeaveUntransformed *GooglePrivacyDlpV2LeaveUntransformed `pulumi:"leaveUntransformed"`
	// Throw an error
	ThrowError *GooglePrivacyDlpV2ThrowError `pulumi:"throwError"`
}

// GooglePrivacyDlpV2TransformationErrorHandlingInput is an input type that accepts GooglePrivacyDlpV2TransformationErrorHandlingArgs and GooglePrivacyDlpV2TransformationErrorHandlingOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TransformationErrorHandlingInput` via:
//
//          GooglePrivacyDlpV2TransformationErrorHandlingArgs{...}
type GooglePrivacyDlpV2TransformationErrorHandlingInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TransformationErrorHandlingOutput() GooglePrivacyDlpV2TransformationErrorHandlingOutput
	ToGooglePrivacyDlpV2TransformationErrorHandlingOutputWithContext(context.Context) GooglePrivacyDlpV2TransformationErrorHandlingOutput
}

// How to handle transformation errors during de-identification. A transformation error occurs when the requested transformation is incompatible with the data. For example, trying to de-identify an IP address using a `DateShift` transformation would result in a transformation error, since date info cannot be extracted from an IP address. Information about any incompatible transformations, and how they were handled, is returned in the response as part of the `TransformationOverviews`.
type GooglePrivacyDlpV2TransformationErrorHandlingArgs struct {
	// Ignore errors
	LeaveUntransformed GooglePrivacyDlpV2LeaveUntransformedPtrInput `pulumi:"leaveUntransformed"`
	// Throw an error
	ThrowError GooglePrivacyDlpV2ThrowErrorPtrInput `pulumi:"throwError"`
}

func (GooglePrivacyDlpV2TransformationErrorHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TransformationErrorHandling)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TransformationErrorHandlingArgs) ToGooglePrivacyDlpV2TransformationErrorHandlingOutput() GooglePrivacyDlpV2TransformationErrorHandlingOutput {
	return i.ToGooglePrivacyDlpV2TransformationErrorHandlingOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TransformationErrorHandlingArgs) ToGooglePrivacyDlpV2TransformationErrorHandlingOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransformationErrorHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TransformationErrorHandlingOutput)
}

func (i GooglePrivacyDlpV2TransformationErrorHandlingArgs) ToGooglePrivacyDlpV2TransformationErrorHandlingPtrOutput() GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput {
	return i.ToGooglePrivacyDlpV2TransformationErrorHandlingPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TransformationErrorHandlingArgs) ToGooglePrivacyDlpV2TransformationErrorHandlingPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TransformationErrorHandlingOutput).ToGooglePrivacyDlpV2TransformationErrorHandlingPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2TransformationErrorHandlingPtrInput is an input type that accepts GooglePrivacyDlpV2TransformationErrorHandlingArgs, GooglePrivacyDlpV2TransformationErrorHandlingPtr and GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TransformationErrorHandlingPtrInput` via:
//
//          GooglePrivacyDlpV2TransformationErrorHandlingArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2TransformationErrorHandlingPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TransformationErrorHandlingPtrOutput() GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput
	ToGooglePrivacyDlpV2TransformationErrorHandlingPtrOutputWithContext(context.Context) GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput
}

type googlePrivacyDlpV2TransformationErrorHandlingPtrType GooglePrivacyDlpV2TransformationErrorHandlingArgs

func GooglePrivacyDlpV2TransformationErrorHandlingPtr(v *GooglePrivacyDlpV2TransformationErrorHandlingArgs) GooglePrivacyDlpV2TransformationErrorHandlingPtrInput {
	return (*googlePrivacyDlpV2TransformationErrorHandlingPtrType)(v)
}

func (*googlePrivacyDlpV2TransformationErrorHandlingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TransformationErrorHandling)(nil)).Elem()
}

func (i *googlePrivacyDlpV2TransformationErrorHandlingPtrType) ToGooglePrivacyDlpV2TransformationErrorHandlingPtrOutput() GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput {
	return i.ToGooglePrivacyDlpV2TransformationErrorHandlingPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2TransformationErrorHandlingPtrType) ToGooglePrivacyDlpV2TransformationErrorHandlingPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput)
}

// How to handle transformation errors during de-identification. A transformation error occurs when the requested transformation is incompatible with the data. For example, trying to de-identify an IP address using a `DateShift` transformation would result in a transformation error, since date info cannot be extracted from an IP address. Information about any incompatible transformations, and how they were handled, is returned in the response as part of the `TransformationOverviews`.
type GooglePrivacyDlpV2TransformationErrorHandlingOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TransformationErrorHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TransformationErrorHandling)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TransformationErrorHandlingOutput) ToGooglePrivacyDlpV2TransformationErrorHandlingOutput() GooglePrivacyDlpV2TransformationErrorHandlingOutput {
	return o
}

func (o GooglePrivacyDlpV2TransformationErrorHandlingOutput) ToGooglePrivacyDlpV2TransformationErrorHandlingOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransformationErrorHandlingOutput {
	return o
}

func (o GooglePrivacyDlpV2TransformationErrorHandlingOutput) ToGooglePrivacyDlpV2TransformationErrorHandlingPtrOutput() GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput {
	return o.ToGooglePrivacyDlpV2TransformationErrorHandlingPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2TransformationErrorHandlingOutput) ToGooglePrivacyDlpV2TransformationErrorHandlingPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2TransformationErrorHandling) *GooglePrivacyDlpV2TransformationErrorHandling {
		return &v
	}).(GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput)
}

// Ignore errors
func (o GooglePrivacyDlpV2TransformationErrorHandlingOutput) LeaveUntransformed() GooglePrivacyDlpV2LeaveUntransformedPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TransformationErrorHandling) *GooglePrivacyDlpV2LeaveUntransformed {
		return v.LeaveUntransformed
	}).(GooglePrivacyDlpV2LeaveUntransformedPtrOutput)
}

// Throw an error
func (o GooglePrivacyDlpV2TransformationErrorHandlingOutput) ThrowError() GooglePrivacyDlpV2ThrowErrorPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TransformationErrorHandling) *GooglePrivacyDlpV2ThrowError {
		return v.ThrowError
	}).(GooglePrivacyDlpV2ThrowErrorPtrOutput)
}

type GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TransformationErrorHandling)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput) ToGooglePrivacyDlpV2TransformationErrorHandlingPtrOutput() GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput) ToGooglePrivacyDlpV2TransformationErrorHandlingPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput) Elem() GooglePrivacyDlpV2TransformationErrorHandlingOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TransformationErrorHandling) GooglePrivacyDlpV2TransformationErrorHandling {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2TransformationErrorHandling
		return ret
	}).(GooglePrivacyDlpV2TransformationErrorHandlingOutput)
}

// Ignore errors
func (o GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput) LeaveUntransformed() GooglePrivacyDlpV2LeaveUntransformedPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TransformationErrorHandling) *GooglePrivacyDlpV2LeaveUntransformed {
		if v == nil {
			return nil
		}
		return v.LeaveUntransformed
	}).(GooglePrivacyDlpV2LeaveUntransformedPtrOutput)
}

// Throw an error
func (o GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput) ThrowError() GooglePrivacyDlpV2ThrowErrorPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TransformationErrorHandling) *GooglePrivacyDlpV2ThrowError {
		if v == nil {
			return nil
		}
		return v.ThrowError
	}).(GooglePrivacyDlpV2ThrowErrorPtrOutput)
}

// How to handle transformation errors during de-identification. A transformation error occurs when the requested transformation is incompatible with the data. For example, trying to de-identify an IP address using a `DateShift` transformation would result in a transformation error, since date info cannot be extracted from an IP address. Information about any incompatible transformations, and how they were handled, is returned in the response as part of the `TransformationOverviews`.
type GooglePrivacyDlpV2TransformationErrorHandlingResponse struct {
	// Ignore errors
	LeaveUntransformed GooglePrivacyDlpV2LeaveUntransformedResponse `pulumi:"leaveUntransformed"`
	// Throw an error
	ThrowError GooglePrivacyDlpV2ThrowErrorResponse `pulumi:"throwError"`
}

// GooglePrivacyDlpV2TransformationErrorHandlingResponseInput is an input type that accepts GooglePrivacyDlpV2TransformationErrorHandlingResponseArgs and GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TransformationErrorHandlingResponseInput` via:
//
//          GooglePrivacyDlpV2TransformationErrorHandlingResponseArgs{...}
type GooglePrivacyDlpV2TransformationErrorHandlingResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TransformationErrorHandlingResponseOutput() GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput
	ToGooglePrivacyDlpV2TransformationErrorHandlingResponseOutputWithContext(context.Context) GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput
}

// How to handle transformation errors during de-identification. A transformation error occurs when the requested transformation is incompatible with the data. For example, trying to de-identify an IP address using a `DateShift` transformation would result in a transformation error, since date info cannot be extracted from an IP address. Information about any incompatible transformations, and how they were handled, is returned in the response as part of the `TransformationOverviews`.
type GooglePrivacyDlpV2TransformationErrorHandlingResponseArgs struct {
	// Ignore errors
	LeaveUntransformed GooglePrivacyDlpV2LeaveUntransformedResponseInput `pulumi:"leaveUntransformed"`
	// Throw an error
	ThrowError GooglePrivacyDlpV2ThrowErrorResponseInput `pulumi:"throwError"`
}

func (GooglePrivacyDlpV2TransformationErrorHandlingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TransformationErrorHandlingResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TransformationErrorHandlingResponseArgs) ToGooglePrivacyDlpV2TransformationErrorHandlingResponseOutput() GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput {
	return i.ToGooglePrivacyDlpV2TransformationErrorHandlingResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TransformationErrorHandlingResponseArgs) ToGooglePrivacyDlpV2TransformationErrorHandlingResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput)
}

func (i GooglePrivacyDlpV2TransformationErrorHandlingResponseArgs) ToGooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput() GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TransformationErrorHandlingResponseArgs) ToGooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput).ToGooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrInput is an input type that accepts GooglePrivacyDlpV2TransformationErrorHandlingResponseArgs, GooglePrivacyDlpV2TransformationErrorHandlingResponsePtr and GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrInput` via:
//
//          GooglePrivacyDlpV2TransformationErrorHandlingResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput() GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput
	ToGooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput
}

type googlePrivacyDlpV2TransformationErrorHandlingResponsePtrType GooglePrivacyDlpV2TransformationErrorHandlingResponseArgs

func GooglePrivacyDlpV2TransformationErrorHandlingResponsePtr(v *GooglePrivacyDlpV2TransformationErrorHandlingResponseArgs) GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrInput {
	return (*googlePrivacyDlpV2TransformationErrorHandlingResponsePtrType)(v)
}

func (*googlePrivacyDlpV2TransformationErrorHandlingResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TransformationErrorHandlingResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2TransformationErrorHandlingResponsePtrType) ToGooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput() GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2TransformationErrorHandlingResponsePtrType) ToGooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput)
}

// How to handle transformation errors during de-identification. A transformation error occurs when the requested transformation is incompatible with the data. For example, trying to de-identify an IP address using a `DateShift` transformation would result in a transformation error, since date info cannot be extracted from an IP address. Information about any incompatible transformations, and how they were handled, is returned in the response as part of the `TransformationOverviews`.
type GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TransformationErrorHandlingResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput) ToGooglePrivacyDlpV2TransformationErrorHandlingResponseOutput() GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput) ToGooglePrivacyDlpV2TransformationErrorHandlingResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput) ToGooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput() GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput) ToGooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2TransformationErrorHandlingResponse) *GooglePrivacyDlpV2TransformationErrorHandlingResponse {
		return &v
	}).(GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput)
}

// Ignore errors
func (o GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput) LeaveUntransformed() GooglePrivacyDlpV2LeaveUntransformedResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TransformationErrorHandlingResponse) GooglePrivacyDlpV2LeaveUntransformedResponse {
		return v.LeaveUntransformed
	}).(GooglePrivacyDlpV2LeaveUntransformedResponseOutput)
}

// Throw an error
func (o GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput) ThrowError() GooglePrivacyDlpV2ThrowErrorResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TransformationErrorHandlingResponse) GooglePrivacyDlpV2ThrowErrorResponse {
		return v.ThrowError
	}).(GooglePrivacyDlpV2ThrowErrorResponseOutput)
}

type GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TransformationErrorHandlingResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput) ToGooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput() GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput) ToGooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput) Elem() GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TransformationErrorHandlingResponse) GooglePrivacyDlpV2TransformationErrorHandlingResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2TransformationErrorHandlingResponse
		return ret
	}).(GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput)
}

// Ignore errors
func (o GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput) LeaveUntransformed() GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TransformationErrorHandlingResponse) *GooglePrivacyDlpV2LeaveUntransformedResponse {
		if v == nil {
			return nil
		}
		return &v.LeaveUntransformed
	}).(GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput)
}

// Throw an error
func (o GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput) ThrowError() GooglePrivacyDlpV2ThrowErrorResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TransformationErrorHandlingResponse) *GooglePrivacyDlpV2ThrowErrorResponse {
		if v == nil {
			return nil
		}
		return &v.ThrowError
	}).(GooglePrivacyDlpV2ThrowErrorResponsePtrOutput)
}

// Use this to have a random data crypto key generated. It will be discarded after the request finishes.
type GooglePrivacyDlpV2TransientCryptoKey struct {
	// Name of the key. This is an arbitrary string used to differentiate different keys. A unique key is generated per name: two separate `TransientCryptoKey` protos share the same generated key if their names are the same. When the data crypto key is generated, this name is not used in any way (repeating the api call will result in a different key being generated).
	Name string `pulumi:"name"`
}

// GooglePrivacyDlpV2TransientCryptoKeyInput is an input type that accepts GooglePrivacyDlpV2TransientCryptoKeyArgs and GooglePrivacyDlpV2TransientCryptoKeyOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TransientCryptoKeyInput` via:
//
//          GooglePrivacyDlpV2TransientCryptoKeyArgs{...}
type GooglePrivacyDlpV2TransientCryptoKeyInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TransientCryptoKeyOutput() GooglePrivacyDlpV2TransientCryptoKeyOutput
	ToGooglePrivacyDlpV2TransientCryptoKeyOutputWithContext(context.Context) GooglePrivacyDlpV2TransientCryptoKeyOutput
}

// Use this to have a random data crypto key generated. It will be discarded after the request finishes.
type GooglePrivacyDlpV2TransientCryptoKeyArgs struct {
	// Name of the key. This is an arbitrary string used to differentiate different keys. A unique key is generated per name: two separate `TransientCryptoKey` protos share the same generated key if their names are the same. When the data crypto key is generated, this name is not used in any way (repeating the api call will result in a different key being generated).
	Name pulumi.StringInput `pulumi:"name"`
}

func (GooglePrivacyDlpV2TransientCryptoKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TransientCryptoKey)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TransientCryptoKeyArgs) ToGooglePrivacyDlpV2TransientCryptoKeyOutput() GooglePrivacyDlpV2TransientCryptoKeyOutput {
	return i.ToGooglePrivacyDlpV2TransientCryptoKeyOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TransientCryptoKeyArgs) ToGooglePrivacyDlpV2TransientCryptoKeyOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransientCryptoKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TransientCryptoKeyOutput)
}

func (i GooglePrivacyDlpV2TransientCryptoKeyArgs) ToGooglePrivacyDlpV2TransientCryptoKeyPtrOutput() GooglePrivacyDlpV2TransientCryptoKeyPtrOutput {
	return i.ToGooglePrivacyDlpV2TransientCryptoKeyPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TransientCryptoKeyArgs) ToGooglePrivacyDlpV2TransientCryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransientCryptoKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TransientCryptoKeyOutput).ToGooglePrivacyDlpV2TransientCryptoKeyPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2TransientCryptoKeyPtrInput is an input type that accepts GooglePrivacyDlpV2TransientCryptoKeyArgs, GooglePrivacyDlpV2TransientCryptoKeyPtr and GooglePrivacyDlpV2TransientCryptoKeyPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TransientCryptoKeyPtrInput` via:
//
//          GooglePrivacyDlpV2TransientCryptoKeyArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2TransientCryptoKeyPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TransientCryptoKeyPtrOutput() GooglePrivacyDlpV2TransientCryptoKeyPtrOutput
	ToGooglePrivacyDlpV2TransientCryptoKeyPtrOutputWithContext(context.Context) GooglePrivacyDlpV2TransientCryptoKeyPtrOutput
}

type googlePrivacyDlpV2TransientCryptoKeyPtrType GooglePrivacyDlpV2TransientCryptoKeyArgs

func GooglePrivacyDlpV2TransientCryptoKeyPtr(v *GooglePrivacyDlpV2TransientCryptoKeyArgs) GooglePrivacyDlpV2TransientCryptoKeyPtrInput {
	return (*googlePrivacyDlpV2TransientCryptoKeyPtrType)(v)
}

func (*googlePrivacyDlpV2TransientCryptoKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TransientCryptoKey)(nil)).Elem()
}

func (i *googlePrivacyDlpV2TransientCryptoKeyPtrType) ToGooglePrivacyDlpV2TransientCryptoKeyPtrOutput() GooglePrivacyDlpV2TransientCryptoKeyPtrOutput {
	return i.ToGooglePrivacyDlpV2TransientCryptoKeyPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2TransientCryptoKeyPtrType) ToGooglePrivacyDlpV2TransientCryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransientCryptoKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TransientCryptoKeyPtrOutput)
}

// Use this to have a random data crypto key generated. It will be discarded after the request finishes.
type GooglePrivacyDlpV2TransientCryptoKeyOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TransientCryptoKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TransientCryptoKey)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TransientCryptoKeyOutput) ToGooglePrivacyDlpV2TransientCryptoKeyOutput() GooglePrivacyDlpV2TransientCryptoKeyOutput {
	return o
}

func (o GooglePrivacyDlpV2TransientCryptoKeyOutput) ToGooglePrivacyDlpV2TransientCryptoKeyOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransientCryptoKeyOutput {
	return o
}

func (o GooglePrivacyDlpV2TransientCryptoKeyOutput) ToGooglePrivacyDlpV2TransientCryptoKeyPtrOutput() GooglePrivacyDlpV2TransientCryptoKeyPtrOutput {
	return o.ToGooglePrivacyDlpV2TransientCryptoKeyPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2TransientCryptoKeyOutput) ToGooglePrivacyDlpV2TransientCryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransientCryptoKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2TransientCryptoKey) *GooglePrivacyDlpV2TransientCryptoKey {
		return &v
	}).(GooglePrivacyDlpV2TransientCryptoKeyPtrOutput)
}

// Name of the key. This is an arbitrary string used to differentiate different keys. A unique key is generated per name: two separate `TransientCryptoKey` protos share the same generated key if their names are the same. When the data crypto key is generated, this name is not used in any way (repeating the api call will result in a different key being generated).
func (o GooglePrivacyDlpV2TransientCryptoKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TransientCryptoKey) string { return v.Name }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2TransientCryptoKeyPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TransientCryptoKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2TransientCryptoKey)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TransientCryptoKeyPtrOutput) ToGooglePrivacyDlpV2TransientCryptoKeyPtrOutput() GooglePrivacyDlpV2TransientCryptoKeyPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TransientCryptoKeyPtrOutput) ToGooglePrivacyDlpV2TransientCryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransientCryptoKeyPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2TransientCryptoKeyPtrOutput) Elem() GooglePrivacyDlpV2TransientCryptoKeyOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TransientCryptoKey) GooglePrivacyDlpV2TransientCryptoKey {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2TransientCryptoKey
		return ret
	}).(GooglePrivacyDlpV2TransientCryptoKeyOutput)
}

// Name of the key. This is an arbitrary string used to differentiate different keys. A unique key is generated per name: two separate `TransientCryptoKey` protos share the same generated key if their names are the same. When the data crypto key is generated, this name is not used in any way (repeating the api call will result in a different key being generated).
func (o GooglePrivacyDlpV2TransientCryptoKeyPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2TransientCryptoKey) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use this to have a random data crypto key generated. It will be discarded after the request finishes.
type GooglePrivacyDlpV2TransientCryptoKeyResponse struct {
	// Name of the key. This is an arbitrary string used to differentiate different keys. A unique key is generated per name: two separate `TransientCryptoKey` protos share the same generated key if their names are the same. When the data crypto key is generated, this name is not used in any way (repeating the api call will result in a different key being generated).
	Name string `pulumi:"name"`
}

// GooglePrivacyDlpV2TransientCryptoKeyResponseInput is an input type that accepts GooglePrivacyDlpV2TransientCryptoKeyResponseArgs and GooglePrivacyDlpV2TransientCryptoKeyResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TransientCryptoKeyResponseInput` via:
//
//          GooglePrivacyDlpV2TransientCryptoKeyResponseArgs{...}
type GooglePrivacyDlpV2TransientCryptoKeyResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TransientCryptoKeyResponseOutput() GooglePrivacyDlpV2TransientCryptoKeyResponseOutput
	ToGooglePrivacyDlpV2TransientCryptoKeyResponseOutputWithContext(context.Context) GooglePrivacyDlpV2TransientCryptoKeyResponseOutput
}

// Use this to have a random data crypto key generated. It will be discarded after the request finishes.
type GooglePrivacyDlpV2TransientCryptoKeyResponseArgs struct {
	// Name of the key. This is an arbitrary string used to differentiate different keys. A unique key is generated per name: two separate `TransientCryptoKey` protos share the same generated key if their names are the same. When the data crypto key is generated, this name is not used in any way (repeating the api call will result in a different key being generated).
	Name pulumi.StringInput `pulumi:"name"`
}

func (GooglePrivacyDlpV2TransientCryptoKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TransientCryptoKeyResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TransientCryptoKeyResponseArgs) ToGooglePrivacyDlpV2TransientCryptoKeyResponseOutput() GooglePrivacyDlpV2TransientCryptoKeyResponseOutput {
	return i.ToGooglePrivacyDlpV2TransientCryptoKeyResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TransientCryptoKeyResponseArgs) ToGooglePrivacyDlpV2TransientCryptoKeyResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransientCryptoKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TransientCryptoKeyResponseOutput)
}

// Use this to have a random data crypto key generated. It will be discarded after the request finishes.
type GooglePrivacyDlpV2TransientCryptoKeyResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TransientCryptoKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TransientCryptoKeyResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TransientCryptoKeyResponseOutput) ToGooglePrivacyDlpV2TransientCryptoKeyResponseOutput() GooglePrivacyDlpV2TransientCryptoKeyResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2TransientCryptoKeyResponseOutput) ToGooglePrivacyDlpV2TransientCryptoKeyResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TransientCryptoKeyResponseOutput {
	return o
}

// Name of the key. This is an arbitrary string used to differentiate different keys. A unique key is generated per name: two separate `TransientCryptoKey` protos share the same generated key if their names are the same. When the data crypto key is generated, this name is not used in any way (repeating the api call will result in a different key being generated).
func (o GooglePrivacyDlpV2TransientCryptoKeyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TransientCryptoKeyResponse) string { return v.Name }).(pulumi.StringOutput)
}

// What event needs to occur for a new job to be started.
type GooglePrivacyDlpV2Trigger struct {
	// For use with hybrid jobs. Jobs must be manually created and finished.
	Manual *GooglePrivacyDlpV2Manual `pulumi:"manual"`
	// Create a job on a repeating basis based on the elapse of time.
	Schedule *GooglePrivacyDlpV2Schedule `pulumi:"schedule"`
}

// GooglePrivacyDlpV2TriggerInput is an input type that accepts GooglePrivacyDlpV2TriggerArgs and GooglePrivacyDlpV2TriggerOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TriggerInput` via:
//
//          GooglePrivacyDlpV2TriggerArgs{...}
type GooglePrivacyDlpV2TriggerInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TriggerOutput() GooglePrivacyDlpV2TriggerOutput
	ToGooglePrivacyDlpV2TriggerOutputWithContext(context.Context) GooglePrivacyDlpV2TriggerOutput
}

// What event needs to occur for a new job to be started.
type GooglePrivacyDlpV2TriggerArgs struct {
	// For use with hybrid jobs. Jobs must be manually created and finished.
	Manual GooglePrivacyDlpV2ManualPtrInput `pulumi:"manual"`
	// Create a job on a repeating basis based on the elapse of time.
	Schedule GooglePrivacyDlpV2SchedulePtrInput `pulumi:"schedule"`
}

func (GooglePrivacyDlpV2TriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Trigger)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TriggerArgs) ToGooglePrivacyDlpV2TriggerOutput() GooglePrivacyDlpV2TriggerOutput {
	return i.ToGooglePrivacyDlpV2TriggerOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TriggerArgs) ToGooglePrivacyDlpV2TriggerOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TriggerOutput)
}

// GooglePrivacyDlpV2TriggerArrayInput is an input type that accepts GooglePrivacyDlpV2TriggerArray and GooglePrivacyDlpV2TriggerArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TriggerArrayInput` via:
//
//          GooglePrivacyDlpV2TriggerArray{ GooglePrivacyDlpV2TriggerArgs{...} }
type GooglePrivacyDlpV2TriggerArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TriggerArrayOutput() GooglePrivacyDlpV2TriggerArrayOutput
	ToGooglePrivacyDlpV2TriggerArrayOutputWithContext(context.Context) GooglePrivacyDlpV2TriggerArrayOutput
}

type GooglePrivacyDlpV2TriggerArray []GooglePrivacyDlpV2TriggerInput

func (GooglePrivacyDlpV2TriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2Trigger)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TriggerArray) ToGooglePrivacyDlpV2TriggerArrayOutput() GooglePrivacyDlpV2TriggerArrayOutput {
	return i.ToGooglePrivacyDlpV2TriggerArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TriggerArray) ToGooglePrivacyDlpV2TriggerArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TriggerArrayOutput)
}

// What event needs to occur for a new job to be started.
type GooglePrivacyDlpV2TriggerOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Trigger)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TriggerOutput) ToGooglePrivacyDlpV2TriggerOutput() GooglePrivacyDlpV2TriggerOutput {
	return o
}

func (o GooglePrivacyDlpV2TriggerOutput) ToGooglePrivacyDlpV2TriggerOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TriggerOutput {
	return o
}

// For use with hybrid jobs. Jobs must be manually created and finished.
func (o GooglePrivacyDlpV2TriggerOutput) Manual() GooglePrivacyDlpV2ManualPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Trigger) *GooglePrivacyDlpV2Manual { return v.Manual }).(GooglePrivacyDlpV2ManualPtrOutput)
}

// Create a job on a repeating basis based on the elapse of time.
func (o GooglePrivacyDlpV2TriggerOutput) Schedule() GooglePrivacyDlpV2SchedulePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Trigger) *GooglePrivacyDlpV2Schedule { return v.Schedule }).(GooglePrivacyDlpV2SchedulePtrOutput)
}

type GooglePrivacyDlpV2TriggerArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2Trigger)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TriggerArrayOutput) ToGooglePrivacyDlpV2TriggerArrayOutput() GooglePrivacyDlpV2TriggerArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2TriggerArrayOutput) ToGooglePrivacyDlpV2TriggerArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TriggerArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2TriggerArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2TriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2Trigger {
		return vs[0].([]GooglePrivacyDlpV2Trigger)[vs[1].(int)]
	}).(GooglePrivacyDlpV2TriggerOutput)
}

// What event needs to occur for a new job to be started.
type GooglePrivacyDlpV2TriggerResponse struct {
	// For use with hybrid jobs. Jobs must be manually created and finished.
	Manual GooglePrivacyDlpV2ManualResponse `pulumi:"manual"`
	// Create a job on a repeating basis based on the elapse of time.
	Schedule GooglePrivacyDlpV2ScheduleResponse `pulumi:"schedule"`
}

// GooglePrivacyDlpV2TriggerResponseInput is an input type that accepts GooglePrivacyDlpV2TriggerResponseArgs and GooglePrivacyDlpV2TriggerResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TriggerResponseInput` via:
//
//          GooglePrivacyDlpV2TriggerResponseArgs{...}
type GooglePrivacyDlpV2TriggerResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TriggerResponseOutput() GooglePrivacyDlpV2TriggerResponseOutput
	ToGooglePrivacyDlpV2TriggerResponseOutputWithContext(context.Context) GooglePrivacyDlpV2TriggerResponseOutput
}

// What event needs to occur for a new job to be started.
type GooglePrivacyDlpV2TriggerResponseArgs struct {
	// For use with hybrid jobs. Jobs must be manually created and finished.
	Manual GooglePrivacyDlpV2ManualResponseInput `pulumi:"manual"`
	// Create a job on a repeating basis based on the elapse of time.
	Schedule GooglePrivacyDlpV2ScheduleResponseInput `pulumi:"schedule"`
}

func (GooglePrivacyDlpV2TriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TriggerResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TriggerResponseArgs) ToGooglePrivacyDlpV2TriggerResponseOutput() GooglePrivacyDlpV2TriggerResponseOutput {
	return i.ToGooglePrivacyDlpV2TriggerResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TriggerResponseArgs) ToGooglePrivacyDlpV2TriggerResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TriggerResponseOutput)
}

// GooglePrivacyDlpV2TriggerResponseArrayInput is an input type that accepts GooglePrivacyDlpV2TriggerResponseArray and GooglePrivacyDlpV2TriggerResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2TriggerResponseArrayInput` via:
//
//          GooglePrivacyDlpV2TriggerResponseArray{ GooglePrivacyDlpV2TriggerResponseArgs{...} }
type GooglePrivacyDlpV2TriggerResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2TriggerResponseArrayOutput() GooglePrivacyDlpV2TriggerResponseArrayOutput
	ToGooglePrivacyDlpV2TriggerResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2TriggerResponseArrayOutput
}

type GooglePrivacyDlpV2TriggerResponseArray []GooglePrivacyDlpV2TriggerResponseInput

func (GooglePrivacyDlpV2TriggerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2TriggerResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2TriggerResponseArray) ToGooglePrivacyDlpV2TriggerResponseArrayOutput() GooglePrivacyDlpV2TriggerResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2TriggerResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2TriggerResponseArray) ToGooglePrivacyDlpV2TriggerResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TriggerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2TriggerResponseArrayOutput)
}

// What event needs to occur for a new job to be started.
type GooglePrivacyDlpV2TriggerResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2TriggerResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TriggerResponseOutput) ToGooglePrivacyDlpV2TriggerResponseOutput() GooglePrivacyDlpV2TriggerResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2TriggerResponseOutput) ToGooglePrivacyDlpV2TriggerResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TriggerResponseOutput {
	return o
}

// For use with hybrid jobs. Jobs must be manually created and finished.
func (o GooglePrivacyDlpV2TriggerResponseOutput) Manual() GooglePrivacyDlpV2ManualResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TriggerResponse) GooglePrivacyDlpV2ManualResponse { return v.Manual }).(GooglePrivacyDlpV2ManualResponseOutput)
}

// Create a job on a repeating basis based on the elapse of time.
func (o GooglePrivacyDlpV2TriggerResponseOutput) Schedule() GooglePrivacyDlpV2ScheduleResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2TriggerResponse) GooglePrivacyDlpV2ScheduleResponse { return v.Schedule }).(GooglePrivacyDlpV2ScheduleResponseOutput)
}

type GooglePrivacyDlpV2TriggerResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2TriggerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2TriggerResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2TriggerResponseArrayOutput) ToGooglePrivacyDlpV2TriggerResponseArrayOutput() GooglePrivacyDlpV2TriggerResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2TriggerResponseArrayOutput) ToGooglePrivacyDlpV2TriggerResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2TriggerResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2TriggerResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2TriggerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2TriggerResponse {
		return vs[0].([]GooglePrivacyDlpV2TriggerResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2TriggerResponseOutput)
}

// Using raw keys is prone to security risks due to accidentally leaking the key. Choose another type of key if possible.
type GooglePrivacyDlpV2UnwrappedCryptoKey struct {
	// A 128/192/256 bit key.
	Key string `pulumi:"key"`
}

// GooglePrivacyDlpV2UnwrappedCryptoKeyInput is an input type that accepts GooglePrivacyDlpV2UnwrappedCryptoKeyArgs and GooglePrivacyDlpV2UnwrappedCryptoKeyOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2UnwrappedCryptoKeyInput` via:
//
//          GooglePrivacyDlpV2UnwrappedCryptoKeyArgs{...}
type GooglePrivacyDlpV2UnwrappedCryptoKeyInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2UnwrappedCryptoKeyOutput() GooglePrivacyDlpV2UnwrappedCryptoKeyOutput
	ToGooglePrivacyDlpV2UnwrappedCryptoKeyOutputWithContext(context.Context) GooglePrivacyDlpV2UnwrappedCryptoKeyOutput
}

// Using raw keys is prone to security risks due to accidentally leaking the key. Choose another type of key if possible.
type GooglePrivacyDlpV2UnwrappedCryptoKeyArgs struct {
	// A 128/192/256 bit key.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GooglePrivacyDlpV2UnwrappedCryptoKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2UnwrappedCryptoKey)(nil)).Elem()
}

func (i GooglePrivacyDlpV2UnwrappedCryptoKeyArgs) ToGooglePrivacyDlpV2UnwrappedCryptoKeyOutput() GooglePrivacyDlpV2UnwrappedCryptoKeyOutput {
	return i.ToGooglePrivacyDlpV2UnwrappedCryptoKeyOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2UnwrappedCryptoKeyArgs) ToGooglePrivacyDlpV2UnwrappedCryptoKeyOutputWithContext(ctx context.Context) GooglePrivacyDlpV2UnwrappedCryptoKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2UnwrappedCryptoKeyOutput)
}

func (i GooglePrivacyDlpV2UnwrappedCryptoKeyArgs) ToGooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput() GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput {
	return i.ToGooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2UnwrappedCryptoKeyArgs) ToGooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2UnwrappedCryptoKeyOutput).ToGooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2UnwrappedCryptoKeyPtrInput is an input type that accepts GooglePrivacyDlpV2UnwrappedCryptoKeyArgs, GooglePrivacyDlpV2UnwrappedCryptoKeyPtr and GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2UnwrappedCryptoKeyPtrInput` via:
//
//          GooglePrivacyDlpV2UnwrappedCryptoKeyArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2UnwrappedCryptoKeyPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput() GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput
	ToGooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutputWithContext(context.Context) GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput
}

type googlePrivacyDlpV2UnwrappedCryptoKeyPtrType GooglePrivacyDlpV2UnwrappedCryptoKeyArgs

func GooglePrivacyDlpV2UnwrappedCryptoKeyPtr(v *GooglePrivacyDlpV2UnwrappedCryptoKeyArgs) GooglePrivacyDlpV2UnwrappedCryptoKeyPtrInput {
	return (*googlePrivacyDlpV2UnwrappedCryptoKeyPtrType)(v)
}

func (*googlePrivacyDlpV2UnwrappedCryptoKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2UnwrappedCryptoKey)(nil)).Elem()
}

func (i *googlePrivacyDlpV2UnwrappedCryptoKeyPtrType) ToGooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput() GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput {
	return i.ToGooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2UnwrappedCryptoKeyPtrType) ToGooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput)
}

// Using raw keys is prone to security risks due to accidentally leaking the key. Choose another type of key if possible.
type GooglePrivacyDlpV2UnwrappedCryptoKeyOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2UnwrappedCryptoKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2UnwrappedCryptoKey)(nil)).Elem()
}

func (o GooglePrivacyDlpV2UnwrappedCryptoKeyOutput) ToGooglePrivacyDlpV2UnwrappedCryptoKeyOutput() GooglePrivacyDlpV2UnwrappedCryptoKeyOutput {
	return o
}

func (o GooglePrivacyDlpV2UnwrappedCryptoKeyOutput) ToGooglePrivacyDlpV2UnwrappedCryptoKeyOutputWithContext(ctx context.Context) GooglePrivacyDlpV2UnwrappedCryptoKeyOutput {
	return o
}

func (o GooglePrivacyDlpV2UnwrappedCryptoKeyOutput) ToGooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput() GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput {
	return o.ToGooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2UnwrappedCryptoKeyOutput) ToGooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2UnwrappedCryptoKey) *GooglePrivacyDlpV2UnwrappedCryptoKey {
		return &v
	}).(GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput)
}

// A 128/192/256 bit key.
func (o GooglePrivacyDlpV2UnwrappedCryptoKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2UnwrappedCryptoKey) string { return v.Key }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2UnwrappedCryptoKey)(nil)).Elem()
}

func (o GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput) ToGooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput() GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput) ToGooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput) Elem() GooglePrivacyDlpV2UnwrappedCryptoKeyOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2UnwrappedCryptoKey) GooglePrivacyDlpV2UnwrappedCryptoKey {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2UnwrappedCryptoKey
		return ret
	}).(GooglePrivacyDlpV2UnwrappedCryptoKeyOutput)
}

// A 128/192/256 bit key.
func (o GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2UnwrappedCryptoKey) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Using raw keys is prone to security risks due to accidentally leaking the key. Choose another type of key if possible.
type GooglePrivacyDlpV2UnwrappedCryptoKeyResponse struct {
	// A 128/192/256 bit key.
	Key string `pulumi:"key"`
}

// GooglePrivacyDlpV2UnwrappedCryptoKeyResponseInput is an input type that accepts GooglePrivacyDlpV2UnwrappedCryptoKeyResponseArgs and GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2UnwrappedCryptoKeyResponseInput` via:
//
//          GooglePrivacyDlpV2UnwrappedCryptoKeyResponseArgs{...}
type GooglePrivacyDlpV2UnwrappedCryptoKeyResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput() GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput
	ToGooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutputWithContext(context.Context) GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput
}

// Using raw keys is prone to security risks due to accidentally leaking the key. Choose another type of key if possible.
type GooglePrivacyDlpV2UnwrappedCryptoKeyResponseArgs struct {
	// A 128/192/256 bit key.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GooglePrivacyDlpV2UnwrappedCryptoKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2UnwrappedCryptoKeyResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2UnwrappedCryptoKeyResponseArgs) ToGooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput() GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput {
	return i.ToGooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2UnwrappedCryptoKeyResponseArgs) ToGooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput)
}

// Using raw keys is prone to security risks due to accidentally leaking the key. Choose another type of key if possible.
type GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2UnwrappedCryptoKeyResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput) ToGooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput() GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput) ToGooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput {
	return o
}

// A 128/192/256 bit key.
func (o GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2UnwrappedCryptoKeyResponse) string { return v.Key }).(pulumi.StringOutput)
}

// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
type GooglePrivacyDlpV2Value struct {
	// boolean
	BooleanValue *bool `pulumi:"booleanValue"`
	// date
	DateValue *GoogleTypeDate `pulumi:"dateValue"`
	// day of week
	DayOfWeekValue *GooglePrivacyDlpV2ValueDayOfWeekValue `pulumi:"dayOfWeekValue"`
	// float
	FloatValue *float64 `pulumi:"floatValue"`
	// integer
	IntegerValue *string `pulumi:"integerValue"`
	// string
	StringValue *string `pulumi:"stringValue"`
	// time of day
	TimeValue *GoogleTypeTimeOfDay `pulumi:"timeValue"`
	// timestamp
	TimestampValue *string `pulumi:"timestampValue"`
}

// GooglePrivacyDlpV2ValueInput is an input type that accepts GooglePrivacyDlpV2ValueArgs and GooglePrivacyDlpV2ValueOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ValueInput` via:
//
//          GooglePrivacyDlpV2ValueArgs{...}
type GooglePrivacyDlpV2ValueInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ValueOutput() GooglePrivacyDlpV2ValueOutput
	ToGooglePrivacyDlpV2ValueOutputWithContext(context.Context) GooglePrivacyDlpV2ValueOutput
}

// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
type GooglePrivacyDlpV2ValueArgs struct {
	// boolean
	BooleanValue pulumi.BoolPtrInput `pulumi:"booleanValue"`
	// date
	DateValue GoogleTypeDatePtrInput `pulumi:"dateValue"`
	// day of week
	DayOfWeekValue GooglePrivacyDlpV2ValueDayOfWeekValuePtrInput `pulumi:"dayOfWeekValue"`
	// float
	FloatValue pulumi.Float64PtrInput `pulumi:"floatValue"`
	// integer
	IntegerValue pulumi.StringPtrInput `pulumi:"integerValue"`
	// string
	StringValue pulumi.StringPtrInput `pulumi:"stringValue"`
	// time of day
	TimeValue GoogleTypeTimeOfDayPtrInput `pulumi:"timeValue"`
	// timestamp
	TimestampValue pulumi.StringPtrInput `pulumi:"timestampValue"`
}

func (GooglePrivacyDlpV2ValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Value)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ValueArgs) ToGooglePrivacyDlpV2ValueOutput() GooglePrivacyDlpV2ValueOutput {
	return i.ToGooglePrivacyDlpV2ValueOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ValueArgs) ToGooglePrivacyDlpV2ValueOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ValueOutput)
}

func (i GooglePrivacyDlpV2ValueArgs) ToGooglePrivacyDlpV2ValuePtrOutput() GooglePrivacyDlpV2ValuePtrOutput {
	return i.ToGooglePrivacyDlpV2ValuePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ValueArgs) ToGooglePrivacyDlpV2ValuePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ValueOutput).ToGooglePrivacyDlpV2ValuePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2ValuePtrInput is an input type that accepts GooglePrivacyDlpV2ValueArgs, GooglePrivacyDlpV2ValuePtr and GooglePrivacyDlpV2ValuePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ValuePtrInput` via:
//
//          GooglePrivacyDlpV2ValueArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2ValuePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ValuePtrOutput() GooglePrivacyDlpV2ValuePtrOutput
	ToGooglePrivacyDlpV2ValuePtrOutputWithContext(context.Context) GooglePrivacyDlpV2ValuePtrOutput
}

type googlePrivacyDlpV2ValuePtrType GooglePrivacyDlpV2ValueArgs

func GooglePrivacyDlpV2ValuePtr(v *GooglePrivacyDlpV2ValueArgs) GooglePrivacyDlpV2ValuePtrInput {
	return (*googlePrivacyDlpV2ValuePtrType)(v)
}

func (*googlePrivacyDlpV2ValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Value)(nil)).Elem()
}

func (i *googlePrivacyDlpV2ValuePtrType) ToGooglePrivacyDlpV2ValuePtrOutput() GooglePrivacyDlpV2ValuePtrOutput {
	return i.ToGooglePrivacyDlpV2ValuePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2ValuePtrType) ToGooglePrivacyDlpV2ValuePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ValuePtrOutput)
}

// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
type GooglePrivacyDlpV2ValueOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2Value)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ValueOutput) ToGooglePrivacyDlpV2ValueOutput() GooglePrivacyDlpV2ValueOutput {
	return o
}

func (o GooglePrivacyDlpV2ValueOutput) ToGooglePrivacyDlpV2ValueOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValueOutput {
	return o
}

func (o GooglePrivacyDlpV2ValueOutput) ToGooglePrivacyDlpV2ValuePtrOutput() GooglePrivacyDlpV2ValuePtrOutput {
	return o.ToGooglePrivacyDlpV2ValuePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2ValueOutput) ToGooglePrivacyDlpV2ValuePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2Value) *GooglePrivacyDlpV2Value {
		return &v
	}).(GooglePrivacyDlpV2ValuePtrOutput)
}

// boolean
func (o GooglePrivacyDlpV2ValueOutput) BooleanValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Value) *bool { return v.BooleanValue }).(pulumi.BoolPtrOutput)
}

// date
func (o GooglePrivacyDlpV2ValueOutput) DateValue() GoogleTypeDatePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Value) *GoogleTypeDate { return v.DateValue }).(GoogleTypeDatePtrOutput)
}

// day of week
func (o GooglePrivacyDlpV2ValueOutput) DayOfWeekValue() GooglePrivacyDlpV2ValueDayOfWeekValuePtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Value) *GooglePrivacyDlpV2ValueDayOfWeekValue { return v.DayOfWeekValue }).(GooglePrivacyDlpV2ValueDayOfWeekValuePtrOutput)
}

// float
func (o GooglePrivacyDlpV2ValueOutput) FloatValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Value) *float64 { return v.FloatValue }).(pulumi.Float64PtrOutput)
}

// integer
func (o GooglePrivacyDlpV2ValueOutput) IntegerValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Value) *string { return v.IntegerValue }).(pulumi.StringPtrOutput)
}

// string
func (o GooglePrivacyDlpV2ValueOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Value) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

// time of day
func (o GooglePrivacyDlpV2ValueOutput) TimeValue() GoogleTypeTimeOfDayPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Value) *GoogleTypeTimeOfDay { return v.TimeValue }).(GoogleTypeTimeOfDayPtrOutput)
}

// timestamp
func (o GooglePrivacyDlpV2ValueOutput) TimestampValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2Value) *string { return v.TimestampValue }).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2ValuePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2Value)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ValuePtrOutput) ToGooglePrivacyDlpV2ValuePtrOutput() GooglePrivacyDlpV2ValuePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ValuePtrOutput) ToGooglePrivacyDlpV2ValuePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValuePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ValuePtrOutput) Elem() GooglePrivacyDlpV2ValueOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Value) GooglePrivacyDlpV2Value {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2Value
		return ret
	}).(GooglePrivacyDlpV2ValueOutput)
}

// boolean
func (o GooglePrivacyDlpV2ValuePtrOutput) BooleanValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Value) *bool {
		if v == nil {
			return nil
		}
		return v.BooleanValue
	}).(pulumi.BoolPtrOutput)
}

// date
func (o GooglePrivacyDlpV2ValuePtrOutput) DateValue() GoogleTypeDatePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Value) *GoogleTypeDate {
		if v == nil {
			return nil
		}
		return v.DateValue
	}).(GoogleTypeDatePtrOutput)
}

// day of week
func (o GooglePrivacyDlpV2ValuePtrOutput) DayOfWeekValue() GooglePrivacyDlpV2ValueDayOfWeekValuePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Value) *GooglePrivacyDlpV2ValueDayOfWeekValue {
		if v == nil {
			return nil
		}
		return v.DayOfWeekValue
	}).(GooglePrivacyDlpV2ValueDayOfWeekValuePtrOutput)
}

// float
func (o GooglePrivacyDlpV2ValuePtrOutput) FloatValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Value) *float64 {
		if v == nil {
			return nil
		}
		return v.FloatValue
	}).(pulumi.Float64PtrOutput)
}

// integer
func (o GooglePrivacyDlpV2ValuePtrOutput) IntegerValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Value) *string {
		if v == nil {
			return nil
		}
		return v.IntegerValue
	}).(pulumi.StringPtrOutput)
}

// string
func (o GooglePrivacyDlpV2ValuePtrOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Value) *string {
		if v == nil {
			return nil
		}
		return v.StringValue
	}).(pulumi.StringPtrOutput)
}

// time of day
func (o GooglePrivacyDlpV2ValuePtrOutput) TimeValue() GoogleTypeTimeOfDayPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Value) *GoogleTypeTimeOfDay {
		if v == nil {
			return nil
		}
		return v.TimeValue
	}).(GoogleTypeTimeOfDayPtrOutput)
}

// timestamp
func (o GooglePrivacyDlpV2ValuePtrOutput) TimestampValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2Value) *string {
		if v == nil {
			return nil
		}
		return v.TimestampValue
	}).(pulumi.StringPtrOutput)
}

// A value of a field, including its frequency.
type GooglePrivacyDlpV2ValueFrequencyResponse struct {
	// How many times the value is contained in the field.
	Count string `pulumi:"count"`
	// A value contained in the field in question.
	Value GooglePrivacyDlpV2ValueResponse `pulumi:"value"`
}

// GooglePrivacyDlpV2ValueFrequencyResponseInput is an input type that accepts GooglePrivacyDlpV2ValueFrequencyResponseArgs and GooglePrivacyDlpV2ValueFrequencyResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ValueFrequencyResponseInput` via:
//
//          GooglePrivacyDlpV2ValueFrequencyResponseArgs{...}
type GooglePrivacyDlpV2ValueFrequencyResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ValueFrequencyResponseOutput() GooglePrivacyDlpV2ValueFrequencyResponseOutput
	ToGooglePrivacyDlpV2ValueFrequencyResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ValueFrequencyResponseOutput
}

// A value of a field, including its frequency.
type GooglePrivacyDlpV2ValueFrequencyResponseArgs struct {
	// How many times the value is contained in the field.
	Count pulumi.StringInput `pulumi:"count"`
	// A value contained in the field in question.
	Value GooglePrivacyDlpV2ValueResponseInput `pulumi:"value"`
}

func (GooglePrivacyDlpV2ValueFrequencyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ValueFrequencyResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ValueFrequencyResponseArgs) ToGooglePrivacyDlpV2ValueFrequencyResponseOutput() GooglePrivacyDlpV2ValueFrequencyResponseOutput {
	return i.ToGooglePrivacyDlpV2ValueFrequencyResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ValueFrequencyResponseArgs) ToGooglePrivacyDlpV2ValueFrequencyResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValueFrequencyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ValueFrequencyResponseOutput)
}

// GooglePrivacyDlpV2ValueFrequencyResponseArrayInput is an input type that accepts GooglePrivacyDlpV2ValueFrequencyResponseArray and GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ValueFrequencyResponseArrayInput` via:
//
//          GooglePrivacyDlpV2ValueFrequencyResponseArray{ GooglePrivacyDlpV2ValueFrequencyResponseArgs{...} }
type GooglePrivacyDlpV2ValueFrequencyResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ValueFrequencyResponseArrayOutput() GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput
	ToGooglePrivacyDlpV2ValueFrequencyResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput
}

type GooglePrivacyDlpV2ValueFrequencyResponseArray []GooglePrivacyDlpV2ValueFrequencyResponseInput

func (GooglePrivacyDlpV2ValueFrequencyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2ValueFrequencyResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ValueFrequencyResponseArray) ToGooglePrivacyDlpV2ValueFrequencyResponseArrayOutput() GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2ValueFrequencyResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ValueFrequencyResponseArray) ToGooglePrivacyDlpV2ValueFrequencyResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput)
}

// A value of a field, including its frequency.
type GooglePrivacyDlpV2ValueFrequencyResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ValueFrequencyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ValueFrequencyResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ValueFrequencyResponseOutput) ToGooglePrivacyDlpV2ValueFrequencyResponseOutput() GooglePrivacyDlpV2ValueFrequencyResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ValueFrequencyResponseOutput) ToGooglePrivacyDlpV2ValueFrequencyResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValueFrequencyResponseOutput {
	return o
}

// How many times the value is contained in the field.
func (o GooglePrivacyDlpV2ValueFrequencyResponseOutput) Count() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ValueFrequencyResponse) string { return v.Count }).(pulumi.StringOutput)
}

// A value contained in the field in question.
func (o GooglePrivacyDlpV2ValueFrequencyResponseOutput) Value() GooglePrivacyDlpV2ValueResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ValueFrequencyResponse) GooglePrivacyDlpV2ValueResponse { return v.Value }).(GooglePrivacyDlpV2ValueResponseOutput)
}

type GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2ValueFrequencyResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput) ToGooglePrivacyDlpV2ValueFrequencyResponseArrayOutput() GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput) ToGooglePrivacyDlpV2ValueFrequencyResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2ValueFrequencyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2ValueFrequencyResponse {
		return vs[0].([]GooglePrivacyDlpV2ValueFrequencyResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2ValueFrequencyResponseOutput)
}

// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
type GooglePrivacyDlpV2ValueResponse struct {
	// boolean
	BooleanValue bool `pulumi:"booleanValue"`
	// date
	DateValue GoogleTypeDateResponse `pulumi:"dateValue"`
	// day of week
	DayOfWeekValue string `pulumi:"dayOfWeekValue"`
	// float
	FloatValue float64 `pulumi:"floatValue"`
	// integer
	IntegerValue string `pulumi:"integerValue"`
	// string
	StringValue string `pulumi:"stringValue"`
	// time of day
	TimeValue GoogleTypeTimeOfDayResponse `pulumi:"timeValue"`
	// timestamp
	TimestampValue string `pulumi:"timestampValue"`
}

// GooglePrivacyDlpV2ValueResponseInput is an input type that accepts GooglePrivacyDlpV2ValueResponseArgs and GooglePrivacyDlpV2ValueResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ValueResponseInput` via:
//
//          GooglePrivacyDlpV2ValueResponseArgs{...}
type GooglePrivacyDlpV2ValueResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ValueResponseOutput() GooglePrivacyDlpV2ValueResponseOutput
	ToGooglePrivacyDlpV2ValueResponseOutputWithContext(context.Context) GooglePrivacyDlpV2ValueResponseOutput
}

// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
type GooglePrivacyDlpV2ValueResponseArgs struct {
	// boolean
	BooleanValue pulumi.BoolInput `pulumi:"booleanValue"`
	// date
	DateValue GoogleTypeDateResponseInput `pulumi:"dateValue"`
	// day of week
	DayOfWeekValue pulumi.StringInput `pulumi:"dayOfWeekValue"`
	// float
	FloatValue pulumi.Float64Input `pulumi:"floatValue"`
	// integer
	IntegerValue pulumi.StringInput `pulumi:"integerValue"`
	// string
	StringValue pulumi.StringInput `pulumi:"stringValue"`
	// time of day
	TimeValue GoogleTypeTimeOfDayResponseInput `pulumi:"timeValue"`
	// timestamp
	TimestampValue pulumi.StringInput `pulumi:"timestampValue"`
}

func (GooglePrivacyDlpV2ValueResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ValueResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ValueResponseArgs) ToGooglePrivacyDlpV2ValueResponseOutput() GooglePrivacyDlpV2ValueResponseOutput {
	return i.ToGooglePrivacyDlpV2ValueResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ValueResponseArgs) ToGooglePrivacyDlpV2ValueResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValueResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ValueResponseOutput)
}

func (i GooglePrivacyDlpV2ValueResponseArgs) ToGooglePrivacyDlpV2ValueResponsePtrOutput() GooglePrivacyDlpV2ValueResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2ValueResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ValueResponseArgs) ToGooglePrivacyDlpV2ValueResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValueResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ValueResponseOutput).ToGooglePrivacyDlpV2ValueResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2ValueResponsePtrInput is an input type that accepts GooglePrivacyDlpV2ValueResponseArgs, GooglePrivacyDlpV2ValueResponsePtr and GooglePrivacyDlpV2ValueResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ValueResponsePtrInput` via:
//
//          GooglePrivacyDlpV2ValueResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2ValueResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ValueResponsePtrOutput() GooglePrivacyDlpV2ValueResponsePtrOutput
	ToGooglePrivacyDlpV2ValueResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2ValueResponsePtrOutput
}

type googlePrivacyDlpV2ValueResponsePtrType GooglePrivacyDlpV2ValueResponseArgs

func GooglePrivacyDlpV2ValueResponsePtr(v *GooglePrivacyDlpV2ValueResponseArgs) GooglePrivacyDlpV2ValueResponsePtrInput {
	return (*googlePrivacyDlpV2ValueResponsePtrType)(v)
}

func (*googlePrivacyDlpV2ValueResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ValueResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2ValueResponsePtrType) ToGooglePrivacyDlpV2ValueResponsePtrOutput() GooglePrivacyDlpV2ValueResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2ValueResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2ValueResponsePtrType) ToGooglePrivacyDlpV2ValueResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValueResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ValueResponsePtrOutput)
}

// GooglePrivacyDlpV2ValueResponseArrayInput is an input type that accepts GooglePrivacyDlpV2ValueResponseArray and GooglePrivacyDlpV2ValueResponseArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2ValueResponseArrayInput` via:
//
//          GooglePrivacyDlpV2ValueResponseArray{ GooglePrivacyDlpV2ValueResponseArgs{...} }
type GooglePrivacyDlpV2ValueResponseArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2ValueResponseArrayOutput() GooglePrivacyDlpV2ValueResponseArrayOutput
	ToGooglePrivacyDlpV2ValueResponseArrayOutputWithContext(context.Context) GooglePrivacyDlpV2ValueResponseArrayOutput
}

type GooglePrivacyDlpV2ValueResponseArray []GooglePrivacyDlpV2ValueResponseInput

func (GooglePrivacyDlpV2ValueResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2ValueResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2ValueResponseArray) ToGooglePrivacyDlpV2ValueResponseArrayOutput() GooglePrivacyDlpV2ValueResponseArrayOutput {
	return i.ToGooglePrivacyDlpV2ValueResponseArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2ValueResponseArray) ToGooglePrivacyDlpV2ValueResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValueResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2ValueResponseArrayOutput)
}

// Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
type GooglePrivacyDlpV2ValueResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2ValueResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ValueResponseOutput) ToGooglePrivacyDlpV2ValueResponseOutput() GooglePrivacyDlpV2ValueResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ValueResponseOutput) ToGooglePrivacyDlpV2ValueResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValueResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2ValueResponseOutput) ToGooglePrivacyDlpV2ValueResponsePtrOutput() GooglePrivacyDlpV2ValueResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2ValueResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2ValueResponseOutput) ToGooglePrivacyDlpV2ValueResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValueResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2ValueResponse) *GooglePrivacyDlpV2ValueResponse {
		return &v
	}).(GooglePrivacyDlpV2ValueResponsePtrOutput)
}

// boolean
func (o GooglePrivacyDlpV2ValueResponseOutput) BooleanValue() pulumi.BoolOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ValueResponse) bool { return v.BooleanValue }).(pulumi.BoolOutput)
}

// date
func (o GooglePrivacyDlpV2ValueResponseOutput) DateValue() GoogleTypeDateResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ValueResponse) GoogleTypeDateResponse { return v.DateValue }).(GoogleTypeDateResponseOutput)
}

// day of week
func (o GooglePrivacyDlpV2ValueResponseOutput) DayOfWeekValue() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ValueResponse) string { return v.DayOfWeekValue }).(pulumi.StringOutput)
}

// float
func (o GooglePrivacyDlpV2ValueResponseOutput) FloatValue() pulumi.Float64Output {
	return o.ApplyT(func(v GooglePrivacyDlpV2ValueResponse) float64 { return v.FloatValue }).(pulumi.Float64Output)
}

// integer
func (o GooglePrivacyDlpV2ValueResponseOutput) IntegerValue() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ValueResponse) string { return v.IntegerValue }).(pulumi.StringOutput)
}

// string
func (o GooglePrivacyDlpV2ValueResponseOutput) StringValue() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ValueResponse) string { return v.StringValue }).(pulumi.StringOutput)
}

// time of day
func (o GooglePrivacyDlpV2ValueResponseOutput) TimeValue() GoogleTypeTimeOfDayResponseOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ValueResponse) GoogleTypeTimeOfDayResponse { return v.TimeValue }).(GoogleTypeTimeOfDayResponseOutput)
}

// timestamp
func (o GooglePrivacyDlpV2ValueResponseOutput) TimestampValue() pulumi.StringOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2ValueResponse) string { return v.TimestampValue }).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2ValueResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ValueResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2ValueResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ValueResponsePtrOutput) ToGooglePrivacyDlpV2ValueResponsePtrOutput() GooglePrivacyDlpV2ValueResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ValueResponsePtrOutput) ToGooglePrivacyDlpV2ValueResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValueResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2ValueResponsePtrOutput) Elem() GooglePrivacyDlpV2ValueResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ValueResponse) GooglePrivacyDlpV2ValueResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2ValueResponse
		return ret
	}).(GooglePrivacyDlpV2ValueResponseOutput)
}

// boolean
func (o GooglePrivacyDlpV2ValueResponsePtrOutput) BooleanValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ValueResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.BooleanValue
	}).(pulumi.BoolPtrOutput)
}

// date
func (o GooglePrivacyDlpV2ValueResponsePtrOutput) DateValue() GoogleTypeDateResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ValueResponse) *GoogleTypeDateResponse {
		if v == nil {
			return nil
		}
		return &v.DateValue
	}).(GoogleTypeDateResponsePtrOutput)
}

// day of week
func (o GooglePrivacyDlpV2ValueResponsePtrOutput) DayOfWeekValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ValueResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfWeekValue
	}).(pulumi.StringPtrOutput)
}

// float
func (o GooglePrivacyDlpV2ValueResponsePtrOutput) FloatValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ValueResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.FloatValue
	}).(pulumi.Float64PtrOutput)
}

// integer
func (o GooglePrivacyDlpV2ValueResponsePtrOutput) IntegerValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ValueResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IntegerValue
	}).(pulumi.StringPtrOutput)
}

// string
func (o GooglePrivacyDlpV2ValueResponsePtrOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ValueResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StringValue
	}).(pulumi.StringPtrOutput)
}

// time of day
func (o GooglePrivacyDlpV2ValueResponsePtrOutput) TimeValue() GoogleTypeTimeOfDayResponsePtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ValueResponse) *GoogleTypeTimeOfDayResponse {
		if v == nil {
			return nil
		}
		return &v.TimeValue
	}).(GoogleTypeTimeOfDayResponsePtrOutput)
}

// timestamp
func (o GooglePrivacyDlpV2ValueResponsePtrOutput) TimestampValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2ValueResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TimestampValue
	}).(pulumi.StringPtrOutput)
}

type GooglePrivacyDlpV2ValueResponseArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2ValueResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2ValueResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2ValueResponseArrayOutput) ToGooglePrivacyDlpV2ValueResponseArrayOutput() GooglePrivacyDlpV2ValueResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2ValueResponseArrayOutput) ToGooglePrivacyDlpV2ValueResponseArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2ValueResponseArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2ValueResponseArrayOutput) Index(i pulumi.IntInput) GooglePrivacyDlpV2ValueResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GooglePrivacyDlpV2ValueResponse {
		return vs[0].([]GooglePrivacyDlpV2ValueResponse)[vs[1].(int)]
	}).(GooglePrivacyDlpV2ValueResponseOutput)
}

// Message defining a list of words or phrases to search for in the data.
type GooglePrivacyDlpV2WordList struct {
	// Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]
	Words []string `pulumi:"words"`
}

// GooglePrivacyDlpV2WordListInput is an input type that accepts GooglePrivacyDlpV2WordListArgs and GooglePrivacyDlpV2WordListOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2WordListInput` via:
//
//          GooglePrivacyDlpV2WordListArgs{...}
type GooglePrivacyDlpV2WordListInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2WordListOutput() GooglePrivacyDlpV2WordListOutput
	ToGooglePrivacyDlpV2WordListOutputWithContext(context.Context) GooglePrivacyDlpV2WordListOutput
}

// Message defining a list of words or phrases to search for in the data.
type GooglePrivacyDlpV2WordListArgs struct {
	// Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]
	Words pulumi.StringArrayInput `pulumi:"words"`
}

func (GooglePrivacyDlpV2WordListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2WordList)(nil)).Elem()
}

func (i GooglePrivacyDlpV2WordListArgs) ToGooglePrivacyDlpV2WordListOutput() GooglePrivacyDlpV2WordListOutput {
	return i.ToGooglePrivacyDlpV2WordListOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2WordListArgs) ToGooglePrivacyDlpV2WordListOutputWithContext(ctx context.Context) GooglePrivacyDlpV2WordListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2WordListOutput)
}

func (i GooglePrivacyDlpV2WordListArgs) ToGooglePrivacyDlpV2WordListPtrOutput() GooglePrivacyDlpV2WordListPtrOutput {
	return i.ToGooglePrivacyDlpV2WordListPtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2WordListArgs) ToGooglePrivacyDlpV2WordListPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2WordListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2WordListOutput).ToGooglePrivacyDlpV2WordListPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2WordListPtrInput is an input type that accepts GooglePrivacyDlpV2WordListArgs, GooglePrivacyDlpV2WordListPtr and GooglePrivacyDlpV2WordListPtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2WordListPtrInput` via:
//
//          GooglePrivacyDlpV2WordListArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2WordListPtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2WordListPtrOutput() GooglePrivacyDlpV2WordListPtrOutput
	ToGooglePrivacyDlpV2WordListPtrOutputWithContext(context.Context) GooglePrivacyDlpV2WordListPtrOutput
}

type googlePrivacyDlpV2WordListPtrType GooglePrivacyDlpV2WordListArgs

func GooglePrivacyDlpV2WordListPtr(v *GooglePrivacyDlpV2WordListArgs) GooglePrivacyDlpV2WordListPtrInput {
	return (*googlePrivacyDlpV2WordListPtrType)(v)
}

func (*googlePrivacyDlpV2WordListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2WordList)(nil)).Elem()
}

func (i *googlePrivacyDlpV2WordListPtrType) ToGooglePrivacyDlpV2WordListPtrOutput() GooglePrivacyDlpV2WordListPtrOutput {
	return i.ToGooglePrivacyDlpV2WordListPtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2WordListPtrType) ToGooglePrivacyDlpV2WordListPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2WordListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2WordListPtrOutput)
}

// Message defining a list of words or phrases to search for in the data.
type GooglePrivacyDlpV2WordListOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2WordListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2WordList)(nil)).Elem()
}

func (o GooglePrivacyDlpV2WordListOutput) ToGooglePrivacyDlpV2WordListOutput() GooglePrivacyDlpV2WordListOutput {
	return o
}

func (o GooglePrivacyDlpV2WordListOutput) ToGooglePrivacyDlpV2WordListOutputWithContext(ctx context.Context) GooglePrivacyDlpV2WordListOutput {
	return o
}

func (o GooglePrivacyDlpV2WordListOutput) ToGooglePrivacyDlpV2WordListPtrOutput() GooglePrivacyDlpV2WordListPtrOutput {
	return o.ToGooglePrivacyDlpV2WordListPtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2WordListOutput) ToGooglePrivacyDlpV2WordListPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2WordListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2WordList) *GooglePrivacyDlpV2WordList {
		return &v
	}).(GooglePrivacyDlpV2WordListPtrOutput)
}

// Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]
func (o GooglePrivacyDlpV2WordListOutput) Words() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2WordList) []string { return v.Words }).(pulumi.StringArrayOutput)
}

type GooglePrivacyDlpV2WordListPtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2WordListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2WordList)(nil)).Elem()
}

func (o GooglePrivacyDlpV2WordListPtrOutput) ToGooglePrivacyDlpV2WordListPtrOutput() GooglePrivacyDlpV2WordListPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2WordListPtrOutput) ToGooglePrivacyDlpV2WordListPtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2WordListPtrOutput {
	return o
}

func (o GooglePrivacyDlpV2WordListPtrOutput) Elem() GooglePrivacyDlpV2WordListOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2WordList) GooglePrivacyDlpV2WordList {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2WordList
		return ret
	}).(GooglePrivacyDlpV2WordListOutput)
}

// Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]
func (o GooglePrivacyDlpV2WordListPtrOutput) Words() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2WordList) []string {
		if v == nil {
			return nil
		}
		return v.Words
	}).(pulumi.StringArrayOutput)
}

// Message defining a list of words or phrases to search for in the data.
type GooglePrivacyDlpV2WordListResponse struct {
	// Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]
	Words []string `pulumi:"words"`
}

// GooglePrivacyDlpV2WordListResponseInput is an input type that accepts GooglePrivacyDlpV2WordListResponseArgs and GooglePrivacyDlpV2WordListResponseOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2WordListResponseInput` via:
//
//          GooglePrivacyDlpV2WordListResponseArgs{...}
type GooglePrivacyDlpV2WordListResponseInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2WordListResponseOutput() GooglePrivacyDlpV2WordListResponseOutput
	ToGooglePrivacyDlpV2WordListResponseOutputWithContext(context.Context) GooglePrivacyDlpV2WordListResponseOutput
}

// Message defining a list of words or phrases to search for in the data.
type GooglePrivacyDlpV2WordListResponseArgs struct {
	// Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]
	Words pulumi.StringArrayInput `pulumi:"words"`
}

func (GooglePrivacyDlpV2WordListResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2WordListResponse)(nil)).Elem()
}

func (i GooglePrivacyDlpV2WordListResponseArgs) ToGooglePrivacyDlpV2WordListResponseOutput() GooglePrivacyDlpV2WordListResponseOutput {
	return i.ToGooglePrivacyDlpV2WordListResponseOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2WordListResponseArgs) ToGooglePrivacyDlpV2WordListResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2WordListResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2WordListResponseOutput)
}

func (i GooglePrivacyDlpV2WordListResponseArgs) ToGooglePrivacyDlpV2WordListResponsePtrOutput() GooglePrivacyDlpV2WordListResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2WordListResponsePtrOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2WordListResponseArgs) ToGooglePrivacyDlpV2WordListResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2WordListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2WordListResponseOutput).ToGooglePrivacyDlpV2WordListResponsePtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2WordListResponsePtrInput is an input type that accepts GooglePrivacyDlpV2WordListResponseArgs, GooglePrivacyDlpV2WordListResponsePtr and GooglePrivacyDlpV2WordListResponsePtrOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2WordListResponsePtrInput` via:
//
//          GooglePrivacyDlpV2WordListResponseArgs{...}
//
//  or:
//
//          nil
type GooglePrivacyDlpV2WordListResponsePtrInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2WordListResponsePtrOutput() GooglePrivacyDlpV2WordListResponsePtrOutput
	ToGooglePrivacyDlpV2WordListResponsePtrOutputWithContext(context.Context) GooglePrivacyDlpV2WordListResponsePtrOutput
}

type googlePrivacyDlpV2WordListResponsePtrType GooglePrivacyDlpV2WordListResponseArgs

func GooglePrivacyDlpV2WordListResponsePtr(v *GooglePrivacyDlpV2WordListResponseArgs) GooglePrivacyDlpV2WordListResponsePtrInput {
	return (*googlePrivacyDlpV2WordListResponsePtrType)(v)
}

func (*googlePrivacyDlpV2WordListResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2WordListResponse)(nil)).Elem()
}

func (i *googlePrivacyDlpV2WordListResponsePtrType) ToGooglePrivacyDlpV2WordListResponsePtrOutput() GooglePrivacyDlpV2WordListResponsePtrOutput {
	return i.ToGooglePrivacyDlpV2WordListResponsePtrOutputWithContext(context.Background())
}

func (i *googlePrivacyDlpV2WordListResponsePtrType) ToGooglePrivacyDlpV2WordListResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2WordListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2WordListResponsePtrOutput)
}

// Message defining a list of words or phrases to search for in the data.
type GooglePrivacyDlpV2WordListResponseOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2WordListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GooglePrivacyDlpV2WordListResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2WordListResponseOutput) ToGooglePrivacyDlpV2WordListResponseOutput() GooglePrivacyDlpV2WordListResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2WordListResponseOutput) ToGooglePrivacyDlpV2WordListResponseOutputWithContext(ctx context.Context) GooglePrivacyDlpV2WordListResponseOutput {
	return o
}

func (o GooglePrivacyDlpV2WordListResponseOutput) ToGooglePrivacyDlpV2WordListResponsePtrOutput() GooglePrivacyDlpV2WordListResponsePtrOutput {
	return o.ToGooglePrivacyDlpV2WordListResponsePtrOutputWithContext(context.Background())
}

func (o GooglePrivacyDlpV2WordListResponseOutput) ToGooglePrivacyDlpV2WordListResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2WordListResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GooglePrivacyDlpV2WordListResponse) *GooglePrivacyDlpV2WordListResponse {
		return &v
	}).(GooglePrivacyDlpV2WordListResponsePtrOutput)
}

// Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]
func (o GooglePrivacyDlpV2WordListResponseOutput) Words() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GooglePrivacyDlpV2WordListResponse) []string { return v.Words }).(pulumi.StringArrayOutput)
}

type GooglePrivacyDlpV2WordListResponsePtrOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2WordListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GooglePrivacyDlpV2WordListResponse)(nil)).Elem()
}

func (o GooglePrivacyDlpV2WordListResponsePtrOutput) ToGooglePrivacyDlpV2WordListResponsePtrOutput() GooglePrivacyDlpV2WordListResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2WordListResponsePtrOutput) ToGooglePrivacyDlpV2WordListResponsePtrOutputWithContext(ctx context.Context) GooglePrivacyDlpV2WordListResponsePtrOutput {
	return o
}

func (o GooglePrivacyDlpV2WordListResponsePtrOutput) Elem() GooglePrivacyDlpV2WordListResponseOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2WordListResponse) GooglePrivacyDlpV2WordListResponse {
		if v != nil {
			return *v
		}
		var ret GooglePrivacyDlpV2WordListResponse
		return ret
	}).(GooglePrivacyDlpV2WordListResponseOutput)
}

// Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]
func (o GooglePrivacyDlpV2WordListResponsePtrOutput) Words() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GooglePrivacyDlpV2WordListResponse) []string {
		if v == nil {
			return nil
		}
		return v.Words
	}).(pulumi.StringArrayOutput)
}

// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.
type GoogleProtobufEmpty struct {
}

// GoogleProtobufEmptyInput is an input type that accepts GoogleProtobufEmptyArgs and GoogleProtobufEmptyOutput values.
// You can construct a concrete instance of `GoogleProtobufEmptyInput` via:
//
//          GoogleProtobufEmptyArgs{...}
type GoogleProtobufEmptyInput interface {
	pulumi.Input

	ToGoogleProtobufEmptyOutput() GoogleProtobufEmptyOutput
	ToGoogleProtobufEmptyOutputWithContext(context.Context) GoogleProtobufEmptyOutput
}

// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.
type GoogleProtobufEmptyArgs struct {
}

func (GoogleProtobufEmptyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleProtobufEmpty)(nil)).Elem()
}

func (i GoogleProtobufEmptyArgs) ToGoogleProtobufEmptyOutput() GoogleProtobufEmptyOutput {
	return i.ToGoogleProtobufEmptyOutputWithContext(context.Background())
}

func (i GoogleProtobufEmptyArgs) ToGoogleProtobufEmptyOutputWithContext(ctx context.Context) GoogleProtobufEmptyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleProtobufEmptyOutput)
}

func (i GoogleProtobufEmptyArgs) ToGoogleProtobufEmptyPtrOutput() GoogleProtobufEmptyPtrOutput {
	return i.ToGoogleProtobufEmptyPtrOutputWithContext(context.Background())
}

func (i GoogleProtobufEmptyArgs) ToGoogleProtobufEmptyPtrOutputWithContext(ctx context.Context) GoogleProtobufEmptyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleProtobufEmptyOutput).ToGoogleProtobufEmptyPtrOutputWithContext(ctx)
}

// GoogleProtobufEmptyPtrInput is an input type that accepts GoogleProtobufEmptyArgs, GoogleProtobufEmptyPtr and GoogleProtobufEmptyPtrOutput values.
// You can construct a concrete instance of `GoogleProtobufEmptyPtrInput` via:
//
//          GoogleProtobufEmptyArgs{...}
//
//  or:
//
//          nil
type GoogleProtobufEmptyPtrInput interface {
	pulumi.Input

	ToGoogleProtobufEmptyPtrOutput() GoogleProtobufEmptyPtrOutput
	ToGoogleProtobufEmptyPtrOutputWithContext(context.Context) GoogleProtobufEmptyPtrOutput
}

type googleProtobufEmptyPtrType GoogleProtobufEmptyArgs

func GoogleProtobufEmptyPtr(v *GoogleProtobufEmptyArgs) GoogleProtobufEmptyPtrInput {
	return (*googleProtobufEmptyPtrType)(v)
}

func (*googleProtobufEmptyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleProtobufEmpty)(nil)).Elem()
}

func (i *googleProtobufEmptyPtrType) ToGoogleProtobufEmptyPtrOutput() GoogleProtobufEmptyPtrOutput {
	return i.ToGoogleProtobufEmptyPtrOutputWithContext(context.Background())
}

func (i *googleProtobufEmptyPtrType) ToGoogleProtobufEmptyPtrOutputWithContext(ctx context.Context) GoogleProtobufEmptyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleProtobufEmptyPtrOutput)
}

// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.
type GoogleProtobufEmptyOutput struct{ *pulumi.OutputState }

func (GoogleProtobufEmptyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleProtobufEmpty)(nil)).Elem()
}

func (o GoogleProtobufEmptyOutput) ToGoogleProtobufEmptyOutput() GoogleProtobufEmptyOutput {
	return o
}

func (o GoogleProtobufEmptyOutput) ToGoogleProtobufEmptyOutputWithContext(ctx context.Context) GoogleProtobufEmptyOutput {
	return o
}

func (o GoogleProtobufEmptyOutput) ToGoogleProtobufEmptyPtrOutput() GoogleProtobufEmptyPtrOutput {
	return o.ToGoogleProtobufEmptyPtrOutputWithContext(context.Background())
}

func (o GoogleProtobufEmptyOutput) ToGoogleProtobufEmptyPtrOutputWithContext(ctx context.Context) GoogleProtobufEmptyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleProtobufEmpty) *GoogleProtobufEmpty {
		return &v
	}).(GoogleProtobufEmptyPtrOutput)
}

type GoogleProtobufEmptyPtrOutput struct{ *pulumi.OutputState }

func (GoogleProtobufEmptyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleProtobufEmpty)(nil)).Elem()
}

func (o GoogleProtobufEmptyPtrOutput) ToGoogleProtobufEmptyPtrOutput() GoogleProtobufEmptyPtrOutput {
	return o
}

func (o GoogleProtobufEmptyPtrOutput) ToGoogleProtobufEmptyPtrOutputWithContext(ctx context.Context) GoogleProtobufEmptyPtrOutput {
	return o
}

func (o GoogleProtobufEmptyPtrOutput) Elem() GoogleProtobufEmptyOutput {
	return o.ApplyT(func(v *GoogleProtobufEmpty) GoogleProtobufEmpty {
		if v != nil {
			return *v
		}
		var ret GoogleProtobufEmpty
		return ret
	}).(GoogleProtobufEmptyOutput)
}

// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.
type GoogleProtobufEmptyResponse struct {
}

// GoogleProtobufEmptyResponseInput is an input type that accepts GoogleProtobufEmptyResponseArgs and GoogleProtobufEmptyResponseOutput values.
// You can construct a concrete instance of `GoogleProtobufEmptyResponseInput` via:
//
//          GoogleProtobufEmptyResponseArgs{...}
type GoogleProtobufEmptyResponseInput interface {
	pulumi.Input

	ToGoogleProtobufEmptyResponseOutput() GoogleProtobufEmptyResponseOutput
	ToGoogleProtobufEmptyResponseOutputWithContext(context.Context) GoogleProtobufEmptyResponseOutput
}

// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.
type GoogleProtobufEmptyResponseArgs struct {
}

func (GoogleProtobufEmptyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleProtobufEmptyResponse)(nil)).Elem()
}

func (i GoogleProtobufEmptyResponseArgs) ToGoogleProtobufEmptyResponseOutput() GoogleProtobufEmptyResponseOutput {
	return i.ToGoogleProtobufEmptyResponseOutputWithContext(context.Background())
}

func (i GoogleProtobufEmptyResponseArgs) ToGoogleProtobufEmptyResponseOutputWithContext(ctx context.Context) GoogleProtobufEmptyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleProtobufEmptyResponseOutput)
}

// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.
type GoogleProtobufEmptyResponseOutput struct{ *pulumi.OutputState }

func (GoogleProtobufEmptyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleProtobufEmptyResponse)(nil)).Elem()
}

func (o GoogleProtobufEmptyResponseOutput) ToGoogleProtobufEmptyResponseOutput() GoogleProtobufEmptyResponseOutput {
	return o
}

func (o GoogleProtobufEmptyResponseOutput) ToGoogleProtobufEmptyResponseOutputWithContext(ctx context.Context) GoogleProtobufEmptyResponseOutput {
	return o
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type GoogleRpcStatusResponse struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code int `pulumi:"code"`
	// A list of messages that carry the error details. There is a common set of message types for APIs to use.
	Details []map[string]string `pulumi:"details"`
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message string `pulumi:"message"`
}

// GoogleRpcStatusResponseInput is an input type that accepts GoogleRpcStatusResponseArgs and GoogleRpcStatusResponseOutput values.
// You can construct a concrete instance of `GoogleRpcStatusResponseInput` via:
//
//          GoogleRpcStatusResponseArgs{...}
type GoogleRpcStatusResponseInput interface {
	pulumi.Input

	ToGoogleRpcStatusResponseOutput() GoogleRpcStatusResponseOutput
	ToGoogleRpcStatusResponseOutputWithContext(context.Context) GoogleRpcStatusResponseOutput
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type GoogleRpcStatusResponseArgs struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code pulumi.IntInput `pulumi:"code"`
	// A list of messages that carry the error details. There is a common set of message types for APIs to use.
	Details pulumi.StringMapArrayInput `pulumi:"details"`
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message pulumi.StringInput `pulumi:"message"`
}

func (GoogleRpcStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleRpcStatusResponse)(nil)).Elem()
}

func (i GoogleRpcStatusResponseArgs) ToGoogleRpcStatusResponseOutput() GoogleRpcStatusResponseOutput {
	return i.ToGoogleRpcStatusResponseOutputWithContext(context.Background())
}

func (i GoogleRpcStatusResponseArgs) ToGoogleRpcStatusResponseOutputWithContext(ctx context.Context) GoogleRpcStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleRpcStatusResponseOutput)
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type GoogleRpcStatusResponseOutput struct{ *pulumi.OutputState }

func (GoogleRpcStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleRpcStatusResponse)(nil)).Elem()
}

func (o GoogleRpcStatusResponseOutput) ToGoogleRpcStatusResponseOutput() GoogleRpcStatusResponseOutput {
	return o
}

func (o GoogleRpcStatusResponseOutput) ToGoogleRpcStatusResponseOutputWithContext(ctx context.Context) GoogleRpcStatusResponseOutput {
	return o
}

// The status code, which should be an enum value of google.rpc.Code.
func (o GoogleRpcStatusResponseOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleRpcStatusResponse) int { return v.Code }).(pulumi.IntOutput)
}

// A list of messages that carry the error details. There is a common set of message types for APIs to use.
func (o GoogleRpcStatusResponseOutput) Details() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v GoogleRpcStatusResponse) []map[string]string { return v.Details }).(pulumi.StringMapArrayOutput)
}

// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
func (o GoogleRpcStatusResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleRpcStatusResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
type GoogleTypeDate struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day *int `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month *int `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year *int `pulumi:"year"`
}

// GoogleTypeDateInput is an input type that accepts GoogleTypeDateArgs and GoogleTypeDateOutput values.
// You can construct a concrete instance of `GoogleTypeDateInput` via:
//
//          GoogleTypeDateArgs{...}
type GoogleTypeDateInput interface {
	pulumi.Input

	ToGoogleTypeDateOutput() GoogleTypeDateOutput
	ToGoogleTypeDateOutputWithContext(context.Context) GoogleTypeDateOutput
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
type GoogleTypeDateArgs struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day pulumi.IntPtrInput `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month pulumi.IntPtrInput `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year pulumi.IntPtrInput `pulumi:"year"`
}

func (GoogleTypeDateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeDate)(nil)).Elem()
}

func (i GoogleTypeDateArgs) ToGoogleTypeDateOutput() GoogleTypeDateOutput {
	return i.ToGoogleTypeDateOutputWithContext(context.Background())
}

func (i GoogleTypeDateArgs) ToGoogleTypeDateOutputWithContext(ctx context.Context) GoogleTypeDateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeDateOutput)
}

func (i GoogleTypeDateArgs) ToGoogleTypeDatePtrOutput() GoogleTypeDatePtrOutput {
	return i.ToGoogleTypeDatePtrOutputWithContext(context.Background())
}

func (i GoogleTypeDateArgs) ToGoogleTypeDatePtrOutputWithContext(ctx context.Context) GoogleTypeDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeDateOutput).ToGoogleTypeDatePtrOutputWithContext(ctx)
}

// GoogleTypeDatePtrInput is an input type that accepts GoogleTypeDateArgs, GoogleTypeDatePtr and GoogleTypeDatePtrOutput values.
// You can construct a concrete instance of `GoogleTypeDatePtrInput` via:
//
//          GoogleTypeDateArgs{...}
//
//  or:
//
//          nil
type GoogleTypeDatePtrInput interface {
	pulumi.Input

	ToGoogleTypeDatePtrOutput() GoogleTypeDatePtrOutput
	ToGoogleTypeDatePtrOutputWithContext(context.Context) GoogleTypeDatePtrOutput
}

type googleTypeDatePtrType GoogleTypeDateArgs

func GoogleTypeDatePtr(v *GoogleTypeDateArgs) GoogleTypeDatePtrInput {
	return (*googleTypeDatePtrType)(v)
}

func (*googleTypeDatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeDate)(nil)).Elem()
}

func (i *googleTypeDatePtrType) ToGoogleTypeDatePtrOutput() GoogleTypeDatePtrOutput {
	return i.ToGoogleTypeDatePtrOutputWithContext(context.Background())
}

func (i *googleTypeDatePtrType) ToGoogleTypeDatePtrOutputWithContext(ctx context.Context) GoogleTypeDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeDatePtrOutput)
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
type GoogleTypeDateOutput struct{ *pulumi.OutputState }

func (GoogleTypeDateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeDate)(nil)).Elem()
}

func (o GoogleTypeDateOutput) ToGoogleTypeDateOutput() GoogleTypeDateOutput {
	return o
}

func (o GoogleTypeDateOutput) ToGoogleTypeDateOutputWithContext(ctx context.Context) GoogleTypeDateOutput {
	return o
}

func (o GoogleTypeDateOutput) ToGoogleTypeDatePtrOutput() GoogleTypeDatePtrOutput {
	return o.ToGoogleTypeDatePtrOutputWithContext(context.Background())
}

func (o GoogleTypeDateOutput) ToGoogleTypeDatePtrOutputWithContext(ctx context.Context) GoogleTypeDatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleTypeDate) *GoogleTypeDate {
		return &v
	}).(GoogleTypeDatePtrOutput)
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
func (o GoogleTypeDateOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleTypeDate) *int { return v.Day }).(pulumi.IntPtrOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
func (o GoogleTypeDateOutput) Month() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleTypeDate) *int { return v.Month }).(pulumi.IntPtrOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
func (o GoogleTypeDateOutput) Year() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleTypeDate) *int { return v.Year }).(pulumi.IntPtrOutput)
}

type GoogleTypeDatePtrOutput struct{ *pulumi.OutputState }

func (GoogleTypeDatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeDate)(nil)).Elem()
}

func (o GoogleTypeDatePtrOutput) ToGoogleTypeDatePtrOutput() GoogleTypeDatePtrOutput {
	return o
}

func (o GoogleTypeDatePtrOutput) ToGoogleTypeDatePtrOutputWithContext(ctx context.Context) GoogleTypeDatePtrOutput {
	return o
}

func (o GoogleTypeDatePtrOutput) Elem() GoogleTypeDateOutput {
	return o.ApplyT(func(v *GoogleTypeDate) GoogleTypeDate {
		if v != nil {
			return *v
		}
		var ret GoogleTypeDate
		return ret
	}).(GoogleTypeDateOutput)
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
func (o GoogleTypeDatePtrOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeDate) *int {
		if v == nil {
			return nil
		}
		return v.Day
	}).(pulumi.IntPtrOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
func (o GoogleTypeDatePtrOutput) Month() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeDate) *int {
		if v == nil {
			return nil
		}
		return v.Month
	}).(pulumi.IntPtrOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
func (o GoogleTypeDatePtrOutput) Year() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeDate) *int {
		if v == nil {
			return nil
		}
		return v.Year
	}).(pulumi.IntPtrOutput)
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
type GoogleTypeDateResponse struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day int `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month int `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year int `pulumi:"year"`
}

// GoogleTypeDateResponseInput is an input type that accepts GoogleTypeDateResponseArgs and GoogleTypeDateResponseOutput values.
// You can construct a concrete instance of `GoogleTypeDateResponseInput` via:
//
//          GoogleTypeDateResponseArgs{...}
type GoogleTypeDateResponseInput interface {
	pulumi.Input

	ToGoogleTypeDateResponseOutput() GoogleTypeDateResponseOutput
	ToGoogleTypeDateResponseOutputWithContext(context.Context) GoogleTypeDateResponseOutput
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
type GoogleTypeDateResponseArgs struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day pulumi.IntInput `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month pulumi.IntInput `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year pulumi.IntInput `pulumi:"year"`
}

func (GoogleTypeDateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeDateResponse)(nil)).Elem()
}

func (i GoogleTypeDateResponseArgs) ToGoogleTypeDateResponseOutput() GoogleTypeDateResponseOutput {
	return i.ToGoogleTypeDateResponseOutputWithContext(context.Background())
}

func (i GoogleTypeDateResponseArgs) ToGoogleTypeDateResponseOutputWithContext(ctx context.Context) GoogleTypeDateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeDateResponseOutput)
}

func (i GoogleTypeDateResponseArgs) ToGoogleTypeDateResponsePtrOutput() GoogleTypeDateResponsePtrOutput {
	return i.ToGoogleTypeDateResponsePtrOutputWithContext(context.Background())
}

func (i GoogleTypeDateResponseArgs) ToGoogleTypeDateResponsePtrOutputWithContext(ctx context.Context) GoogleTypeDateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeDateResponseOutput).ToGoogleTypeDateResponsePtrOutputWithContext(ctx)
}

// GoogleTypeDateResponsePtrInput is an input type that accepts GoogleTypeDateResponseArgs, GoogleTypeDateResponsePtr and GoogleTypeDateResponsePtrOutput values.
// You can construct a concrete instance of `GoogleTypeDateResponsePtrInput` via:
//
//          GoogleTypeDateResponseArgs{...}
//
//  or:
//
//          nil
type GoogleTypeDateResponsePtrInput interface {
	pulumi.Input

	ToGoogleTypeDateResponsePtrOutput() GoogleTypeDateResponsePtrOutput
	ToGoogleTypeDateResponsePtrOutputWithContext(context.Context) GoogleTypeDateResponsePtrOutput
}

type googleTypeDateResponsePtrType GoogleTypeDateResponseArgs

func GoogleTypeDateResponsePtr(v *GoogleTypeDateResponseArgs) GoogleTypeDateResponsePtrInput {
	return (*googleTypeDateResponsePtrType)(v)
}

func (*googleTypeDateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeDateResponse)(nil)).Elem()
}

func (i *googleTypeDateResponsePtrType) ToGoogleTypeDateResponsePtrOutput() GoogleTypeDateResponsePtrOutput {
	return i.ToGoogleTypeDateResponsePtrOutputWithContext(context.Background())
}

func (i *googleTypeDateResponsePtrType) ToGoogleTypeDateResponsePtrOutputWithContext(ctx context.Context) GoogleTypeDateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeDateResponsePtrOutput)
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
type GoogleTypeDateResponseOutput struct{ *pulumi.OutputState }

func (GoogleTypeDateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeDateResponse)(nil)).Elem()
}

func (o GoogleTypeDateResponseOutput) ToGoogleTypeDateResponseOutput() GoogleTypeDateResponseOutput {
	return o
}

func (o GoogleTypeDateResponseOutput) ToGoogleTypeDateResponseOutputWithContext(ctx context.Context) GoogleTypeDateResponseOutput {
	return o
}

func (o GoogleTypeDateResponseOutput) ToGoogleTypeDateResponsePtrOutput() GoogleTypeDateResponsePtrOutput {
	return o.ToGoogleTypeDateResponsePtrOutputWithContext(context.Background())
}

func (o GoogleTypeDateResponseOutput) ToGoogleTypeDateResponsePtrOutputWithContext(ctx context.Context) GoogleTypeDateResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleTypeDateResponse) *GoogleTypeDateResponse {
		return &v
	}).(GoogleTypeDateResponsePtrOutput)
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
func (o GoogleTypeDateResponseOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypeDateResponse) int { return v.Day }).(pulumi.IntOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
func (o GoogleTypeDateResponseOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypeDateResponse) int { return v.Month }).(pulumi.IntOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
func (o GoogleTypeDateResponseOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypeDateResponse) int { return v.Year }).(pulumi.IntOutput)
}

type GoogleTypeDateResponsePtrOutput struct{ *pulumi.OutputState }

func (GoogleTypeDateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeDateResponse)(nil)).Elem()
}

func (o GoogleTypeDateResponsePtrOutput) ToGoogleTypeDateResponsePtrOutput() GoogleTypeDateResponsePtrOutput {
	return o
}

func (o GoogleTypeDateResponsePtrOutput) ToGoogleTypeDateResponsePtrOutputWithContext(ctx context.Context) GoogleTypeDateResponsePtrOutput {
	return o
}

func (o GoogleTypeDateResponsePtrOutput) Elem() GoogleTypeDateResponseOutput {
	return o.ApplyT(func(v *GoogleTypeDateResponse) GoogleTypeDateResponse {
		if v != nil {
			return *v
		}
		var ret GoogleTypeDateResponse
		return ret
	}).(GoogleTypeDateResponseOutput)
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
func (o GoogleTypeDateResponsePtrOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeDateResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Day
	}).(pulumi.IntPtrOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
func (o GoogleTypeDateResponsePtrOutput) Month() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeDateResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Month
	}).(pulumi.IntPtrOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
func (o GoogleTypeDateResponsePtrOutput) Year() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeDateResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Year
	}).(pulumi.IntPtrOutput)
}

// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
type GoogleTypeTimeOfDay struct {
	// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours *int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes *int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos *int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
	Seconds *int `pulumi:"seconds"`
}

// GoogleTypeTimeOfDayInput is an input type that accepts GoogleTypeTimeOfDayArgs and GoogleTypeTimeOfDayOutput values.
// You can construct a concrete instance of `GoogleTypeTimeOfDayInput` via:
//
//          GoogleTypeTimeOfDayArgs{...}
type GoogleTypeTimeOfDayInput interface {
	pulumi.Input

	ToGoogleTypeTimeOfDayOutput() GoogleTypeTimeOfDayOutput
	ToGoogleTypeTimeOfDayOutputWithContext(context.Context) GoogleTypeTimeOfDayOutput
}

// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
type GoogleTypeTimeOfDayArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
}

func (GoogleTypeTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeTimeOfDay)(nil)).Elem()
}

func (i GoogleTypeTimeOfDayArgs) ToGoogleTypeTimeOfDayOutput() GoogleTypeTimeOfDayOutput {
	return i.ToGoogleTypeTimeOfDayOutputWithContext(context.Background())
}

func (i GoogleTypeTimeOfDayArgs) ToGoogleTypeTimeOfDayOutputWithContext(ctx context.Context) GoogleTypeTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeTimeOfDayOutput)
}

func (i GoogleTypeTimeOfDayArgs) ToGoogleTypeTimeOfDayPtrOutput() GoogleTypeTimeOfDayPtrOutput {
	return i.ToGoogleTypeTimeOfDayPtrOutputWithContext(context.Background())
}

func (i GoogleTypeTimeOfDayArgs) ToGoogleTypeTimeOfDayPtrOutputWithContext(ctx context.Context) GoogleTypeTimeOfDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeTimeOfDayOutput).ToGoogleTypeTimeOfDayPtrOutputWithContext(ctx)
}

// GoogleTypeTimeOfDayPtrInput is an input type that accepts GoogleTypeTimeOfDayArgs, GoogleTypeTimeOfDayPtr and GoogleTypeTimeOfDayPtrOutput values.
// You can construct a concrete instance of `GoogleTypeTimeOfDayPtrInput` via:
//
//          GoogleTypeTimeOfDayArgs{...}
//
//  or:
//
//          nil
type GoogleTypeTimeOfDayPtrInput interface {
	pulumi.Input

	ToGoogleTypeTimeOfDayPtrOutput() GoogleTypeTimeOfDayPtrOutput
	ToGoogleTypeTimeOfDayPtrOutputWithContext(context.Context) GoogleTypeTimeOfDayPtrOutput
}

type googleTypeTimeOfDayPtrType GoogleTypeTimeOfDayArgs

func GoogleTypeTimeOfDayPtr(v *GoogleTypeTimeOfDayArgs) GoogleTypeTimeOfDayPtrInput {
	return (*googleTypeTimeOfDayPtrType)(v)
}

func (*googleTypeTimeOfDayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeTimeOfDay)(nil)).Elem()
}

func (i *googleTypeTimeOfDayPtrType) ToGoogleTypeTimeOfDayPtrOutput() GoogleTypeTimeOfDayPtrOutput {
	return i.ToGoogleTypeTimeOfDayPtrOutputWithContext(context.Background())
}

func (i *googleTypeTimeOfDayPtrType) ToGoogleTypeTimeOfDayPtrOutputWithContext(ctx context.Context) GoogleTypeTimeOfDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeTimeOfDayPtrOutput)
}

// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
type GoogleTypeTimeOfDayOutput struct{ *pulumi.OutputState }

func (GoogleTypeTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeTimeOfDay)(nil)).Elem()
}

func (o GoogleTypeTimeOfDayOutput) ToGoogleTypeTimeOfDayOutput() GoogleTypeTimeOfDayOutput {
	return o
}

func (o GoogleTypeTimeOfDayOutput) ToGoogleTypeTimeOfDayOutputWithContext(ctx context.Context) GoogleTypeTimeOfDayOutput {
	return o
}

func (o GoogleTypeTimeOfDayOutput) ToGoogleTypeTimeOfDayPtrOutput() GoogleTypeTimeOfDayPtrOutput {
	return o.ToGoogleTypeTimeOfDayPtrOutputWithContext(context.Background())
}

func (o GoogleTypeTimeOfDayOutput) ToGoogleTypeTimeOfDayPtrOutputWithContext(ctx context.Context) GoogleTypeTimeOfDayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleTypeTimeOfDay) *GoogleTypeTimeOfDay {
		return &v
	}).(GoogleTypeTimeOfDayPtrOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o GoogleTypeTimeOfDayOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleTypeTimeOfDay) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o GoogleTypeTimeOfDayOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleTypeTimeOfDay) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o GoogleTypeTimeOfDayOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleTypeTimeOfDay) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
func (o GoogleTypeTimeOfDayOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleTypeTimeOfDay) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type GoogleTypeTimeOfDayPtrOutput struct{ *pulumi.OutputState }

func (GoogleTypeTimeOfDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeTimeOfDay)(nil)).Elem()
}

func (o GoogleTypeTimeOfDayPtrOutput) ToGoogleTypeTimeOfDayPtrOutput() GoogleTypeTimeOfDayPtrOutput {
	return o
}

func (o GoogleTypeTimeOfDayPtrOutput) ToGoogleTypeTimeOfDayPtrOutputWithContext(ctx context.Context) GoogleTypeTimeOfDayPtrOutput {
	return o
}

func (o GoogleTypeTimeOfDayPtrOutput) Elem() GoogleTypeTimeOfDayOutput {
	return o.ApplyT(func(v *GoogleTypeTimeOfDay) GoogleTypeTimeOfDay {
		if v != nil {
			return *v
		}
		var ret GoogleTypeTimeOfDay
		return ret
	}).(GoogleTypeTimeOfDayOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o GoogleTypeTimeOfDayPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o GoogleTypeTimeOfDayPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o GoogleTypeTimeOfDayPtrOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Nanos
	}).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
func (o GoogleTypeTimeOfDayPtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeTimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Seconds
	}).(pulumi.IntPtrOutput)
}

// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
type GoogleTypeTimeOfDayResponse struct {
	// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
	Seconds int `pulumi:"seconds"`
}

// GoogleTypeTimeOfDayResponseInput is an input type that accepts GoogleTypeTimeOfDayResponseArgs and GoogleTypeTimeOfDayResponseOutput values.
// You can construct a concrete instance of `GoogleTypeTimeOfDayResponseInput` via:
//
//          GoogleTypeTimeOfDayResponseArgs{...}
type GoogleTypeTimeOfDayResponseInput interface {
	pulumi.Input

	ToGoogleTypeTimeOfDayResponseOutput() GoogleTypeTimeOfDayResponseOutput
	ToGoogleTypeTimeOfDayResponseOutputWithContext(context.Context) GoogleTypeTimeOfDayResponseOutput
}

// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
type GoogleTypeTimeOfDayResponseArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (GoogleTypeTimeOfDayResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeTimeOfDayResponse)(nil)).Elem()
}

func (i GoogleTypeTimeOfDayResponseArgs) ToGoogleTypeTimeOfDayResponseOutput() GoogleTypeTimeOfDayResponseOutput {
	return i.ToGoogleTypeTimeOfDayResponseOutputWithContext(context.Background())
}

func (i GoogleTypeTimeOfDayResponseArgs) ToGoogleTypeTimeOfDayResponseOutputWithContext(ctx context.Context) GoogleTypeTimeOfDayResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeTimeOfDayResponseOutput)
}

func (i GoogleTypeTimeOfDayResponseArgs) ToGoogleTypeTimeOfDayResponsePtrOutput() GoogleTypeTimeOfDayResponsePtrOutput {
	return i.ToGoogleTypeTimeOfDayResponsePtrOutputWithContext(context.Background())
}

func (i GoogleTypeTimeOfDayResponseArgs) ToGoogleTypeTimeOfDayResponsePtrOutputWithContext(ctx context.Context) GoogleTypeTimeOfDayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeTimeOfDayResponseOutput).ToGoogleTypeTimeOfDayResponsePtrOutputWithContext(ctx)
}

// GoogleTypeTimeOfDayResponsePtrInput is an input type that accepts GoogleTypeTimeOfDayResponseArgs, GoogleTypeTimeOfDayResponsePtr and GoogleTypeTimeOfDayResponsePtrOutput values.
// You can construct a concrete instance of `GoogleTypeTimeOfDayResponsePtrInput` via:
//
//          GoogleTypeTimeOfDayResponseArgs{...}
//
//  or:
//
//          nil
type GoogleTypeTimeOfDayResponsePtrInput interface {
	pulumi.Input

	ToGoogleTypeTimeOfDayResponsePtrOutput() GoogleTypeTimeOfDayResponsePtrOutput
	ToGoogleTypeTimeOfDayResponsePtrOutputWithContext(context.Context) GoogleTypeTimeOfDayResponsePtrOutput
}

type googleTypeTimeOfDayResponsePtrType GoogleTypeTimeOfDayResponseArgs

func GoogleTypeTimeOfDayResponsePtr(v *GoogleTypeTimeOfDayResponseArgs) GoogleTypeTimeOfDayResponsePtrInput {
	return (*googleTypeTimeOfDayResponsePtrType)(v)
}

func (*googleTypeTimeOfDayResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeTimeOfDayResponse)(nil)).Elem()
}

func (i *googleTypeTimeOfDayResponsePtrType) ToGoogleTypeTimeOfDayResponsePtrOutput() GoogleTypeTimeOfDayResponsePtrOutput {
	return i.ToGoogleTypeTimeOfDayResponsePtrOutputWithContext(context.Background())
}

func (i *googleTypeTimeOfDayResponsePtrType) ToGoogleTypeTimeOfDayResponsePtrOutputWithContext(ctx context.Context) GoogleTypeTimeOfDayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeTimeOfDayResponsePtrOutput)
}

// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
type GoogleTypeTimeOfDayResponseOutput struct{ *pulumi.OutputState }

func (GoogleTypeTimeOfDayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeTimeOfDayResponse)(nil)).Elem()
}

func (o GoogleTypeTimeOfDayResponseOutput) ToGoogleTypeTimeOfDayResponseOutput() GoogleTypeTimeOfDayResponseOutput {
	return o
}

func (o GoogleTypeTimeOfDayResponseOutput) ToGoogleTypeTimeOfDayResponseOutputWithContext(ctx context.Context) GoogleTypeTimeOfDayResponseOutput {
	return o
}

func (o GoogleTypeTimeOfDayResponseOutput) ToGoogleTypeTimeOfDayResponsePtrOutput() GoogleTypeTimeOfDayResponsePtrOutput {
	return o.ToGoogleTypeTimeOfDayResponsePtrOutputWithContext(context.Background())
}

func (o GoogleTypeTimeOfDayResponseOutput) ToGoogleTypeTimeOfDayResponsePtrOutputWithContext(ctx context.Context) GoogleTypeTimeOfDayResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleTypeTimeOfDayResponse) *GoogleTypeTimeOfDayResponse {
		return &v
	}).(GoogleTypeTimeOfDayResponsePtrOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o GoogleTypeTimeOfDayResponseOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypeTimeOfDayResponse) int { return v.Hours }).(pulumi.IntOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o GoogleTypeTimeOfDayResponseOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypeTimeOfDayResponse) int { return v.Minutes }).(pulumi.IntOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o GoogleTypeTimeOfDayResponseOutput) Nanos() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypeTimeOfDayResponse) int { return v.Nanos }).(pulumi.IntOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
func (o GoogleTypeTimeOfDayResponseOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypeTimeOfDayResponse) int { return v.Seconds }).(pulumi.IntOutput)
}

type GoogleTypeTimeOfDayResponsePtrOutput struct{ *pulumi.OutputState }

func (GoogleTypeTimeOfDayResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeTimeOfDayResponse)(nil)).Elem()
}

func (o GoogleTypeTimeOfDayResponsePtrOutput) ToGoogleTypeTimeOfDayResponsePtrOutput() GoogleTypeTimeOfDayResponsePtrOutput {
	return o
}

func (o GoogleTypeTimeOfDayResponsePtrOutput) ToGoogleTypeTimeOfDayResponsePtrOutputWithContext(ctx context.Context) GoogleTypeTimeOfDayResponsePtrOutput {
	return o
}

func (o GoogleTypeTimeOfDayResponsePtrOutput) Elem() GoogleTypeTimeOfDayResponseOutput {
	return o.ApplyT(func(v *GoogleTypeTimeOfDayResponse) GoogleTypeTimeOfDayResponse {
		if v != nil {
			return *v
		}
		var ret GoogleTypeTimeOfDayResponse
		return ret
	}).(GoogleTypeTimeOfDayResponseOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o GoogleTypeTimeOfDayResponsePtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeTimeOfDayResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Hours
	}).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o GoogleTypeTimeOfDayResponsePtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeTimeOfDayResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Minutes
	}).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o GoogleTypeTimeOfDayResponsePtrOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeTimeOfDayResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Nanos
	}).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
func (o GoogleTypeTimeOfDayResponsePtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeTimeOfDayResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Seconds
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ActionOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ActionArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ActionResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ActionResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2AnalyzeDataSourceRiskDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2AuxiliaryTableOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2AuxiliaryTableArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2AuxiliaryTableResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2AuxiliaryTableResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BigQueryFieldOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BigQueryFieldPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BigQueryFieldResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BigQueryFieldResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BigQueryOptionsOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BigQueryOptionsPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BigQueryOptionsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BigQueryOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BigQueryTableOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BigQueryTablePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BigQueryTableResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BigQueryTableResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BucketOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BucketArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BucketResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BucketResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BucketingConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BucketingConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2BucketingConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CategoricalStatsConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CategoricalStatsConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CategoricalStatsConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CategoricalStatsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CategoricalStatsHistogramBucketResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CategoricalStatsResultResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CategoricalStatsResultResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CharacterMaskConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CharacterMaskConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CharacterMaskConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CharsToIgnoreOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CharsToIgnoreArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CharsToIgnoreResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CharsToIgnoreResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStorageFileSetOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStorageFileSetPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStorageFileSetResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStorageFileSetResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStorageOptionsOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStorageOptionsPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStorageOptionsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStorageOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStoragePathOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStoragePathPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStoragePathResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStoragePathResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStorageRegexFileSetOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStorageRegexFileSetPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStorageRegexFileSetResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CloudStorageRegexFileSetResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ConditionOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ConditionArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ConditionResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ConditionsOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ConditionsPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ConditionsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CryptoDeterministicConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CryptoDeterministicConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CryptoDeterministicConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CryptoHashConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CryptoHashConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CryptoHashConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CryptoKeyOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CryptoKeyPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CryptoKeyResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CustomInfoTypeOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CustomInfoTypeArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CustomInfoTypeResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2CustomInfoTypeResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DatastoreOptionsOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DatastoreOptionsPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DatastoreOptionsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DatastoreOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DateShiftConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DateShiftConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DateShiftConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DeidentifyConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DeidentifyConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DeidentifyConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DeidentifyConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DeltaPresenceEstimationConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DeltaPresenceEstimationConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DeltaPresenceEstimationConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DeltaPresenceEstimationResultResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DeltaPresenceEstimationResultResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DetectionRuleOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DetectionRuleArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DetectionRuleResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DetectionRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DictionaryOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DictionaryPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DictionaryResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2DictionaryResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2EntityIdOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2EntityIdPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2EntityIdResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2EntityIdResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ErrorResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ExcludeInfoTypesOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ExcludeInfoTypesPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ExcludeInfoTypesResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ExclusionRuleOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ExclusionRulePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ExclusionRuleResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ExpressionsOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ExpressionsPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ExpressionsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FieldIdOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FieldIdPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FieldIdArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FieldIdResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FieldIdResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FieldIdResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FieldTransformationOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FieldTransformationArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FieldTransformationResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FieldTransformationResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FileSetOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FileSetPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FileSetResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FileSetResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FindingLimitsOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FindingLimitsPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FindingLimitsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FindingLimitsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FixedSizeBucketingConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FixedSizeBucketingConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2FixedSizeBucketingConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2HotwordRuleOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2HotwordRulePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2HotwordRuleResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2HybridInspectStatisticsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2HybridInspectStatisticsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2HybridOptionsOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2HybridOptionsPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2HybridOptionsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2HybridOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeLimitOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeLimitArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeLimitResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeLimitResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeStatsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeStatsResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeTransformationOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeTransformationArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeTransformationResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeTransformationResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeTransformationsOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeTransformationsPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeTransformationsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InfoTypeTransformationsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectDataSourceDetailsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectDataSourceDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectJobConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectJobConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectJobConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectJobConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectTemplateResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectTemplateResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectionRuleOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectionRuleArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectionRuleResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectionRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectionRuleSetOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectionRuleSetArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectionRuleSetResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2InspectionRuleSetResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2JobNotificationEmailsOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2JobNotificationEmailsPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2JobNotificationEmailsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KAnonymityConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KAnonymityConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KAnonymityConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KAnonymityConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KAnonymityEquivalenceClassResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KAnonymityHistogramBucketResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KAnonymityHistogramBucketResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KAnonymityResultResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KAnonymityResultResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KMapEstimationConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KMapEstimationConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KMapEstimationConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KMapEstimationConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KMapEstimationHistogramBucketResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KMapEstimationQuasiIdValuesResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KMapEstimationResultResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KMapEstimationResultResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KindExpressionOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KindExpressionPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KindExpressionResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KindExpressionResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KmsWrappedCryptoKeyOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KmsWrappedCryptoKeyPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2KmsWrappedCryptoKeyResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LDiversityConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LDiversityConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LDiversityConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LDiversityConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LDiversityEquivalenceClassResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LDiversityEquivalenceClassResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LDiversityHistogramBucketResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LDiversityHistogramBucketResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LDiversityResultResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LDiversityResultResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LargeCustomDictionaryConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LargeCustomDictionaryConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LargeCustomDictionaryConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LargeCustomDictionaryConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LargeCustomDictionaryStatsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LargeCustomDictionaryStatsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LeaveUntransformedOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LeaveUntransformedPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LeaveUntransformedResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LeaveUntransformedResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LikelihoodAdjustmentOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LikelihoodAdjustmentPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2LikelihoodAdjustmentResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ManualOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ManualPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ManualResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2NumericalStatsConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2NumericalStatsConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2NumericalStatsConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2NumericalStatsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2NumericalStatsResultResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2NumericalStatsResultResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2OutputStorageConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2OutputStorageConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2OutputStorageConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PartitionIdOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PartitionIdPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PartitionIdResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PartitionIdResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PrimitiveTransformationOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PrimitiveTransformationPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PrimitiveTransformationResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PrivacyMetricOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PrivacyMetricPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PrivacyMetricResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PrivacyMetricResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ProximityOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ProximityPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ProximityResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PublishSummaryToCsccOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PublishSummaryToCsccPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PublishSummaryToCsccResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PublishToPubSubOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PublishToPubSubPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PublishToPubSubResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PublishToStackdriverOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PublishToStackdriverPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2PublishToStackdriverResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2QuasiIdOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2QuasiIdArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2QuasiIdFieldOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2QuasiIdFieldArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2QuasiIdFieldResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2QuasiIdFieldResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2QuasiIdResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2QuasiIdResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2QuasiIdentifierFieldOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2QuasiIdentifierFieldArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2QuasiIdentifierFieldResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2QuasiIdentifierFieldResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RecordConditionOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RecordConditionPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RecordConditionResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RecordSuppressionOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RecordSuppressionArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RecordSuppressionResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RecordSuppressionResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RecordTransformationsOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RecordTransformationsPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RecordTransformationsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RecordTransformationsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RedactConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RedactConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RedactConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RegexOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RegexPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RegexResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RegexResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ReplaceValueConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ReplaceValueConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ReplaceValueConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ReplaceWithInfoTypeConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ReplaceWithInfoTypeConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RequestedOptionsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RequestedOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RequestedRiskAnalysisOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ResultResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ResultResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RiskAnalysisJobConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RiskAnalysisJobConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RiskAnalysisJobConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2RiskAnalysisJobConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2SaveFindingsOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2SaveFindingsPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2SaveFindingsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ScheduleOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2SchedulePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ScheduleResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StatisticalTableOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StatisticalTableArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StatisticalTableResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StatisticalTableResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StorageConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StorageConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StorageConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StorageConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StoredInfoTypeConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StoredInfoTypeConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StoredInfoTypeConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StoredInfoTypeConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StoredInfoTypeStatsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StoredInfoTypeStatsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StoredInfoTypeVersionResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StoredInfoTypeVersionResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StoredInfoTypeVersionResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StoredTypeOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StoredTypePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2StoredTypeResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2SurrogateTypeOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2SurrogateTypePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2SurrogateTypeResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TableOptionsOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TableOptionsPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TableOptionsResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TableOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TaggedFieldOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TaggedFieldArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TaggedFieldResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TaggedFieldResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ThrowErrorOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ThrowErrorPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ThrowErrorResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ThrowErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TimePartConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TimePartConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TimePartConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TimespanConfigOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TimespanConfigPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TimespanConfigResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TimespanConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TransformationErrorHandlingOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TransformationErrorHandlingPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TransformationErrorHandlingResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TransformationErrorHandlingResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TransientCryptoKeyOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TransientCryptoKeyPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TransientCryptoKeyResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TriggerOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TriggerArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TriggerResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2TriggerResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2UnwrappedCryptoKeyOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2UnwrappedCryptoKeyPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2UnwrappedCryptoKeyResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ValueOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ValuePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ValueFrequencyResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ValueFrequencyResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ValueResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ValueResponsePtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2ValueResponseArrayOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2WordListOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2WordListPtrOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2WordListResponseOutput{})
	pulumi.RegisterOutputType(GooglePrivacyDlpV2WordListResponsePtrOutput{})
	pulumi.RegisterOutputType(GoogleProtobufEmptyOutput{})
	pulumi.RegisterOutputType(GoogleProtobufEmptyPtrOutput{})
	pulumi.RegisterOutputType(GoogleProtobufEmptyResponseOutput{})
	pulumi.RegisterOutputType(GoogleRpcStatusResponseOutput{})
	pulumi.RegisterOutputType(GoogleTypeDateOutput{})
	pulumi.RegisterOutputType(GoogleTypeDatePtrOutput{})
	pulumi.RegisterOutputType(GoogleTypeDateResponseOutput{})
	pulumi.RegisterOutputType(GoogleTypeDateResponsePtrOutput{})
	pulumi.RegisterOutputType(GoogleTypeTimeOfDayOutput{})
	pulumi.RegisterOutputType(GoogleTypeTimeOfDayPtrOutput{})
	pulumi.RegisterOutputType(GoogleTypeTimeOfDayResponseOutput{})
	pulumi.RegisterOutputType(GoogleTypeTimeOfDayResponsePtrOutput{})
}
