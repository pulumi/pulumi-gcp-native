// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GooglePrivacyDlpV2BigQueryOptionsSampleMethod pulumi.String

const (
	GooglePrivacyDlpV2BigQueryOptionsSampleMethodSampleMethodUnspecified = GooglePrivacyDlpV2BigQueryOptionsSampleMethod("SAMPLE_METHOD_UNSPECIFIED")
	// Scan groups of rows in the order BigQuery provides (default). Multiple groups of rows may be scanned in parallel, so results may not appear in the same order the rows are read.
	GooglePrivacyDlpV2BigQueryOptionsSampleMethodTop = GooglePrivacyDlpV2BigQueryOptionsSampleMethod("TOP")
	// Randomly pick groups of rows to scan.
	GooglePrivacyDlpV2BigQueryOptionsSampleMethodRandomStart = GooglePrivacyDlpV2BigQueryOptionsSampleMethod("RANDOM_START")
)

func (GooglePrivacyDlpV2BigQueryOptionsSampleMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2BigQueryOptionsSampleMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2BigQueryOptionsSampleMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2BigQueryOptionsSampleMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2BigQueryOptionsSampleMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Common characters to not transform when masking. Useful to avoid removing punctuation.
type GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore pulumi.String

const (
	// Unused.
	GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnoreCommonCharsToIgnoreUnspecified = GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore("COMMON_CHARS_TO_IGNORE_UNSPECIFIED")
	// 0-9
	GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnoreNumeric = GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore("NUMERIC")
	// A-Z
	GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnoreAlphaUpperCase = GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore("ALPHA_UPPER_CASE")
	// a-z
	GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnoreAlphaLowerCase = GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore("ALPHA_LOWER_CASE")
	// US Punctuation, one of !"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
	GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnorePunctuation = GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore("PUNCTUATION")
	// Whitespace character, one of [ \t\n\x0B\f\r]
	GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnoreWhitespace = GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore("WHITESPACE")
)

func (GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem pulumi.String

const (
	// Includes all files.
	GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemFileTypeUnspecified = GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem("FILE_TYPE_UNSPECIFIED")
	// Includes all file extensions not covered by another entry. Binary scanning attempts to convert the content of the file to utf_8 to scan the file. If you wish to avoid this fall back, specify one or more of the other FileType's in your storage scan.
	GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemBinaryFile = GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem("BINARY_FILE")
	// Included file extensions: asc,asp, aspx, brf, c, cc,cfm, cgi, cpp, csv, cxx, c++, cs, css, dart, dat, dot, eml,, epbub, ged, go, h, hh, hpp, hxx, h++, hs, html, htm, mkd, markdown, m, ml, mli, perl, pl, plist, pm, php, phtml, pht, properties, py, pyw, rb, rbw, rs, rss, rc, scala, sh, sql, swift, tex, shtml, shtm, xhtml, lhs, ics, ini, java, js, json, kix, kml, ocaml, md, txt, text, tsv, vb, vcard, vcs, wml, xcodeproj, xml, xsl, xsd, yml, yaml.
	GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemTextFile = GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem("TEXT_FILE")
	// Included file extensions: bmp, gif, jpg, jpeg, jpe, png. bytes_limit_per_file has no effect on image files. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.
	GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemImage = GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem("IMAGE")
	// Word files >30 MB will be scanned as binary files. Included file extensions: docx, dotx, docm, dotm
	GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemWord = GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem("WORD")
	// PDF files >30 MB will be scanned as binary files. Included file extensions: pdf
	GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemPdf = GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem("PDF")
	// Included file extensions: avro
	GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemAvro = GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem("AVRO")
	// Included file extensions: csv
	GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemCsv = GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem("CSV")
	// Included file extensions: tsv
	GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemTsv = GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem("TSV")
)

func (GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayInput is an input type that accepts GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArray and GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayInput` via:
//
//          GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArray{ GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArgs{...} }
type GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput() GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput
	ToGooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutputWithContext(context.Context) GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput
}

type GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArray []GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem

func (GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem)(nil)).Elem()
}

func (i GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArray) ToGooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput() GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput {
	return i.ToGooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArray) ToGooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput)
}

type GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem)(nil)).Elem()
}

func (o GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput) ToGooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput() GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput) ToGooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2CloudStorageOptionsFileTypesItemArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}

type GooglePrivacyDlpV2CloudStorageOptionsSampleMethod pulumi.String

const (
	GooglePrivacyDlpV2CloudStorageOptionsSampleMethodSampleMethodUnspecified = GooglePrivacyDlpV2CloudStorageOptionsSampleMethod("SAMPLE_METHOD_UNSPECIFIED")
	// Scan from the top (default).
	GooglePrivacyDlpV2CloudStorageOptionsSampleMethodTop = GooglePrivacyDlpV2CloudStorageOptionsSampleMethod("TOP")
	// For each file larger than bytes_limit_per_file, randomly pick the offset to start scanning. The scanned bytes are contiguous.
	GooglePrivacyDlpV2CloudStorageOptionsSampleMethodRandomStart = GooglePrivacyDlpV2CloudStorageOptionsSampleMethod("RANDOM_START")
)

func (GooglePrivacyDlpV2CloudStorageOptionsSampleMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2CloudStorageOptionsSampleMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2CloudStorageOptionsSampleMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2CloudStorageOptionsSampleMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2CloudStorageOptionsSampleMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. Operator used to compare the field or infoType to the value.
type GooglePrivacyDlpV2ConditionOperator pulumi.String

const (
	// Unused
	GooglePrivacyDlpV2ConditionOperatorRelationalOperatorUnspecified = GooglePrivacyDlpV2ConditionOperator("RELATIONAL_OPERATOR_UNSPECIFIED")
	// Equal. Attempts to match even with incompatible types.
	GooglePrivacyDlpV2ConditionOperatorEqualTo = GooglePrivacyDlpV2ConditionOperator("EQUAL_TO")
	// Not equal to. Attempts to match even with incompatible types.
	GooglePrivacyDlpV2ConditionOperatorNotEqualTo = GooglePrivacyDlpV2ConditionOperator("NOT_EQUAL_TO")
	// Greater than.
	GooglePrivacyDlpV2ConditionOperatorGreaterThan = GooglePrivacyDlpV2ConditionOperator("GREATER_THAN")
	// Less than.
	GooglePrivacyDlpV2ConditionOperatorLessThan = GooglePrivacyDlpV2ConditionOperator("LESS_THAN")
	// Greater than or equals.
	GooglePrivacyDlpV2ConditionOperatorGreaterThanOrEquals = GooglePrivacyDlpV2ConditionOperator("GREATER_THAN_OR_EQUALS")
	// Less than or equals.
	GooglePrivacyDlpV2ConditionOperatorLessThanOrEquals = GooglePrivacyDlpV2ConditionOperator("LESS_THAN_OR_EQUALS")
	// Exists
	GooglePrivacyDlpV2ConditionOperatorExists = GooglePrivacyDlpV2ConditionOperator("EXISTS")
)

func (GooglePrivacyDlpV2ConditionOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2ConditionOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2ConditionOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2ConditionOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2ConditionOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Common alphabets.
type GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet pulumi.String

const (
	// Unused.
	GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabetFfxCommonNativeAlphabetUnspecified = GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet("FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED")
	// `[0-9]` (radix of 10)
	GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabetNumeric = GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet("NUMERIC")
	// `[0-9A-F]` (radix of 16)
	GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabetHexadecimal = GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet("HEXADECIMAL")
	// `[0-9A-Z]` (radix of 36)
	GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabetUpperCaseAlphaNumeric = GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet("UPPER_CASE_ALPHA_NUMERIC")
	// `[0-9A-Za-z]` (radix of 62)
	GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabetAlphaNumeric = GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet("ALPHA_NUMERIC")
)

func (GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.
type GooglePrivacyDlpV2CustomInfoTypeExclusionType pulumi.String

const (
	// A finding of this custom info type will not be excluded from results.
	GooglePrivacyDlpV2CustomInfoTypeExclusionTypeExclusionTypeUnspecified = GooglePrivacyDlpV2CustomInfoTypeExclusionType("EXCLUSION_TYPE_UNSPECIFIED")
	// A finding of this custom info type will be excluded from final results, but can still affect rule execution.
	GooglePrivacyDlpV2CustomInfoTypeExclusionTypeExclusionTypeExclude = GooglePrivacyDlpV2CustomInfoTypeExclusionType("EXCLUSION_TYPE_EXCLUDE")
)

func (GooglePrivacyDlpV2CustomInfoTypeExclusionType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2CustomInfoTypeExclusionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2CustomInfoTypeExclusionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2CustomInfoTypeExclusionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2CustomInfoTypeExclusionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.
type GooglePrivacyDlpV2CustomInfoTypeLikelihood pulumi.String

const (
	// Default value; same as POSSIBLE.
	GooglePrivacyDlpV2CustomInfoTypeLikelihoodLikelihoodUnspecified = GooglePrivacyDlpV2CustomInfoTypeLikelihood("LIKELIHOOD_UNSPECIFIED")
	// Few matching elements.
	GooglePrivacyDlpV2CustomInfoTypeLikelihoodVeryUnlikely = GooglePrivacyDlpV2CustomInfoTypeLikelihood("VERY_UNLIKELY")
	GooglePrivacyDlpV2CustomInfoTypeLikelihoodUnlikely     = GooglePrivacyDlpV2CustomInfoTypeLikelihood("UNLIKELY")
	// Some matching elements.
	GooglePrivacyDlpV2CustomInfoTypeLikelihoodPossible = GooglePrivacyDlpV2CustomInfoTypeLikelihood("POSSIBLE")
	GooglePrivacyDlpV2CustomInfoTypeLikelihoodLikely   = GooglePrivacyDlpV2CustomInfoTypeLikelihood("LIKELY")
	// Many matching elements.
	GooglePrivacyDlpV2CustomInfoTypeLikelihoodVeryLikely = GooglePrivacyDlpV2CustomInfoTypeLikelihood("VERY_LIKELY")
)

func (GooglePrivacyDlpV2CustomInfoTypeLikelihood) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2CustomInfoTypeLikelihood) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2CustomInfoTypeLikelihood) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2CustomInfoTypeLikelihood) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2CustomInfoTypeLikelihood) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// How the rule is applied, see MatchingType documentation for details.
type GooglePrivacyDlpV2ExclusionRuleMatchingType pulumi.String

const (
	// Invalid.
	GooglePrivacyDlpV2ExclusionRuleMatchingTypeMatchingTypeUnspecified = GooglePrivacyDlpV2ExclusionRuleMatchingType("MATCHING_TYPE_UNSPECIFIED")
	// Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings
	GooglePrivacyDlpV2ExclusionRuleMatchingTypeMatchingTypeFullMatch = GooglePrivacyDlpV2ExclusionRuleMatchingType("MATCHING_TYPE_FULL_MATCH")
	// Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings
	GooglePrivacyDlpV2ExclusionRuleMatchingTypeMatchingTypePartialMatch = GooglePrivacyDlpV2ExclusionRuleMatchingType("MATCHING_TYPE_PARTIAL_MATCH")
	// Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings
	GooglePrivacyDlpV2ExclusionRuleMatchingTypeMatchingTypeInverseMatch = GooglePrivacyDlpV2ExclusionRuleMatchingType("MATCHING_TYPE_INVERSE_MATCH")
)

func (GooglePrivacyDlpV2ExclusionRuleMatchingType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2ExclusionRuleMatchingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2ExclusionRuleMatchingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2ExclusionRuleMatchingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2ExclusionRuleMatchingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The operator to apply to the result of conditions. Default and currently only supported value is `AND`.
type GooglePrivacyDlpV2ExpressionsLogicalOperator pulumi.String

const (
	// Unused
	GooglePrivacyDlpV2ExpressionsLogicalOperatorLogicalOperatorUnspecified = GooglePrivacyDlpV2ExpressionsLogicalOperator("LOGICAL_OPERATOR_UNSPECIFIED")
	// Conditional AND
	GooglePrivacyDlpV2ExpressionsLogicalOperatorAnd = GooglePrivacyDlpV2ExpressionsLogicalOperator("AND")
)

func (GooglePrivacyDlpV2ExpressionsLogicalOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2ExpressionsLogicalOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2ExpressionsLogicalOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2ExpressionsLogicalOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2ExpressionsLogicalOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GooglePrivacyDlpV2InspectConfigContentOptionsItem pulumi.String

const (
	// Includes entire content of a file or a data stream.
	GooglePrivacyDlpV2InspectConfigContentOptionsItemContentUnspecified = GooglePrivacyDlpV2InspectConfigContentOptionsItem("CONTENT_UNSPECIFIED")
	// Text content within the data, excluding any metadata.
	GooglePrivacyDlpV2InspectConfigContentOptionsItemContentText = GooglePrivacyDlpV2InspectConfigContentOptionsItem("CONTENT_TEXT")
	// Images found in the data.
	GooglePrivacyDlpV2InspectConfigContentOptionsItemContentImage = GooglePrivacyDlpV2InspectConfigContentOptionsItem("CONTENT_IMAGE")
)

func (GooglePrivacyDlpV2InspectConfigContentOptionsItem) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2InspectConfigContentOptionsItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2InspectConfigContentOptionsItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2InspectConfigContentOptionsItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2InspectConfigContentOptionsItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayInput is an input type that accepts GooglePrivacyDlpV2InspectConfigContentOptionsItemArray and GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput values.
// You can construct a concrete instance of `GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayInput` via:
//
//          GooglePrivacyDlpV2InspectConfigContentOptionsItemArray{ GooglePrivacyDlpV2InspectConfigContentOptionsItemArgs{...} }
type GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayInput interface {
	pulumi.Input

	ToGooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput() GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput
	ToGooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutputWithContext(context.Context) GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput
}

type GooglePrivacyDlpV2InspectConfigContentOptionsItemArray []GooglePrivacyDlpV2InspectConfigContentOptionsItem

func (GooglePrivacyDlpV2InspectConfigContentOptionsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InspectConfigContentOptionsItem)(nil)).Elem()
}

func (i GooglePrivacyDlpV2InspectConfigContentOptionsItemArray) ToGooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput() GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput {
	return i.ToGooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutputWithContext(context.Background())
}

func (i GooglePrivacyDlpV2InspectConfigContentOptionsItemArray) ToGooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput)
}

type GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput struct{ *pulumi.OutputState }

func (GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GooglePrivacyDlpV2InspectConfigContentOptionsItem)(nil)).Elem()
}

func (o GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput) ToGooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput() GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput) ToGooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutputWithContext(ctx context.Context) GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput {
	return o
}

func (o GooglePrivacyDlpV2InspectConfigContentOptionsItemArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]GooglePrivacyDlpV2InspectConfigContentOptionsItem)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}

// Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.
type GooglePrivacyDlpV2InspectConfigMinLikelihood pulumi.String

const (
	// Default value; same as POSSIBLE.
	GooglePrivacyDlpV2InspectConfigMinLikelihoodLikelihoodUnspecified = GooglePrivacyDlpV2InspectConfigMinLikelihood("LIKELIHOOD_UNSPECIFIED")
	// Few matching elements.
	GooglePrivacyDlpV2InspectConfigMinLikelihoodVeryUnlikely = GooglePrivacyDlpV2InspectConfigMinLikelihood("VERY_UNLIKELY")
	GooglePrivacyDlpV2InspectConfigMinLikelihoodUnlikely     = GooglePrivacyDlpV2InspectConfigMinLikelihood("UNLIKELY")
	// Some matching elements.
	GooglePrivacyDlpV2InspectConfigMinLikelihoodPossible = GooglePrivacyDlpV2InspectConfigMinLikelihood("POSSIBLE")
	GooglePrivacyDlpV2InspectConfigMinLikelihoodLikely   = GooglePrivacyDlpV2InspectConfigMinLikelihood("LIKELY")
	// Many matching elements.
	GooglePrivacyDlpV2InspectConfigMinLikelihoodVeryLikely = GooglePrivacyDlpV2InspectConfigMinLikelihood("VERY_LIKELY")
)

func (GooglePrivacyDlpV2InspectConfigMinLikelihood) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2InspectConfigMinLikelihood) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2InspectConfigMinLikelihood) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2InspectConfigMinLikelihood) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2InspectConfigMinLikelihood) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Set the likelihood of a finding to a fixed value.
type GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood pulumi.String

const (
	// Default value; same as POSSIBLE.
	GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodLikelihoodUnspecified = GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood("LIKELIHOOD_UNSPECIFIED")
	// Few matching elements.
	GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodVeryUnlikely = GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood("VERY_UNLIKELY")
	GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodUnlikely     = GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood("UNLIKELY")
	// Some matching elements.
	GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodPossible = GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood("POSSIBLE")
	GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodLikely   = GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood("LIKELY")
	// Many matching elements.
	GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodVeryLikely = GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood("VERY_LIKELY")
)

func (GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.
type GooglePrivacyDlpV2OutputStorageConfigOutputSchema pulumi.String

const (
	// Unused.
	GooglePrivacyDlpV2OutputStorageConfigOutputSchemaOutputSchemaUnspecified = GooglePrivacyDlpV2OutputStorageConfigOutputSchema("OUTPUT_SCHEMA_UNSPECIFIED")
	// Basic schema including only `info_type`, `quote`, `certainty`, and `timestamp`.
	GooglePrivacyDlpV2OutputStorageConfigOutputSchemaBasicColumns = GooglePrivacyDlpV2OutputStorageConfigOutputSchema("BASIC_COLUMNS")
	// Schema tailored to findings from scanning Google Cloud Storage.
	GooglePrivacyDlpV2OutputStorageConfigOutputSchemaGcsColumns = GooglePrivacyDlpV2OutputStorageConfigOutputSchema("GCS_COLUMNS")
	// Schema tailored to findings from scanning Google Datastore.
	GooglePrivacyDlpV2OutputStorageConfigOutputSchemaDatastoreColumns = GooglePrivacyDlpV2OutputStorageConfigOutputSchema("DATASTORE_COLUMNS")
	// Schema tailored to findings from scanning Google BigQuery.
	GooglePrivacyDlpV2OutputStorageConfigOutputSchemaBigQueryColumns = GooglePrivacyDlpV2OutputStorageConfigOutputSchema("BIG_QUERY_COLUMNS")
	// Schema containing all columns.
	GooglePrivacyDlpV2OutputStorageConfigOutputSchemaAllColumns = GooglePrivacyDlpV2OutputStorageConfigOutputSchema("ALL_COLUMNS")
)

func (GooglePrivacyDlpV2OutputStorageConfigOutputSchema) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2OutputStorageConfigOutputSchema) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2OutputStorageConfigOutputSchema) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2OutputStorageConfigOutputSchema) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2OutputStorageConfigOutputSchema) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The part of the time to keep.
type GooglePrivacyDlpV2TimePartConfigPartToExtract pulumi.String

const (
	// Unused
	GooglePrivacyDlpV2TimePartConfigPartToExtractTimePartUnspecified = GooglePrivacyDlpV2TimePartConfigPartToExtract("TIME_PART_UNSPECIFIED")
	// [0-9999]
	GooglePrivacyDlpV2TimePartConfigPartToExtractYear = GooglePrivacyDlpV2TimePartConfigPartToExtract("YEAR")
	// [1-12]
	GooglePrivacyDlpV2TimePartConfigPartToExtractMonth = GooglePrivacyDlpV2TimePartConfigPartToExtract("MONTH")
	// [1-31]
	GooglePrivacyDlpV2TimePartConfigPartToExtractDayOfMonth = GooglePrivacyDlpV2TimePartConfigPartToExtract("DAY_OF_MONTH")
	// [1-7]
	GooglePrivacyDlpV2TimePartConfigPartToExtractDayOfWeek = GooglePrivacyDlpV2TimePartConfigPartToExtract("DAY_OF_WEEK")
	// [1-53]
	GooglePrivacyDlpV2TimePartConfigPartToExtractWeekOfYear = GooglePrivacyDlpV2TimePartConfigPartToExtract("WEEK_OF_YEAR")
	// [0-23]
	GooglePrivacyDlpV2TimePartConfigPartToExtractHourOfDay = GooglePrivacyDlpV2TimePartConfigPartToExtract("HOUR_OF_DAY")
)

func (GooglePrivacyDlpV2TimePartConfigPartToExtract) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2TimePartConfigPartToExtract) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2TimePartConfigPartToExtract) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2TimePartConfigPartToExtract) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2TimePartConfigPartToExtract) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// day of week
type GooglePrivacyDlpV2ValueDayOfWeekValue pulumi.String

const (
	// The day of the week is unspecified.
	GooglePrivacyDlpV2ValueDayOfWeekValueDayOfWeekUnspecified = GooglePrivacyDlpV2ValueDayOfWeekValue("DAY_OF_WEEK_UNSPECIFIED")
	// Monday
	GooglePrivacyDlpV2ValueDayOfWeekValueMonday = GooglePrivacyDlpV2ValueDayOfWeekValue("MONDAY")
	// Tuesday
	GooglePrivacyDlpV2ValueDayOfWeekValueTuesday = GooglePrivacyDlpV2ValueDayOfWeekValue("TUESDAY")
	// Wednesday
	GooglePrivacyDlpV2ValueDayOfWeekValueWednesday = GooglePrivacyDlpV2ValueDayOfWeekValue("WEDNESDAY")
	// Thursday
	GooglePrivacyDlpV2ValueDayOfWeekValueThursday = GooglePrivacyDlpV2ValueDayOfWeekValue("THURSDAY")
	// Friday
	GooglePrivacyDlpV2ValueDayOfWeekValueFriday = GooglePrivacyDlpV2ValueDayOfWeekValue("FRIDAY")
	// Saturday
	GooglePrivacyDlpV2ValueDayOfWeekValueSaturday = GooglePrivacyDlpV2ValueDayOfWeekValue("SATURDAY")
	// Sunday
	GooglePrivacyDlpV2ValueDayOfWeekValueSunday = GooglePrivacyDlpV2ValueDayOfWeekValue("SUNDAY")
)

func (GooglePrivacyDlpV2ValueDayOfWeekValue) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GooglePrivacyDlpV2ValueDayOfWeekValue) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2ValueDayOfWeekValue) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GooglePrivacyDlpV2ValueDayOfWeekValue) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GooglePrivacyDlpV2ValueDayOfWeekValue) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. A status for this trigger.
type JobTriggerStatus pulumi.String

const (
	// Unused.
	JobTriggerStatusStatusUnspecified = JobTriggerStatus("STATUS_UNSPECIFIED")
	// Trigger is healthy.
	JobTriggerStatusHealthy = JobTriggerStatus("HEALTHY")
	// Trigger is temporarily paused.
	JobTriggerStatusPaused = JobTriggerStatus("PAUSED")
	// Trigger is cancelled and can not be resumed.
	JobTriggerStatusCancelled = JobTriggerStatus("CANCELLED")
)

func (JobTriggerStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e JobTriggerStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobTriggerStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobTriggerStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JobTriggerStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
