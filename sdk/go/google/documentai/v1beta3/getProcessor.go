// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a processor detail.
func LookupProcessor(ctx *pulumi.Context, args *LookupProcessorArgs, opts ...pulumi.InvokeOption) (*LookupProcessorResult, error) {
	var rv LookupProcessorResult
	err := ctx.Invoke("google-native:documentai/v1beta3:getProcessor", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupProcessorArgs struct {
	Location    string  `pulumi:"location"`
	ProcessorId string  `pulumi:"processorId"`
	Project     *string `pulumi:"project"`
}

type LookupProcessorResult struct {
	// The time the processor was created.
	CreateTime string `pulumi:"createTime"`
	// The default processor version.
	DefaultProcessorVersion string `pulumi:"defaultProcessorVersion"`
	// The display name of the processor.
	DisplayName string `pulumi:"displayName"`
	// The KMS key used for encryption/decryption in CMEK scenarios. See https://cloud.google.com/security-key-management.
	KmsKeyName string `pulumi:"kmsKeyName"`
	// Immutable. The resource name of the processor. Format: `projects/{project}/locations/{location}/processors/{processor}`
	Name string `pulumi:"name"`
	// Immutable. The http endpoint that can be called to invoke processing.
	ProcessEndpoint string `pulumi:"processEndpoint"`
	// The state of the processor.
	State string `pulumi:"state"`
	// The processor type, e.g., OCR_PROCESSOR, INVOICE_PROCESSOR, etc. To get a list of processors types, see FetchProcessorTypes.
	Type string `pulumi:"type"`
}

func LookupProcessorOutput(ctx *pulumi.Context, args LookupProcessorOutputArgs, opts ...pulumi.InvokeOption) LookupProcessorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProcessorResult, error) {
			args := v.(LookupProcessorArgs)
			r, err := LookupProcessor(ctx, &args, opts...)
			return *r, err
		}).(LookupProcessorResultOutput)
}

type LookupProcessorOutputArgs struct {
	Location    pulumi.StringInput    `pulumi:"location"`
	ProcessorId pulumi.StringInput    `pulumi:"processorId"`
	Project     pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupProcessorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProcessorArgs)(nil)).Elem()
}

type LookupProcessorResultOutput struct{ *pulumi.OutputState }

func (LookupProcessorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProcessorResult)(nil)).Elem()
}

func (o LookupProcessorResultOutput) ToLookupProcessorResultOutput() LookupProcessorResultOutput {
	return o
}

func (o LookupProcessorResultOutput) ToLookupProcessorResultOutputWithContext(ctx context.Context) LookupProcessorResultOutput {
	return o
}

// The time the processor was created.
func (o LookupProcessorResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The default processor version.
func (o LookupProcessorResultOutput) DefaultProcessorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorResult) string { return v.DefaultProcessorVersion }).(pulumi.StringOutput)
}

// The display name of the processor.
func (o LookupProcessorResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The KMS key used for encryption/decryption in CMEK scenarios. See https://cloud.google.com/security-key-management.
func (o LookupProcessorResultOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorResult) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

// Immutable. The resource name of the processor. Format: `projects/{project}/locations/{location}/processors/{processor}`
func (o LookupProcessorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorResult) string { return v.Name }).(pulumi.StringOutput)
}

// Immutable. The http endpoint that can be called to invoke processing.
func (o LookupProcessorResultOutput) ProcessEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorResult) string { return v.ProcessEndpoint }).(pulumi.StringOutput)
}

// The state of the processor.
func (o LookupProcessorResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorResult) string { return v.State }).(pulumi.StringOutput)
}

// The processor type, e.g., OCR_PROCESSOR, INVOICE_PROCESSOR, etc. To get a list of processors types, see FetchProcessorTypes.
func (o LookupProcessorResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessorResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProcessorResultOutput{})
}
