// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The log type that this config enables.
type AuditLogConfigLogType pulumi.String

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The ingress settings for the function, controlling what traffic can reach it.
type FunctionIngressSettings pulumi.String

const (
	// Unspecified.
	FunctionIngressSettingsIngressSettingsUnspecified = FunctionIngressSettings("INGRESS_SETTINGS_UNSPECIFIED")
	// Allow HTTP traffic from public and private sources.
	FunctionIngressSettingsAllowAll = FunctionIngressSettings("ALLOW_ALL")
	// Allow HTTP traffic from only private VPC sources.
	FunctionIngressSettingsAllowInternalOnly = FunctionIngressSettings("ALLOW_INTERNAL_ONLY")
	// Allow HTTP traffic from private VPC sources and through GCLB.
	FunctionIngressSettingsAllowInternalAndGclb = FunctionIngressSettings("ALLOW_INTERNAL_AND_GCLB")
)

func (FunctionIngressSettings) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e FunctionIngressSettings) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FunctionIngressSettings) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FunctionIngressSettings) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FunctionIngressSettings) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The egress settings for the connector, controlling what traffic is diverted through it.
type FunctionVpcConnectorEgressSettings pulumi.String

const (
	// Unspecified.
	FunctionVpcConnectorEgressSettingsVpcConnectorEgressSettingsUnspecified = FunctionVpcConnectorEgressSettings("VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED")
	// Use the VPC Access Connector only for private IP space from RFC1918.
	FunctionVpcConnectorEgressSettingsPrivateRangesOnly = FunctionVpcConnectorEgressSettings("PRIVATE_RANGES_ONLY")
	// Force the use of VPC Access Connector for all egress traffic from the function.
	FunctionVpcConnectorEgressSettingsAllTraffic = FunctionVpcConnectorEgressSettings("ALL_TRAFFIC")
)

func (FunctionVpcConnectorEgressSettings) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e FunctionVpcConnectorEgressSettings) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FunctionVpcConnectorEgressSettings) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FunctionVpcConnectorEgressSettings) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FunctionVpcConnectorEgressSettings) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The security level for the function.
type HttpsTriggerSecurityLevel pulumi.String

const (
	// Unspecified.
	HttpsTriggerSecurityLevelSecurityLevelUnspecified = HttpsTriggerSecurityLevel("SECURITY_LEVEL_UNSPECIFIED")
	// Requests for a URL that match this handler that do not use HTTPS are automatically redirected to the HTTPS URL with the same path. Query parameters are reserved for the redirect.
	HttpsTriggerSecurityLevelSecureAlways = HttpsTriggerSecurityLevel("SECURE_ALWAYS")
	// Both HTTP and HTTPS requests with URLs that match the handler succeed without redirects. The application can examine the request to determine which protocol was used and respond accordingly.
	HttpsTriggerSecurityLevelSecureOptional = HttpsTriggerSecurityLevel("SECURE_OPTIONAL")
)

func (HttpsTriggerSecurityLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e HttpsTriggerSecurityLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HttpsTriggerSecurityLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HttpsTriggerSecurityLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HttpsTriggerSecurityLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
