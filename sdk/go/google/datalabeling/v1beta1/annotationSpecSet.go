// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates an annotation spec set by providing a set of labels.
// Auto-naming is currently not supported for this resource.
type AnnotationSpecSet struct {
	pulumi.CustomResourceState

	// The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task.
	AnnotationSpecs GoogleCloudDatalabelingV1beta1AnnotationSpecResponseArrayOutput `pulumi:"annotationSpecs"`
	// The names of any related resources that are blocking changes to the annotation spec set.
	BlockingResources pulumi.StringArrayOutput `pulumi:"blockingResources"`
	// Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long.
	Description pulumi.StringOutput `pulumi:"description"`
	// The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The AnnotationSpecSet resource name in the following format: "projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}"
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewAnnotationSpecSet registers a new resource with the given unique name, arguments, and options.
func NewAnnotationSpecSet(ctx *pulumi.Context,
	name string, args *AnnotationSpecSetArgs, opts ...pulumi.ResourceOption) (*AnnotationSpecSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AnnotationSpecs == nil {
		return nil, errors.New("invalid value for required argument 'AnnotationSpecs'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AnnotationSpecSet
	err := ctx.RegisterResource("google-native:datalabeling/v1beta1:AnnotationSpecSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnnotationSpecSet gets an existing AnnotationSpecSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnnotationSpecSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnnotationSpecSetState, opts ...pulumi.ResourceOption) (*AnnotationSpecSet, error) {
	var resource AnnotationSpecSet
	err := ctx.ReadResource("google-native:datalabeling/v1beta1:AnnotationSpecSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnnotationSpecSet resources.
type annotationSpecSetState struct {
}

type AnnotationSpecSetState struct {
}

func (AnnotationSpecSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*annotationSpecSetState)(nil)).Elem()
}

type annotationSpecSetArgs struct {
	// The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task.
	AnnotationSpecs []GoogleCloudDatalabelingV1beta1AnnotationSpec `pulumi:"annotationSpecs"`
	// Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long.
	Description *string `pulumi:"description"`
	// The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters.
	DisplayName string  `pulumi:"displayName"`
	Project     *string `pulumi:"project"`
}

// The set of arguments for constructing a AnnotationSpecSet resource.
type AnnotationSpecSetArgs struct {
	// The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task.
	AnnotationSpecs GoogleCloudDatalabelingV1beta1AnnotationSpecArrayInput
	// Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long.
	Description pulumi.StringPtrInput
	// The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters.
	DisplayName pulumi.StringInput
	Project     pulumi.StringPtrInput
}

func (AnnotationSpecSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*annotationSpecSetArgs)(nil)).Elem()
}

type AnnotationSpecSetInput interface {
	pulumi.Input

	ToAnnotationSpecSetOutput() AnnotationSpecSetOutput
	ToAnnotationSpecSetOutputWithContext(ctx context.Context) AnnotationSpecSetOutput
}

func (*AnnotationSpecSet) ElementType() reflect.Type {
	return reflect.TypeOf((**AnnotationSpecSet)(nil)).Elem()
}

func (i *AnnotationSpecSet) ToAnnotationSpecSetOutput() AnnotationSpecSetOutput {
	return i.ToAnnotationSpecSetOutputWithContext(context.Background())
}

func (i *AnnotationSpecSet) ToAnnotationSpecSetOutputWithContext(ctx context.Context) AnnotationSpecSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnnotationSpecSetOutput)
}

func (i *AnnotationSpecSet) ToOutput(ctx context.Context) pulumix.Output[*AnnotationSpecSet] {
	return pulumix.Output[*AnnotationSpecSet]{
		OutputState: i.ToAnnotationSpecSetOutputWithContext(ctx).OutputState,
	}
}

type AnnotationSpecSetOutput struct{ *pulumi.OutputState }

func (AnnotationSpecSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnnotationSpecSet)(nil)).Elem()
}

func (o AnnotationSpecSetOutput) ToAnnotationSpecSetOutput() AnnotationSpecSetOutput {
	return o
}

func (o AnnotationSpecSetOutput) ToAnnotationSpecSetOutputWithContext(ctx context.Context) AnnotationSpecSetOutput {
	return o
}

func (o AnnotationSpecSetOutput) ToOutput(ctx context.Context) pulumix.Output[*AnnotationSpecSet] {
	return pulumix.Output[*AnnotationSpecSet]{
		OutputState: o.OutputState,
	}
}

// The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task.
func (o AnnotationSpecSetOutput) AnnotationSpecs() GoogleCloudDatalabelingV1beta1AnnotationSpecResponseArrayOutput {
	return o.ApplyT(func(v *AnnotationSpecSet) GoogleCloudDatalabelingV1beta1AnnotationSpecResponseArrayOutput {
		return v.AnnotationSpecs
	}).(GoogleCloudDatalabelingV1beta1AnnotationSpecResponseArrayOutput)
}

// The names of any related resources that are blocking changes to the annotation spec set.
func (o AnnotationSpecSetOutput) BlockingResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnnotationSpecSet) pulumi.StringArrayOutput { return v.BlockingResources }).(pulumi.StringArrayOutput)
}

// Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long.
func (o AnnotationSpecSetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnotationSpecSet) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters.
func (o AnnotationSpecSetOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnotationSpecSet) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The AnnotationSpecSet resource name in the following format: "projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}"
func (o AnnotationSpecSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnotationSpecSet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AnnotationSpecSetOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnotationSpecSet) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnnotationSpecSetInput)(nil)).Elem(), &AnnotationSpecSet{})
	pulumi.RegisterOutputType(AnnotationSpecSetOutput{})
}
