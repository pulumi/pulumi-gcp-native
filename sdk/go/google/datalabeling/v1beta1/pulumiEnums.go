// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Output only. Describes the current state of the job.
type EvaluationJobStateEnum pulumi.String

const (
	EvaluationJobStateEnumStateUnspecified = EvaluationJobStateEnum("STATE_UNSPECIFIED")
	// The job is scheduled to run at the configured interval. You can pause or delete the job. When the job is in this state, it samples prediction input and output from your model version into your BigQuery table as predictions occur.
	EvaluationJobStateEnumScheduled = EvaluationJobStateEnum("SCHEDULED")
	// The job is currently running. When the job runs, Data Labeling Service does several things: 1. If you have configured your job to use Data Labeling Service for ground truth labeling, the service creates a Dataset and a labeling task for all data sampled since the last time the job ran. Human labelers provide ground truth labels for your data. Human labeling may take hours, or even days, depending on how much data has been sampled. The job remains in the `RUNNING` state during this time, and it can even be running multiple times in parallel if it gets triggered again (for example 24 hours later) before the earlier run has completed. When human labelers have finished labeling the data, the next step occurs. If you have configured your job to provide your own ground truth labels, Data Labeling Service still creates a Dataset for newly sampled data, but it expects that you have already added ground truth labels to the BigQuery table by this time. The next step occurs immediately. 2. Data Labeling Service creates an Evaluation by comparing your model version's predictions with the ground truth labels. If the job remains in this state for a long time, it continues to sample prediction data into your BigQuery table and will run again at the next interval, even if it causes the job to run multiple times in parallel.
	EvaluationJobStateEnumRunning = EvaluationJobStateEnum("RUNNING")
	// The job is not sampling prediction input and output into your BigQuery table and it will not run according to its schedule. You can resume the job.
	EvaluationJobStateEnumPaused = EvaluationJobStateEnum("PAUSED")
	// The job has this state right before it is deleted.
	EvaluationJobStateEnumStopped = EvaluationJobStateEnum("STOPPED")
)

func (EvaluationJobStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e EvaluationJobStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationJobStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationJobStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EvaluationJobStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Optional. The type of how to aggregate answers.
type GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType pulumi.String

const (
	GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeStringAggregationTypeUnspecified = GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType("STRING_AGGREGATION_TYPE_UNSPECIFIED")
	// Majority vote to aggregate answers.
	GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeMajorityVote = GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType("MAJORITY_VOTE")
	// Unanimous answers will be adopted.
	GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeUnanimousVote = GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType("UNANIMOUS_VOTE")
	// Preserve all answers by crowd compute.
	GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeNoAggregation = GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType("NO_AGGREGATION")
)

func (GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Optional. The type of annotation to be performed on this data. You must specify this field if you are using this InputConfig in an EvaluationJob.
type GoogleCloudDatalabelingV1beta1InputConfigAnnotationType pulumi.String

const (
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeAnnotationTypeUnspecified = GoogleCloudDatalabelingV1beta1InputConfigAnnotationType("ANNOTATION_TYPE_UNSPECIFIED")
	// Classification annotations in an image. Allowed for continuous evaluation.
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeImageClassificationAnnotation = GoogleCloudDatalabelingV1beta1InputConfigAnnotationType("IMAGE_CLASSIFICATION_ANNOTATION")
	// Bounding box annotations in an image. A form of image object detection. Allowed for continuous evaluation.
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeImageBoundingBoxAnnotation = GoogleCloudDatalabelingV1beta1InputConfigAnnotationType("IMAGE_BOUNDING_BOX_ANNOTATION")
	// Oriented bounding box. The box does not have to be parallel to horizontal line.
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeImageOrientedBoundingBoxAnnotation = GoogleCloudDatalabelingV1beta1InputConfigAnnotationType("IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION")
	// Bounding poly annotations in an image.
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeImageBoundingPolyAnnotation = GoogleCloudDatalabelingV1beta1InputConfigAnnotationType("IMAGE_BOUNDING_POLY_ANNOTATION")
	// Polyline annotations in an image.
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeImagePolylineAnnotation = GoogleCloudDatalabelingV1beta1InputConfigAnnotationType("IMAGE_POLYLINE_ANNOTATION")
	// Segmentation annotations in an image.
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeImageSegmentationAnnotation = GoogleCloudDatalabelingV1beta1InputConfigAnnotationType("IMAGE_SEGMENTATION_ANNOTATION")
	// Classification annotations in video shots.
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeVideoShotsClassificationAnnotation = GoogleCloudDatalabelingV1beta1InputConfigAnnotationType("VIDEO_SHOTS_CLASSIFICATION_ANNOTATION")
	// Video object tracking annotation.
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeVideoObjectTrackingAnnotation = GoogleCloudDatalabelingV1beta1InputConfigAnnotationType("VIDEO_OBJECT_TRACKING_ANNOTATION")
	// Video object detection annotation.
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeVideoObjectDetectionAnnotation = GoogleCloudDatalabelingV1beta1InputConfigAnnotationType("VIDEO_OBJECT_DETECTION_ANNOTATION")
	// Video event annotation.
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeVideoEventAnnotation = GoogleCloudDatalabelingV1beta1InputConfigAnnotationType("VIDEO_EVENT_ANNOTATION")
	// Classification for text. Allowed for continuous evaluation.
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeTextClassificationAnnotation = GoogleCloudDatalabelingV1beta1InputConfigAnnotationType("TEXT_CLASSIFICATION_ANNOTATION")
	// Entity extraction for text.
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeTextEntityExtractionAnnotation = GoogleCloudDatalabelingV1beta1InputConfigAnnotationType("TEXT_ENTITY_EXTRACTION_ANNOTATION")
	// General classification. Allowed for continuous evaluation.
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeGeneralClassificationAnnotation = GoogleCloudDatalabelingV1beta1InputConfigAnnotationType("GENERAL_CLASSIFICATION_ANNOTATION")
)

func (GoogleCloudDatalabelingV1beta1InputConfigAnnotationType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDatalabelingV1beta1InputConfigAnnotationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatalabelingV1beta1InputConfigAnnotationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatalabelingV1beta1InputConfigAnnotationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDatalabelingV1beta1InputConfigAnnotationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. Data type must be specifed when user tries to import data.
type GoogleCloudDatalabelingV1beta1InputConfigDataType pulumi.String

const (
	// Data type is unspecified.
	GoogleCloudDatalabelingV1beta1InputConfigDataTypeDataTypeUnspecified = GoogleCloudDatalabelingV1beta1InputConfigDataType("DATA_TYPE_UNSPECIFIED")
	// Allowed for continuous evaluation.
	GoogleCloudDatalabelingV1beta1InputConfigDataTypeImage = GoogleCloudDatalabelingV1beta1InputConfigDataType("IMAGE")
	// Video data type.
	GoogleCloudDatalabelingV1beta1InputConfigDataTypeVideo = GoogleCloudDatalabelingV1beta1InputConfigDataType("VIDEO")
	// Allowed for continuous evaluation.
	GoogleCloudDatalabelingV1beta1InputConfigDataTypeText = GoogleCloudDatalabelingV1beta1InputConfigDataType("TEXT")
	// Allowed for continuous evaluation.
	GoogleCloudDatalabelingV1beta1InputConfigDataTypeGeneralData = GoogleCloudDatalabelingV1beta1InputConfigDataType("GENERAL_DATA")
)

func (GoogleCloudDatalabelingV1beta1InputConfigDataType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleCloudDatalabelingV1beta1InputConfigDataType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatalabelingV1beta1InputConfigDataType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudDatalabelingV1beta1InputConfigDataType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudDatalabelingV1beta1InputConfigDataType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. The data type of this instruction.
type InstructionDataType pulumi.String

const (
	// Data type is unspecified.
	InstructionDataTypeDataTypeUnspecified = InstructionDataType("DATA_TYPE_UNSPECIFIED")
	// Allowed for continuous evaluation.
	InstructionDataTypeImage = InstructionDataType("IMAGE")
	// Video data type.
	InstructionDataTypeVideo = InstructionDataType("VIDEO")
	// Allowed for continuous evaluation.
	InstructionDataTypeText = InstructionDataType("TEXT")
	// Allowed for continuous evaluation.
	InstructionDataTypeGeneralData = InstructionDataType("GENERAL_DATA")
)

func (InstructionDataType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e InstructionDataType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstructionDataType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstructionDataType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstructionDataType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
