// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a FeedbackMessage object.
func LookupFeedbackMessage(ctx *pulumi.Context, args *LookupFeedbackMessageArgs, opts ...pulumi.InvokeOption) (*LookupFeedbackMessageResult, error) {
	var rv LookupFeedbackMessageResult
	err := ctx.Invoke("google-native:datalabeling/v1beta1:getFeedbackMessage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFeedbackMessageArgs struct {
	AnnotatedDatasetId string  `pulumi:"annotatedDatasetId"`
	DatasetId          string  `pulumi:"datasetId"`
	FeedbackMessageId  string  `pulumi:"feedbackMessageId"`
	FeedbackThreadId   string  `pulumi:"feedbackThreadId"`
	Project            *string `pulumi:"project"`
}

type LookupFeedbackMessageResult struct {
	// String content of the feedback. Maximum of 10000 characters.
	Body string `pulumi:"body"`
	// Create time.
	CreateTime string `pulumi:"createTime"`
	// The image storing this feedback if the feedback is an image representing operator's comments.
	Image string `pulumi:"image"`
	// Name of the feedback message in a feedback thread. Format: 'project/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessage/{feedback_message_id}'
	Name                      string                                                          `pulumi:"name"`
	OperatorFeedbackMetadata  GoogleCloudDatalabelingV1beta1OperatorFeedbackMetadataResponse  `pulumi:"operatorFeedbackMetadata"`
	RequesterFeedbackMetadata GoogleCloudDatalabelingV1beta1RequesterFeedbackMetadataResponse `pulumi:"requesterFeedbackMetadata"`
}

func LookupFeedbackMessageOutput(ctx *pulumi.Context, args LookupFeedbackMessageOutputArgs, opts ...pulumi.InvokeOption) LookupFeedbackMessageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFeedbackMessageResult, error) {
			args := v.(LookupFeedbackMessageArgs)
			r, err := LookupFeedbackMessage(ctx, &args, opts...)
			return *r, err
		}).(LookupFeedbackMessageResultOutput)
}

type LookupFeedbackMessageOutputArgs struct {
	AnnotatedDatasetId pulumi.StringInput    `pulumi:"annotatedDatasetId"`
	DatasetId          pulumi.StringInput    `pulumi:"datasetId"`
	FeedbackMessageId  pulumi.StringInput    `pulumi:"feedbackMessageId"`
	FeedbackThreadId   pulumi.StringInput    `pulumi:"feedbackThreadId"`
	Project            pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupFeedbackMessageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeedbackMessageArgs)(nil)).Elem()
}

type LookupFeedbackMessageResultOutput struct{ *pulumi.OutputState }

func (LookupFeedbackMessageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeedbackMessageResult)(nil)).Elem()
}

func (o LookupFeedbackMessageResultOutput) ToLookupFeedbackMessageResultOutput() LookupFeedbackMessageResultOutput {
	return o
}

func (o LookupFeedbackMessageResultOutput) ToLookupFeedbackMessageResultOutputWithContext(ctx context.Context) LookupFeedbackMessageResultOutput {
	return o
}

// String content of the feedback. Maximum of 10000 characters.
func (o LookupFeedbackMessageResultOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeedbackMessageResult) string { return v.Body }).(pulumi.StringOutput)
}

// Create time.
func (o LookupFeedbackMessageResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeedbackMessageResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The image storing this feedback if the feedback is an image representing operator's comments.
func (o LookupFeedbackMessageResultOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeedbackMessageResult) string { return v.Image }).(pulumi.StringOutput)
}

// Name of the feedback message in a feedback thread. Format: 'project/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessage/{feedback_message_id}'
func (o LookupFeedbackMessageResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeedbackMessageResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupFeedbackMessageResultOutput) OperatorFeedbackMetadata() GoogleCloudDatalabelingV1beta1OperatorFeedbackMetadataResponseOutput {
	return o.ApplyT(func(v LookupFeedbackMessageResult) GoogleCloudDatalabelingV1beta1OperatorFeedbackMetadataResponse {
		return v.OperatorFeedbackMetadata
	}).(GoogleCloudDatalabelingV1beta1OperatorFeedbackMetadataResponseOutput)
}

func (o LookupFeedbackMessageResultOutput) RequesterFeedbackMetadata() GoogleCloudDatalabelingV1beta1RequesterFeedbackMetadataResponseOutput {
	return o.ApplyT(func(v LookupFeedbackMessageResult) GoogleCloudDatalabelingV1beta1RequesterFeedbackMetadataResponse {
		return v.RequesterFeedbackMetadata
	}).(GoogleCloudDatalabelingV1beta1RequesterFeedbackMetadataResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFeedbackMessageResultOutput{})
}
