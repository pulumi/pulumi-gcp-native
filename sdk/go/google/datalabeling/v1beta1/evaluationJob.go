// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an evaluation job.
type EvaluationJob struct {
	pulumi.CustomResourceState

	// Required. Name of the AnnotationSpecSet describing all the labels that your machine learning model outputs. You must create this resource before you create an evaluation job and provide its name in the following format: "projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}"
	AnnotationSpecSet pulumi.StringOutput `pulumi:"annotationSpecSet"`
	// Every time the evaluation job runs and an error occurs, the failed attempt is appended to this array.
	Attempts GoogleCloudDatalabelingV1beta1AttemptResponseArrayOutput `pulumi:"attempts"`
	// Timestamp of when this evaluation job was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Required. Description of the job. The description can be up to 25,000 characters long.
	Description pulumi.StringOutput `pulumi:"description"`
	// Required. Configuration details for the evaluation job.
	EvaluationJobConfig GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponseOutput `pulumi:"evaluationJobConfig"`
	// Required. Whether you want Data Labeling Service to provide ground truth labels for prediction input. If you want the service to assign human labelers to annotate your data, set this to `true`. If you want to provide your own ground truth labels in the evaluation job's BigQuery table, set this to `false`.
	LabelMissingGroundTruth pulumi.BoolOutput `pulumi:"labelMissingGroundTruth"`
	// Required. The [AI Platform Prediction model version](/ml-engine/docs/prediction-overview) to be evaluated. Prediction input and output is sampled from this model version. When creating an evaluation job, specify the model version in the following format: "projects/{project_id}/models/{model_name}/versions/{version_name}" There can only be one evaluation job per model version.
	ModelVersion pulumi.StringOutput `pulumi:"modelVersion"`
	// After you create a job, Data Labeling Service assigns a name to the job with the following format: "projects/{project_id}/evaluationJobs/ {evaluation_job_id}"
	Name pulumi.StringOutput `pulumi:"name"`
	// Required. Describes the interval at which the job runs. This interval must be at least 1 day, and it is rounded to the nearest day. For example, if you specify a 50-hour interval, the job runs every 2 days. You can provide the schedule in [crontab format](/scheduler/docs/configuring/cron-job-schedules) or in an [English-like format](/appengine/docs/standard/python/config/cronref#schedule_format). Regardless of what you specify, the job will run at 10:00 AM UTC. Only the interval from this schedule is used, not the specific time of day.
	Schedule pulumi.StringOutput `pulumi:"schedule"`
	// Describes the current state of the job.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewEvaluationJob registers a new resource with the given unique name, arguments, and options.
func NewEvaluationJob(ctx *pulumi.Context,
	name string, args *EvaluationJobArgs, opts ...pulumi.ResourceOption) (*EvaluationJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	var resource EvaluationJob
	err := ctx.RegisterResource("google-native:datalabeling/v1beta1:EvaluationJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEvaluationJob gets an existing EvaluationJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEvaluationJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EvaluationJobState, opts ...pulumi.ResourceOption) (*EvaluationJob, error) {
	var resource EvaluationJob
	err := ctx.ReadResource("google-native:datalabeling/v1beta1:EvaluationJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EvaluationJob resources.
type evaluationJobState struct {
	// Required. Name of the AnnotationSpecSet describing all the labels that your machine learning model outputs. You must create this resource before you create an evaluation job and provide its name in the following format: "projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}"
	AnnotationSpecSet *string `pulumi:"annotationSpecSet"`
	// Every time the evaluation job runs and an error occurs, the failed attempt is appended to this array.
	Attempts []GoogleCloudDatalabelingV1beta1AttemptResponse `pulumi:"attempts"`
	// Timestamp of when this evaluation job was created.
	CreateTime *string `pulumi:"createTime"`
	// Required. Description of the job. The description can be up to 25,000 characters long.
	Description *string `pulumi:"description"`
	// Required. Configuration details for the evaluation job.
	EvaluationJobConfig *GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse `pulumi:"evaluationJobConfig"`
	// Required. Whether you want Data Labeling Service to provide ground truth labels for prediction input. If you want the service to assign human labelers to annotate your data, set this to `true`. If you want to provide your own ground truth labels in the evaluation job's BigQuery table, set this to `false`.
	LabelMissingGroundTruth *bool `pulumi:"labelMissingGroundTruth"`
	// Required. The [AI Platform Prediction model version](/ml-engine/docs/prediction-overview) to be evaluated. Prediction input and output is sampled from this model version. When creating an evaluation job, specify the model version in the following format: "projects/{project_id}/models/{model_name}/versions/{version_name}" There can only be one evaluation job per model version.
	ModelVersion *string `pulumi:"modelVersion"`
	// After you create a job, Data Labeling Service assigns a name to the job with the following format: "projects/{project_id}/evaluationJobs/ {evaluation_job_id}"
	Name *string `pulumi:"name"`
	// Required. Describes the interval at which the job runs. This interval must be at least 1 day, and it is rounded to the nearest day. For example, if you specify a 50-hour interval, the job runs every 2 days. You can provide the schedule in [crontab format](/scheduler/docs/configuring/cron-job-schedules) or in an [English-like format](/appengine/docs/standard/python/config/cronref#schedule_format). Regardless of what you specify, the job will run at 10:00 AM UTC. Only the interval from this schedule is used, not the specific time of day.
	Schedule *string `pulumi:"schedule"`
	// Describes the current state of the job.
	State *string `pulumi:"state"`
}

type EvaluationJobState struct {
	// Required. Name of the AnnotationSpecSet describing all the labels that your machine learning model outputs. You must create this resource before you create an evaluation job and provide its name in the following format: "projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}"
	AnnotationSpecSet pulumi.StringPtrInput
	// Every time the evaluation job runs and an error occurs, the failed attempt is appended to this array.
	Attempts GoogleCloudDatalabelingV1beta1AttemptResponseArrayInput
	// Timestamp of when this evaluation job was created.
	CreateTime pulumi.StringPtrInput
	// Required. Description of the job. The description can be up to 25,000 characters long.
	Description pulumi.StringPtrInput
	// Required. Configuration details for the evaluation job.
	EvaluationJobConfig GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponsePtrInput
	// Required. Whether you want Data Labeling Service to provide ground truth labels for prediction input. If you want the service to assign human labelers to annotate your data, set this to `true`. If you want to provide your own ground truth labels in the evaluation job's BigQuery table, set this to `false`.
	LabelMissingGroundTruth pulumi.BoolPtrInput
	// Required. The [AI Platform Prediction model version](/ml-engine/docs/prediction-overview) to be evaluated. Prediction input and output is sampled from this model version. When creating an evaluation job, specify the model version in the following format: "projects/{project_id}/models/{model_name}/versions/{version_name}" There can only be one evaluation job per model version.
	ModelVersion pulumi.StringPtrInput
	// After you create a job, Data Labeling Service assigns a name to the job with the following format: "projects/{project_id}/evaluationJobs/ {evaluation_job_id}"
	Name pulumi.StringPtrInput
	// Required. Describes the interval at which the job runs. This interval must be at least 1 day, and it is rounded to the nearest day. For example, if you specify a 50-hour interval, the job runs every 2 days. You can provide the schedule in [crontab format](/scheduler/docs/configuring/cron-job-schedules) or in an [English-like format](/appengine/docs/standard/python/config/cronref#schedule_format). Regardless of what you specify, the job will run at 10:00 AM UTC. Only the interval from this schedule is used, not the specific time of day.
	Schedule pulumi.StringPtrInput
	// Describes the current state of the job.
	State pulumi.StringPtrInput
}

func (EvaluationJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*evaluationJobState)(nil)).Elem()
}

type evaluationJobArgs struct {
	// Required. Name of the AnnotationSpecSet describing all the labels that your machine learning model outputs. You must create this resource before you create an evaluation job and provide its name in the following format: "projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}"
	AnnotationSpecSet *string `pulumi:"annotationSpecSet"`
	// Every time the evaluation job runs and an error occurs, the failed attempt is appended to this array.
	Attempts []GoogleCloudDatalabelingV1beta1Attempt `pulumi:"attempts"`
	// Timestamp of when this evaluation job was created.
	CreateTime *string `pulumi:"createTime"`
	// Required. Description of the job. The description can be up to 25,000 characters long.
	Description *string `pulumi:"description"`
	// Required. Configuration details for the evaluation job.
	EvaluationJobConfig *GoogleCloudDatalabelingV1beta1EvaluationJobConfig `pulumi:"evaluationJobConfig"`
	// Required. Whether you want Data Labeling Service to provide ground truth labels for prediction input. If you want the service to assign human labelers to annotate your data, set this to `true`. If you want to provide your own ground truth labels in the evaluation job's BigQuery table, set this to `false`.
	LabelMissingGroundTruth *bool `pulumi:"labelMissingGroundTruth"`
	// Required. The [AI Platform Prediction model version](/ml-engine/docs/prediction-overview) to be evaluated. Prediction input and output is sampled from this model version. When creating an evaluation job, specify the model version in the following format: "projects/{project_id}/models/{model_name}/versions/{version_name}" There can only be one evaluation job per model version.
	ModelVersion *string `pulumi:"modelVersion"`
	// After you create a job, Data Labeling Service assigns a name to the job with the following format: "projects/{project_id}/evaluationJobs/ {evaluation_job_id}"
	Name    *string `pulumi:"name"`
	Project string  `pulumi:"project"`
	// Required. Describes the interval at which the job runs. This interval must be at least 1 day, and it is rounded to the nearest day. For example, if you specify a 50-hour interval, the job runs every 2 days. You can provide the schedule in [crontab format](/scheduler/docs/configuring/cron-job-schedules) or in an [English-like format](/appengine/docs/standard/python/config/cronref#schedule_format). Regardless of what you specify, the job will run at 10:00 AM UTC. Only the interval from this schedule is used, not the specific time of day.
	Schedule *string `pulumi:"schedule"`
	// Describes the current state of the job.
	State *string `pulumi:"state"`
}

// The set of arguments for constructing a EvaluationJob resource.
type EvaluationJobArgs struct {
	// Required. Name of the AnnotationSpecSet describing all the labels that your machine learning model outputs. You must create this resource before you create an evaluation job and provide its name in the following format: "projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}"
	AnnotationSpecSet pulumi.StringPtrInput
	// Every time the evaluation job runs and an error occurs, the failed attempt is appended to this array.
	Attempts GoogleCloudDatalabelingV1beta1AttemptArrayInput
	// Timestamp of when this evaluation job was created.
	CreateTime pulumi.StringPtrInput
	// Required. Description of the job. The description can be up to 25,000 characters long.
	Description pulumi.StringPtrInput
	// Required. Configuration details for the evaluation job.
	EvaluationJobConfig GoogleCloudDatalabelingV1beta1EvaluationJobConfigPtrInput
	// Required. Whether you want Data Labeling Service to provide ground truth labels for prediction input. If you want the service to assign human labelers to annotate your data, set this to `true`. If you want to provide your own ground truth labels in the evaluation job's BigQuery table, set this to `false`.
	LabelMissingGroundTruth pulumi.BoolPtrInput
	// Required. The [AI Platform Prediction model version](/ml-engine/docs/prediction-overview) to be evaluated. Prediction input and output is sampled from this model version. When creating an evaluation job, specify the model version in the following format: "projects/{project_id}/models/{model_name}/versions/{version_name}" There can only be one evaluation job per model version.
	ModelVersion pulumi.StringPtrInput
	// After you create a job, Data Labeling Service assigns a name to the job with the following format: "projects/{project_id}/evaluationJobs/ {evaluation_job_id}"
	Name    pulumi.StringPtrInput
	Project pulumi.StringInput
	// Required. Describes the interval at which the job runs. This interval must be at least 1 day, and it is rounded to the nearest day. For example, if you specify a 50-hour interval, the job runs every 2 days. You can provide the schedule in [crontab format](/scheduler/docs/configuring/cron-job-schedules) or in an [English-like format](/appengine/docs/standard/python/config/cronref#schedule_format). Regardless of what you specify, the job will run at 10:00 AM UTC. Only the interval from this schedule is used, not the specific time of day.
	Schedule pulumi.StringPtrInput
	// Describes the current state of the job.
	State *EvaluationJobStateEnum
}

func (EvaluationJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*evaluationJobArgs)(nil)).Elem()
}

type EvaluationJobInput interface {
	pulumi.Input

	ToEvaluationJobOutput() EvaluationJobOutput
	ToEvaluationJobOutputWithContext(ctx context.Context) EvaluationJobOutput
}

func (*EvaluationJob) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationJob)(nil))
}

func (i *EvaluationJob) ToEvaluationJobOutput() EvaluationJobOutput {
	return i.ToEvaluationJobOutputWithContext(context.Background())
}

func (i *EvaluationJob) ToEvaluationJobOutputWithContext(ctx context.Context) EvaluationJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationJobOutput)
}

type EvaluationJobOutput struct {
	*pulumi.OutputState
}

func (EvaluationJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationJob)(nil))
}

func (o EvaluationJobOutput) ToEvaluationJobOutput() EvaluationJobOutput {
	return o
}

func (o EvaluationJobOutput) ToEvaluationJobOutputWithContext(ctx context.Context) EvaluationJobOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(EvaluationJobOutput{})
}
