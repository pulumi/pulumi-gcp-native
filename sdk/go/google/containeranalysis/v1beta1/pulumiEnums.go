// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The alias kind.
type AliasContextKind pulumi.String

const (
	// Unknown.
	AliasContextKindKindUnspecified = AliasContextKind("KIND_UNSPECIFIED")
	// Git tag.
	AliasContextKindFixed = AliasContextKind("FIXED")
	// Git branch.
	AliasContextKindMovable = AliasContextKind("MOVABLE")
	// Used to specify non-standard aliases. For example, if a Git repo has a ref named "refs/foo/bar".
	AliasContextKindOther = AliasContextKind("OTHER")
)

func (AliasContextKind) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AliasContextKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AliasContextKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AliasContextKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AliasContextKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The type of the key, either stored in `public_key` or referenced in `key_id`.
type BuildSignatureKeyType pulumi.String

const (
	// `KeyType` is not set.
	BuildSignatureKeyTypeKeyTypeUnspecified = BuildSignatureKeyType("KEY_TYPE_UNSPECIFIED")
	// `PGP ASCII Armored` public key.
	BuildSignatureKeyTypePgpAsciiArmored = BuildSignatureKeyType("PGP_ASCII_ARMORED")
	// `PKIX PEM` public key.
	BuildSignatureKeyTypePkixPem = BuildSignatureKeyType("PKIX_PEM")
)

func (BuildSignatureKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e BuildSignatureKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildSignatureKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildSignatureKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BuildSignatureKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3AttackComplexity pulumi.String

const (
	CVSSv3AttackComplexityAttackComplexityUnspecified = CVSSv3AttackComplexity("ATTACK_COMPLEXITY_UNSPECIFIED")
	CVSSv3AttackComplexityAttackComplexityLow         = CVSSv3AttackComplexity("ATTACK_COMPLEXITY_LOW")
	CVSSv3AttackComplexityAttackComplexityHigh        = CVSSv3AttackComplexity("ATTACK_COMPLEXITY_HIGH")
)

func (CVSSv3AttackComplexity) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CVSSv3AttackComplexity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AttackComplexity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AttackComplexity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3AttackComplexity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.
type CVSSv3AttackVector pulumi.String

const (
	CVSSv3AttackVectorAttackVectorUnspecified = CVSSv3AttackVector("ATTACK_VECTOR_UNSPECIFIED")
	CVSSv3AttackVectorAttackVectorNetwork     = CVSSv3AttackVector("ATTACK_VECTOR_NETWORK")
	CVSSv3AttackVectorAttackVectorAdjacent    = CVSSv3AttackVector("ATTACK_VECTOR_ADJACENT")
	CVSSv3AttackVectorAttackVectorLocal       = CVSSv3AttackVector("ATTACK_VECTOR_LOCAL")
	CVSSv3AttackVectorAttackVectorPhysical    = CVSSv3AttackVector("ATTACK_VECTOR_PHYSICAL")
)

func (CVSSv3AttackVector) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CVSSv3AttackVector) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AttackVector) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AttackVector) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3AttackVector) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3AvailabilityImpact pulumi.String

const (
	CVSSv3AvailabilityImpactImpactUnspecified = CVSSv3AvailabilityImpact("IMPACT_UNSPECIFIED")
	CVSSv3AvailabilityImpactImpactHigh        = CVSSv3AvailabilityImpact("IMPACT_HIGH")
	CVSSv3AvailabilityImpactImpactLow         = CVSSv3AvailabilityImpact("IMPACT_LOW")
	CVSSv3AvailabilityImpactImpactNone        = CVSSv3AvailabilityImpact("IMPACT_NONE")
)

func (CVSSv3AvailabilityImpact) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CVSSv3AvailabilityImpact) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AvailabilityImpact) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AvailabilityImpact) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3AvailabilityImpact) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3ConfidentialityImpact pulumi.String

const (
	CVSSv3ConfidentialityImpactImpactUnspecified = CVSSv3ConfidentialityImpact("IMPACT_UNSPECIFIED")
	CVSSv3ConfidentialityImpactImpactHigh        = CVSSv3ConfidentialityImpact("IMPACT_HIGH")
	CVSSv3ConfidentialityImpactImpactLow         = CVSSv3ConfidentialityImpact("IMPACT_LOW")
	CVSSv3ConfidentialityImpactImpactNone        = CVSSv3ConfidentialityImpact("IMPACT_NONE")
)

func (CVSSv3ConfidentialityImpact) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CVSSv3ConfidentialityImpact) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3ConfidentialityImpact) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3ConfidentialityImpact) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3ConfidentialityImpact) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3IntegrityImpact pulumi.String

const (
	CVSSv3IntegrityImpactImpactUnspecified = CVSSv3IntegrityImpact("IMPACT_UNSPECIFIED")
	CVSSv3IntegrityImpactImpactHigh        = CVSSv3IntegrityImpact("IMPACT_HIGH")
	CVSSv3IntegrityImpactImpactLow         = CVSSv3IntegrityImpact("IMPACT_LOW")
	CVSSv3IntegrityImpactImpactNone        = CVSSv3IntegrityImpact("IMPACT_NONE")
)

func (CVSSv3IntegrityImpact) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CVSSv3IntegrityImpact) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3IntegrityImpact) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3IntegrityImpact) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3IntegrityImpact) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3PrivilegesRequired pulumi.String

const (
	CVSSv3PrivilegesRequiredPrivilegesRequiredUnspecified = CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_UNSPECIFIED")
	CVSSv3PrivilegesRequiredPrivilegesRequiredNone        = CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_NONE")
	CVSSv3PrivilegesRequiredPrivilegesRequiredLow         = CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_LOW")
	CVSSv3PrivilegesRequiredPrivilegesRequiredHigh        = CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_HIGH")
)

func (CVSSv3PrivilegesRequired) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CVSSv3PrivilegesRequired) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3PrivilegesRequired) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3PrivilegesRequired) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3PrivilegesRequired) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3Scope pulumi.String

const (
	CVSSv3ScopeScopeUnspecified = CVSSv3Scope("SCOPE_UNSPECIFIED")
	CVSSv3ScopeScopeUnchanged   = CVSSv3Scope("SCOPE_UNCHANGED")
	CVSSv3ScopeScopeChanged     = CVSSv3Scope("SCOPE_CHANGED")
)

func (CVSSv3Scope) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CVSSv3Scope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3Scope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3Scope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3Scope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3UserInteraction pulumi.String

const (
	CVSSv3UserInteractionUserInteractionUnspecified = CVSSv3UserInteraction("USER_INTERACTION_UNSPECIFIED")
	CVSSv3UserInteractionUserInteractionNone        = CVSSv3UserInteraction("USER_INTERACTION_NONE")
	CVSSv3UserInteractionUserInteractionRequired    = CVSSv3UserInteraction("USER_INTERACTION_REQUIRED")
)

func (CVSSv3UserInteraction) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CVSSv3UserInteraction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3UserInteraction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3UserInteraction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3UserInteraction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Platform hosting this deployment.
type DeploymentPlatform pulumi.String

const (
	// Unknown.
	DeploymentPlatformPlatformUnspecified = DeploymentPlatform("PLATFORM_UNSPECIFIED")
	// Google Container Engine.
	DeploymentPlatformGke = DeploymentPlatform("GKE")
	// Google App Engine: Flexible Environment.
	DeploymentPlatformFlex = DeploymentPlatform("FLEX")
	// Custom user-defined platform.
	DeploymentPlatformCustom = DeploymentPlatform("CUSTOM")
)

func (DeploymentPlatform) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DeploymentPlatform) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeploymentPlatform) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeploymentPlatform) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DeploymentPlatform) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The status of discovery for the resource.
type DiscoveredAnalysisStatus pulumi.String

const (
	// Unknown.
	DiscoveredAnalysisStatusAnalysisStatusUnspecified = DiscoveredAnalysisStatus("ANALYSIS_STATUS_UNSPECIFIED")
	// Resource is known but no action has been taken yet.
	DiscoveredAnalysisStatusPending = DiscoveredAnalysisStatus("PENDING")
	// Resource is being analyzed.
	DiscoveredAnalysisStatusScanning = DiscoveredAnalysisStatus("SCANNING")
	// Analysis has finished successfully.
	DiscoveredAnalysisStatusFinishedSuccess = DiscoveredAnalysisStatus("FINISHED_SUCCESS")
	// Analysis has finished unsuccessfully, the analysis itself is in a bad state.
	DiscoveredAnalysisStatusFinishedFailed = DiscoveredAnalysisStatus("FINISHED_FAILED")
	// The resource is known not to be supported
	DiscoveredAnalysisStatusFinishedUnsupported = DiscoveredAnalysisStatus("FINISHED_UNSUPPORTED")
)

func (DiscoveredAnalysisStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DiscoveredAnalysisStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveredAnalysisStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveredAnalysisStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscoveredAnalysisStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Whether the resource is continuously analyzed.
type DiscoveredContinuousAnalysis pulumi.String

const (
	// Unknown.
	DiscoveredContinuousAnalysisContinuousAnalysisUnspecified = DiscoveredContinuousAnalysis("CONTINUOUS_ANALYSIS_UNSPECIFIED")
	// The resource is continuously analyzed.
	DiscoveredContinuousAnalysisActive = DiscoveredContinuousAnalysis("ACTIVE")
	// The resource is ignored for continuous analysis.
	DiscoveredContinuousAnalysisInactive = DiscoveredContinuousAnalysis("INACTIVE")
)

func (DiscoveredContinuousAnalysis) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DiscoveredContinuousAnalysis) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveredContinuousAnalysis) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveredContinuousAnalysis) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscoveredContinuousAnalysis) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. Immutable. The kind of analysis that is handled by this discovery.
type DiscoveryAnalysisKind pulumi.String

const (
	// Default value. This value is unused.
	DiscoveryAnalysisKindNoteKindUnspecified = DiscoveryAnalysisKind("NOTE_KIND_UNSPECIFIED")
	// The note and occurrence represent a package vulnerability.
	DiscoveryAnalysisKindVulnerability = DiscoveryAnalysisKind("VULNERABILITY")
	// The note and occurrence assert build provenance.
	DiscoveryAnalysisKindBuild = DiscoveryAnalysisKind("BUILD")
	// This represents an image basis relationship.
	DiscoveryAnalysisKindImage = DiscoveryAnalysisKind("IMAGE")
	// This represents a package installed via a package manager.
	DiscoveryAnalysisKindPackage = DiscoveryAnalysisKind("PACKAGE")
	// The note and occurrence track deployment events.
	DiscoveryAnalysisKindDeployment = DiscoveryAnalysisKind("DEPLOYMENT")
	// The note and occurrence track the initial discovery status of a resource.
	DiscoveryAnalysisKindDiscovery = DiscoveryAnalysisKind("DISCOVERY")
	// This represents a logical "role" that can attest to artifacts.
	DiscoveryAnalysisKindAttestation = DiscoveryAnalysisKind("ATTESTATION")
	// This represents an in-toto link.
	DiscoveryAnalysisKindIntoto = DiscoveryAnalysisKind("INTOTO")
)

func (DiscoveryAnalysisKind) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DiscoveryAnalysisKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryAnalysisKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryAnalysisKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscoveryAnalysisKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The CPU architecture for which packages in this distribution channel were built.
type DistributionArchitecture pulumi.String

const (
	// Unknown architecture.
	DistributionArchitectureArchitectureUnspecified = DistributionArchitecture("ARCHITECTURE_UNSPECIFIED")
	// X86 architecture.
	DistributionArchitectureX86 = DistributionArchitecture("X86")
	// X64 architecture.
	DistributionArchitectureX64 = DistributionArchitecture("X64")
)

func (DistributionArchitecture) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DistributionArchitecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DistributionArchitecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DistributionArchitecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DistributionArchitecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Type (for example schema) of the attestation payload that was signed. The verifier must ensure that the provided type is one that the verifier supports, and that the attestation payload is a valid instantiation of that type (for example by validating a JSON schema).
type GenericSignedAttestationContentType pulumi.String

const (
	// `ContentType` is not set.
	GenericSignedAttestationContentTypeContentTypeUnspecified = GenericSignedAttestationContentType("CONTENT_TYPE_UNSPECIFIED")
	// Atomic format attestation signature. See https://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md The payload extracted in `plaintext` is a JSON blob conforming to the linked schema.
	GenericSignedAttestationContentTypeSimpleSigningJson = GenericSignedAttestationContentType("SIMPLE_SIGNING_JSON")
)

func (GenericSignedAttestationContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GenericSignedAttestationContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GenericSignedAttestationContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GenericSignedAttestationContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GenericSignedAttestationContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The distro assigned severity for this vulnerability when it is available, and note provider assigned severity when distro has not yet assigned a severity for this vulnerability.
type GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity pulumi.String

const (
	// Unknown.
	GrafeasV1beta1VulnerabilityDetailsEffectiveSeveritySeverityUnspecified = GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity("SEVERITY_UNSPECIFIED")
	// Minimal severity.
	GrafeasV1beta1VulnerabilityDetailsEffectiveSeverityMinimal = GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity("MINIMAL")
	// Low severity.
	GrafeasV1beta1VulnerabilityDetailsEffectiveSeverityLow = GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity("LOW")
	// Medium severity.
	GrafeasV1beta1VulnerabilityDetailsEffectiveSeverityMedium = GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity("MEDIUM")
	// High severity.
	GrafeasV1beta1VulnerabilityDetailsEffectiveSeverityHigh = GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity("HIGH")
	// Critical severity.
	GrafeasV1beta1VulnerabilityDetailsEffectiveSeverityCritical = GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity("CRITICAL")
)

func (GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. The recovered Dockerfile directive used to construct this layer.
type LayerDirective pulumi.String

const (
	// Default value for unsupported/missing directive.
	LayerDirectiveDirectiveUnspecified = LayerDirective("DIRECTIVE_UNSPECIFIED")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveMaintainer = LayerDirective("MAINTAINER")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveRun = LayerDirective("RUN")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveCmd = LayerDirective("CMD")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveLabel = LayerDirective("LABEL")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveExpose = LayerDirective("EXPOSE")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveEnv = LayerDirective("ENV")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveAdd = LayerDirective("ADD")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveCopy = LayerDirective("COPY")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveEntrypoint = LayerDirective("ENTRYPOINT")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveVolume = LayerDirective("VOLUME")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveUser = LayerDirective("USER")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveWorkdir = LayerDirective("WORKDIR")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveArg = LayerDirective("ARG")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveOnbuild = LayerDirective("ONBUILD")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveStopsignal = LayerDirective("STOPSIGNAL")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveHealthcheck = LayerDirective("HEALTHCHECK")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveShell = LayerDirective("SHELL")
)

func (LayerDirective) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e LayerDirective) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LayerDirective) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LayerDirective) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LayerDirective) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Type (for example schema) of the attestation payload that was signed. The verifier must ensure that the provided type is one that the verifier supports, and that the attestation payload is a valid instantiation of that type (for example by validating a JSON schema).
type PgpSignedAttestationContentType pulumi.String

const (
	// `ContentType` is not set.
	PgpSignedAttestationContentTypeContentTypeUnspecified = PgpSignedAttestationContentType("CONTENT_TYPE_UNSPECIFIED")
	// Atomic format attestation signature. See https://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md The payload extracted from `signature` is a JSON blob conforming to the linked schema.
	PgpSignedAttestationContentTypeSimpleSigningJson = PgpSignedAttestationContentType("SIMPLE_SIGNING_JSON")
)

func (PgpSignedAttestationContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e PgpSignedAttestationContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PgpSignedAttestationContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PgpSignedAttestationContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PgpSignedAttestationContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. Distinguishes between sentinel MIN/MAX versions and normal versions.
type VersionKind pulumi.String

const (
	// Unknown.
	VersionKindVersionKindUnspecified = VersionKind("VERSION_KIND_UNSPECIFIED")
	// A standard package version.
	VersionKindNormal = VersionKind("NORMAL")
	// A special version representing negative infinity.
	VersionKindMinimum = VersionKind("MINIMUM")
	// A special version representing positive infinity.
	VersionKindMaximum = VersionKind("MAXIMUM")
)

func (VersionKind) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e VersionKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VersionKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VersionKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VersionKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Note provider assigned impact of the vulnerability.
type VulnerabilitySeverity pulumi.String

const (
	// Unknown.
	VulnerabilitySeveritySeverityUnspecified = VulnerabilitySeverity("SEVERITY_UNSPECIFIED")
	// Minimal severity.
	VulnerabilitySeverityMinimal = VulnerabilitySeverity("MINIMAL")
	// Low severity.
	VulnerabilitySeverityLow = VulnerabilitySeverity("LOW")
	// Medium severity.
	VulnerabilitySeverityMedium = VulnerabilitySeverity("MEDIUM")
	// High severity.
	VulnerabilitySeverityHigh = VulnerabilitySeverity("HIGH")
	// Critical severity.
	VulnerabilitySeverityCritical = VulnerabilitySeverity("CRITICAL")
)

func (VulnerabilitySeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e VulnerabilitySeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilitySeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilitySeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VulnerabilitySeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
