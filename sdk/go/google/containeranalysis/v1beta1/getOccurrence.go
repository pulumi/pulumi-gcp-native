// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the specified occurrence.
func LookupOccurrence(ctx *pulumi.Context, args *LookupOccurrenceArgs, opts ...pulumi.InvokeOption) (*LookupOccurrenceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOccurrenceResult
	err := ctx.Invoke("google-native:containeranalysis/v1beta1:getOccurrence", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupOccurrenceArgs struct {
	OccurrenceId string  `pulumi:"occurrenceId"`
	Project      *string `pulumi:"project"`
}

type LookupOccurrenceResult struct {
	// Describes an attestation of an artifact.
	Attestation DetailsResponse `pulumi:"attestation"`
	// Describes a verifiable build.
	Build GrafeasV1beta1BuildDetailsResponse `pulumi:"build"`
	// The time this occurrence was created.
	CreateTime string `pulumi:"createTime"`
	// Describes the deployment of an artifact on a runtime.
	Deployment GrafeasV1beta1DeploymentDetailsResponse `pulumi:"deployment"`
	// Describes how this resource derives from the basis in the associated note.
	DerivedImage GrafeasV1beta1ImageDetailsResponse `pulumi:"derivedImage"`
	// Describes when a resource was discovered.
	Discovered GrafeasV1beta1DiscoveryDetailsResponse `pulumi:"discovered"`
	// https://github.com/secure-systems-lab/dsse
	Envelope EnvelopeResponse `pulumi:"envelope"`
	// Describes the installation of a package on the linked resource.
	Installation GrafeasV1beta1PackageDetailsResponse `pulumi:"installation"`
	// Describes a specific in-toto link.
	Intoto GrafeasV1beta1IntotoDetailsResponse `pulumi:"intoto"`
	// This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.
	Kind string `pulumi:"kind"`
	// The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.
	Name string `pulumi:"name"`
	// Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.
	NoteName string `pulumi:"noteName"`
	// A description of actions that can be taken to remedy the note.
	Remediation string `pulumi:"remediation"`
	// Immutable. The resource for which the occurrence applies.
	Resource ResourceResponse `pulumi:"resource"`
	// Describes a specific software bill of materials document.
	Sbom DocumentOccurrenceResponse `pulumi:"sbom"`
	// Describes a specific SBOM reference occurrences.
	SbomReference SBOMReferenceOccurrenceResponse `pulumi:"sbomReference"`
	// Describes a specific SPDX File.
	SpdxFile FileOccurrenceResponse `pulumi:"spdxFile"`
	// Describes a specific SPDX Package.
	SpdxPackage PackageInfoOccurrenceResponse `pulumi:"spdxPackage"`
	// Describes a specific SPDX Relationship.
	SpdxRelationship RelationshipOccurrenceResponse `pulumi:"spdxRelationship"`
	// The time this occurrence was last updated.
	UpdateTime string `pulumi:"updateTime"`
	// Describes a security vulnerability.
	Vulnerability GrafeasV1beta1VulnerabilityDetailsResponse `pulumi:"vulnerability"`
}

func LookupOccurrenceOutput(ctx *pulumi.Context, args LookupOccurrenceOutputArgs, opts ...pulumi.InvokeOption) LookupOccurrenceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOccurrenceResult, error) {
			args := v.(LookupOccurrenceArgs)
			r, err := LookupOccurrence(ctx, &args, opts...)
			var s LookupOccurrenceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOccurrenceResultOutput)
}

type LookupOccurrenceOutputArgs struct {
	OccurrenceId pulumi.StringInput    `pulumi:"occurrenceId"`
	Project      pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupOccurrenceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOccurrenceArgs)(nil)).Elem()
}

type LookupOccurrenceResultOutput struct{ *pulumi.OutputState }

func (LookupOccurrenceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOccurrenceResult)(nil)).Elem()
}

func (o LookupOccurrenceResultOutput) ToLookupOccurrenceResultOutput() LookupOccurrenceResultOutput {
	return o
}

func (o LookupOccurrenceResultOutput) ToLookupOccurrenceResultOutputWithContext(ctx context.Context) LookupOccurrenceResultOutput {
	return o
}

// Describes an attestation of an artifact.
func (o LookupOccurrenceResultOutput) Attestation() DetailsResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) DetailsResponse { return v.Attestation }).(DetailsResponseOutput)
}

// Describes a verifiable build.
func (o LookupOccurrenceResultOutput) Build() GrafeasV1beta1BuildDetailsResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) GrafeasV1beta1BuildDetailsResponse { return v.Build }).(GrafeasV1beta1BuildDetailsResponseOutput)
}

// The time this occurrence was created.
func (o LookupOccurrenceResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Describes the deployment of an artifact on a runtime.
func (o LookupOccurrenceResultOutput) Deployment() GrafeasV1beta1DeploymentDetailsResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) GrafeasV1beta1DeploymentDetailsResponse { return v.Deployment }).(GrafeasV1beta1DeploymentDetailsResponseOutput)
}

// Describes how this resource derives from the basis in the associated note.
func (o LookupOccurrenceResultOutput) DerivedImage() GrafeasV1beta1ImageDetailsResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) GrafeasV1beta1ImageDetailsResponse { return v.DerivedImage }).(GrafeasV1beta1ImageDetailsResponseOutput)
}

// Describes when a resource was discovered.
func (o LookupOccurrenceResultOutput) Discovered() GrafeasV1beta1DiscoveryDetailsResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) GrafeasV1beta1DiscoveryDetailsResponse { return v.Discovered }).(GrafeasV1beta1DiscoveryDetailsResponseOutput)
}

// https://github.com/secure-systems-lab/dsse
func (o LookupOccurrenceResultOutput) Envelope() EnvelopeResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) EnvelopeResponse { return v.Envelope }).(EnvelopeResponseOutput)
}

// Describes the installation of a package on the linked resource.
func (o LookupOccurrenceResultOutput) Installation() GrafeasV1beta1PackageDetailsResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) GrafeasV1beta1PackageDetailsResponse { return v.Installation }).(GrafeasV1beta1PackageDetailsResponseOutput)
}

// Describes a specific in-toto link.
func (o LookupOccurrenceResultOutput) Intoto() GrafeasV1beta1IntotoDetailsResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) GrafeasV1beta1IntotoDetailsResponse { return v.Intoto }).(GrafeasV1beta1IntotoDetailsResponseOutput)
}

// This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.
func (o LookupOccurrenceResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) string { return v.Kind }).(pulumi.StringOutput)
}

// The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.
func (o LookupOccurrenceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.
func (o LookupOccurrenceResultOutput) NoteName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) string { return v.NoteName }).(pulumi.StringOutput)
}

// A description of actions that can be taken to remedy the note.
func (o LookupOccurrenceResultOutput) Remediation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) string { return v.Remediation }).(pulumi.StringOutput)
}

// Immutable. The resource for which the occurrence applies.
func (o LookupOccurrenceResultOutput) Resource() ResourceResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) ResourceResponse { return v.Resource }).(ResourceResponseOutput)
}

// Describes a specific software bill of materials document.
func (o LookupOccurrenceResultOutput) Sbom() DocumentOccurrenceResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) DocumentOccurrenceResponse { return v.Sbom }).(DocumentOccurrenceResponseOutput)
}

// Describes a specific SBOM reference occurrences.
func (o LookupOccurrenceResultOutput) SbomReference() SBOMReferenceOccurrenceResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) SBOMReferenceOccurrenceResponse { return v.SbomReference }).(SBOMReferenceOccurrenceResponseOutput)
}

// Describes a specific SPDX File.
func (o LookupOccurrenceResultOutput) SpdxFile() FileOccurrenceResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) FileOccurrenceResponse { return v.SpdxFile }).(FileOccurrenceResponseOutput)
}

// Describes a specific SPDX Package.
func (o LookupOccurrenceResultOutput) SpdxPackage() PackageInfoOccurrenceResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) PackageInfoOccurrenceResponse { return v.SpdxPackage }).(PackageInfoOccurrenceResponseOutput)
}

// Describes a specific SPDX Relationship.
func (o LookupOccurrenceResultOutput) SpdxRelationship() RelationshipOccurrenceResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) RelationshipOccurrenceResponse { return v.SpdxRelationship }).(RelationshipOccurrenceResponseOutput)
}

// The time this occurrence was last updated.
func (o LookupOccurrenceResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// Describes a security vulnerability.
func (o LookupOccurrenceResultOutput) Vulnerability() GrafeasV1beta1VulnerabilityDetailsResponseOutput {
	return o.ApplyT(func(v LookupOccurrenceResult) GrafeasV1beta1VulnerabilityDetailsResponse { return v.Vulnerability }).(GrafeasV1beta1VulnerabilityDetailsResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOccurrenceResultOutput{})
}
