// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The alias kind.
type AliasContextKind string

const (
	// Unknown.
	AliasContextKindKindUnspecified = AliasContextKind("KIND_UNSPECIFIED")
	// Git tag.
	AliasContextKindFixed = AliasContextKind("FIXED")
	// Git branch.
	AliasContextKindMovable = AliasContextKind("MOVABLE")
	// Used to specify non-standard aliases. For example, if a Git repo has a ref named "refs/foo/bar".
	AliasContextKindOther = AliasContextKind("OTHER")
)

func (AliasContextKind) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasContextKind)(nil)).Elem()
}

func (e AliasContextKind) ToAliasContextKindOutput() AliasContextKindOutput {
	return pulumi.ToOutput(e).(AliasContextKindOutput)
}

func (e AliasContextKind) ToAliasContextKindOutputWithContext(ctx context.Context) AliasContextKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AliasContextKindOutput)
}

func (e AliasContextKind) ToAliasContextKindPtrOutput() AliasContextKindPtrOutput {
	return e.ToAliasContextKindPtrOutputWithContext(context.Background())
}

func (e AliasContextKind) ToAliasContextKindPtrOutputWithContext(ctx context.Context) AliasContextKindPtrOutput {
	return AliasContextKind(e).ToAliasContextKindOutputWithContext(ctx).ToAliasContextKindPtrOutputWithContext(ctx)
}

func (e AliasContextKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AliasContextKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AliasContextKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AliasContextKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AliasContextKindOutput struct{ *pulumi.OutputState }

func (AliasContextKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasContextKind)(nil)).Elem()
}

func (o AliasContextKindOutput) ToAliasContextKindOutput() AliasContextKindOutput {
	return o
}

func (o AliasContextKindOutput) ToAliasContextKindOutputWithContext(ctx context.Context) AliasContextKindOutput {
	return o
}

func (o AliasContextKindOutput) ToAliasContextKindPtrOutput() AliasContextKindPtrOutput {
	return o.ToAliasContextKindPtrOutputWithContext(context.Background())
}

func (o AliasContextKindOutput) ToAliasContextKindPtrOutputWithContext(ctx context.Context) AliasContextKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AliasContextKind) *AliasContextKind {
		return &v
	}).(AliasContextKindPtrOutput)
}

func (o AliasContextKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AliasContextKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AliasContextKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AliasContextKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AliasContextKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AliasContextKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AliasContextKindPtrOutput struct{ *pulumi.OutputState }

func (AliasContextKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AliasContextKind)(nil)).Elem()
}

func (o AliasContextKindPtrOutput) ToAliasContextKindPtrOutput() AliasContextKindPtrOutput {
	return o
}

func (o AliasContextKindPtrOutput) ToAliasContextKindPtrOutputWithContext(ctx context.Context) AliasContextKindPtrOutput {
	return o
}

func (o AliasContextKindPtrOutput) Elem() AliasContextKindOutput {
	return o.ApplyT(func(v *AliasContextKind) AliasContextKind {
		if v != nil {
			return *v
		}
		var ret AliasContextKind
		return ret
	}).(AliasContextKindOutput)
}

func (o AliasContextKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AliasContextKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AliasContextKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AliasContextKindInput is an input type that accepts values of the AliasContextKind enum
// A concrete instance of `AliasContextKindInput` can be one of the following:
//
//	AliasContextKindKindUnspecified
//	AliasContextKindFixed
//	AliasContextKindMovable
//	AliasContextKindOther
type AliasContextKindInput interface {
	pulumi.Input

	ToAliasContextKindOutput() AliasContextKindOutput
	ToAliasContextKindOutputWithContext(context.Context) AliasContextKindOutput
}

var aliasContextKindPtrType = reflect.TypeOf((**AliasContextKind)(nil)).Elem()

type AliasContextKindPtrInput interface {
	pulumi.Input

	ToAliasContextKindPtrOutput() AliasContextKindPtrOutput
	ToAliasContextKindPtrOutputWithContext(context.Context) AliasContextKindPtrOutput
}

type aliasContextKindPtr string

func AliasContextKindPtr(v string) AliasContextKindPtrInput {
	return (*aliasContextKindPtr)(&v)
}

func (*aliasContextKindPtr) ElementType() reflect.Type {
	return aliasContextKindPtrType
}

func (in *aliasContextKindPtr) ToAliasContextKindPtrOutput() AliasContextKindPtrOutput {
	return pulumi.ToOutput(in).(AliasContextKindPtrOutput)
}

func (in *aliasContextKindPtr) ToAliasContextKindPtrOutputWithContext(ctx context.Context) AliasContextKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AliasContextKindPtrOutput)
}

func (in *aliasContextKindPtr) ToOutput(ctx context.Context) pulumix.Output[*AliasContextKind] {
	return pulumix.Output[*AliasContextKind]{
		OutputState: in.ToAliasContextKindPtrOutputWithContext(ctx).OutputState,
	}
}

// Provides the state of this Vulnerability assessment.
type AssessmentState string

const (
	// No state is specified.
	AssessmentStateStateUnspecified = AssessmentState("STATE_UNSPECIFIED")
	// This product is known to be affected by this vulnerability.
	AssessmentStateAffected = AssessmentState("AFFECTED")
	// This product is known to be not affected by this vulnerability.
	AssessmentStateNotAffected = AssessmentState("NOT_AFFECTED")
	// This product contains a fix for this vulnerability.
	AssessmentStateFixed = AssessmentState("FIXED")
	// It is not known yet whether these versions are or are not affected by the vulnerability. However, it is still under investigation.
	AssessmentStateUnderInvestigation = AssessmentState("UNDER_INVESTIGATION")
)

func (AssessmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentState)(nil)).Elem()
}

func (e AssessmentState) ToAssessmentStateOutput() AssessmentStateOutput {
	return pulumi.ToOutput(e).(AssessmentStateOutput)
}

func (e AssessmentState) ToAssessmentStateOutputWithContext(ctx context.Context) AssessmentStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssessmentStateOutput)
}

func (e AssessmentState) ToAssessmentStatePtrOutput() AssessmentStatePtrOutput {
	return e.ToAssessmentStatePtrOutputWithContext(context.Background())
}

func (e AssessmentState) ToAssessmentStatePtrOutputWithContext(ctx context.Context) AssessmentStatePtrOutput {
	return AssessmentState(e).ToAssessmentStateOutputWithContext(ctx).ToAssessmentStatePtrOutputWithContext(ctx)
}

func (e AssessmentState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssessmentState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssessmentStateOutput struct{ *pulumi.OutputState }

func (AssessmentStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentState)(nil)).Elem()
}

func (o AssessmentStateOutput) ToAssessmentStateOutput() AssessmentStateOutput {
	return o
}

func (o AssessmentStateOutput) ToAssessmentStateOutputWithContext(ctx context.Context) AssessmentStateOutput {
	return o
}

func (o AssessmentStateOutput) ToAssessmentStatePtrOutput() AssessmentStatePtrOutput {
	return o.ToAssessmentStatePtrOutputWithContext(context.Background())
}

func (o AssessmentStateOutput) ToAssessmentStatePtrOutputWithContext(ctx context.Context) AssessmentStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssessmentState) *AssessmentState {
		return &v
	}).(AssessmentStatePtrOutput)
}

func (o AssessmentStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssessmentStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssessmentStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssessmentStatePtrOutput struct{ *pulumi.OutputState }

func (AssessmentStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentState)(nil)).Elem()
}

func (o AssessmentStatePtrOutput) ToAssessmentStatePtrOutput() AssessmentStatePtrOutput {
	return o
}

func (o AssessmentStatePtrOutput) ToAssessmentStatePtrOutputWithContext(ctx context.Context) AssessmentStatePtrOutput {
	return o
}

func (o AssessmentStatePtrOutput) Elem() AssessmentStateOutput {
	return o.ApplyT(func(v *AssessmentState) AssessmentState {
		if v != nil {
			return *v
		}
		var ret AssessmentState
		return ret
	}).(AssessmentStateOutput)
}

func (o AssessmentStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssessmentState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssessmentStateInput is an input type that accepts values of the AssessmentState enum
// A concrete instance of `AssessmentStateInput` can be one of the following:
//
//	AssessmentStateStateUnspecified
//	AssessmentStateAffected
//	AssessmentStateNotAffected
//	AssessmentStateFixed
//	AssessmentStateUnderInvestigation
type AssessmentStateInput interface {
	pulumi.Input

	ToAssessmentStateOutput() AssessmentStateOutput
	ToAssessmentStateOutputWithContext(context.Context) AssessmentStateOutput
}

var assessmentStatePtrType = reflect.TypeOf((**AssessmentState)(nil)).Elem()

type AssessmentStatePtrInput interface {
	pulumi.Input

	ToAssessmentStatePtrOutput() AssessmentStatePtrOutput
	ToAssessmentStatePtrOutputWithContext(context.Context) AssessmentStatePtrOutput
}

type assessmentStatePtr string

func AssessmentStatePtr(v string) AssessmentStatePtrInput {
	return (*assessmentStatePtr)(&v)
}

func (*assessmentStatePtr) ElementType() reflect.Type {
	return assessmentStatePtrType
}

func (in *assessmentStatePtr) ToAssessmentStatePtrOutput() AssessmentStatePtrOutput {
	return pulumi.ToOutput(in).(AssessmentStatePtrOutput)
}

func (in *assessmentStatePtr) ToAssessmentStatePtrOutputWithContext(ctx context.Context) AssessmentStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssessmentStatePtrOutput)
}

func (in *assessmentStatePtr) ToOutput(ctx context.Context) pulumix.Output[*AssessmentState] {
	return pulumix.Output[*AssessmentState]{
		OutputState: in.ToAssessmentStatePtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSAttackComplexity string

const (
	CVSSAttackComplexityAttackComplexityUnspecified = CVSSAttackComplexity("ATTACK_COMPLEXITY_UNSPECIFIED")
	CVSSAttackComplexityAttackComplexityLow         = CVSSAttackComplexity("ATTACK_COMPLEXITY_LOW")
	CVSSAttackComplexityAttackComplexityHigh        = CVSSAttackComplexity("ATTACK_COMPLEXITY_HIGH")
	CVSSAttackComplexityAttackComplexityMedium      = CVSSAttackComplexity("ATTACK_COMPLEXITY_MEDIUM")
)

func (CVSSAttackComplexity) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSAttackComplexity)(nil)).Elem()
}

func (e CVSSAttackComplexity) ToCVSSAttackComplexityOutput() CVSSAttackComplexityOutput {
	return pulumi.ToOutput(e).(CVSSAttackComplexityOutput)
}

func (e CVSSAttackComplexity) ToCVSSAttackComplexityOutputWithContext(ctx context.Context) CVSSAttackComplexityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSAttackComplexityOutput)
}

func (e CVSSAttackComplexity) ToCVSSAttackComplexityPtrOutput() CVSSAttackComplexityPtrOutput {
	return e.ToCVSSAttackComplexityPtrOutputWithContext(context.Background())
}

func (e CVSSAttackComplexity) ToCVSSAttackComplexityPtrOutputWithContext(ctx context.Context) CVSSAttackComplexityPtrOutput {
	return CVSSAttackComplexity(e).ToCVSSAttackComplexityOutputWithContext(ctx).ToCVSSAttackComplexityPtrOutputWithContext(ctx)
}

func (e CVSSAttackComplexity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSAttackComplexity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSAttackComplexity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSAttackComplexity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSAttackComplexityOutput struct{ *pulumi.OutputState }

func (CVSSAttackComplexityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSAttackComplexity)(nil)).Elem()
}

func (o CVSSAttackComplexityOutput) ToCVSSAttackComplexityOutput() CVSSAttackComplexityOutput {
	return o
}

func (o CVSSAttackComplexityOutput) ToCVSSAttackComplexityOutputWithContext(ctx context.Context) CVSSAttackComplexityOutput {
	return o
}

func (o CVSSAttackComplexityOutput) ToCVSSAttackComplexityPtrOutput() CVSSAttackComplexityPtrOutput {
	return o.ToCVSSAttackComplexityPtrOutputWithContext(context.Background())
}

func (o CVSSAttackComplexityOutput) ToCVSSAttackComplexityPtrOutputWithContext(ctx context.Context) CVSSAttackComplexityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSAttackComplexity) *CVSSAttackComplexity {
		return &v
	}).(CVSSAttackComplexityPtrOutput)
}

func (o CVSSAttackComplexityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSAttackComplexityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSAttackComplexity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSAttackComplexityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSAttackComplexityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSAttackComplexity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSAttackComplexityPtrOutput struct{ *pulumi.OutputState }

func (CVSSAttackComplexityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSAttackComplexity)(nil)).Elem()
}

func (o CVSSAttackComplexityPtrOutput) ToCVSSAttackComplexityPtrOutput() CVSSAttackComplexityPtrOutput {
	return o
}

func (o CVSSAttackComplexityPtrOutput) ToCVSSAttackComplexityPtrOutputWithContext(ctx context.Context) CVSSAttackComplexityPtrOutput {
	return o
}

func (o CVSSAttackComplexityPtrOutput) Elem() CVSSAttackComplexityOutput {
	return o.ApplyT(func(v *CVSSAttackComplexity) CVSSAttackComplexity {
		if v != nil {
			return *v
		}
		var ret CVSSAttackComplexity
		return ret
	}).(CVSSAttackComplexityOutput)
}

func (o CVSSAttackComplexityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSAttackComplexityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSAttackComplexity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSAttackComplexityInput is an input type that accepts values of the CVSSAttackComplexity enum
// A concrete instance of `CVSSAttackComplexityInput` can be one of the following:
//
//	CVSSAttackComplexityAttackComplexityUnspecified
//	CVSSAttackComplexityAttackComplexityLow
//	CVSSAttackComplexityAttackComplexityHigh
//	CVSSAttackComplexityAttackComplexityMedium
type CVSSAttackComplexityInput interface {
	pulumi.Input

	ToCVSSAttackComplexityOutput() CVSSAttackComplexityOutput
	ToCVSSAttackComplexityOutputWithContext(context.Context) CVSSAttackComplexityOutput
}

var cvssattackComplexityPtrType = reflect.TypeOf((**CVSSAttackComplexity)(nil)).Elem()

type CVSSAttackComplexityPtrInput interface {
	pulumi.Input

	ToCVSSAttackComplexityPtrOutput() CVSSAttackComplexityPtrOutput
	ToCVSSAttackComplexityPtrOutputWithContext(context.Context) CVSSAttackComplexityPtrOutput
}

type cvssattackComplexityPtr string

func CVSSAttackComplexityPtr(v string) CVSSAttackComplexityPtrInput {
	return (*cvssattackComplexityPtr)(&v)
}

func (*cvssattackComplexityPtr) ElementType() reflect.Type {
	return cvssattackComplexityPtrType
}

func (in *cvssattackComplexityPtr) ToCVSSAttackComplexityPtrOutput() CVSSAttackComplexityPtrOutput {
	return pulumi.ToOutput(in).(CVSSAttackComplexityPtrOutput)
}

func (in *cvssattackComplexityPtr) ToCVSSAttackComplexityPtrOutputWithContext(ctx context.Context) CVSSAttackComplexityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSAttackComplexityPtrOutput)
}

func (in *cvssattackComplexityPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSAttackComplexity] {
	return pulumix.Output[*CVSSAttackComplexity]{
		OutputState: in.ToCVSSAttackComplexityPtrOutputWithContext(ctx).OutputState,
	}
}

// Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.
type CVSSAttackVector string

const (
	CVSSAttackVectorAttackVectorUnspecified = CVSSAttackVector("ATTACK_VECTOR_UNSPECIFIED")
	CVSSAttackVectorAttackVectorNetwork     = CVSSAttackVector("ATTACK_VECTOR_NETWORK")
	CVSSAttackVectorAttackVectorAdjacent    = CVSSAttackVector("ATTACK_VECTOR_ADJACENT")
	CVSSAttackVectorAttackVectorLocal       = CVSSAttackVector("ATTACK_VECTOR_LOCAL")
	CVSSAttackVectorAttackVectorPhysical    = CVSSAttackVector("ATTACK_VECTOR_PHYSICAL")
)

func (CVSSAttackVector) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSAttackVector)(nil)).Elem()
}

func (e CVSSAttackVector) ToCVSSAttackVectorOutput() CVSSAttackVectorOutput {
	return pulumi.ToOutput(e).(CVSSAttackVectorOutput)
}

func (e CVSSAttackVector) ToCVSSAttackVectorOutputWithContext(ctx context.Context) CVSSAttackVectorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSAttackVectorOutput)
}

func (e CVSSAttackVector) ToCVSSAttackVectorPtrOutput() CVSSAttackVectorPtrOutput {
	return e.ToCVSSAttackVectorPtrOutputWithContext(context.Background())
}

func (e CVSSAttackVector) ToCVSSAttackVectorPtrOutputWithContext(ctx context.Context) CVSSAttackVectorPtrOutput {
	return CVSSAttackVector(e).ToCVSSAttackVectorOutputWithContext(ctx).ToCVSSAttackVectorPtrOutputWithContext(ctx)
}

func (e CVSSAttackVector) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSAttackVector) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSAttackVector) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSAttackVector) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSAttackVectorOutput struct{ *pulumi.OutputState }

func (CVSSAttackVectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSAttackVector)(nil)).Elem()
}

func (o CVSSAttackVectorOutput) ToCVSSAttackVectorOutput() CVSSAttackVectorOutput {
	return o
}

func (o CVSSAttackVectorOutput) ToCVSSAttackVectorOutputWithContext(ctx context.Context) CVSSAttackVectorOutput {
	return o
}

func (o CVSSAttackVectorOutput) ToCVSSAttackVectorPtrOutput() CVSSAttackVectorPtrOutput {
	return o.ToCVSSAttackVectorPtrOutputWithContext(context.Background())
}

func (o CVSSAttackVectorOutput) ToCVSSAttackVectorPtrOutputWithContext(ctx context.Context) CVSSAttackVectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSAttackVector) *CVSSAttackVector {
		return &v
	}).(CVSSAttackVectorPtrOutput)
}

func (o CVSSAttackVectorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSAttackVectorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSAttackVector) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSAttackVectorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSAttackVectorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSAttackVector) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSAttackVectorPtrOutput struct{ *pulumi.OutputState }

func (CVSSAttackVectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSAttackVector)(nil)).Elem()
}

func (o CVSSAttackVectorPtrOutput) ToCVSSAttackVectorPtrOutput() CVSSAttackVectorPtrOutput {
	return o
}

func (o CVSSAttackVectorPtrOutput) ToCVSSAttackVectorPtrOutputWithContext(ctx context.Context) CVSSAttackVectorPtrOutput {
	return o
}

func (o CVSSAttackVectorPtrOutput) Elem() CVSSAttackVectorOutput {
	return o.ApplyT(func(v *CVSSAttackVector) CVSSAttackVector {
		if v != nil {
			return *v
		}
		var ret CVSSAttackVector
		return ret
	}).(CVSSAttackVectorOutput)
}

func (o CVSSAttackVectorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSAttackVectorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSAttackVector) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSAttackVectorInput is an input type that accepts values of the CVSSAttackVector enum
// A concrete instance of `CVSSAttackVectorInput` can be one of the following:
//
//	CVSSAttackVectorAttackVectorUnspecified
//	CVSSAttackVectorAttackVectorNetwork
//	CVSSAttackVectorAttackVectorAdjacent
//	CVSSAttackVectorAttackVectorLocal
//	CVSSAttackVectorAttackVectorPhysical
type CVSSAttackVectorInput interface {
	pulumi.Input

	ToCVSSAttackVectorOutput() CVSSAttackVectorOutput
	ToCVSSAttackVectorOutputWithContext(context.Context) CVSSAttackVectorOutput
}

var cvssattackVectorPtrType = reflect.TypeOf((**CVSSAttackVector)(nil)).Elem()

type CVSSAttackVectorPtrInput interface {
	pulumi.Input

	ToCVSSAttackVectorPtrOutput() CVSSAttackVectorPtrOutput
	ToCVSSAttackVectorPtrOutputWithContext(context.Context) CVSSAttackVectorPtrOutput
}

type cvssattackVectorPtr string

func CVSSAttackVectorPtr(v string) CVSSAttackVectorPtrInput {
	return (*cvssattackVectorPtr)(&v)
}

func (*cvssattackVectorPtr) ElementType() reflect.Type {
	return cvssattackVectorPtrType
}

func (in *cvssattackVectorPtr) ToCVSSAttackVectorPtrOutput() CVSSAttackVectorPtrOutput {
	return pulumi.ToOutput(in).(CVSSAttackVectorPtrOutput)
}

func (in *cvssattackVectorPtr) ToCVSSAttackVectorPtrOutputWithContext(ctx context.Context) CVSSAttackVectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSAttackVectorPtrOutput)
}

func (in *cvssattackVectorPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSAttackVector] {
	return pulumix.Output[*CVSSAttackVector]{
		OutputState: in.ToCVSSAttackVectorPtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSAuthentication string

const (
	CVSSAuthenticationAuthenticationUnspecified = CVSSAuthentication("AUTHENTICATION_UNSPECIFIED")
	CVSSAuthenticationAuthenticationMultiple    = CVSSAuthentication("AUTHENTICATION_MULTIPLE")
	CVSSAuthenticationAuthenticationSingle      = CVSSAuthentication("AUTHENTICATION_SINGLE")
	CVSSAuthenticationAuthenticationNone        = CVSSAuthentication("AUTHENTICATION_NONE")
)

func (CVSSAuthentication) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSAuthentication)(nil)).Elem()
}

func (e CVSSAuthentication) ToCVSSAuthenticationOutput() CVSSAuthenticationOutput {
	return pulumi.ToOutput(e).(CVSSAuthenticationOutput)
}

func (e CVSSAuthentication) ToCVSSAuthenticationOutputWithContext(ctx context.Context) CVSSAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSAuthenticationOutput)
}

func (e CVSSAuthentication) ToCVSSAuthenticationPtrOutput() CVSSAuthenticationPtrOutput {
	return e.ToCVSSAuthenticationPtrOutputWithContext(context.Background())
}

func (e CVSSAuthentication) ToCVSSAuthenticationPtrOutputWithContext(ctx context.Context) CVSSAuthenticationPtrOutput {
	return CVSSAuthentication(e).ToCVSSAuthenticationOutputWithContext(ctx).ToCVSSAuthenticationPtrOutputWithContext(ctx)
}

func (e CVSSAuthentication) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSAuthentication) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSAuthentication) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSAuthentication) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSAuthenticationOutput struct{ *pulumi.OutputState }

func (CVSSAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSAuthentication)(nil)).Elem()
}

func (o CVSSAuthenticationOutput) ToCVSSAuthenticationOutput() CVSSAuthenticationOutput {
	return o
}

func (o CVSSAuthenticationOutput) ToCVSSAuthenticationOutputWithContext(ctx context.Context) CVSSAuthenticationOutput {
	return o
}

func (o CVSSAuthenticationOutput) ToCVSSAuthenticationPtrOutput() CVSSAuthenticationPtrOutput {
	return o.ToCVSSAuthenticationPtrOutputWithContext(context.Background())
}

func (o CVSSAuthenticationOutput) ToCVSSAuthenticationPtrOutputWithContext(ctx context.Context) CVSSAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSAuthentication) *CVSSAuthentication {
		return &v
	}).(CVSSAuthenticationPtrOutput)
}

func (o CVSSAuthenticationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSAuthenticationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSAuthentication) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSAuthenticationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSAuthenticationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSAuthentication) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (CVSSAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSAuthentication)(nil)).Elem()
}

func (o CVSSAuthenticationPtrOutput) ToCVSSAuthenticationPtrOutput() CVSSAuthenticationPtrOutput {
	return o
}

func (o CVSSAuthenticationPtrOutput) ToCVSSAuthenticationPtrOutputWithContext(ctx context.Context) CVSSAuthenticationPtrOutput {
	return o
}

func (o CVSSAuthenticationPtrOutput) Elem() CVSSAuthenticationOutput {
	return o.ApplyT(func(v *CVSSAuthentication) CVSSAuthentication {
		if v != nil {
			return *v
		}
		var ret CVSSAuthentication
		return ret
	}).(CVSSAuthenticationOutput)
}

func (o CVSSAuthenticationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSAuthenticationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSAuthentication) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSAuthenticationInput is an input type that accepts values of the CVSSAuthentication enum
// A concrete instance of `CVSSAuthenticationInput` can be one of the following:
//
//	CVSSAuthenticationAuthenticationUnspecified
//	CVSSAuthenticationAuthenticationMultiple
//	CVSSAuthenticationAuthenticationSingle
//	CVSSAuthenticationAuthenticationNone
type CVSSAuthenticationInput interface {
	pulumi.Input

	ToCVSSAuthenticationOutput() CVSSAuthenticationOutput
	ToCVSSAuthenticationOutputWithContext(context.Context) CVSSAuthenticationOutput
}

var cvssauthenticationPtrType = reflect.TypeOf((**CVSSAuthentication)(nil)).Elem()

type CVSSAuthenticationPtrInput interface {
	pulumi.Input

	ToCVSSAuthenticationPtrOutput() CVSSAuthenticationPtrOutput
	ToCVSSAuthenticationPtrOutputWithContext(context.Context) CVSSAuthenticationPtrOutput
}

type cvssauthenticationPtr string

func CVSSAuthenticationPtr(v string) CVSSAuthenticationPtrInput {
	return (*cvssauthenticationPtr)(&v)
}

func (*cvssauthenticationPtr) ElementType() reflect.Type {
	return cvssauthenticationPtrType
}

func (in *cvssauthenticationPtr) ToCVSSAuthenticationPtrOutput() CVSSAuthenticationPtrOutput {
	return pulumi.ToOutput(in).(CVSSAuthenticationPtrOutput)
}

func (in *cvssauthenticationPtr) ToCVSSAuthenticationPtrOutputWithContext(ctx context.Context) CVSSAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSAuthenticationPtrOutput)
}

func (in *cvssauthenticationPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSAuthentication] {
	return pulumix.Output[*CVSSAuthentication]{
		OutputState: in.ToCVSSAuthenticationPtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSAvailabilityImpact string

const (
	CVSSAvailabilityImpactImpactUnspecified = CVSSAvailabilityImpact("IMPACT_UNSPECIFIED")
	CVSSAvailabilityImpactImpactHigh        = CVSSAvailabilityImpact("IMPACT_HIGH")
	CVSSAvailabilityImpactImpactLow         = CVSSAvailabilityImpact("IMPACT_LOW")
	CVSSAvailabilityImpactImpactNone        = CVSSAvailabilityImpact("IMPACT_NONE")
	CVSSAvailabilityImpactImpactPartial     = CVSSAvailabilityImpact("IMPACT_PARTIAL")
	CVSSAvailabilityImpactImpactComplete    = CVSSAvailabilityImpact("IMPACT_COMPLETE")
)

func (CVSSAvailabilityImpact) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSAvailabilityImpact)(nil)).Elem()
}

func (e CVSSAvailabilityImpact) ToCVSSAvailabilityImpactOutput() CVSSAvailabilityImpactOutput {
	return pulumi.ToOutput(e).(CVSSAvailabilityImpactOutput)
}

func (e CVSSAvailabilityImpact) ToCVSSAvailabilityImpactOutputWithContext(ctx context.Context) CVSSAvailabilityImpactOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSAvailabilityImpactOutput)
}

func (e CVSSAvailabilityImpact) ToCVSSAvailabilityImpactPtrOutput() CVSSAvailabilityImpactPtrOutput {
	return e.ToCVSSAvailabilityImpactPtrOutputWithContext(context.Background())
}

func (e CVSSAvailabilityImpact) ToCVSSAvailabilityImpactPtrOutputWithContext(ctx context.Context) CVSSAvailabilityImpactPtrOutput {
	return CVSSAvailabilityImpact(e).ToCVSSAvailabilityImpactOutputWithContext(ctx).ToCVSSAvailabilityImpactPtrOutputWithContext(ctx)
}

func (e CVSSAvailabilityImpact) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSAvailabilityImpact) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSAvailabilityImpact) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSAvailabilityImpact) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSAvailabilityImpactOutput struct{ *pulumi.OutputState }

func (CVSSAvailabilityImpactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSAvailabilityImpact)(nil)).Elem()
}

func (o CVSSAvailabilityImpactOutput) ToCVSSAvailabilityImpactOutput() CVSSAvailabilityImpactOutput {
	return o
}

func (o CVSSAvailabilityImpactOutput) ToCVSSAvailabilityImpactOutputWithContext(ctx context.Context) CVSSAvailabilityImpactOutput {
	return o
}

func (o CVSSAvailabilityImpactOutput) ToCVSSAvailabilityImpactPtrOutput() CVSSAvailabilityImpactPtrOutput {
	return o.ToCVSSAvailabilityImpactPtrOutputWithContext(context.Background())
}

func (o CVSSAvailabilityImpactOutput) ToCVSSAvailabilityImpactPtrOutputWithContext(ctx context.Context) CVSSAvailabilityImpactPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSAvailabilityImpact) *CVSSAvailabilityImpact {
		return &v
	}).(CVSSAvailabilityImpactPtrOutput)
}

func (o CVSSAvailabilityImpactOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSAvailabilityImpactOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSAvailabilityImpact) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSAvailabilityImpactOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSAvailabilityImpactOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSAvailabilityImpact) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSAvailabilityImpactPtrOutput struct{ *pulumi.OutputState }

func (CVSSAvailabilityImpactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSAvailabilityImpact)(nil)).Elem()
}

func (o CVSSAvailabilityImpactPtrOutput) ToCVSSAvailabilityImpactPtrOutput() CVSSAvailabilityImpactPtrOutput {
	return o
}

func (o CVSSAvailabilityImpactPtrOutput) ToCVSSAvailabilityImpactPtrOutputWithContext(ctx context.Context) CVSSAvailabilityImpactPtrOutput {
	return o
}

func (o CVSSAvailabilityImpactPtrOutput) Elem() CVSSAvailabilityImpactOutput {
	return o.ApplyT(func(v *CVSSAvailabilityImpact) CVSSAvailabilityImpact {
		if v != nil {
			return *v
		}
		var ret CVSSAvailabilityImpact
		return ret
	}).(CVSSAvailabilityImpactOutput)
}

func (o CVSSAvailabilityImpactPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSAvailabilityImpactPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSAvailabilityImpact) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSAvailabilityImpactInput is an input type that accepts values of the CVSSAvailabilityImpact enum
// A concrete instance of `CVSSAvailabilityImpactInput` can be one of the following:
//
//	CVSSAvailabilityImpactImpactUnspecified
//	CVSSAvailabilityImpactImpactHigh
//	CVSSAvailabilityImpactImpactLow
//	CVSSAvailabilityImpactImpactNone
//	CVSSAvailabilityImpactImpactPartial
//	CVSSAvailabilityImpactImpactComplete
type CVSSAvailabilityImpactInput interface {
	pulumi.Input

	ToCVSSAvailabilityImpactOutput() CVSSAvailabilityImpactOutput
	ToCVSSAvailabilityImpactOutputWithContext(context.Context) CVSSAvailabilityImpactOutput
}

var cvssavailabilityImpactPtrType = reflect.TypeOf((**CVSSAvailabilityImpact)(nil)).Elem()

type CVSSAvailabilityImpactPtrInput interface {
	pulumi.Input

	ToCVSSAvailabilityImpactPtrOutput() CVSSAvailabilityImpactPtrOutput
	ToCVSSAvailabilityImpactPtrOutputWithContext(context.Context) CVSSAvailabilityImpactPtrOutput
}

type cvssavailabilityImpactPtr string

func CVSSAvailabilityImpactPtr(v string) CVSSAvailabilityImpactPtrInput {
	return (*cvssavailabilityImpactPtr)(&v)
}

func (*cvssavailabilityImpactPtr) ElementType() reflect.Type {
	return cvssavailabilityImpactPtrType
}

func (in *cvssavailabilityImpactPtr) ToCVSSAvailabilityImpactPtrOutput() CVSSAvailabilityImpactPtrOutput {
	return pulumi.ToOutput(in).(CVSSAvailabilityImpactPtrOutput)
}

func (in *cvssavailabilityImpactPtr) ToCVSSAvailabilityImpactPtrOutputWithContext(ctx context.Context) CVSSAvailabilityImpactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSAvailabilityImpactPtrOutput)
}

func (in *cvssavailabilityImpactPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSAvailabilityImpact] {
	return pulumix.Output[*CVSSAvailabilityImpact]{
		OutputState: in.ToCVSSAvailabilityImpactPtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSConfidentialityImpact string

const (
	CVSSConfidentialityImpactImpactUnspecified = CVSSConfidentialityImpact("IMPACT_UNSPECIFIED")
	CVSSConfidentialityImpactImpactHigh        = CVSSConfidentialityImpact("IMPACT_HIGH")
	CVSSConfidentialityImpactImpactLow         = CVSSConfidentialityImpact("IMPACT_LOW")
	CVSSConfidentialityImpactImpactNone        = CVSSConfidentialityImpact("IMPACT_NONE")
	CVSSConfidentialityImpactImpactPartial     = CVSSConfidentialityImpact("IMPACT_PARTIAL")
	CVSSConfidentialityImpactImpactComplete    = CVSSConfidentialityImpact("IMPACT_COMPLETE")
)

func (CVSSConfidentialityImpact) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSConfidentialityImpact)(nil)).Elem()
}

func (e CVSSConfidentialityImpact) ToCVSSConfidentialityImpactOutput() CVSSConfidentialityImpactOutput {
	return pulumi.ToOutput(e).(CVSSConfidentialityImpactOutput)
}

func (e CVSSConfidentialityImpact) ToCVSSConfidentialityImpactOutputWithContext(ctx context.Context) CVSSConfidentialityImpactOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSConfidentialityImpactOutput)
}

func (e CVSSConfidentialityImpact) ToCVSSConfidentialityImpactPtrOutput() CVSSConfidentialityImpactPtrOutput {
	return e.ToCVSSConfidentialityImpactPtrOutputWithContext(context.Background())
}

func (e CVSSConfidentialityImpact) ToCVSSConfidentialityImpactPtrOutputWithContext(ctx context.Context) CVSSConfidentialityImpactPtrOutput {
	return CVSSConfidentialityImpact(e).ToCVSSConfidentialityImpactOutputWithContext(ctx).ToCVSSConfidentialityImpactPtrOutputWithContext(ctx)
}

func (e CVSSConfidentialityImpact) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSConfidentialityImpact) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSConfidentialityImpact) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSConfidentialityImpact) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSConfidentialityImpactOutput struct{ *pulumi.OutputState }

func (CVSSConfidentialityImpactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSConfidentialityImpact)(nil)).Elem()
}

func (o CVSSConfidentialityImpactOutput) ToCVSSConfidentialityImpactOutput() CVSSConfidentialityImpactOutput {
	return o
}

func (o CVSSConfidentialityImpactOutput) ToCVSSConfidentialityImpactOutputWithContext(ctx context.Context) CVSSConfidentialityImpactOutput {
	return o
}

func (o CVSSConfidentialityImpactOutput) ToCVSSConfidentialityImpactPtrOutput() CVSSConfidentialityImpactPtrOutput {
	return o.ToCVSSConfidentialityImpactPtrOutputWithContext(context.Background())
}

func (o CVSSConfidentialityImpactOutput) ToCVSSConfidentialityImpactPtrOutputWithContext(ctx context.Context) CVSSConfidentialityImpactPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSConfidentialityImpact) *CVSSConfidentialityImpact {
		return &v
	}).(CVSSConfidentialityImpactPtrOutput)
}

func (o CVSSConfidentialityImpactOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSConfidentialityImpactOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSConfidentialityImpact) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSConfidentialityImpactOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSConfidentialityImpactOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSConfidentialityImpact) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSConfidentialityImpactPtrOutput struct{ *pulumi.OutputState }

func (CVSSConfidentialityImpactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSConfidentialityImpact)(nil)).Elem()
}

func (o CVSSConfidentialityImpactPtrOutput) ToCVSSConfidentialityImpactPtrOutput() CVSSConfidentialityImpactPtrOutput {
	return o
}

func (o CVSSConfidentialityImpactPtrOutput) ToCVSSConfidentialityImpactPtrOutputWithContext(ctx context.Context) CVSSConfidentialityImpactPtrOutput {
	return o
}

func (o CVSSConfidentialityImpactPtrOutput) Elem() CVSSConfidentialityImpactOutput {
	return o.ApplyT(func(v *CVSSConfidentialityImpact) CVSSConfidentialityImpact {
		if v != nil {
			return *v
		}
		var ret CVSSConfidentialityImpact
		return ret
	}).(CVSSConfidentialityImpactOutput)
}

func (o CVSSConfidentialityImpactPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSConfidentialityImpactPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSConfidentialityImpact) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSConfidentialityImpactInput is an input type that accepts values of the CVSSConfidentialityImpact enum
// A concrete instance of `CVSSConfidentialityImpactInput` can be one of the following:
//
//	CVSSConfidentialityImpactImpactUnspecified
//	CVSSConfidentialityImpactImpactHigh
//	CVSSConfidentialityImpactImpactLow
//	CVSSConfidentialityImpactImpactNone
//	CVSSConfidentialityImpactImpactPartial
//	CVSSConfidentialityImpactImpactComplete
type CVSSConfidentialityImpactInput interface {
	pulumi.Input

	ToCVSSConfidentialityImpactOutput() CVSSConfidentialityImpactOutput
	ToCVSSConfidentialityImpactOutputWithContext(context.Context) CVSSConfidentialityImpactOutput
}

var cvssconfidentialityImpactPtrType = reflect.TypeOf((**CVSSConfidentialityImpact)(nil)).Elem()

type CVSSConfidentialityImpactPtrInput interface {
	pulumi.Input

	ToCVSSConfidentialityImpactPtrOutput() CVSSConfidentialityImpactPtrOutput
	ToCVSSConfidentialityImpactPtrOutputWithContext(context.Context) CVSSConfidentialityImpactPtrOutput
}

type cvssconfidentialityImpactPtr string

func CVSSConfidentialityImpactPtr(v string) CVSSConfidentialityImpactPtrInput {
	return (*cvssconfidentialityImpactPtr)(&v)
}

func (*cvssconfidentialityImpactPtr) ElementType() reflect.Type {
	return cvssconfidentialityImpactPtrType
}

func (in *cvssconfidentialityImpactPtr) ToCVSSConfidentialityImpactPtrOutput() CVSSConfidentialityImpactPtrOutput {
	return pulumi.ToOutput(in).(CVSSConfidentialityImpactPtrOutput)
}

func (in *cvssconfidentialityImpactPtr) ToCVSSConfidentialityImpactPtrOutputWithContext(ctx context.Context) CVSSConfidentialityImpactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSConfidentialityImpactPtrOutput)
}

func (in *cvssconfidentialityImpactPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSConfidentialityImpact] {
	return pulumix.Output[*CVSSConfidentialityImpact]{
		OutputState: in.ToCVSSConfidentialityImpactPtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSIntegrityImpact string

const (
	CVSSIntegrityImpactImpactUnspecified = CVSSIntegrityImpact("IMPACT_UNSPECIFIED")
	CVSSIntegrityImpactImpactHigh        = CVSSIntegrityImpact("IMPACT_HIGH")
	CVSSIntegrityImpactImpactLow         = CVSSIntegrityImpact("IMPACT_LOW")
	CVSSIntegrityImpactImpactNone        = CVSSIntegrityImpact("IMPACT_NONE")
	CVSSIntegrityImpactImpactPartial     = CVSSIntegrityImpact("IMPACT_PARTIAL")
	CVSSIntegrityImpactImpactComplete    = CVSSIntegrityImpact("IMPACT_COMPLETE")
)

func (CVSSIntegrityImpact) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSIntegrityImpact)(nil)).Elem()
}

func (e CVSSIntegrityImpact) ToCVSSIntegrityImpactOutput() CVSSIntegrityImpactOutput {
	return pulumi.ToOutput(e).(CVSSIntegrityImpactOutput)
}

func (e CVSSIntegrityImpact) ToCVSSIntegrityImpactOutputWithContext(ctx context.Context) CVSSIntegrityImpactOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSIntegrityImpactOutput)
}

func (e CVSSIntegrityImpact) ToCVSSIntegrityImpactPtrOutput() CVSSIntegrityImpactPtrOutput {
	return e.ToCVSSIntegrityImpactPtrOutputWithContext(context.Background())
}

func (e CVSSIntegrityImpact) ToCVSSIntegrityImpactPtrOutputWithContext(ctx context.Context) CVSSIntegrityImpactPtrOutput {
	return CVSSIntegrityImpact(e).ToCVSSIntegrityImpactOutputWithContext(ctx).ToCVSSIntegrityImpactPtrOutputWithContext(ctx)
}

func (e CVSSIntegrityImpact) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSIntegrityImpact) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSIntegrityImpact) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSIntegrityImpact) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSIntegrityImpactOutput struct{ *pulumi.OutputState }

func (CVSSIntegrityImpactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSIntegrityImpact)(nil)).Elem()
}

func (o CVSSIntegrityImpactOutput) ToCVSSIntegrityImpactOutput() CVSSIntegrityImpactOutput {
	return o
}

func (o CVSSIntegrityImpactOutput) ToCVSSIntegrityImpactOutputWithContext(ctx context.Context) CVSSIntegrityImpactOutput {
	return o
}

func (o CVSSIntegrityImpactOutput) ToCVSSIntegrityImpactPtrOutput() CVSSIntegrityImpactPtrOutput {
	return o.ToCVSSIntegrityImpactPtrOutputWithContext(context.Background())
}

func (o CVSSIntegrityImpactOutput) ToCVSSIntegrityImpactPtrOutputWithContext(ctx context.Context) CVSSIntegrityImpactPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSIntegrityImpact) *CVSSIntegrityImpact {
		return &v
	}).(CVSSIntegrityImpactPtrOutput)
}

func (o CVSSIntegrityImpactOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSIntegrityImpactOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSIntegrityImpact) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSIntegrityImpactOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSIntegrityImpactOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSIntegrityImpact) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSIntegrityImpactPtrOutput struct{ *pulumi.OutputState }

func (CVSSIntegrityImpactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSIntegrityImpact)(nil)).Elem()
}

func (o CVSSIntegrityImpactPtrOutput) ToCVSSIntegrityImpactPtrOutput() CVSSIntegrityImpactPtrOutput {
	return o
}

func (o CVSSIntegrityImpactPtrOutput) ToCVSSIntegrityImpactPtrOutputWithContext(ctx context.Context) CVSSIntegrityImpactPtrOutput {
	return o
}

func (o CVSSIntegrityImpactPtrOutput) Elem() CVSSIntegrityImpactOutput {
	return o.ApplyT(func(v *CVSSIntegrityImpact) CVSSIntegrityImpact {
		if v != nil {
			return *v
		}
		var ret CVSSIntegrityImpact
		return ret
	}).(CVSSIntegrityImpactOutput)
}

func (o CVSSIntegrityImpactPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSIntegrityImpactPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSIntegrityImpact) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSIntegrityImpactInput is an input type that accepts values of the CVSSIntegrityImpact enum
// A concrete instance of `CVSSIntegrityImpactInput` can be one of the following:
//
//	CVSSIntegrityImpactImpactUnspecified
//	CVSSIntegrityImpactImpactHigh
//	CVSSIntegrityImpactImpactLow
//	CVSSIntegrityImpactImpactNone
//	CVSSIntegrityImpactImpactPartial
//	CVSSIntegrityImpactImpactComplete
type CVSSIntegrityImpactInput interface {
	pulumi.Input

	ToCVSSIntegrityImpactOutput() CVSSIntegrityImpactOutput
	ToCVSSIntegrityImpactOutputWithContext(context.Context) CVSSIntegrityImpactOutput
}

var cvssintegrityImpactPtrType = reflect.TypeOf((**CVSSIntegrityImpact)(nil)).Elem()

type CVSSIntegrityImpactPtrInput interface {
	pulumi.Input

	ToCVSSIntegrityImpactPtrOutput() CVSSIntegrityImpactPtrOutput
	ToCVSSIntegrityImpactPtrOutputWithContext(context.Context) CVSSIntegrityImpactPtrOutput
}

type cvssintegrityImpactPtr string

func CVSSIntegrityImpactPtr(v string) CVSSIntegrityImpactPtrInput {
	return (*cvssintegrityImpactPtr)(&v)
}

func (*cvssintegrityImpactPtr) ElementType() reflect.Type {
	return cvssintegrityImpactPtrType
}

func (in *cvssintegrityImpactPtr) ToCVSSIntegrityImpactPtrOutput() CVSSIntegrityImpactPtrOutput {
	return pulumi.ToOutput(in).(CVSSIntegrityImpactPtrOutput)
}

func (in *cvssintegrityImpactPtr) ToCVSSIntegrityImpactPtrOutputWithContext(ctx context.Context) CVSSIntegrityImpactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSIntegrityImpactPtrOutput)
}

func (in *cvssintegrityImpactPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSIntegrityImpact] {
	return pulumix.Output[*CVSSIntegrityImpact]{
		OutputState: in.ToCVSSIntegrityImpactPtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSPrivilegesRequired string

const (
	CVSSPrivilegesRequiredPrivilegesRequiredUnspecified = CVSSPrivilegesRequired("PRIVILEGES_REQUIRED_UNSPECIFIED")
	CVSSPrivilegesRequiredPrivilegesRequiredNone        = CVSSPrivilegesRequired("PRIVILEGES_REQUIRED_NONE")
	CVSSPrivilegesRequiredPrivilegesRequiredLow         = CVSSPrivilegesRequired("PRIVILEGES_REQUIRED_LOW")
	CVSSPrivilegesRequiredPrivilegesRequiredHigh        = CVSSPrivilegesRequired("PRIVILEGES_REQUIRED_HIGH")
)

func (CVSSPrivilegesRequired) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSPrivilegesRequired)(nil)).Elem()
}

func (e CVSSPrivilegesRequired) ToCVSSPrivilegesRequiredOutput() CVSSPrivilegesRequiredOutput {
	return pulumi.ToOutput(e).(CVSSPrivilegesRequiredOutput)
}

func (e CVSSPrivilegesRequired) ToCVSSPrivilegesRequiredOutputWithContext(ctx context.Context) CVSSPrivilegesRequiredOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSPrivilegesRequiredOutput)
}

func (e CVSSPrivilegesRequired) ToCVSSPrivilegesRequiredPtrOutput() CVSSPrivilegesRequiredPtrOutput {
	return e.ToCVSSPrivilegesRequiredPtrOutputWithContext(context.Background())
}

func (e CVSSPrivilegesRequired) ToCVSSPrivilegesRequiredPtrOutputWithContext(ctx context.Context) CVSSPrivilegesRequiredPtrOutput {
	return CVSSPrivilegesRequired(e).ToCVSSPrivilegesRequiredOutputWithContext(ctx).ToCVSSPrivilegesRequiredPtrOutputWithContext(ctx)
}

func (e CVSSPrivilegesRequired) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSPrivilegesRequired) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSPrivilegesRequired) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSPrivilegesRequired) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSPrivilegesRequiredOutput struct{ *pulumi.OutputState }

func (CVSSPrivilegesRequiredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSPrivilegesRequired)(nil)).Elem()
}

func (o CVSSPrivilegesRequiredOutput) ToCVSSPrivilegesRequiredOutput() CVSSPrivilegesRequiredOutput {
	return o
}

func (o CVSSPrivilegesRequiredOutput) ToCVSSPrivilegesRequiredOutputWithContext(ctx context.Context) CVSSPrivilegesRequiredOutput {
	return o
}

func (o CVSSPrivilegesRequiredOutput) ToCVSSPrivilegesRequiredPtrOutput() CVSSPrivilegesRequiredPtrOutput {
	return o.ToCVSSPrivilegesRequiredPtrOutputWithContext(context.Background())
}

func (o CVSSPrivilegesRequiredOutput) ToCVSSPrivilegesRequiredPtrOutputWithContext(ctx context.Context) CVSSPrivilegesRequiredPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSPrivilegesRequired) *CVSSPrivilegesRequired {
		return &v
	}).(CVSSPrivilegesRequiredPtrOutput)
}

func (o CVSSPrivilegesRequiredOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSPrivilegesRequiredOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSPrivilegesRequired) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSPrivilegesRequiredOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSPrivilegesRequiredOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSPrivilegesRequired) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSPrivilegesRequiredPtrOutput struct{ *pulumi.OutputState }

func (CVSSPrivilegesRequiredPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSPrivilegesRequired)(nil)).Elem()
}

func (o CVSSPrivilegesRequiredPtrOutput) ToCVSSPrivilegesRequiredPtrOutput() CVSSPrivilegesRequiredPtrOutput {
	return o
}

func (o CVSSPrivilegesRequiredPtrOutput) ToCVSSPrivilegesRequiredPtrOutputWithContext(ctx context.Context) CVSSPrivilegesRequiredPtrOutput {
	return o
}

func (o CVSSPrivilegesRequiredPtrOutput) Elem() CVSSPrivilegesRequiredOutput {
	return o.ApplyT(func(v *CVSSPrivilegesRequired) CVSSPrivilegesRequired {
		if v != nil {
			return *v
		}
		var ret CVSSPrivilegesRequired
		return ret
	}).(CVSSPrivilegesRequiredOutput)
}

func (o CVSSPrivilegesRequiredPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSPrivilegesRequiredPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSPrivilegesRequired) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSPrivilegesRequiredInput is an input type that accepts values of the CVSSPrivilegesRequired enum
// A concrete instance of `CVSSPrivilegesRequiredInput` can be one of the following:
//
//	CVSSPrivilegesRequiredPrivilegesRequiredUnspecified
//	CVSSPrivilegesRequiredPrivilegesRequiredNone
//	CVSSPrivilegesRequiredPrivilegesRequiredLow
//	CVSSPrivilegesRequiredPrivilegesRequiredHigh
type CVSSPrivilegesRequiredInput interface {
	pulumi.Input

	ToCVSSPrivilegesRequiredOutput() CVSSPrivilegesRequiredOutput
	ToCVSSPrivilegesRequiredOutputWithContext(context.Context) CVSSPrivilegesRequiredOutput
}

var cvssprivilegesRequiredPtrType = reflect.TypeOf((**CVSSPrivilegesRequired)(nil)).Elem()

type CVSSPrivilegesRequiredPtrInput interface {
	pulumi.Input

	ToCVSSPrivilegesRequiredPtrOutput() CVSSPrivilegesRequiredPtrOutput
	ToCVSSPrivilegesRequiredPtrOutputWithContext(context.Context) CVSSPrivilegesRequiredPtrOutput
}

type cvssprivilegesRequiredPtr string

func CVSSPrivilegesRequiredPtr(v string) CVSSPrivilegesRequiredPtrInput {
	return (*cvssprivilegesRequiredPtr)(&v)
}

func (*cvssprivilegesRequiredPtr) ElementType() reflect.Type {
	return cvssprivilegesRequiredPtrType
}

func (in *cvssprivilegesRequiredPtr) ToCVSSPrivilegesRequiredPtrOutput() CVSSPrivilegesRequiredPtrOutput {
	return pulumi.ToOutput(in).(CVSSPrivilegesRequiredPtrOutput)
}

func (in *cvssprivilegesRequiredPtr) ToCVSSPrivilegesRequiredPtrOutputWithContext(ctx context.Context) CVSSPrivilegesRequiredPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSPrivilegesRequiredPtrOutput)
}

func (in *cvssprivilegesRequiredPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSPrivilegesRequired] {
	return pulumix.Output[*CVSSPrivilegesRequired]{
		OutputState: in.ToCVSSPrivilegesRequiredPtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSScope string

const (
	CVSSScopeScopeUnspecified = CVSSScope("SCOPE_UNSPECIFIED")
	CVSSScopeScopeUnchanged   = CVSSScope("SCOPE_UNCHANGED")
	CVSSScopeScopeChanged     = CVSSScope("SCOPE_CHANGED")
)

func (CVSSScope) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSScope)(nil)).Elem()
}

func (e CVSSScope) ToCVSSScopeOutput() CVSSScopeOutput {
	return pulumi.ToOutput(e).(CVSSScopeOutput)
}

func (e CVSSScope) ToCVSSScopeOutputWithContext(ctx context.Context) CVSSScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSScopeOutput)
}

func (e CVSSScope) ToCVSSScopePtrOutput() CVSSScopePtrOutput {
	return e.ToCVSSScopePtrOutputWithContext(context.Background())
}

func (e CVSSScope) ToCVSSScopePtrOutputWithContext(ctx context.Context) CVSSScopePtrOutput {
	return CVSSScope(e).ToCVSSScopeOutputWithContext(ctx).ToCVSSScopePtrOutputWithContext(ctx)
}

func (e CVSSScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSScopeOutput struct{ *pulumi.OutputState }

func (CVSSScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSScope)(nil)).Elem()
}

func (o CVSSScopeOutput) ToCVSSScopeOutput() CVSSScopeOutput {
	return o
}

func (o CVSSScopeOutput) ToCVSSScopeOutputWithContext(ctx context.Context) CVSSScopeOutput {
	return o
}

func (o CVSSScopeOutput) ToCVSSScopePtrOutput() CVSSScopePtrOutput {
	return o.ToCVSSScopePtrOutputWithContext(context.Background())
}

func (o CVSSScopeOutput) ToCVSSScopePtrOutputWithContext(ctx context.Context) CVSSScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSScope) *CVSSScope {
		return &v
	}).(CVSSScopePtrOutput)
}

func (o CVSSScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSScopePtrOutput struct{ *pulumi.OutputState }

func (CVSSScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSScope)(nil)).Elem()
}

func (o CVSSScopePtrOutput) ToCVSSScopePtrOutput() CVSSScopePtrOutput {
	return o
}

func (o CVSSScopePtrOutput) ToCVSSScopePtrOutputWithContext(ctx context.Context) CVSSScopePtrOutput {
	return o
}

func (o CVSSScopePtrOutput) Elem() CVSSScopeOutput {
	return o.ApplyT(func(v *CVSSScope) CVSSScope {
		if v != nil {
			return *v
		}
		var ret CVSSScope
		return ret
	}).(CVSSScopeOutput)
}

func (o CVSSScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSScopeInput is an input type that accepts values of the CVSSScope enum
// A concrete instance of `CVSSScopeInput` can be one of the following:
//
//	CVSSScopeScopeUnspecified
//	CVSSScopeScopeUnchanged
//	CVSSScopeScopeChanged
type CVSSScopeInput interface {
	pulumi.Input

	ToCVSSScopeOutput() CVSSScopeOutput
	ToCVSSScopeOutputWithContext(context.Context) CVSSScopeOutput
}

var cvssscopePtrType = reflect.TypeOf((**CVSSScope)(nil)).Elem()

type CVSSScopePtrInput interface {
	pulumi.Input

	ToCVSSScopePtrOutput() CVSSScopePtrOutput
	ToCVSSScopePtrOutputWithContext(context.Context) CVSSScopePtrOutput
}

type cvssscopePtr string

func CVSSScopePtr(v string) CVSSScopePtrInput {
	return (*cvssscopePtr)(&v)
}

func (*cvssscopePtr) ElementType() reflect.Type {
	return cvssscopePtrType
}

func (in *cvssscopePtr) ToCVSSScopePtrOutput() CVSSScopePtrOutput {
	return pulumi.ToOutput(in).(CVSSScopePtrOutput)
}

func (in *cvssscopePtr) ToCVSSScopePtrOutputWithContext(ctx context.Context) CVSSScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSScopePtrOutput)
}

func (in *cvssscopePtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSScope] {
	return pulumix.Output[*CVSSScope]{
		OutputState: in.ToCVSSScopePtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSUserInteraction string

const (
	CVSSUserInteractionUserInteractionUnspecified = CVSSUserInteraction("USER_INTERACTION_UNSPECIFIED")
	CVSSUserInteractionUserInteractionNone        = CVSSUserInteraction("USER_INTERACTION_NONE")
	CVSSUserInteractionUserInteractionRequired    = CVSSUserInteraction("USER_INTERACTION_REQUIRED")
)

func (CVSSUserInteraction) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSUserInteraction)(nil)).Elem()
}

func (e CVSSUserInteraction) ToCVSSUserInteractionOutput() CVSSUserInteractionOutput {
	return pulumi.ToOutput(e).(CVSSUserInteractionOutput)
}

func (e CVSSUserInteraction) ToCVSSUserInteractionOutputWithContext(ctx context.Context) CVSSUserInteractionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSUserInteractionOutput)
}

func (e CVSSUserInteraction) ToCVSSUserInteractionPtrOutput() CVSSUserInteractionPtrOutput {
	return e.ToCVSSUserInteractionPtrOutputWithContext(context.Background())
}

func (e CVSSUserInteraction) ToCVSSUserInteractionPtrOutputWithContext(ctx context.Context) CVSSUserInteractionPtrOutput {
	return CVSSUserInteraction(e).ToCVSSUserInteractionOutputWithContext(ctx).ToCVSSUserInteractionPtrOutputWithContext(ctx)
}

func (e CVSSUserInteraction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSUserInteraction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSUserInteraction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSUserInteraction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSUserInteractionOutput struct{ *pulumi.OutputState }

func (CVSSUserInteractionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSUserInteraction)(nil)).Elem()
}

func (o CVSSUserInteractionOutput) ToCVSSUserInteractionOutput() CVSSUserInteractionOutput {
	return o
}

func (o CVSSUserInteractionOutput) ToCVSSUserInteractionOutputWithContext(ctx context.Context) CVSSUserInteractionOutput {
	return o
}

func (o CVSSUserInteractionOutput) ToCVSSUserInteractionPtrOutput() CVSSUserInteractionPtrOutput {
	return o.ToCVSSUserInteractionPtrOutputWithContext(context.Background())
}

func (o CVSSUserInteractionOutput) ToCVSSUserInteractionPtrOutputWithContext(ctx context.Context) CVSSUserInteractionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSUserInteraction) *CVSSUserInteraction {
		return &v
	}).(CVSSUserInteractionPtrOutput)
}

func (o CVSSUserInteractionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSUserInteractionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSUserInteraction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSUserInteractionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSUserInteractionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSUserInteraction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSUserInteractionPtrOutput struct{ *pulumi.OutputState }

func (CVSSUserInteractionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSUserInteraction)(nil)).Elem()
}

func (o CVSSUserInteractionPtrOutput) ToCVSSUserInteractionPtrOutput() CVSSUserInteractionPtrOutput {
	return o
}

func (o CVSSUserInteractionPtrOutput) ToCVSSUserInteractionPtrOutputWithContext(ctx context.Context) CVSSUserInteractionPtrOutput {
	return o
}

func (o CVSSUserInteractionPtrOutput) Elem() CVSSUserInteractionOutput {
	return o.ApplyT(func(v *CVSSUserInteraction) CVSSUserInteraction {
		if v != nil {
			return *v
		}
		var ret CVSSUserInteraction
		return ret
	}).(CVSSUserInteractionOutput)
}

func (o CVSSUserInteractionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSUserInteractionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSUserInteraction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSUserInteractionInput is an input type that accepts values of the CVSSUserInteraction enum
// A concrete instance of `CVSSUserInteractionInput` can be one of the following:
//
//	CVSSUserInteractionUserInteractionUnspecified
//	CVSSUserInteractionUserInteractionNone
//	CVSSUserInteractionUserInteractionRequired
type CVSSUserInteractionInput interface {
	pulumi.Input

	ToCVSSUserInteractionOutput() CVSSUserInteractionOutput
	ToCVSSUserInteractionOutputWithContext(context.Context) CVSSUserInteractionOutput
}

var cvssuserInteractionPtrType = reflect.TypeOf((**CVSSUserInteraction)(nil)).Elem()

type CVSSUserInteractionPtrInput interface {
	pulumi.Input

	ToCVSSUserInteractionPtrOutput() CVSSUserInteractionPtrOutput
	ToCVSSUserInteractionPtrOutputWithContext(context.Context) CVSSUserInteractionPtrOutput
}

type cvssuserInteractionPtr string

func CVSSUserInteractionPtr(v string) CVSSUserInteractionPtrInput {
	return (*cvssuserInteractionPtr)(&v)
}

func (*cvssuserInteractionPtr) ElementType() reflect.Type {
	return cvssuserInteractionPtrType
}

func (in *cvssuserInteractionPtr) ToCVSSUserInteractionPtrOutput() CVSSUserInteractionPtrOutput {
	return pulumi.ToOutput(in).(CVSSUserInteractionPtrOutput)
}

func (in *cvssuserInteractionPtr) ToCVSSUserInteractionPtrOutputWithContext(ctx context.Context) CVSSUserInteractionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSUserInteractionPtrOutput)
}

func (in *cvssuserInteractionPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSUserInteraction] {
	return pulumix.Output[*CVSSUserInteraction]{
		OutputState: in.ToCVSSUserInteractionPtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSv3AttackComplexity string

const (
	CVSSv3AttackComplexityAttackComplexityUnspecified = CVSSv3AttackComplexity("ATTACK_COMPLEXITY_UNSPECIFIED")
	CVSSv3AttackComplexityAttackComplexityLow         = CVSSv3AttackComplexity("ATTACK_COMPLEXITY_LOW")
	CVSSv3AttackComplexityAttackComplexityHigh        = CVSSv3AttackComplexity("ATTACK_COMPLEXITY_HIGH")
)

func (CVSSv3AttackComplexity) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3AttackComplexity)(nil)).Elem()
}

func (e CVSSv3AttackComplexity) ToCVSSv3AttackComplexityOutput() CVSSv3AttackComplexityOutput {
	return pulumi.ToOutput(e).(CVSSv3AttackComplexityOutput)
}

func (e CVSSv3AttackComplexity) ToCVSSv3AttackComplexityOutputWithContext(ctx context.Context) CVSSv3AttackComplexityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3AttackComplexityOutput)
}

func (e CVSSv3AttackComplexity) ToCVSSv3AttackComplexityPtrOutput() CVSSv3AttackComplexityPtrOutput {
	return e.ToCVSSv3AttackComplexityPtrOutputWithContext(context.Background())
}

func (e CVSSv3AttackComplexity) ToCVSSv3AttackComplexityPtrOutputWithContext(ctx context.Context) CVSSv3AttackComplexityPtrOutput {
	return CVSSv3AttackComplexity(e).ToCVSSv3AttackComplexityOutputWithContext(ctx).ToCVSSv3AttackComplexityPtrOutputWithContext(ctx)
}

func (e CVSSv3AttackComplexity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AttackComplexity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AttackComplexity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3AttackComplexity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3AttackComplexityOutput struct{ *pulumi.OutputState }

func (CVSSv3AttackComplexityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3AttackComplexity)(nil)).Elem()
}

func (o CVSSv3AttackComplexityOutput) ToCVSSv3AttackComplexityOutput() CVSSv3AttackComplexityOutput {
	return o
}

func (o CVSSv3AttackComplexityOutput) ToCVSSv3AttackComplexityOutputWithContext(ctx context.Context) CVSSv3AttackComplexityOutput {
	return o
}

func (o CVSSv3AttackComplexityOutput) ToCVSSv3AttackComplexityPtrOutput() CVSSv3AttackComplexityPtrOutput {
	return o.ToCVSSv3AttackComplexityPtrOutputWithContext(context.Background())
}

func (o CVSSv3AttackComplexityOutput) ToCVSSv3AttackComplexityPtrOutputWithContext(ctx context.Context) CVSSv3AttackComplexityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3AttackComplexity) *CVSSv3AttackComplexity {
		return &v
	}).(CVSSv3AttackComplexityPtrOutput)
}

func (o CVSSv3AttackComplexityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3AttackComplexityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3AttackComplexity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3AttackComplexityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3AttackComplexityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3AttackComplexity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3AttackComplexityPtrOutput struct{ *pulumi.OutputState }

func (CVSSv3AttackComplexityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3AttackComplexity)(nil)).Elem()
}

func (o CVSSv3AttackComplexityPtrOutput) ToCVSSv3AttackComplexityPtrOutput() CVSSv3AttackComplexityPtrOutput {
	return o
}

func (o CVSSv3AttackComplexityPtrOutput) ToCVSSv3AttackComplexityPtrOutputWithContext(ctx context.Context) CVSSv3AttackComplexityPtrOutput {
	return o
}

func (o CVSSv3AttackComplexityPtrOutput) Elem() CVSSv3AttackComplexityOutput {
	return o.ApplyT(func(v *CVSSv3AttackComplexity) CVSSv3AttackComplexity {
		if v != nil {
			return *v
		}
		var ret CVSSv3AttackComplexity
		return ret
	}).(CVSSv3AttackComplexityOutput)
}

func (o CVSSv3AttackComplexityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3AttackComplexityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3AttackComplexity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3AttackComplexityInput is an input type that accepts values of the CVSSv3AttackComplexity enum
// A concrete instance of `CVSSv3AttackComplexityInput` can be one of the following:
//
//	CVSSv3AttackComplexityAttackComplexityUnspecified
//	CVSSv3AttackComplexityAttackComplexityLow
//	CVSSv3AttackComplexityAttackComplexityHigh
type CVSSv3AttackComplexityInput interface {
	pulumi.Input

	ToCVSSv3AttackComplexityOutput() CVSSv3AttackComplexityOutput
	ToCVSSv3AttackComplexityOutputWithContext(context.Context) CVSSv3AttackComplexityOutput
}

var cvssv3AttackComplexityPtrType = reflect.TypeOf((**CVSSv3AttackComplexity)(nil)).Elem()

type CVSSv3AttackComplexityPtrInput interface {
	pulumi.Input

	ToCVSSv3AttackComplexityPtrOutput() CVSSv3AttackComplexityPtrOutput
	ToCVSSv3AttackComplexityPtrOutputWithContext(context.Context) CVSSv3AttackComplexityPtrOutput
}

type cvssv3AttackComplexityPtr string

func CVSSv3AttackComplexityPtr(v string) CVSSv3AttackComplexityPtrInput {
	return (*cvssv3AttackComplexityPtr)(&v)
}

func (*cvssv3AttackComplexityPtr) ElementType() reflect.Type {
	return cvssv3AttackComplexityPtrType
}

func (in *cvssv3AttackComplexityPtr) ToCVSSv3AttackComplexityPtrOutput() CVSSv3AttackComplexityPtrOutput {
	return pulumi.ToOutput(in).(CVSSv3AttackComplexityPtrOutput)
}

func (in *cvssv3AttackComplexityPtr) ToCVSSv3AttackComplexityPtrOutputWithContext(ctx context.Context) CVSSv3AttackComplexityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3AttackComplexityPtrOutput)
}

func (in *cvssv3AttackComplexityPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSv3AttackComplexity] {
	return pulumix.Output[*CVSSv3AttackComplexity]{
		OutputState: in.ToCVSSv3AttackComplexityPtrOutputWithContext(ctx).OutputState,
	}
}

// Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.
type CVSSv3AttackVector string

const (
	CVSSv3AttackVectorAttackVectorUnspecified = CVSSv3AttackVector("ATTACK_VECTOR_UNSPECIFIED")
	CVSSv3AttackVectorAttackVectorNetwork     = CVSSv3AttackVector("ATTACK_VECTOR_NETWORK")
	CVSSv3AttackVectorAttackVectorAdjacent    = CVSSv3AttackVector("ATTACK_VECTOR_ADJACENT")
	CVSSv3AttackVectorAttackVectorLocal       = CVSSv3AttackVector("ATTACK_VECTOR_LOCAL")
	CVSSv3AttackVectorAttackVectorPhysical    = CVSSv3AttackVector("ATTACK_VECTOR_PHYSICAL")
)

func (CVSSv3AttackVector) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3AttackVector)(nil)).Elem()
}

func (e CVSSv3AttackVector) ToCVSSv3AttackVectorOutput() CVSSv3AttackVectorOutput {
	return pulumi.ToOutput(e).(CVSSv3AttackVectorOutput)
}

func (e CVSSv3AttackVector) ToCVSSv3AttackVectorOutputWithContext(ctx context.Context) CVSSv3AttackVectorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3AttackVectorOutput)
}

func (e CVSSv3AttackVector) ToCVSSv3AttackVectorPtrOutput() CVSSv3AttackVectorPtrOutput {
	return e.ToCVSSv3AttackVectorPtrOutputWithContext(context.Background())
}

func (e CVSSv3AttackVector) ToCVSSv3AttackVectorPtrOutputWithContext(ctx context.Context) CVSSv3AttackVectorPtrOutput {
	return CVSSv3AttackVector(e).ToCVSSv3AttackVectorOutputWithContext(ctx).ToCVSSv3AttackVectorPtrOutputWithContext(ctx)
}

func (e CVSSv3AttackVector) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AttackVector) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AttackVector) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3AttackVector) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3AttackVectorOutput struct{ *pulumi.OutputState }

func (CVSSv3AttackVectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3AttackVector)(nil)).Elem()
}

func (o CVSSv3AttackVectorOutput) ToCVSSv3AttackVectorOutput() CVSSv3AttackVectorOutput {
	return o
}

func (o CVSSv3AttackVectorOutput) ToCVSSv3AttackVectorOutputWithContext(ctx context.Context) CVSSv3AttackVectorOutput {
	return o
}

func (o CVSSv3AttackVectorOutput) ToCVSSv3AttackVectorPtrOutput() CVSSv3AttackVectorPtrOutput {
	return o.ToCVSSv3AttackVectorPtrOutputWithContext(context.Background())
}

func (o CVSSv3AttackVectorOutput) ToCVSSv3AttackVectorPtrOutputWithContext(ctx context.Context) CVSSv3AttackVectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3AttackVector) *CVSSv3AttackVector {
		return &v
	}).(CVSSv3AttackVectorPtrOutput)
}

func (o CVSSv3AttackVectorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3AttackVectorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3AttackVector) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3AttackVectorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3AttackVectorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3AttackVector) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3AttackVectorPtrOutput struct{ *pulumi.OutputState }

func (CVSSv3AttackVectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3AttackVector)(nil)).Elem()
}

func (o CVSSv3AttackVectorPtrOutput) ToCVSSv3AttackVectorPtrOutput() CVSSv3AttackVectorPtrOutput {
	return o
}

func (o CVSSv3AttackVectorPtrOutput) ToCVSSv3AttackVectorPtrOutputWithContext(ctx context.Context) CVSSv3AttackVectorPtrOutput {
	return o
}

func (o CVSSv3AttackVectorPtrOutput) Elem() CVSSv3AttackVectorOutput {
	return o.ApplyT(func(v *CVSSv3AttackVector) CVSSv3AttackVector {
		if v != nil {
			return *v
		}
		var ret CVSSv3AttackVector
		return ret
	}).(CVSSv3AttackVectorOutput)
}

func (o CVSSv3AttackVectorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3AttackVectorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3AttackVector) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3AttackVectorInput is an input type that accepts values of the CVSSv3AttackVector enum
// A concrete instance of `CVSSv3AttackVectorInput` can be one of the following:
//
//	CVSSv3AttackVectorAttackVectorUnspecified
//	CVSSv3AttackVectorAttackVectorNetwork
//	CVSSv3AttackVectorAttackVectorAdjacent
//	CVSSv3AttackVectorAttackVectorLocal
//	CVSSv3AttackVectorAttackVectorPhysical
type CVSSv3AttackVectorInput interface {
	pulumi.Input

	ToCVSSv3AttackVectorOutput() CVSSv3AttackVectorOutput
	ToCVSSv3AttackVectorOutputWithContext(context.Context) CVSSv3AttackVectorOutput
}

var cvssv3AttackVectorPtrType = reflect.TypeOf((**CVSSv3AttackVector)(nil)).Elem()

type CVSSv3AttackVectorPtrInput interface {
	pulumi.Input

	ToCVSSv3AttackVectorPtrOutput() CVSSv3AttackVectorPtrOutput
	ToCVSSv3AttackVectorPtrOutputWithContext(context.Context) CVSSv3AttackVectorPtrOutput
}

type cvssv3AttackVectorPtr string

func CVSSv3AttackVectorPtr(v string) CVSSv3AttackVectorPtrInput {
	return (*cvssv3AttackVectorPtr)(&v)
}

func (*cvssv3AttackVectorPtr) ElementType() reflect.Type {
	return cvssv3AttackVectorPtrType
}

func (in *cvssv3AttackVectorPtr) ToCVSSv3AttackVectorPtrOutput() CVSSv3AttackVectorPtrOutput {
	return pulumi.ToOutput(in).(CVSSv3AttackVectorPtrOutput)
}

func (in *cvssv3AttackVectorPtr) ToCVSSv3AttackVectorPtrOutputWithContext(ctx context.Context) CVSSv3AttackVectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3AttackVectorPtrOutput)
}

func (in *cvssv3AttackVectorPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSv3AttackVector] {
	return pulumix.Output[*CVSSv3AttackVector]{
		OutputState: in.ToCVSSv3AttackVectorPtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSv3AvailabilityImpact string

const (
	CVSSv3AvailabilityImpactImpactUnspecified = CVSSv3AvailabilityImpact("IMPACT_UNSPECIFIED")
	CVSSv3AvailabilityImpactImpactHigh        = CVSSv3AvailabilityImpact("IMPACT_HIGH")
	CVSSv3AvailabilityImpactImpactLow         = CVSSv3AvailabilityImpact("IMPACT_LOW")
	CVSSv3AvailabilityImpactImpactNone        = CVSSv3AvailabilityImpact("IMPACT_NONE")
)

func (CVSSv3AvailabilityImpact) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3AvailabilityImpact)(nil)).Elem()
}

func (e CVSSv3AvailabilityImpact) ToCVSSv3AvailabilityImpactOutput() CVSSv3AvailabilityImpactOutput {
	return pulumi.ToOutput(e).(CVSSv3AvailabilityImpactOutput)
}

func (e CVSSv3AvailabilityImpact) ToCVSSv3AvailabilityImpactOutputWithContext(ctx context.Context) CVSSv3AvailabilityImpactOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3AvailabilityImpactOutput)
}

func (e CVSSv3AvailabilityImpact) ToCVSSv3AvailabilityImpactPtrOutput() CVSSv3AvailabilityImpactPtrOutput {
	return e.ToCVSSv3AvailabilityImpactPtrOutputWithContext(context.Background())
}

func (e CVSSv3AvailabilityImpact) ToCVSSv3AvailabilityImpactPtrOutputWithContext(ctx context.Context) CVSSv3AvailabilityImpactPtrOutput {
	return CVSSv3AvailabilityImpact(e).ToCVSSv3AvailabilityImpactOutputWithContext(ctx).ToCVSSv3AvailabilityImpactPtrOutputWithContext(ctx)
}

func (e CVSSv3AvailabilityImpact) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AvailabilityImpact) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AvailabilityImpact) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3AvailabilityImpact) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3AvailabilityImpactOutput struct{ *pulumi.OutputState }

func (CVSSv3AvailabilityImpactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3AvailabilityImpact)(nil)).Elem()
}

func (o CVSSv3AvailabilityImpactOutput) ToCVSSv3AvailabilityImpactOutput() CVSSv3AvailabilityImpactOutput {
	return o
}

func (o CVSSv3AvailabilityImpactOutput) ToCVSSv3AvailabilityImpactOutputWithContext(ctx context.Context) CVSSv3AvailabilityImpactOutput {
	return o
}

func (o CVSSv3AvailabilityImpactOutput) ToCVSSv3AvailabilityImpactPtrOutput() CVSSv3AvailabilityImpactPtrOutput {
	return o.ToCVSSv3AvailabilityImpactPtrOutputWithContext(context.Background())
}

func (o CVSSv3AvailabilityImpactOutput) ToCVSSv3AvailabilityImpactPtrOutputWithContext(ctx context.Context) CVSSv3AvailabilityImpactPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3AvailabilityImpact) *CVSSv3AvailabilityImpact {
		return &v
	}).(CVSSv3AvailabilityImpactPtrOutput)
}

func (o CVSSv3AvailabilityImpactOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3AvailabilityImpactOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3AvailabilityImpact) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3AvailabilityImpactOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3AvailabilityImpactOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3AvailabilityImpact) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3AvailabilityImpactPtrOutput struct{ *pulumi.OutputState }

func (CVSSv3AvailabilityImpactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3AvailabilityImpact)(nil)).Elem()
}

func (o CVSSv3AvailabilityImpactPtrOutput) ToCVSSv3AvailabilityImpactPtrOutput() CVSSv3AvailabilityImpactPtrOutput {
	return o
}

func (o CVSSv3AvailabilityImpactPtrOutput) ToCVSSv3AvailabilityImpactPtrOutputWithContext(ctx context.Context) CVSSv3AvailabilityImpactPtrOutput {
	return o
}

func (o CVSSv3AvailabilityImpactPtrOutput) Elem() CVSSv3AvailabilityImpactOutput {
	return o.ApplyT(func(v *CVSSv3AvailabilityImpact) CVSSv3AvailabilityImpact {
		if v != nil {
			return *v
		}
		var ret CVSSv3AvailabilityImpact
		return ret
	}).(CVSSv3AvailabilityImpactOutput)
}

func (o CVSSv3AvailabilityImpactPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3AvailabilityImpactPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3AvailabilityImpact) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3AvailabilityImpactInput is an input type that accepts values of the CVSSv3AvailabilityImpact enum
// A concrete instance of `CVSSv3AvailabilityImpactInput` can be one of the following:
//
//	CVSSv3AvailabilityImpactImpactUnspecified
//	CVSSv3AvailabilityImpactImpactHigh
//	CVSSv3AvailabilityImpactImpactLow
//	CVSSv3AvailabilityImpactImpactNone
type CVSSv3AvailabilityImpactInput interface {
	pulumi.Input

	ToCVSSv3AvailabilityImpactOutput() CVSSv3AvailabilityImpactOutput
	ToCVSSv3AvailabilityImpactOutputWithContext(context.Context) CVSSv3AvailabilityImpactOutput
}

var cvssv3AvailabilityImpactPtrType = reflect.TypeOf((**CVSSv3AvailabilityImpact)(nil)).Elem()

type CVSSv3AvailabilityImpactPtrInput interface {
	pulumi.Input

	ToCVSSv3AvailabilityImpactPtrOutput() CVSSv3AvailabilityImpactPtrOutput
	ToCVSSv3AvailabilityImpactPtrOutputWithContext(context.Context) CVSSv3AvailabilityImpactPtrOutput
}

type cvssv3AvailabilityImpactPtr string

func CVSSv3AvailabilityImpactPtr(v string) CVSSv3AvailabilityImpactPtrInput {
	return (*cvssv3AvailabilityImpactPtr)(&v)
}

func (*cvssv3AvailabilityImpactPtr) ElementType() reflect.Type {
	return cvssv3AvailabilityImpactPtrType
}

func (in *cvssv3AvailabilityImpactPtr) ToCVSSv3AvailabilityImpactPtrOutput() CVSSv3AvailabilityImpactPtrOutput {
	return pulumi.ToOutput(in).(CVSSv3AvailabilityImpactPtrOutput)
}

func (in *cvssv3AvailabilityImpactPtr) ToCVSSv3AvailabilityImpactPtrOutputWithContext(ctx context.Context) CVSSv3AvailabilityImpactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3AvailabilityImpactPtrOutput)
}

func (in *cvssv3AvailabilityImpactPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSv3AvailabilityImpact] {
	return pulumix.Output[*CVSSv3AvailabilityImpact]{
		OutputState: in.ToCVSSv3AvailabilityImpactPtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSv3ConfidentialityImpact string

const (
	CVSSv3ConfidentialityImpactImpactUnspecified = CVSSv3ConfidentialityImpact("IMPACT_UNSPECIFIED")
	CVSSv3ConfidentialityImpactImpactHigh        = CVSSv3ConfidentialityImpact("IMPACT_HIGH")
	CVSSv3ConfidentialityImpactImpactLow         = CVSSv3ConfidentialityImpact("IMPACT_LOW")
	CVSSv3ConfidentialityImpactImpactNone        = CVSSv3ConfidentialityImpact("IMPACT_NONE")
)

func (CVSSv3ConfidentialityImpact) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3ConfidentialityImpact)(nil)).Elem()
}

func (e CVSSv3ConfidentialityImpact) ToCVSSv3ConfidentialityImpactOutput() CVSSv3ConfidentialityImpactOutput {
	return pulumi.ToOutput(e).(CVSSv3ConfidentialityImpactOutput)
}

func (e CVSSv3ConfidentialityImpact) ToCVSSv3ConfidentialityImpactOutputWithContext(ctx context.Context) CVSSv3ConfidentialityImpactOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3ConfidentialityImpactOutput)
}

func (e CVSSv3ConfidentialityImpact) ToCVSSv3ConfidentialityImpactPtrOutput() CVSSv3ConfidentialityImpactPtrOutput {
	return e.ToCVSSv3ConfidentialityImpactPtrOutputWithContext(context.Background())
}

func (e CVSSv3ConfidentialityImpact) ToCVSSv3ConfidentialityImpactPtrOutputWithContext(ctx context.Context) CVSSv3ConfidentialityImpactPtrOutput {
	return CVSSv3ConfidentialityImpact(e).ToCVSSv3ConfidentialityImpactOutputWithContext(ctx).ToCVSSv3ConfidentialityImpactPtrOutputWithContext(ctx)
}

func (e CVSSv3ConfidentialityImpact) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3ConfidentialityImpact) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3ConfidentialityImpact) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3ConfidentialityImpact) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3ConfidentialityImpactOutput struct{ *pulumi.OutputState }

func (CVSSv3ConfidentialityImpactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3ConfidentialityImpact)(nil)).Elem()
}

func (o CVSSv3ConfidentialityImpactOutput) ToCVSSv3ConfidentialityImpactOutput() CVSSv3ConfidentialityImpactOutput {
	return o
}

func (o CVSSv3ConfidentialityImpactOutput) ToCVSSv3ConfidentialityImpactOutputWithContext(ctx context.Context) CVSSv3ConfidentialityImpactOutput {
	return o
}

func (o CVSSv3ConfidentialityImpactOutput) ToCVSSv3ConfidentialityImpactPtrOutput() CVSSv3ConfidentialityImpactPtrOutput {
	return o.ToCVSSv3ConfidentialityImpactPtrOutputWithContext(context.Background())
}

func (o CVSSv3ConfidentialityImpactOutput) ToCVSSv3ConfidentialityImpactPtrOutputWithContext(ctx context.Context) CVSSv3ConfidentialityImpactPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3ConfidentialityImpact) *CVSSv3ConfidentialityImpact {
		return &v
	}).(CVSSv3ConfidentialityImpactPtrOutput)
}

func (o CVSSv3ConfidentialityImpactOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3ConfidentialityImpactOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3ConfidentialityImpact) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3ConfidentialityImpactOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3ConfidentialityImpactOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3ConfidentialityImpact) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3ConfidentialityImpactPtrOutput struct{ *pulumi.OutputState }

func (CVSSv3ConfidentialityImpactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3ConfidentialityImpact)(nil)).Elem()
}

func (o CVSSv3ConfidentialityImpactPtrOutput) ToCVSSv3ConfidentialityImpactPtrOutput() CVSSv3ConfidentialityImpactPtrOutput {
	return o
}

func (o CVSSv3ConfidentialityImpactPtrOutput) ToCVSSv3ConfidentialityImpactPtrOutputWithContext(ctx context.Context) CVSSv3ConfidentialityImpactPtrOutput {
	return o
}

func (o CVSSv3ConfidentialityImpactPtrOutput) Elem() CVSSv3ConfidentialityImpactOutput {
	return o.ApplyT(func(v *CVSSv3ConfidentialityImpact) CVSSv3ConfidentialityImpact {
		if v != nil {
			return *v
		}
		var ret CVSSv3ConfidentialityImpact
		return ret
	}).(CVSSv3ConfidentialityImpactOutput)
}

func (o CVSSv3ConfidentialityImpactPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3ConfidentialityImpactPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3ConfidentialityImpact) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3ConfidentialityImpactInput is an input type that accepts values of the CVSSv3ConfidentialityImpact enum
// A concrete instance of `CVSSv3ConfidentialityImpactInput` can be one of the following:
//
//	CVSSv3ConfidentialityImpactImpactUnspecified
//	CVSSv3ConfidentialityImpactImpactHigh
//	CVSSv3ConfidentialityImpactImpactLow
//	CVSSv3ConfidentialityImpactImpactNone
type CVSSv3ConfidentialityImpactInput interface {
	pulumi.Input

	ToCVSSv3ConfidentialityImpactOutput() CVSSv3ConfidentialityImpactOutput
	ToCVSSv3ConfidentialityImpactOutputWithContext(context.Context) CVSSv3ConfidentialityImpactOutput
}

var cvssv3ConfidentialityImpactPtrType = reflect.TypeOf((**CVSSv3ConfidentialityImpact)(nil)).Elem()

type CVSSv3ConfidentialityImpactPtrInput interface {
	pulumi.Input

	ToCVSSv3ConfidentialityImpactPtrOutput() CVSSv3ConfidentialityImpactPtrOutput
	ToCVSSv3ConfidentialityImpactPtrOutputWithContext(context.Context) CVSSv3ConfidentialityImpactPtrOutput
}

type cvssv3ConfidentialityImpactPtr string

func CVSSv3ConfidentialityImpactPtr(v string) CVSSv3ConfidentialityImpactPtrInput {
	return (*cvssv3ConfidentialityImpactPtr)(&v)
}

func (*cvssv3ConfidentialityImpactPtr) ElementType() reflect.Type {
	return cvssv3ConfidentialityImpactPtrType
}

func (in *cvssv3ConfidentialityImpactPtr) ToCVSSv3ConfidentialityImpactPtrOutput() CVSSv3ConfidentialityImpactPtrOutput {
	return pulumi.ToOutput(in).(CVSSv3ConfidentialityImpactPtrOutput)
}

func (in *cvssv3ConfidentialityImpactPtr) ToCVSSv3ConfidentialityImpactPtrOutputWithContext(ctx context.Context) CVSSv3ConfidentialityImpactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3ConfidentialityImpactPtrOutput)
}

func (in *cvssv3ConfidentialityImpactPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSv3ConfidentialityImpact] {
	return pulumix.Output[*CVSSv3ConfidentialityImpact]{
		OutputState: in.ToCVSSv3ConfidentialityImpactPtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSv3IntegrityImpact string

const (
	CVSSv3IntegrityImpactImpactUnspecified = CVSSv3IntegrityImpact("IMPACT_UNSPECIFIED")
	CVSSv3IntegrityImpactImpactHigh        = CVSSv3IntegrityImpact("IMPACT_HIGH")
	CVSSv3IntegrityImpactImpactLow         = CVSSv3IntegrityImpact("IMPACT_LOW")
	CVSSv3IntegrityImpactImpactNone        = CVSSv3IntegrityImpact("IMPACT_NONE")
)

func (CVSSv3IntegrityImpact) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3IntegrityImpact)(nil)).Elem()
}

func (e CVSSv3IntegrityImpact) ToCVSSv3IntegrityImpactOutput() CVSSv3IntegrityImpactOutput {
	return pulumi.ToOutput(e).(CVSSv3IntegrityImpactOutput)
}

func (e CVSSv3IntegrityImpact) ToCVSSv3IntegrityImpactOutputWithContext(ctx context.Context) CVSSv3IntegrityImpactOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3IntegrityImpactOutput)
}

func (e CVSSv3IntegrityImpact) ToCVSSv3IntegrityImpactPtrOutput() CVSSv3IntegrityImpactPtrOutput {
	return e.ToCVSSv3IntegrityImpactPtrOutputWithContext(context.Background())
}

func (e CVSSv3IntegrityImpact) ToCVSSv3IntegrityImpactPtrOutputWithContext(ctx context.Context) CVSSv3IntegrityImpactPtrOutput {
	return CVSSv3IntegrityImpact(e).ToCVSSv3IntegrityImpactOutputWithContext(ctx).ToCVSSv3IntegrityImpactPtrOutputWithContext(ctx)
}

func (e CVSSv3IntegrityImpact) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3IntegrityImpact) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3IntegrityImpact) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3IntegrityImpact) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3IntegrityImpactOutput struct{ *pulumi.OutputState }

func (CVSSv3IntegrityImpactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3IntegrityImpact)(nil)).Elem()
}

func (o CVSSv3IntegrityImpactOutput) ToCVSSv3IntegrityImpactOutput() CVSSv3IntegrityImpactOutput {
	return o
}

func (o CVSSv3IntegrityImpactOutput) ToCVSSv3IntegrityImpactOutputWithContext(ctx context.Context) CVSSv3IntegrityImpactOutput {
	return o
}

func (o CVSSv3IntegrityImpactOutput) ToCVSSv3IntegrityImpactPtrOutput() CVSSv3IntegrityImpactPtrOutput {
	return o.ToCVSSv3IntegrityImpactPtrOutputWithContext(context.Background())
}

func (o CVSSv3IntegrityImpactOutput) ToCVSSv3IntegrityImpactPtrOutputWithContext(ctx context.Context) CVSSv3IntegrityImpactPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3IntegrityImpact) *CVSSv3IntegrityImpact {
		return &v
	}).(CVSSv3IntegrityImpactPtrOutput)
}

func (o CVSSv3IntegrityImpactOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3IntegrityImpactOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3IntegrityImpact) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3IntegrityImpactOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3IntegrityImpactOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3IntegrityImpact) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3IntegrityImpactPtrOutput struct{ *pulumi.OutputState }

func (CVSSv3IntegrityImpactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3IntegrityImpact)(nil)).Elem()
}

func (o CVSSv3IntegrityImpactPtrOutput) ToCVSSv3IntegrityImpactPtrOutput() CVSSv3IntegrityImpactPtrOutput {
	return o
}

func (o CVSSv3IntegrityImpactPtrOutput) ToCVSSv3IntegrityImpactPtrOutputWithContext(ctx context.Context) CVSSv3IntegrityImpactPtrOutput {
	return o
}

func (o CVSSv3IntegrityImpactPtrOutput) Elem() CVSSv3IntegrityImpactOutput {
	return o.ApplyT(func(v *CVSSv3IntegrityImpact) CVSSv3IntegrityImpact {
		if v != nil {
			return *v
		}
		var ret CVSSv3IntegrityImpact
		return ret
	}).(CVSSv3IntegrityImpactOutput)
}

func (o CVSSv3IntegrityImpactPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3IntegrityImpactPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3IntegrityImpact) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3IntegrityImpactInput is an input type that accepts values of the CVSSv3IntegrityImpact enum
// A concrete instance of `CVSSv3IntegrityImpactInput` can be one of the following:
//
//	CVSSv3IntegrityImpactImpactUnspecified
//	CVSSv3IntegrityImpactImpactHigh
//	CVSSv3IntegrityImpactImpactLow
//	CVSSv3IntegrityImpactImpactNone
type CVSSv3IntegrityImpactInput interface {
	pulumi.Input

	ToCVSSv3IntegrityImpactOutput() CVSSv3IntegrityImpactOutput
	ToCVSSv3IntegrityImpactOutputWithContext(context.Context) CVSSv3IntegrityImpactOutput
}

var cvssv3IntegrityImpactPtrType = reflect.TypeOf((**CVSSv3IntegrityImpact)(nil)).Elem()

type CVSSv3IntegrityImpactPtrInput interface {
	pulumi.Input

	ToCVSSv3IntegrityImpactPtrOutput() CVSSv3IntegrityImpactPtrOutput
	ToCVSSv3IntegrityImpactPtrOutputWithContext(context.Context) CVSSv3IntegrityImpactPtrOutput
}

type cvssv3IntegrityImpactPtr string

func CVSSv3IntegrityImpactPtr(v string) CVSSv3IntegrityImpactPtrInput {
	return (*cvssv3IntegrityImpactPtr)(&v)
}

func (*cvssv3IntegrityImpactPtr) ElementType() reflect.Type {
	return cvssv3IntegrityImpactPtrType
}

func (in *cvssv3IntegrityImpactPtr) ToCVSSv3IntegrityImpactPtrOutput() CVSSv3IntegrityImpactPtrOutput {
	return pulumi.ToOutput(in).(CVSSv3IntegrityImpactPtrOutput)
}

func (in *cvssv3IntegrityImpactPtr) ToCVSSv3IntegrityImpactPtrOutputWithContext(ctx context.Context) CVSSv3IntegrityImpactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3IntegrityImpactPtrOutput)
}

func (in *cvssv3IntegrityImpactPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSv3IntegrityImpact] {
	return pulumix.Output[*CVSSv3IntegrityImpact]{
		OutputState: in.ToCVSSv3IntegrityImpactPtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSv3PrivilegesRequired string

const (
	CVSSv3PrivilegesRequiredPrivilegesRequiredUnspecified = CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_UNSPECIFIED")
	CVSSv3PrivilegesRequiredPrivilegesRequiredNone        = CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_NONE")
	CVSSv3PrivilegesRequiredPrivilegesRequiredLow         = CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_LOW")
	CVSSv3PrivilegesRequiredPrivilegesRequiredHigh        = CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_HIGH")
)

func (CVSSv3PrivilegesRequired) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3PrivilegesRequired)(nil)).Elem()
}

func (e CVSSv3PrivilegesRequired) ToCVSSv3PrivilegesRequiredOutput() CVSSv3PrivilegesRequiredOutput {
	return pulumi.ToOutput(e).(CVSSv3PrivilegesRequiredOutput)
}

func (e CVSSv3PrivilegesRequired) ToCVSSv3PrivilegesRequiredOutputWithContext(ctx context.Context) CVSSv3PrivilegesRequiredOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3PrivilegesRequiredOutput)
}

func (e CVSSv3PrivilegesRequired) ToCVSSv3PrivilegesRequiredPtrOutput() CVSSv3PrivilegesRequiredPtrOutput {
	return e.ToCVSSv3PrivilegesRequiredPtrOutputWithContext(context.Background())
}

func (e CVSSv3PrivilegesRequired) ToCVSSv3PrivilegesRequiredPtrOutputWithContext(ctx context.Context) CVSSv3PrivilegesRequiredPtrOutput {
	return CVSSv3PrivilegesRequired(e).ToCVSSv3PrivilegesRequiredOutputWithContext(ctx).ToCVSSv3PrivilegesRequiredPtrOutputWithContext(ctx)
}

func (e CVSSv3PrivilegesRequired) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3PrivilegesRequired) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3PrivilegesRequired) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3PrivilegesRequired) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3PrivilegesRequiredOutput struct{ *pulumi.OutputState }

func (CVSSv3PrivilegesRequiredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3PrivilegesRequired)(nil)).Elem()
}

func (o CVSSv3PrivilegesRequiredOutput) ToCVSSv3PrivilegesRequiredOutput() CVSSv3PrivilegesRequiredOutput {
	return o
}

func (o CVSSv3PrivilegesRequiredOutput) ToCVSSv3PrivilegesRequiredOutputWithContext(ctx context.Context) CVSSv3PrivilegesRequiredOutput {
	return o
}

func (o CVSSv3PrivilegesRequiredOutput) ToCVSSv3PrivilegesRequiredPtrOutput() CVSSv3PrivilegesRequiredPtrOutput {
	return o.ToCVSSv3PrivilegesRequiredPtrOutputWithContext(context.Background())
}

func (o CVSSv3PrivilegesRequiredOutput) ToCVSSv3PrivilegesRequiredPtrOutputWithContext(ctx context.Context) CVSSv3PrivilegesRequiredPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3PrivilegesRequired) *CVSSv3PrivilegesRequired {
		return &v
	}).(CVSSv3PrivilegesRequiredPtrOutput)
}

func (o CVSSv3PrivilegesRequiredOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3PrivilegesRequiredOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3PrivilegesRequired) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3PrivilegesRequiredOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3PrivilegesRequiredOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3PrivilegesRequired) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3PrivilegesRequiredPtrOutput struct{ *pulumi.OutputState }

func (CVSSv3PrivilegesRequiredPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3PrivilegesRequired)(nil)).Elem()
}

func (o CVSSv3PrivilegesRequiredPtrOutput) ToCVSSv3PrivilegesRequiredPtrOutput() CVSSv3PrivilegesRequiredPtrOutput {
	return o
}

func (o CVSSv3PrivilegesRequiredPtrOutput) ToCVSSv3PrivilegesRequiredPtrOutputWithContext(ctx context.Context) CVSSv3PrivilegesRequiredPtrOutput {
	return o
}

func (o CVSSv3PrivilegesRequiredPtrOutput) Elem() CVSSv3PrivilegesRequiredOutput {
	return o.ApplyT(func(v *CVSSv3PrivilegesRequired) CVSSv3PrivilegesRequired {
		if v != nil {
			return *v
		}
		var ret CVSSv3PrivilegesRequired
		return ret
	}).(CVSSv3PrivilegesRequiredOutput)
}

func (o CVSSv3PrivilegesRequiredPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3PrivilegesRequiredPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3PrivilegesRequired) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3PrivilegesRequiredInput is an input type that accepts values of the CVSSv3PrivilegesRequired enum
// A concrete instance of `CVSSv3PrivilegesRequiredInput` can be one of the following:
//
//	CVSSv3PrivilegesRequiredPrivilegesRequiredUnspecified
//	CVSSv3PrivilegesRequiredPrivilegesRequiredNone
//	CVSSv3PrivilegesRequiredPrivilegesRequiredLow
//	CVSSv3PrivilegesRequiredPrivilegesRequiredHigh
type CVSSv3PrivilegesRequiredInput interface {
	pulumi.Input

	ToCVSSv3PrivilegesRequiredOutput() CVSSv3PrivilegesRequiredOutput
	ToCVSSv3PrivilegesRequiredOutputWithContext(context.Context) CVSSv3PrivilegesRequiredOutput
}

var cvssv3PrivilegesRequiredPtrType = reflect.TypeOf((**CVSSv3PrivilegesRequired)(nil)).Elem()

type CVSSv3PrivilegesRequiredPtrInput interface {
	pulumi.Input

	ToCVSSv3PrivilegesRequiredPtrOutput() CVSSv3PrivilegesRequiredPtrOutput
	ToCVSSv3PrivilegesRequiredPtrOutputWithContext(context.Context) CVSSv3PrivilegesRequiredPtrOutput
}

type cvssv3PrivilegesRequiredPtr string

func CVSSv3PrivilegesRequiredPtr(v string) CVSSv3PrivilegesRequiredPtrInput {
	return (*cvssv3PrivilegesRequiredPtr)(&v)
}

func (*cvssv3PrivilegesRequiredPtr) ElementType() reflect.Type {
	return cvssv3PrivilegesRequiredPtrType
}

func (in *cvssv3PrivilegesRequiredPtr) ToCVSSv3PrivilegesRequiredPtrOutput() CVSSv3PrivilegesRequiredPtrOutput {
	return pulumi.ToOutput(in).(CVSSv3PrivilegesRequiredPtrOutput)
}

func (in *cvssv3PrivilegesRequiredPtr) ToCVSSv3PrivilegesRequiredPtrOutputWithContext(ctx context.Context) CVSSv3PrivilegesRequiredPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3PrivilegesRequiredPtrOutput)
}

func (in *cvssv3PrivilegesRequiredPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSv3PrivilegesRequired] {
	return pulumix.Output[*CVSSv3PrivilegesRequired]{
		OutputState: in.ToCVSSv3PrivilegesRequiredPtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSv3Scope string

const (
	CVSSv3ScopeScopeUnspecified = CVSSv3Scope("SCOPE_UNSPECIFIED")
	CVSSv3ScopeScopeUnchanged   = CVSSv3Scope("SCOPE_UNCHANGED")
	CVSSv3ScopeScopeChanged     = CVSSv3Scope("SCOPE_CHANGED")
)

func (CVSSv3Scope) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3Scope)(nil)).Elem()
}

func (e CVSSv3Scope) ToCVSSv3ScopeOutput() CVSSv3ScopeOutput {
	return pulumi.ToOutput(e).(CVSSv3ScopeOutput)
}

func (e CVSSv3Scope) ToCVSSv3ScopeOutputWithContext(ctx context.Context) CVSSv3ScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3ScopeOutput)
}

func (e CVSSv3Scope) ToCVSSv3ScopePtrOutput() CVSSv3ScopePtrOutput {
	return e.ToCVSSv3ScopePtrOutputWithContext(context.Background())
}

func (e CVSSv3Scope) ToCVSSv3ScopePtrOutputWithContext(ctx context.Context) CVSSv3ScopePtrOutput {
	return CVSSv3Scope(e).ToCVSSv3ScopeOutputWithContext(ctx).ToCVSSv3ScopePtrOutputWithContext(ctx)
}

func (e CVSSv3Scope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3Scope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3Scope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3Scope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3ScopeOutput struct{ *pulumi.OutputState }

func (CVSSv3ScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3Scope)(nil)).Elem()
}

func (o CVSSv3ScopeOutput) ToCVSSv3ScopeOutput() CVSSv3ScopeOutput {
	return o
}

func (o CVSSv3ScopeOutput) ToCVSSv3ScopeOutputWithContext(ctx context.Context) CVSSv3ScopeOutput {
	return o
}

func (o CVSSv3ScopeOutput) ToCVSSv3ScopePtrOutput() CVSSv3ScopePtrOutput {
	return o.ToCVSSv3ScopePtrOutputWithContext(context.Background())
}

func (o CVSSv3ScopeOutput) ToCVSSv3ScopePtrOutputWithContext(ctx context.Context) CVSSv3ScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3Scope) *CVSSv3Scope {
		return &v
	}).(CVSSv3ScopePtrOutput)
}

func (o CVSSv3ScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3ScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3Scope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3ScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3ScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3Scope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3ScopePtrOutput struct{ *pulumi.OutputState }

func (CVSSv3ScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3Scope)(nil)).Elem()
}

func (o CVSSv3ScopePtrOutput) ToCVSSv3ScopePtrOutput() CVSSv3ScopePtrOutput {
	return o
}

func (o CVSSv3ScopePtrOutput) ToCVSSv3ScopePtrOutputWithContext(ctx context.Context) CVSSv3ScopePtrOutput {
	return o
}

func (o CVSSv3ScopePtrOutput) Elem() CVSSv3ScopeOutput {
	return o.ApplyT(func(v *CVSSv3Scope) CVSSv3Scope {
		if v != nil {
			return *v
		}
		var ret CVSSv3Scope
		return ret
	}).(CVSSv3ScopeOutput)
}

func (o CVSSv3ScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3ScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3Scope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3ScopeInput is an input type that accepts values of the CVSSv3Scope enum
// A concrete instance of `CVSSv3ScopeInput` can be one of the following:
//
//	CVSSv3ScopeScopeUnspecified
//	CVSSv3ScopeScopeUnchanged
//	CVSSv3ScopeScopeChanged
type CVSSv3ScopeInput interface {
	pulumi.Input

	ToCVSSv3ScopeOutput() CVSSv3ScopeOutput
	ToCVSSv3ScopeOutputWithContext(context.Context) CVSSv3ScopeOutput
}

var cvssv3ScopePtrType = reflect.TypeOf((**CVSSv3Scope)(nil)).Elem()

type CVSSv3ScopePtrInput interface {
	pulumi.Input

	ToCVSSv3ScopePtrOutput() CVSSv3ScopePtrOutput
	ToCVSSv3ScopePtrOutputWithContext(context.Context) CVSSv3ScopePtrOutput
}

type cvssv3ScopePtr string

func CVSSv3ScopePtr(v string) CVSSv3ScopePtrInput {
	return (*cvssv3ScopePtr)(&v)
}

func (*cvssv3ScopePtr) ElementType() reflect.Type {
	return cvssv3ScopePtrType
}

func (in *cvssv3ScopePtr) ToCVSSv3ScopePtrOutput() CVSSv3ScopePtrOutput {
	return pulumi.ToOutput(in).(CVSSv3ScopePtrOutput)
}

func (in *cvssv3ScopePtr) ToCVSSv3ScopePtrOutputWithContext(ctx context.Context) CVSSv3ScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3ScopePtrOutput)
}

func (in *cvssv3ScopePtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSv3Scope] {
	return pulumix.Output[*CVSSv3Scope]{
		OutputState: in.ToCVSSv3ScopePtrOutputWithContext(ctx).OutputState,
	}
}

type CVSSv3UserInteraction string

const (
	CVSSv3UserInteractionUserInteractionUnspecified = CVSSv3UserInteraction("USER_INTERACTION_UNSPECIFIED")
	CVSSv3UserInteractionUserInteractionNone        = CVSSv3UserInteraction("USER_INTERACTION_NONE")
	CVSSv3UserInteractionUserInteractionRequired    = CVSSv3UserInteraction("USER_INTERACTION_REQUIRED")
)

func (CVSSv3UserInteraction) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3UserInteraction)(nil)).Elem()
}

func (e CVSSv3UserInteraction) ToCVSSv3UserInteractionOutput() CVSSv3UserInteractionOutput {
	return pulumi.ToOutput(e).(CVSSv3UserInteractionOutput)
}

func (e CVSSv3UserInteraction) ToCVSSv3UserInteractionOutputWithContext(ctx context.Context) CVSSv3UserInteractionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3UserInteractionOutput)
}

func (e CVSSv3UserInteraction) ToCVSSv3UserInteractionPtrOutput() CVSSv3UserInteractionPtrOutput {
	return e.ToCVSSv3UserInteractionPtrOutputWithContext(context.Background())
}

func (e CVSSv3UserInteraction) ToCVSSv3UserInteractionPtrOutputWithContext(ctx context.Context) CVSSv3UserInteractionPtrOutput {
	return CVSSv3UserInteraction(e).ToCVSSv3UserInteractionOutputWithContext(ctx).ToCVSSv3UserInteractionPtrOutputWithContext(ctx)
}

func (e CVSSv3UserInteraction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3UserInteraction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3UserInteraction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3UserInteraction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3UserInteractionOutput struct{ *pulumi.OutputState }

func (CVSSv3UserInteractionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3UserInteraction)(nil)).Elem()
}

func (o CVSSv3UserInteractionOutput) ToCVSSv3UserInteractionOutput() CVSSv3UserInteractionOutput {
	return o
}

func (o CVSSv3UserInteractionOutput) ToCVSSv3UserInteractionOutputWithContext(ctx context.Context) CVSSv3UserInteractionOutput {
	return o
}

func (o CVSSv3UserInteractionOutput) ToCVSSv3UserInteractionPtrOutput() CVSSv3UserInteractionPtrOutput {
	return o.ToCVSSv3UserInteractionPtrOutputWithContext(context.Background())
}

func (o CVSSv3UserInteractionOutput) ToCVSSv3UserInteractionPtrOutputWithContext(ctx context.Context) CVSSv3UserInteractionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3UserInteraction) *CVSSv3UserInteraction {
		return &v
	}).(CVSSv3UserInteractionPtrOutput)
}

func (o CVSSv3UserInteractionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3UserInteractionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3UserInteraction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3UserInteractionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3UserInteractionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3UserInteraction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3UserInteractionPtrOutput struct{ *pulumi.OutputState }

func (CVSSv3UserInteractionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3UserInteraction)(nil)).Elem()
}

func (o CVSSv3UserInteractionPtrOutput) ToCVSSv3UserInteractionPtrOutput() CVSSv3UserInteractionPtrOutput {
	return o
}

func (o CVSSv3UserInteractionPtrOutput) ToCVSSv3UserInteractionPtrOutputWithContext(ctx context.Context) CVSSv3UserInteractionPtrOutput {
	return o
}

func (o CVSSv3UserInteractionPtrOutput) Elem() CVSSv3UserInteractionOutput {
	return o.ApplyT(func(v *CVSSv3UserInteraction) CVSSv3UserInteraction {
		if v != nil {
			return *v
		}
		var ret CVSSv3UserInteraction
		return ret
	}).(CVSSv3UserInteractionOutput)
}

func (o CVSSv3UserInteractionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3UserInteractionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3UserInteraction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3UserInteractionInput is an input type that accepts values of the CVSSv3UserInteraction enum
// A concrete instance of `CVSSv3UserInteractionInput` can be one of the following:
//
//	CVSSv3UserInteractionUserInteractionUnspecified
//	CVSSv3UserInteractionUserInteractionNone
//	CVSSv3UserInteractionUserInteractionRequired
type CVSSv3UserInteractionInput interface {
	pulumi.Input

	ToCVSSv3UserInteractionOutput() CVSSv3UserInteractionOutput
	ToCVSSv3UserInteractionOutputWithContext(context.Context) CVSSv3UserInteractionOutput
}

var cvssv3UserInteractionPtrType = reflect.TypeOf((**CVSSv3UserInteraction)(nil)).Elem()

type CVSSv3UserInteractionPtrInput interface {
	pulumi.Input

	ToCVSSv3UserInteractionPtrOutput() CVSSv3UserInteractionPtrOutput
	ToCVSSv3UserInteractionPtrOutputWithContext(context.Context) CVSSv3UserInteractionPtrOutput
}

type cvssv3UserInteractionPtr string

func CVSSv3UserInteractionPtr(v string) CVSSv3UserInteractionPtrInput {
	return (*cvssv3UserInteractionPtr)(&v)
}

func (*cvssv3UserInteractionPtr) ElementType() reflect.Type {
	return cvssv3UserInteractionPtrType
}

func (in *cvssv3UserInteractionPtr) ToCVSSv3UserInteractionPtrOutput() CVSSv3UserInteractionPtrOutput {
	return pulumi.ToOutput(in).(CVSSv3UserInteractionPtrOutput)
}

func (in *cvssv3UserInteractionPtr) ToCVSSv3UserInteractionPtrOutputWithContext(ctx context.Context) CVSSv3UserInteractionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3UserInteractionPtrOutput)
}

func (in *cvssv3UserInteractionPtr) ToOutput(ctx context.Context) pulumix.Output[*CVSSv3UserInteraction] {
	return pulumix.Output[*CVSSv3UserInteraction]{
		OutputState: in.ToCVSSv3UserInteractionPtrOutputWithContext(ctx).OutputState,
	}
}

type CisBenchmarkSeverity string

const (
	// Unknown.
	CisBenchmarkSeveritySeverityUnspecified = CisBenchmarkSeverity("SEVERITY_UNSPECIFIED")
	// Minimal severity.
	CisBenchmarkSeverityMinimal = CisBenchmarkSeverity("MINIMAL")
	// Low severity.
	CisBenchmarkSeverityLow = CisBenchmarkSeverity("LOW")
	// Medium severity.
	CisBenchmarkSeverityMedium = CisBenchmarkSeverity("MEDIUM")
	// High severity.
	CisBenchmarkSeverityHigh = CisBenchmarkSeverity("HIGH")
	// Critical severity.
	CisBenchmarkSeverityCritical = CisBenchmarkSeverity("CRITICAL")
)

func (CisBenchmarkSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*CisBenchmarkSeverity)(nil)).Elem()
}

func (e CisBenchmarkSeverity) ToCisBenchmarkSeverityOutput() CisBenchmarkSeverityOutput {
	return pulumi.ToOutput(e).(CisBenchmarkSeverityOutput)
}

func (e CisBenchmarkSeverity) ToCisBenchmarkSeverityOutputWithContext(ctx context.Context) CisBenchmarkSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CisBenchmarkSeverityOutput)
}

func (e CisBenchmarkSeverity) ToCisBenchmarkSeverityPtrOutput() CisBenchmarkSeverityPtrOutput {
	return e.ToCisBenchmarkSeverityPtrOutputWithContext(context.Background())
}

func (e CisBenchmarkSeverity) ToCisBenchmarkSeverityPtrOutputWithContext(ctx context.Context) CisBenchmarkSeverityPtrOutput {
	return CisBenchmarkSeverity(e).ToCisBenchmarkSeverityOutputWithContext(ctx).ToCisBenchmarkSeverityPtrOutputWithContext(ctx)
}

func (e CisBenchmarkSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CisBenchmarkSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CisBenchmarkSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CisBenchmarkSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CisBenchmarkSeverityOutput struct{ *pulumi.OutputState }

func (CisBenchmarkSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CisBenchmarkSeverity)(nil)).Elem()
}

func (o CisBenchmarkSeverityOutput) ToCisBenchmarkSeverityOutput() CisBenchmarkSeverityOutput {
	return o
}

func (o CisBenchmarkSeverityOutput) ToCisBenchmarkSeverityOutputWithContext(ctx context.Context) CisBenchmarkSeverityOutput {
	return o
}

func (o CisBenchmarkSeverityOutput) ToCisBenchmarkSeverityPtrOutput() CisBenchmarkSeverityPtrOutput {
	return o.ToCisBenchmarkSeverityPtrOutputWithContext(context.Background())
}

func (o CisBenchmarkSeverityOutput) ToCisBenchmarkSeverityPtrOutputWithContext(ctx context.Context) CisBenchmarkSeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CisBenchmarkSeverity) *CisBenchmarkSeverity {
		return &v
	}).(CisBenchmarkSeverityPtrOutput)
}

func (o CisBenchmarkSeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CisBenchmarkSeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CisBenchmarkSeverity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CisBenchmarkSeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CisBenchmarkSeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CisBenchmarkSeverity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CisBenchmarkSeverityPtrOutput struct{ *pulumi.OutputState }

func (CisBenchmarkSeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CisBenchmarkSeverity)(nil)).Elem()
}

func (o CisBenchmarkSeverityPtrOutput) ToCisBenchmarkSeverityPtrOutput() CisBenchmarkSeverityPtrOutput {
	return o
}

func (o CisBenchmarkSeverityPtrOutput) ToCisBenchmarkSeverityPtrOutputWithContext(ctx context.Context) CisBenchmarkSeverityPtrOutput {
	return o
}

func (o CisBenchmarkSeverityPtrOutput) Elem() CisBenchmarkSeverityOutput {
	return o.ApplyT(func(v *CisBenchmarkSeverity) CisBenchmarkSeverity {
		if v != nil {
			return *v
		}
		var ret CisBenchmarkSeverity
		return ret
	}).(CisBenchmarkSeverityOutput)
}

func (o CisBenchmarkSeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CisBenchmarkSeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CisBenchmarkSeverity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CisBenchmarkSeverityInput is an input type that accepts values of the CisBenchmarkSeverity enum
// A concrete instance of `CisBenchmarkSeverityInput` can be one of the following:
//
//	CisBenchmarkSeveritySeverityUnspecified
//	CisBenchmarkSeverityMinimal
//	CisBenchmarkSeverityLow
//	CisBenchmarkSeverityMedium
//	CisBenchmarkSeverityHigh
//	CisBenchmarkSeverityCritical
type CisBenchmarkSeverityInput interface {
	pulumi.Input

	ToCisBenchmarkSeverityOutput() CisBenchmarkSeverityOutput
	ToCisBenchmarkSeverityOutputWithContext(context.Context) CisBenchmarkSeverityOutput
}

var cisBenchmarkSeverityPtrType = reflect.TypeOf((**CisBenchmarkSeverity)(nil)).Elem()

type CisBenchmarkSeverityPtrInput interface {
	pulumi.Input

	ToCisBenchmarkSeverityPtrOutput() CisBenchmarkSeverityPtrOutput
	ToCisBenchmarkSeverityPtrOutputWithContext(context.Context) CisBenchmarkSeverityPtrOutput
}

type cisBenchmarkSeverityPtr string

func CisBenchmarkSeverityPtr(v string) CisBenchmarkSeverityPtrInput {
	return (*cisBenchmarkSeverityPtr)(&v)
}

func (*cisBenchmarkSeverityPtr) ElementType() reflect.Type {
	return cisBenchmarkSeverityPtrType
}

func (in *cisBenchmarkSeverityPtr) ToCisBenchmarkSeverityPtrOutput() CisBenchmarkSeverityPtrOutput {
	return pulumi.ToOutput(in).(CisBenchmarkSeverityPtrOutput)
}

func (in *cisBenchmarkSeverityPtr) ToCisBenchmarkSeverityPtrOutputWithContext(ctx context.Context) CisBenchmarkSeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CisBenchmarkSeverityPtrOutput)
}

func (in *cisBenchmarkSeverityPtr) ToOutput(ctx context.Context) pulumix.Output[*CisBenchmarkSeverity] {
	return pulumix.Output[*CisBenchmarkSeverity]{
		OutputState: in.ToCisBenchmarkSeverityPtrOutputWithContext(ctx).OutputState,
	}
}

// Platform hosting this deployment.
type DeploymentOccurrencePlatform string

const (
	// Unknown.
	DeploymentOccurrencePlatformPlatformUnspecified = DeploymentOccurrencePlatform("PLATFORM_UNSPECIFIED")
	// Google Container Engine.
	DeploymentOccurrencePlatformGke = DeploymentOccurrencePlatform("GKE")
	// Google App Engine: Flexible Environment.
	DeploymentOccurrencePlatformFlex = DeploymentOccurrencePlatform("FLEX")
	// Custom user-defined platform.
	DeploymentOccurrencePlatformCustom = DeploymentOccurrencePlatform("CUSTOM")
)

func (DeploymentOccurrencePlatform) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentOccurrencePlatform)(nil)).Elem()
}

func (e DeploymentOccurrencePlatform) ToDeploymentOccurrencePlatformOutput() DeploymentOccurrencePlatformOutput {
	return pulumi.ToOutput(e).(DeploymentOccurrencePlatformOutput)
}

func (e DeploymentOccurrencePlatform) ToDeploymentOccurrencePlatformOutputWithContext(ctx context.Context) DeploymentOccurrencePlatformOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DeploymentOccurrencePlatformOutput)
}

func (e DeploymentOccurrencePlatform) ToDeploymentOccurrencePlatformPtrOutput() DeploymentOccurrencePlatformPtrOutput {
	return e.ToDeploymentOccurrencePlatformPtrOutputWithContext(context.Background())
}

func (e DeploymentOccurrencePlatform) ToDeploymentOccurrencePlatformPtrOutputWithContext(ctx context.Context) DeploymentOccurrencePlatformPtrOutput {
	return DeploymentOccurrencePlatform(e).ToDeploymentOccurrencePlatformOutputWithContext(ctx).ToDeploymentOccurrencePlatformPtrOutputWithContext(ctx)
}

func (e DeploymentOccurrencePlatform) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeploymentOccurrencePlatform) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeploymentOccurrencePlatform) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DeploymentOccurrencePlatform) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DeploymentOccurrencePlatformOutput struct{ *pulumi.OutputState }

func (DeploymentOccurrencePlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentOccurrencePlatform)(nil)).Elem()
}

func (o DeploymentOccurrencePlatformOutput) ToDeploymentOccurrencePlatformOutput() DeploymentOccurrencePlatformOutput {
	return o
}

func (o DeploymentOccurrencePlatformOutput) ToDeploymentOccurrencePlatformOutputWithContext(ctx context.Context) DeploymentOccurrencePlatformOutput {
	return o
}

func (o DeploymentOccurrencePlatformOutput) ToDeploymentOccurrencePlatformPtrOutput() DeploymentOccurrencePlatformPtrOutput {
	return o.ToDeploymentOccurrencePlatformPtrOutputWithContext(context.Background())
}

func (o DeploymentOccurrencePlatformOutput) ToDeploymentOccurrencePlatformPtrOutputWithContext(ctx context.Context) DeploymentOccurrencePlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentOccurrencePlatform) *DeploymentOccurrencePlatform {
		return &v
	}).(DeploymentOccurrencePlatformPtrOutput)
}

func (o DeploymentOccurrencePlatformOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DeploymentOccurrencePlatformOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeploymentOccurrencePlatform) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DeploymentOccurrencePlatformOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeploymentOccurrencePlatformOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeploymentOccurrencePlatform) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DeploymentOccurrencePlatformPtrOutput struct{ *pulumi.OutputState }

func (DeploymentOccurrencePlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentOccurrencePlatform)(nil)).Elem()
}

func (o DeploymentOccurrencePlatformPtrOutput) ToDeploymentOccurrencePlatformPtrOutput() DeploymentOccurrencePlatformPtrOutput {
	return o
}

func (o DeploymentOccurrencePlatformPtrOutput) ToDeploymentOccurrencePlatformPtrOutputWithContext(ctx context.Context) DeploymentOccurrencePlatformPtrOutput {
	return o
}

func (o DeploymentOccurrencePlatformPtrOutput) Elem() DeploymentOccurrencePlatformOutput {
	return o.ApplyT(func(v *DeploymentOccurrencePlatform) DeploymentOccurrencePlatform {
		if v != nil {
			return *v
		}
		var ret DeploymentOccurrencePlatform
		return ret
	}).(DeploymentOccurrencePlatformOutput)
}

func (o DeploymentOccurrencePlatformPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeploymentOccurrencePlatformPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DeploymentOccurrencePlatform) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DeploymentOccurrencePlatformInput is an input type that accepts values of the DeploymentOccurrencePlatform enum
// A concrete instance of `DeploymentOccurrencePlatformInput` can be one of the following:
//
//	DeploymentOccurrencePlatformPlatformUnspecified
//	DeploymentOccurrencePlatformGke
//	DeploymentOccurrencePlatformFlex
//	DeploymentOccurrencePlatformCustom
type DeploymentOccurrencePlatformInput interface {
	pulumi.Input

	ToDeploymentOccurrencePlatformOutput() DeploymentOccurrencePlatformOutput
	ToDeploymentOccurrencePlatformOutputWithContext(context.Context) DeploymentOccurrencePlatformOutput
}

var deploymentOccurrencePlatformPtrType = reflect.TypeOf((**DeploymentOccurrencePlatform)(nil)).Elem()

type DeploymentOccurrencePlatformPtrInput interface {
	pulumi.Input

	ToDeploymentOccurrencePlatformPtrOutput() DeploymentOccurrencePlatformPtrOutput
	ToDeploymentOccurrencePlatformPtrOutputWithContext(context.Context) DeploymentOccurrencePlatformPtrOutput
}

type deploymentOccurrencePlatformPtr string

func DeploymentOccurrencePlatformPtr(v string) DeploymentOccurrencePlatformPtrInput {
	return (*deploymentOccurrencePlatformPtr)(&v)
}

func (*deploymentOccurrencePlatformPtr) ElementType() reflect.Type {
	return deploymentOccurrencePlatformPtrType
}

func (in *deploymentOccurrencePlatformPtr) ToDeploymentOccurrencePlatformPtrOutput() DeploymentOccurrencePlatformPtrOutput {
	return pulumi.ToOutput(in).(DeploymentOccurrencePlatformPtrOutput)
}

func (in *deploymentOccurrencePlatformPtr) ToDeploymentOccurrencePlatformPtrOutputWithContext(ctx context.Context) DeploymentOccurrencePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DeploymentOccurrencePlatformPtrOutput)
}

func (in *deploymentOccurrencePlatformPtr) ToOutput(ctx context.Context) pulumix.Output[*DeploymentOccurrencePlatform] {
	return pulumix.Output[*DeploymentOccurrencePlatform]{
		OutputState: in.ToDeploymentOccurrencePlatformPtrOutputWithContext(ctx).OutputState,
	}
}

// Required. Immutable. The kind of analysis that is handled by this discovery.
type DiscoveryNoteAnalysisKind string

const (
	// Default value. This value is unused.
	DiscoveryNoteAnalysisKindNoteKindUnspecified = DiscoveryNoteAnalysisKind("NOTE_KIND_UNSPECIFIED")
	// The note and occurrence represent a package vulnerability.
	DiscoveryNoteAnalysisKindVulnerability = DiscoveryNoteAnalysisKind("VULNERABILITY")
	// The note and occurrence assert build provenance.
	DiscoveryNoteAnalysisKindBuild = DiscoveryNoteAnalysisKind("BUILD")
	// This represents an image basis relationship.
	DiscoveryNoteAnalysisKindImage = DiscoveryNoteAnalysisKind("IMAGE")
	// This represents a package installed via a package manager.
	DiscoveryNoteAnalysisKindPackage = DiscoveryNoteAnalysisKind("PACKAGE")
	// The note and occurrence track deployment events.
	DiscoveryNoteAnalysisKindDeployment = DiscoveryNoteAnalysisKind("DEPLOYMENT")
	// The note and occurrence track the initial discovery status of a resource.
	DiscoveryNoteAnalysisKindDiscovery = DiscoveryNoteAnalysisKind("DISCOVERY")
	// This represents a logical "role" that can attest to artifacts.
	DiscoveryNoteAnalysisKindAttestation = DiscoveryNoteAnalysisKind("ATTESTATION")
	// This represents an available package upgrade.
	DiscoveryNoteAnalysisKindUpgrade = DiscoveryNoteAnalysisKind("UPGRADE")
	// This represents a Compliance Note
	DiscoveryNoteAnalysisKindCompliance = DiscoveryNoteAnalysisKind("COMPLIANCE")
	// This represents a DSSE attestation Note
	DiscoveryNoteAnalysisKindDsseAttestation = DiscoveryNoteAnalysisKind("DSSE_ATTESTATION")
	// This represents a Vulnerability Assessment.
	DiscoveryNoteAnalysisKindVulnerabilityAssessment = DiscoveryNoteAnalysisKind("VULNERABILITY_ASSESSMENT")
	// This represents an SBOM Reference.
	DiscoveryNoteAnalysisKindSbomReference = DiscoveryNoteAnalysisKind("SBOM_REFERENCE")
)

func (DiscoveryNoteAnalysisKind) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryNoteAnalysisKind)(nil)).Elem()
}

func (e DiscoveryNoteAnalysisKind) ToDiscoveryNoteAnalysisKindOutput() DiscoveryNoteAnalysisKindOutput {
	return pulumi.ToOutput(e).(DiscoveryNoteAnalysisKindOutput)
}

func (e DiscoveryNoteAnalysisKind) ToDiscoveryNoteAnalysisKindOutputWithContext(ctx context.Context) DiscoveryNoteAnalysisKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiscoveryNoteAnalysisKindOutput)
}

func (e DiscoveryNoteAnalysisKind) ToDiscoveryNoteAnalysisKindPtrOutput() DiscoveryNoteAnalysisKindPtrOutput {
	return e.ToDiscoveryNoteAnalysisKindPtrOutputWithContext(context.Background())
}

func (e DiscoveryNoteAnalysisKind) ToDiscoveryNoteAnalysisKindPtrOutputWithContext(ctx context.Context) DiscoveryNoteAnalysisKindPtrOutput {
	return DiscoveryNoteAnalysisKind(e).ToDiscoveryNoteAnalysisKindOutputWithContext(ctx).ToDiscoveryNoteAnalysisKindPtrOutputWithContext(ctx)
}

func (e DiscoveryNoteAnalysisKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryNoteAnalysisKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryNoteAnalysisKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscoveryNoteAnalysisKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiscoveryNoteAnalysisKindOutput struct{ *pulumi.OutputState }

func (DiscoveryNoteAnalysisKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryNoteAnalysisKind)(nil)).Elem()
}

func (o DiscoveryNoteAnalysisKindOutput) ToDiscoveryNoteAnalysisKindOutput() DiscoveryNoteAnalysisKindOutput {
	return o
}

func (o DiscoveryNoteAnalysisKindOutput) ToDiscoveryNoteAnalysisKindOutputWithContext(ctx context.Context) DiscoveryNoteAnalysisKindOutput {
	return o
}

func (o DiscoveryNoteAnalysisKindOutput) ToDiscoveryNoteAnalysisKindPtrOutput() DiscoveryNoteAnalysisKindPtrOutput {
	return o.ToDiscoveryNoteAnalysisKindPtrOutputWithContext(context.Background())
}

func (o DiscoveryNoteAnalysisKindOutput) ToDiscoveryNoteAnalysisKindPtrOutputWithContext(ctx context.Context) DiscoveryNoteAnalysisKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiscoveryNoteAnalysisKind) *DiscoveryNoteAnalysisKind {
		return &v
	}).(DiscoveryNoteAnalysisKindPtrOutput)
}

func (o DiscoveryNoteAnalysisKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiscoveryNoteAnalysisKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscoveryNoteAnalysisKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiscoveryNoteAnalysisKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscoveryNoteAnalysisKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscoveryNoteAnalysisKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiscoveryNoteAnalysisKindPtrOutput struct{ *pulumi.OutputState }

func (DiscoveryNoteAnalysisKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryNoteAnalysisKind)(nil)).Elem()
}

func (o DiscoveryNoteAnalysisKindPtrOutput) ToDiscoveryNoteAnalysisKindPtrOutput() DiscoveryNoteAnalysisKindPtrOutput {
	return o
}

func (o DiscoveryNoteAnalysisKindPtrOutput) ToDiscoveryNoteAnalysisKindPtrOutputWithContext(ctx context.Context) DiscoveryNoteAnalysisKindPtrOutput {
	return o
}

func (o DiscoveryNoteAnalysisKindPtrOutput) Elem() DiscoveryNoteAnalysisKindOutput {
	return o.ApplyT(func(v *DiscoveryNoteAnalysisKind) DiscoveryNoteAnalysisKind {
		if v != nil {
			return *v
		}
		var ret DiscoveryNoteAnalysisKind
		return ret
	}).(DiscoveryNoteAnalysisKindOutput)
}

func (o DiscoveryNoteAnalysisKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscoveryNoteAnalysisKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiscoveryNoteAnalysisKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiscoveryNoteAnalysisKindInput is an input type that accepts values of the DiscoveryNoteAnalysisKind enum
// A concrete instance of `DiscoveryNoteAnalysisKindInput` can be one of the following:
//
//	DiscoveryNoteAnalysisKindNoteKindUnspecified
//	DiscoveryNoteAnalysisKindVulnerability
//	DiscoveryNoteAnalysisKindBuild
//	DiscoveryNoteAnalysisKindImage
//	DiscoveryNoteAnalysisKindPackage
//	DiscoveryNoteAnalysisKindDeployment
//	DiscoveryNoteAnalysisKindDiscovery
//	DiscoveryNoteAnalysisKindAttestation
//	DiscoveryNoteAnalysisKindUpgrade
//	DiscoveryNoteAnalysisKindCompliance
//	DiscoveryNoteAnalysisKindDsseAttestation
//	DiscoveryNoteAnalysisKindVulnerabilityAssessment
//	DiscoveryNoteAnalysisKindSbomReference
type DiscoveryNoteAnalysisKindInput interface {
	pulumi.Input

	ToDiscoveryNoteAnalysisKindOutput() DiscoveryNoteAnalysisKindOutput
	ToDiscoveryNoteAnalysisKindOutputWithContext(context.Context) DiscoveryNoteAnalysisKindOutput
}

var discoveryNoteAnalysisKindPtrType = reflect.TypeOf((**DiscoveryNoteAnalysisKind)(nil)).Elem()

type DiscoveryNoteAnalysisKindPtrInput interface {
	pulumi.Input

	ToDiscoveryNoteAnalysisKindPtrOutput() DiscoveryNoteAnalysisKindPtrOutput
	ToDiscoveryNoteAnalysisKindPtrOutputWithContext(context.Context) DiscoveryNoteAnalysisKindPtrOutput
}

type discoveryNoteAnalysisKindPtr string

func DiscoveryNoteAnalysisKindPtr(v string) DiscoveryNoteAnalysisKindPtrInput {
	return (*discoveryNoteAnalysisKindPtr)(&v)
}

func (*discoveryNoteAnalysisKindPtr) ElementType() reflect.Type {
	return discoveryNoteAnalysisKindPtrType
}

func (in *discoveryNoteAnalysisKindPtr) ToDiscoveryNoteAnalysisKindPtrOutput() DiscoveryNoteAnalysisKindPtrOutput {
	return pulumi.ToOutput(in).(DiscoveryNoteAnalysisKindPtrOutput)
}

func (in *discoveryNoteAnalysisKindPtr) ToDiscoveryNoteAnalysisKindPtrOutputWithContext(ctx context.Context) DiscoveryNoteAnalysisKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiscoveryNoteAnalysisKindPtrOutput)
}

func (in *discoveryNoteAnalysisKindPtr) ToOutput(ctx context.Context) pulumix.Output[*DiscoveryNoteAnalysisKind] {
	return pulumix.Output[*DiscoveryNoteAnalysisKind]{
		OutputState: in.ToDiscoveryNoteAnalysisKindPtrOutputWithContext(ctx).OutputState,
	}
}

// The status of discovery for the resource.
type DiscoveryOccurrenceAnalysisStatus string

const (
	// Unknown.
	DiscoveryOccurrenceAnalysisStatusAnalysisStatusUnspecified = DiscoveryOccurrenceAnalysisStatus("ANALYSIS_STATUS_UNSPECIFIED")
	// Resource is known but no action has been taken yet.
	DiscoveryOccurrenceAnalysisStatusPending = DiscoveryOccurrenceAnalysisStatus("PENDING")
	// Resource is being analyzed.
	DiscoveryOccurrenceAnalysisStatusScanning = DiscoveryOccurrenceAnalysisStatus("SCANNING")
	// Analysis has finished successfully.
	DiscoveryOccurrenceAnalysisStatusFinishedSuccess = DiscoveryOccurrenceAnalysisStatus("FINISHED_SUCCESS")
	// Analysis has completed.
	DiscoveryOccurrenceAnalysisStatusComplete = DiscoveryOccurrenceAnalysisStatus("COMPLETE")
	// Analysis has finished unsuccessfully, the analysis itself is in a bad state.
	DiscoveryOccurrenceAnalysisStatusFinishedFailed = DiscoveryOccurrenceAnalysisStatus("FINISHED_FAILED")
	// The resource is known not to be supported.
	DiscoveryOccurrenceAnalysisStatusFinishedUnsupported = DiscoveryOccurrenceAnalysisStatus("FINISHED_UNSUPPORTED")
)

func (DiscoveryOccurrenceAnalysisStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryOccurrenceAnalysisStatus)(nil)).Elem()
}

func (e DiscoveryOccurrenceAnalysisStatus) ToDiscoveryOccurrenceAnalysisStatusOutput() DiscoveryOccurrenceAnalysisStatusOutput {
	return pulumi.ToOutput(e).(DiscoveryOccurrenceAnalysisStatusOutput)
}

func (e DiscoveryOccurrenceAnalysisStatus) ToDiscoveryOccurrenceAnalysisStatusOutputWithContext(ctx context.Context) DiscoveryOccurrenceAnalysisStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiscoveryOccurrenceAnalysisStatusOutput)
}

func (e DiscoveryOccurrenceAnalysisStatus) ToDiscoveryOccurrenceAnalysisStatusPtrOutput() DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return e.ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(context.Background())
}

func (e DiscoveryOccurrenceAnalysisStatus) ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return DiscoveryOccurrenceAnalysisStatus(e).ToDiscoveryOccurrenceAnalysisStatusOutputWithContext(ctx).ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(ctx)
}

func (e DiscoveryOccurrenceAnalysisStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryOccurrenceAnalysisStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryOccurrenceAnalysisStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscoveryOccurrenceAnalysisStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiscoveryOccurrenceAnalysisStatusOutput struct{ *pulumi.OutputState }

func (DiscoveryOccurrenceAnalysisStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryOccurrenceAnalysisStatus)(nil)).Elem()
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToDiscoveryOccurrenceAnalysisStatusOutput() DiscoveryOccurrenceAnalysisStatusOutput {
	return o
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToDiscoveryOccurrenceAnalysisStatusOutputWithContext(ctx context.Context) DiscoveryOccurrenceAnalysisStatusOutput {
	return o
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToDiscoveryOccurrenceAnalysisStatusPtrOutput() DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return o.ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiscoveryOccurrenceAnalysisStatus) *DiscoveryOccurrenceAnalysisStatus {
		return &v
	}).(DiscoveryOccurrenceAnalysisStatusPtrOutput)
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscoveryOccurrenceAnalysisStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscoveryOccurrenceAnalysisStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiscoveryOccurrenceAnalysisStatusPtrOutput struct{ *pulumi.OutputState }

func (DiscoveryOccurrenceAnalysisStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryOccurrenceAnalysisStatus)(nil)).Elem()
}

func (o DiscoveryOccurrenceAnalysisStatusPtrOutput) ToDiscoveryOccurrenceAnalysisStatusPtrOutput() DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return o
}

func (o DiscoveryOccurrenceAnalysisStatusPtrOutput) ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return o
}

func (o DiscoveryOccurrenceAnalysisStatusPtrOutput) Elem() DiscoveryOccurrenceAnalysisStatusOutput {
	return o.ApplyT(func(v *DiscoveryOccurrenceAnalysisStatus) DiscoveryOccurrenceAnalysisStatus {
		if v != nil {
			return *v
		}
		var ret DiscoveryOccurrenceAnalysisStatus
		return ret
	}).(DiscoveryOccurrenceAnalysisStatusOutput)
}

func (o DiscoveryOccurrenceAnalysisStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceAnalysisStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiscoveryOccurrenceAnalysisStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiscoveryOccurrenceAnalysisStatusInput is an input type that accepts values of the DiscoveryOccurrenceAnalysisStatus enum
// A concrete instance of `DiscoveryOccurrenceAnalysisStatusInput` can be one of the following:
//
//	DiscoveryOccurrenceAnalysisStatusAnalysisStatusUnspecified
//	DiscoveryOccurrenceAnalysisStatusPending
//	DiscoveryOccurrenceAnalysisStatusScanning
//	DiscoveryOccurrenceAnalysisStatusFinishedSuccess
//	DiscoveryOccurrenceAnalysisStatusComplete
//	DiscoveryOccurrenceAnalysisStatusFinishedFailed
//	DiscoveryOccurrenceAnalysisStatusFinishedUnsupported
type DiscoveryOccurrenceAnalysisStatusInput interface {
	pulumi.Input

	ToDiscoveryOccurrenceAnalysisStatusOutput() DiscoveryOccurrenceAnalysisStatusOutput
	ToDiscoveryOccurrenceAnalysisStatusOutputWithContext(context.Context) DiscoveryOccurrenceAnalysisStatusOutput
}

var discoveryOccurrenceAnalysisStatusPtrType = reflect.TypeOf((**DiscoveryOccurrenceAnalysisStatus)(nil)).Elem()

type DiscoveryOccurrenceAnalysisStatusPtrInput interface {
	pulumi.Input

	ToDiscoveryOccurrenceAnalysisStatusPtrOutput() DiscoveryOccurrenceAnalysisStatusPtrOutput
	ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(context.Context) DiscoveryOccurrenceAnalysisStatusPtrOutput
}

type discoveryOccurrenceAnalysisStatusPtr string

func DiscoveryOccurrenceAnalysisStatusPtr(v string) DiscoveryOccurrenceAnalysisStatusPtrInput {
	return (*discoveryOccurrenceAnalysisStatusPtr)(&v)
}

func (*discoveryOccurrenceAnalysisStatusPtr) ElementType() reflect.Type {
	return discoveryOccurrenceAnalysisStatusPtrType
}

func (in *discoveryOccurrenceAnalysisStatusPtr) ToDiscoveryOccurrenceAnalysisStatusPtrOutput() DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return pulumi.ToOutput(in).(DiscoveryOccurrenceAnalysisStatusPtrOutput)
}

func (in *discoveryOccurrenceAnalysisStatusPtr) ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiscoveryOccurrenceAnalysisStatusPtrOutput)
}

func (in *discoveryOccurrenceAnalysisStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*DiscoveryOccurrenceAnalysisStatus] {
	return pulumix.Output[*DiscoveryOccurrenceAnalysisStatus]{
		OutputState: in.ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// Whether the resource is continuously analyzed.
type DiscoveryOccurrenceContinuousAnalysis string

const (
	// Unknown.
	DiscoveryOccurrenceContinuousAnalysisContinuousAnalysisUnspecified = DiscoveryOccurrenceContinuousAnalysis("CONTINUOUS_ANALYSIS_UNSPECIFIED")
	// The resource is continuously analyzed.
	DiscoveryOccurrenceContinuousAnalysisActive = DiscoveryOccurrenceContinuousAnalysis("ACTIVE")
	// The resource is ignored for continuous analysis.
	DiscoveryOccurrenceContinuousAnalysisInactive = DiscoveryOccurrenceContinuousAnalysis("INACTIVE")
)

func (DiscoveryOccurrenceContinuousAnalysis) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryOccurrenceContinuousAnalysis)(nil)).Elem()
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToDiscoveryOccurrenceContinuousAnalysisOutput() DiscoveryOccurrenceContinuousAnalysisOutput {
	return pulumi.ToOutput(e).(DiscoveryOccurrenceContinuousAnalysisOutput)
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToDiscoveryOccurrenceContinuousAnalysisOutputWithContext(ctx context.Context) DiscoveryOccurrenceContinuousAnalysisOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiscoveryOccurrenceContinuousAnalysisOutput)
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToDiscoveryOccurrenceContinuousAnalysisPtrOutput() DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return e.ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(context.Background())
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return DiscoveryOccurrenceContinuousAnalysis(e).ToDiscoveryOccurrenceContinuousAnalysisOutputWithContext(ctx).ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(ctx)
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiscoveryOccurrenceContinuousAnalysisOutput struct{ *pulumi.OutputState }

func (DiscoveryOccurrenceContinuousAnalysisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryOccurrenceContinuousAnalysis)(nil)).Elem()
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToDiscoveryOccurrenceContinuousAnalysisOutput() DiscoveryOccurrenceContinuousAnalysisOutput {
	return o
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToDiscoveryOccurrenceContinuousAnalysisOutputWithContext(ctx context.Context) DiscoveryOccurrenceContinuousAnalysisOutput {
	return o
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToDiscoveryOccurrenceContinuousAnalysisPtrOutput() DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return o.ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiscoveryOccurrenceContinuousAnalysis) *DiscoveryOccurrenceContinuousAnalysis {
		return &v
	}).(DiscoveryOccurrenceContinuousAnalysisPtrOutput)
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscoveryOccurrenceContinuousAnalysis) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscoveryOccurrenceContinuousAnalysis) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiscoveryOccurrenceContinuousAnalysisPtrOutput struct{ *pulumi.OutputState }

func (DiscoveryOccurrenceContinuousAnalysisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryOccurrenceContinuousAnalysis)(nil)).Elem()
}

func (o DiscoveryOccurrenceContinuousAnalysisPtrOutput) ToDiscoveryOccurrenceContinuousAnalysisPtrOutput() DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return o
}

func (o DiscoveryOccurrenceContinuousAnalysisPtrOutput) ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return o
}

func (o DiscoveryOccurrenceContinuousAnalysisPtrOutput) Elem() DiscoveryOccurrenceContinuousAnalysisOutput {
	return o.ApplyT(func(v *DiscoveryOccurrenceContinuousAnalysis) DiscoveryOccurrenceContinuousAnalysis {
		if v != nil {
			return *v
		}
		var ret DiscoveryOccurrenceContinuousAnalysis
		return ret
	}).(DiscoveryOccurrenceContinuousAnalysisOutput)
}

func (o DiscoveryOccurrenceContinuousAnalysisPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceContinuousAnalysisPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiscoveryOccurrenceContinuousAnalysis) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiscoveryOccurrenceContinuousAnalysisInput is an input type that accepts values of the DiscoveryOccurrenceContinuousAnalysis enum
// A concrete instance of `DiscoveryOccurrenceContinuousAnalysisInput` can be one of the following:
//
//	DiscoveryOccurrenceContinuousAnalysisContinuousAnalysisUnspecified
//	DiscoveryOccurrenceContinuousAnalysisActive
//	DiscoveryOccurrenceContinuousAnalysisInactive
type DiscoveryOccurrenceContinuousAnalysisInput interface {
	pulumi.Input

	ToDiscoveryOccurrenceContinuousAnalysisOutput() DiscoveryOccurrenceContinuousAnalysisOutput
	ToDiscoveryOccurrenceContinuousAnalysisOutputWithContext(context.Context) DiscoveryOccurrenceContinuousAnalysisOutput
}

var discoveryOccurrenceContinuousAnalysisPtrType = reflect.TypeOf((**DiscoveryOccurrenceContinuousAnalysis)(nil)).Elem()

type DiscoveryOccurrenceContinuousAnalysisPtrInput interface {
	pulumi.Input

	ToDiscoveryOccurrenceContinuousAnalysisPtrOutput() DiscoveryOccurrenceContinuousAnalysisPtrOutput
	ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(context.Context) DiscoveryOccurrenceContinuousAnalysisPtrOutput
}

type discoveryOccurrenceContinuousAnalysisPtr string

func DiscoveryOccurrenceContinuousAnalysisPtr(v string) DiscoveryOccurrenceContinuousAnalysisPtrInput {
	return (*discoveryOccurrenceContinuousAnalysisPtr)(&v)
}

func (*discoveryOccurrenceContinuousAnalysisPtr) ElementType() reflect.Type {
	return discoveryOccurrenceContinuousAnalysisPtrType
}

func (in *discoveryOccurrenceContinuousAnalysisPtr) ToDiscoveryOccurrenceContinuousAnalysisPtrOutput() DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return pulumi.ToOutput(in).(DiscoveryOccurrenceContinuousAnalysisPtrOutput)
}

func (in *discoveryOccurrenceContinuousAnalysisPtr) ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiscoveryOccurrenceContinuousAnalysisPtrOutput)
}

func (in *discoveryOccurrenceContinuousAnalysisPtr) ToOutput(ctx context.Context) pulumix.Output[*DiscoveryOccurrenceContinuousAnalysis] {
	return pulumix.Output[*DiscoveryOccurrenceContinuousAnalysis]{
		OutputState: in.ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(ctx).OutputState,
	}
}

// The CPU architecture for which packages in this distribution channel were built.
type DistributionArchitecture string

const (
	// Unknown architecture.
	DistributionArchitectureArchitectureUnspecified = DistributionArchitecture("ARCHITECTURE_UNSPECIFIED")
	// X86 architecture.
	DistributionArchitectureX86 = DistributionArchitecture("X86")
	// X64 architecture.
	DistributionArchitectureX64 = DistributionArchitecture("X64")
)

func (DistributionArchitecture) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionArchitecture)(nil)).Elem()
}

func (e DistributionArchitecture) ToDistributionArchitectureOutput() DistributionArchitectureOutput {
	return pulumi.ToOutput(e).(DistributionArchitectureOutput)
}

func (e DistributionArchitecture) ToDistributionArchitectureOutputWithContext(ctx context.Context) DistributionArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DistributionArchitectureOutput)
}

func (e DistributionArchitecture) ToDistributionArchitecturePtrOutput() DistributionArchitecturePtrOutput {
	return e.ToDistributionArchitecturePtrOutputWithContext(context.Background())
}

func (e DistributionArchitecture) ToDistributionArchitecturePtrOutputWithContext(ctx context.Context) DistributionArchitecturePtrOutput {
	return DistributionArchitecture(e).ToDistributionArchitectureOutputWithContext(ctx).ToDistributionArchitecturePtrOutputWithContext(ctx)
}

func (e DistributionArchitecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DistributionArchitecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DistributionArchitecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DistributionArchitecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DistributionArchitectureOutput struct{ *pulumi.OutputState }

func (DistributionArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionArchitecture)(nil)).Elem()
}

func (o DistributionArchitectureOutput) ToDistributionArchitectureOutput() DistributionArchitectureOutput {
	return o
}

func (o DistributionArchitectureOutput) ToDistributionArchitectureOutputWithContext(ctx context.Context) DistributionArchitectureOutput {
	return o
}

func (o DistributionArchitectureOutput) ToDistributionArchitecturePtrOutput() DistributionArchitecturePtrOutput {
	return o.ToDistributionArchitecturePtrOutputWithContext(context.Background())
}

func (o DistributionArchitectureOutput) ToDistributionArchitecturePtrOutputWithContext(ctx context.Context) DistributionArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionArchitecture) *DistributionArchitecture {
		return &v
	}).(DistributionArchitecturePtrOutput)
}

func (o DistributionArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DistributionArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DistributionArchitecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DistributionArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DistributionArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DistributionArchitecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DistributionArchitecturePtrOutput struct{ *pulumi.OutputState }

func (DistributionArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionArchitecture)(nil)).Elem()
}

func (o DistributionArchitecturePtrOutput) ToDistributionArchitecturePtrOutput() DistributionArchitecturePtrOutput {
	return o
}

func (o DistributionArchitecturePtrOutput) ToDistributionArchitecturePtrOutputWithContext(ctx context.Context) DistributionArchitecturePtrOutput {
	return o
}

func (o DistributionArchitecturePtrOutput) Elem() DistributionArchitectureOutput {
	return o.ApplyT(func(v *DistributionArchitecture) DistributionArchitecture {
		if v != nil {
			return *v
		}
		var ret DistributionArchitecture
		return ret
	}).(DistributionArchitectureOutput)
}

func (o DistributionArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DistributionArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DistributionArchitecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DistributionArchitectureInput is an input type that accepts values of the DistributionArchitecture enum
// A concrete instance of `DistributionArchitectureInput` can be one of the following:
//
//	DistributionArchitectureArchitectureUnspecified
//	DistributionArchitectureX86
//	DistributionArchitectureX64
type DistributionArchitectureInput interface {
	pulumi.Input

	ToDistributionArchitectureOutput() DistributionArchitectureOutput
	ToDistributionArchitectureOutputWithContext(context.Context) DistributionArchitectureOutput
}

var distributionArchitecturePtrType = reflect.TypeOf((**DistributionArchitecture)(nil)).Elem()

type DistributionArchitecturePtrInput interface {
	pulumi.Input

	ToDistributionArchitecturePtrOutput() DistributionArchitecturePtrOutput
	ToDistributionArchitecturePtrOutputWithContext(context.Context) DistributionArchitecturePtrOutput
}

type distributionArchitecturePtr string

func DistributionArchitecturePtr(v string) DistributionArchitecturePtrInput {
	return (*distributionArchitecturePtr)(&v)
}

func (*distributionArchitecturePtr) ElementType() reflect.Type {
	return distributionArchitecturePtrType
}

func (in *distributionArchitecturePtr) ToDistributionArchitecturePtrOutput() DistributionArchitecturePtrOutput {
	return pulumi.ToOutput(in).(DistributionArchitecturePtrOutput)
}

func (in *distributionArchitecturePtr) ToDistributionArchitecturePtrOutputWithContext(ctx context.Context) DistributionArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DistributionArchitecturePtrOutput)
}

func (in *distributionArchitecturePtr) ToOutput(ctx context.Context) pulumix.Output[*DistributionArchitecture] {
	return pulumix.Output[*DistributionArchitecture]{
		OutputState: in.ToDistributionArchitecturePtrOutputWithContext(ctx).OutputState,
	}
}

// The justification type for this vulnerability.
type JustificationJustificationType string

const (
	// JUSTIFICATION_TYPE_UNSPECIFIED.
	JustificationJustificationTypeJustificationTypeUnspecified = JustificationJustificationType("JUSTIFICATION_TYPE_UNSPECIFIED")
	// The vulnerable component is not present in the product.
	JustificationJustificationTypeComponentNotPresent = JustificationJustificationType("COMPONENT_NOT_PRESENT")
	// The vulnerable code is not present. Typically this case occurs when source code is configured or built in a way that excludes the vulnerable code.
	JustificationJustificationTypeVulnerableCodeNotPresent = JustificationJustificationType("VULNERABLE_CODE_NOT_PRESENT")
	// The vulnerable code can not be executed. Typically this case occurs when the product includes the vulnerable code but does not call or use the vulnerable code.
	JustificationJustificationTypeVulnerableCodeNotInExecutePath = JustificationJustificationType("VULNERABLE_CODE_NOT_IN_EXECUTE_PATH")
	// The vulnerable code cannot be controlled by an attacker to exploit the vulnerability.
	JustificationJustificationTypeVulnerableCodeCannotBeControlledByAdversary = JustificationJustificationType("VULNERABLE_CODE_CANNOT_BE_CONTROLLED_BY_ADVERSARY")
	// The product includes built-in protections or features that prevent exploitation of the vulnerability. These built-in protections cannot be subverted by the attacker and cannot be configured or disabled by the user. These mitigations completely prevent exploitation based on known attack vectors.
	JustificationJustificationTypeInlineMitigationsAlreadyExist = JustificationJustificationType("INLINE_MITIGATIONS_ALREADY_EXIST")
)

func (JustificationJustificationType) ElementType() reflect.Type {
	return reflect.TypeOf((*JustificationJustificationType)(nil)).Elem()
}

func (e JustificationJustificationType) ToJustificationJustificationTypeOutput() JustificationJustificationTypeOutput {
	return pulumi.ToOutput(e).(JustificationJustificationTypeOutput)
}

func (e JustificationJustificationType) ToJustificationJustificationTypeOutputWithContext(ctx context.Context) JustificationJustificationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JustificationJustificationTypeOutput)
}

func (e JustificationJustificationType) ToJustificationJustificationTypePtrOutput() JustificationJustificationTypePtrOutput {
	return e.ToJustificationJustificationTypePtrOutputWithContext(context.Background())
}

func (e JustificationJustificationType) ToJustificationJustificationTypePtrOutputWithContext(ctx context.Context) JustificationJustificationTypePtrOutput {
	return JustificationJustificationType(e).ToJustificationJustificationTypeOutputWithContext(ctx).ToJustificationJustificationTypePtrOutputWithContext(ctx)
}

func (e JustificationJustificationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JustificationJustificationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JustificationJustificationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JustificationJustificationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JustificationJustificationTypeOutput struct{ *pulumi.OutputState }

func (JustificationJustificationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JustificationJustificationType)(nil)).Elem()
}

func (o JustificationJustificationTypeOutput) ToJustificationJustificationTypeOutput() JustificationJustificationTypeOutput {
	return o
}

func (o JustificationJustificationTypeOutput) ToJustificationJustificationTypeOutputWithContext(ctx context.Context) JustificationJustificationTypeOutput {
	return o
}

func (o JustificationJustificationTypeOutput) ToJustificationJustificationTypePtrOutput() JustificationJustificationTypePtrOutput {
	return o.ToJustificationJustificationTypePtrOutputWithContext(context.Background())
}

func (o JustificationJustificationTypeOutput) ToJustificationJustificationTypePtrOutputWithContext(ctx context.Context) JustificationJustificationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JustificationJustificationType) *JustificationJustificationType {
		return &v
	}).(JustificationJustificationTypePtrOutput)
}

func (o JustificationJustificationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JustificationJustificationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JustificationJustificationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JustificationJustificationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JustificationJustificationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JustificationJustificationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JustificationJustificationTypePtrOutput struct{ *pulumi.OutputState }

func (JustificationJustificationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JustificationJustificationType)(nil)).Elem()
}

func (o JustificationJustificationTypePtrOutput) ToJustificationJustificationTypePtrOutput() JustificationJustificationTypePtrOutput {
	return o
}

func (o JustificationJustificationTypePtrOutput) ToJustificationJustificationTypePtrOutputWithContext(ctx context.Context) JustificationJustificationTypePtrOutput {
	return o
}

func (o JustificationJustificationTypePtrOutput) Elem() JustificationJustificationTypeOutput {
	return o.ApplyT(func(v *JustificationJustificationType) JustificationJustificationType {
		if v != nil {
			return *v
		}
		var ret JustificationJustificationType
		return ret
	}).(JustificationJustificationTypeOutput)
}

func (o JustificationJustificationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JustificationJustificationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JustificationJustificationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JustificationJustificationTypeInput is an input type that accepts values of the JustificationJustificationType enum
// A concrete instance of `JustificationJustificationTypeInput` can be one of the following:
//
//	JustificationJustificationTypeJustificationTypeUnspecified
//	JustificationJustificationTypeComponentNotPresent
//	JustificationJustificationTypeVulnerableCodeNotPresent
//	JustificationJustificationTypeVulnerableCodeNotInExecutePath
//	JustificationJustificationTypeVulnerableCodeCannotBeControlledByAdversary
//	JustificationJustificationTypeInlineMitigationsAlreadyExist
type JustificationJustificationTypeInput interface {
	pulumi.Input

	ToJustificationJustificationTypeOutput() JustificationJustificationTypeOutput
	ToJustificationJustificationTypeOutputWithContext(context.Context) JustificationJustificationTypeOutput
}

var justificationJustificationTypePtrType = reflect.TypeOf((**JustificationJustificationType)(nil)).Elem()

type JustificationJustificationTypePtrInput interface {
	pulumi.Input

	ToJustificationJustificationTypePtrOutput() JustificationJustificationTypePtrOutput
	ToJustificationJustificationTypePtrOutputWithContext(context.Context) JustificationJustificationTypePtrOutput
}

type justificationJustificationTypePtr string

func JustificationJustificationTypePtr(v string) JustificationJustificationTypePtrInput {
	return (*justificationJustificationTypePtr)(&v)
}

func (*justificationJustificationTypePtr) ElementType() reflect.Type {
	return justificationJustificationTypePtrType
}

func (in *justificationJustificationTypePtr) ToJustificationJustificationTypePtrOutput() JustificationJustificationTypePtrOutput {
	return pulumi.ToOutput(in).(JustificationJustificationTypePtrOutput)
}

func (in *justificationJustificationTypePtr) ToJustificationJustificationTypePtrOutputWithContext(ctx context.Context) JustificationJustificationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JustificationJustificationTypePtrOutput)
}

func (in *justificationJustificationTypePtr) ToOutput(ctx context.Context) pulumix.Output[*JustificationJustificationType] {
	return pulumix.Output[*JustificationJustificationType]{
		OutputState: in.ToJustificationJustificationTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The CPU architecture for which packages in this distribution channel were built. Architecture will be blank for language packages.
type PackageNoteArchitecture string

const (
	// Unknown architecture.
	PackageNoteArchitectureArchitectureUnspecified = PackageNoteArchitecture("ARCHITECTURE_UNSPECIFIED")
	// X86 architecture.
	PackageNoteArchitectureX86 = PackageNoteArchitecture("X86")
	// X64 architecture.
	PackageNoteArchitectureX64 = PackageNoteArchitecture("X64")
)

func (PackageNoteArchitecture) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageNoteArchitecture)(nil)).Elem()
}

func (e PackageNoteArchitecture) ToPackageNoteArchitectureOutput() PackageNoteArchitectureOutput {
	return pulumi.ToOutput(e).(PackageNoteArchitectureOutput)
}

func (e PackageNoteArchitecture) ToPackageNoteArchitectureOutputWithContext(ctx context.Context) PackageNoteArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PackageNoteArchitectureOutput)
}

func (e PackageNoteArchitecture) ToPackageNoteArchitecturePtrOutput() PackageNoteArchitecturePtrOutput {
	return e.ToPackageNoteArchitecturePtrOutputWithContext(context.Background())
}

func (e PackageNoteArchitecture) ToPackageNoteArchitecturePtrOutputWithContext(ctx context.Context) PackageNoteArchitecturePtrOutput {
	return PackageNoteArchitecture(e).ToPackageNoteArchitectureOutputWithContext(ctx).ToPackageNoteArchitecturePtrOutputWithContext(ctx)
}

func (e PackageNoteArchitecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PackageNoteArchitecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PackageNoteArchitecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PackageNoteArchitecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PackageNoteArchitectureOutput struct{ *pulumi.OutputState }

func (PackageNoteArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageNoteArchitecture)(nil)).Elem()
}

func (o PackageNoteArchitectureOutput) ToPackageNoteArchitectureOutput() PackageNoteArchitectureOutput {
	return o
}

func (o PackageNoteArchitectureOutput) ToPackageNoteArchitectureOutputWithContext(ctx context.Context) PackageNoteArchitectureOutput {
	return o
}

func (o PackageNoteArchitectureOutput) ToPackageNoteArchitecturePtrOutput() PackageNoteArchitecturePtrOutput {
	return o.ToPackageNoteArchitecturePtrOutputWithContext(context.Background())
}

func (o PackageNoteArchitectureOutput) ToPackageNoteArchitecturePtrOutputWithContext(ctx context.Context) PackageNoteArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackageNoteArchitecture) *PackageNoteArchitecture {
		return &v
	}).(PackageNoteArchitecturePtrOutput)
}

func (o PackageNoteArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PackageNoteArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PackageNoteArchitecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PackageNoteArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PackageNoteArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PackageNoteArchitecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PackageNoteArchitecturePtrOutput struct{ *pulumi.OutputState }

func (PackageNoteArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageNoteArchitecture)(nil)).Elem()
}

func (o PackageNoteArchitecturePtrOutput) ToPackageNoteArchitecturePtrOutput() PackageNoteArchitecturePtrOutput {
	return o
}

func (o PackageNoteArchitecturePtrOutput) ToPackageNoteArchitecturePtrOutputWithContext(ctx context.Context) PackageNoteArchitecturePtrOutput {
	return o
}

func (o PackageNoteArchitecturePtrOutput) Elem() PackageNoteArchitectureOutput {
	return o.ApplyT(func(v *PackageNoteArchitecture) PackageNoteArchitecture {
		if v != nil {
			return *v
		}
		var ret PackageNoteArchitecture
		return ret
	}).(PackageNoteArchitectureOutput)
}

func (o PackageNoteArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PackageNoteArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PackageNoteArchitecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PackageNoteArchitectureInput is an input type that accepts values of the PackageNoteArchitecture enum
// A concrete instance of `PackageNoteArchitectureInput` can be one of the following:
//
//	PackageNoteArchitectureArchitectureUnspecified
//	PackageNoteArchitectureX86
//	PackageNoteArchitectureX64
type PackageNoteArchitectureInput interface {
	pulumi.Input

	ToPackageNoteArchitectureOutput() PackageNoteArchitectureOutput
	ToPackageNoteArchitectureOutputWithContext(context.Context) PackageNoteArchitectureOutput
}

var packageNoteArchitecturePtrType = reflect.TypeOf((**PackageNoteArchitecture)(nil)).Elem()

type PackageNoteArchitecturePtrInput interface {
	pulumi.Input

	ToPackageNoteArchitecturePtrOutput() PackageNoteArchitecturePtrOutput
	ToPackageNoteArchitecturePtrOutputWithContext(context.Context) PackageNoteArchitecturePtrOutput
}

type packageNoteArchitecturePtr string

func PackageNoteArchitecturePtr(v string) PackageNoteArchitecturePtrInput {
	return (*packageNoteArchitecturePtr)(&v)
}

func (*packageNoteArchitecturePtr) ElementType() reflect.Type {
	return packageNoteArchitecturePtrType
}

func (in *packageNoteArchitecturePtr) ToPackageNoteArchitecturePtrOutput() PackageNoteArchitecturePtrOutput {
	return pulumi.ToOutput(in).(PackageNoteArchitecturePtrOutput)
}

func (in *packageNoteArchitecturePtr) ToPackageNoteArchitecturePtrOutputWithContext(ctx context.Context) PackageNoteArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PackageNoteArchitecturePtrOutput)
}

func (in *packageNoteArchitecturePtr) ToOutput(ctx context.Context) pulumix.Output[*PackageNoteArchitecture] {
	return pulumix.Output[*PackageNoteArchitecture]{
		OutputState: in.ToPackageNoteArchitecturePtrOutputWithContext(ctx).OutputState,
	}
}

// The type of remediation that can be applied.
type RemediationRemediationType string

const (
	// No remediation type specified.
	RemediationRemediationTypeRemediationTypeUnspecified = RemediationRemediationType("REMEDIATION_TYPE_UNSPECIFIED")
	// A MITIGATION is available.
	RemediationRemediationTypeMitigation = RemediationRemediationType("MITIGATION")
	// No fix is planned.
	RemediationRemediationTypeNoFixPlanned = RemediationRemediationType("NO_FIX_PLANNED")
	// Not available.
	RemediationRemediationTypeNoneAvailable = RemediationRemediationType("NONE_AVAILABLE")
	// A vendor fix is available.
	RemediationRemediationTypeVendorFix = RemediationRemediationType("VENDOR_FIX")
	// A workaround is available.
	RemediationRemediationTypeWorkaround = RemediationRemediationType("WORKAROUND")
)

func (RemediationRemediationType) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationRemediationType)(nil)).Elem()
}

func (e RemediationRemediationType) ToRemediationRemediationTypeOutput() RemediationRemediationTypeOutput {
	return pulumi.ToOutput(e).(RemediationRemediationTypeOutput)
}

func (e RemediationRemediationType) ToRemediationRemediationTypeOutputWithContext(ctx context.Context) RemediationRemediationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RemediationRemediationTypeOutput)
}

func (e RemediationRemediationType) ToRemediationRemediationTypePtrOutput() RemediationRemediationTypePtrOutput {
	return e.ToRemediationRemediationTypePtrOutputWithContext(context.Background())
}

func (e RemediationRemediationType) ToRemediationRemediationTypePtrOutputWithContext(ctx context.Context) RemediationRemediationTypePtrOutput {
	return RemediationRemediationType(e).ToRemediationRemediationTypeOutputWithContext(ctx).ToRemediationRemediationTypePtrOutputWithContext(ctx)
}

func (e RemediationRemediationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RemediationRemediationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RemediationRemediationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RemediationRemediationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RemediationRemediationTypeOutput struct{ *pulumi.OutputState }

func (RemediationRemediationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationRemediationType)(nil)).Elem()
}

func (o RemediationRemediationTypeOutput) ToRemediationRemediationTypeOutput() RemediationRemediationTypeOutput {
	return o
}

func (o RemediationRemediationTypeOutput) ToRemediationRemediationTypeOutputWithContext(ctx context.Context) RemediationRemediationTypeOutput {
	return o
}

func (o RemediationRemediationTypeOutput) ToRemediationRemediationTypePtrOutput() RemediationRemediationTypePtrOutput {
	return o.ToRemediationRemediationTypePtrOutputWithContext(context.Background())
}

func (o RemediationRemediationTypeOutput) ToRemediationRemediationTypePtrOutputWithContext(ctx context.Context) RemediationRemediationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RemediationRemediationType) *RemediationRemediationType {
		return &v
	}).(RemediationRemediationTypePtrOutput)
}

func (o RemediationRemediationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RemediationRemediationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RemediationRemediationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RemediationRemediationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RemediationRemediationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RemediationRemediationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RemediationRemediationTypePtrOutput struct{ *pulumi.OutputState }

func (RemediationRemediationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationRemediationType)(nil)).Elem()
}

func (o RemediationRemediationTypePtrOutput) ToRemediationRemediationTypePtrOutput() RemediationRemediationTypePtrOutput {
	return o
}

func (o RemediationRemediationTypePtrOutput) ToRemediationRemediationTypePtrOutputWithContext(ctx context.Context) RemediationRemediationTypePtrOutput {
	return o
}

func (o RemediationRemediationTypePtrOutput) Elem() RemediationRemediationTypeOutput {
	return o.ApplyT(func(v *RemediationRemediationType) RemediationRemediationType {
		if v != nil {
			return *v
		}
		var ret RemediationRemediationType
		return ret
	}).(RemediationRemediationTypeOutput)
}

func (o RemediationRemediationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RemediationRemediationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RemediationRemediationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RemediationRemediationTypeInput is an input type that accepts values of the RemediationRemediationType enum
// A concrete instance of `RemediationRemediationTypeInput` can be one of the following:
//
//	RemediationRemediationTypeRemediationTypeUnspecified
//	RemediationRemediationTypeMitigation
//	RemediationRemediationTypeNoFixPlanned
//	RemediationRemediationTypeNoneAvailable
//	RemediationRemediationTypeVendorFix
//	RemediationRemediationTypeWorkaround
type RemediationRemediationTypeInput interface {
	pulumi.Input

	ToRemediationRemediationTypeOutput() RemediationRemediationTypeOutput
	ToRemediationRemediationTypeOutputWithContext(context.Context) RemediationRemediationTypeOutput
}

var remediationRemediationTypePtrType = reflect.TypeOf((**RemediationRemediationType)(nil)).Elem()

type RemediationRemediationTypePtrInput interface {
	pulumi.Input

	ToRemediationRemediationTypePtrOutput() RemediationRemediationTypePtrOutput
	ToRemediationRemediationTypePtrOutputWithContext(context.Context) RemediationRemediationTypePtrOutput
}

type remediationRemediationTypePtr string

func RemediationRemediationTypePtr(v string) RemediationRemediationTypePtrInput {
	return (*remediationRemediationTypePtr)(&v)
}

func (*remediationRemediationTypePtr) ElementType() reflect.Type {
	return remediationRemediationTypePtrType
}

func (in *remediationRemediationTypePtr) ToRemediationRemediationTypePtrOutput() RemediationRemediationTypePtrOutput {
	return pulumi.ToOutput(in).(RemediationRemediationTypePtrOutput)
}

func (in *remediationRemediationTypePtr) ToRemediationRemediationTypePtrOutputWithContext(ctx context.Context) RemediationRemediationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RemediationRemediationTypePtrOutput)
}

func (in *remediationRemediationTypePtr) ToOutput(ctx context.Context) pulumix.Output[*RemediationRemediationType] {
	return pulumix.Output[*RemediationRemediationType]{
		OutputState: in.ToRemediationRemediationTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The progress of the SBOM generation.
type SBOMStatusSbomState string

const (
	// Default unknown state.
	SBOMStatusSbomStateSbomStateUnspecified = SBOMStatusSbomState("SBOM_STATE_UNSPECIFIED")
	// SBOM scanning is pending.
	SBOMStatusSbomStatePending = SBOMStatusSbomState("PENDING")
	// SBOM scanning has completed.
	SBOMStatusSbomStateComplete = SBOMStatusSbomState("COMPLETE")
)

func (SBOMStatusSbomState) ElementType() reflect.Type {
	return reflect.TypeOf((*SBOMStatusSbomState)(nil)).Elem()
}

func (e SBOMStatusSbomState) ToSBOMStatusSbomStateOutput() SBOMStatusSbomStateOutput {
	return pulumi.ToOutput(e).(SBOMStatusSbomStateOutput)
}

func (e SBOMStatusSbomState) ToSBOMStatusSbomStateOutputWithContext(ctx context.Context) SBOMStatusSbomStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SBOMStatusSbomStateOutput)
}

func (e SBOMStatusSbomState) ToSBOMStatusSbomStatePtrOutput() SBOMStatusSbomStatePtrOutput {
	return e.ToSBOMStatusSbomStatePtrOutputWithContext(context.Background())
}

func (e SBOMStatusSbomState) ToSBOMStatusSbomStatePtrOutputWithContext(ctx context.Context) SBOMStatusSbomStatePtrOutput {
	return SBOMStatusSbomState(e).ToSBOMStatusSbomStateOutputWithContext(ctx).ToSBOMStatusSbomStatePtrOutputWithContext(ctx)
}

func (e SBOMStatusSbomState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SBOMStatusSbomState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SBOMStatusSbomState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SBOMStatusSbomState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SBOMStatusSbomStateOutput struct{ *pulumi.OutputState }

func (SBOMStatusSbomStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SBOMStatusSbomState)(nil)).Elem()
}

func (o SBOMStatusSbomStateOutput) ToSBOMStatusSbomStateOutput() SBOMStatusSbomStateOutput {
	return o
}

func (o SBOMStatusSbomStateOutput) ToSBOMStatusSbomStateOutputWithContext(ctx context.Context) SBOMStatusSbomStateOutput {
	return o
}

func (o SBOMStatusSbomStateOutput) ToSBOMStatusSbomStatePtrOutput() SBOMStatusSbomStatePtrOutput {
	return o.ToSBOMStatusSbomStatePtrOutputWithContext(context.Background())
}

func (o SBOMStatusSbomStateOutput) ToSBOMStatusSbomStatePtrOutputWithContext(ctx context.Context) SBOMStatusSbomStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SBOMStatusSbomState) *SBOMStatusSbomState {
		return &v
	}).(SBOMStatusSbomStatePtrOutput)
}

func (o SBOMStatusSbomStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SBOMStatusSbomStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SBOMStatusSbomState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SBOMStatusSbomStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SBOMStatusSbomStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SBOMStatusSbomState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SBOMStatusSbomStatePtrOutput struct{ *pulumi.OutputState }

func (SBOMStatusSbomStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SBOMStatusSbomState)(nil)).Elem()
}

func (o SBOMStatusSbomStatePtrOutput) ToSBOMStatusSbomStatePtrOutput() SBOMStatusSbomStatePtrOutput {
	return o
}

func (o SBOMStatusSbomStatePtrOutput) ToSBOMStatusSbomStatePtrOutputWithContext(ctx context.Context) SBOMStatusSbomStatePtrOutput {
	return o
}

func (o SBOMStatusSbomStatePtrOutput) Elem() SBOMStatusSbomStateOutput {
	return o.ApplyT(func(v *SBOMStatusSbomState) SBOMStatusSbomState {
		if v != nil {
			return *v
		}
		var ret SBOMStatusSbomState
		return ret
	}).(SBOMStatusSbomStateOutput)
}

func (o SBOMStatusSbomStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SBOMStatusSbomStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SBOMStatusSbomState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SBOMStatusSbomStateInput is an input type that accepts values of the SBOMStatusSbomState enum
// A concrete instance of `SBOMStatusSbomStateInput` can be one of the following:
//
//	SBOMStatusSbomStateSbomStateUnspecified
//	SBOMStatusSbomStatePending
//	SBOMStatusSbomStateComplete
type SBOMStatusSbomStateInput interface {
	pulumi.Input

	ToSBOMStatusSbomStateOutput() SBOMStatusSbomStateOutput
	ToSBOMStatusSbomStateOutputWithContext(context.Context) SBOMStatusSbomStateOutput
}

var sbomstatusSbomStatePtrType = reflect.TypeOf((**SBOMStatusSbomState)(nil)).Elem()

type SBOMStatusSbomStatePtrInput interface {
	pulumi.Input

	ToSBOMStatusSbomStatePtrOutput() SBOMStatusSbomStatePtrOutput
	ToSBOMStatusSbomStatePtrOutputWithContext(context.Context) SBOMStatusSbomStatePtrOutput
}

type sbomstatusSbomStatePtr string

func SBOMStatusSbomStatePtr(v string) SBOMStatusSbomStatePtrInput {
	return (*sbomstatusSbomStatePtr)(&v)
}

func (*sbomstatusSbomStatePtr) ElementType() reflect.Type {
	return sbomstatusSbomStatePtrType
}

func (in *sbomstatusSbomStatePtr) ToSBOMStatusSbomStatePtrOutput() SBOMStatusSbomStatePtrOutput {
	return pulumi.ToOutput(in).(SBOMStatusSbomStatePtrOutput)
}

func (in *sbomstatusSbomStatePtr) ToSBOMStatusSbomStatePtrOutputWithContext(ctx context.Context) SBOMStatusSbomStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SBOMStatusSbomStatePtrOutput)
}

func (in *sbomstatusSbomStatePtr) ToOutput(ctx context.Context) pulumix.Output[*SBOMStatusSbomState] {
	return pulumix.Output[*SBOMStatusSbomState]{
		OutputState: in.ToSBOMStatusSbomStatePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. Distinguishes between sentinel MIN/MAX versions and normal versions.
type VersionKind string

const (
	// Unknown.
	VersionKindVersionKindUnspecified = VersionKind("VERSION_KIND_UNSPECIFIED")
	// A standard package version.
	VersionKindNormal = VersionKind("NORMAL")
	// A special version representing negative infinity.
	VersionKindMinimum = VersionKind("MINIMUM")
	// A special version representing positive infinity.
	VersionKindMaximum = VersionKind("MAXIMUM")
)

func (VersionKind) ElementType() reflect.Type {
	return reflect.TypeOf((*VersionKind)(nil)).Elem()
}

func (e VersionKind) ToVersionKindOutput() VersionKindOutput {
	return pulumi.ToOutput(e).(VersionKindOutput)
}

func (e VersionKind) ToVersionKindOutputWithContext(ctx context.Context) VersionKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VersionKindOutput)
}

func (e VersionKind) ToVersionKindPtrOutput() VersionKindPtrOutput {
	return e.ToVersionKindPtrOutputWithContext(context.Background())
}

func (e VersionKind) ToVersionKindPtrOutputWithContext(ctx context.Context) VersionKindPtrOutput {
	return VersionKind(e).ToVersionKindOutputWithContext(ctx).ToVersionKindPtrOutputWithContext(ctx)
}

func (e VersionKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VersionKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VersionKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VersionKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VersionKindOutput struct{ *pulumi.OutputState }

func (VersionKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VersionKind)(nil)).Elem()
}

func (o VersionKindOutput) ToVersionKindOutput() VersionKindOutput {
	return o
}

func (o VersionKindOutput) ToVersionKindOutputWithContext(ctx context.Context) VersionKindOutput {
	return o
}

func (o VersionKindOutput) ToVersionKindPtrOutput() VersionKindPtrOutput {
	return o.ToVersionKindPtrOutputWithContext(context.Background())
}

func (o VersionKindOutput) ToVersionKindPtrOutputWithContext(ctx context.Context) VersionKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VersionKind) *VersionKind {
		return &v
	}).(VersionKindPtrOutput)
}

func (o VersionKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VersionKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VersionKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VersionKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VersionKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VersionKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VersionKindPtrOutput struct{ *pulumi.OutputState }

func (VersionKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VersionKind)(nil)).Elem()
}

func (o VersionKindPtrOutput) ToVersionKindPtrOutput() VersionKindPtrOutput {
	return o
}

func (o VersionKindPtrOutput) ToVersionKindPtrOutputWithContext(ctx context.Context) VersionKindPtrOutput {
	return o
}

func (o VersionKindPtrOutput) Elem() VersionKindOutput {
	return o.ApplyT(func(v *VersionKind) VersionKind {
		if v != nil {
			return *v
		}
		var ret VersionKind
		return ret
	}).(VersionKindOutput)
}

func (o VersionKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VersionKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VersionKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VersionKindInput is an input type that accepts values of the VersionKind enum
// A concrete instance of `VersionKindInput` can be one of the following:
//
//	VersionKindVersionKindUnspecified
//	VersionKindNormal
//	VersionKindMinimum
//	VersionKindMaximum
type VersionKindInput interface {
	pulumi.Input

	ToVersionKindOutput() VersionKindOutput
	ToVersionKindOutputWithContext(context.Context) VersionKindOutput
}

var versionKindPtrType = reflect.TypeOf((**VersionKind)(nil)).Elem()

type VersionKindPtrInput interface {
	pulumi.Input

	ToVersionKindPtrOutput() VersionKindPtrOutput
	ToVersionKindPtrOutputWithContext(context.Context) VersionKindPtrOutput
}

type versionKindPtr string

func VersionKindPtr(v string) VersionKindPtrInput {
	return (*versionKindPtr)(&v)
}

func (*versionKindPtr) ElementType() reflect.Type {
	return versionKindPtrType
}

func (in *versionKindPtr) ToVersionKindPtrOutput() VersionKindPtrOutput {
	return pulumi.ToOutput(in).(VersionKindPtrOutput)
}

func (in *versionKindPtr) ToVersionKindPtrOutputWithContext(ctx context.Context) VersionKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VersionKindPtrOutput)
}

func (in *versionKindPtr) ToOutput(ctx context.Context) pulumix.Output[*VersionKind] {
	return pulumix.Output[*VersionKind]{
		OutputState: in.ToVersionKindPtrOutputWithContext(ctx).OutputState,
	}
}

// Provides the state of this Vulnerability assessment.
type VexAssessmentState string

const (
	// No state is specified.
	VexAssessmentStateStateUnspecified = VexAssessmentState("STATE_UNSPECIFIED")
	// This product is known to be affected by this vulnerability.
	VexAssessmentStateAffected = VexAssessmentState("AFFECTED")
	// This product is known to be not affected by this vulnerability.
	VexAssessmentStateNotAffected = VexAssessmentState("NOT_AFFECTED")
	// This product contains a fix for this vulnerability.
	VexAssessmentStateFixed = VexAssessmentState("FIXED")
	// It is not known yet whether these versions are or are not affected by the vulnerability. However, it is still under investigation.
	VexAssessmentStateUnderInvestigation = VexAssessmentState("UNDER_INVESTIGATION")
)

func (VexAssessmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*VexAssessmentState)(nil)).Elem()
}

func (e VexAssessmentState) ToVexAssessmentStateOutput() VexAssessmentStateOutput {
	return pulumi.ToOutput(e).(VexAssessmentStateOutput)
}

func (e VexAssessmentState) ToVexAssessmentStateOutputWithContext(ctx context.Context) VexAssessmentStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VexAssessmentStateOutput)
}

func (e VexAssessmentState) ToVexAssessmentStatePtrOutput() VexAssessmentStatePtrOutput {
	return e.ToVexAssessmentStatePtrOutputWithContext(context.Background())
}

func (e VexAssessmentState) ToVexAssessmentStatePtrOutputWithContext(ctx context.Context) VexAssessmentStatePtrOutput {
	return VexAssessmentState(e).ToVexAssessmentStateOutputWithContext(ctx).ToVexAssessmentStatePtrOutputWithContext(ctx)
}

func (e VexAssessmentState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VexAssessmentState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VexAssessmentState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VexAssessmentState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VexAssessmentStateOutput struct{ *pulumi.OutputState }

func (VexAssessmentStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VexAssessmentState)(nil)).Elem()
}

func (o VexAssessmentStateOutput) ToVexAssessmentStateOutput() VexAssessmentStateOutput {
	return o
}

func (o VexAssessmentStateOutput) ToVexAssessmentStateOutputWithContext(ctx context.Context) VexAssessmentStateOutput {
	return o
}

func (o VexAssessmentStateOutput) ToVexAssessmentStatePtrOutput() VexAssessmentStatePtrOutput {
	return o.ToVexAssessmentStatePtrOutputWithContext(context.Background())
}

func (o VexAssessmentStateOutput) ToVexAssessmentStatePtrOutputWithContext(ctx context.Context) VexAssessmentStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VexAssessmentState) *VexAssessmentState {
		return &v
	}).(VexAssessmentStatePtrOutput)
}

func (o VexAssessmentStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VexAssessmentStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VexAssessmentState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VexAssessmentStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VexAssessmentStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VexAssessmentState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VexAssessmentStatePtrOutput struct{ *pulumi.OutputState }

func (VexAssessmentStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VexAssessmentState)(nil)).Elem()
}

func (o VexAssessmentStatePtrOutput) ToVexAssessmentStatePtrOutput() VexAssessmentStatePtrOutput {
	return o
}

func (o VexAssessmentStatePtrOutput) ToVexAssessmentStatePtrOutputWithContext(ctx context.Context) VexAssessmentStatePtrOutput {
	return o
}

func (o VexAssessmentStatePtrOutput) Elem() VexAssessmentStateOutput {
	return o.ApplyT(func(v *VexAssessmentState) VexAssessmentState {
		if v != nil {
			return *v
		}
		var ret VexAssessmentState
		return ret
	}).(VexAssessmentStateOutput)
}

func (o VexAssessmentStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VexAssessmentStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VexAssessmentState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VexAssessmentStateInput is an input type that accepts values of the VexAssessmentState enum
// A concrete instance of `VexAssessmentStateInput` can be one of the following:
//
//	VexAssessmentStateStateUnspecified
//	VexAssessmentStateAffected
//	VexAssessmentStateNotAffected
//	VexAssessmentStateFixed
//	VexAssessmentStateUnderInvestigation
type VexAssessmentStateInput interface {
	pulumi.Input

	ToVexAssessmentStateOutput() VexAssessmentStateOutput
	ToVexAssessmentStateOutputWithContext(context.Context) VexAssessmentStateOutput
}

var vexAssessmentStatePtrType = reflect.TypeOf((**VexAssessmentState)(nil)).Elem()

type VexAssessmentStatePtrInput interface {
	pulumi.Input

	ToVexAssessmentStatePtrOutput() VexAssessmentStatePtrOutput
	ToVexAssessmentStatePtrOutputWithContext(context.Context) VexAssessmentStatePtrOutput
}

type vexAssessmentStatePtr string

func VexAssessmentStatePtr(v string) VexAssessmentStatePtrInput {
	return (*vexAssessmentStatePtr)(&v)
}

func (*vexAssessmentStatePtr) ElementType() reflect.Type {
	return vexAssessmentStatePtrType
}

func (in *vexAssessmentStatePtr) ToVexAssessmentStatePtrOutput() VexAssessmentStatePtrOutput {
	return pulumi.ToOutput(in).(VexAssessmentStatePtrOutput)
}

func (in *vexAssessmentStatePtr) ToVexAssessmentStatePtrOutputWithContext(ctx context.Context) VexAssessmentStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VexAssessmentStatePtrOutput)
}

func (in *vexAssessmentStatePtr) ToOutput(ctx context.Context) pulumix.Output[*VexAssessmentState] {
	return pulumix.Output[*VexAssessmentState]{
		OutputState: in.ToVexAssessmentStatePtrOutputWithContext(ctx).OutputState,
	}
}

// CVSS version used to populate cvss_score and severity.
type VulnerabilityNoteCvssVersion string

const (
	VulnerabilityNoteCvssVersionCvssVersionUnspecified = VulnerabilityNoteCvssVersion("CVSS_VERSION_UNSPECIFIED")
	VulnerabilityNoteCvssVersionCvssVersion2           = VulnerabilityNoteCvssVersion("CVSS_VERSION_2")
	VulnerabilityNoteCvssVersionCvssVersion3           = VulnerabilityNoteCvssVersion("CVSS_VERSION_3")
)

func (VulnerabilityNoteCvssVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityNoteCvssVersion)(nil)).Elem()
}

func (e VulnerabilityNoteCvssVersion) ToVulnerabilityNoteCvssVersionOutput() VulnerabilityNoteCvssVersionOutput {
	return pulumi.ToOutput(e).(VulnerabilityNoteCvssVersionOutput)
}

func (e VulnerabilityNoteCvssVersion) ToVulnerabilityNoteCvssVersionOutputWithContext(ctx context.Context) VulnerabilityNoteCvssVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VulnerabilityNoteCvssVersionOutput)
}

func (e VulnerabilityNoteCvssVersion) ToVulnerabilityNoteCvssVersionPtrOutput() VulnerabilityNoteCvssVersionPtrOutput {
	return e.ToVulnerabilityNoteCvssVersionPtrOutputWithContext(context.Background())
}

func (e VulnerabilityNoteCvssVersion) ToVulnerabilityNoteCvssVersionPtrOutputWithContext(ctx context.Context) VulnerabilityNoteCvssVersionPtrOutput {
	return VulnerabilityNoteCvssVersion(e).ToVulnerabilityNoteCvssVersionOutputWithContext(ctx).ToVulnerabilityNoteCvssVersionPtrOutputWithContext(ctx)
}

func (e VulnerabilityNoteCvssVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilityNoteCvssVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilityNoteCvssVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VulnerabilityNoteCvssVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VulnerabilityNoteCvssVersionOutput struct{ *pulumi.OutputState }

func (VulnerabilityNoteCvssVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityNoteCvssVersion)(nil)).Elem()
}

func (o VulnerabilityNoteCvssVersionOutput) ToVulnerabilityNoteCvssVersionOutput() VulnerabilityNoteCvssVersionOutput {
	return o
}

func (o VulnerabilityNoteCvssVersionOutput) ToVulnerabilityNoteCvssVersionOutputWithContext(ctx context.Context) VulnerabilityNoteCvssVersionOutput {
	return o
}

func (o VulnerabilityNoteCvssVersionOutput) ToVulnerabilityNoteCvssVersionPtrOutput() VulnerabilityNoteCvssVersionPtrOutput {
	return o.ToVulnerabilityNoteCvssVersionPtrOutputWithContext(context.Background())
}

func (o VulnerabilityNoteCvssVersionOutput) ToVulnerabilityNoteCvssVersionPtrOutputWithContext(ctx context.Context) VulnerabilityNoteCvssVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VulnerabilityNoteCvssVersion) *VulnerabilityNoteCvssVersion {
		return &v
	}).(VulnerabilityNoteCvssVersionPtrOutput)
}

func (o VulnerabilityNoteCvssVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VulnerabilityNoteCvssVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VulnerabilityNoteCvssVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VulnerabilityNoteCvssVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VulnerabilityNoteCvssVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VulnerabilityNoteCvssVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VulnerabilityNoteCvssVersionPtrOutput struct{ *pulumi.OutputState }

func (VulnerabilityNoteCvssVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityNoteCvssVersion)(nil)).Elem()
}

func (o VulnerabilityNoteCvssVersionPtrOutput) ToVulnerabilityNoteCvssVersionPtrOutput() VulnerabilityNoteCvssVersionPtrOutput {
	return o
}

func (o VulnerabilityNoteCvssVersionPtrOutput) ToVulnerabilityNoteCvssVersionPtrOutputWithContext(ctx context.Context) VulnerabilityNoteCvssVersionPtrOutput {
	return o
}

func (o VulnerabilityNoteCvssVersionPtrOutput) Elem() VulnerabilityNoteCvssVersionOutput {
	return o.ApplyT(func(v *VulnerabilityNoteCvssVersion) VulnerabilityNoteCvssVersion {
		if v != nil {
			return *v
		}
		var ret VulnerabilityNoteCvssVersion
		return ret
	}).(VulnerabilityNoteCvssVersionOutput)
}

func (o VulnerabilityNoteCvssVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VulnerabilityNoteCvssVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VulnerabilityNoteCvssVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VulnerabilityNoteCvssVersionInput is an input type that accepts values of the VulnerabilityNoteCvssVersion enum
// A concrete instance of `VulnerabilityNoteCvssVersionInput` can be one of the following:
//
//	VulnerabilityNoteCvssVersionCvssVersionUnspecified
//	VulnerabilityNoteCvssVersionCvssVersion2
//	VulnerabilityNoteCvssVersionCvssVersion3
type VulnerabilityNoteCvssVersionInput interface {
	pulumi.Input

	ToVulnerabilityNoteCvssVersionOutput() VulnerabilityNoteCvssVersionOutput
	ToVulnerabilityNoteCvssVersionOutputWithContext(context.Context) VulnerabilityNoteCvssVersionOutput
}

var vulnerabilityNoteCvssVersionPtrType = reflect.TypeOf((**VulnerabilityNoteCvssVersion)(nil)).Elem()

type VulnerabilityNoteCvssVersionPtrInput interface {
	pulumi.Input

	ToVulnerabilityNoteCvssVersionPtrOutput() VulnerabilityNoteCvssVersionPtrOutput
	ToVulnerabilityNoteCvssVersionPtrOutputWithContext(context.Context) VulnerabilityNoteCvssVersionPtrOutput
}

type vulnerabilityNoteCvssVersionPtr string

func VulnerabilityNoteCvssVersionPtr(v string) VulnerabilityNoteCvssVersionPtrInput {
	return (*vulnerabilityNoteCvssVersionPtr)(&v)
}

func (*vulnerabilityNoteCvssVersionPtr) ElementType() reflect.Type {
	return vulnerabilityNoteCvssVersionPtrType
}

func (in *vulnerabilityNoteCvssVersionPtr) ToVulnerabilityNoteCvssVersionPtrOutput() VulnerabilityNoteCvssVersionPtrOutput {
	return pulumi.ToOutput(in).(VulnerabilityNoteCvssVersionPtrOutput)
}

func (in *vulnerabilityNoteCvssVersionPtr) ToVulnerabilityNoteCvssVersionPtrOutputWithContext(ctx context.Context) VulnerabilityNoteCvssVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VulnerabilityNoteCvssVersionPtrOutput)
}

func (in *vulnerabilityNoteCvssVersionPtr) ToOutput(ctx context.Context) pulumix.Output[*VulnerabilityNoteCvssVersion] {
	return pulumix.Output[*VulnerabilityNoteCvssVersion]{
		OutputState: in.ToVulnerabilityNoteCvssVersionPtrOutputWithContext(ctx).OutputState,
	}
}

// The note provider assigned severity of this vulnerability.
type VulnerabilityNoteSeverity string

const (
	// Unknown.
	VulnerabilityNoteSeveritySeverityUnspecified = VulnerabilityNoteSeverity("SEVERITY_UNSPECIFIED")
	// Minimal severity.
	VulnerabilityNoteSeverityMinimal = VulnerabilityNoteSeverity("MINIMAL")
	// Low severity.
	VulnerabilityNoteSeverityLow = VulnerabilityNoteSeverity("LOW")
	// Medium severity.
	VulnerabilityNoteSeverityMedium = VulnerabilityNoteSeverity("MEDIUM")
	// High severity.
	VulnerabilityNoteSeverityHigh = VulnerabilityNoteSeverity("HIGH")
	// Critical severity.
	VulnerabilityNoteSeverityCritical = VulnerabilityNoteSeverity("CRITICAL")
)

func (VulnerabilityNoteSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityNoteSeverity)(nil)).Elem()
}

func (e VulnerabilityNoteSeverity) ToVulnerabilityNoteSeverityOutput() VulnerabilityNoteSeverityOutput {
	return pulumi.ToOutput(e).(VulnerabilityNoteSeverityOutput)
}

func (e VulnerabilityNoteSeverity) ToVulnerabilityNoteSeverityOutputWithContext(ctx context.Context) VulnerabilityNoteSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VulnerabilityNoteSeverityOutput)
}

func (e VulnerabilityNoteSeverity) ToVulnerabilityNoteSeverityPtrOutput() VulnerabilityNoteSeverityPtrOutput {
	return e.ToVulnerabilityNoteSeverityPtrOutputWithContext(context.Background())
}

func (e VulnerabilityNoteSeverity) ToVulnerabilityNoteSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityNoteSeverityPtrOutput {
	return VulnerabilityNoteSeverity(e).ToVulnerabilityNoteSeverityOutputWithContext(ctx).ToVulnerabilityNoteSeverityPtrOutputWithContext(ctx)
}

func (e VulnerabilityNoteSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilityNoteSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilityNoteSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VulnerabilityNoteSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VulnerabilityNoteSeverityOutput struct{ *pulumi.OutputState }

func (VulnerabilityNoteSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityNoteSeverity)(nil)).Elem()
}

func (o VulnerabilityNoteSeverityOutput) ToVulnerabilityNoteSeverityOutput() VulnerabilityNoteSeverityOutput {
	return o
}

func (o VulnerabilityNoteSeverityOutput) ToVulnerabilityNoteSeverityOutputWithContext(ctx context.Context) VulnerabilityNoteSeverityOutput {
	return o
}

func (o VulnerabilityNoteSeverityOutput) ToVulnerabilityNoteSeverityPtrOutput() VulnerabilityNoteSeverityPtrOutput {
	return o.ToVulnerabilityNoteSeverityPtrOutputWithContext(context.Background())
}

func (o VulnerabilityNoteSeverityOutput) ToVulnerabilityNoteSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityNoteSeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VulnerabilityNoteSeverity) *VulnerabilityNoteSeverity {
		return &v
	}).(VulnerabilityNoteSeverityPtrOutput)
}

func (o VulnerabilityNoteSeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VulnerabilityNoteSeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VulnerabilityNoteSeverity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VulnerabilityNoteSeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VulnerabilityNoteSeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VulnerabilityNoteSeverity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VulnerabilityNoteSeverityPtrOutput struct{ *pulumi.OutputState }

func (VulnerabilityNoteSeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityNoteSeverity)(nil)).Elem()
}

func (o VulnerabilityNoteSeverityPtrOutput) ToVulnerabilityNoteSeverityPtrOutput() VulnerabilityNoteSeverityPtrOutput {
	return o
}

func (o VulnerabilityNoteSeverityPtrOutput) ToVulnerabilityNoteSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityNoteSeverityPtrOutput {
	return o
}

func (o VulnerabilityNoteSeverityPtrOutput) Elem() VulnerabilityNoteSeverityOutput {
	return o.ApplyT(func(v *VulnerabilityNoteSeverity) VulnerabilityNoteSeverity {
		if v != nil {
			return *v
		}
		var ret VulnerabilityNoteSeverity
		return ret
	}).(VulnerabilityNoteSeverityOutput)
}

func (o VulnerabilityNoteSeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VulnerabilityNoteSeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VulnerabilityNoteSeverity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VulnerabilityNoteSeverityInput is an input type that accepts values of the VulnerabilityNoteSeverity enum
// A concrete instance of `VulnerabilityNoteSeverityInput` can be one of the following:
//
//	VulnerabilityNoteSeveritySeverityUnspecified
//	VulnerabilityNoteSeverityMinimal
//	VulnerabilityNoteSeverityLow
//	VulnerabilityNoteSeverityMedium
//	VulnerabilityNoteSeverityHigh
//	VulnerabilityNoteSeverityCritical
type VulnerabilityNoteSeverityInput interface {
	pulumi.Input

	ToVulnerabilityNoteSeverityOutput() VulnerabilityNoteSeverityOutput
	ToVulnerabilityNoteSeverityOutputWithContext(context.Context) VulnerabilityNoteSeverityOutput
}

var vulnerabilityNoteSeverityPtrType = reflect.TypeOf((**VulnerabilityNoteSeverity)(nil)).Elem()

type VulnerabilityNoteSeverityPtrInput interface {
	pulumi.Input

	ToVulnerabilityNoteSeverityPtrOutput() VulnerabilityNoteSeverityPtrOutput
	ToVulnerabilityNoteSeverityPtrOutputWithContext(context.Context) VulnerabilityNoteSeverityPtrOutput
}

type vulnerabilityNoteSeverityPtr string

func VulnerabilityNoteSeverityPtr(v string) VulnerabilityNoteSeverityPtrInput {
	return (*vulnerabilityNoteSeverityPtr)(&v)
}

func (*vulnerabilityNoteSeverityPtr) ElementType() reflect.Type {
	return vulnerabilityNoteSeverityPtrType
}

func (in *vulnerabilityNoteSeverityPtr) ToVulnerabilityNoteSeverityPtrOutput() VulnerabilityNoteSeverityPtrOutput {
	return pulumi.ToOutput(in).(VulnerabilityNoteSeverityPtrOutput)
}

func (in *vulnerabilityNoteSeverityPtr) ToVulnerabilityNoteSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityNoteSeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VulnerabilityNoteSeverityPtrOutput)
}

func (in *vulnerabilityNoteSeverityPtr) ToOutput(ctx context.Context) pulumix.Output[*VulnerabilityNoteSeverity] {
	return pulumix.Output[*VulnerabilityNoteSeverity]{
		OutputState: in.ToVulnerabilityNoteSeverityPtrOutputWithContext(ctx).OutputState,
	}
}

// The distro assigned severity for this vulnerability when it is available, otherwise this is the note provider assigned severity. When there are multiple PackageIssues for this vulnerability, they can have different effective severities because some might be provided by the distro while others are provided by the language ecosystem for a language pack. For this reason, it is advised to use the effective severity on the PackageIssue level. In the case where multiple PackageIssues have differing effective severities, this field should be the highest severity for any of the PackageIssues.
type VulnerabilityOccurrenceEffectiveSeverity string

const (
	// Unknown.
	VulnerabilityOccurrenceEffectiveSeveritySeverityUnspecified = VulnerabilityOccurrenceEffectiveSeverity("SEVERITY_UNSPECIFIED")
	// Minimal severity.
	VulnerabilityOccurrenceEffectiveSeverityMinimal = VulnerabilityOccurrenceEffectiveSeverity("MINIMAL")
	// Low severity.
	VulnerabilityOccurrenceEffectiveSeverityLow = VulnerabilityOccurrenceEffectiveSeverity("LOW")
	// Medium severity.
	VulnerabilityOccurrenceEffectiveSeverityMedium = VulnerabilityOccurrenceEffectiveSeverity("MEDIUM")
	// High severity.
	VulnerabilityOccurrenceEffectiveSeverityHigh = VulnerabilityOccurrenceEffectiveSeverity("HIGH")
	// Critical severity.
	VulnerabilityOccurrenceEffectiveSeverityCritical = VulnerabilityOccurrenceEffectiveSeverity("CRITICAL")
)

func (VulnerabilityOccurrenceEffectiveSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityOccurrenceEffectiveSeverity)(nil)).Elem()
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToVulnerabilityOccurrenceEffectiveSeverityOutput() VulnerabilityOccurrenceEffectiveSeverityOutput {
	return pulumi.ToOutput(e).(VulnerabilityOccurrenceEffectiveSeverityOutput)
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToVulnerabilityOccurrenceEffectiveSeverityOutputWithContext(ctx context.Context) VulnerabilityOccurrenceEffectiveSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VulnerabilityOccurrenceEffectiveSeverityOutput)
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutput() VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return e.ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(context.Background())
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return VulnerabilityOccurrenceEffectiveSeverity(e).ToVulnerabilityOccurrenceEffectiveSeverityOutputWithContext(ctx).ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(ctx)
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VulnerabilityOccurrenceEffectiveSeverityOutput struct{ *pulumi.OutputState }

func (VulnerabilityOccurrenceEffectiveSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityOccurrenceEffectiveSeverity)(nil)).Elem()
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToVulnerabilityOccurrenceEffectiveSeverityOutput() VulnerabilityOccurrenceEffectiveSeverityOutput {
	return o
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToVulnerabilityOccurrenceEffectiveSeverityOutputWithContext(ctx context.Context) VulnerabilityOccurrenceEffectiveSeverityOutput {
	return o
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutput() VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return o.ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(context.Background())
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VulnerabilityOccurrenceEffectiveSeverity) *VulnerabilityOccurrenceEffectiveSeverity {
		return &v
	}).(VulnerabilityOccurrenceEffectiveSeverityPtrOutput)
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VulnerabilityOccurrenceEffectiveSeverity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VulnerabilityOccurrenceEffectiveSeverity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VulnerabilityOccurrenceEffectiveSeverityPtrOutput struct{ *pulumi.OutputState }

func (VulnerabilityOccurrenceEffectiveSeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityOccurrenceEffectiveSeverity)(nil)).Elem()
}

func (o VulnerabilityOccurrenceEffectiveSeverityPtrOutput) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutput() VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return o
}

func (o VulnerabilityOccurrenceEffectiveSeverityPtrOutput) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return o
}

func (o VulnerabilityOccurrenceEffectiveSeverityPtrOutput) Elem() VulnerabilityOccurrenceEffectiveSeverityOutput {
	return o.ApplyT(func(v *VulnerabilityOccurrenceEffectiveSeverity) VulnerabilityOccurrenceEffectiveSeverity {
		if v != nil {
			return *v
		}
		var ret VulnerabilityOccurrenceEffectiveSeverity
		return ret
	}).(VulnerabilityOccurrenceEffectiveSeverityOutput)
}

func (o VulnerabilityOccurrenceEffectiveSeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VulnerabilityOccurrenceEffectiveSeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VulnerabilityOccurrenceEffectiveSeverity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VulnerabilityOccurrenceEffectiveSeverityInput is an input type that accepts values of the VulnerabilityOccurrenceEffectiveSeverity enum
// A concrete instance of `VulnerabilityOccurrenceEffectiveSeverityInput` can be one of the following:
//
//	VulnerabilityOccurrenceEffectiveSeveritySeverityUnspecified
//	VulnerabilityOccurrenceEffectiveSeverityMinimal
//	VulnerabilityOccurrenceEffectiveSeverityLow
//	VulnerabilityOccurrenceEffectiveSeverityMedium
//	VulnerabilityOccurrenceEffectiveSeverityHigh
//	VulnerabilityOccurrenceEffectiveSeverityCritical
type VulnerabilityOccurrenceEffectiveSeverityInput interface {
	pulumi.Input

	ToVulnerabilityOccurrenceEffectiveSeverityOutput() VulnerabilityOccurrenceEffectiveSeverityOutput
	ToVulnerabilityOccurrenceEffectiveSeverityOutputWithContext(context.Context) VulnerabilityOccurrenceEffectiveSeverityOutput
}

var vulnerabilityOccurrenceEffectiveSeverityPtrType = reflect.TypeOf((**VulnerabilityOccurrenceEffectiveSeverity)(nil)).Elem()

type VulnerabilityOccurrenceEffectiveSeverityPtrInput interface {
	pulumi.Input

	ToVulnerabilityOccurrenceEffectiveSeverityPtrOutput() VulnerabilityOccurrenceEffectiveSeverityPtrOutput
	ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(context.Context) VulnerabilityOccurrenceEffectiveSeverityPtrOutput
}

type vulnerabilityOccurrenceEffectiveSeverityPtr string

func VulnerabilityOccurrenceEffectiveSeverityPtr(v string) VulnerabilityOccurrenceEffectiveSeverityPtrInput {
	return (*vulnerabilityOccurrenceEffectiveSeverityPtr)(&v)
}

func (*vulnerabilityOccurrenceEffectiveSeverityPtr) ElementType() reflect.Type {
	return vulnerabilityOccurrenceEffectiveSeverityPtrType
}

func (in *vulnerabilityOccurrenceEffectiveSeverityPtr) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutput() VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return pulumi.ToOutput(in).(VulnerabilityOccurrenceEffectiveSeverityPtrOutput)
}

func (in *vulnerabilityOccurrenceEffectiveSeverityPtr) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VulnerabilityOccurrenceEffectiveSeverityPtrOutput)
}

func (in *vulnerabilityOccurrenceEffectiveSeverityPtr) ToOutput(ctx context.Context) pulumix.Output[*VulnerabilityOccurrenceEffectiveSeverity] {
	return pulumix.Output[*VulnerabilityOccurrenceEffectiveSeverity]{
		OutputState: in.ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AliasContextKindInput)(nil)).Elem(), AliasContextKind("KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AliasContextKindPtrInput)(nil)).Elem(), AliasContextKind("KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AssessmentStateInput)(nil)).Elem(), AssessmentState("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AssessmentStatePtrInput)(nil)).Elem(), AssessmentState("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSAttackComplexityInput)(nil)).Elem(), CVSSAttackComplexity("ATTACK_COMPLEXITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSAttackComplexityPtrInput)(nil)).Elem(), CVSSAttackComplexity("ATTACK_COMPLEXITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSAttackVectorInput)(nil)).Elem(), CVSSAttackVector("ATTACK_VECTOR_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSAttackVectorPtrInput)(nil)).Elem(), CVSSAttackVector("ATTACK_VECTOR_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSAuthenticationInput)(nil)).Elem(), CVSSAuthentication("AUTHENTICATION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSAuthenticationPtrInput)(nil)).Elem(), CVSSAuthentication("AUTHENTICATION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSAvailabilityImpactInput)(nil)).Elem(), CVSSAvailabilityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSAvailabilityImpactPtrInput)(nil)).Elem(), CVSSAvailabilityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSConfidentialityImpactInput)(nil)).Elem(), CVSSConfidentialityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSConfidentialityImpactPtrInput)(nil)).Elem(), CVSSConfidentialityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSIntegrityImpactInput)(nil)).Elem(), CVSSIntegrityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSIntegrityImpactPtrInput)(nil)).Elem(), CVSSIntegrityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSPrivilegesRequiredInput)(nil)).Elem(), CVSSPrivilegesRequired("PRIVILEGES_REQUIRED_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSPrivilegesRequiredPtrInput)(nil)).Elem(), CVSSPrivilegesRequired("PRIVILEGES_REQUIRED_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSScopeInput)(nil)).Elem(), CVSSScope("SCOPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSScopePtrInput)(nil)).Elem(), CVSSScope("SCOPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSUserInteractionInput)(nil)).Elem(), CVSSUserInteraction("USER_INTERACTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSUserInteractionPtrInput)(nil)).Elem(), CVSSUserInteraction("USER_INTERACTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3AttackComplexityInput)(nil)).Elem(), CVSSv3AttackComplexity("ATTACK_COMPLEXITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3AttackComplexityPtrInput)(nil)).Elem(), CVSSv3AttackComplexity("ATTACK_COMPLEXITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3AttackVectorInput)(nil)).Elem(), CVSSv3AttackVector("ATTACK_VECTOR_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3AttackVectorPtrInput)(nil)).Elem(), CVSSv3AttackVector("ATTACK_VECTOR_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3AvailabilityImpactInput)(nil)).Elem(), CVSSv3AvailabilityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3AvailabilityImpactPtrInput)(nil)).Elem(), CVSSv3AvailabilityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3ConfidentialityImpactInput)(nil)).Elem(), CVSSv3ConfidentialityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3ConfidentialityImpactPtrInput)(nil)).Elem(), CVSSv3ConfidentialityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3IntegrityImpactInput)(nil)).Elem(), CVSSv3IntegrityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3IntegrityImpactPtrInput)(nil)).Elem(), CVSSv3IntegrityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3PrivilegesRequiredInput)(nil)).Elem(), CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3PrivilegesRequiredPtrInput)(nil)).Elem(), CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3ScopeInput)(nil)).Elem(), CVSSv3Scope("SCOPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3ScopePtrInput)(nil)).Elem(), CVSSv3Scope("SCOPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3UserInteractionInput)(nil)).Elem(), CVSSv3UserInteraction("USER_INTERACTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3UserInteractionPtrInput)(nil)).Elem(), CVSSv3UserInteraction("USER_INTERACTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CisBenchmarkSeverityInput)(nil)).Elem(), CisBenchmarkSeverity("SEVERITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CisBenchmarkSeverityPtrInput)(nil)).Elem(), CisBenchmarkSeverity("SEVERITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentOccurrencePlatformInput)(nil)).Elem(), DeploymentOccurrencePlatform("PLATFORM_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentOccurrencePlatformPtrInput)(nil)).Elem(), DeploymentOccurrencePlatform("PLATFORM_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryNoteAnalysisKindInput)(nil)).Elem(), DiscoveryNoteAnalysisKind("NOTE_KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryNoteAnalysisKindPtrInput)(nil)).Elem(), DiscoveryNoteAnalysisKind("NOTE_KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryOccurrenceAnalysisStatusInput)(nil)).Elem(), DiscoveryOccurrenceAnalysisStatus("ANALYSIS_STATUS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryOccurrenceAnalysisStatusPtrInput)(nil)).Elem(), DiscoveryOccurrenceAnalysisStatus("ANALYSIS_STATUS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryOccurrenceContinuousAnalysisInput)(nil)).Elem(), DiscoveryOccurrenceContinuousAnalysis("CONTINUOUS_ANALYSIS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryOccurrenceContinuousAnalysisPtrInput)(nil)).Elem(), DiscoveryOccurrenceContinuousAnalysis("CONTINUOUS_ANALYSIS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionArchitectureInput)(nil)).Elem(), DistributionArchitecture("ARCHITECTURE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionArchitecturePtrInput)(nil)).Elem(), DistributionArchitecture("ARCHITECTURE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*JustificationJustificationTypeInput)(nil)).Elem(), JustificationJustificationType("JUSTIFICATION_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*JustificationJustificationTypePtrInput)(nil)).Elem(), JustificationJustificationType("JUSTIFICATION_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PackageNoteArchitectureInput)(nil)).Elem(), PackageNoteArchitecture("ARCHITECTURE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PackageNoteArchitecturePtrInput)(nil)).Elem(), PackageNoteArchitecture("ARCHITECTURE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationRemediationTypeInput)(nil)).Elem(), RemediationRemediationType("REMEDIATION_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationRemediationTypePtrInput)(nil)).Elem(), RemediationRemediationType("REMEDIATION_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SBOMStatusSbomStateInput)(nil)).Elem(), SBOMStatusSbomState("SBOM_STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SBOMStatusSbomStatePtrInput)(nil)).Elem(), SBOMStatusSbomState("SBOM_STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VersionKindInput)(nil)).Elem(), VersionKind("VERSION_KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VersionKindPtrInput)(nil)).Elem(), VersionKind("VERSION_KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VexAssessmentStateInput)(nil)).Elem(), VexAssessmentState("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VexAssessmentStatePtrInput)(nil)).Elem(), VexAssessmentState("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityNoteCvssVersionInput)(nil)).Elem(), VulnerabilityNoteCvssVersion("CVSS_VERSION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityNoteCvssVersionPtrInput)(nil)).Elem(), VulnerabilityNoteCvssVersion("CVSS_VERSION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityNoteSeverityInput)(nil)).Elem(), VulnerabilityNoteSeverity("SEVERITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityNoteSeverityPtrInput)(nil)).Elem(), VulnerabilityNoteSeverity("SEVERITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityOccurrenceEffectiveSeverityInput)(nil)).Elem(), VulnerabilityOccurrenceEffectiveSeverity("SEVERITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityOccurrenceEffectiveSeverityPtrInput)(nil)).Elem(), VulnerabilityOccurrenceEffectiveSeverity("SEVERITY_UNSPECIFIED"))
	pulumi.RegisterOutputType(AliasContextKindOutput{})
	pulumi.RegisterOutputType(AliasContextKindPtrOutput{})
	pulumi.RegisterOutputType(AssessmentStateOutput{})
	pulumi.RegisterOutputType(AssessmentStatePtrOutput{})
	pulumi.RegisterOutputType(CVSSAttackComplexityOutput{})
	pulumi.RegisterOutputType(CVSSAttackComplexityPtrOutput{})
	pulumi.RegisterOutputType(CVSSAttackVectorOutput{})
	pulumi.RegisterOutputType(CVSSAttackVectorPtrOutput{})
	pulumi.RegisterOutputType(CVSSAuthenticationOutput{})
	pulumi.RegisterOutputType(CVSSAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(CVSSAvailabilityImpactOutput{})
	pulumi.RegisterOutputType(CVSSAvailabilityImpactPtrOutput{})
	pulumi.RegisterOutputType(CVSSConfidentialityImpactOutput{})
	pulumi.RegisterOutputType(CVSSConfidentialityImpactPtrOutput{})
	pulumi.RegisterOutputType(CVSSIntegrityImpactOutput{})
	pulumi.RegisterOutputType(CVSSIntegrityImpactPtrOutput{})
	pulumi.RegisterOutputType(CVSSPrivilegesRequiredOutput{})
	pulumi.RegisterOutputType(CVSSPrivilegesRequiredPtrOutput{})
	pulumi.RegisterOutputType(CVSSScopeOutput{})
	pulumi.RegisterOutputType(CVSSScopePtrOutput{})
	pulumi.RegisterOutputType(CVSSUserInteractionOutput{})
	pulumi.RegisterOutputType(CVSSUserInteractionPtrOutput{})
	pulumi.RegisterOutputType(CVSSv3AttackComplexityOutput{})
	pulumi.RegisterOutputType(CVSSv3AttackComplexityPtrOutput{})
	pulumi.RegisterOutputType(CVSSv3AttackVectorOutput{})
	pulumi.RegisterOutputType(CVSSv3AttackVectorPtrOutput{})
	pulumi.RegisterOutputType(CVSSv3AvailabilityImpactOutput{})
	pulumi.RegisterOutputType(CVSSv3AvailabilityImpactPtrOutput{})
	pulumi.RegisterOutputType(CVSSv3ConfidentialityImpactOutput{})
	pulumi.RegisterOutputType(CVSSv3ConfidentialityImpactPtrOutput{})
	pulumi.RegisterOutputType(CVSSv3IntegrityImpactOutput{})
	pulumi.RegisterOutputType(CVSSv3IntegrityImpactPtrOutput{})
	pulumi.RegisterOutputType(CVSSv3PrivilegesRequiredOutput{})
	pulumi.RegisterOutputType(CVSSv3PrivilegesRequiredPtrOutput{})
	pulumi.RegisterOutputType(CVSSv3ScopeOutput{})
	pulumi.RegisterOutputType(CVSSv3ScopePtrOutput{})
	pulumi.RegisterOutputType(CVSSv3UserInteractionOutput{})
	pulumi.RegisterOutputType(CVSSv3UserInteractionPtrOutput{})
	pulumi.RegisterOutputType(CisBenchmarkSeverityOutput{})
	pulumi.RegisterOutputType(CisBenchmarkSeverityPtrOutput{})
	pulumi.RegisterOutputType(DeploymentOccurrencePlatformOutput{})
	pulumi.RegisterOutputType(DeploymentOccurrencePlatformPtrOutput{})
	pulumi.RegisterOutputType(DiscoveryNoteAnalysisKindOutput{})
	pulumi.RegisterOutputType(DiscoveryNoteAnalysisKindPtrOutput{})
	pulumi.RegisterOutputType(DiscoveryOccurrenceAnalysisStatusOutput{})
	pulumi.RegisterOutputType(DiscoveryOccurrenceAnalysisStatusPtrOutput{})
	pulumi.RegisterOutputType(DiscoveryOccurrenceContinuousAnalysisOutput{})
	pulumi.RegisterOutputType(DiscoveryOccurrenceContinuousAnalysisPtrOutput{})
	pulumi.RegisterOutputType(DistributionArchitectureOutput{})
	pulumi.RegisterOutputType(DistributionArchitecturePtrOutput{})
	pulumi.RegisterOutputType(JustificationJustificationTypeOutput{})
	pulumi.RegisterOutputType(JustificationJustificationTypePtrOutput{})
	pulumi.RegisterOutputType(PackageNoteArchitectureOutput{})
	pulumi.RegisterOutputType(PackageNoteArchitecturePtrOutput{})
	pulumi.RegisterOutputType(RemediationRemediationTypeOutput{})
	pulumi.RegisterOutputType(RemediationRemediationTypePtrOutput{})
	pulumi.RegisterOutputType(SBOMStatusSbomStateOutput{})
	pulumi.RegisterOutputType(SBOMStatusSbomStatePtrOutput{})
	pulumi.RegisterOutputType(VersionKindOutput{})
	pulumi.RegisterOutputType(VersionKindPtrOutput{})
	pulumi.RegisterOutputType(VexAssessmentStateOutput{})
	pulumi.RegisterOutputType(VexAssessmentStatePtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityNoteCvssVersionOutput{})
	pulumi.RegisterOutputType(VulnerabilityNoteCvssVersionPtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityNoteSeverityOutput{})
	pulumi.RegisterOutputType(VulnerabilityNoteSeverityPtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityOccurrenceEffectiveSeverityOutput{})
	pulumi.RegisterOutputType(VulnerabilityOccurrenceEffectiveSeverityPtrOutput{})
}
