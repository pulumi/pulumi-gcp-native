// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The alias kind.
type AliasContextKind string

const (
	// Unknown.
	AliasContextKindKindUnspecified = AliasContextKind("KIND_UNSPECIFIED")
	// Git tag.
	AliasContextKindFixed = AliasContextKind("FIXED")
	// Git branch.
	AliasContextKindMovable = AliasContextKind("MOVABLE")
	// Used to specify non-standard aliases. For example, if a Git repo has a ref named "refs/foo/bar".
	AliasContextKindOther = AliasContextKind("OTHER")
)

func (AliasContextKind) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasContextKind)(nil)).Elem()
}

func (e AliasContextKind) ToAliasContextKindOutput() AliasContextKindOutput {
	return pulumi.ToOutput(e).(AliasContextKindOutput)
}

func (e AliasContextKind) ToAliasContextKindOutputWithContext(ctx context.Context) AliasContextKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AliasContextKindOutput)
}

func (e AliasContextKind) ToAliasContextKindPtrOutput() AliasContextKindPtrOutput {
	return e.ToAliasContextKindPtrOutputWithContext(context.Background())
}

func (e AliasContextKind) ToAliasContextKindPtrOutputWithContext(ctx context.Context) AliasContextKindPtrOutput {
	return AliasContextKind(e).ToAliasContextKindOutputWithContext(ctx).ToAliasContextKindPtrOutputWithContext(ctx)
}

func (e AliasContextKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AliasContextKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AliasContextKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AliasContextKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AliasContextKindOutput struct{ *pulumi.OutputState }

func (AliasContextKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasContextKind)(nil)).Elem()
}

func (o AliasContextKindOutput) ToAliasContextKindOutput() AliasContextKindOutput {
	return o
}

func (o AliasContextKindOutput) ToAliasContextKindOutputWithContext(ctx context.Context) AliasContextKindOutput {
	return o
}

func (o AliasContextKindOutput) ToAliasContextKindPtrOutput() AliasContextKindPtrOutput {
	return o.ToAliasContextKindPtrOutputWithContext(context.Background())
}

func (o AliasContextKindOutput) ToAliasContextKindPtrOutputWithContext(ctx context.Context) AliasContextKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AliasContextKind) *AliasContextKind {
		return &v
	}).(AliasContextKindPtrOutput)
}

func (o AliasContextKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AliasContextKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AliasContextKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AliasContextKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AliasContextKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AliasContextKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AliasContextKindPtrOutput struct{ *pulumi.OutputState }

func (AliasContextKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AliasContextKind)(nil)).Elem()
}

func (o AliasContextKindPtrOutput) ToAliasContextKindPtrOutput() AliasContextKindPtrOutput {
	return o
}

func (o AliasContextKindPtrOutput) ToAliasContextKindPtrOutputWithContext(ctx context.Context) AliasContextKindPtrOutput {
	return o
}

func (o AliasContextKindPtrOutput) Elem() AliasContextKindOutput {
	return o.ApplyT(func(v *AliasContextKind) AliasContextKind {
		if v != nil {
			return *v
		}
		var ret AliasContextKind
		return ret
	}).(AliasContextKindOutput)
}

func (o AliasContextKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AliasContextKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AliasContextKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AliasContextKindInput is an input type that accepts AliasContextKindArgs and AliasContextKindOutput values.
// You can construct a concrete instance of `AliasContextKindInput` via:
//
//          AliasContextKindArgs{...}
type AliasContextKindInput interface {
	pulumi.Input

	ToAliasContextKindOutput() AliasContextKindOutput
	ToAliasContextKindOutputWithContext(context.Context) AliasContextKindOutput
}

var aliasContextKindPtrType = reflect.TypeOf((**AliasContextKind)(nil)).Elem()

type AliasContextKindPtrInput interface {
	pulumi.Input

	ToAliasContextKindPtrOutput() AliasContextKindPtrOutput
	ToAliasContextKindPtrOutputWithContext(context.Context) AliasContextKindPtrOutput
}

type aliasContextKindPtr string

func AliasContextKindPtr(v string) AliasContextKindPtrInput {
	return (*aliasContextKindPtr)(&v)
}

func (*aliasContextKindPtr) ElementType() reflect.Type {
	return aliasContextKindPtrType
}

func (in *aliasContextKindPtr) ToAliasContextKindPtrOutput() AliasContextKindPtrOutput {
	return pulumi.ToOutput(in).(AliasContextKindPtrOutput)
}

func (in *aliasContextKindPtr) ToAliasContextKindPtrOutputWithContext(ctx context.Context) AliasContextKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AliasContextKindPtrOutput)
}

type CVSSv3AttackComplexity string

const (
	CVSSv3AttackComplexityAttackComplexityUnspecified = CVSSv3AttackComplexity("ATTACK_COMPLEXITY_UNSPECIFIED")
	CVSSv3AttackComplexityAttackComplexityLow         = CVSSv3AttackComplexity("ATTACK_COMPLEXITY_LOW")
	CVSSv3AttackComplexityAttackComplexityHigh        = CVSSv3AttackComplexity("ATTACK_COMPLEXITY_HIGH")
)

func (CVSSv3AttackComplexity) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3AttackComplexity)(nil)).Elem()
}

func (e CVSSv3AttackComplexity) ToCVSSv3AttackComplexityOutput() CVSSv3AttackComplexityOutput {
	return pulumi.ToOutput(e).(CVSSv3AttackComplexityOutput)
}

func (e CVSSv3AttackComplexity) ToCVSSv3AttackComplexityOutputWithContext(ctx context.Context) CVSSv3AttackComplexityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3AttackComplexityOutput)
}

func (e CVSSv3AttackComplexity) ToCVSSv3AttackComplexityPtrOutput() CVSSv3AttackComplexityPtrOutput {
	return e.ToCVSSv3AttackComplexityPtrOutputWithContext(context.Background())
}

func (e CVSSv3AttackComplexity) ToCVSSv3AttackComplexityPtrOutputWithContext(ctx context.Context) CVSSv3AttackComplexityPtrOutput {
	return CVSSv3AttackComplexity(e).ToCVSSv3AttackComplexityOutputWithContext(ctx).ToCVSSv3AttackComplexityPtrOutputWithContext(ctx)
}

func (e CVSSv3AttackComplexity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AttackComplexity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AttackComplexity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3AttackComplexity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3AttackComplexityOutput struct{ *pulumi.OutputState }

func (CVSSv3AttackComplexityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3AttackComplexity)(nil)).Elem()
}

func (o CVSSv3AttackComplexityOutput) ToCVSSv3AttackComplexityOutput() CVSSv3AttackComplexityOutput {
	return o
}

func (o CVSSv3AttackComplexityOutput) ToCVSSv3AttackComplexityOutputWithContext(ctx context.Context) CVSSv3AttackComplexityOutput {
	return o
}

func (o CVSSv3AttackComplexityOutput) ToCVSSv3AttackComplexityPtrOutput() CVSSv3AttackComplexityPtrOutput {
	return o.ToCVSSv3AttackComplexityPtrOutputWithContext(context.Background())
}

func (o CVSSv3AttackComplexityOutput) ToCVSSv3AttackComplexityPtrOutputWithContext(ctx context.Context) CVSSv3AttackComplexityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3AttackComplexity) *CVSSv3AttackComplexity {
		return &v
	}).(CVSSv3AttackComplexityPtrOutput)
}

func (o CVSSv3AttackComplexityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3AttackComplexityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3AttackComplexity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3AttackComplexityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3AttackComplexityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3AttackComplexity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3AttackComplexityPtrOutput struct{ *pulumi.OutputState }

func (CVSSv3AttackComplexityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3AttackComplexity)(nil)).Elem()
}

func (o CVSSv3AttackComplexityPtrOutput) ToCVSSv3AttackComplexityPtrOutput() CVSSv3AttackComplexityPtrOutput {
	return o
}

func (o CVSSv3AttackComplexityPtrOutput) ToCVSSv3AttackComplexityPtrOutputWithContext(ctx context.Context) CVSSv3AttackComplexityPtrOutput {
	return o
}

func (o CVSSv3AttackComplexityPtrOutput) Elem() CVSSv3AttackComplexityOutput {
	return o.ApplyT(func(v *CVSSv3AttackComplexity) CVSSv3AttackComplexity {
		if v != nil {
			return *v
		}
		var ret CVSSv3AttackComplexity
		return ret
	}).(CVSSv3AttackComplexityOutput)
}

func (o CVSSv3AttackComplexityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3AttackComplexityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3AttackComplexity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3AttackComplexityInput is an input type that accepts CVSSv3AttackComplexityArgs and CVSSv3AttackComplexityOutput values.
// You can construct a concrete instance of `CVSSv3AttackComplexityInput` via:
//
//          CVSSv3AttackComplexityArgs{...}
type CVSSv3AttackComplexityInput interface {
	pulumi.Input

	ToCVSSv3AttackComplexityOutput() CVSSv3AttackComplexityOutput
	ToCVSSv3AttackComplexityOutputWithContext(context.Context) CVSSv3AttackComplexityOutput
}

var cvssv3AttackComplexityPtrType = reflect.TypeOf((**CVSSv3AttackComplexity)(nil)).Elem()

type CVSSv3AttackComplexityPtrInput interface {
	pulumi.Input

	ToCVSSv3AttackComplexityPtrOutput() CVSSv3AttackComplexityPtrOutput
	ToCVSSv3AttackComplexityPtrOutputWithContext(context.Context) CVSSv3AttackComplexityPtrOutput
}

type cvssv3AttackComplexityPtr string

func CVSSv3AttackComplexityPtr(v string) CVSSv3AttackComplexityPtrInput {
	return (*cvssv3AttackComplexityPtr)(&v)
}

func (*cvssv3AttackComplexityPtr) ElementType() reflect.Type {
	return cvssv3AttackComplexityPtrType
}

func (in *cvssv3AttackComplexityPtr) ToCVSSv3AttackComplexityPtrOutput() CVSSv3AttackComplexityPtrOutput {
	return pulumi.ToOutput(in).(CVSSv3AttackComplexityPtrOutput)
}

func (in *cvssv3AttackComplexityPtr) ToCVSSv3AttackComplexityPtrOutputWithContext(ctx context.Context) CVSSv3AttackComplexityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3AttackComplexityPtrOutput)
}

// Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.
type CVSSv3AttackVector string

const (
	CVSSv3AttackVectorAttackVectorUnspecified = CVSSv3AttackVector("ATTACK_VECTOR_UNSPECIFIED")
	CVSSv3AttackVectorAttackVectorNetwork     = CVSSv3AttackVector("ATTACK_VECTOR_NETWORK")
	CVSSv3AttackVectorAttackVectorAdjacent    = CVSSv3AttackVector("ATTACK_VECTOR_ADJACENT")
	CVSSv3AttackVectorAttackVectorLocal       = CVSSv3AttackVector("ATTACK_VECTOR_LOCAL")
	CVSSv3AttackVectorAttackVectorPhysical    = CVSSv3AttackVector("ATTACK_VECTOR_PHYSICAL")
)

func (CVSSv3AttackVector) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3AttackVector)(nil)).Elem()
}

func (e CVSSv3AttackVector) ToCVSSv3AttackVectorOutput() CVSSv3AttackVectorOutput {
	return pulumi.ToOutput(e).(CVSSv3AttackVectorOutput)
}

func (e CVSSv3AttackVector) ToCVSSv3AttackVectorOutputWithContext(ctx context.Context) CVSSv3AttackVectorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3AttackVectorOutput)
}

func (e CVSSv3AttackVector) ToCVSSv3AttackVectorPtrOutput() CVSSv3AttackVectorPtrOutput {
	return e.ToCVSSv3AttackVectorPtrOutputWithContext(context.Background())
}

func (e CVSSv3AttackVector) ToCVSSv3AttackVectorPtrOutputWithContext(ctx context.Context) CVSSv3AttackVectorPtrOutput {
	return CVSSv3AttackVector(e).ToCVSSv3AttackVectorOutputWithContext(ctx).ToCVSSv3AttackVectorPtrOutputWithContext(ctx)
}

func (e CVSSv3AttackVector) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AttackVector) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AttackVector) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3AttackVector) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3AttackVectorOutput struct{ *pulumi.OutputState }

func (CVSSv3AttackVectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3AttackVector)(nil)).Elem()
}

func (o CVSSv3AttackVectorOutput) ToCVSSv3AttackVectorOutput() CVSSv3AttackVectorOutput {
	return o
}

func (o CVSSv3AttackVectorOutput) ToCVSSv3AttackVectorOutputWithContext(ctx context.Context) CVSSv3AttackVectorOutput {
	return o
}

func (o CVSSv3AttackVectorOutput) ToCVSSv3AttackVectorPtrOutput() CVSSv3AttackVectorPtrOutput {
	return o.ToCVSSv3AttackVectorPtrOutputWithContext(context.Background())
}

func (o CVSSv3AttackVectorOutput) ToCVSSv3AttackVectorPtrOutputWithContext(ctx context.Context) CVSSv3AttackVectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3AttackVector) *CVSSv3AttackVector {
		return &v
	}).(CVSSv3AttackVectorPtrOutput)
}

func (o CVSSv3AttackVectorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3AttackVectorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3AttackVector) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3AttackVectorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3AttackVectorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3AttackVector) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3AttackVectorPtrOutput struct{ *pulumi.OutputState }

func (CVSSv3AttackVectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3AttackVector)(nil)).Elem()
}

func (o CVSSv3AttackVectorPtrOutput) ToCVSSv3AttackVectorPtrOutput() CVSSv3AttackVectorPtrOutput {
	return o
}

func (o CVSSv3AttackVectorPtrOutput) ToCVSSv3AttackVectorPtrOutputWithContext(ctx context.Context) CVSSv3AttackVectorPtrOutput {
	return o
}

func (o CVSSv3AttackVectorPtrOutput) Elem() CVSSv3AttackVectorOutput {
	return o.ApplyT(func(v *CVSSv3AttackVector) CVSSv3AttackVector {
		if v != nil {
			return *v
		}
		var ret CVSSv3AttackVector
		return ret
	}).(CVSSv3AttackVectorOutput)
}

func (o CVSSv3AttackVectorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3AttackVectorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3AttackVector) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3AttackVectorInput is an input type that accepts CVSSv3AttackVectorArgs and CVSSv3AttackVectorOutput values.
// You can construct a concrete instance of `CVSSv3AttackVectorInput` via:
//
//          CVSSv3AttackVectorArgs{...}
type CVSSv3AttackVectorInput interface {
	pulumi.Input

	ToCVSSv3AttackVectorOutput() CVSSv3AttackVectorOutput
	ToCVSSv3AttackVectorOutputWithContext(context.Context) CVSSv3AttackVectorOutput
}

var cvssv3AttackVectorPtrType = reflect.TypeOf((**CVSSv3AttackVector)(nil)).Elem()

type CVSSv3AttackVectorPtrInput interface {
	pulumi.Input

	ToCVSSv3AttackVectorPtrOutput() CVSSv3AttackVectorPtrOutput
	ToCVSSv3AttackVectorPtrOutputWithContext(context.Context) CVSSv3AttackVectorPtrOutput
}

type cvssv3AttackVectorPtr string

func CVSSv3AttackVectorPtr(v string) CVSSv3AttackVectorPtrInput {
	return (*cvssv3AttackVectorPtr)(&v)
}

func (*cvssv3AttackVectorPtr) ElementType() reflect.Type {
	return cvssv3AttackVectorPtrType
}

func (in *cvssv3AttackVectorPtr) ToCVSSv3AttackVectorPtrOutput() CVSSv3AttackVectorPtrOutput {
	return pulumi.ToOutput(in).(CVSSv3AttackVectorPtrOutput)
}

func (in *cvssv3AttackVectorPtr) ToCVSSv3AttackVectorPtrOutputWithContext(ctx context.Context) CVSSv3AttackVectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3AttackVectorPtrOutput)
}

type CVSSv3AvailabilityImpact string

const (
	CVSSv3AvailabilityImpactImpactUnspecified = CVSSv3AvailabilityImpact("IMPACT_UNSPECIFIED")
	CVSSv3AvailabilityImpactImpactHigh        = CVSSv3AvailabilityImpact("IMPACT_HIGH")
	CVSSv3AvailabilityImpactImpactLow         = CVSSv3AvailabilityImpact("IMPACT_LOW")
	CVSSv3AvailabilityImpactImpactNone        = CVSSv3AvailabilityImpact("IMPACT_NONE")
)

func (CVSSv3AvailabilityImpact) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3AvailabilityImpact)(nil)).Elem()
}

func (e CVSSv3AvailabilityImpact) ToCVSSv3AvailabilityImpactOutput() CVSSv3AvailabilityImpactOutput {
	return pulumi.ToOutput(e).(CVSSv3AvailabilityImpactOutput)
}

func (e CVSSv3AvailabilityImpact) ToCVSSv3AvailabilityImpactOutputWithContext(ctx context.Context) CVSSv3AvailabilityImpactOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3AvailabilityImpactOutput)
}

func (e CVSSv3AvailabilityImpact) ToCVSSv3AvailabilityImpactPtrOutput() CVSSv3AvailabilityImpactPtrOutput {
	return e.ToCVSSv3AvailabilityImpactPtrOutputWithContext(context.Background())
}

func (e CVSSv3AvailabilityImpact) ToCVSSv3AvailabilityImpactPtrOutputWithContext(ctx context.Context) CVSSv3AvailabilityImpactPtrOutput {
	return CVSSv3AvailabilityImpact(e).ToCVSSv3AvailabilityImpactOutputWithContext(ctx).ToCVSSv3AvailabilityImpactPtrOutputWithContext(ctx)
}

func (e CVSSv3AvailabilityImpact) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AvailabilityImpact) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3AvailabilityImpact) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3AvailabilityImpact) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3AvailabilityImpactOutput struct{ *pulumi.OutputState }

func (CVSSv3AvailabilityImpactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3AvailabilityImpact)(nil)).Elem()
}

func (o CVSSv3AvailabilityImpactOutput) ToCVSSv3AvailabilityImpactOutput() CVSSv3AvailabilityImpactOutput {
	return o
}

func (o CVSSv3AvailabilityImpactOutput) ToCVSSv3AvailabilityImpactOutputWithContext(ctx context.Context) CVSSv3AvailabilityImpactOutput {
	return o
}

func (o CVSSv3AvailabilityImpactOutput) ToCVSSv3AvailabilityImpactPtrOutput() CVSSv3AvailabilityImpactPtrOutput {
	return o.ToCVSSv3AvailabilityImpactPtrOutputWithContext(context.Background())
}

func (o CVSSv3AvailabilityImpactOutput) ToCVSSv3AvailabilityImpactPtrOutputWithContext(ctx context.Context) CVSSv3AvailabilityImpactPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3AvailabilityImpact) *CVSSv3AvailabilityImpact {
		return &v
	}).(CVSSv3AvailabilityImpactPtrOutput)
}

func (o CVSSv3AvailabilityImpactOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3AvailabilityImpactOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3AvailabilityImpact) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3AvailabilityImpactOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3AvailabilityImpactOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3AvailabilityImpact) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3AvailabilityImpactPtrOutput struct{ *pulumi.OutputState }

func (CVSSv3AvailabilityImpactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3AvailabilityImpact)(nil)).Elem()
}

func (o CVSSv3AvailabilityImpactPtrOutput) ToCVSSv3AvailabilityImpactPtrOutput() CVSSv3AvailabilityImpactPtrOutput {
	return o
}

func (o CVSSv3AvailabilityImpactPtrOutput) ToCVSSv3AvailabilityImpactPtrOutputWithContext(ctx context.Context) CVSSv3AvailabilityImpactPtrOutput {
	return o
}

func (o CVSSv3AvailabilityImpactPtrOutput) Elem() CVSSv3AvailabilityImpactOutput {
	return o.ApplyT(func(v *CVSSv3AvailabilityImpact) CVSSv3AvailabilityImpact {
		if v != nil {
			return *v
		}
		var ret CVSSv3AvailabilityImpact
		return ret
	}).(CVSSv3AvailabilityImpactOutput)
}

func (o CVSSv3AvailabilityImpactPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3AvailabilityImpactPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3AvailabilityImpact) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3AvailabilityImpactInput is an input type that accepts CVSSv3AvailabilityImpactArgs and CVSSv3AvailabilityImpactOutput values.
// You can construct a concrete instance of `CVSSv3AvailabilityImpactInput` via:
//
//          CVSSv3AvailabilityImpactArgs{...}
type CVSSv3AvailabilityImpactInput interface {
	pulumi.Input

	ToCVSSv3AvailabilityImpactOutput() CVSSv3AvailabilityImpactOutput
	ToCVSSv3AvailabilityImpactOutputWithContext(context.Context) CVSSv3AvailabilityImpactOutput
}

var cvssv3AvailabilityImpactPtrType = reflect.TypeOf((**CVSSv3AvailabilityImpact)(nil)).Elem()

type CVSSv3AvailabilityImpactPtrInput interface {
	pulumi.Input

	ToCVSSv3AvailabilityImpactPtrOutput() CVSSv3AvailabilityImpactPtrOutput
	ToCVSSv3AvailabilityImpactPtrOutputWithContext(context.Context) CVSSv3AvailabilityImpactPtrOutput
}

type cvssv3AvailabilityImpactPtr string

func CVSSv3AvailabilityImpactPtr(v string) CVSSv3AvailabilityImpactPtrInput {
	return (*cvssv3AvailabilityImpactPtr)(&v)
}

func (*cvssv3AvailabilityImpactPtr) ElementType() reflect.Type {
	return cvssv3AvailabilityImpactPtrType
}

func (in *cvssv3AvailabilityImpactPtr) ToCVSSv3AvailabilityImpactPtrOutput() CVSSv3AvailabilityImpactPtrOutput {
	return pulumi.ToOutput(in).(CVSSv3AvailabilityImpactPtrOutput)
}

func (in *cvssv3AvailabilityImpactPtr) ToCVSSv3AvailabilityImpactPtrOutputWithContext(ctx context.Context) CVSSv3AvailabilityImpactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3AvailabilityImpactPtrOutput)
}

type CVSSv3ConfidentialityImpact string

const (
	CVSSv3ConfidentialityImpactImpactUnspecified = CVSSv3ConfidentialityImpact("IMPACT_UNSPECIFIED")
	CVSSv3ConfidentialityImpactImpactHigh        = CVSSv3ConfidentialityImpact("IMPACT_HIGH")
	CVSSv3ConfidentialityImpactImpactLow         = CVSSv3ConfidentialityImpact("IMPACT_LOW")
	CVSSv3ConfidentialityImpactImpactNone        = CVSSv3ConfidentialityImpact("IMPACT_NONE")
)

func (CVSSv3ConfidentialityImpact) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3ConfidentialityImpact)(nil)).Elem()
}

func (e CVSSv3ConfidentialityImpact) ToCVSSv3ConfidentialityImpactOutput() CVSSv3ConfidentialityImpactOutput {
	return pulumi.ToOutput(e).(CVSSv3ConfidentialityImpactOutput)
}

func (e CVSSv3ConfidentialityImpact) ToCVSSv3ConfidentialityImpactOutputWithContext(ctx context.Context) CVSSv3ConfidentialityImpactOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3ConfidentialityImpactOutput)
}

func (e CVSSv3ConfidentialityImpact) ToCVSSv3ConfidentialityImpactPtrOutput() CVSSv3ConfidentialityImpactPtrOutput {
	return e.ToCVSSv3ConfidentialityImpactPtrOutputWithContext(context.Background())
}

func (e CVSSv3ConfidentialityImpact) ToCVSSv3ConfidentialityImpactPtrOutputWithContext(ctx context.Context) CVSSv3ConfidentialityImpactPtrOutput {
	return CVSSv3ConfidentialityImpact(e).ToCVSSv3ConfidentialityImpactOutputWithContext(ctx).ToCVSSv3ConfidentialityImpactPtrOutputWithContext(ctx)
}

func (e CVSSv3ConfidentialityImpact) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3ConfidentialityImpact) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3ConfidentialityImpact) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3ConfidentialityImpact) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3ConfidentialityImpactOutput struct{ *pulumi.OutputState }

func (CVSSv3ConfidentialityImpactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3ConfidentialityImpact)(nil)).Elem()
}

func (o CVSSv3ConfidentialityImpactOutput) ToCVSSv3ConfidentialityImpactOutput() CVSSv3ConfidentialityImpactOutput {
	return o
}

func (o CVSSv3ConfidentialityImpactOutput) ToCVSSv3ConfidentialityImpactOutputWithContext(ctx context.Context) CVSSv3ConfidentialityImpactOutput {
	return o
}

func (o CVSSv3ConfidentialityImpactOutput) ToCVSSv3ConfidentialityImpactPtrOutput() CVSSv3ConfidentialityImpactPtrOutput {
	return o.ToCVSSv3ConfidentialityImpactPtrOutputWithContext(context.Background())
}

func (o CVSSv3ConfidentialityImpactOutput) ToCVSSv3ConfidentialityImpactPtrOutputWithContext(ctx context.Context) CVSSv3ConfidentialityImpactPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3ConfidentialityImpact) *CVSSv3ConfidentialityImpact {
		return &v
	}).(CVSSv3ConfidentialityImpactPtrOutput)
}

func (o CVSSv3ConfidentialityImpactOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3ConfidentialityImpactOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3ConfidentialityImpact) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3ConfidentialityImpactOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3ConfidentialityImpactOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3ConfidentialityImpact) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3ConfidentialityImpactPtrOutput struct{ *pulumi.OutputState }

func (CVSSv3ConfidentialityImpactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3ConfidentialityImpact)(nil)).Elem()
}

func (o CVSSv3ConfidentialityImpactPtrOutput) ToCVSSv3ConfidentialityImpactPtrOutput() CVSSv3ConfidentialityImpactPtrOutput {
	return o
}

func (o CVSSv3ConfidentialityImpactPtrOutput) ToCVSSv3ConfidentialityImpactPtrOutputWithContext(ctx context.Context) CVSSv3ConfidentialityImpactPtrOutput {
	return o
}

func (o CVSSv3ConfidentialityImpactPtrOutput) Elem() CVSSv3ConfidentialityImpactOutput {
	return o.ApplyT(func(v *CVSSv3ConfidentialityImpact) CVSSv3ConfidentialityImpact {
		if v != nil {
			return *v
		}
		var ret CVSSv3ConfidentialityImpact
		return ret
	}).(CVSSv3ConfidentialityImpactOutput)
}

func (o CVSSv3ConfidentialityImpactPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3ConfidentialityImpactPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3ConfidentialityImpact) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3ConfidentialityImpactInput is an input type that accepts CVSSv3ConfidentialityImpactArgs and CVSSv3ConfidentialityImpactOutput values.
// You can construct a concrete instance of `CVSSv3ConfidentialityImpactInput` via:
//
//          CVSSv3ConfidentialityImpactArgs{...}
type CVSSv3ConfidentialityImpactInput interface {
	pulumi.Input

	ToCVSSv3ConfidentialityImpactOutput() CVSSv3ConfidentialityImpactOutput
	ToCVSSv3ConfidentialityImpactOutputWithContext(context.Context) CVSSv3ConfidentialityImpactOutput
}

var cvssv3ConfidentialityImpactPtrType = reflect.TypeOf((**CVSSv3ConfidentialityImpact)(nil)).Elem()

type CVSSv3ConfidentialityImpactPtrInput interface {
	pulumi.Input

	ToCVSSv3ConfidentialityImpactPtrOutput() CVSSv3ConfidentialityImpactPtrOutput
	ToCVSSv3ConfidentialityImpactPtrOutputWithContext(context.Context) CVSSv3ConfidentialityImpactPtrOutput
}

type cvssv3ConfidentialityImpactPtr string

func CVSSv3ConfidentialityImpactPtr(v string) CVSSv3ConfidentialityImpactPtrInput {
	return (*cvssv3ConfidentialityImpactPtr)(&v)
}

func (*cvssv3ConfidentialityImpactPtr) ElementType() reflect.Type {
	return cvssv3ConfidentialityImpactPtrType
}

func (in *cvssv3ConfidentialityImpactPtr) ToCVSSv3ConfidentialityImpactPtrOutput() CVSSv3ConfidentialityImpactPtrOutput {
	return pulumi.ToOutput(in).(CVSSv3ConfidentialityImpactPtrOutput)
}

func (in *cvssv3ConfidentialityImpactPtr) ToCVSSv3ConfidentialityImpactPtrOutputWithContext(ctx context.Context) CVSSv3ConfidentialityImpactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3ConfidentialityImpactPtrOutput)
}

type CVSSv3IntegrityImpact string

const (
	CVSSv3IntegrityImpactImpactUnspecified = CVSSv3IntegrityImpact("IMPACT_UNSPECIFIED")
	CVSSv3IntegrityImpactImpactHigh        = CVSSv3IntegrityImpact("IMPACT_HIGH")
	CVSSv3IntegrityImpactImpactLow         = CVSSv3IntegrityImpact("IMPACT_LOW")
	CVSSv3IntegrityImpactImpactNone        = CVSSv3IntegrityImpact("IMPACT_NONE")
)

func (CVSSv3IntegrityImpact) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3IntegrityImpact)(nil)).Elem()
}

func (e CVSSv3IntegrityImpact) ToCVSSv3IntegrityImpactOutput() CVSSv3IntegrityImpactOutput {
	return pulumi.ToOutput(e).(CVSSv3IntegrityImpactOutput)
}

func (e CVSSv3IntegrityImpact) ToCVSSv3IntegrityImpactOutputWithContext(ctx context.Context) CVSSv3IntegrityImpactOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3IntegrityImpactOutput)
}

func (e CVSSv3IntegrityImpact) ToCVSSv3IntegrityImpactPtrOutput() CVSSv3IntegrityImpactPtrOutput {
	return e.ToCVSSv3IntegrityImpactPtrOutputWithContext(context.Background())
}

func (e CVSSv3IntegrityImpact) ToCVSSv3IntegrityImpactPtrOutputWithContext(ctx context.Context) CVSSv3IntegrityImpactPtrOutput {
	return CVSSv3IntegrityImpact(e).ToCVSSv3IntegrityImpactOutputWithContext(ctx).ToCVSSv3IntegrityImpactPtrOutputWithContext(ctx)
}

func (e CVSSv3IntegrityImpact) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3IntegrityImpact) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3IntegrityImpact) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3IntegrityImpact) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3IntegrityImpactOutput struct{ *pulumi.OutputState }

func (CVSSv3IntegrityImpactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3IntegrityImpact)(nil)).Elem()
}

func (o CVSSv3IntegrityImpactOutput) ToCVSSv3IntegrityImpactOutput() CVSSv3IntegrityImpactOutput {
	return o
}

func (o CVSSv3IntegrityImpactOutput) ToCVSSv3IntegrityImpactOutputWithContext(ctx context.Context) CVSSv3IntegrityImpactOutput {
	return o
}

func (o CVSSv3IntegrityImpactOutput) ToCVSSv3IntegrityImpactPtrOutput() CVSSv3IntegrityImpactPtrOutput {
	return o.ToCVSSv3IntegrityImpactPtrOutputWithContext(context.Background())
}

func (o CVSSv3IntegrityImpactOutput) ToCVSSv3IntegrityImpactPtrOutputWithContext(ctx context.Context) CVSSv3IntegrityImpactPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3IntegrityImpact) *CVSSv3IntegrityImpact {
		return &v
	}).(CVSSv3IntegrityImpactPtrOutput)
}

func (o CVSSv3IntegrityImpactOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3IntegrityImpactOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3IntegrityImpact) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3IntegrityImpactOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3IntegrityImpactOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3IntegrityImpact) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3IntegrityImpactPtrOutput struct{ *pulumi.OutputState }

func (CVSSv3IntegrityImpactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3IntegrityImpact)(nil)).Elem()
}

func (o CVSSv3IntegrityImpactPtrOutput) ToCVSSv3IntegrityImpactPtrOutput() CVSSv3IntegrityImpactPtrOutput {
	return o
}

func (o CVSSv3IntegrityImpactPtrOutput) ToCVSSv3IntegrityImpactPtrOutputWithContext(ctx context.Context) CVSSv3IntegrityImpactPtrOutput {
	return o
}

func (o CVSSv3IntegrityImpactPtrOutput) Elem() CVSSv3IntegrityImpactOutput {
	return o.ApplyT(func(v *CVSSv3IntegrityImpact) CVSSv3IntegrityImpact {
		if v != nil {
			return *v
		}
		var ret CVSSv3IntegrityImpact
		return ret
	}).(CVSSv3IntegrityImpactOutput)
}

func (o CVSSv3IntegrityImpactPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3IntegrityImpactPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3IntegrityImpact) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3IntegrityImpactInput is an input type that accepts CVSSv3IntegrityImpactArgs and CVSSv3IntegrityImpactOutput values.
// You can construct a concrete instance of `CVSSv3IntegrityImpactInput` via:
//
//          CVSSv3IntegrityImpactArgs{...}
type CVSSv3IntegrityImpactInput interface {
	pulumi.Input

	ToCVSSv3IntegrityImpactOutput() CVSSv3IntegrityImpactOutput
	ToCVSSv3IntegrityImpactOutputWithContext(context.Context) CVSSv3IntegrityImpactOutput
}

var cvssv3IntegrityImpactPtrType = reflect.TypeOf((**CVSSv3IntegrityImpact)(nil)).Elem()

type CVSSv3IntegrityImpactPtrInput interface {
	pulumi.Input

	ToCVSSv3IntegrityImpactPtrOutput() CVSSv3IntegrityImpactPtrOutput
	ToCVSSv3IntegrityImpactPtrOutputWithContext(context.Context) CVSSv3IntegrityImpactPtrOutput
}

type cvssv3IntegrityImpactPtr string

func CVSSv3IntegrityImpactPtr(v string) CVSSv3IntegrityImpactPtrInput {
	return (*cvssv3IntegrityImpactPtr)(&v)
}

func (*cvssv3IntegrityImpactPtr) ElementType() reflect.Type {
	return cvssv3IntegrityImpactPtrType
}

func (in *cvssv3IntegrityImpactPtr) ToCVSSv3IntegrityImpactPtrOutput() CVSSv3IntegrityImpactPtrOutput {
	return pulumi.ToOutput(in).(CVSSv3IntegrityImpactPtrOutput)
}

func (in *cvssv3IntegrityImpactPtr) ToCVSSv3IntegrityImpactPtrOutputWithContext(ctx context.Context) CVSSv3IntegrityImpactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3IntegrityImpactPtrOutput)
}

type CVSSv3PrivilegesRequired string

const (
	CVSSv3PrivilegesRequiredPrivilegesRequiredUnspecified = CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_UNSPECIFIED")
	CVSSv3PrivilegesRequiredPrivilegesRequiredNone        = CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_NONE")
	CVSSv3PrivilegesRequiredPrivilegesRequiredLow         = CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_LOW")
	CVSSv3PrivilegesRequiredPrivilegesRequiredHigh        = CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_HIGH")
)

func (CVSSv3PrivilegesRequired) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3PrivilegesRequired)(nil)).Elem()
}

func (e CVSSv3PrivilegesRequired) ToCVSSv3PrivilegesRequiredOutput() CVSSv3PrivilegesRequiredOutput {
	return pulumi.ToOutput(e).(CVSSv3PrivilegesRequiredOutput)
}

func (e CVSSv3PrivilegesRequired) ToCVSSv3PrivilegesRequiredOutputWithContext(ctx context.Context) CVSSv3PrivilegesRequiredOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3PrivilegesRequiredOutput)
}

func (e CVSSv3PrivilegesRequired) ToCVSSv3PrivilegesRequiredPtrOutput() CVSSv3PrivilegesRequiredPtrOutput {
	return e.ToCVSSv3PrivilegesRequiredPtrOutputWithContext(context.Background())
}

func (e CVSSv3PrivilegesRequired) ToCVSSv3PrivilegesRequiredPtrOutputWithContext(ctx context.Context) CVSSv3PrivilegesRequiredPtrOutput {
	return CVSSv3PrivilegesRequired(e).ToCVSSv3PrivilegesRequiredOutputWithContext(ctx).ToCVSSv3PrivilegesRequiredPtrOutputWithContext(ctx)
}

func (e CVSSv3PrivilegesRequired) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3PrivilegesRequired) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3PrivilegesRequired) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3PrivilegesRequired) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3PrivilegesRequiredOutput struct{ *pulumi.OutputState }

func (CVSSv3PrivilegesRequiredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3PrivilegesRequired)(nil)).Elem()
}

func (o CVSSv3PrivilegesRequiredOutput) ToCVSSv3PrivilegesRequiredOutput() CVSSv3PrivilegesRequiredOutput {
	return o
}

func (o CVSSv3PrivilegesRequiredOutput) ToCVSSv3PrivilegesRequiredOutputWithContext(ctx context.Context) CVSSv3PrivilegesRequiredOutput {
	return o
}

func (o CVSSv3PrivilegesRequiredOutput) ToCVSSv3PrivilegesRequiredPtrOutput() CVSSv3PrivilegesRequiredPtrOutput {
	return o.ToCVSSv3PrivilegesRequiredPtrOutputWithContext(context.Background())
}

func (o CVSSv3PrivilegesRequiredOutput) ToCVSSv3PrivilegesRequiredPtrOutputWithContext(ctx context.Context) CVSSv3PrivilegesRequiredPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3PrivilegesRequired) *CVSSv3PrivilegesRequired {
		return &v
	}).(CVSSv3PrivilegesRequiredPtrOutput)
}

func (o CVSSv3PrivilegesRequiredOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3PrivilegesRequiredOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3PrivilegesRequired) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3PrivilegesRequiredOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3PrivilegesRequiredOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3PrivilegesRequired) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3PrivilegesRequiredPtrOutput struct{ *pulumi.OutputState }

func (CVSSv3PrivilegesRequiredPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3PrivilegesRequired)(nil)).Elem()
}

func (o CVSSv3PrivilegesRequiredPtrOutput) ToCVSSv3PrivilegesRequiredPtrOutput() CVSSv3PrivilegesRequiredPtrOutput {
	return o
}

func (o CVSSv3PrivilegesRequiredPtrOutput) ToCVSSv3PrivilegesRequiredPtrOutputWithContext(ctx context.Context) CVSSv3PrivilegesRequiredPtrOutput {
	return o
}

func (o CVSSv3PrivilegesRequiredPtrOutput) Elem() CVSSv3PrivilegesRequiredOutput {
	return o.ApplyT(func(v *CVSSv3PrivilegesRequired) CVSSv3PrivilegesRequired {
		if v != nil {
			return *v
		}
		var ret CVSSv3PrivilegesRequired
		return ret
	}).(CVSSv3PrivilegesRequiredOutput)
}

func (o CVSSv3PrivilegesRequiredPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3PrivilegesRequiredPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3PrivilegesRequired) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3PrivilegesRequiredInput is an input type that accepts CVSSv3PrivilegesRequiredArgs and CVSSv3PrivilegesRequiredOutput values.
// You can construct a concrete instance of `CVSSv3PrivilegesRequiredInput` via:
//
//          CVSSv3PrivilegesRequiredArgs{...}
type CVSSv3PrivilegesRequiredInput interface {
	pulumi.Input

	ToCVSSv3PrivilegesRequiredOutput() CVSSv3PrivilegesRequiredOutput
	ToCVSSv3PrivilegesRequiredOutputWithContext(context.Context) CVSSv3PrivilegesRequiredOutput
}

var cvssv3PrivilegesRequiredPtrType = reflect.TypeOf((**CVSSv3PrivilegesRequired)(nil)).Elem()

type CVSSv3PrivilegesRequiredPtrInput interface {
	pulumi.Input

	ToCVSSv3PrivilegesRequiredPtrOutput() CVSSv3PrivilegesRequiredPtrOutput
	ToCVSSv3PrivilegesRequiredPtrOutputWithContext(context.Context) CVSSv3PrivilegesRequiredPtrOutput
}

type cvssv3PrivilegesRequiredPtr string

func CVSSv3PrivilegesRequiredPtr(v string) CVSSv3PrivilegesRequiredPtrInput {
	return (*cvssv3PrivilegesRequiredPtr)(&v)
}

func (*cvssv3PrivilegesRequiredPtr) ElementType() reflect.Type {
	return cvssv3PrivilegesRequiredPtrType
}

func (in *cvssv3PrivilegesRequiredPtr) ToCVSSv3PrivilegesRequiredPtrOutput() CVSSv3PrivilegesRequiredPtrOutput {
	return pulumi.ToOutput(in).(CVSSv3PrivilegesRequiredPtrOutput)
}

func (in *cvssv3PrivilegesRequiredPtr) ToCVSSv3PrivilegesRequiredPtrOutputWithContext(ctx context.Context) CVSSv3PrivilegesRequiredPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3PrivilegesRequiredPtrOutput)
}

type CVSSv3Scope string

const (
	CVSSv3ScopeScopeUnspecified = CVSSv3Scope("SCOPE_UNSPECIFIED")
	CVSSv3ScopeScopeUnchanged   = CVSSv3Scope("SCOPE_UNCHANGED")
	CVSSv3ScopeScopeChanged     = CVSSv3Scope("SCOPE_CHANGED")
)

func (CVSSv3Scope) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3Scope)(nil)).Elem()
}

func (e CVSSv3Scope) ToCVSSv3ScopeOutput() CVSSv3ScopeOutput {
	return pulumi.ToOutput(e).(CVSSv3ScopeOutput)
}

func (e CVSSv3Scope) ToCVSSv3ScopeOutputWithContext(ctx context.Context) CVSSv3ScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3ScopeOutput)
}

func (e CVSSv3Scope) ToCVSSv3ScopePtrOutput() CVSSv3ScopePtrOutput {
	return e.ToCVSSv3ScopePtrOutputWithContext(context.Background())
}

func (e CVSSv3Scope) ToCVSSv3ScopePtrOutputWithContext(ctx context.Context) CVSSv3ScopePtrOutput {
	return CVSSv3Scope(e).ToCVSSv3ScopeOutputWithContext(ctx).ToCVSSv3ScopePtrOutputWithContext(ctx)
}

func (e CVSSv3Scope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3Scope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3Scope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3Scope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3ScopeOutput struct{ *pulumi.OutputState }

func (CVSSv3ScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3Scope)(nil)).Elem()
}

func (o CVSSv3ScopeOutput) ToCVSSv3ScopeOutput() CVSSv3ScopeOutput {
	return o
}

func (o CVSSv3ScopeOutput) ToCVSSv3ScopeOutputWithContext(ctx context.Context) CVSSv3ScopeOutput {
	return o
}

func (o CVSSv3ScopeOutput) ToCVSSv3ScopePtrOutput() CVSSv3ScopePtrOutput {
	return o.ToCVSSv3ScopePtrOutputWithContext(context.Background())
}

func (o CVSSv3ScopeOutput) ToCVSSv3ScopePtrOutputWithContext(ctx context.Context) CVSSv3ScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3Scope) *CVSSv3Scope {
		return &v
	}).(CVSSv3ScopePtrOutput)
}

func (o CVSSv3ScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3ScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3Scope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3ScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3ScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3Scope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3ScopePtrOutput struct{ *pulumi.OutputState }

func (CVSSv3ScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3Scope)(nil)).Elem()
}

func (o CVSSv3ScopePtrOutput) ToCVSSv3ScopePtrOutput() CVSSv3ScopePtrOutput {
	return o
}

func (o CVSSv3ScopePtrOutput) ToCVSSv3ScopePtrOutputWithContext(ctx context.Context) CVSSv3ScopePtrOutput {
	return o
}

func (o CVSSv3ScopePtrOutput) Elem() CVSSv3ScopeOutput {
	return o.ApplyT(func(v *CVSSv3Scope) CVSSv3Scope {
		if v != nil {
			return *v
		}
		var ret CVSSv3Scope
		return ret
	}).(CVSSv3ScopeOutput)
}

func (o CVSSv3ScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3ScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3Scope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3ScopeInput is an input type that accepts CVSSv3ScopeArgs and CVSSv3ScopeOutput values.
// You can construct a concrete instance of `CVSSv3ScopeInput` via:
//
//          CVSSv3ScopeArgs{...}
type CVSSv3ScopeInput interface {
	pulumi.Input

	ToCVSSv3ScopeOutput() CVSSv3ScopeOutput
	ToCVSSv3ScopeOutputWithContext(context.Context) CVSSv3ScopeOutput
}

var cvssv3ScopePtrType = reflect.TypeOf((**CVSSv3Scope)(nil)).Elem()

type CVSSv3ScopePtrInput interface {
	pulumi.Input

	ToCVSSv3ScopePtrOutput() CVSSv3ScopePtrOutput
	ToCVSSv3ScopePtrOutputWithContext(context.Context) CVSSv3ScopePtrOutput
}

type cvssv3ScopePtr string

func CVSSv3ScopePtr(v string) CVSSv3ScopePtrInput {
	return (*cvssv3ScopePtr)(&v)
}

func (*cvssv3ScopePtr) ElementType() reflect.Type {
	return cvssv3ScopePtrType
}

func (in *cvssv3ScopePtr) ToCVSSv3ScopePtrOutput() CVSSv3ScopePtrOutput {
	return pulumi.ToOutput(in).(CVSSv3ScopePtrOutput)
}

func (in *cvssv3ScopePtr) ToCVSSv3ScopePtrOutputWithContext(ctx context.Context) CVSSv3ScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3ScopePtrOutput)
}

type CVSSv3UserInteraction string

const (
	CVSSv3UserInteractionUserInteractionUnspecified = CVSSv3UserInteraction("USER_INTERACTION_UNSPECIFIED")
	CVSSv3UserInteractionUserInteractionNone        = CVSSv3UserInteraction("USER_INTERACTION_NONE")
	CVSSv3UserInteractionUserInteractionRequired    = CVSSv3UserInteraction("USER_INTERACTION_REQUIRED")
)

func (CVSSv3UserInteraction) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3UserInteraction)(nil)).Elem()
}

func (e CVSSv3UserInteraction) ToCVSSv3UserInteractionOutput() CVSSv3UserInteractionOutput {
	return pulumi.ToOutput(e).(CVSSv3UserInteractionOutput)
}

func (e CVSSv3UserInteraction) ToCVSSv3UserInteractionOutputWithContext(ctx context.Context) CVSSv3UserInteractionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CVSSv3UserInteractionOutput)
}

func (e CVSSv3UserInteraction) ToCVSSv3UserInteractionPtrOutput() CVSSv3UserInteractionPtrOutput {
	return e.ToCVSSv3UserInteractionPtrOutputWithContext(context.Background())
}

func (e CVSSv3UserInteraction) ToCVSSv3UserInteractionPtrOutputWithContext(ctx context.Context) CVSSv3UserInteractionPtrOutput {
	return CVSSv3UserInteraction(e).ToCVSSv3UserInteractionOutputWithContext(ctx).ToCVSSv3UserInteractionPtrOutputWithContext(ctx)
}

func (e CVSSv3UserInteraction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3UserInteraction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CVSSv3UserInteraction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CVSSv3UserInteraction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CVSSv3UserInteractionOutput struct{ *pulumi.OutputState }

func (CVSSv3UserInteractionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CVSSv3UserInteraction)(nil)).Elem()
}

func (o CVSSv3UserInteractionOutput) ToCVSSv3UserInteractionOutput() CVSSv3UserInteractionOutput {
	return o
}

func (o CVSSv3UserInteractionOutput) ToCVSSv3UserInteractionOutputWithContext(ctx context.Context) CVSSv3UserInteractionOutput {
	return o
}

func (o CVSSv3UserInteractionOutput) ToCVSSv3UserInteractionPtrOutput() CVSSv3UserInteractionPtrOutput {
	return o.ToCVSSv3UserInteractionPtrOutputWithContext(context.Background())
}

func (o CVSSv3UserInteractionOutput) ToCVSSv3UserInteractionPtrOutputWithContext(ctx context.Context) CVSSv3UserInteractionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CVSSv3UserInteraction) *CVSSv3UserInteraction {
		return &v
	}).(CVSSv3UserInteractionPtrOutput)
}

func (o CVSSv3UserInteractionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CVSSv3UserInteractionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3UserInteraction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CVSSv3UserInteractionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3UserInteractionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CVSSv3UserInteraction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CVSSv3UserInteractionPtrOutput struct{ *pulumi.OutputState }

func (CVSSv3UserInteractionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CVSSv3UserInteraction)(nil)).Elem()
}

func (o CVSSv3UserInteractionPtrOutput) ToCVSSv3UserInteractionPtrOutput() CVSSv3UserInteractionPtrOutput {
	return o
}

func (o CVSSv3UserInteractionPtrOutput) ToCVSSv3UserInteractionPtrOutputWithContext(ctx context.Context) CVSSv3UserInteractionPtrOutput {
	return o
}

func (o CVSSv3UserInteractionPtrOutput) Elem() CVSSv3UserInteractionOutput {
	return o.ApplyT(func(v *CVSSv3UserInteraction) CVSSv3UserInteraction {
		if v != nil {
			return *v
		}
		var ret CVSSv3UserInteraction
		return ret
	}).(CVSSv3UserInteractionOutput)
}

func (o CVSSv3UserInteractionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CVSSv3UserInteractionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CVSSv3UserInteraction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CVSSv3UserInteractionInput is an input type that accepts CVSSv3UserInteractionArgs and CVSSv3UserInteractionOutput values.
// You can construct a concrete instance of `CVSSv3UserInteractionInput` via:
//
//          CVSSv3UserInteractionArgs{...}
type CVSSv3UserInteractionInput interface {
	pulumi.Input

	ToCVSSv3UserInteractionOutput() CVSSv3UserInteractionOutput
	ToCVSSv3UserInteractionOutputWithContext(context.Context) CVSSv3UserInteractionOutput
}

var cvssv3UserInteractionPtrType = reflect.TypeOf((**CVSSv3UserInteraction)(nil)).Elem()

type CVSSv3UserInteractionPtrInput interface {
	pulumi.Input

	ToCVSSv3UserInteractionPtrOutput() CVSSv3UserInteractionPtrOutput
	ToCVSSv3UserInteractionPtrOutputWithContext(context.Context) CVSSv3UserInteractionPtrOutput
}

type cvssv3UserInteractionPtr string

func CVSSv3UserInteractionPtr(v string) CVSSv3UserInteractionPtrInput {
	return (*cvssv3UserInteractionPtr)(&v)
}

func (*cvssv3UserInteractionPtr) ElementType() reflect.Type {
	return cvssv3UserInteractionPtrType
}

func (in *cvssv3UserInteractionPtr) ToCVSSv3UserInteractionPtrOutput() CVSSv3UserInteractionPtrOutput {
	return pulumi.ToOutput(in).(CVSSv3UserInteractionPtrOutput)
}

func (in *cvssv3UserInteractionPtr) ToCVSSv3UserInteractionPtrOutputWithContext(ctx context.Context) CVSSv3UserInteractionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CVSSv3UserInteractionPtrOutput)
}

type CisBenchmarkSeverity string

const (
	// Unknown.
	CisBenchmarkSeveritySeverityUnspecified = CisBenchmarkSeverity("SEVERITY_UNSPECIFIED")
	// Minimal severity.
	CisBenchmarkSeverityMinimal = CisBenchmarkSeverity("MINIMAL")
	// Low severity.
	CisBenchmarkSeverityLow = CisBenchmarkSeverity("LOW")
	// Medium severity.
	CisBenchmarkSeverityMedium = CisBenchmarkSeverity("MEDIUM")
	// High severity.
	CisBenchmarkSeverityHigh = CisBenchmarkSeverity("HIGH")
	// Critical severity.
	CisBenchmarkSeverityCritical = CisBenchmarkSeverity("CRITICAL")
)

func (CisBenchmarkSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*CisBenchmarkSeverity)(nil)).Elem()
}

func (e CisBenchmarkSeverity) ToCisBenchmarkSeverityOutput() CisBenchmarkSeverityOutput {
	return pulumi.ToOutput(e).(CisBenchmarkSeverityOutput)
}

func (e CisBenchmarkSeverity) ToCisBenchmarkSeverityOutputWithContext(ctx context.Context) CisBenchmarkSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CisBenchmarkSeverityOutput)
}

func (e CisBenchmarkSeverity) ToCisBenchmarkSeverityPtrOutput() CisBenchmarkSeverityPtrOutput {
	return e.ToCisBenchmarkSeverityPtrOutputWithContext(context.Background())
}

func (e CisBenchmarkSeverity) ToCisBenchmarkSeverityPtrOutputWithContext(ctx context.Context) CisBenchmarkSeverityPtrOutput {
	return CisBenchmarkSeverity(e).ToCisBenchmarkSeverityOutputWithContext(ctx).ToCisBenchmarkSeverityPtrOutputWithContext(ctx)
}

func (e CisBenchmarkSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CisBenchmarkSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CisBenchmarkSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CisBenchmarkSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CisBenchmarkSeverityOutput struct{ *pulumi.OutputState }

func (CisBenchmarkSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CisBenchmarkSeverity)(nil)).Elem()
}

func (o CisBenchmarkSeverityOutput) ToCisBenchmarkSeverityOutput() CisBenchmarkSeverityOutput {
	return o
}

func (o CisBenchmarkSeverityOutput) ToCisBenchmarkSeverityOutputWithContext(ctx context.Context) CisBenchmarkSeverityOutput {
	return o
}

func (o CisBenchmarkSeverityOutput) ToCisBenchmarkSeverityPtrOutput() CisBenchmarkSeverityPtrOutput {
	return o.ToCisBenchmarkSeverityPtrOutputWithContext(context.Background())
}

func (o CisBenchmarkSeverityOutput) ToCisBenchmarkSeverityPtrOutputWithContext(ctx context.Context) CisBenchmarkSeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CisBenchmarkSeverity) *CisBenchmarkSeverity {
		return &v
	}).(CisBenchmarkSeverityPtrOutput)
}

func (o CisBenchmarkSeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CisBenchmarkSeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CisBenchmarkSeverity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CisBenchmarkSeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CisBenchmarkSeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CisBenchmarkSeverity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CisBenchmarkSeverityPtrOutput struct{ *pulumi.OutputState }

func (CisBenchmarkSeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CisBenchmarkSeverity)(nil)).Elem()
}

func (o CisBenchmarkSeverityPtrOutput) ToCisBenchmarkSeverityPtrOutput() CisBenchmarkSeverityPtrOutput {
	return o
}

func (o CisBenchmarkSeverityPtrOutput) ToCisBenchmarkSeverityPtrOutputWithContext(ctx context.Context) CisBenchmarkSeverityPtrOutput {
	return o
}

func (o CisBenchmarkSeverityPtrOutput) Elem() CisBenchmarkSeverityOutput {
	return o.ApplyT(func(v *CisBenchmarkSeverity) CisBenchmarkSeverity {
		if v != nil {
			return *v
		}
		var ret CisBenchmarkSeverity
		return ret
	}).(CisBenchmarkSeverityOutput)
}

func (o CisBenchmarkSeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CisBenchmarkSeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CisBenchmarkSeverity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CisBenchmarkSeverityInput is an input type that accepts CisBenchmarkSeverityArgs and CisBenchmarkSeverityOutput values.
// You can construct a concrete instance of `CisBenchmarkSeverityInput` via:
//
//          CisBenchmarkSeverityArgs{...}
type CisBenchmarkSeverityInput interface {
	pulumi.Input

	ToCisBenchmarkSeverityOutput() CisBenchmarkSeverityOutput
	ToCisBenchmarkSeverityOutputWithContext(context.Context) CisBenchmarkSeverityOutput
}

var cisBenchmarkSeverityPtrType = reflect.TypeOf((**CisBenchmarkSeverity)(nil)).Elem()

type CisBenchmarkSeverityPtrInput interface {
	pulumi.Input

	ToCisBenchmarkSeverityPtrOutput() CisBenchmarkSeverityPtrOutput
	ToCisBenchmarkSeverityPtrOutputWithContext(context.Context) CisBenchmarkSeverityPtrOutput
}

type cisBenchmarkSeverityPtr string

func CisBenchmarkSeverityPtr(v string) CisBenchmarkSeverityPtrInput {
	return (*cisBenchmarkSeverityPtr)(&v)
}

func (*cisBenchmarkSeverityPtr) ElementType() reflect.Type {
	return cisBenchmarkSeverityPtrType
}

func (in *cisBenchmarkSeverityPtr) ToCisBenchmarkSeverityPtrOutput() CisBenchmarkSeverityPtrOutput {
	return pulumi.ToOutput(in).(CisBenchmarkSeverityPtrOutput)
}

func (in *cisBenchmarkSeverityPtr) ToCisBenchmarkSeverityPtrOutputWithContext(ctx context.Context) CisBenchmarkSeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CisBenchmarkSeverityPtrOutput)
}

// Platform hosting this deployment.
type DeploymentOccurrencePlatform string

const (
	// Unknown.
	DeploymentOccurrencePlatformPlatformUnspecified = DeploymentOccurrencePlatform("PLATFORM_UNSPECIFIED")
	// Google Container Engine.
	DeploymentOccurrencePlatformGke = DeploymentOccurrencePlatform("GKE")
	// Google App Engine: Flexible Environment.
	DeploymentOccurrencePlatformFlex = DeploymentOccurrencePlatform("FLEX")
	// Custom user-defined platform.
	DeploymentOccurrencePlatformCustom = DeploymentOccurrencePlatform("CUSTOM")
)

func (DeploymentOccurrencePlatform) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentOccurrencePlatform)(nil)).Elem()
}

func (e DeploymentOccurrencePlatform) ToDeploymentOccurrencePlatformOutput() DeploymentOccurrencePlatformOutput {
	return pulumi.ToOutput(e).(DeploymentOccurrencePlatformOutput)
}

func (e DeploymentOccurrencePlatform) ToDeploymentOccurrencePlatformOutputWithContext(ctx context.Context) DeploymentOccurrencePlatformOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DeploymentOccurrencePlatformOutput)
}

func (e DeploymentOccurrencePlatform) ToDeploymentOccurrencePlatformPtrOutput() DeploymentOccurrencePlatformPtrOutput {
	return e.ToDeploymentOccurrencePlatformPtrOutputWithContext(context.Background())
}

func (e DeploymentOccurrencePlatform) ToDeploymentOccurrencePlatformPtrOutputWithContext(ctx context.Context) DeploymentOccurrencePlatformPtrOutput {
	return DeploymentOccurrencePlatform(e).ToDeploymentOccurrencePlatformOutputWithContext(ctx).ToDeploymentOccurrencePlatformPtrOutputWithContext(ctx)
}

func (e DeploymentOccurrencePlatform) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeploymentOccurrencePlatform) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeploymentOccurrencePlatform) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DeploymentOccurrencePlatform) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DeploymentOccurrencePlatformOutput struct{ *pulumi.OutputState }

func (DeploymentOccurrencePlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentOccurrencePlatform)(nil)).Elem()
}

func (o DeploymentOccurrencePlatformOutput) ToDeploymentOccurrencePlatformOutput() DeploymentOccurrencePlatformOutput {
	return o
}

func (o DeploymentOccurrencePlatformOutput) ToDeploymentOccurrencePlatformOutputWithContext(ctx context.Context) DeploymentOccurrencePlatformOutput {
	return o
}

func (o DeploymentOccurrencePlatformOutput) ToDeploymentOccurrencePlatformPtrOutput() DeploymentOccurrencePlatformPtrOutput {
	return o.ToDeploymentOccurrencePlatformPtrOutputWithContext(context.Background())
}

func (o DeploymentOccurrencePlatformOutput) ToDeploymentOccurrencePlatformPtrOutputWithContext(ctx context.Context) DeploymentOccurrencePlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentOccurrencePlatform) *DeploymentOccurrencePlatform {
		return &v
	}).(DeploymentOccurrencePlatformPtrOutput)
}

func (o DeploymentOccurrencePlatformOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DeploymentOccurrencePlatformOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeploymentOccurrencePlatform) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DeploymentOccurrencePlatformOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeploymentOccurrencePlatformOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeploymentOccurrencePlatform) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DeploymentOccurrencePlatformPtrOutput struct{ *pulumi.OutputState }

func (DeploymentOccurrencePlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentOccurrencePlatform)(nil)).Elem()
}

func (o DeploymentOccurrencePlatformPtrOutput) ToDeploymentOccurrencePlatformPtrOutput() DeploymentOccurrencePlatformPtrOutput {
	return o
}

func (o DeploymentOccurrencePlatformPtrOutput) ToDeploymentOccurrencePlatformPtrOutputWithContext(ctx context.Context) DeploymentOccurrencePlatformPtrOutput {
	return o
}

func (o DeploymentOccurrencePlatformPtrOutput) Elem() DeploymentOccurrencePlatformOutput {
	return o.ApplyT(func(v *DeploymentOccurrencePlatform) DeploymentOccurrencePlatform {
		if v != nil {
			return *v
		}
		var ret DeploymentOccurrencePlatform
		return ret
	}).(DeploymentOccurrencePlatformOutput)
}

func (o DeploymentOccurrencePlatformPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeploymentOccurrencePlatformPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DeploymentOccurrencePlatform) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DeploymentOccurrencePlatformInput is an input type that accepts DeploymentOccurrencePlatformArgs and DeploymentOccurrencePlatformOutput values.
// You can construct a concrete instance of `DeploymentOccurrencePlatformInput` via:
//
//          DeploymentOccurrencePlatformArgs{...}
type DeploymentOccurrencePlatformInput interface {
	pulumi.Input

	ToDeploymentOccurrencePlatformOutput() DeploymentOccurrencePlatformOutput
	ToDeploymentOccurrencePlatformOutputWithContext(context.Context) DeploymentOccurrencePlatformOutput
}

var deploymentOccurrencePlatformPtrType = reflect.TypeOf((**DeploymentOccurrencePlatform)(nil)).Elem()

type DeploymentOccurrencePlatformPtrInput interface {
	pulumi.Input

	ToDeploymentOccurrencePlatformPtrOutput() DeploymentOccurrencePlatformPtrOutput
	ToDeploymentOccurrencePlatformPtrOutputWithContext(context.Context) DeploymentOccurrencePlatformPtrOutput
}

type deploymentOccurrencePlatformPtr string

func DeploymentOccurrencePlatformPtr(v string) DeploymentOccurrencePlatformPtrInput {
	return (*deploymentOccurrencePlatformPtr)(&v)
}

func (*deploymentOccurrencePlatformPtr) ElementType() reflect.Type {
	return deploymentOccurrencePlatformPtrType
}

func (in *deploymentOccurrencePlatformPtr) ToDeploymentOccurrencePlatformPtrOutput() DeploymentOccurrencePlatformPtrOutput {
	return pulumi.ToOutput(in).(DeploymentOccurrencePlatformPtrOutput)
}

func (in *deploymentOccurrencePlatformPtr) ToDeploymentOccurrencePlatformPtrOutputWithContext(ctx context.Context) DeploymentOccurrencePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DeploymentOccurrencePlatformPtrOutput)
}

// Required. Immutable. The kind of analysis that is handled by this discovery.
type DiscoveryNoteAnalysisKind string

const (
	// Default value. This value is unused.
	DiscoveryNoteAnalysisKindNoteKindUnspecified = DiscoveryNoteAnalysisKind("NOTE_KIND_UNSPECIFIED")
	// The note and occurrence represent a package vulnerability.
	DiscoveryNoteAnalysisKindVulnerability = DiscoveryNoteAnalysisKind("VULNERABILITY")
	// The note and occurrence assert build provenance.
	DiscoveryNoteAnalysisKindBuild = DiscoveryNoteAnalysisKind("BUILD")
	// This represents an image basis relationship.
	DiscoveryNoteAnalysisKindImage = DiscoveryNoteAnalysisKind("IMAGE")
	// This represents a package installed via a package manager.
	DiscoveryNoteAnalysisKindPackage = DiscoveryNoteAnalysisKind("PACKAGE")
	// The note and occurrence track deployment events.
	DiscoveryNoteAnalysisKindDeployment = DiscoveryNoteAnalysisKind("DEPLOYMENT")
	// The note and occurrence track the initial discovery status of a resource.
	DiscoveryNoteAnalysisKindDiscovery = DiscoveryNoteAnalysisKind("DISCOVERY")
	// This represents a logical "role" that can attest to artifacts.
	DiscoveryNoteAnalysisKindAttestation = DiscoveryNoteAnalysisKind("ATTESTATION")
	// This represents an available package upgrade.
	DiscoveryNoteAnalysisKindUpgrade = DiscoveryNoteAnalysisKind("UPGRADE")
	// This represents a Compliance Note
	DiscoveryNoteAnalysisKindCompliance = DiscoveryNoteAnalysisKind("COMPLIANCE")
	// This represents a DSSE attestation Note
	DiscoveryNoteAnalysisKindDsseAttestation = DiscoveryNoteAnalysisKind("DSSE_ATTESTATION")
)

func (DiscoveryNoteAnalysisKind) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryNoteAnalysisKind)(nil)).Elem()
}

func (e DiscoveryNoteAnalysisKind) ToDiscoveryNoteAnalysisKindOutput() DiscoveryNoteAnalysisKindOutput {
	return pulumi.ToOutput(e).(DiscoveryNoteAnalysisKindOutput)
}

func (e DiscoveryNoteAnalysisKind) ToDiscoveryNoteAnalysisKindOutputWithContext(ctx context.Context) DiscoveryNoteAnalysisKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiscoveryNoteAnalysisKindOutput)
}

func (e DiscoveryNoteAnalysisKind) ToDiscoveryNoteAnalysisKindPtrOutput() DiscoveryNoteAnalysisKindPtrOutput {
	return e.ToDiscoveryNoteAnalysisKindPtrOutputWithContext(context.Background())
}

func (e DiscoveryNoteAnalysisKind) ToDiscoveryNoteAnalysisKindPtrOutputWithContext(ctx context.Context) DiscoveryNoteAnalysisKindPtrOutput {
	return DiscoveryNoteAnalysisKind(e).ToDiscoveryNoteAnalysisKindOutputWithContext(ctx).ToDiscoveryNoteAnalysisKindPtrOutputWithContext(ctx)
}

func (e DiscoveryNoteAnalysisKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryNoteAnalysisKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryNoteAnalysisKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscoveryNoteAnalysisKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiscoveryNoteAnalysisKindOutput struct{ *pulumi.OutputState }

func (DiscoveryNoteAnalysisKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryNoteAnalysisKind)(nil)).Elem()
}

func (o DiscoveryNoteAnalysisKindOutput) ToDiscoveryNoteAnalysisKindOutput() DiscoveryNoteAnalysisKindOutput {
	return o
}

func (o DiscoveryNoteAnalysisKindOutput) ToDiscoveryNoteAnalysisKindOutputWithContext(ctx context.Context) DiscoveryNoteAnalysisKindOutput {
	return o
}

func (o DiscoveryNoteAnalysisKindOutput) ToDiscoveryNoteAnalysisKindPtrOutput() DiscoveryNoteAnalysisKindPtrOutput {
	return o.ToDiscoveryNoteAnalysisKindPtrOutputWithContext(context.Background())
}

func (o DiscoveryNoteAnalysisKindOutput) ToDiscoveryNoteAnalysisKindPtrOutputWithContext(ctx context.Context) DiscoveryNoteAnalysisKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiscoveryNoteAnalysisKind) *DiscoveryNoteAnalysisKind {
		return &v
	}).(DiscoveryNoteAnalysisKindPtrOutput)
}

func (o DiscoveryNoteAnalysisKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiscoveryNoteAnalysisKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscoveryNoteAnalysisKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiscoveryNoteAnalysisKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscoveryNoteAnalysisKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscoveryNoteAnalysisKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiscoveryNoteAnalysisKindPtrOutput struct{ *pulumi.OutputState }

func (DiscoveryNoteAnalysisKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryNoteAnalysisKind)(nil)).Elem()
}

func (o DiscoveryNoteAnalysisKindPtrOutput) ToDiscoveryNoteAnalysisKindPtrOutput() DiscoveryNoteAnalysisKindPtrOutput {
	return o
}

func (o DiscoveryNoteAnalysisKindPtrOutput) ToDiscoveryNoteAnalysisKindPtrOutputWithContext(ctx context.Context) DiscoveryNoteAnalysisKindPtrOutput {
	return o
}

func (o DiscoveryNoteAnalysisKindPtrOutput) Elem() DiscoveryNoteAnalysisKindOutput {
	return o.ApplyT(func(v *DiscoveryNoteAnalysisKind) DiscoveryNoteAnalysisKind {
		if v != nil {
			return *v
		}
		var ret DiscoveryNoteAnalysisKind
		return ret
	}).(DiscoveryNoteAnalysisKindOutput)
}

func (o DiscoveryNoteAnalysisKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscoveryNoteAnalysisKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiscoveryNoteAnalysisKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiscoveryNoteAnalysisKindInput is an input type that accepts DiscoveryNoteAnalysisKindArgs and DiscoveryNoteAnalysisKindOutput values.
// You can construct a concrete instance of `DiscoveryNoteAnalysisKindInput` via:
//
//          DiscoveryNoteAnalysisKindArgs{...}
type DiscoveryNoteAnalysisKindInput interface {
	pulumi.Input

	ToDiscoveryNoteAnalysisKindOutput() DiscoveryNoteAnalysisKindOutput
	ToDiscoveryNoteAnalysisKindOutputWithContext(context.Context) DiscoveryNoteAnalysisKindOutput
}

var discoveryNoteAnalysisKindPtrType = reflect.TypeOf((**DiscoveryNoteAnalysisKind)(nil)).Elem()

type DiscoveryNoteAnalysisKindPtrInput interface {
	pulumi.Input

	ToDiscoveryNoteAnalysisKindPtrOutput() DiscoveryNoteAnalysisKindPtrOutput
	ToDiscoveryNoteAnalysisKindPtrOutputWithContext(context.Context) DiscoveryNoteAnalysisKindPtrOutput
}

type discoveryNoteAnalysisKindPtr string

func DiscoveryNoteAnalysisKindPtr(v string) DiscoveryNoteAnalysisKindPtrInput {
	return (*discoveryNoteAnalysisKindPtr)(&v)
}

func (*discoveryNoteAnalysisKindPtr) ElementType() reflect.Type {
	return discoveryNoteAnalysisKindPtrType
}

func (in *discoveryNoteAnalysisKindPtr) ToDiscoveryNoteAnalysisKindPtrOutput() DiscoveryNoteAnalysisKindPtrOutput {
	return pulumi.ToOutput(in).(DiscoveryNoteAnalysisKindPtrOutput)
}

func (in *discoveryNoteAnalysisKindPtr) ToDiscoveryNoteAnalysisKindPtrOutputWithContext(ctx context.Context) DiscoveryNoteAnalysisKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiscoveryNoteAnalysisKindPtrOutput)
}

// The status of discovery for the resource.
type DiscoveryOccurrenceAnalysisStatus string

const (
	// Unknown.
	DiscoveryOccurrenceAnalysisStatusAnalysisStatusUnspecified = DiscoveryOccurrenceAnalysisStatus("ANALYSIS_STATUS_UNSPECIFIED")
	// Resource is known but no action has been taken yet.
	DiscoveryOccurrenceAnalysisStatusPending = DiscoveryOccurrenceAnalysisStatus("PENDING")
	// Resource is being analyzed.
	DiscoveryOccurrenceAnalysisStatusScanning = DiscoveryOccurrenceAnalysisStatus("SCANNING")
	// Analysis has finished successfully.
	DiscoveryOccurrenceAnalysisStatusFinishedSuccess = DiscoveryOccurrenceAnalysisStatus("FINISHED_SUCCESS")
	// Analysis has finished unsuccessfully, the analysis itself is in a bad state.
	DiscoveryOccurrenceAnalysisStatusFinishedFailed = DiscoveryOccurrenceAnalysisStatus("FINISHED_FAILED")
	// The resource is known not to be supported
	DiscoveryOccurrenceAnalysisStatusFinishedUnsupported = DiscoveryOccurrenceAnalysisStatus("FINISHED_UNSUPPORTED")
)

func (DiscoveryOccurrenceAnalysisStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryOccurrenceAnalysisStatus)(nil)).Elem()
}

func (e DiscoveryOccurrenceAnalysisStatus) ToDiscoveryOccurrenceAnalysisStatusOutput() DiscoveryOccurrenceAnalysisStatusOutput {
	return pulumi.ToOutput(e).(DiscoveryOccurrenceAnalysisStatusOutput)
}

func (e DiscoveryOccurrenceAnalysisStatus) ToDiscoveryOccurrenceAnalysisStatusOutputWithContext(ctx context.Context) DiscoveryOccurrenceAnalysisStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiscoveryOccurrenceAnalysisStatusOutput)
}

func (e DiscoveryOccurrenceAnalysisStatus) ToDiscoveryOccurrenceAnalysisStatusPtrOutput() DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return e.ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(context.Background())
}

func (e DiscoveryOccurrenceAnalysisStatus) ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return DiscoveryOccurrenceAnalysisStatus(e).ToDiscoveryOccurrenceAnalysisStatusOutputWithContext(ctx).ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(ctx)
}

func (e DiscoveryOccurrenceAnalysisStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryOccurrenceAnalysisStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryOccurrenceAnalysisStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscoveryOccurrenceAnalysisStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiscoveryOccurrenceAnalysisStatusOutput struct{ *pulumi.OutputState }

func (DiscoveryOccurrenceAnalysisStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryOccurrenceAnalysisStatus)(nil)).Elem()
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToDiscoveryOccurrenceAnalysisStatusOutput() DiscoveryOccurrenceAnalysisStatusOutput {
	return o
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToDiscoveryOccurrenceAnalysisStatusOutputWithContext(ctx context.Context) DiscoveryOccurrenceAnalysisStatusOutput {
	return o
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToDiscoveryOccurrenceAnalysisStatusPtrOutput() DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return o.ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiscoveryOccurrenceAnalysisStatus) *DiscoveryOccurrenceAnalysisStatus {
		return &v
	}).(DiscoveryOccurrenceAnalysisStatusPtrOutput)
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscoveryOccurrenceAnalysisStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceAnalysisStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscoveryOccurrenceAnalysisStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiscoveryOccurrenceAnalysisStatusPtrOutput struct{ *pulumi.OutputState }

func (DiscoveryOccurrenceAnalysisStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryOccurrenceAnalysisStatus)(nil)).Elem()
}

func (o DiscoveryOccurrenceAnalysisStatusPtrOutput) ToDiscoveryOccurrenceAnalysisStatusPtrOutput() DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return o
}

func (o DiscoveryOccurrenceAnalysisStatusPtrOutput) ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return o
}

func (o DiscoveryOccurrenceAnalysisStatusPtrOutput) Elem() DiscoveryOccurrenceAnalysisStatusOutput {
	return o.ApplyT(func(v *DiscoveryOccurrenceAnalysisStatus) DiscoveryOccurrenceAnalysisStatus {
		if v != nil {
			return *v
		}
		var ret DiscoveryOccurrenceAnalysisStatus
		return ret
	}).(DiscoveryOccurrenceAnalysisStatusOutput)
}

func (o DiscoveryOccurrenceAnalysisStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceAnalysisStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiscoveryOccurrenceAnalysisStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiscoveryOccurrenceAnalysisStatusInput is an input type that accepts DiscoveryOccurrenceAnalysisStatusArgs and DiscoveryOccurrenceAnalysisStatusOutput values.
// You can construct a concrete instance of `DiscoveryOccurrenceAnalysisStatusInput` via:
//
//          DiscoveryOccurrenceAnalysisStatusArgs{...}
type DiscoveryOccurrenceAnalysisStatusInput interface {
	pulumi.Input

	ToDiscoveryOccurrenceAnalysisStatusOutput() DiscoveryOccurrenceAnalysisStatusOutput
	ToDiscoveryOccurrenceAnalysisStatusOutputWithContext(context.Context) DiscoveryOccurrenceAnalysisStatusOutput
}

var discoveryOccurrenceAnalysisStatusPtrType = reflect.TypeOf((**DiscoveryOccurrenceAnalysisStatus)(nil)).Elem()

type DiscoveryOccurrenceAnalysisStatusPtrInput interface {
	pulumi.Input

	ToDiscoveryOccurrenceAnalysisStatusPtrOutput() DiscoveryOccurrenceAnalysisStatusPtrOutput
	ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(context.Context) DiscoveryOccurrenceAnalysisStatusPtrOutput
}

type discoveryOccurrenceAnalysisStatusPtr string

func DiscoveryOccurrenceAnalysisStatusPtr(v string) DiscoveryOccurrenceAnalysisStatusPtrInput {
	return (*discoveryOccurrenceAnalysisStatusPtr)(&v)
}

func (*discoveryOccurrenceAnalysisStatusPtr) ElementType() reflect.Type {
	return discoveryOccurrenceAnalysisStatusPtrType
}

func (in *discoveryOccurrenceAnalysisStatusPtr) ToDiscoveryOccurrenceAnalysisStatusPtrOutput() DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return pulumi.ToOutput(in).(DiscoveryOccurrenceAnalysisStatusPtrOutput)
}

func (in *discoveryOccurrenceAnalysisStatusPtr) ToDiscoveryOccurrenceAnalysisStatusPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceAnalysisStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiscoveryOccurrenceAnalysisStatusPtrOutput)
}

// Whether the resource is continuously analyzed.
type DiscoveryOccurrenceContinuousAnalysis string

const (
	// Unknown.
	DiscoveryOccurrenceContinuousAnalysisContinuousAnalysisUnspecified = DiscoveryOccurrenceContinuousAnalysis("CONTINUOUS_ANALYSIS_UNSPECIFIED")
	// The resource is continuously analyzed.
	DiscoveryOccurrenceContinuousAnalysisActive = DiscoveryOccurrenceContinuousAnalysis("ACTIVE")
	// The resource is ignored for continuous analysis.
	DiscoveryOccurrenceContinuousAnalysisInactive = DiscoveryOccurrenceContinuousAnalysis("INACTIVE")
)

func (DiscoveryOccurrenceContinuousAnalysis) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryOccurrenceContinuousAnalysis)(nil)).Elem()
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToDiscoveryOccurrenceContinuousAnalysisOutput() DiscoveryOccurrenceContinuousAnalysisOutput {
	return pulumi.ToOutput(e).(DiscoveryOccurrenceContinuousAnalysisOutput)
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToDiscoveryOccurrenceContinuousAnalysisOutputWithContext(ctx context.Context) DiscoveryOccurrenceContinuousAnalysisOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiscoveryOccurrenceContinuousAnalysisOutput)
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToDiscoveryOccurrenceContinuousAnalysisPtrOutput() DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return e.ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(context.Background())
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return DiscoveryOccurrenceContinuousAnalysis(e).ToDiscoveryOccurrenceContinuousAnalysisOutputWithContext(ctx).ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(ctx)
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscoveryOccurrenceContinuousAnalysis) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiscoveryOccurrenceContinuousAnalysisOutput struct{ *pulumi.OutputState }

func (DiscoveryOccurrenceContinuousAnalysisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscoveryOccurrenceContinuousAnalysis)(nil)).Elem()
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToDiscoveryOccurrenceContinuousAnalysisOutput() DiscoveryOccurrenceContinuousAnalysisOutput {
	return o
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToDiscoveryOccurrenceContinuousAnalysisOutputWithContext(ctx context.Context) DiscoveryOccurrenceContinuousAnalysisOutput {
	return o
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToDiscoveryOccurrenceContinuousAnalysisPtrOutput() DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return o.ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiscoveryOccurrenceContinuousAnalysis) *DiscoveryOccurrenceContinuousAnalysis {
		return &v
	}).(DiscoveryOccurrenceContinuousAnalysisPtrOutput)
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscoveryOccurrenceContinuousAnalysis) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceContinuousAnalysisOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscoveryOccurrenceContinuousAnalysis) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiscoveryOccurrenceContinuousAnalysisPtrOutput struct{ *pulumi.OutputState }

func (DiscoveryOccurrenceContinuousAnalysisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryOccurrenceContinuousAnalysis)(nil)).Elem()
}

func (o DiscoveryOccurrenceContinuousAnalysisPtrOutput) ToDiscoveryOccurrenceContinuousAnalysisPtrOutput() DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return o
}

func (o DiscoveryOccurrenceContinuousAnalysisPtrOutput) ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return o
}

func (o DiscoveryOccurrenceContinuousAnalysisPtrOutput) Elem() DiscoveryOccurrenceContinuousAnalysisOutput {
	return o.ApplyT(func(v *DiscoveryOccurrenceContinuousAnalysis) DiscoveryOccurrenceContinuousAnalysis {
		if v != nil {
			return *v
		}
		var ret DiscoveryOccurrenceContinuousAnalysis
		return ret
	}).(DiscoveryOccurrenceContinuousAnalysisOutput)
}

func (o DiscoveryOccurrenceContinuousAnalysisPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscoveryOccurrenceContinuousAnalysisPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiscoveryOccurrenceContinuousAnalysis) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiscoveryOccurrenceContinuousAnalysisInput is an input type that accepts DiscoveryOccurrenceContinuousAnalysisArgs and DiscoveryOccurrenceContinuousAnalysisOutput values.
// You can construct a concrete instance of `DiscoveryOccurrenceContinuousAnalysisInput` via:
//
//          DiscoveryOccurrenceContinuousAnalysisArgs{...}
type DiscoveryOccurrenceContinuousAnalysisInput interface {
	pulumi.Input

	ToDiscoveryOccurrenceContinuousAnalysisOutput() DiscoveryOccurrenceContinuousAnalysisOutput
	ToDiscoveryOccurrenceContinuousAnalysisOutputWithContext(context.Context) DiscoveryOccurrenceContinuousAnalysisOutput
}

var discoveryOccurrenceContinuousAnalysisPtrType = reflect.TypeOf((**DiscoveryOccurrenceContinuousAnalysis)(nil)).Elem()

type DiscoveryOccurrenceContinuousAnalysisPtrInput interface {
	pulumi.Input

	ToDiscoveryOccurrenceContinuousAnalysisPtrOutput() DiscoveryOccurrenceContinuousAnalysisPtrOutput
	ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(context.Context) DiscoveryOccurrenceContinuousAnalysisPtrOutput
}

type discoveryOccurrenceContinuousAnalysisPtr string

func DiscoveryOccurrenceContinuousAnalysisPtr(v string) DiscoveryOccurrenceContinuousAnalysisPtrInput {
	return (*discoveryOccurrenceContinuousAnalysisPtr)(&v)
}

func (*discoveryOccurrenceContinuousAnalysisPtr) ElementType() reflect.Type {
	return discoveryOccurrenceContinuousAnalysisPtrType
}

func (in *discoveryOccurrenceContinuousAnalysisPtr) ToDiscoveryOccurrenceContinuousAnalysisPtrOutput() DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return pulumi.ToOutput(in).(DiscoveryOccurrenceContinuousAnalysisPtrOutput)
}

func (in *discoveryOccurrenceContinuousAnalysisPtr) ToDiscoveryOccurrenceContinuousAnalysisPtrOutputWithContext(ctx context.Context) DiscoveryOccurrenceContinuousAnalysisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiscoveryOccurrenceContinuousAnalysisPtrOutput)
}

// The CPU architecture for which packages in this distribution channel were built.
type DistributionArchitecture string

const (
	// Unknown architecture.
	DistributionArchitectureArchitectureUnspecified = DistributionArchitecture("ARCHITECTURE_UNSPECIFIED")
	// X86 architecture.
	DistributionArchitectureX86 = DistributionArchitecture("X86")
	// X64 architecture.
	DistributionArchitectureX64 = DistributionArchitecture("X64")
)

func (DistributionArchitecture) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionArchitecture)(nil)).Elem()
}

func (e DistributionArchitecture) ToDistributionArchitectureOutput() DistributionArchitectureOutput {
	return pulumi.ToOutput(e).(DistributionArchitectureOutput)
}

func (e DistributionArchitecture) ToDistributionArchitectureOutputWithContext(ctx context.Context) DistributionArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DistributionArchitectureOutput)
}

func (e DistributionArchitecture) ToDistributionArchitecturePtrOutput() DistributionArchitecturePtrOutput {
	return e.ToDistributionArchitecturePtrOutputWithContext(context.Background())
}

func (e DistributionArchitecture) ToDistributionArchitecturePtrOutputWithContext(ctx context.Context) DistributionArchitecturePtrOutput {
	return DistributionArchitecture(e).ToDistributionArchitectureOutputWithContext(ctx).ToDistributionArchitecturePtrOutputWithContext(ctx)
}

func (e DistributionArchitecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DistributionArchitecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DistributionArchitecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DistributionArchitecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DistributionArchitectureOutput struct{ *pulumi.OutputState }

func (DistributionArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionArchitecture)(nil)).Elem()
}

func (o DistributionArchitectureOutput) ToDistributionArchitectureOutput() DistributionArchitectureOutput {
	return o
}

func (o DistributionArchitectureOutput) ToDistributionArchitectureOutputWithContext(ctx context.Context) DistributionArchitectureOutput {
	return o
}

func (o DistributionArchitectureOutput) ToDistributionArchitecturePtrOutput() DistributionArchitecturePtrOutput {
	return o.ToDistributionArchitecturePtrOutputWithContext(context.Background())
}

func (o DistributionArchitectureOutput) ToDistributionArchitecturePtrOutputWithContext(ctx context.Context) DistributionArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionArchitecture) *DistributionArchitecture {
		return &v
	}).(DistributionArchitecturePtrOutput)
}

func (o DistributionArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DistributionArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DistributionArchitecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DistributionArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DistributionArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DistributionArchitecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DistributionArchitecturePtrOutput struct{ *pulumi.OutputState }

func (DistributionArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionArchitecture)(nil)).Elem()
}

func (o DistributionArchitecturePtrOutput) ToDistributionArchitecturePtrOutput() DistributionArchitecturePtrOutput {
	return o
}

func (o DistributionArchitecturePtrOutput) ToDistributionArchitecturePtrOutputWithContext(ctx context.Context) DistributionArchitecturePtrOutput {
	return o
}

func (o DistributionArchitecturePtrOutput) Elem() DistributionArchitectureOutput {
	return o.ApplyT(func(v *DistributionArchitecture) DistributionArchitecture {
		if v != nil {
			return *v
		}
		var ret DistributionArchitecture
		return ret
	}).(DistributionArchitectureOutput)
}

func (o DistributionArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DistributionArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DistributionArchitecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DistributionArchitectureInput is an input type that accepts DistributionArchitectureArgs and DistributionArchitectureOutput values.
// You can construct a concrete instance of `DistributionArchitectureInput` via:
//
//          DistributionArchitectureArgs{...}
type DistributionArchitectureInput interface {
	pulumi.Input

	ToDistributionArchitectureOutput() DistributionArchitectureOutput
	ToDistributionArchitectureOutputWithContext(context.Context) DistributionArchitectureOutput
}

var distributionArchitecturePtrType = reflect.TypeOf((**DistributionArchitecture)(nil)).Elem()

type DistributionArchitecturePtrInput interface {
	pulumi.Input

	ToDistributionArchitecturePtrOutput() DistributionArchitecturePtrOutput
	ToDistributionArchitecturePtrOutputWithContext(context.Context) DistributionArchitecturePtrOutput
}

type distributionArchitecturePtr string

func DistributionArchitecturePtr(v string) DistributionArchitecturePtrInput {
	return (*distributionArchitecturePtr)(&v)
}

func (*distributionArchitecturePtr) ElementType() reflect.Type {
	return distributionArchitecturePtrType
}

func (in *distributionArchitecturePtr) ToDistributionArchitecturePtrOutput() DistributionArchitecturePtrOutput {
	return pulumi.ToOutput(in).(DistributionArchitecturePtrOutput)
}

func (in *distributionArchitecturePtr) ToDistributionArchitecturePtrOutputWithContext(ctx context.Context) DistributionArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DistributionArchitecturePtrOutput)
}

// Required. Distinguishes between sentinel MIN/MAX versions and normal versions.
type VersionKind string

const (
	// Unknown.
	VersionKindVersionKindUnspecified = VersionKind("VERSION_KIND_UNSPECIFIED")
	// A standard package version.
	VersionKindNormal = VersionKind("NORMAL")
	// A special version representing negative infinity.
	VersionKindMinimum = VersionKind("MINIMUM")
	// A special version representing positive infinity.
	VersionKindMaximum = VersionKind("MAXIMUM")
)

func (VersionKind) ElementType() reflect.Type {
	return reflect.TypeOf((*VersionKind)(nil)).Elem()
}

func (e VersionKind) ToVersionKindOutput() VersionKindOutput {
	return pulumi.ToOutput(e).(VersionKindOutput)
}

func (e VersionKind) ToVersionKindOutputWithContext(ctx context.Context) VersionKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VersionKindOutput)
}

func (e VersionKind) ToVersionKindPtrOutput() VersionKindPtrOutput {
	return e.ToVersionKindPtrOutputWithContext(context.Background())
}

func (e VersionKind) ToVersionKindPtrOutputWithContext(ctx context.Context) VersionKindPtrOutput {
	return VersionKind(e).ToVersionKindOutputWithContext(ctx).ToVersionKindPtrOutputWithContext(ctx)
}

func (e VersionKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VersionKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VersionKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VersionKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VersionKindOutput struct{ *pulumi.OutputState }

func (VersionKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VersionKind)(nil)).Elem()
}

func (o VersionKindOutput) ToVersionKindOutput() VersionKindOutput {
	return o
}

func (o VersionKindOutput) ToVersionKindOutputWithContext(ctx context.Context) VersionKindOutput {
	return o
}

func (o VersionKindOutput) ToVersionKindPtrOutput() VersionKindPtrOutput {
	return o.ToVersionKindPtrOutputWithContext(context.Background())
}

func (o VersionKindOutput) ToVersionKindPtrOutputWithContext(ctx context.Context) VersionKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VersionKind) *VersionKind {
		return &v
	}).(VersionKindPtrOutput)
}

func (o VersionKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VersionKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VersionKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VersionKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VersionKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VersionKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VersionKindPtrOutput struct{ *pulumi.OutputState }

func (VersionKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VersionKind)(nil)).Elem()
}

func (o VersionKindPtrOutput) ToVersionKindPtrOutput() VersionKindPtrOutput {
	return o
}

func (o VersionKindPtrOutput) ToVersionKindPtrOutputWithContext(ctx context.Context) VersionKindPtrOutput {
	return o
}

func (o VersionKindPtrOutput) Elem() VersionKindOutput {
	return o.ApplyT(func(v *VersionKind) VersionKind {
		if v != nil {
			return *v
		}
		var ret VersionKind
		return ret
	}).(VersionKindOutput)
}

func (o VersionKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VersionKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VersionKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VersionKindInput is an input type that accepts VersionKindArgs and VersionKindOutput values.
// You can construct a concrete instance of `VersionKindInput` via:
//
//          VersionKindArgs{...}
type VersionKindInput interface {
	pulumi.Input

	ToVersionKindOutput() VersionKindOutput
	ToVersionKindOutputWithContext(context.Context) VersionKindOutput
}

var versionKindPtrType = reflect.TypeOf((**VersionKind)(nil)).Elem()

type VersionKindPtrInput interface {
	pulumi.Input

	ToVersionKindPtrOutput() VersionKindPtrOutput
	ToVersionKindPtrOutputWithContext(context.Context) VersionKindPtrOutput
}

type versionKindPtr string

func VersionKindPtr(v string) VersionKindPtrInput {
	return (*versionKindPtr)(&v)
}

func (*versionKindPtr) ElementType() reflect.Type {
	return versionKindPtrType
}

func (in *versionKindPtr) ToVersionKindPtrOutput() VersionKindPtrOutput {
	return pulumi.ToOutput(in).(VersionKindPtrOutput)
}

func (in *versionKindPtr) ToVersionKindPtrOutputWithContext(ctx context.Context) VersionKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VersionKindPtrOutput)
}

// The note provider assigned severity of this vulnerability.
type VulnerabilityNoteSeverity string

const (
	// Unknown.
	VulnerabilityNoteSeveritySeverityUnspecified = VulnerabilityNoteSeverity("SEVERITY_UNSPECIFIED")
	// Minimal severity.
	VulnerabilityNoteSeverityMinimal = VulnerabilityNoteSeverity("MINIMAL")
	// Low severity.
	VulnerabilityNoteSeverityLow = VulnerabilityNoteSeverity("LOW")
	// Medium severity.
	VulnerabilityNoteSeverityMedium = VulnerabilityNoteSeverity("MEDIUM")
	// High severity.
	VulnerabilityNoteSeverityHigh = VulnerabilityNoteSeverity("HIGH")
	// Critical severity.
	VulnerabilityNoteSeverityCritical = VulnerabilityNoteSeverity("CRITICAL")
)

func (VulnerabilityNoteSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityNoteSeverity)(nil)).Elem()
}

func (e VulnerabilityNoteSeverity) ToVulnerabilityNoteSeverityOutput() VulnerabilityNoteSeverityOutput {
	return pulumi.ToOutput(e).(VulnerabilityNoteSeverityOutput)
}

func (e VulnerabilityNoteSeverity) ToVulnerabilityNoteSeverityOutputWithContext(ctx context.Context) VulnerabilityNoteSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VulnerabilityNoteSeverityOutput)
}

func (e VulnerabilityNoteSeverity) ToVulnerabilityNoteSeverityPtrOutput() VulnerabilityNoteSeverityPtrOutput {
	return e.ToVulnerabilityNoteSeverityPtrOutputWithContext(context.Background())
}

func (e VulnerabilityNoteSeverity) ToVulnerabilityNoteSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityNoteSeverityPtrOutput {
	return VulnerabilityNoteSeverity(e).ToVulnerabilityNoteSeverityOutputWithContext(ctx).ToVulnerabilityNoteSeverityPtrOutputWithContext(ctx)
}

func (e VulnerabilityNoteSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilityNoteSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilityNoteSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VulnerabilityNoteSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VulnerabilityNoteSeverityOutput struct{ *pulumi.OutputState }

func (VulnerabilityNoteSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityNoteSeverity)(nil)).Elem()
}

func (o VulnerabilityNoteSeverityOutput) ToVulnerabilityNoteSeverityOutput() VulnerabilityNoteSeverityOutput {
	return o
}

func (o VulnerabilityNoteSeverityOutput) ToVulnerabilityNoteSeverityOutputWithContext(ctx context.Context) VulnerabilityNoteSeverityOutput {
	return o
}

func (o VulnerabilityNoteSeverityOutput) ToVulnerabilityNoteSeverityPtrOutput() VulnerabilityNoteSeverityPtrOutput {
	return o.ToVulnerabilityNoteSeverityPtrOutputWithContext(context.Background())
}

func (o VulnerabilityNoteSeverityOutput) ToVulnerabilityNoteSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityNoteSeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VulnerabilityNoteSeverity) *VulnerabilityNoteSeverity {
		return &v
	}).(VulnerabilityNoteSeverityPtrOutput)
}

func (o VulnerabilityNoteSeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VulnerabilityNoteSeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VulnerabilityNoteSeverity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VulnerabilityNoteSeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VulnerabilityNoteSeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VulnerabilityNoteSeverity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VulnerabilityNoteSeverityPtrOutput struct{ *pulumi.OutputState }

func (VulnerabilityNoteSeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityNoteSeverity)(nil)).Elem()
}

func (o VulnerabilityNoteSeverityPtrOutput) ToVulnerabilityNoteSeverityPtrOutput() VulnerabilityNoteSeverityPtrOutput {
	return o
}

func (o VulnerabilityNoteSeverityPtrOutput) ToVulnerabilityNoteSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityNoteSeverityPtrOutput {
	return o
}

func (o VulnerabilityNoteSeverityPtrOutput) Elem() VulnerabilityNoteSeverityOutput {
	return o.ApplyT(func(v *VulnerabilityNoteSeverity) VulnerabilityNoteSeverity {
		if v != nil {
			return *v
		}
		var ret VulnerabilityNoteSeverity
		return ret
	}).(VulnerabilityNoteSeverityOutput)
}

func (o VulnerabilityNoteSeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VulnerabilityNoteSeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VulnerabilityNoteSeverity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VulnerabilityNoteSeverityInput is an input type that accepts VulnerabilityNoteSeverityArgs and VulnerabilityNoteSeverityOutput values.
// You can construct a concrete instance of `VulnerabilityNoteSeverityInput` via:
//
//          VulnerabilityNoteSeverityArgs{...}
type VulnerabilityNoteSeverityInput interface {
	pulumi.Input

	ToVulnerabilityNoteSeverityOutput() VulnerabilityNoteSeverityOutput
	ToVulnerabilityNoteSeverityOutputWithContext(context.Context) VulnerabilityNoteSeverityOutput
}

var vulnerabilityNoteSeverityPtrType = reflect.TypeOf((**VulnerabilityNoteSeverity)(nil)).Elem()

type VulnerabilityNoteSeverityPtrInput interface {
	pulumi.Input

	ToVulnerabilityNoteSeverityPtrOutput() VulnerabilityNoteSeverityPtrOutput
	ToVulnerabilityNoteSeverityPtrOutputWithContext(context.Context) VulnerabilityNoteSeverityPtrOutput
}

type vulnerabilityNoteSeverityPtr string

func VulnerabilityNoteSeverityPtr(v string) VulnerabilityNoteSeverityPtrInput {
	return (*vulnerabilityNoteSeverityPtr)(&v)
}

func (*vulnerabilityNoteSeverityPtr) ElementType() reflect.Type {
	return vulnerabilityNoteSeverityPtrType
}

func (in *vulnerabilityNoteSeverityPtr) ToVulnerabilityNoteSeverityPtrOutput() VulnerabilityNoteSeverityPtrOutput {
	return pulumi.ToOutput(in).(VulnerabilityNoteSeverityPtrOutput)
}

func (in *vulnerabilityNoteSeverityPtr) ToVulnerabilityNoteSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityNoteSeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VulnerabilityNoteSeverityPtrOutput)
}

// The distro assigned severity for this vulnerability when it is available, otherwise this is the note provider assigned severity. When there are multiple PackageIssues for this vulnerability, they can have different effective severities because some might be provided by the distro while others are provided by the language ecosystem for a language pack. For this reason, it is advised to use the effective severity on the PackageIssue level. In the case where multiple PackageIssues have differing effective severities, this field should be the highest severity for any of the PackageIssues.
type VulnerabilityOccurrenceEffectiveSeverity string

const (
	// Unknown.
	VulnerabilityOccurrenceEffectiveSeveritySeverityUnspecified = VulnerabilityOccurrenceEffectiveSeverity("SEVERITY_UNSPECIFIED")
	// Minimal severity.
	VulnerabilityOccurrenceEffectiveSeverityMinimal = VulnerabilityOccurrenceEffectiveSeverity("MINIMAL")
	// Low severity.
	VulnerabilityOccurrenceEffectiveSeverityLow = VulnerabilityOccurrenceEffectiveSeverity("LOW")
	// Medium severity.
	VulnerabilityOccurrenceEffectiveSeverityMedium = VulnerabilityOccurrenceEffectiveSeverity("MEDIUM")
	// High severity.
	VulnerabilityOccurrenceEffectiveSeverityHigh = VulnerabilityOccurrenceEffectiveSeverity("HIGH")
	// Critical severity.
	VulnerabilityOccurrenceEffectiveSeverityCritical = VulnerabilityOccurrenceEffectiveSeverity("CRITICAL")
)

func (VulnerabilityOccurrenceEffectiveSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityOccurrenceEffectiveSeverity)(nil)).Elem()
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToVulnerabilityOccurrenceEffectiveSeverityOutput() VulnerabilityOccurrenceEffectiveSeverityOutput {
	return pulumi.ToOutput(e).(VulnerabilityOccurrenceEffectiveSeverityOutput)
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToVulnerabilityOccurrenceEffectiveSeverityOutputWithContext(ctx context.Context) VulnerabilityOccurrenceEffectiveSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VulnerabilityOccurrenceEffectiveSeverityOutput)
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutput() VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return e.ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(context.Background())
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return VulnerabilityOccurrenceEffectiveSeverity(e).ToVulnerabilityOccurrenceEffectiveSeverityOutputWithContext(ctx).ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(ctx)
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VulnerabilityOccurrenceEffectiveSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VulnerabilityOccurrenceEffectiveSeverityOutput struct{ *pulumi.OutputState }

func (VulnerabilityOccurrenceEffectiveSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityOccurrenceEffectiveSeverity)(nil)).Elem()
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToVulnerabilityOccurrenceEffectiveSeverityOutput() VulnerabilityOccurrenceEffectiveSeverityOutput {
	return o
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToVulnerabilityOccurrenceEffectiveSeverityOutputWithContext(ctx context.Context) VulnerabilityOccurrenceEffectiveSeverityOutput {
	return o
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutput() VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return o.ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(context.Background())
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VulnerabilityOccurrenceEffectiveSeverity) *VulnerabilityOccurrenceEffectiveSeverity {
		return &v
	}).(VulnerabilityOccurrenceEffectiveSeverityPtrOutput)
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VulnerabilityOccurrenceEffectiveSeverity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VulnerabilityOccurrenceEffectiveSeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VulnerabilityOccurrenceEffectiveSeverity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VulnerabilityOccurrenceEffectiveSeverityPtrOutput struct{ *pulumi.OutputState }

func (VulnerabilityOccurrenceEffectiveSeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityOccurrenceEffectiveSeverity)(nil)).Elem()
}

func (o VulnerabilityOccurrenceEffectiveSeverityPtrOutput) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutput() VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return o
}

func (o VulnerabilityOccurrenceEffectiveSeverityPtrOutput) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return o
}

func (o VulnerabilityOccurrenceEffectiveSeverityPtrOutput) Elem() VulnerabilityOccurrenceEffectiveSeverityOutput {
	return o.ApplyT(func(v *VulnerabilityOccurrenceEffectiveSeverity) VulnerabilityOccurrenceEffectiveSeverity {
		if v != nil {
			return *v
		}
		var ret VulnerabilityOccurrenceEffectiveSeverity
		return ret
	}).(VulnerabilityOccurrenceEffectiveSeverityOutput)
}

func (o VulnerabilityOccurrenceEffectiveSeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VulnerabilityOccurrenceEffectiveSeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VulnerabilityOccurrenceEffectiveSeverity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VulnerabilityOccurrenceEffectiveSeverityInput is an input type that accepts VulnerabilityOccurrenceEffectiveSeverityArgs and VulnerabilityOccurrenceEffectiveSeverityOutput values.
// You can construct a concrete instance of `VulnerabilityOccurrenceEffectiveSeverityInput` via:
//
//          VulnerabilityOccurrenceEffectiveSeverityArgs{...}
type VulnerabilityOccurrenceEffectiveSeverityInput interface {
	pulumi.Input

	ToVulnerabilityOccurrenceEffectiveSeverityOutput() VulnerabilityOccurrenceEffectiveSeverityOutput
	ToVulnerabilityOccurrenceEffectiveSeverityOutputWithContext(context.Context) VulnerabilityOccurrenceEffectiveSeverityOutput
}

var vulnerabilityOccurrenceEffectiveSeverityPtrType = reflect.TypeOf((**VulnerabilityOccurrenceEffectiveSeverity)(nil)).Elem()

type VulnerabilityOccurrenceEffectiveSeverityPtrInput interface {
	pulumi.Input

	ToVulnerabilityOccurrenceEffectiveSeverityPtrOutput() VulnerabilityOccurrenceEffectiveSeverityPtrOutput
	ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(context.Context) VulnerabilityOccurrenceEffectiveSeverityPtrOutput
}

type vulnerabilityOccurrenceEffectiveSeverityPtr string

func VulnerabilityOccurrenceEffectiveSeverityPtr(v string) VulnerabilityOccurrenceEffectiveSeverityPtrInput {
	return (*vulnerabilityOccurrenceEffectiveSeverityPtr)(&v)
}

func (*vulnerabilityOccurrenceEffectiveSeverityPtr) ElementType() reflect.Type {
	return vulnerabilityOccurrenceEffectiveSeverityPtrType
}

func (in *vulnerabilityOccurrenceEffectiveSeverityPtr) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutput() VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return pulumi.ToOutput(in).(VulnerabilityOccurrenceEffectiveSeverityPtrOutput)
}

func (in *vulnerabilityOccurrenceEffectiveSeverityPtr) ToVulnerabilityOccurrenceEffectiveSeverityPtrOutputWithContext(ctx context.Context) VulnerabilityOccurrenceEffectiveSeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VulnerabilityOccurrenceEffectiveSeverityPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AliasContextKindInput)(nil)).Elem(), AliasContextKind("KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AliasContextKindPtrInput)(nil)).Elem(), AliasContextKind("KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3AttackComplexityInput)(nil)).Elem(), CVSSv3AttackComplexity("ATTACK_COMPLEXITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3AttackComplexityPtrInput)(nil)).Elem(), CVSSv3AttackComplexity("ATTACK_COMPLEXITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3AttackVectorInput)(nil)).Elem(), CVSSv3AttackVector("ATTACK_VECTOR_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3AttackVectorPtrInput)(nil)).Elem(), CVSSv3AttackVector("ATTACK_VECTOR_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3AvailabilityImpactInput)(nil)).Elem(), CVSSv3AvailabilityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3AvailabilityImpactPtrInput)(nil)).Elem(), CVSSv3AvailabilityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3ConfidentialityImpactInput)(nil)).Elem(), CVSSv3ConfidentialityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3ConfidentialityImpactPtrInput)(nil)).Elem(), CVSSv3ConfidentialityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3IntegrityImpactInput)(nil)).Elem(), CVSSv3IntegrityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3IntegrityImpactPtrInput)(nil)).Elem(), CVSSv3IntegrityImpact("IMPACT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3PrivilegesRequiredInput)(nil)).Elem(), CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3PrivilegesRequiredPtrInput)(nil)).Elem(), CVSSv3PrivilegesRequired("PRIVILEGES_REQUIRED_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3ScopeInput)(nil)).Elem(), CVSSv3Scope("SCOPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3ScopePtrInput)(nil)).Elem(), CVSSv3Scope("SCOPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3UserInteractionInput)(nil)).Elem(), CVSSv3UserInteraction("USER_INTERACTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CVSSv3UserInteractionPtrInput)(nil)).Elem(), CVSSv3UserInteraction("USER_INTERACTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CisBenchmarkSeverityInput)(nil)).Elem(), CisBenchmarkSeverity("SEVERITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CisBenchmarkSeverityPtrInput)(nil)).Elem(), CisBenchmarkSeverity("SEVERITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentOccurrencePlatformInput)(nil)).Elem(), DeploymentOccurrencePlatform("PLATFORM_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentOccurrencePlatformPtrInput)(nil)).Elem(), DeploymentOccurrencePlatform("PLATFORM_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryNoteAnalysisKindInput)(nil)).Elem(), DiscoveryNoteAnalysisKind("NOTE_KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryNoteAnalysisKindPtrInput)(nil)).Elem(), DiscoveryNoteAnalysisKind("NOTE_KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryOccurrenceAnalysisStatusInput)(nil)).Elem(), DiscoveryOccurrenceAnalysisStatus("ANALYSIS_STATUS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryOccurrenceAnalysisStatusPtrInput)(nil)).Elem(), DiscoveryOccurrenceAnalysisStatus("ANALYSIS_STATUS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryOccurrenceContinuousAnalysisInput)(nil)).Elem(), DiscoveryOccurrenceContinuousAnalysis("CONTINUOUS_ANALYSIS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryOccurrenceContinuousAnalysisPtrInput)(nil)).Elem(), DiscoveryOccurrenceContinuousAnalysis("CONTINUOUS_ANALYSIS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionArchitectureInput)(nil)).Elem(), DistributionArchitecture("ARCHITECTURE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionArchitecturePtrInput)(nil)).Elem(), DistributionArchitecture("ARCHITECTURE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VersionKindInput)(nil)).Elem(), VersionKind("VERSION_KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VersionKindPtrInput)(nil)).Elem(), VersionKind("VERSION_KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityNoteSeverityInput)(nil)).Elem(), VulnerabilityNoteSeverity("SEVERITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityNoteSeverityPtrInput)(nil)).Elem(), VulnerabilityNoteSeverity("SEVERITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityOccurrenceEffectiveSeverityInput)(nil)).Elem(), VulnerabilityOccurrenceEffectiveSeverity("SEVERITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityOccurrenceEffectiveSeverityPtrInput)(nil)).Elem(), VulnerabilityOccurrenceEffectiveSeverity("SEVERITY_UNSPECIFIED"))
	pulumi.RegisterOutputType(AliasContextKindOutput{})
	pulumi.RegisterOutputType(AliasContextKindPtrOutput{})
	pulumi.RegisterOutputType(CVSSv3AttackComplexityOutput{})
	pulumi.RegisterOutputType(CVSSv3AttackComplexityPtrOutput{})
	pulumi.RegisterOutputType(CVSSv3AttackVectorOutput{})
	pulumi.RegisterOutputType(CVSSv3AttackVectorPtrOutput{})
	pulumi.RegisterOutputType(CVSSv3AvailabilityImpactOutput{})
	pulumi.RegisterOutputType(CVSSv3AvailabilityImpactPtrOutput{})
	pulumi.RegisterOutputType(CVSSv3ConfidentialityImpactOutput{})
	pulumi.RegisterOutputType(CVSSv3ConfidentialityImpactPtrOutput{})
	pulumi.RegisterOutputType(CVSSv3IntegrityImpactOutput{})
	pulumi.RegisterOutputType(CVSSv3IntegrityImpactPtrOutput{})
	pulumi.RegisterOutputType(CVSSv3PrivilegesRequiredOutput{})
	pulumi.RegisterOutputType(CVSSv3PrivilegesRequiredPtrOutput{})
	pulumi.RegisterOutputType(CVSSv3ScopeOutput{})
	pulumi.RegisterOutputType(CVSSv3ScopePtrOutput{})
	pulumi.RegisterOutputType(CVSSv3UserInteractionOutput{})
	pulumi.RegisterOutputType(CVSSv3UserInteractionPtrOutput{})
	pulumi.RegisterOutputType(CisBenchmarkSeverityOutput{})
	pulumi.RegisterOutputType(CisBenchmarkSeverityPtrOutput{})
	pulumi.RegisterOutputType(DeploymentOccurrencePlatformOutput{})
	pulumi.RegisterOutputType(DeploymentOccurrencePlatformPtrOutput{})
	pulumi.RegisterOutputType(DiscoveryNoteAnalysisKindOutput{})
	pulumi.RegisterOutputType(DiscoveryNoteAnalysisKindPtrOutput{})
	pulumi.RegisterOutputType(DiscoveryOccurrenceAnalysisStatusOutput{})
	pulumi.RegisterOutputType(DiscoveryOccurrenceAnalysisStatusPtrOutput{})
	pulumi.RegisterOutputType(DiscoveryOccurrenceContinuousAnalysisOutput{})
	pulumi.RegisterOutputType(DiscoveryOccurrenceContinuousAnalysisPtrOutput{})
	pulumi.RegisterOutputType(DistributionArchitectureOutput{})
	pulumi.RegisterOutputType(DistributionArchitecturePtrOutput{})
	pulumi.RegisterOutputType(VersionKindOutput{})
	pulumi.RegisterOutputType(VersionKindPtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityNoteSeverityOutput{})
	pulumi.RegisterOutputType(VulnerabilityNoteSeverityPtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityOccurrenceEffectiveSeverityOutput{})
	pulumi.RegisterOutputType(VulnerabilityOccurrenceEffectiveSeverityPtrOutput{})
}
