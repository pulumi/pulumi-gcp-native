// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The type of the key, either stored in `public_key` or referenced in `key_id`
type BuildSignatureKeyType pulumi.String

const (
	// `KeyType` is not set.
	BuildSignatureKeyTypeKeyTypeUnspecified = BuildSignatureKeyType("KEY_TYPE_UNSPECIFIED")
	// `PGP ASCII Armored` public key.
	BuildSignatureKeyTypePgpAsciiArmored = BuildSignatureKeyType("PGP_ASCII_ARMORED")
	// `PKIX PEM` public key.
	BuildSignatureKeyTypePkixPem = BuildSignatureKeyType("PKIX_PEM")
)

func (BuildSignatureKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e BuildSignatureKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildSignatureKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildSignatureKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BuildSignatureKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The severity level of this CIS benchmark check.
type CisBenchmarkSeverity pulumi.String

const (
	// Unknown Impact
	CisBenchmarkSeveritySeverityUnspecified = CisBenchmarkSeverity("SEVERITY_UNSPECIFIED")
	// Minimal Impact
	CisBenchmarkSeverityMinimal = CisBenchmarkSeverity("MINIMAL")
	// Low Impact
	CisBenchmarkSeverityLow = CisBenchmarkSeverity("LOW")
	// Medium Impact
	CisBenchmarkSeverityMedium = CisBenchmarkSeverity("MEDIUM")
	// High Impact
	CisBenchmarkSeverityHigh = CisBenchmarkSeverity("HIGH")
	// Critical Impact
	CisBenchmarkSeverityCritical = CisBenchmarkSeverity("CRITICAL")
)

func (CisBenchmarkSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CisBenchmarkSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CisBenchmarkSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CisBenchmarkSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CisBenchmarkSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Platform hosting this deployment.
type DeploymentPlatform pulumi.String

const (
	// Unknown
	DeploymentPlatformPlatformUnspecified = DeploymentPlatform("PLATFORM_UNSPECIFIED")
	// Google Container Engine
	DeploymentPlatformGke = DeploymentPlatform("GKE")
	// Google App Engine: Flexible Environment
	DeploymentPlatformFlex = DeploymentPlatform("FLEX")
	// Custom user-defined platform
	DeploymentPlatformCustom = DeploymentPlatform("CUSTOM")
)

func (DeploymentPlatform) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DeploymentPlatform) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeploymentPlatform) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeploymentPlatform) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DeploymentPlatform) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The status of discovery for the resource.
type DiscoveredAnalysisStatus pulumi.String

const (
	// Unknown
	DiscoveredAnalysisStatusAnalysisStatusUnspecified = DiscoveredAnalysisStatus("ANALYSIS_STATUS_UNSPECIFIED")
	// Resource is known but no action has been taken yet.
	DiscoveredAnalysisStatusPending = DiscoveredAnalysisStatus("PENDING")
	// Resource is being analyzed.
	DiscoveredAnalysisStatusScanning = DiscoveredAnalysisStatus("SCANNING")
	// Analysis has finished successfully.
	DiscoveredAnalysisStatusFinishedSuccess = DiscoveredAnalysisStatus("FINISHED_SUCCESS")
	// Analysis has finished unsuccessfully, the analysis itself is in a bad state.
	DiscoveredAnalysisStatusFinishedFailed = DiscoveredAnalysisStatus("FINISHED_FAILED")
	// The resource is known not to be supported.
	DiscoveredAnalysisStatusFinishedUnsupported = DiscoveredAnalysisStatus("FINISHED_UNSUPPORTED")
)

func (DiscoveredAnalysisStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DiscoveredAnalysisStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveredAnalysisStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveredAnalysisStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscoveredAnalysisStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Whether the resource is continuously analyzed.
type DiscoveredContinuousAnalysis pulumi.String

const (
	// Unknown
	DiscoveredContinuousAnalysisContinuousAnalysisUnspecified = DiscoveredContinuousAnalysis("CONTINUOUS_ANALYSIS_UNSPECIFIED")
	// The resource is continuously analyzed.
	DiscoveredContinuousAnalysisActive = DiscoveredContinuousAnalysis("ACTIVE")
	// The resource is ignored for continuous analysis.
	DiscoveredContinuousAnalysisInactive = DiscoveredContinuousAnalysis("INACTIVE")
)

func (DiscoveredContinuousAnalysis) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DiscoveredContinuousAnalysis) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveredContinuousAnalysis) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveredContinuousAnalysis) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscoveredContinuousAnalysis) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The kind of analysis that is handled by this discovery.
type DiscoveryAnalysisKind pulumi.String

const (
	// Unknown
	DiscoveryAnalysisKindKindUnspecified = DiscoveryAnalysisKind("KIND_UNSPECIFIED")
	// The note and occurrence represent a package vulnerability.
	DiscoveryAnalysisKindPackageVulnerability = DiscoveryAnalysisKind("PACKAGE_VULNERABILITY")
	// The note and occurrence assert build provenance.
	DiscoveryAnalysisKindBuildDetails = DiscoveryAnalysisKind("BUILD_DETAILS")
	// This represents an image basis relationship.
	DiscoveryAnalysisKindImageBasis = DiscoveryAnalysisKind("IMAGE_BASIS")
	// This represents a package installed via a package manager.
	DiscoveryAnalysisKindPackageManager = DiscoveryAnalysisKind("PACKAGE_MANAGER")
	// The note and occurrence track deployment events.
	DiscoveryAnalysisKindDeployable = DiscoveryAnalysisKind("DEPLOYABLE")
	// The note and occurrence track the initial discovery status of a resource.
	DiscoveryAnalysisKindDiscovery = DiscoveryAnalysisKind("DISCOVERY")
	// This represents a logical "role" that can attest to artifacts.
	DiscoveryAnalysisKindAttestationAuthority = DiscoveryAnalysisKind("ATTESTATION_AUTHORITY")
	// This represents an available software upgrade.
	DiscoveryAnalysisKindUpgrade = DiscoveryAnalysisKind("UPGRADE")
	// This represents a compliance check that can be applied to a resource.
	DiscoveryAnalysisKindCompliance = DiscoveryAnalysisKind("COMPLIANCE")
)

func (DiscoveryAnalysisKind) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DiscoveryAnalysisKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryAnalysisKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscoveryAnalysisKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscoveryAnalysisKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The CPU architecture for which packages in this distribution channel were built
type DistributionArchitecture pulumi.String

const (
	// Unknown architecture
	DistributionArchitectureArchitectureUnspecified = DistributionArchitecture("ARCHITECTURE_UNSPECIFIED")
	// X86 architecture
	DistributionArchitectureX86 = DistributionArchitecture("X86")
	// X64 architecture
	DistributionArchitectureX64 = DistributionArchitecture("X64")
)

func (DistributionArchitecture) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DistributionArchitecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DistributionArchitecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DistributionArchitecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DistributionArchitecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The alias kind.
type GoogleDevtoolsContaineranalysisV1alpha1AliasContextKind pulumi.String

const (
	// Unknown.
	GoogleDevtoolsContaineranalysisV1alpha1AliasContextKindKindUnspecified = GoogleDevtoolsContaineranalysisV1alpha1AliasContextKind("KIND_UNSPECIFIED")
	// Git tag.
	GoogleDevtoolsContaineranalysisV1alpha1AliasContextKindFixed = GoogleDevtoolsContaineranalysisV1alpha1AliasContextKind("FIXED")
	// Git branch.
	GoogleDevtoolsContaineranalysisV1alpha1AliasContextKindMovable = GoogleDevtoolsContaineranalysisV1alpha1AliasContextKind("MOVABLE")
	// Used to specify non-standard aliases. For example, if a Git repo has a ref named "refs/foo/bar".
	GoogleDevtoolsContaineranalysisV1alpha1AliasContextKindOther = GoogleDevtoolsContaineranalysisV1alpha1AliasContextKind("OTHER")
)

func (GoogleDevtoolsContaineranalysisV1alpha1AliasContextKind) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleDevtoolsContaineranalysisV1alpha1AliasContextKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleDevtoolsContaineranalysisV1alpha1AliasContextKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleDevtoolsContaineranalysisV1alpha1AliasContextKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleDevtoolsContaineranalysisV1alpha1AliasContextKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The type of hash that was performed.
type HashType pulumi.String

const (
	// No hash requested.
	HashTypeNone = HashType("NONE")
	// A sha256 hash.
	HashTypeSha256 = HashType("SHA256")
)

func (HashType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e HashType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HashType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HashType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HashType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The recovered Dockerfile directive used to construct this layer.
type LayerDirective pulumi.String

const (
	// Default value for unsupported/missing directive
	LayerDirectiveDirectiveUnspecified = LayerDirective("DIRECTIVE_UNSPECIFIED")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveMaintainer = LayerDirective("MAINTAINER")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveRun = LayerDirective("RUN")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveCmd = LayerDirective("CMD")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveLabel = LayerDirective("LABEL")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveExpose = LayerDirective("EXPOSE")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveEnv = LayerDirective("ENV")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveAdd = LayerDirective("ADD")
	// https://docs.docker.com/reference/builder/#copy
	LayerDirectiveCopy = LayerDirective("COPY")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveEntrypoint = LayerDirective("ENTRYPOINT")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveVolume = LayerDirective("VOLUME")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveUser = LayerDirective("USER")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveWorkdir = LayerDirective("WORKDIR")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveArg = LayerDirective("ARG")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveOnbuild = LayerDirective("ONBUILD")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveStopsignal = LayerDirective("STOPSIGNAL")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveHealthcheck = LayerDirective("HEALTHCHECK")
	// https://docs.docker.com/engine/reference/builder/
	LayerDirectiveShell = LayerDirective("SHELL")
)

func (LayerDirective) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e LayerDirective) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LayerDirective) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LayerDirective) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LayerDirective) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Type (for example schema) of the attestation payload that was signed. The verifier must ensure that the provided type is one that the verifier supports, and that the attestation payload is a valid instantiation of that type (for example by validating a JSON schema).
type PgpSignedAttestationContentType pulumi.String

const (
	// `ContentType` is not set.
	PgpSignedAttestationContentTypeContentTypeUnspecified = PgpSignedAttestationContentType("CONTENT_TYPE_UNSPECIFIED")
	// Atomic format attestation signature. See https://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md The payload extracted from `signature` is a JSON blob conforming to the linked schema.
	PgpSignedAttestationContentTypeSimpleSigningJson = PgpSignedAttestationContentType("SIMPLE_SIGNING_JSON")
)

func (PgpSignedAttestationContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e PgpSignedAttestationContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PgpSignedAttestationContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PgpSignedAttestationContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PgpSignedAttestationContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Distinguish between sentinel MIN/MAX versions and normal versions. If kind is not NORMAL, then the other fields are ignored.
type VersionKind pulumi.String

const (
	// A standard package version, defined by the other fields.
	VersionKindNormal = VersionKind("NORMAL")
	// A special version representing negative infinity, other fields are ignored.
	VersionKindMinimum = VersionKind("MINIMUM")
	// A special version representing positive infinity, other fields are ignored.
	VersionKindMaximum = VersionKind("MAXIMUM")
)

func (VersionKind) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e VersionKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VersionKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VersionKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VersionKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The distro assigned severity for this vulnerability when that is available and note provider assigned severity when distro has not yet assigned a severity for this vulnerability.
type VulnerabilityDetailsEffectiveSeverity pulumi.String

const (
	// Unknown Impact
	VulnerabilityDetailsEffectiveSeveritySeverityUnspecified = VulnerabilityDetailsEffectiveSeverity("SEVERITY_UNSPECIFIED")
	// Minimal Impact
	VulnerabilityDetailsEffectiveSeverityMinimal = VulnerabilityDetailsEffectiveSeverity("MINIMAL")
	// Low Impact
	VulnerabilityDetailsEffectiveSeverityLow = VulnerabilityDetailsEffectiveSeverity("LOW")
	// Medium Impact
	VulnerabilityDetailsEffectiveSeverityMedium = VulnerabilityDetailsEffectiveSeverity("MEDIUM")
	// High Impact
	VulnerabilityDetailsEffectiveSeverityHigh = VulnerabilityDetailsEffectiveSeverity("HIGH")
	// Critical Impact
	VulnerabilityDetailsEffectiveSeverityCritical = VulnerabilityDetailsEffectiveSeverity("CRITICAL")
)

func (VulnerabilityDetailsEffectiveSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e VulnerabilityDetailsEffectiveSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilityDetailsEffectiveSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilityDetailsEffectiveSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VulnerabilityDetailsEffectiveSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Note provider assigned impact of the vulnerability
type VulnerabilityTypeSeverity pulumi.String

const (
	// Unknown Impact
	VulnerabilityTypeSeveritySeverityUnspecified = VulnerabilityTypeSeverity("SEVERITY_UNSPECIFIED")
	// Minimal Impact
	VulnerabilityTypeSeverityMinimal = VulnerabilityTypeSeverity("MINIMAL")
	// Low Impact
	VulnerabilityTypeSeverityLow = VulnerabilityTypeSeverity("LOW")
	// Medium Impact
	VulnerabilityTypeSeverityMedium = VulnerabilityTypeSeverity("MEDIUM")
	// High Impact
	VulnerabilityTypeSeverityHigh = VulnerabilityTypeSeverity("HIGH")
	// Critical Impact
	VulnerabilityTypeSeverityCritical = VulnerabilityTypeSeverity("CRITICAL")
)

func (VulnerabilityTypeSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e VulnerabilityTypeSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilityTypeSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VulnerabilityTypeSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VulnerabilityTypeSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
