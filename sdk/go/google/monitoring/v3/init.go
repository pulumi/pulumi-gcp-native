// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-google-cloud/sdk/go/google-cloud"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "google-cloud:monitoring/v3:AlertPolicy":
		r, err = NewAlertPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:monitoring/v3:CollectdTimeSeries":
		r, err = NewCollectdTimeSeries(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:monitoring/v3:Group":
		r, err = NewGroup(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:monitoring/v3:MetricDescriptor":
		r, err = NewMetricDescriptor(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:monitoring/v3:NotificationChannel":
		r, err = NewNotificationChannel(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:monitoring/v3:Service":
		r, err = NewService(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:monitoring/v3:ServiceServiceLevelObjective":
		r, err = NewServiceServiceLevelObjective(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:monitoring/v3:TimeSeries":
		r, err = NewTimeSeries(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:monitoring/v3:UptimeCheckConfig":
		r, err = NewUptimeCheckConfig(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := google - cloud.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"google-cloud",
		"monitoring/v3",
		&module{version},
	)
}
