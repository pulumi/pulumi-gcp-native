// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create a Service.
// Auto-naming is currently not supported for this resource.
type Service struct {
	pulumi.CustomResourceState

	// Type used for App Engine services.
	AppEngine AppEngineResponseOutput `pulumi:"appEngine"`
	// Type used for Cloud Endpoints services.
	CloudEndpoints CloudEndpointsResponseOutput `pulumi:"cloudEndpoints"`
	// Type used for Cloud Run services.
	CloudRun CloudRunResponseOutput `pulumi:"cloudRun"`
	// Type used for Istio services that live in a Kubernetes cluster.
	ClusterIstio ClusterIstioResponseOutput `pulumi:"clusterIstio"`
	// Custom service type.
	Custom CustomResponseOutput `pulumi:"custom"`
	// Name used for UI elements listing this Service.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Type used for GKE Namespaces.
	GkeNamespace GkeNamespaceResponseOutput `pulumi:"gkeNamespace"`
	// Type used for GKE Services (the Kubernetes concept of a service).
	GkeService GkeServiceResponseOutput `pulumi:"gkeService"`
	// Type used for GKE Workloads.
	GkeWorkload GkeWorkloadResponseOutput `pulumi:"gkeWorkload"`
	// Type used for canonical services scoped to an Istio mesh. Metrics for Istio are documented here (https://istio.io/latest/docs/reference/config/metrics/)
	IstioCanonicalService IstioCanonicalServiceResponseOutput `pulumi:"istioCanonicalService"`
	// Type used for Istio services scoped to an Istio mesh.
	MeshIstio MeshIstioResponseOutput `pulumi:"meshIstio"`
	// Resource name for this Service. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
	Name pulumi.StringOutput `pulumi:"name"`
	// Configuration for how to query telemetry on a Service.
	Telemetry TelemetryResponseOutput `pulumi:"telemetry"`
	// Labels which have been used to annotate the service. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
	UserLabels pulumi.StringMapOutput `pulumi:"userLabels"`
}

// NewService registers a new resource with the given unique name, arguments, and options.
func NewService(ctx *pulumi.Context,
	name string, args *ServiceArgs, opts ...pulumi.ResourceOption) (*Service, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.V3Id == nil {
		return nil, errors.New("invalid value for required argument 'V3Id'")
	}
	if args.V3Id1 == nil {
		return nil, errors.New("invalid value for required argument 'V3Id1'")
	}
	var resource Service
	err := ctx.RegisterResource("google-native:monitoring/v3:Service", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetService gets an existing Service resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceState, opts ...pulumi.ResourceOption) (*Service, error) {
	var resource Service
	err := ctx.ReadResource("google-native:monitoring/v3:Service", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Service resources.
type serviceState struct {
}

type ServiceState struct {
}

func (ServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceState)(nil)).Elem()
}

type serviceArgs struct {
	// Type used for App Engine services.
	AppEngine *AppEngine `pulumi:"appEngine"`
	// Type used for Cloud Endpoints services.
	CloudEndpoints *CloudEndpoints `pulumi:"cloudEndpoints"`
	// Type used for Cloud Run services.
	CloudRun *CloudRun `pulumi:"cloudRun"`
	// Type used for Istio services that live in a Kubernetes cluster.
	ClusterIstio *ClusterIstio `pulumi:"clusterIstio"`
	// Custom service type.
	Custom *Custom `pulumi:"custom"`
	// Name used for UI elements listing this Service.
	DisplayName *string `pulumi:"displayName"`
	// Type used for GKE Namespaces.
	GkeNamespace *GkeNamespace `pulumi:"gkeNamespace"`
	// Type used for GKE Services (the Kubernetes concept of a service).
	GkeService *GkeService `pulumi:"gkeService"`
	// Type used for GKE Workloads.
	GkeWorkload *GkeWorkload `pulumi:"gkeWorkload"`
	// Type used for canonical services scoped to an Istio mesh. Metrics for Istio are documented here (https://istio.io/latest/docs/reference/config/metrics/)
	IstioCanonicalService *IstioCanonicalService `pulumi:"istioCanonicalService"`
	// Type used for Istio services scoped to an Istio mesh.
	MeshIstio *MeshIstio `pulumi:"meshIstio"`
	// Resource name for this Service. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
	Name *string `pulumi:"name"`
	// Optional. The Service id to use for this Service. If omitted, an id will be generated instead. Must match the pattern [a-z0-9\-]+
	ServiceId *string `pulumi:"serviceId"`
	// Configuration for how to query telemetry on a Service.
	Telemetry *Telemetry `pulumi:"telemetry"`
	// Labels which have been used to annotate the service. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
	UserLabels map[string]string `pulumi:"userLabels"`
	V3Id       string            `pulumi:"v3Id"`
	V3Id1      string            `pulumi:"v3Id1"`
}

// The set of arguments for constructing a Service resource.
type ServiceArgs struct {
	// Type used for App Engine services.
	AppEngine AppEnginePtrInput
	// Type used for Cloud Endpoints services.
	CloudEndpoints CloudEndpointsPtrInput
	// Type used for Cloud Run services.
	CloudRun CloudRunPtrInput
	// Type used for Istio services that live in a Kubernetes cluster.
	ClusterIstio ClusterIstioPtrInput
	// Custom service type.
	Custom CustomPtrInput
	// Name used for UI elements listing this Service.
	DisplayName pulumi.StringPtrInput
	// Type used for GKE Namespaces.
	GkeNamespace GkeNamespacePtrInput
	// Type used for GKE Services (the Kubernetes concept of a service).
	GkeService GkeServicePtrInput
	// Type used for GKE Workloads.
	GkeWorkload GkeWorkloadPtrInput
	// Type used for canonical services scoped to an Istio mesh. Metrics for Istio are documented here (https://istio.io/latest/docs/reference/config/metrics/)
	IstioCanonicalService IstioCanonicalServicePtrInput
	// Type used for Istio services scoped to an Istio mesh.
	MeshIstio MeshIstioPtrInput
	// Resource name for this Service. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
	Name pulumi.StringPtrInput
	// Optional. The Service id to use for this Service. If omitted, an id will be generated instead. Must match the pattern [a-z0-9\-]+
	ServiceId pulumi.StringPtrInput
	// Configuration for how to query telemetry on a Service.
	Telemetry TelemetryPtrInput
	// Labels which have been used to annotate the service. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
	UserLabels pulumi.StringMapInput
	V3Id       pulumi.StringInput
	V3Id1      pulumi.StringInput
}

func (ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceArgs)(nil)).Elem()
}

type ServiceInput interface {
	pulumi.Input

	ToServiceOutput() ServiceOutput
	ToServiceOutputWithContext(ctx context.Context) ServiceOutput
}

func (*Service) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (i *Service) ToServiceOutput() ServiceOutput {
	return i.ToServiceOutputWithContext(context.Background())
}

func (i *Service) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceOutput)
}

type ServiceOutput struct{ *pulumi.OutputState }

func (ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (o ServiceOutput) ToServiceOutput() ServiceOutput {
	return o
}

func (o ServiceOutput) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return o
}

// Type used for App Engine services.
func (o ServiceOutput) AppEngine() AppEngineResponseOutput {
	return o.ApplyT(func(v *Service) AppEngineResponseOutput { return v.AppEngine }).(AppEngineResponseOutput)
}

// Type used for Cloud Endpoints services.
func (o ServiceOutput) CloudEndpoints() CloudEndpointsResponseOutput {
	return o.ApplyT(func(v *Service) CloudEndpointsResponseOutput { return v.CloudEndpoints }).(CloudEndpointsResponseOutput)
}

// Type used for Cloud Run services.
func (o ServiceOutput) CloudRun() CloudRunResponseOutput {
	return o.ApplyT(func(v *Service) CloudRunResponseOutput { return v.CloudRun }).(CloudRunResponseOutput)
}

// Type used for Istio services that live in a Kubernetes cluster.
func (o ServiceOutput) ClusterIstio() ClusterIstioResponseOutput {
	return o.ApplyT(func(v *Service) ClusterIstioResponseOutput { return v.ClusterIstio }).(ClusterIstioResponseOutput)
}

// Custom service type.
func (o ServiceOutput) Custom() CustomResponseOutput {
	return o.ApplyT(func(v *Service) CustomResponseOutput { return v.Custom }).(CustomResponseOutput)
}

// Name used for UI elements listing this Service.
func (o ServiceOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Type used for GKE Namespaces.
func (o ServiceOutput) GkeNamespace() GkeNamespaceResponseOutput {
	return o.ApplyT(func(v *Service) GkeNamespaceResponseOutput { return v.GkeNamespace }).(GkeNamespaceResponseOutput)
}

// Type used for GKE Services (the Kubernetes concept of a service).
func (o ServiceOutput) GkeService() GkeServiceResponseOutput {
	return o.ApplyT(func(v *Service) GkeServiceResponseOutput { return v.GkeService }).(GkeServiceResponseOutput)
}

// Type used for GKE Workloads.
func (o ServiceOutput) GkeWorkload() GkeWorkloadResponseOutput {
	return o.ApplyT(func(v *Service) GkeWorkloadResponseOutput { return v.GkeWorkload }).(GkeWorkloadResponseOutput)
}

// Type used for canonical services scoped to an Istio mesh. Metrics for Istio are documented here (https://istio.io/latest/docs/reference/config/metrics/)
func (o ServiceOutput) IstioCanonicalService() IstioCanonicalServiceResponseOutput {
	return o.ApplyT(func(v *Service) IstioCanonicalServiceResponseOutput { return v.IstioCanonicalService }).(IstioCanonicalServiceResponseOutput)
}

// Type used for Istio services scoped to an Istio mesh.
func (o ServiceOutput) MeshIstio() MeshIstioResponseOutput {
	return o.ApplyT(func(v *Service) MeshIstioResponseOutput { return v.MeshIstio }).(MeshIstioResponseOutput)
}

// Resource name for this Service. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
func (o ServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Configuration for how to query telemetry on a Service.
func (o ServiceOutput) Telemetry() TelemetryResponseOutput {
	return o.ApplyT(func(v *Service) TelemetryResponseOutput { return v.Telemetry }).(TelemetryResponseOutput)
}

// Labels which have been used to annotate the service. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
func (o ServiceOutput) UserLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Service) pulumi.StringMapOutput { return v.UserLabels }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceInput)(nil)).Elem(), &Service{})
	pulumi.RegisterOutputType(ServiceOutput{})
}
