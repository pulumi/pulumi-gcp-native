// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the named Service.
func LookupService(ctx *pulumi.Context, args *LookupServiceArgs, opts ...pulumi.InvokeOption) (*LookupServiceResult, error) {
	var rv LookupServiceResult
	err := ctx.Invoke("google-native:monitoring/v3:getService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupServiceArgs struct {
	ServiceId string `pulumi:"serviceId"`
	V3Id      string `pulumi:"v3Id"`
	V3Id1     string `pulumi:"v3Id1"`
}

type LookupServiceResult struct {
	// Type used for App Engine services.
	AppEngine AppEngineResponse `pulumi:"appEngine"`
	// Type used for Cloud Endpoints services.
	CloudEndpoints CloudEndpointsResponse `pulumi:"cloudEndpoints"`
	// Type used for Istio services that live in a Kubernetes cluster.
	ClusterIstio ClusterIstioResponse `pulumi:"clusterIstio"`
	// Custom service type.
	Custom CustomResponse `pulumi:"custom"`
	// Name used for UI elements listing this Service.
	DisplayName string `pulumi:"displayName"`
	// Type used for canonical services scoped to an Istio mesh. Metrics for Istio are documented here (https://istio.io/latest/docs/reference/config/metrics/)
	IstioCanonicalService IstioCanonicalServiceResponse `pulumi:"istioCanonicalService"`
	// Type used for Istio services scoped to an Istio mesh.
	MeshIstio MeshIstioResponse `pulumi:"meshIstio"`
	// Resource name for this Service. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
	Name string `pulumi:"name"`
	// Configuration for how to query telemetry on a Service.
	Telemetry TelemetryResponse `pulumi:"telemetry"`
	// Labels which have been used to annotate the service. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
	UserLabels map[string]string `pulumi:"userLabels"`
}

func LookupServiceOutput(ctx *pulumi.Context, args LookupServiceOutputArgs, opts ...pulumi.InvokeOption) LookupServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceResult, error) {
			args := v.(LookupServiceArgs)
			r, err := LookupService(ctx, &args, opts...)
			return *r, err
		}).(LookupServiceResultOutput)
}

type LookupServiceOutputArgs struct {
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
	V3Id      pulumi.StringInput `pulumi:"v3Id"`
	V3Id1     pulumi.StringInput `pulumi:"v3Id1"`
}

func (LookupServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceArgs)(nil)).Elem()
}

type LookupServiceResultOutput struct{ *pulumi.OutputState }

func (LookupServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceResult)(nil)).Elem()
}

func (o LookupServiceResultOutput) ToLookupServiceResultOutput() LookupServiceResultOutput {
	return o
}

func (o LookupServiceResultOutput) ToLookupServiceResultOutputWithContext(ctx context.Context) LookupServiceResultOutput {
	return o
}

// Type used for App Engine services.
func (o LookupServiceResultOutput) AppEngine() AppEngineResponseOutput {
	return o.ApplyT(func(v LookupServiceResult) AppEngineResponse { return v.AppEngine }).(AppEngineResponseOutput)
}

// Type used for Cloud Endpoints services.
func (o LookupServiceResultOutput) CloudEndpoints() CloudEndpointsResponseOutput {
	return o.ApplyT(func(v LookupServiceResult) CloudEndpointsResponse { return v.CloudEndpoints }).(CloudEndpointsResponseOutput)
}

// Type used for Istio services that live in a Kubernetes cluster.
func (o LookupServiceResultOutput) ClusterIstio() ClusterIstioResponseOutput {
	return o.ApplyT(func(v LookupServiceResult) ClusterIstioResponse { return v.ClusterIstio }).(ClusterIstioResponseOutput)
}

// Custom service type.
func (o LookupServiceResultOutput) Custom() CustomResponseOutput {
	return o.ApplyT(func(v LookupServiceResult) CustomResponse { return v.Custom }).(CustomResponseOutput)
}

// Name used for UI elements listing this Service.
func (o LookupServiceResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Type used for canonical services scoped to an Istio mesh. Metrics for Istio are documented here (https://istio.io/latest/docs/reference/config/metrics/)
func (o LookupServiceResultOutput) IstioCanonicalService() IstioCanonicalServiceResponseOutput {
	return o.ApplyT(func(v LookupServiceResult) IstioCanonicalServiceResponse { return v.IstioCanonicalService }).(IstioCanonicalServiceResponseOutput)
}

// Type used for Istio services scoped to an Istio mesh.
func (o LookupServiceResultOutput) MeshIstio() MeshIstioResponseOutput {
	return o.ApplyT(func(v LookupServiceResult) MeshIstioResponse { return v.MeshIstio }).(MeshIstioResponseOutput)
}

// Resource name for this Service. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
func (o LookupServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Configuration for how to query telemetry on a Service.
func (o LookupServiceResultOutput) Telemetry() TelemetryResponseOutput {
	return o.ApplyT(func(v LookupServiceResult) TelemetryResponse { return v.Telemetry }).(TelemetryResponseOutput)
}

// Labels which have been used to annotate the service. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
func (o LookupServiceResultOutput) UserLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupServiceResult) map[string]string { return v.UserLabels }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceResultOutput{})
}
