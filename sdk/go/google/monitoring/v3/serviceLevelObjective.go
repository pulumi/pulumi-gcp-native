// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create a ServiceLevelObjective for the given Service.
// Auto-naming is currently not supported for this resource.
type ServiceLevelObjective struct {
	pulumi.CustomResourceState

	// A calendar period, semantically "since the start of the current ". At this time, only DAY, WEEK, FORTNIGHT, and MONTH are supported.
	CalendarPeriod pulumi.StringOutput `pulumi:"calendarPeriod"`
	// Name used for UI elements listing this SLO.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The fraction of service that must be good in order for this objective to be met. 0 < goal <= 0.999.
	Goal pulumi.Float64Output `pulumi:"goal"`
	// Resource name for this ServiceLevelObjective. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
	Name pulumi.StringOutput `pulumi:"name"`
	// A rolling time period, semantically "in the past ". Must be an integer multiple of 1 day no larger than 30 days.
	RollingPeriod pulumi.StringOutput `pulumi:"rollingPeriod"`
	ServiceId     pulumi.StringOutput `pulumi:"serviceId"`
	// The definition of good service, used to measure and calculate the quality of the Service's performance with respect to a single aspect of service quality.
	ServiceLevelIndicator ServiceLevelIndicatorResponseOutput `pulumi:"serviceLevelIndicator"`
	// Optional. The ServiceLevelObjective id to use for this ServiceLevelObjective. If omitted, an id will be generated instead. Must match the pattern [a-z0-9\-]+
	ServiceLevelObjectiveId pulumi.StringPtrOutput `pulumi:"serviceLevelObjectiveId"`
	// Labels which have been used to annotate the service-level objective. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
	UserLabels pulumi.StringMapOutput `pulumi:"userLabels"`
	V3Id       pulumi.StringOutput    `pulumi:"v3Id"`
	V3Id1      pulumi.StringOutput    `pulumi:"v3Id1"`
}

// NewServiceLevelObjective registers a new resource with the given unique name, arguments, and options.
func NewServiceLevelObjective(ctx *pulumi.Context,
	name string, args *ServiceLevelObjectiveArgs, opts ...pulumi.ResourceOption) (*ServiceLevelObjective, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceId'")
	}
	if args.V3Id == nil {
		return nil, errors.New("invalid value for required argument 'V3Id'")
	}
	if args.V3Id1 == nil {
		return nil, errors.New("invalid value for required argument 'V3Id1'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"serviceId",
		"v3Id",
		"v3Id1",
	})
	opts = append(opts, replaceOnChanges)
	var resource ServiceLevelObjective
	err := ctx.RegisterResource("google-native:monitoring/v3:ServiceLevelObjective", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceLevelObjective gets an existing ServiceLevelObjective resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceLevelObjective(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceLevelObjectiveState, opts ...pulumi.ResourceOption) (*ServiceLevelObjective, error) {
	var resource ServiceLevelObjective
	err := ctx.ReadResource("google-native:monitoring/v3:ServiceLevelObjective", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceLevelObjective resources.
type serviceLevelObjectiveState struct {
}

type ServiceLevelObjectiveState struct {
}

func (ServiceLevelObjectiveState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLevelObjectiveState)(nil)).Elem()
}

type serviceLevelObjectiveArgs struct {
	// A calendar period, semantically "since the start of the current ". At this time, only DAY, WEEK, FORTNIGHT, and MONTH are supported.
	CalendarPeriod *ServiceLevelObjectiveCalendarPeriod `pulumi:"calendarPeriod"`
	// Name used for UI elements listing this SLO.
	DisplayName *string `pulumi:"displayName"`
	// The fraction of service that must be good in order for this objective to be met. 0 < goal <= 0.999.
	Goal *float64 `pulumi:"goal"`
	// Resource name for this ServiceLevelObjective. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
	Name *string `pulumi:"name"`
	// A rolling time period, semantically "in the past ". Must be an integer multiple of 1 day no larger than 30 days.
	RollingPeriod *string `pulumi:"rollingPeriod"`
	ServiceId     string  `pulumi:"serviceId"`
	// The definition of good service, used to measure and calculate the quality of the Service's performance with respect to a single aspect of service quality.
	ServiceLevelIndicator *ServiceLevelIndicator `pulumi:"serviceLevelIndicator"`
	// Optional. The ServiceLevelObjective id to use for this ServiceLevelObjective. If omitted, an id will be generated instead. Must match the pattern [a-z0-9\-]+
	ServiceLevelObjectiveId *string `pulumi:"serviceLevelObjectiveId"`
	// Labels which have been used to annotate the service-level objective. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
	UserLabels map[string]string `pulumi:"userLabels"`
	V3Id       string            `pulumi:"v3Id"`
	V3Id1      string            `pulumi:"v3Id1"`
}

// The set of arguments for constructing a ServiceLevelObjective resource.
type ServiceLevelObjectiveArgs struct {
	// A calendar period, semantically "since the start of the current ". At this time, only DAY, WEEK, FORTNIGHT, and MONTH are supported.
	CalendarPeriod ServiceLevelObjectiveCalendarPeriodPtrInput
	// Name used for UI elements listing this SLO.
	DisplayName pulumi.StringPtrInput
	// The fraction of service that must be good in order for this objective to be met. 0 < goal <= 0.999.
	Goal pulumi.Float64PtrInput
	// Resource name for this ServiceLevelObjective. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
	Name pulumi.StringPtrInput
	// A rolling time period, semantically "in the past ". Must be an integer multiple of 1 day no larger than 30 days.
	RollingPeriod pulumi.StringPtrInput
	ServiceId     pulumi.StringInput
	// The definition of good service, used to measure and calculate the quality of the Service's performance with respect to a single aspect of service quality.
	ServiceLevelIndicator ServiceLevelIndicatorPtrInput
	// Optional. The ServiceLevelObjective id to use for this ServiceLevelObjective. If omitted, an id will be generated instead. Must match the pattern [a-z0-9\-]+
	ServiceLevelObjectiveId pulumi.StringPtrInput
	// Labels which have been used to annotate the service-level objective. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
	UserLabels pulumi.StringMapInput
	V3Id       pulumi.StringInput
	V3Id1      pulumi.StringInput
}

func (ServiceLevelObjectiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLevelObjectiveArgs)(nil)).Elem()
}

type ServiceLevelObjectiveInput interface {
	pulumi.Input

	ToServiceLevelObjectiveOutput() ServiceLevelObjectiveOutput
	ToServiceLevelObjectiveOutputWithContext(ctx context.Context) ServiceLevelObjectiveOutput
}

func (*ServiceLevelObjective) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjective)(nil)).Elem()
}

func (i *ServiceLevelObjective) ToServiceLevelObjectiveOutput() ServiceLevelObjectiveOutput {
	return i.ToServiceLevelObjectiveOutputWithContext(context.Background())
}

func (i *ServiceLevelObjective) ToServiceLevelObjectiveOutputWithContext(ctx context.Context) ServiceLevelObjectiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveOutput)
}

type ServiceLevelObjectiveOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjective)(nil)).Elem()
}

func (o ServiceLevelObjectiveOutput) ToServiceLevelObjectiveOutput() ServiceLevelObjectiveOutput {
	return o
}

func (o ServiceLevelObjectiveOutput) ToServiceLevelObjectiveOutputWithContext(ctx context.Context) ServiceLevelObjectiveOutput {
	return o
}

// A calendar period, semantically "since the start of the current ". At this time, only DAY, WEEK, FORTNIGHT, and MONTH are supported.
func (o ServiceLevelObjectiveOutput) CalendarPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.StringOutput { return v.CalendarPeriod }).(pulumi.StringOutput)
}

// Name used for UI elements listing this SLO.
func (o ServiceLevelObjectiveOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The fraction of service that must be good in order for this objective to be met. 0 < goal <= 0.999.
func (o ServiceLevelObjectiveOutput) Goal() pulumi.Float64Output {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.Float64Output { return v.Goal }).(pulumi.Float64Output)
}

// Resource name for this ServiceLevelObjective. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
func (o ServiceLevelObjectiveOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A rolling time period, semantically "in the past ". Must be an integer multiple of 1 day no larger than 30 days.
func (o ServiceLevelObjectiveOutput) RollingPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.StringOutput { return v.RollingPeriod }).(pulumi.StringOutput)
}

func (o ServiceLevelObjectiveOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.StringOutput { return v.ServiceId }).(pulumi.StringOutput)
}

// The definition of good service, used to measure and calculate the quality of the Service's performance with respect to a single aspect of service quality.
func (o ServiceLevelObjectiveOutput) ServiceLevelIndicator() ServiceLevelIndicatorResponseOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) ServiceLevelIndicatorResponseOutput { return v.ServiceLevelIndicator }).(ServiceLevelIndicatorResponseOutput)
}

// Optional. The ServiceLevelObjective id to use for this ServiceLevelObjective. If omitted, an id will be generated instead. Must match the pattern [a-z0-9\-]+
func (o ServiceLevelObjectiveOutput) ServiceLevelObjectiveId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.StringPtrOutput { return v.ServiceLevelObjectiveId }).(pulumi.StringPtrOutput)
}

// Labels which have been used to annotate the service-level objective. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
func (o ServiceLevelObjectiveOutput) UserLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.StringMapOutput { return v.UserLabels }).(pulumi.StringMapOutput)
}

func (o ServiceLevelObjectiveOutput) V3Id() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.StringOutput { return v.V3Id }).(pulumi.StringOutput)
}

func (o ServiceLevelObjectiveOutput) V3Id1() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.StringOutput { return v.V3Id1 }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveInput)(nil)).Elem(), &ServiceLevelObjective{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveOutput{})
}
