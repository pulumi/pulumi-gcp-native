// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

// Represent a recurring schedule that runs at a specific time every day. The time zone is UTC.
type GoogleFirestoreAdminV1DailyRecurrence struct {
}

// GoogleFirestoreAdminV1DailyRecurrenceInput is an input type that accepts GoogleFirestoreAdminV1DailyRecurrenceArgs and GoogleFirestoreAdminV1DailyRecurrenceOutput values.
// You can construct a concrete instance of `GoogleFirestoreAdminV1DailyRecurrenceInput` via:
//
//	GoogleFirestoreAdminV1DailyRecurrenceArgs{...}
type GoogleFirestoreAdminV1DailyRecurrenceInput interface {
	pulumi.Input

	ToGoogleFirestoreAdminV1DailyRecurrenceOutput() GoogleFirestoreAdminV1DailyRecurrenceOutput
	ToGoogleFirestoreAdminV1DailyRecurrenceOutputWithContext(context.Context) GoogleFirestoreAdminV1DailyRecurrenceOutput
}

// Represent a recurring schedule that runs at a specific time every day. The time zone is UTC.
type GoogleFirestoreAdminV1DailyRecurrenceArgs struct {
}

func (GoogleFirestoreAdminV1DailyRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleFirestoreAdminV1DailyRecurrence)(nil)).Elem()
}

func (i GoogleFirestoreAdminV1DailyRecurrenceArgs) ToGoogleFirestoreAdminV1DailyRecurrenceOutput() GoogleFirestoreAdminV1DailyRecurrenceOutput {
	return i.ToGoogleFirestoreAdminV1DailyRecurrenceOutputWithContext(context.Background())
}

func (i GoogleFirestoreAdminV1DailyRecurrenceArgs) ToGoogleFirestoreAdminV1DailyRecurrenceOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1DailyRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleFirestoreAdminV1DailyRecurrenceOutput)
}

func (i GoogleFirestoreAdminV1DailyRecurrenceArgs) ToOutput(ctx context.Context) pulumix.Output[GoogleFirestoreAdminV1DailyRecurrence] {
	return pulumix.Output[GoogleFirestoreAdminV1DailyRecurrence]{
		OutputState: i.ToGoogleFirestoreAdminV1DailyRecurrenceOutputWithContext(ctx).OutputState,
	}
}

func (i GoogleFirestoreAdminV1DailyRecurrenceArgs) ToGoogleFirestoreAdminV1DailyRecurrencePtrOutput() GoogleFirestoreAdminV1DailyRecurrencePtrOutput {
	return i.ToGoogleFirestoreAdminV1DailyRecurrencePtrOutputWithContext(context.Background())
}

func (i GoogleFirestoreAdminV1DailyRecurrenceArgs) ToGoogleFirestoreAdminV1DailyRecurrencePtrOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1DailyRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleFirestoreAdminV1DailyRecurrenceOutput).ToGoogleFirestoreAdminV1DailyRecurrencePtrOutputWithContext(ctx)
}

// GoogleFirestoreAdminV1DailyRecurrencePtrInput is an input type that accepts GoogleFirestoreAdminV1DailyRecurrenceArgs, GoogleFirestoreAdminV1DailyRecurrencePtr and GoogleFirestoreAdminV1DailyRecurrencePtrOutput values.
// You can construct a concrete instance of `GoogleFirestoreAdminV1DailyRecurrencePtrInput` via:
//
//	        GoogleFirestoreAdminV1DailyRecurrenceArgs{...}
//
//	or:
//
//	        nil
type GoogleFirestoreAdminV1DailyRecurrencePtrInput interface {
	pulumi.Input

	ToGoogleFirestoreAdminV1DailyRecurrencePtrOutput() GoogleFirestoreAdminV1DailyRecurrencePtrOutput
	ToGoogleFirestoreAdminV1DailyRecurrencePtrOutputWithContext(context.Context) GoogleFirestoreAdminV1DailyRecurrencePtrOutput
}

type googleFirestoreAdminV1DailyRecurrencePtrType GoogleFirestoreAdminV1DailyRecurrenceArgs

func GoogleFirestoreAdminV1DailyRecurrencePtr(v *GoogleFirestoreAdminV1DailyRecurrenceArgs) GoogleFirestoreAdminV1DailyRecurrencePtrInput {
	return (*googleFirestoreAdminV1DailyRecurrencePtrType)(v)
}

func (*googleFirestoreAdminV1DailyRecurrencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleFirestoreAdminV1DailyRecurrence)(nil)).Elem()
}

func (i *googleFirestoreAdminV1DailyRecurrencePtrType) ToGoogleFirestoreAdminV1DailyRecurrencePtrOutput() GoogleFirestoreAdminV1DailyRecurrencePtrOutput {
	return i.ToGoogleFirestoreAdminV1DailyRecurrencePtrOutputWithContext(context.Background())
}

func (i *googleFirestoreAdminV1DailyRecurrencePtrType) ToGoogleFirestoreAdminV1DailyRecurrencePtrOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1DailyRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleFirestoreAdminV1DailyRecurrencePtrOutput)
}

func (i *googleFirestoreAdminV1DailyRecurrencePtrType) ToOutput(ctx context.Context) pulumix.Output[*GoogleFirestoreAdminV1DailyRecurrence] {
	return pulumix.Output[*GoogleFirestoreAdminV1DailyRecurrence]{
		OutputState: i.ToGoogleFirestoreAdminV1DailyRecurrencePtrOutputWithContext(ctx).OutputState,
	}
}

// Represent a recurring schedule that runs at a specific time every day. The time zone is UTC.
type GoogleFirestoreAdminV1DailyRecurrenceOutput struct{ *pulumi.OutputState }

func (GoogleFirestoreAdminV1DailyRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleFirestoreAdminV1DailyRecurrence)(nil)).Elem()
}

func (o GoogleFirestoreAdminV1DailyRecurrenceOutput) ToGoogleFirestoreAdminV1DailyRecurrenceOutput() GoogleFirestoreAdminV1DailyRecurrenceOutput {
	return o
}

func (o GoogleFirestoreAdminV1DailyRecurrenceOutput) ToGoogleFirestoreAdminV1DailyRecurrenceOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1DailyRecurrenceOutput {
	return o
}

func (o GoogleFirestoreAdminV1DailyRecurrenceOutput) ToGoogleFirestoreAdminV1DailyRecurrencePtrOutput() GoogleFirestoreAdminV1DailyRecurrencePtrOutput {
	return o.ToGoogleFirestoreAdminV1DailyRecurrencePtrOutputWithContext(context.Background())
}

func (o GoogleFirestoreAdminV1DailyRecurrenceOutput) ToGoogleFirestoreAdminV1DailyRecurrencePtrOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1DailyRecurrencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleFirestoreAdminV1DailyRecurrence) *GoogleFirestoreAdminV1DailyRecurrence {
		return &v
	}).(GoogleFirestoreAdminV1DailyRecurrencePtrOutput)
}

func (o GoogleFirestoreAdminV1DailyRecurrenceOutput) ToOutput(ctx context.Context) pulumix.Output[GoogleFirestoreAdminV1DailyRecurrence] {
	return pulumix.Output[GoogleFirestoreAdminV1DailyRecurrence]{
		OutputState: o.OutputState,
	}
}

type GoogleFirestoreAdminV1DailyRecurrencePtrOutput struct{ *pulumi.OutputState }

func (GoogleFirestoreAdminV1DailyRecurrencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleFirestoreAdminV1DailyRecurrence)(nil)).Elem()
}

func (o GoogleFirestoreAdminV1DailyRecurrencePtrOutput) ToGoogleFirestoreAdminV1DailyRecurrencePtrOutput() GoogleFirestoreAdminV1DailyRecurrencePtrOutput {
	return o
}

func (o GoogleFirestoreAdminV1DailyRecurrencePtrOutput) ToGoogleFirestoreAdminV1DailyRecurrencePtrOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1DailyRecurrencePtrOutput {
	return o
}

func (o GoogleFirestoreAdminV1DailyRecurrencePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GoogleFirestoreAdminV1DailyRecurrence] {
	return pulumix.Output[*GoogleFirestoreAdminV1DailyRecurrence]{
		OutputState: o.OutputState,
	}
}

func (o GoogleFirestoreAdminV1DailyRecurrencePtrOutput) Elem() GoogleFirestoreAdminV1DailyRecurrenceOutput {
	return o.ApplyT(func(v *GoogleFirestoreAdminV1DailyRecurrence) GoogleFirestoreAdminV1DailyRecurrence {
		if v != nil {
			return *v
		}
		var ret GoogleFirestoreAdminV1DailyRecurrence
		return ret
	}).(GoogleFirestoreAdminV1DailyRecurrenceOutput)
}

// Represent a recurring schedule that runs at a specific time every day. The time zone is UTC.
type GoogleFirestoreAdminV1DailyRecurrenceResponse struct {
}

// Represent a recurring schedule that runs at a specific time every day. The time zone is UTC.
type GoogleFirestoreAdminV1DailyRecurrenceResponseOutput struct{ *pulumi.OutputState }

func (GoogleFirestoreAdminV1DailyRecurrenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleFirestoreAdminV1DailyRecurrenceResponse)(nil)).Elem()
}

func (o GoogleFirestoreAdminV1DailyRecurrenceResponseOutput) ToGoogleFirestoreAdminV1DailyRecurrenceResponseOutput() GoogleFirestoreAdminV1DailyRecurrenceResponseOutput {
	return o
}

func (o GoogleFirestoreAdminV1DailyRecurrenceResponseOutput) ToGoogleFirestoreAdminV1DailyRecurrenceResponseOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1DailyRecurrenceResponseOutput {
	return o
}

func (o GoogleFirestoreAdminV1DailyRecurrenceResponseOutput) ToOutput(ctx context.Context) pulumix.Output[GoogleFirestoreAdminV1DailyRecurrenceResponse] {
	return pulumix.Output[GoogleFirestoreAdminV1DailyRecurrenceResponse]{
		OutputState: o.OutputState,
	}
}

// A field in an index. The field_path describes which field is indexed, the value_mode describes how the field value is indexed.
type GoogleFirestoreAdminV1IndexField struct {
	// Indicates that this field supports operations on `array_value`s.
	ArrayConfig *GoogleFirestoreAdminV1IndexFieldArrayConfig `pulumi:"arrayConfig"`
	// Can be __name__. For single field indexes, this must match the name of the field or may be omitted.
	FieldPath *string `pulumi:"fieldPath"`
	// Indicates that this field supports ordering by the specified order or comparing using =, !=, <, <=, >, >=.
	Order *GoogleFirestoreAdminV1IndexFieldOrder `pulumi:"order"`
}

// GoogleFirestoreAdminV1IndexFieldInput is an input type that accepts GoogleFirestoreAdminV1IndexFieldArgs and GoogleFirestoreAdminV1IndexFieldOutput values.
// You can construct a concrete instance of `GoogleFirestoreAdminV1IndexFieldInput` via:
//
//	GoogleFirestoreAdminV1IndexFieldArgs{...}
type GoogleFirestoreAdminV1IndexFieldInput interface {
	pulumi.Input

	ToGoogleFirestoreAdminV1IndexFieldOutput() GoogleFirestoreAdminV1IndexFieldOutput
	ToGoogleFirestoreAdminV1IndexFieldOutputWithContext(context.Context) GoogleFirestoreAdminV1IndexFieldOutput
}

// A field in an index. The field_path describes which field is indexed, the value_mode describes how the field value is indexed.
type GoogleFirestoreAdminV1IndexFieldArgs struct {
	// Indicates that this field supports operations on `array_value`s.
	ArrayConfig GoogleFirestoreAdminV1IndexFieldArrayConfigPtrInput `pulumi:"arrayConfig"`
	// Can be __name__. For single field indexes, this must match the name of the field or may be omitted.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Indicates that this field supports ordering by the specified order or comparing using =, !=, <, <=, >, >=.
	Order GoogleFirestoreAdminV1IndexFieldOrderPtrInput `pulumi:"order"`
}

func (GoogleFirestoreAdminV1IndexFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleFirestoreAdminV1IndexField)(nil)).Elem()
}

func (i GoogleFirestoreAdminV1IndexFieldArgs) ToGoogleFirestoreAdminV1IndexFieldOutput() GoogleFirestoreAdminV1IndexFieldOutput {
	return i.ToGoogleFirestoreAdminV1IndexFieldOutputWithContext(context.Background())
}

func (i GoogleFirestoreAdminV1IndexFieldArgs) ToGoogleFirestoreAdminV1IndexFieldOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1IndexFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleFirestoreAdminV1IndexFieldOutput)
}

func (i GoogleFirestoreAdminV1IndexFieldArgs) ToOutput(ctx context.Context) pulumix.Output[GoogleFirestoreAdminV1IndexField] {
	return pulumix.Output[GoogleFirestoreAdminV1IndexField]{
		OutputState: i.ToGoogleFirestoreAdminV1IndexFieldOutputWithContext(ctx).OutputState,
	}
}

// GoogleFirestoreAdminV1IndexFieldArrayInput is an input type that accepts GoogleFirestoreAdminV1IndexFieldArray and GoogleFirestoreAdminV1IndexFieldArrayOutput values.
// You can construct a concrete instance of `GoogleFirestoreAdminV1IndexFieldArrayInput` via:
//
//	GoogleFirestoreAdminV1IndexFieldArray{ GoogleFirestoreAdminV1IndexFieldArgs{...} }
type GoogleFirestoreAdminV1IndexFieldArrayInput interface {
	pulumi.Input

	ToGoogleFirestoreAdminV1IndexFieldArrayOutput() GoogleFirestoreAdminV1IndexFieldArrayOutput
	ToGoogleFirestoreAdminV1IndexFieldArrayOutputWithContext(context.Context) GoogleFirestoreAdminV1IndexFieldArrayOutput
}

type GoogleFirestoreAdminV1IndexFieldArray []GoogleFirestoreAdminV1IndexFieldInput

func (GoogleFirestoreAdminV1IndexFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleFirestoreAdminV1IndexField)(nil)).Elem()
}

func (i GoogleFirestoreAdminV1IndexFieldArray) ToGoogleFirestoreAdminV1IndexFieldArrayOutput() GoogleFirestoreAdminV1IndexFieldArrayOutput {
	return i.ToGoogleFirestoreAdminV1IndexFieldArrayOutputWithContext(context.Background())
}

func (i GoogleFirestoreAdminV1IndexFieldArray) ToGoogleFirestoreAdminV1IndexFieldArrayOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1IndexFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleFirestoreAdminV1IndexFieldArrayOutput)
}

func (i GoogleFirestoreAdminV1IndexFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]GoogleFirestoreAdminV1IndexField] {
	return pulumix.Output[[]GoogleFirestoreAdminV1IndexField]{
		OutputState: i.ToGoogleFirestoreAdminV1IndexFieldArrayOutputWithContext(ctx).OutputState,
	}
}

// A field in an index. The field_path describes which field is indexed, the value_mode describes how the field value is indexed.
type GoogleFirestoreAdminV1IndexFieldOutput struct{ *pulumi.OutputState }

func (GoogleFirestoreAdminV1IndexFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleFirestoreAdminV1IndexField)(nil)).Elem()
}

func (o GoogleFirestoreAdminV1IndexFieldOutput) ToGoogleFirestoreAdminV1IndexFieldOutput() GoogleFirestoreAdminV1IndexFieldOutput {
	return o
}

func (o GoogleFirestoreAdminV1IndexFieldOutput) ToGoogleFirestoreAdminV1IndexFieldOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1IndexFieldOutput {
	return o
}

func (o GoogleFirestoreAdminV1IndexFieldOutput) ToOutput(ctx context.Context) pulumix.Output[GoogleFirestoreAdminV1IndexField] {
	return pulumix.Output[GoogleFirestoreAdminV1IndexField]{
		OutputState: o.OutputState,
	}
}

// Indicates that this field supports operations on `array_value`s.
func (o GoogleFirestoreAdminV1IndexFieldOutput) ArrayConfig() GoogleFirestoreAdminV1IndexFieldArrayConfigPtrOutput {
	return o.ApplyT(func(v GoogleFirestoreAdminV1IndexField) *GoogleFirestoreAdminV1IndexFieldArrayConfig {
		return v.ArrayConfig
	}).(GoogleFirestoreAdminV1IndexFieldArrayConfigPtrOutput)
}

// Can be __name__. For single field indexes, this must match the name of the field or may be omitted.
func (o GoogleFirestoreAdminV1IndexFieldOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleFirestoreAdminV1IndexField) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Indicates that this field supports ordering by the specified order or comparing using =, !=, <, <=, >, >=.
func (o GoogleFirestoreAdminV1IndexFieldOutput) Order() GoogleFirestoreAdminV1IndexFieldOrderPtrOutput {
	return o.ApplyT(func(v GoogleFirestoreAdminV1IndexField) *GoogleFirestoreAdminV1IndexFieldOrder { return v.Order }).(GoogleFirestoreAdminV1IndexFieldOrderPtrOutput)
}

type GoogleFirestoreAdminV1IndexFieldArrayOutput struct{ *pulumi.OutputState }

func (GoogleFirestoreAdminV1IndexFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleFirestoreAdminV1IndexField)(nil)).Elem()
}

func (o GoogleFirestoreAdminV1IndexFieldArrayOutput) ToGoogleFirestoreAdminV1IndexFieldArrayOutput() GoogleFirestoreAdminV1IndexFieldArrayOutput {
	return o
}

func (o GoogleFirestoreAdminV1IndexFieldArrayOutput) ToGoogleFirestoreAdminV1IndexFieldArrayOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1IndexFieldArrayOutput {
	return o
}

func (o GoogleFirestoreAdminV1IndexFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GoogleFirestoreAdminV1IndexField] {
	return pulumix.Output[[]GoogleFirestoreAdminV1IndexField]{
		OutputState: o.OutputState,
	}
}

func (o GoogleFirestoreAdminV1IndexFieldArrayOutput) Index(i pulumi.IntInput) GoogleFirestoreAdminV1IndexFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleFirestoreAdminV1IndexField {
		return vs[0].([]GoogleFirestoreAdminV1IndexField)[vs[1].(int)]
	}).(GoogleFirestoreAdminV1IndexFieldOutput)
}

// A field in an index. The field_path describes which field is indexed, the value_mode describes how the field value is indexed.
type GoogleFirestoreAdminV1IndexFieldResponse struct {
	// Indicates that this field supports operations on `array_value`s.
	ArrayConfig string `pulumi:"arrayConfig"`
	// Can be __name__. For single field indexes, this must match the name of the field or may be omitted.
	FieldPath string `pulumi:"fieldPath"`
	// Indicates that this field supports ordering by the specified order or comparing using =, !=, <, <=, >, >=.
	Order string `pulumi:"order"`
}

// A field in an index. The field_path describes which field is indexed, the value_mode describes how the field value is indexed.
type GoogleFirestoreAdminV1IndexFieldResponseOutput struct{ *pulumi.OutputState }

func (GoogleFirestoreAdminV1IndexFieldResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleFirestoreAdminV1IndexFieldResponse)(nil)).Elem()
}

func (o GoogleFirestoreAdminV1IndexFieldResponseOutput) ToGoogleFirestoreAdminV1IndexFieldResponseOutput() GoogleFirestoreAdminV1IndexFieldResponseOutput {
	return o
}

func (o GoogleFirestoreAdminV1IndexFieldResponseOutput) ToGoogleFirestoreAdminV1IndexFieldResponseOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1IndexFieldResponseOutput {
	return o
}

func (o GoogleFirestoreAdminV1IndexFieldResponseOutput) ToOutput(ctx context.Context) pulumix.Output[GoogleFirestoreAdminV1IndexFieldResponse] {
	return pulumix.Output[GoogleFirestoreAdminV1IndexFieldResponse]{
		OutputState: o.OutputState,
	}
}

// Indicates that this field supports operations on `array_value`s.
func (o GoogleFirestoreAdminV1IndexFieldResponseOutput) ArrayConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleFirestoreAdminV1IndexFieldResponse) string { return v.ArrayConfig }).(pulumi.StringOutput)
}

// Can be __name__. For single field indexes, this must match the name of the field or may be omitted.
func (o GoogleFirestoreAdminV1IndexFieldResponseOutput) FieldPath() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleFirestoreAdminV1IndexFieldResponse) string { return v.FieldPath }).(pulumi.StringOutput)
}

// Indicates that this field supports ordering by the specified order or comparing using =, !=, <, <=, >, >=.
func (o GoogleFirestoreAdminV1IndexFieldResponseOutput) Order() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleFirestoreAdminV1IndexFieldResponse) string { return v.Order }).(pulumi.StringOutput)
}

type GoogleFirestoreAdminV1IndexFieldResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleFirestoreAdminV1IndexFieldResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleFirestoreAdminV1IndexFieldResponse)(nil)).Elem()
}

func (o GoogleFirestoreAdminV1IndexFieldResponseArrayOutput) ToGoogleFirestoreAdminV1IndexFieldResponseArrayOutput() GoogleFirestoreAdminV1IndexFieldResponseArrayOutput {
	return o
}

func (o GoogleFirestoreAdminV1IndexFieldResponseArrayOutput) ToGoogleFirestoreAdminV1IndexFieldResponseArrayOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1IndexFieldResponseArrayOutput {
	return o
}

func (o GoogleFirestoreAdminV1IndexFieldResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GoogleFirestoreAdminV1IndexFieldResponse] {
	return pulumix.Output[[]GoogleFirestoreAdminV1IndexFieldResponse]{
		OutputState: o.OutputState,
	}
}

func (o GoogleFirestoreAdminV1IndexFieldResponseArrayOutput) Index(i pulumi.IntInput) GoogleFirestoreAdminV1IndexFieldResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleFirestoreAdminV1IndexFieldResponse {
		return vs[0].([]GoogleFirestoreAdminV1IndexFieldResponse)[vs[1].(int)]
	}).(GoogleFirestoreAdminV1IndexFieldResponseOutput)
}

// Represents a recurring schedule that runs on a specified day of the week. The time zone is UTC.
type GoogleFirestoreAdminV1WeeklyRecurrence struct {
	// The day of week to run. DAY_OF_WEEK_UNSPECIFIED is not allowed.
	Day *GoogleFirestoreAdminV1WeeklyRecurrenceDay `pulumi:"day"`
}

// GoogleFirestoreAdminV1WeeklyRecurrenceInput is an input type that accepts GoogleFirestoreAdminV1WeeklyRecurrenceArgs and GoogleFirestoreAdminV1WeeklyRecurrenceOutput values.
// You can construct a concrete instance of `GoogleFirestoreAdminV1WeeklyRecurrenceInput` via:
//
//	GoogleFirestoreAdminV1WeeklyRecurrenceArgs{...}
type GoogleFirestoreAdminV1WeeklyRecurrenceInput interface {
	pulumi.Input

	ToGoogleFirestoreAdminV1WeeklyRecurrenceOutput() GoogleFirestoreAdminV1WeeklyRecurrenceOutput
	ToGoogleFirestoreAdminV1WeeklyRecurrenceOutputWithContext(context.Context) GoogleFirestoreAdminV1WeeklyRecurrenceOutput
}

// Represents a recurring schedule that runs on a specified day of the week. The time zone is UTC.
type GoogleFirestoreAdminV1WeeklyRecurrenceArgs struct {
	// The day of week to run. DAY_OF_WEEK_UNSPECIFIED is not allowed.
	Day GoogleFirestoreAdminV1WeeklyRecurrenceDayPtrInput `pulumi:"day"`
}

func (GoogleFirestoreAdminV1WeeklyRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleFirestoreAdminV1WeeklyRecurrence)(nil)).Elem()
}

func (i GoogleFirestoreAdminV1WeeklyRecurrenceArgs) ToGoogleFirestoreAdminV1WeeklyRecurrenceOutput() GoogleFirestoreAdminV1WeeklyRecurrenceOutput {
	return i.ToGoogleFirestoreAdminV1WeeklyRecurrenceOutputWithContext(context.Background())
}

func (i GoogleFirestoreAdminV1WeeklyRecurrenceArgs) ToGoogleFirestoreAdminV1WeeklyRecurrenceOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1WeeklyRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleFirestoreAdminV1WeeklyRecurrenceOutput)
}

func (i GoogleFirestoreAdminV1WeeklyRecurrenceArgs) ToOutput(ctx context.Context) pulumix.Output[GoogleFirestoreAdminV1WeeklyRecurrence] {
	return pulumix.Output[GoogleFirestoreAdminV1WeeklyRecurrence]{
		OutputState: i.ToGoogleFirestoreAdminV1WeeklyRecurrenceOutputWithContext(ctx).OutputState,
	}
}

func (i GoogleFirestoreAdminV1WeeklyRecurrenceArgs) ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutput() GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput {
	return i.ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutputWithContext(context.Background())
}

func (i GoogleFirestoreAdminV1WeeklyRecurrenceArgs) ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleFirestoreAdminV1WeeklyRecurrenceOutput).ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutputWithContext(ctx)
}

// GoogleFirestoreAdminV1WeeklyRecurrencePtrInput is an input type that accepts GoogleFirestoreAdminV1WeeklyRecurrenceArgs, GoogleFirestoreAdminV1WeeklyRecurrencePtr and GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput values.
// You can construct a concrete instance of `GoogleFirestoreAdminV1WeeklyRecurrencePtrInput` via:
//
//	        GoogleFirestoreAdminV1WeeklyRecurrenceArgs{...}
//
//	or:
//
//	        nil
type GoogleFirestoreAdminV1WeeklyRecurrencePtrInput interface {
	pulumi.Input

	ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutput() GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput
	ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutputWithContext(context.Context) GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput
}

type googleFirestoreAdminV1WeeklyRecurrencePtrType GoogleFirestoreAdminV1WeeklyRecurrenceArgs

func GoogleFirestoreAdminV1WeeklyRecurrencePtr(v *GoogleFirestoreAdminV1WeeklyRecurrenceArgs) GoogleFirestoreAdminV1WeeklyRecurrencePtrInput {
	return (*googleFirestoreAdminV1WeeklyRecurrencePtrType)(v)
}

func (*googleFirestoreAdminV1WeeklyRecurrencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleFirestoreAdminV1WeeklyRecurrence)(nil)).Elem()
}

func (i *googleFirestoreAdminV1WeeklyRecurrencePtrType) ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutput() GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput {
	return i.ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutputWithContext(context.Background())
}

func (i *googleFirestoreAdminV1WeeklyRecurrencePtrType) ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput)
}

func (i *googleFirestoreAdminV1WeeklyRecurrencePtrType) ToOutput(ctx context.Context) pulumix.Output[*GoogleFirestoreAdminV1WeeklyRecurrence] {
	return pulumix.Output[*GoogleFirestoreAdminV1WeeklyRecurrence]{
		OutputState: i.ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutputWithContext(ctx).OutputState,
	}
}

// Represents a recurring schedule that runs on a specified day of the week. The time zone is UTC.
type GoogleFirestoreAdminV1WeeklyRecurrenceOutput struct{ *pulumi.OutputState }

func (GoogleFirestoreAdminV1WeeklyRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleFirestoreAdminV1WeeklyRecurrence)(nil)).Elem()
}

func (o GoogleFirestoreAdminV1WeeklyRecurrenceOutput) ToGoogleFirestoreAdminV1WeeklyRecurrenceOutput() GoogleFirestoreAdminV1WeeklyRecurrenceOutput {
	return o
}

func (o GoogleFirestoreAdminV1WeeklyRecurrenceOutput) ToGoogleFirestoreAdminV1WeeklyRecurrenceOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1WeeklyRecurrenceOutput {
	return o
}

func (o GoogleFirestoreAdminV1WeeklyRecurrenceOutput) ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutput() GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput {
	return o.ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutputWithContext(context.Background())
}

func (o GoogleFirestoreAdminV1WeeklyRecurrenceOutput) ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleFirestoreAdminV1WeeklyRecurrence) *GoogleFirestoreAdminV1WeeklyRecurrence {
		return &v
	}).(GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput)
}

func (o GoogleFirestoreAdminV1WeeklyRecurrenceOutput) ToOutput(ctx context.Context) pulumix.Output[GoogleFirestoreAdminV1WeeklyRecurrence] {
	return pulumix.Output[GoogleFirestoreAdminV1WeeklyRecurrence]{
		OutputState: o.OutputState,
	}
}

// The day of week to run. DAY_OF_WEEK_UNSPECIFIED is not allowed.
func (o GoogleFirestoreAdminV1WeeklyRecurrenceOutput) Day() GoogleFirestoreAdminV1WeeklyRecurrenceDayPtrOutput {
	return o.ApplyT(func(v GoogleFirestoreAdminV1WeeklyRecurrence) *GoogleFirestoreAdminV1WeeklyRecurrenceDay {
		return v.Day
	}).(GoogleFirestoreAdminV1WeeklyRecurrenceDayPtrOutput)
}

type GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput struct{ *pulumi.OutputState }

func (GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleFirestoreAdminV1WeeklyRecurrence)(nil)).Elem()
}

func (o GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput) ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutput() GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput {
	return o
}

func (o GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput) ToGoogleFirestoreAdminV1WeeklyRecurrencePtrOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput {
	return o
}

func (o GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GoogleFirestoreAdminV1WeeklyRecurrence] {
	return pulumix.Output[*GoogleFirestoreAdminV1WeeklyRecurrence]{
		OutputState: o.OutputState,
	}
}

func (o GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput) Elem() GoogleFirestoreAdminV1WeeklyRecurrenceOutput {
	return o.ApplyT(func(v *GoogleFirestoreAdminV1WeeklyRecurrence) GoogleFirestoreAdminV1WeeklyRecurrence {
		if v != nil {
			return *v
		}
		var ret GoogleFirestoreAdminV1WeeklyRecurrence
		return ret
	}).(GoogleFirestoreAdminV1WeeklyRecurrenceOutput)
}

// The day of week to run. DAY_OF_WEEK_UNSPECIFIED is not allowed.
func (o GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput) Day() GoogleFirestoreAdminV1WeeklyRecurrenceDayPtrOutput {
	return o.ApplyT(func(v *GoogleFirestoreAdminV1WeeklyRecurrence) *GoogleFirestoreAdminV1WeeklyRecurrenceDay {
		if v == nil {
			return nil
		}
		return v.Day
	}).(GoogleFirestoreAdminV1WeeklyRecurrenceDayPtrOutput)
}

// Represents a recurring schedule that runs on a specified day of the week. The time zone is UTC.
type GoogleFirestoreAdminV1WeeklyRecurrenceResponse struct {
	// The day of week to run. DAY_OF_WEEK_UNSPECIFIED is not allowed.
	Day string `pulumi:"day"`
}

// Represents a recurring schedule that runs on a specified day of the week. The time zone is UTC.
type GoogleFirestoreAdminV1WeeklyRecurrenceResponseOutput struct{ *pulumi.OutputState }

func (GoogleFirestoreAdminV1WeeklyRecurrenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleFirestoreAdminV1WeeklyRecurrenceResponse)(nil)).Elem()
}

func (o GoogleFirestoreAdminV1WeeklyRecurrenceResponseOutput) ToGoogleFirestoreAdminV1WeeklyRecurrenceResponseOutput() GoogleFirestoreAdminV1WeeklyRecurrenceResponseOutput {
	return o
}

func (o GoogleFirestoreAdminV1WeeklyRecurrenceResponseOutput) ToGoogleFirestoreAdminV1WeeklyRecurrenceResponseOutputWithContext(ctx context.Context) GoogleFirestoreAdminV1WeeklyRecurrenceResponseOutput {
	return o
}

func (o GoogleFirestoreAdminV1WeeklyRecurrenceResponseOutput) ToOutput(ctx context.Context) pulumix.Output[GoogleFirestoreAdminV1WeeklyRecurrenceResponse] {
	return pulumix.Output[GoogleFirestoreAdminV1WeeklyRecurrenceResponse]{
		OutputState: o.OutputState,
	}
}

// The day of week to run. DAY_OF_WEEK_UNSPECIFIED is not allowed.
func (o GoogleFirestoreAdminV1WeeklyRecurrenceResponseOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleFirestoreAdminV1WeeklyRecurrenceResponse) string { return v.Day }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleFirestoreAdminV1DailyRecurrenceInput)(nil)).Elem(), GoogleFirestoreAdminV1DailyRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleFirestoreAdminV1DailyRecurrencePtrInput)(nil)).Elem(), GoogleFirestoreAdminV1DailyRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleFirestoreAdminV1IndexFieldInput)(nil)).Elem(), GoogleFirestoreAdminV1IndexFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleFirestoreAdminV1IndexFieldArrayInput)(nil)).Elem(), GoogleFirestoreAdminV1IndexFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleFirestoreAdminV1WeeklyRecurrenceInput)(nil)).Elem(), GoogleFirestoreAdminV1WeeklyRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleFirestoreAdminV1WeeklyRecurrencePtrInput)(nil)).Elem(), GoogleFirestoreAdminV1WeeklyRecurrenceArgs{})
	pulumi.RegisterOutputType(GoogleFirestoreAdminV1DailyRecurrenceOutput{})
	pulumi.RegisterOutputType(GoogleFirestoreAdminV1DailyRecurrencePtrOutput{})
	pulumi.RegisterOutputType(GoogleFirestoreAdminV1DailyRecurrenceResponseOutput{})
	pulumi.RegisterOutputType(GoogleFirestoreAdminV1IndexFieldOutput{})
	pulumi.RegisterOutputType(GoogleFirestoreAdminV1IndexFieldArrayOutput{})
	pulumi.RegisterOutputType(GoogleFirestoreAdminV1IndexFieldResponseOutput{})
	pulumi.RegisterOutputType(GoogleFirestoreAdminV1IndexFieldResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleFirestoreAdminV1WeeklyRecurrenceOutput{})
	pulumi.RegisterOutputType(GoogleFirestoreAdminV1WeeklyRecurrencePtrOutput{})
	pulumi.RegisterOutputType(GoogleFirestoreAdminV1WeeklyRecurrenceResponseOutput{})
}
