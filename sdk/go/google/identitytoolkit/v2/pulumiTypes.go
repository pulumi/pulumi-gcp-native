// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Additional config for SignInWithApple.
type GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig struct {
	// A list of Bundle ID's usable by this project
	BundleIds      []string                                         `pulumi:"bundleIds"`
	CodeFlowConfig *GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig `pulumi:"codeFlowConfig"`
}

// GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs and GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigInput` via:
//
//	GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs{...}
type GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput() GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput
	ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput
}

// Additional config for SignInWithApple.
type GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs struct {
	// A list of Bundle ID's usable by this project
	BundleIds      pulumi.StringArrayInput                                 `pulumi:"bundleIds"`
	CodeFlowConfig GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrInput `pulumi:"codeFlowConfig"`
}

func (GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig)(nil)).Elem()
}

func (i GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput() GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput)
}

func (i GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput).ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutputWithContext(ctx)
}

// GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs, GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtr and GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrInput` via:
//
//	        GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput
	ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput
}

type googleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrType GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs

func GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtr(v *GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs) GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrInput {
	return (*googleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrType)(v)
}

func (*googleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig)(nil)).Elem()
}

func (i *googleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrType) ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrType) ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput)
}

// Additional config for SignInWithApple.
type GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput() GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput {
	return o.ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig) *GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig {
		return &v
	}).(GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput)
}

// A list of Bundle ID's usable by this project
func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput) BundleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig) []string { return v.BundleIds }).(pulumi.StringArrayOutput)
}

func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput) CodeFlowConfig() GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig) *GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig {
		return v.CodeFlowConfig
	}).(GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput)
}

type GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput) Elem() GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig) GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig
		return ret
	}).(GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput)
}

// A list of Bundle ID's usable by this project
func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput) BundleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig) []string {
		if v == nil {
			return nil
		}
		return v.BundleIds
	}).(pulumi.StringArrayOutput)
}

func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput) CodeFlowConfig() GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig) *GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig {
		if v == nil {
			return nil
		}
		return v.CodeFlowConfig
	}).(GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput)
}

// Additional config for SignInWithApple.
type GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponse struct {
	// A list of Bundle ID's usable by this project
	BundleIds      []string                                                `pulumi:"bundleIds"`
	CodeFlowConfig GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponse `pulumi:"codeFlowConfig"`
}

// Additional config for SignInWithApple.
type GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponseOutput() GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponseOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponseOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponseOutput {
	return o
}

// A list of Bundle ID's usable by this project
func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponseOutput) BundleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponse) []string { return v.BundleIds }).(pulumi.StringArrayOutput)
}

func (o GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponseOutput) CodeFlowConfig() GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponseOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponse) GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponse {
		return v.CodeFlowConfig
	}).(GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponseOutput)
}

// Options related to how clients making requests on behalf of a tenant should be configured.
type GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig struct {
	// Configuration related to restricting a user's ability to affect their account.
	Permissions *GoogleCloudIdentitytoolkitAdminV2ClientPermissions `pulumi:"permissions"`
}

// GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs and GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigInput` via:
//
//	GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs{...}
type GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput
	ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput
}

// Options related to how clients making requests on behalf of a tenant should be configured.
type GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs struct {
	// Configuration related to restricting a user's ability to affect their account.
	Permissions GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrInput `pulumi:"permissions"`
}

func (GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig)(nil)).Elem()
}

func (i GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput)
}

func (i GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput).ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutputWithContext(ctx)
}

// GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs, GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtr and GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrInput` via:
//
//	        GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput
	ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput
}

type googleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrType GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs

func GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtr(v *GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs) GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrInput {
	return (*googleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrType)(v)
}

func (*googleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig)(nil)).Elem()
}

func (i *googleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrType) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrType) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput)
}

// Options related to how clients making requests on behalf of a tenant should be configured.
type GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput {
	return o.ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig) *GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig {
		return &v
	}).(GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput)
}

// Configuration related to restricting a user's ability to affect their account.
func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput) Permissions() GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig) *GoogleCloudIdentitytoolkitAdminV2ClientPermissions {
		return v.Permissions
	}).(GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput)
}

type GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput) Elem() GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig) GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig
		return ret
	}).(GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput)
}

// Configuration related to restricting a user's ability to affect their account.
func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput) Permissions() GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig) *GoogleCloudIdentitytoolkitAdminV2ClientPermissions {
		if v == nil {
			return nil
		}
		return v.Permissions
	}).(GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput)
}

// Options related to how clients making requests on behalf of a tenant should be configured.
type GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponse struct {
	// Configuration related to restricting a user's ability to affect their account.
	Permissions GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponse `pulumi:"permissions"`
}

// Options related to how clients making requests on behalf of a tenant should be configured.
type GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponseOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponseOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponseOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponseOutput {
	return o
}

// Configuration related to restricting a user's ability to affect their account.
func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponseOutput) Permissions() GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponseOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponse) GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponse {
		return v.Permissions
	}).(GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponseOutput)
}

// Configuration related to restricting a user's ability to affect their account.
type GoogleCloudIdentitytoolkitAdminV2ClientPermissions struct {
	// When true, end users cannot delete their account on the associated project through any of our API methods
	DisabledUserDeletion *bool `pulumi:"disabledUserDeletion"`
	// When true, end users cannot sign up for a new account on the associated project through any of our API methods
	DisabledUserSignup *bool `pulumi:"disabledUserSignup"`
}

// GoogleCloudIdentitytoolkitAdminV2ClientPermissionsInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs and GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2ClientPermissionsInput` via:
//
//	GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs{...}
type GoogleCloudIdentitytoolkitAdminV2ClientPermissionsInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput
	ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput
}

// Configuration related to restricting a user's ability to affect their account.
type GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs struct {
	// When true, end users cannot delete their account on the associated project through any of our API methods
	DisabledUserDeletion pulumi.BoolPtrInput `pulumi:"disabledUserDeletion"`
	// When true, end users cannot sign up for a new account on the associated project through any of our API methods
	DisabledUserSignup pulumi.BoolPtrInput `pulumi:"disabledUserSignup"`
}

func (GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2ClientPermissions)(nil)).Elem()
}

func (i GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput)
}

func (i GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput).ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutputWithContext(ctx)
}

// GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs, GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtr and GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrInput` via:
//
//	        GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput
	ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput
}

type googleCloudIdentitytoolkitAdminV2ClientPermissionsPtrType GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs

func GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtr(v *GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs) GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrInput {
	return (*googleCloudIdentitytoolkitAdminV2ClientPermissionsPtrType)(v)
}

func (*googleCloudIdentitytoolkitAdminV2ClientPermissionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2ClientPermissions)(nil)).Elem()
}

func (i *googleCloudIdentitytoolkitAdminV2ClientPermissionsPtrType) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutputWithContext(context.Background())
}

func (i *googleCloudIdentitytoolkitAdminV2ClientPermissionsPtrType) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput)
}

// Configuration related to restricting a user's ability to affect their account.
type GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2ClientPermissions)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput {
	return o.ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudIdentitytoolkitAdminV2ClientPermissions) *GoogleCloudIdentitytoolkitAdminV2ClientPermissions {
		return &v
	}).(GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput)
}

// When true, end users cannot delete their account on the associated project through any of our API methods
func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput) DisabledUserDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2ClientPermissions) *bool { return v.DisabledUserDeletion }).(pulumi.BoolPtrOutput)
}

// When true, end users cannot sign up for a new account on the associated project through any of our API methods
func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput) DisabledUserSignup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2ClientPermissions) *bool { return v.DisabledUserSignup }).(pulumi.BoolPtrOutput)
}

type GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2ClientPermissions)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput) Elem() GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2ClientPermissions) GoogleCloudIdentitytoolkitAdminV2ClientPermissions {
		if v != nil {
			return *v
		}
		var ret GoogleCloudIdentitytoolkitAdminV2ClientPermissions
		return ret
	}).(GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput)
}

// When true, end users cannot delete their account on the associated project through any of our API methods
func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput) DisabledUserDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2ClientPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.DisabledUserDeletion
	}).(pulumi.BoolPtrOutput)
}

// When true, end users cannot sign up for a new account on the associated project through any of our API methods
func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput) DisabledUserSignup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2ClientPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.DisabledUserSignup
	}).(pulumi.BoolPtrOutput)
}

// Configuration related to restricting a user's ability to affect their account.
type GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponse struct {
	// When true, end users cannot delete their account on the associated project through any of our API methods
	DisabledUserDeletion bool `pulumi:"disabledUserDeletion"`
	// When true, end users cannot sign up for a new account on the associated project through any of our API methods
	DisabledUserSignup bool `pulumi:"disabledUserSignup"`
}

// Configuration related to restricting a user's ability to affect their account.
type GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponseOutput() GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponseOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponseOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponseOutput {
	return o
}

// When true, end users cannot delete their account on the associated project through any of our API methods
func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponseOutput) DisabledUserDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponse) bool { return v.DisabledUserDeletion }).(pulumi.BoolOutput)
}

// When true, end users cannot sign up for a new account on the associated project through any of our API methods
func (o GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponseOutput) DisabledUserSignup() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponse) bool { return v.DisabledUserSignup }).(pulumi.BoolOutput)
}

// Additional config for Apple for code flow.
type GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig struct {
	// Key ID for the private key.
	KeyId *string `pulumi:"keyId"`
	// Private key used for signing the client secret JWT.
	PrivateKey *string `pulumi:"privateKey"`
	// Apple Developer Team ID.
	TeamId *string `pulumi:"teamId"`
}

// GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs and GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigInput` via:
//
//	GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs{...}
type GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput() GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput
	ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput
}

// Additional config for Apple for code flow.
type GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs struct {
	// Key ID for the private key.
	KeyId pulumi.StringPtrInput `pulumi:"keyId"`
	// Private key used for signing the client secret JWT.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// Apple Developer Team ID.
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
}

func (GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig)(nil)).Elem()
}

func (i GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput() GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput)
}

func (i GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput).ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutputWithContext(ctx)
}

// GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs, GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtr and GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrInput` via:
//
//	        GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput
	ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput
}

type googleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrType GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs

func GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtr(v *GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs) GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrInput {
	return (*googleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrType)(v)
}

func (*googleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig)(nil)).Elem()
}

func (i *googleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrType) ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrType) ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput)
}

// Additional config for Apple for code flow.
type GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput() GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput {
	return o.ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig) *GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig {
		return &v
	}).(GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput)
}

// Key ID for the private key.
func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

// Private key used for signing the client secret JWT.
func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// Apple Developer Team ID.
func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

type GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput) Elem() GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig) GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig
		return ret
	}).(GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput)
}

// Key ID for the private key.
func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyId
	}).(pulumi.StringPtrOutput)
}

// Private key used for signing the client secret JWT.
func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// Apple Developer Team ID.
func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig) *string {
		if v == nil {
			return nil
		}
		return v.TeamId
	}).(pulumi.StringPtrOutput)
}

// Additional config for Apple for code flow.
type GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponse struct {
	// Key ID for the private key.
	KeyId string `pulumi:"keyId"`
	// Private key used for signing the client secret JWT.
	PrivateKey string `pulumi:"privateKey"`
	// Apple Developer Team ID.
	TeamId string `pulumi:"teamId"`
}

// Additional config for Apple for code flow.
type GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponseOutput() GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponseOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponseOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponseOutput {
	return o
}

// Key ID for the private key.
func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponseOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponse) string { return v.KeyId }).(pulumi.StringOutput)
}

// Private key used for signing the client secret JWT.
func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponseOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponse) string { return v.PrivateKey }).(pulumi.StringOutput)
}

// Apple Developer Team ID.
func (o GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponseOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponse) string { return v.TeamId }).(pulumi.StringOutput)
}

// History information of the hash algorithm and key. Different accounts' passwords may be generated by different version.
type GoogleCloudIdentitytoolkitAdminV2HashConfigResponse struct {
	// Different password hash algorithms used in Identity Toolkit.
	Algorithm string `pulumi:"algorithm"`
	// Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.
	MemoryCost int `pulumi:"memoryCost"`
	// How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.
	Rounds int `pulumi:"rounds"`
	// Non-printable character to be inserted between the salt and plain text password in base64.
	SaltSeparator string `pulumi:"saltSeparator"`
	// Signer key in base64.
	SignerKey string `pulumi:"signerKey"`
}

// History information of the hash algorithm and key. Different accounts' passwords may be generated by different version.
type GoogleCloudIdentitytoolkitAdminV2HashConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2HashConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2HashConfigResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2HashConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2HashConfigResponseOutput() GoogleCloudIdentitytoolkitAdminV2HashConfigResponseOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2HashConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2HashConfigResponseOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2HashConfigResponseOutput {
	return o
}

// Different password hash algorithms used in Identity Toolkit.
func (o GoogleCloudIdentitytoolkitAdminV2HashConfigResponseOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2HashConfigResponse) string { return v.Algorithm }).(pulumi.StringOutput)
}

// Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.
func (o GoogleCloudIdentitytoolkitAdminV2HashConfigResponseOutput) MemoryCost() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2HashConfigResponse) int { return v.MemoryCost }).(pulumi.IntOutput)
}

// How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.
func (o GoogleCloudIdentitytoolkitAdminV2HashConfigResponseOutput) Rounds() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2HashConfigResponse) int { return v.Rounds }).(pulumi.IntOutput)
}

// Non-printable character to be inserted between the salt and plain text password in base64.
func (o GoogleCloudIdentitytoolkitAdminV2HashConfigResponseOutput) SaltSeparator() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2HashConfigResponse) string { return v.SaltSeparator }).(pulumi.StringOutput)
}

// Signer key in base64.
func (o GoogleCloudIdentitytoolkitAdminV2HashConfigResponseOutput) SignerKey() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2HashConfigResponse) string { return v.SignerKey }).(pulumi.StringOutput)
}

// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
type GoogleCloudIdentitytoolkitAdminV2IdpCertificate struct {
	// The x509 certificate
	X509Certificate *string `pulumi:"x509Certificate"`
}

// GoogleCloudIdentitytoolkitAdminV2IdpCertificateInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2IdpCertificateArgs and GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2IdpCertificateInput` via:
//
//	GoogleCloudIdentitytoolkitAdminV2IdpCertificateArgs{...}
type GoogleCloudIdentitytoolkitAdminV2IdpCertificateInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput() GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput
	ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput
}

// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
type GoogleCloudIdentitytoolkitAdminV2IdpCertificateArgs struct {
	// The x509 certificate
	X509Certificate pulumi.StringPtrInput `pulumi:"x509Certificate"`
}

func (GoogleCloudIdentitytoolkitAdminV2IdpCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2IdpCertificate)(nil)).Elem()
}

func (i GoogleCloudIdentitytoolkitAdminV2IdpCertificateArgs) ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput() GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2IdpCertificateArgs) ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput)
}

// GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2IdpCertificateArray and GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayInput` via:
//
//	GoogleCloudIdentitytoolkitAdminV2IdpCertificateArray{ GoogleCloudIdentitytoolkitAdminV2IdpCertificateArgs{...} }
type GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput() GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput
	ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput
}

type GoogleCloudIdentitytoolkitAdminV2IdpCertificateArray []GoogleCloudIdentitytoolkitAdminV2IdpCertificateInput

func (GoogleCloudIdentitytoolkitAdminV2IdpCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudIdentitytoolkitAdminV2IdpCertificate)(nil)).Elem()
}

func (i GoogleCloudIdentitytoolkitAdminV2IdpCertificateArray) ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput() GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2IdpCertificateArray) ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput)
}

// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
type GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2IdpCertificate)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput() GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput {
	return o
}

// The x509 certificate
func (o GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput) X509Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2IdpCertificate) *string { return v.X509Certificate }).(pulumi.StringPtrOutput)
}

type GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudIdentitytoolkitAdminV2IdpCertificate)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput() GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput) Index(i pulumi.IntInput) GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudIdentitytoolkitAdminV2IdpCertificate {
		return vs[0].([]GoogleCloudIdentitytoolkitAdminV2IdpCertificate)[vs[1].(int)]
	}).(GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput)
}

// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
type GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponse struct {
	// The x509 certificate
	X509Certificate string `pulumi:"x509Certificate"`
}

// The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
type GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseOutput() GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseOutput {
	return o
}

// The x509 certificate
func (o GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseOutput) X509Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponse) string { return v.X509Certificate }).(pulumi.StringOutput)
}

type GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseArrayOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseArrayOutput() GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseArrayOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseArrayOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseArrayOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseArrayOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponse {
		return vs[0].([]GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponse)[vs[1].(int)]
	}).(GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseOutput)
}

// The SAML IdP (Identity Provider) configuration when the project acts as the relying party.
type GoogleCloudIdentitytoolkitAdminV2IdpConfig struct {
	// IDP's public keys for verifying signature in the assertions.
	IdpCertificates []GoogleCloudIdentitytoolkitAdminV2IdpCertificate `pulumi:"idpCertificates"`
	// Unique identifier for all SAML entities.
	IdpEntityId *string `pulumi:"idpEntityId"`
	// Indicates if outbounding SAMLRequest should be signed.
	SignRequest *bool `pulumi:"signRequest"`
	// URL to send Authentication request to.
	SsoUrl *string `pulumi:"ssoUrl"`
}

// GoogleCloudIdentitytoolkitAdminV2IdpConfigInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs and GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2IdpConfigInput` via:
//
//	GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs{...}
type GoogleCloudIdentitytoolkitAdminV2IdpConfigInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2IdpConfigOutput() GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput
	ToGoogleCloudIdentitytoolkitAdminV2IdpConfigOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput
}

// The SAML IdP (Identity Provider) configuration when the project acts as the relying party.
type GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs struct {
	// IDP's public keys for verifying signature in the assertions.
	IdpCertificates GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayInput `pulumi:"idpCertificates"`
	// Unique identifier for all SAML entities.
	IdpEntityId pulumi.StringPtrInput `pulumi:"idpEntityId"`
	// Indicates if outbounding SAMLRequest should be signed.
	SignRequest pulumi.BoolPtrInput `pulumi:"signRequest"`
	// URL to send Authentication request to.
	SsoUrl pulumi.StringPtrInput `pulumi:"ssoUrl"`
}

func (GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2IdpConfig)(nil)).Elem()
}

func (i GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2IdpConfigOutput() GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2IdpConfigOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2IdpConfigOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput)
}

func (i GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput).ToGoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutputWithContext(ctx)
}

// GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs, GoogleCloudIdentitytoolkitAdminV2IdpConfigPtr and GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrInput` via:
//
//	        GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput
	ToGoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput
}

type googleCloudIdentitytoolkitAdminV2IdpConfigPtrType GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs

func GoogleCloudIdentitytoolkitAdminV2IdpConfigPtr(v *GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs) GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrInput {
	return (*googleCloudIdentitytoolkitAdminV2IdpConfigPtrType)(v)
}

func (*googleCloudIdentitytoolkitAdminV2IdpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2IdpConfig)(nil)).Elem()
}

func (i *googleCloudIdentitytoolkitAdminV2IdpConfigPtrType) ToGoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudIdentitytoolkitAdminV2IdpConfigPtrType) ToGoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput)
}

// The SAML IdP (Identity Provider) configuration when the project acts as the relying party.
type GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2IdpConfig)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpConfigOutput() GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpConfigOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput {
	return o.ToGoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudIdentitytoolkitAdminV2IdpConfig) *GoogleCloudIdentitytoolkitAdminV2IdpConfig {
		return &v
	}).(GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput)
}

// IDP's public keys for verifying signature in the assertions.
func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput) IdpCertificates() GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2IdpConfig) []GoogleCloudIdentitytoolkitAdminV2IdpCertificate {
		return v.IdpCertificates
	}).(GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput)
}

// Unique identifier for all SAML entities.
func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput) IdpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2IdpConfig) *string { return v.IdpEntityId }).(pulumi.StringPtrOutput)
}

// Indicates if outbounding SAMLRequest should be signed.
func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput) SignRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2IdpConfig) *bool { return v.SignRequest }).(pulumi.BoolPtrOutput)
}

// URL to send Authentication request to.
func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput) SsoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2IdpConfig) *string { return v.SsoUrl }).(pulumi.StringPtrOutput)
}

type GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2IdpConfig)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput) Elem() GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2IdpConfig) GoogleCloudIdentitytoolkitAdminV2IdpConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudIdentitytoolkitAdminV2IdpConfig
		return ret
	}).(GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput)
}

// IDP's public keys for verifying signature in the assertions.
func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput) IdpCertificates() GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2IdpConfig) []GoogleCloudIdentitytoolkitAdminV2IdpCertificate {
		if v == nil {
			return nil
		}
		return v.IdpCertificates
	}).(GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput)
}

// Unique identifier for all SAML entities.
func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput) IdpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2IdpConfig) *string {
		if v == nil {
			return nil
		}
		return v.IdpEntityId
	}).(pulumi.StringPtrOutput)
}

// Indicates if outbounding SAMLRequest should be signed.
func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput) SignRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2IdpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.SignRequest
	}).(pulumi.BoolPtrOutput)
}

// URL to send Authentication request to.
func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput) SsoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2IdpConfig) *string {
		if v == nil {
			return nil
		}
		return v.SsoUrl
	}).(pulumi.StringPtrOutput)
}

// The SAML IdP (Identity Provider) configuration when the project acts as the relying party.
type GoogleCloudIdentitytoolkitAdminV2IdpConfigResponse struct {
	// IDP's public keys for verifying signature in the assertions.
	IdpCertificates []GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponse `pulumi:"idpCertificates"`
	// Unique identifier for all SAML entities.
	IdpEntityId string `pulumi:"idpEntityId"`
	// Indicates if outbounding SAMLRequest should be signed.
	SignRequest bool `pulumi:"signRequest"`
	// URL to send Authentication request to.
	SsoUrl string `pulumi:"ssoUrl"`
}

// The SAML IdP (Identity Provider) configuration when the project acts as the relying party.
type GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2IdpConfigResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput() GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput {
	return o
}

// IDP's public keys for verifying signature in the assertions.
func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput) IdpCertificates() GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2IdpConfigResponse) []GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponse {
		return v.IdpCertificates
	}).(GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseArrayOutput)
}

// Unique identifier for all SAML entities.
func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput) IdpEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2IdpConfigResponse) string { return v.IdpEntityId }).(pulumi.StringOutput)
}

// Indicates if outbounding SAMLRequest should be signed.
func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput) SignRequest() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2IdpConfigResponse) bool { return v.SignRequest }).(pulumi.BoolOutput)
}

// URL to send Authentication request to.
func (o GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput) SsoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2IdpConfigResponse) string { return v.SsoUrl }).(pulumi.StringOutput)
}

// Settings that the tenants will inherit from project level.
type GoogleCloudIdentitytoolkitAdminV2Inheritance struct {
	// Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations.
	EmailSendingConfig *bool `pulumi:"emailSendingConfig"`
}

// GoogleCloudIdentitytoolkitAdminV2InheritanceInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2InheritanceArgs and GoogleCloudIdentitytoolkitAdminV2InheritanceOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2InheritanceInput` via:
//
//	GoogleCloudIdentitytoolkitAdminV2InheritanceArgs{...}
type GoogleCloudIdentitytoolkitAdminV2InheritanceInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2InheritanceOutput() GoogleCloudIdentitytoolkitAdminV2InheritanceOutput
	ToGoogleCloudIdentitytoolkitAdminV2InheritanceOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2InheritanceOutput
}

// Settings that the tenants will inherit from project level.
type GoogleCloudIdentitytoolkitAdminV2InheritanceArgs struct {
	// Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations.
	EmailSendingConfig pulumi.BoolPtrInput `pulumi:"emailSendingConfig"`
}

func (GoogleCloudIdentitytoolkitAdminV2InheritanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2Inheritance)(nil)).Elem()
}

func (i GoogleCloudIdentitytoolkitAdminV2InheritanceArgs) ToGoogleCloudIdentitytoolkitAdminV2InheritanceOutput() GoogleCloudIdentitytoolkitAdminV2InheritanceOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2InheritanceOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2InheritanceArgs) ToGoogleCloudIdentitytoolkitAdminV2InheritanceOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2InheritanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2InheritanceOutput)
}

func (i GoogleCloudIdentitytoolkitAdminV2InheritanceArgs) ToGoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput() GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2InheritancePtrOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2InheritanceArgs) ToGoogleCloudIdentitytoolkitAdminV2InheritancePtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2InheritanceOutput).ToGoogleCloudIdentitytoolkitAdminV2InheritancePtrOutputWithContext(ctx)
}

// GoogleCloudIdentitytoolkitAdminV2InheritancePtrInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2InheritanceArgs, GoogleCloudIdentitytoolkitAdminV2InheritancePtr and GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2InheritancePtrInput` via:
//
//	        GoogleCloudIdentitytoolkitAdminV2InheritanceArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudIdentitytoolkitAdminV2InheritancePtrInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput() GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput
	ToGoogleCloudIdentitytoolkitAdminV2InheritancePtrOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput
}

type googleCloudIdentitytoolkitAdminV2InheritancePtrType GoogleCloudIdentitytoolkitAdminV2InheritanceArgs

func GoogleCloudIdentitytoolkitAdminV2InheritancePtr(v *GoogleCloudIdentitytoolkitAdminV2InheritanceArgs) GoogleCloudIdentitytoolkitAdminV2InheritancePtrInput {
	return (*googleCloudIdentitytoolkitAdminV2InheritancePtrType)(v)
}

func (*googleCloudIdentitytoolkitAdminV2InheritancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2Inheritance)(nil)).Elem()
}

func (i *googleCloudIdentitytoolkitAdminV2InheritancePtrType) ToGoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput() GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2InheritancePtrOutputWithContext(context.Background())
}

func (i *googleCloudIdentitytoolkitAdminV2InheritancePtrType) ToGoogleCloudIdentitytoolkitAdminV2InheritancePtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput)
}

// Settings that the tenants will inherit from project level.
type GoogleCloudIdentitytoolkitAdminV2InheritanceOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2InheritanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2Inheritance)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2InheritanceOutput) ToGoogleCloudIdentitytoolkitAdminV2InheritanceOutput() GoogleCloudIdentitytoolkitAdminV2InheritanceOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2InheritanceOutput) ToGoogleCloudIdentitytoolkitAdminV2InheritanceOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2InheritanceOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2InheritanceOutput) ToGoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput() GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput {
	return o.ToGoogleCloudIdentitytoolkitAdminV2InheritancePtrOutputWithContext(context.Background())
}

func (o GoogleCloudIdentitytoolkitAdminV2InheritanceOutput) ToGoogleCloudIdentitytoolkitAdminV2InheritancePtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudIdentitytoolkitAdminV2Inheritance) *GoogleCloudIdentitytoolkitAdminV2Inheritance {
		return &v
	}).(GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput)
}

// Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations.
func (o GoogleCloudIdentitytoolkitAdminV2InheritanceOutput) EmailSendingConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2Inheritance) *bool { return v.EmailSendingConfig }).(pulumi.BoolPtrOutput)
}

type GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2Inheritance)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput) ToGoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput() GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput) ToGoogleCloudIdentitytoolkitAdminV2InheritancePtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput) Elem() GoogleCloudIdentitytoolkitAdminV2InheritanceOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2Inheritance) GoogleCloudIdentitytoolkitAdminV2Inheritance {
		if v != nil {
			return *v
		}
		var ret GoogleCloudIdentitytoolkitAdminV2Inheritance
		return ret
	}).(GoogleCloudIdentitytoolkitAdminV2InheritanceOutput)
}

// Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations.
func (o GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput) EmailSendingConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2Inheritance) *bool {
		if v == nil {
			return nil
		}
		return v.EmailSendingConfig
	}).(pulumi.BoolPtrOutput)
}

// Settings that the tenants will inherit from project level.
type GoogleCloudIdentitytoolkitAdminV2InheritanceResponse struct {
	// Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations.
	EmailSendingConfig bool `pulumi:"emailSendingConfig"`
}

// Settings that the tenants will inherit from project level.
type GoogleCloudIdentitytoolkitAdminV2InheritanceResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2InheritanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2InheritanceResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2InheritanceResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2InheritanceResponseOutput() GoogleCloudIdentitytoolkitAdminV2InheritanceResponseOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2InheritanceResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2InheritanceResponseOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2InheritanceResponseOutput {
	return o
}

// Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations.
func (o GoogleCloudIdentitytoolkitAdminV2InheritanceResponseOutput) EmailSendingConfig() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2InheritanceResponse) bool { return v.EmailSendingConfig }).(pulumi.BoolOutput)
}

// Configuration related to monitoring project activity.
type GoogleCloudIdentitytoolkitAdminV2MonitoringConfig struct {
	// Configuration for logging requests made to this project to Stackdriver Logging
	RequestLogging *GoogleCloudIdentitytoolkitAdminV2RequestLogging `pulumi:"requestLogging"`
}

// GoogleCloudIdentitytoolkitAdminV2MonitoringConfigInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs and GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2MonitoringConfigInput` via:
//
//	GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs{...}
type GoogleCloudIdentitytoolkitAdminV2MonitoringConfigInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput() GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput
	ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput
}

// Configuration related to monitoring project activity.
type GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs struct {
	// Configuration for logging requests made to this project to Stackdriver Logging
	RequestLogging GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrInput `pulumi:"requestLogging"`
}

func (GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2MonitoringConfig)(nil)).Elem()
}

func (i GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput() GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput)
}

func (i GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput).ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutputWithContext(ctx)
}

// GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs, GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtr and GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrInput` via:
//
//	        GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput
	ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput
}

type googleCloudIdentitytoolkitAdminV2MonitoringConfigPtrType GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs

func GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtr(v *GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs) GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrInput {
	return (*googleCloudIdentitytoolkitAdminV2MonitoringConfigPtrType)(v)
}

func (*googleCloudIdentitytoolkitAdminV2MonitoringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2MonitoringConfig)(nil)).Elem()
}

func (i *googleCloudIdentitytoolkitAdminV2MonitoringConfigPtrType) ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudIdentitytoolkitAdminV2MonitoringConfigPtrType) ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput)
}

// Configuration related to monitoring project activity.
type GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2MonitoringConfig)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput() GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput {
	return o.ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudIdentitytoolkitAdminV2MonitoringConfig) *GoogleCloudIdentitytoolkitAdminV2MonitoringConfig {
		return &v
	}).(GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput)
}

// Configuration for logging requests made to this project to Stackdriver Logging
func (o GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput) RequestLogging() GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2MonitoringConfig) *GoogleCloudIdentitytoolkitAdminV2RequestLogging {
		return v.RequestLogging
	}).(GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput)
}

type GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2MonitoringConfig)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput) Elem() GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2MonitoringConfig) GoogleCloudIdentitytoolkitAdminV2MonitoringConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudIdentitytoolkitAdminV2MonitoringConfig
		return ret
	}).(GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput)
}

// Configuration for logging requests made to this project to Stackdriver Logging
func (o GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput) RequestLogging() GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2MonitoringConfig) *GoogleCloudIdentitytoolkitAdminV2RequestLogging {
		if v == nil {
			return nil
		}
		return v.RequestLogging
	}).(GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput)
}

// Configuration related to monitoring project activity.
type GoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponse struct {
	// Configuration for logging requests made to this project to Stackdriver Logging
	RequestLogging GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponse `pulumi:"requestLogging"`
}

// Configuration related to monitoring project activity.
type GoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponseOutput() GoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponseOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponseOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponseOutput {
	return o
}

// Configuration for logging requests made to this project to Stackdriver Logging
func (o GoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponseOutput) RequestLogging() GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponseOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponse) GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponse {
		return v.RequestLogging
	}).(GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponseOutput)
}

// Options related to MultiFactor Authentication for the project.
type GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig struct {
	// A list of usable second factors for this project.
	EnabledProviders []GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersItem `pulumi:"enabledProviders"`
	// Whether MultiFactor Authentication has been enabled for this project.
	State *GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigState `pulumi:"state"`
}

// GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs and GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigInput` via:
//
//	GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs{...}
type GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput() GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput
	ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput
}

// Options related to MultiFactor Authentication for the project.
type GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs struct {
	// A list of usable second factors for this project.
	EnabledProviders GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersItemArrayInput `pulumi:"enabledProviders"`
	// Whether MultiFactor Authentication has been enabled for this project.
	State GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStatePtrInput `pulumi:"state"`
}

func (GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig)(nil)).Elem()
}

func (i GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput() GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput)
}

func (i GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput).ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutputWithContext(ctx)
}

// GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs, GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtr and GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrInput` via:
//
//	        GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput
	ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput
}

type googleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrType GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs

func GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtr(v *GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs) GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrInput {
	return (*googleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrType)(v)
}

func (*googleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig)(nil)).Elem()
}

func (i *googleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrType) ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrType) ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput)
}

// Options related to MultiFactor Authentication for the project.
type GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput() GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput {
	return o.ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig) *GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig {
		return &v
	}).(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput)
}

// A list of usable second factors for this project.
func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput) EnabledProviders() GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersItemArrayOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig) []GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersItem {
		return v.EnabledProviders
	}).(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersItemArrayOutput)
}

// Whether MultiFactor Authentication has been enabled for this project.
func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput) State() GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStatePtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig) *GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigState {
		return v.State
	}).(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStatePtrOutput)
}

type GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput) Elem() GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig) GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig
		return ret
	}).(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput)
}

// A list of usable second factors for this project.
func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput) EnabledProviders() GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersItemArrayOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig) []GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersItem {
		if v == nil {
			return nil
		}
		return v.EnabledProviders
	}).(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersItemArrayOutput)
}

// Whether MultiFactor Authentication has been enabled for this project.
func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput) State() GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStatePtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig) *GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigState {
		if v == nil {
			return nil
		}
		return v.State
	}).(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStatePtrOutput)
}

// Options related to MultiFactor Authentication for the project.
type GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponse struct {
	// A list of usable second factors for this project.
	EnabledProviders []string `pulumi:"enabledProviders"`
	// Whether MultiFactor Authentication has been enabled for this project.
	State string `pulumi:"state"`
}

// Options related to MultiFactor Authentication for the project.
type GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponseOutput() GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponseOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponseOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponseOutput {
	return o
}

// A list of usable second factors for this project.
func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponseOutput) EnabledProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponse) []string {
		return v.EnabledProviders
	}).(pulumi.StringArrayOutput)
}

// Whether MultiFactor Authentication has been enabled for this project.
func (o GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponse) string { return v.State }).(pulumi.StringOutput)
}

// The response type to request for in the OAuth authorization flow. You can set either `id_token` or `code` to true, but not both. Setting both types to be simultaneously true (`{code: true, id_token: true}`) is not yet supported. See https://openid.net/specs/openid-connect-core-1_0.html#Authentication for a mapping of response type to OAuth 2.0 flow.
type GoogleCloudIdentitytoolkitAdminV2OAuthResponseType struct {
	// If true, authorization code is returned from IdP's authorization endpoint.
	Code *bool `pulumi:"code"`
	// If true, ID token is returned from IdP's authorization endpoint.
	IdToken *bool `pulumi:"idToken"`
	// Do not use. The `token` response type is not supported at the moment.
	Token *bool `pulumi:"token"`
}

// GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs and GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeInput` via:
//
//	GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs{...}
type GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput() GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput
	ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput
}

// The response type to request for in the OAuth authorization flow. You can set either `id_token` or `code` to true, but not both. Setting both types to be simultaneously true (`{code: true, id_token: true}`) is not yet supported. See https://openid.net/specs/openid-connect-core-1_0.html#Authentication for a mapping of response type to OAuth 2.0 flow.
type GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs struct {
	// If true, authorization code is returned from IdP's authorization endpoint.
	Code pulumi.BoolPtrInput `pulumi:"code"`
	// If true, ID token is returned from IdP's authorization endpoint.
	IdToken pulumi.BoolPtrInput `pulumi:"idToken"`
	// Do not use. The `token` response type is not supported at the moment.
	Token pulumi.BoolPtrInput `pulumi:"token"`
}

func (GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2OAuthResponseType)(nil)).Elem()
}

func (i GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs) ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput() GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs) ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput)
}

func (i GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs) ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput() GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs) ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput).ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutputWithContext(ctx)
}

// GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs, GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtr and GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrInput` via:
//
//	        GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput() GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput
	ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput
}

type googleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrType GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs

func GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtr(v *GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs) GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrInput {
	return (*googleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrType)(v)
}

func (*googleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2OAuthResponseType)(nil)).Elem()
}

func (i *googleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrType) ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput() GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutputWithContext(context.Background())
}

func (i *googleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrType) ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput)
}

// The response type to request for in the OAuth authorization flow. You can set either `id_token` or `code` to true, but not both. Setting both types to be simultaneously true (`{code: true, id_token: true}`) is not yet supported. See https://openid.net/specs/openid-connect-core-1_0.html#Authentication for a mapping of response type to OAuth 2.0 flow.
type GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2OAuthResponseType)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput) ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput() GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput) ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput) ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput() GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput {
	return o.ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutputWithContext(context.Background())
}

func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput) ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudIdentitytoolkitAdminV2OAuthResponseType) *GoogleCloudIdentitytoolkitAdminV2OAuthResponseType {
		return &v
	}).(GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput)
}

// If true, authorization code is returned from IdP's authorization endpoint.
func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2OAuthResponseType) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

// If true, ID token is returned from IdP's authorization endpoint.
func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput) IdToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2OAuthResponseType) *bool { return v.IdToken }).(pulumi.BoolPtrOutput)
}

// Do not use. The `token` response type is not supported at the moment.
func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput) Token() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2OAuthResponseType) *bool { return v.Token }).(pulumi.BoolPtrOutput)
}

type GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2OAuthResponseType)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput) ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput() GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput) ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput) Elem() GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2OAuthResponseType) GoogleCloudIdentitytoolkitAdminV2OAuthResponseType {
		if v != nil {
			return *v
		}
		var ret GoogleCloudIdentitytoolkitAdminV2OAuthResponseType
		return ret
	}).(GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput)
}

// If true, authorization code is returned from IdP's authorization endpoint.
func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2OAuthResponseType) *bool {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.BoolPtrOutput)
}

// If true, ID token is returned from IdP's authorization endpoint.
func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput) IdToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2OAuthResponseType) *bool {
		if v == nil {
			return nil
		}
		return v.IdToken
	}).(pulumi.BoolPtrOutput)
}

// Do not use. The `token` response type is not supported at the moment.
func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput) Token() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2OAuthResponseType) *bool {
		if v == nil {
			return nil
		}
		return v.Token
	}).(pulumi.BoolPtrOutput)
}

// The response type to request for in the OAuth authorization flow. You can set either `id_token` or `code` to true, but not both. Setting both types to be simultaneously true (`{code: true, id_token: true}`) is not yet supported. See https://openid.net/specs/openid-connect-core-1_0.html#Authentication for a mapping of response type to OAuth 2.0 flow.
type GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponse struct {
	// If true, authorization code is returned from IdP's authorization endpoint.
	Code bool `pulumi:"code"`
	// If true, ID token is returned from IdP's authorization endpoint.
	IdToken bool `pulumi:"idToken"`
	// Do not use. The `token` response type is not supported at the moment.
	Token bool `pulumi:"token"`
}

// The response type to request for in the OAuth authorization flow. You can set either `id_token` or `code` to true, but not both. Setting both types to be simultaneously true (`{code: true, id_token: true}`) is not yet supported. See https://openid.net/specs/openid-connect-core-1_0.html#Authentication for a mapping of response type to OAuth 2.0 flow.
type GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponseOutput() GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponseOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponseOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponseOutput {
	return o
}

// If true, authorization code is returned from IdP's authorization endpoint.
func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponseOutput) Code() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponse) bool { return v.Code }).(pulumi.BoolOutput)
}

// If true, ID token is returned from IdP's authorization endpoint.
func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponseOutput) IdToken() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponse) bool { return v.IdToken }).(pulumi.BoolOutput)
}

// Do not use. The `token` response type is not supported at the moment.
func (o GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponseOutput) Token() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponse) bool { return v.Token }).(pulumi.BoolOutput)
}

// Configuration for logging requests made to this project to Stackdriver Logging
type GoogleCloudIdentitytoolkitAdminV2RequestLogging struct {
	// Whether logging is enabled for this project or not.
	Enabled *bool `pulumi:"enabled"`
}

// GoogleCloudIdentitytoolkitAdminV2RequestLoggingInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs and GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2RequestLoggingInput` via:
//
//	GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs{...}
type GoogleCloudIdentitytoolkitAdminV2RequestLoggingInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput() GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput
	ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput
}

// Configuration for logging requests made to this project to Stackdriver Logging
type GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs struct {
	// Whether logging is enabled for this project or not.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2RequestLogging)(nil)).Elem()
}

func (i GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs) ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput() GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs) ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput)
}

func (i GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs) ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput() GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs) ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput).ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutputWithContext(ctx)
}

// GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs, GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtr and GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrInput` via:
//
//	        GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput() GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput
	ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput
}

type googleCloudIdentitytoolkitAdminV2RequestLoggingPtrType GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs

func GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtr(v *GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs) GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrInput {
	return (*googleCloudIdentitytoolkitAdminV2RequestLoggingPtrType)(v)
}

func (*googleCloudIdentitytoolkitAdminV2RequestLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2RequestLogging)(nil)).Elem()
}

func (i *googleCloudIdentitytoolkitAdminV2RequestLoggingPtrType) ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput() GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutputWithContext(context.Background())
}

func (i *googleCloudIdentitytoolkitAdminV2RequestLoggingPtrType) ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput)
}

// Configuration for logging requests made to this project to Stackdriver Logging
type GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2RequestLogging)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput) ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput() GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput) ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput) ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput() GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput {
	return o.ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutputWithContext(context.Background())
}

func (o GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput) ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudIdentitytoolkitAdminV2RequestLogging) *GoogleCloudIdentitytoolkitAdminV2RequestLogging {
		return &v
	}).(GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput)
}

// Whether logging is enabled for this project or not.
func (o GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2RequestLogging) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2RequestLogging)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput() GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput) Elem() GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2RequestLogging) GoogleCloudIdentitytoolkitAdminV2RequestLogging {
		if v != nil {
			return *v
		}
		var ret GoogleCloudIdentitytoolkitAdminV2RequestLogging
		return ret
	}).(GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput)
}

// Whether logging is enabled for this project or not.
func (o GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2RequestLogging) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Configuration for logging requests made to this project to Stackdriver Logging
type GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponse struct {
	// Whether logging is enabled for this project or not.
	Enabled bool `pulumi:"enabled"`
}

// Configuration for logging requests made to this project to Stackdriver Logging
type GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingResponseOutput() GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponseOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2RequestLoggingResponseOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponseOutput {
	return o
}

// Whether logging is enabled for this project or not.
func (o GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The SP's certificate data for IDP to verify the SAMLRequest generated by the SP.
type GoogleCloudIdentitytoolkitAdminV2SpCertificateResponse struct {
	// Timestamp of the cert expiration instance.
	ExpiresAt string `pulumi:"expiresAt"`
	// Self-signed public certificate.
	X509Certificate string `pulumi:"x509Certificate"`
}

// The SP's certificate data for IDP to verify the SAMLRequest generated by the SP.
type GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2SpCertificateResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2SpCertificateResponseOutput() GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2SpCertificateResponseOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseOutput {
	return o
}

// Timestamp of the cert expiration instance.
func (o GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2SpCertificateResponse) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// Self-signed public certificate.
func (o GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseOutput) X509Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2SpCertificateResponse) string { return v.X509Certificate }).(pulumi.StringOutput)
}

type GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudIdentitytoolkitAdminV2SpCertificateResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseArrayOutput) ToGoogleCloudIdentitytoolkitAdminV2SpCertificateResponseArrayOutput() GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseArrayOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseArrayOutput) ToGoogleCloudIdentitytoolkitAdminV2SpCertificateResponseArrayOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseArrayOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudIdentitytoolkitAdminV2SpCertificateResponse {
		return vs[0].([]GoogleCloudIdentitytoolkitAdminV2SpCertificateResponse)[vs[1].(int)]
	}).(GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseOutput)
}

// The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
type GoogleCloudIdentitytoolkitAdminV2SpConfig struct {
	// Callback URI where responses from IDP are handled.
	CallbackUri *string `pulumi:"callbackUri"`
	// Unique identifier for all SAML entities.
	SpEntityId *string `pulumi:"spEntityId"`
}

// GoogleCloudIdentitytoolkitAdminV2SpConfigInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2SpConfigArgs and GoogleCloudIdentitytoolkitAdminV2SpConfigOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2SpConfigInput` via:
//
//	GoogleCloudIdentitytoolkitAdminV2SpConfigArgs{...}
type GoogleCloudIdentitytoolkitAdminV2SpConfigInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2SpConfigOutput() GoogleCloudIdentitytoolkitAdminV2SpConfigOutput
	ToGoogleCloudIdentitytoolkitAdminV2SpConfigOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2SpConfigOutput
}

// The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
type GoogleCloudIdentitytoolkitAdminV2SpConfigArgs struct {
	// Callback URI where responses from IDP are handled.
	CallbackUri pulumi.StringPtrInput `pulumi:"callbackUri"`
	// Unique identifier for all SAML entities.
	SpEntityId pulumi.StringPtrInput `pulumi:"spEntityId"`
}

func (GoogleCloudIdentitytoolkitAdminV2SpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2SpConfig)(nil)).Elem()
}

func (i GoogleCloudIdentitytoolkitAdminV2SpConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2SpConfigOutput() GoogleCloudIdentitytoolkitAdminV2SpConfigOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2SpConfigOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2SpConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2SpConfigOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2SpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2SpConfigOutput)
}

func (i GoogleCloudIdentitytoolkitAdminV2SpConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudIdentitytoolkitAdminV2SpConfigArgs) ToGoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2SpConfigOutput).ToGoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutputWithContext(ctx)
}

// GoogleCloudIdentitytoolkitAdminV2SpConfigPtrInput is an input type that accepts GoogleCloudIdentitytoolkitAdminV2SpConfigArgs, GoogleCloudIdentitytoolkitAdminV2SpConfigPtr and GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudIdentitytoolkitAdminV2SpConfigPtrInput` via:
//
//	        GoogleCloudIdentitytoolkitAdminV2SpConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudIdentitytoolkitAdminV2SpConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput
	ToGoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutputWithContext(context.Context) GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput
}

type googleCloudIdentitytoolkitAdminV2SpConfigPtrType GoogleCloudIdentitytoolkitAdminV2SpConfigArgs

func GoogleCloudIdentitytoolkitAdminV2SpConfigPtr(v *GoogleCloudIdentitytoolkitAdminV2SpConfigArgs) GoogleCloudIdentitytoolkitAdminV2SpConfigPtrInput {
	return (*googleCloudIdentitytoolkitAdminV2SpConfigPtrType)(v)
}

func (*googleCloudIdentitytoolkitAdminV2SpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2SpConfig)(nil)).Elem()
}

func (i *googleCloudIdentitytoolkitAdminV2SpConfigPtrType) ToGoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput {
	return i.ToGoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudIdentitytoolkitAdminV2SpConfigPtrType) ToGoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput)
}

// The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
type GoogleCloudIdentitytoolkitAdminV2SpConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2SpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2SpConfig)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2SpConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2SpConfigOutput() GoogleCloudIdentitytoolkitAdminV2SpConfigOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2SpConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2SpConfigOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2SpConfigOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2SpConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput {
	return o.ToGoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudIdentitytoolkitAdminV2SpConfigOutput) ToGoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudIdentitytoolkitAdminV2SpConfig) *GoogleCloudIdentitytoolkitAdminV2SpConfig {
		return &v
	}).(GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput)
}

// Callback URI where responses from IDP are handled.
func (o GoogleCloudIdentitytoolkitAdminV2SpConfigOutput) CallbackUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2SpConfig) *string { return v.CallbackUri }).(pulumi.StringPtrOutput)
}

// Unique identifier for all SAML entities.
func (o GoogleCloudIdentitytoolkitAdminV2SpConfigOutput) SpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2SpConfig) *string { return v.SpEntityId }).(pulumi.StringPtrOutput)
}

type GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudIdentitytoolkitAdminV2SpConfig)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput() GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput) ToGoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput) Elem() GoogleCloudIdentitytoolkitAdminV2SpConfigOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2SpConfig) GoogleCloudIdentitytoolkitAdminV2SpConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudIdentitytoolkitAdminV2SpConfig
		return ret
	}).(GoogleCloudIdentitytoolkitAdminV2SpConfigOutput)
}

// Callback URI where responses from IDP are handled.
func (o GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput) CallbackUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2SpConfig) *string {
		if v == nil {
			return nil
		}
		return v.CallbackUri
	}).(pulumi.StringPtrOutput)
}

// Unique identifier for all SAML entities.
func (o GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput) SpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudIdentitytoolkitAdminV2SpConfig) *string {
		if v == nil {
			return nil
		}
		return v.SpEntityId
	}).(pulumi.StringPtrOutput)
}

// The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
type GoogleCloudIdentitytoolkitAdminV2SpConfigResponse struct {
	// Callback URI where responses from IDP are handled.
	CallbackUri string `pulumi:"callbackUri"`
	// Public certificates generated by the server to verify the signature in SAMLRequest in the SP-initiated flow.
	SpCertificates []GoogleCloudIdentitytoolkitAdminV2SpCertificateResponse `pulumi:"spCertificates"`
	// Unique identifier for all SAML entities.
	SpEntityId string `pulumi:"spEntityId"`
}

// The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
type GoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2SpConfigResponse)(nil)).Elem()
}

func (o GoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput() GoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput {
	return o
}

func (o GoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput) ToGoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutputWithContext(ctx context.Context) GoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput {
	return o
}

// Callback URI where responses from IDP are handled.
func (o GoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput) CallbackUri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2SpConfigResponse) string { return v.CallbackUri }).(pulumi.StringOutput)
}

// Public certificates generated by the server to verify the signature in SAMLRequest in the SP-initiated flow.
func (o GoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput) SpCertificates() GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2SpConfigResponse) []GoogleCloudIdentitytoolkitAdminV2SpCertificateResponse {
		return v.SpCertificates
	}).(GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseArrayOutput)
}

// Unique identifier for all SAML entities.
func (o GoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput) SpEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudIdentitytoolkitAdminV2SpConfigResponse) string { return v.SpEntityId }).(pulumi.StringOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type GoogleIamV1AuditConfig struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []GoogleIamV1AuditLogConfig `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service *string `pulumi:"service"`
}

// GoogleIamV1AuditConfigInput is an input type that accepts GoogleIamV1AuditConfigArgs and GoogleIamV1AuditConfigOutput values.
// You can construct a concrete instance of `GoogleIamV1AuditConfigInput` via:
//
//	GoogleIamV1AuditConfigArgs{...}
type GoogleIamV1AuditConfigInput interface {
	pulumi.Input

	ToGoogleIamV1AuditConfigOutput() GoogleIamV1AuditConfigOutput
	ToGoogleIamV1AuditConfigOutputWithContext(context.Context) GoogleIamV1AuditConfigOutput
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type GoogleIamV1AuditConfigArgs struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs GoogleIamV1AuditLogConfigArrayInput `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (GoogleIamV1AuditConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditConfig)(nil)).Elem()
}

func (i GoogleIamV1AuditConfigArgs) ToGoogleIamV1AuditConfigOutput() GoogleIamV1AuditConfigOutput {
	return i.ToGoogleIamV1AuditConfigOutputWithContext(context.Background())
}

func (i GoogleIamV1AuditConfigArgs) ToGoogleIamV1AuditConfigOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1AuditConfigOutput)
}

// GoogleIamV1AuditConfigArrayInput is an input type that accepts GoogleIamV1AuditConfigArray and GoogleIamV1AuditConfigArrayOutput values.
// You can construct a concrete instance of `GoogleIamV1AuditConfigArrayInput` via:
//
//	GoogleIamV1AuditConfigArray{ GoogleIamV1AuditConfigArgs{...} }
type GoogleIamV1AuditConfigArrayInput interface {
	pulumi.Input

	ToGoogleIamV1AuditConfigArrayOutput() GoogleIamV1AuditConfigArrayOutput
	ToGoogleIamV1AuditConfigArrayOutputWithContext(context.Context) GoogleIamV1AuditConfigArrayOutput
}

type GoogleIamV1AuditConfigArray []GoogleIamV1AuditConfigInput

func (GoogleIamV1AuditConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditConfig)(nil)).Elem()
}

func (i GoogleIamV1AuditConfigArray) ToGoogleIamV1AuditConfigArrayOutput() GoogleIamV1AuditConfigArrayOutput {
	return i.ToGoogleIamV1AuditConfigArrayOutputWithContext(context.Background())
}

func (i GoogleIamV1AuditConfigArray) ToGoogleIamV1AuditConfigArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1AuditConfigArrayOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type GoogleIamV1AuditConfigOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditConfig)(nil)).Elem()
}

func (o GoogleIamV1AuditConfigOutput) ToGoogleIamV1AuditConfigOutput() GoogleIamV1AuditConfigOutput {
	return o
}

func (o GoogleIamV1AuditConfigOutput) ToGoogleIamV1AuditConfigOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o GoogleIamV1AuditConfigOutput) AuditLogConfigs() GoogleIamV1AuditLogConfigArrayOutput {
	return o.ApplyT(func(v GoogleIamV1AuditConfig) []GoogleIamV1AuditLogConfig { return v.AuditLogConfigs }).(GoogleIamV1AuditLogConfigArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o GoogleIamV1AuditConfigOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleIamV1AuditConfig) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type GoogleIamV1AuditConfigArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditConfig)(nil)).Elem()
}

func (o GoogleIamV1AuditConfigArrayOutput) ToGoogleIamV1AuditConfigArrayOutput() GoogleIamV1AuditConfigArrayOutput {
	return o
}

func (o GoogleIamV1AuditConfigArrayOutput) ToGoogleIamV1AuditConfigArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigArrayOutput {
	return o
}

func (o GoogleIamV1AuditConfigArrayOutput) Index(i pulumi.IntInput) GoogleIamV1AuditConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1AuditConfig {
		return vs[0].([]GoogleIamV1AuditConfig)[vs[1].(int)]
	}).(GoogleIamV1AuditConfigOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type GoogleIamV1AuditConfigResponse struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []GoogleIamV1AuditLogConfigResponse `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service string `pulumi:"service"`
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type GoogleIamV1AuditConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditConfigResponse)(nil)).Elem()
}

func (o GoogleIamV1AuditConfigResponseOutput) ToGoogleIamV1AuditConfigResponseOutput() GoogleIamV1AuditConfigResponseOutput {
	return o
}

func (o GoogleIamV1AuditConfigResponseOutput) ToGoogleIamV1AuditConfigResponseOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigResponseOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o GoogleIamV1AuditConfigResponseOutput) AuditLogConfigs() GoogleIamV1AuditLogConfigResponseArrayOutput {
	return o.ApplyT(func(v GoogleIamV1AuditConfigResponse) []GoogleIamV1AuditLogConfigResponse { return v.AuditLogConfigs }).(GoogleIamV1AuditLogConfigResponseArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o GoogleIamV1AuditConfigResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleIamV1AuditConfigResponse) string { return v.Service }).(pulumi.StringOutput)
}

type GoogleIamV1AuditConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditConfigResponse)(nil)).Elem()
}

func (o GoogleIamV1AuditConfigResponseArrayOutput) ToGoogleIamV1AuditConfigResponseArrayOutput() GoogleIamV1AuditConfigResponseArrayOutput {
	return o
}

func (o GoogleIamV1AuditConfigResponseArrayOutput) ToGoogleIamV1AuditConfigResponseArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigResponseArrayOutput {
	return o
}

func (o GoogleIamV1AuditConfigResponseArrayOutput) Index(i pulumi.IntInput) GoogleIamV1AuditConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1AuditConfigResponse {
		return vs[0].([]GoogleIamV1AuditConfigResponse)[vs[1].(int)]
	}).(GoogleIamV1AuditConfigResponseOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfig struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType *GoogleIamV1AuditLogConfigLogType `pulumi:"logType"`
}

// GoogleIamV1AuditLogConfigInput is an input type that accepts GoogleIamV1AuditLogConfigArgs and GoogleIamV1AuditLogConfigOutput values.
// You can construct a concrete instance of `GoogleIamV1AuditLogConfigInput` via:
//
//	GoogleIamV1AuditLogConfigArgs{...}
type GoogleIamV1AuditLogConfigInput interface {
	pulumi.Input

	ToGoogleIamV1AuditLogConfigOutput() GoogleIamV1AuditLogConfigOutput
	ToGoogleIamV1AuditLogConfigOutputWithContext(context.Context) GoogleIamV1AuditLogConfigOutput
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfigArgs struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType GoogleIamV1AuditLogConfigLogTypePtrInput `pulumi:"logType"`
}

func (GoogleIamV1AuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditLogConfig)(nil)).Elem()
}

func (i GoogleIamV1AuditLogConfigArgs) ToGoogleIamV1AuditLogConfigOutput() GoogleIamV1AuditLogConfigOutput {
	return i.ToGoogleIamV1AuditLogConfigOutputWithContext(context.Background())
}

func (i GoogleIamV1AuditLogConfigArgs) ToGoogleIamV1AuditLogConfigOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1AuditLogConfigOutput)
}

// GoogleIamV1AuditLogConfigArrayInput is an input type that accepts GoogleIamV1AuditLogConfigArray and GoogleIamV1AuditLogConfigArrayOutput values.
// You can construct a concrete instance of `GoogleIamV1AuditLogConfigArrayInput` via:
//
//	GoogleIamV1AuditLogConfigArray{ GoogleIamV1AuditLogConfigArgs{...} }
type GoogleIamV1AuditLogConfigArrayInput interface {
	pulumi.Input

	ToGoogleIamV1AuditLogConfigArrayOutput() GoogleIamV1AuditLogConfigArrayOutput
	ToGoogleIamV1AuditLogConfigArrayOutputWithContext(context.Context) GoogleIamV1AuditLogConfigArrayOutput
}

type GoogleIamV1AuditLogConfigArray []GoogleIamV1AuditLogConfigInput

func (GoogleIamV1AuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditLogConfig)(nil)).Elem()
}

func (i GoogleIamV1AuditLogConfigArray) ToGoogleIamV1AuditLogConfigArrayOutput() GoogleIamV1AuditLogConfigArrayOutput {
	return i.ToGoogleIamV1AuditLogConfigArrayOutputWithContext(context.Background())
}

func (i GoogleIamV1AuditLogConfigArray) ToGoogleIamV1AuditLogConfigArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1AuditLogConfigArrayOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfigOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditLogConfig)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigOutput) ToGoogleIamV1AuditLogConfigOutput() GoogleIamV1AuditLogConfigOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigOutput) ToGoogleIamV1AuditLogConfigOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o GoogleIamV1AuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleIamV1AuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o GoogleIamV1AuditLogConfigOutput) LogType() GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return o.ApplyT(func(v GoogleIamV1AuditLogConfig) *GoogleIamV1AuditLogConfigLogType { return v.LogType }).(GoogleIamV1AuditLogConfigLogTypePtrOutput)
}

type GoogleIamV1AuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditLogConfig)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigArrayOutput) ToGoogleIamV1AuditLogConfigArrayOutput() GoogleIamV1AuditLogConfigArrayOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigArrayOutput) ToGoogleIamV1AuditLogConfigArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigArrayOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigArrayOutput) Index(i pulumi.IntInput) GoogleIamV1AuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1AuditLogConfig {
		return vs[0].([]GoogleIamV1AuditLogConfig)[vs[1].(int)]
	}).(GoogleIamV1AuditLogConfigOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfigResponse struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType string `pulumi:"logType"`
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditLogConfigResponse)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigResponseOutput) ToGoogleIamV1AuditLogConfigResponseOutput() GoogleIamV1AuditLogConfigResponseOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigResponseOutput) ToGoogleIamV1AuditLogConfigResponseOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigResponseOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o GoogleIamV1AuditLogConfigResponseOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleIamV1AuditLogConfigResponse) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o GoogleIamV1AuditLogConfigResponseOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleIamV1AuditLogConfigResponse) string { return v.LogType }).(pulumi.StringOutput)
}

type GoogleIamV1AuditLogConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditLogConfigResponse)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigResponseArrayOutput) ToGoogleIamV1AuditLogConfigResponseArrayOutput() GoogleIamV1AuditLogConfigResponseArrayOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigResponseArrayOutput) ToGoogleIamV1AuditLogConfigResponseArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigResponseArrayOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigResponseArrayOutput) Index(i pulumi.IntInput) GoogleIamV1AuditLogConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1AuditLogConfigResponse {
		return vs[0].([]GoogleIamV1AuditLogConfigResponse)[vs[1].(int)]
	}).(GoogleIamV1AuditLogConfigResponseOutput)
}

// Associates `members`, or principals, with a `role`.
type GoogleIamV1Binding struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition *GoogleTypeExpr `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role *string `pulumi:"role"`
}

// GoogleIamV1BindingInput is an input type that accepts GoogleIamV1BindingArgs and GoogleIamV1BindingOutput values.
// You can construct a concrete instance of `GoogleIamV1BindingInput` via:
//
//	GoogleIamV1BindingArgs{...}
type GoogleIamV1BindingInput interface {
	pulumi.Input

	ToGoogleIamV1BindingOutput() GoogleIamV1BindingOutput
	ToGoogleIamV1BindingOutputWithContext(context.Context) GoogleIamV1BindingOutput
}

// Associates `members`, or principals, with a `role`.
type GoogleIamV1BindingArgs struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition GoogleTypeExprPtrInput `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (GoogleIamV1BindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1Binding)(nil)).Elem()
}

func (i GoogleIamV1BindingArgs) ToGoogleIamV1BindingOutput() GoogleIamV1BindingOutput {
	return i.ToGoogleIamV1BindingOutputWithContext(context.Background())
}

func (i GoogleIamV1BindingArgs) ToGoogleIamV1BindingOutputWithContext(ctx context.Context) GoogleIamV1BindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1BindingOutput)
}

// GoogleIamV1BindingArrayInput is an input type that accepts GoogleIamV1BindingArray and GoogleIamV1BindingArrayOutput values.
// You can construct a concrete instance of `GoogleIamV1BindingArrayInput` via:
//
//	GoogleIamV1BindingArray{ GoogleIamV1BindingArgs{...} }
type GoogleIamV1BindingArrayInput interface {
	pulumi.Input

	ToGoogleIamV1BindingArrayOutput() GoogleIamV1BindingArrayOutput
	ToGoogleIamV1BindingArrayOutputWithContext(context.Context) GoogleIamV1BindingArrayOutput
}

type GoogleIamV1BindingArray []GoogleIamV1BindingInput

func (GoogleIamV1BindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1Binding)(nil)).Elem()
}

func (i GoogleIamV1BindingArray) ToGoogleIamV1BindingArrayOutput() GoogleIamV1BindingArrayOutput {
	return i.ToGoogleIamV1BindingArrayOutputWithContext(context.Background())
}

func (i GoogleIamV1BindingArray) ToGoogleIamV1BindingArrayOutputWithContext(ctx context.Context) GoogleIamV1BindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1BindingArrayOutput)
}

// Associates `members`, or principals, with a `role`.
type GoogleIamV1BindingOutput struct{ *pulumi.OutputState }

func (GoogleIamV1BindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1Binding)(nil)).Elem()
}

func (o GoogleIamV1BindingOutput) ToGoogleIamV1BindingOutput() GoogleIamV1BindingOutput {
	return o
}

func (o GoogleIamV1BindingOutput) ToGoogleIamV1BindingOutputWithContext(ctx context.Context) GoogleIamV1BindingOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o GoogleIamV1BindingOutput) Condition() GoogleTypeExprPtrOutput {
	return o.ApplyT(func(v GoogleIamV1Binding) *GoogleTypeExpr { return v.Condition }).(GoogleTypeExprPtrOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
func (o GoogleIamV1BindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleIamV1Binding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o GoogleIamV1BindingOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleIamV1Binding) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type GoogleIamV1BindingArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1BindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1Binding)(nil)).Elem()
}

func (o GoogleIamV1BindingArrayOutput) ToGoogleIamV1BindingArrayOutput() GoogleIamV1BindingArrayOutput {
	return o
}

func (o GoogleIamV1BindingArrayOutput) ToGoogleIamV1BindingArrayOutputWithContext(ctx context.Context) GoogleIamV1BindingArrayOutput {
	return o
}

func (o GoogleIamV1BindingArrayOutput) Index(i pulumi.IntInput) GoogleIamV1BindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1Binding {
		return vs[0].([]GoogleIamV1Binding)[vs[1].(int)]
	}).(GoogleIamV1BindingOutput)
}

// Associates `members`, or principals, with a `role`.
type GoogleIamV1BindingResponse struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition GoogleTypeExprResponse `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role string `pulumi:"role"`
}

// Associates `members`, or principals, with a `role`.
type GoogleIamV1BindingResponseOutput struct{ *pulumi.OutputState }

func (GoogleIamV1BindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1BindingResponse)(nil)).Elem()
}

func (o GoogleIamV1BindingResponseOutput) ToGoogleIamV1BindingResponseOutput() GoogleIamV1BindingResponseOutput {
	return o
}

func (o GoogleIamV1BindingResponseOutput) ToGoogleIamV1BindingResponseOutputWithContext(ctx context.Context) GoogleIamV1BindingResponseOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o GoogleIamV1BindingResponseOutput) Condition() GoogleTypeExprResponseOutput {
	return o.ApplyT(func(v GoogleIamV1BindingResponse) GoogleTypeExprResponse { return v.Condition }).(GoogleTypeExprResponseOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
func (o GoogleIamV1BindingResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleIamV1BindingResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o GoogleIamV1BindingResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleIamV1BindingResponse) string { return v.Role }).(pulumi.StringOutput)
}

type GoogleIamV1BindingResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1BindingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1BindingResponse)(nil)).Elem()
}

func (o GoogleIamV1BindingResponseArrayOutput) ToGoogleIamV1BindingResponseArrayOutput() GoogleIamV1BindingResponseArrayOutput {
	return o
}

func (o GoogleIamV1BindingResponseArrayOutput) ToGoogleIamV1BindingResponseArrayOutputWithContext(ctx context.Context) GoogleIamV1BindingResponseArrayOutput {
	return o
}

func (o GoogleIamV1BindingResponseArrayOutput) Index(i pulumi.IntInput) GoogleIamV1BindingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1BindingResponse {
		return vs[0].([]GoogleIamV1BindingResponse)[vs[1].(int)]
	}).(GoogleIamV1BindingResponseOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExpr struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression *string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// GoogleTypeExprInput is an input type that accepts GoogleTypeExprArgs and GoogleTypeExprOutput values.
// You can construct a concrete instance of `GoogleTypeExprInput` via:
//
//	GoogleTypeExprArgs{...}
type GoogleTypeExprInput interface {
	pulumi.Input

	ToGoogleTypeExprOutput() GoogleTypeExprOutput
	ToGoogleTypeExprOutputWithContext(context.Context) GoogleTypeExprOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExprArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (GoogleTypeExprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeExpr)(nil)).Elem()
}

func (i GoogleTypeExprArgs) ToGoogleTypeExprOutput() GoogleTypeExprOutput {
	return i.ToGoogleTypeExprOutputWithContext(context.Background())
}

func (i GoogleTypeExprArgs) ToGoogleTypeExprOutputWithContext(ctx context.Context) GoogleTypeExprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeExprOutput)
}

func (i GoogleTypeExprArgs) ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput {
	return i.ToGoogleTypeExprPtrOutputWithContext(context.Background())
}

func (i GoogleTypeExprArgs) ToGoogleTypeExprPtrOutputWithContext(ctx context.Context) GoogleTypeExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeExprOutput).ToGoogleTypeExprPtrOutputWithContext(ctx)
}

// GoogleTypeExprPtrInput is an input type that accepts GoogleTypeExprArgs, GoogleTypeExprPtr and GoogleTypeExprPtrOutput values.
// You can construct a concrete instance of `GoogleTypeExprPtrInput` via:
//
//	        GoogleTypeExprArgs{...}
//
//	or:
//
//	        nil
type GoogleTypeExprPtrInput interface {
	pulumi.Input

	ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput
	ToGoogleTypeExprPtrOutputWithContext(context.Context) GoogleTypeExprPtrOutput
}

type googleTypeExprPtrType GoogleTypeExprArgs

func GoogleTypeExprPtr(v *GoogleTypeExprArgs) GoogleTypeExprPtrInput {
	return (*googleTypeExprPtrType)(v)
}

func (*googleTypeExprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeExpr)(nil)).Elem()
}

func (i *googleTypeExprPtrType) ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput {
	return i.ToGoogleTypeExprPtrOutputWithContext(context.Background())
}

func (i *googleTypeExprPtrType) ToGoogleTypeExprPtrOutputWithContext(ctx context.Context) GoogleTypeExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeExprPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExprOutput struct{ *pulumi.OutputState }

func (GoogleTypeExprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeExpr)(nil)).Elem()
}

func (o GoogleTypeExprOutput) ToGoogleTypeExprOutput() GoogleTypeExprOutput {
	return o
}

func (o GoogleTypeExprOutput) ToGoogleTypeExprOutputWithContext(ctx context.Context) GoogleTypeExprOutput {
	return o
}

func (o GoogleTypeExprOutput) ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput {
	return o.ToGoogleTypeExprPtrOutputWithContext(context.Background())
}

func (o GoogleTypeExprOutput) ToGoogleTypeExprPtrOutputWithContext(ctx context.Context) GoogleTypeExprPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleTypeExpr) *GoogleTypeExpr {
		return &v
	}).(GoogleTypeExprPtrOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o GoogleTypeExprOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypeExpr) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o GoogleTypeExprOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypeExpr) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o GoogleTypeExprOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypeExpr) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o GoogleTypeExprOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypeExpr) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type GoogleTypeExprPtrOutput struct{ *pulumi.OutputState }

func (GoogleTypeExprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeExpr)(nil)).Elem()
}

func (o GoogleTypeExprPtrOutput) ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput {
	return o
}

func (o GoogleTypeExprPtrOutput) ToGoogleTypeExprPtrOutputWithContext(ctx context.Context) GoogleTypeExprPtrOutput {
	return o
}

func (o GoogleTypeExprPtrOutput) Elem() GoogleTypeExprOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) GoogleTypeExpr {
		if v != nil {
			return *v
		}
		var ret GoogleTypeExpr
		return ret
	}).(GoogleTypeExprOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o GoogleTypeExprPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o GoogleTypeExprPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o GoogleTypeExprPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o GoogleTypeExprPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExprResponse struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title string `pulumi:"title"`
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExprResponseOutput struct{ *pulumi.OutputState }

func (GoogleTypeExprResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeExprResponse)(nil)).Elem()
}

func (o GoogleTypeExprResponseOutput) ToGoogleTypeExprResponseOutput() GoogleTypeExprResponseOutput {
	return o
}

func (o GoogleTypeExprResponseOutput) ToGoogleTypeExprResponseOutputWithContext(ctx context.Context) GoogleTypeExprResponseOutput {
	return o
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o GoogleTypeExprResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypeExprResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o GoogleTypeExprResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypeExprResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o GoogleTypeExprResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypeExprResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o GoogleTypeExprResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypeExprResponse) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2ClientPermissionsInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2IdpCertificateInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2IdpCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2IdpCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2IdpConfigInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2InheritanceInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2InheritanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2InheritancePtrInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2InheritanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2MonitoringConfigInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2RequestLoggingInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2SpConfigInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2SpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudIdentitytoolkitAdminV2SpConfigPtrInput)(nil)).Elem(), GoogleCloudIdentitytoolkitAdminV2SpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditConfigInput)(nil)).Elem(), GoogleIamV1AuditConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditConfigArrayInput)(nil)).Elem(), GoogleIamV1AuditConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditLogConfigInput)(nil)).Elem(), GoogleIamV1AuditLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditLogConfigArrayInput)(nil)).Elem(), GoogleIamV1AuditLogConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1BindingInput)(nil)).Elem(), GoogleIamV1BindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1BindingArrayInput)(nil)).Elem(), GoogleIamV1BindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleTypeExprInput)(nil)).Elem(), GoogleTypeExprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleTypeExprPtrInput)(nil)).Elem(), GoogleTypeExprArgs{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2ClientPermissionsOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2ClientPermissionsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2ClientPermissionsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2HashConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2IdpCertificateOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2IdpCertificateArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2IdpCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2IdpConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2InheritanceOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2InheritancePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2InheritanceResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2MonitoringConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2MonitoringConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2RequestLoggingOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2RequestLoggingPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2RequestLoggingResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2SpCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2SpConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2SpConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditConfigOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditConfigArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1BindingOutput{})
	pulumi.RegisterOutputType(GoogleIamV1BindingArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1BindingResponseOutput{})
	pulumi.RegisterOutputType(GoogleIamV1BindingResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleTypeExprOutput{})
	pulumi.RegisterOutputType(GoogleTypeExprPtrOutput{})
	pulumi.RegisterOutputType(GoogleTypeExprResponseOutput{})
}
