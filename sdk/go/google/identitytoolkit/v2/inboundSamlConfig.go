// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create an inbound SAML configuration for an Identity Toolkit project.
type InboundSamlConfig struct {
	pulumi.CustomResourceState

	// The config's display name set by developers.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// True if allows the user to sign in with the provider.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The SAML IdP (Identity Provider) configuration when the project acts as the relying party.
	IdpConfig GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput `pulumi:"idpConfig"`
	// The id to use for this config.
	InboundSamlConfigId pulumi.StringPtrOutput `pulumi:"inboundSamlConfigId"`
	// The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
	SpConfig GoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput `pulumi:"spConfig"`
	TenantId pulumi.StringOutput                                     `pulumi:"tenantId"`
}

// NewInboundSamlConfig registers a new resource with the given unique name, arguments, and options.
func NewInboundSamlConfig(ctx *pulumi.Context,
	name string, args *InboundSamlConfigArgs, opts ...pulumi.ResourceOption) (*InboundSamlConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"project",
		"tenantId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InboundSamlConfig
	err := ctx.RegisterResource("google-native:identitytoolkit/v2:InboundSamlConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInboundSamlConfig gets an existing InboundSamlConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInboundSamlConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InboundSamlConfigState, opts ...pulumi.ResourceOption) (*InboundSamlConfig, error) {
	var resource InboundSamlConfig
	err := ctx.ReadResource("google-native:identitytoolkit/v2:InboundSamlConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InboundSamlConfig resources.
type inboundSamlConfigState struct {
}

type InboundSamlConfigState struct {
}

func (InboundSamlConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*inboundSamlConfigState)(nil)).Elem()
}

type inboundSamlConfigArgs struct {
	// The config's display name set by developers.
	DisplayName *string `pulumi:"displayName"`
	// True if allows the user to sign in with the provider.
	Enabled *bool `pulumi:"enabled"`
	// The SAML IdP (Identity Provider) configuration when the project acts as the relying party.
	IdpConfig *GoogleCloudIdentitytoolkitAdminV2IdpConfig `pulumi:"idpConfig"`
	// The id to use for this config.
	InboundSamlConfigId *string `pulumi:"inboundSamlConfigId"`
	// The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
	SpConfig *GoogleCloudIdentitytoolkitAdminV2SpConfig `pulumi:"spConfig"`
	TenantId string                                     `pulumi:"tenantId"`
}

// The set of arguments for constructing a InboundSamlConfig resource.
type InboundSamlConfigArgs struct {
	// The config's display name set by developers.
	DisplayName pulumi.StringPtrInput
	// True if allows the user to sign in with the provider.
	Enabled pulumi.BoolPtrInput
	// The SAML IdP (Identity Provider) configuration when the project acts as the relying party.
	IdpConfig GoogleCloudIdentitytoolkitAdminV2IdpConfigPtrInput
	// The id to use for this config.
	InboundSamlConfigId pulumi.StringPtrInput
	// The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
	SpConfig GoogleCloudIdentitytoolkitAdminV2SpConfigPtrInput
	TenantId pulumi.StringInput
}

func (InboundSamlConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*inboundSamlConfigArgs)(nil)).Elem()
}

type InboundSamlConfigInput interface {
	pulumi.Input

	ToInboundSamlConfigOutput() InboundSamlConfigOutput
	ToInboundSamlConfigOutputWithContext(ctx context.Context) InboundSamlConfigOutput
}

func (*InboundSamlConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundSamlConfig)(nil)).Elem()
}

func (i *InboundSamlConfig) ToInboundSamlConfigOutput() InboundSamlConfigOutput {
	return i.ToInboundSamlConfigOutputWithContext(context.Background())
}

func (i *InboundSamlConfig) ToInboundSamlConfigOutputWithContext(ctx context.Context) InboundSamlConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSamlConfigOutput)
}

type InboundSamlConfigOutput struct{ *pulumi.OutputState }

func (InboundSamlConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundSamlConfig)(nil)).Elem()
}

func (o InboundSamlConfigOutput) ToInboundSamlConfigOutput() InboundSamlConfigOutput {
	return o
}

func (o InboundSamlConfigOutput) ToInboundSamlConfigOutputWithContext(ctx context.Context) InboundSamlConfigOutput {
	return o
}

// The config's display name set by developers.
func (o InboundSamlConfigOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *InboundSamlConfig) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// True if allows the user to sign in with the provider.
func (o InboundSamlConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *InboundSamlConfig) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The SAML IdP (Identity Provider) configuration when the project acts as the relying party.
func (o InboundSamlConfigOutput) IdpConfig() GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput {
	return o.ApplyT(func(v *InboundSamlConfig) GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput {
		return v.IdpConfig
	}).(GoogleCloudIdentitytoolkitAdminV2IdpConfigResponseOutput)
}

// The id to use for this config.
func (o InboundSamlConfigOutput) InboundSamlConfigId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InboundSamlConfig) pulumi.StringPtrOutput { return v.InboundSamlConfigId }).(pulumi.StringPtrOutput)
}

// The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
func (o InboundSamlConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *InboundSamlConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o InboundSamlConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *InboundSamlConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
func (o InboundSamlConfigOutput) SpConfig() GoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput {
	return o.ApplyT(func(v *InboundSamlConfig) GoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput { return v.SpConfig }).(GoogleCloudIdentitytoolkitAdminV2SpConfigResponseOutput)
}

func (o InboundSamlConfigOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *InboundSamlConfig) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSamlConfigInput)(nil)).Elem(), &InboundSamlConfig{})
	pulumi.RegisterOutputType(InboundSamlConfigOutput{})
}
