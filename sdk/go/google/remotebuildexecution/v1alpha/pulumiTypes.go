// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// AcceleratorConfig defines the accelerator cards to attach to the VM.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig struct {
	// The number of guest accelerator cards exposed to each VM.
	AcceleratorCount *string `pulumi:"acceleratorCount"`
	// The type of accelerator to attach to each VM, e.g. "nvidia-tesla-k80" for nVidia Tesla K80.
	AcceleratorType *string `pulumi:"acceleratorType"`
}

// GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigInput is an input type that accepts GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs and GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput values.
// You can construct a concrete instance of `GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigInput` via:
//
//	GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs{...}
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigInput interface {
	pulumi.Input

	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput
	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutputWithContext(context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput
}

// AcceleratorConfig defines the accelerator cards to attach to the VM.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs struct {
	// The number of guest accelerator cards exposed to each VM.
	AcceleratorCount pulumi.StringPtrInput `pulumi:"acceleratorCount"`
	// The type of accelerator to attach to each VM, e.g. "nvidia-tesla-k80" for nVidia Tesla K80.
	AcceleratorType pulumi.StringPtrInput `pulumi:"acceleratorType"`
}

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig)(nil)).Elem()
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutputWithContext(context.Background())
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput)
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutputWithContext(context.Background())
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput).ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutputWithContext(ctx)
}

// GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrInput is an input type that accepts GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs, GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtr and GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput values.
// You can construct a concrete instance of `GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrInput` via:
//
//	        GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrInput interface {
	pulumi.Input

	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput
	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutputWithContext(context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput
}

type googleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrType GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs

func GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtr(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrInput {
	return (*googleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrType)(v)
}

func (*googleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig)(nil)).Elem()
}

func (i *googleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrType) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutputWithContext(context.Background())
}

func (i *googleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrType) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput)
}

// AcceleratorConfig defines the accelerator cards to attach to the VM.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput {
	return o.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutputWithContext(context.Background())
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig {
		return &v
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput)
}

// The number of guest accelerator cards exposed to each VM.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput) AcceleratorCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig) *string {
		return v.AcceleratorCount
	}).(pulumi.StringPtrOutput)
}

// The type of accelerator to attach to each VM, e.g. "nvidia-tesla-k80" for nVidia Tesla K80.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput) AcceleratorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig) *string {
		return v.AcceleratorType
	}).(pulumi.StringPtrOutput)
}

type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput) Elem() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig {
		if v != nil {
			return *v
		}
		var ret GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig
		return ret
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput)
}

// The number of guest accelerator cards exposed to each VM.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput) AcceleratorCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig) *string {
		if v == nil {
			return nil
		}
		return v.AcceleratorCount
	}).(pulumi.StringPtrOutput)
}

// The type of accelerator to attach to each VM, e.g. "nvidia-tesla-k80" for nVidia Tesla K80.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput) AcceleratorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig) *string {
		if v == nil {
			return nil
		}
		return v.AcceleratorType
	}).(pulumi.StringPtrOutput)
}

// AcceleratorConfig defines the accelerator cards to attach to the VM.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse struct {
	// The number of guest accelerator cards exposed to each VM.
	AcceleratorCount string `pulumi:"acceleratorCount"`
	// The type of accelerator to attach to each VM, e.g. "nvidia-tesla-k80" for nVidia Tesla K80.
	AcceleratorType string `pulumi:"acceleratorType"`
}

// AcceleratorConfig defines the accelerator cards to attach to the VM.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponseOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponseOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponseOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponseOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponseOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponseOutput {
	return o
}

// The number of guest accelerator cards exposed to each VM.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponseOutput) AcceleratorCount() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse) string {
		return v.AcceleratorCount
	}).(pulumi.StringOutput)
}

// The type of accelerator to attach to each VM, e.g. "nvidia-tesla-k80" for nVidia Tesla K80.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponseOutput) AcceleratorType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse) string {
		return v.AcceleratorType
	}).(pulumi.StringOutput)
}

// Autoscale defines the autoscaling policy of a worker pool.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale struct {
	// The maximal number of workers. Must be equal to or greater than min_size.
	MaxSize *string `pulumi:"maxSize"`
	// The minimal number of workers. Must be greater than 0.
	MinSize *string `pulumi:"minSize"`
}

// GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleInput is an input type that accepts GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs and GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput values.
// You can construct a concrete instance of `GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleInput` via:
//
//	GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs{...}
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleInput interface {
	pulumi.Input

	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput
	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutputWithContext(context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput
}

// Autoscale defines the autoscaling policy of a worker pool.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs struct {
	// The maximal number of workers. Must be equal to or greater than min_size.
	MaxSize pulumi.StringPtrInput `pulumi:"maxSize"`
	// The minimal number of workers. Must be greater than 0.
	MinSize pulumi.StringPtrInput `pulumi:"minSize"`
}

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale)(nil)).Elem()
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutputWithContext(context.Background())
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput)
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutputWithContext(context.Background())
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput).ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutputWithContext(ctx)
}

// GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrInput is an input type that accepts GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs, GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtr and GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput values.
// You can construct a concrete instance of `GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrInput` via:
//
//	        GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs{...}
//
//	or:
//
//	        nil
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrInput interface {
	pulumi.Input

	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput
	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutputWithContext(context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput
}

type googleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrType GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs

func GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtr(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrInput {
	return (*googleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrType)(v)
}

func (*googleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale)(nil)).Elem()
}

func (i *googleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrType) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutputWithContext(context.Background())
}

func (i *googleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrType) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput)
}

// Autoscale defines the autoscaling policy of a worker pool.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput {
	return o.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutputWithContext(context.Background())
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale {
		return &v
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput)
}

// The maximal number of workers. Must be equal to or greater than min_size.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale) *string { return v.MaxSize }).(pulumi.StringPtrOutput)
}

// The minimal number of workers. Must be greater than 0.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale) *string { return v.MinSize }).(pulumi.StringPtrOutput)
}

type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput) Elem() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale {
		if v != nil {
			return *v
		}
		var ret GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale
		return ret
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput)
}

// The maximal number of workers. Must be equal to or greater than min_size.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale) *string {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.StringPtrOutput)
}

// The minimal number of workers. Must be greater than 0.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale) *string {
		if v == nil {
			return nil
		}
		return v.MinSize
	}).(pulumi.StringPtrOutput)
}

// Autoscale defines the autoscaling policy of a worker pool.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponse struct {
	// The maximal number of workers. Must be equal to or greater than min_size.
	MaxSize string `pulumi:"maxSize"`
	// The minimal number of workers. Must be greater than 0.
	MinSize string `pulumi:"minSize"`
}

// Autoscale defines the autoscaling policy of a worker pool.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponseOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponse)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponseOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponseOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponseOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponseOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponseOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponseOutput {
	return o
}

// The maximal number of workers. Must be equal to or greater than min_size.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponseOutput) MaxSize() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponse) string { return v.MaxSize }).(pulumi.StringOutput)
}

// The minimal number of workers. Must be greater than 0.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponseOutput) MinSize() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponse) string { return v.MinSize }).(pulumi.StringOutput)
}

// FeaturePolicy defines features allowed to be used on RBE instances, as well as instance-wide behavior changes that take effect without opt-in or opt-out at usage time.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy struct {
	// Which container image sources are allowed. Currently only RBE-supported registry (gcr.io) is allowed. One can allow all repositories under a project or one specific repository only. E.g. container_image_sources { policy: RESTRICTED allowed_values: [ "gcr.io/project-foo", "gcr.io/project-bar/repo-baz", ] } will allow any repositories under "gcr.io/project-foo" plus the repository "gcr.io/project-bar/repo-baz". Default (UNSPECIFIED) is equivalent to any source is allowed.
	ContainerImageSources *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature `pulumi:"containerImageSources"`
	// Whether dockerAddCapabilities can be used or what capabilities are allowed.
	DockerAddCapabilities *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature `pulumi:"dockerAddCapabilities"`
	// Whether dockerChrootPath can be used.
	DockerChrootPath *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature `pulumi:"dockerChrootPath"`
	// Whether dockerNetwork can be used or what network modes are allowed. E.g. one may allow `off` value only via `allowed_values`.
	DockerNetwork *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature `pulumi:"dockerNetwork"`
	// Whether dockerPrivileged can be used.
	DockerPrivileged *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature `pulumi:"dockerPrivileged"`
	// Whether dockerRunAsRoot can be used.
	DockerRunAsRoot *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature `pulumi:"dockerRunAsRoot"`
	// Whether dockerRuntime is allowed to be set or what runtimes are allowed. Note linux_isolation takes precedence, and if set, docker_runtime values may be rejected if they are incompatible with the selected isolation.
	DockerRuntime *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature `pulumi:"dockerRuntime"`
	// Whether dockerSiblingContainers can be used.
	DockerSiblingContainers *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature `pulumi:"dockerSiblingContainers"`
	// linux_isolation allows overriding the docker runtime used for containers started on Linux.
	LinuxIsolation *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation `pulumi:"linuxIsolation"`
}

// GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyInput is an input type that accepts GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyArgs and GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput values.
// You can construct a concrete instance of `GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyInput` via:
//
//	GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyArgs{...}
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyInput interface {
	pulumi.Input

	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput
	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutputWithContext(context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput
}

// FeaturePolicy defines features allowed to be used on RBE instances, as well as instance-wide behavior changes that take effect without opt-in or opt-out at usage time.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyArgs struct {
	// Which container image sources are allowed. Currently only RBE-supported registry (gcr.io) is allowed. One can allow all repositories under a project or one specific repository only. E.g. container_image_sources { policy: RESTRICTED allowed_values: [ "gcr.io/project-foo", "gcr.io/project-bar/repo-baz", ] } will allow any repositories under "gcr.io/project-foo" plus the repository "gcr.io/project-bar/repo-baz". Default (UNSPECIFIED) is equivalent to any source is allowed.
	ContainerImageSources GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrInput `pulumi:"containerImageSources"`
	// Whether dockerAddCapabilities can be used or what capabilities are allowed.
	DockerAddCapabilities GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrInput `pulumi:"dockerAddCapabilities"`
	// Whether dockerChrootPath can be used.
	DockerChrootPath GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrInput `pulumi:"dockerChrootPath"`
	// Whether dockerNetwork can be used or what network modes are allowed. E.g. one may allow `off` value only via `allowed_values`.
	DockerNetwork GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrInput `pulumi:"dockerNetwork"`
	// Whether dockerPrivileged can be used.
	DockerPrivileged GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrInput `pulumi:"dockerPrivileged"`
	// Whether dockerRunAsRoot can be used.
	DockerRunAsRoot GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrInput `pulumi:"dockerRunAsRoot"`
	// Whether dockerRuntime is allowed to be set or what runtimes are allowed. Note linux_isolation takes precedence, and if set, docker_runtime values may be rejected if they are incompatible with the selected isolation.
	DockerRuntime GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrInput `pulumi:"dockerRuntime"`
	// Whether dockerSiblingContainers can be used.
	DockerSiblingContainers GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrInput `pulumi:"dockerSiblingContainers"`
	// linux_isolation allows overriding the docker runtime used for containers started on Linux.
	LinuxIsolation GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolationPtrInput `pulumi:"linuxIsolation"`
}

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy)(nil)).Elem()
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutputWithContext(context.Background())
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput)
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutputWithContext(context.Background())
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput).ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutputWithContext(ctx)
}

// GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrInput is an input type that accepts GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyArgs, GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtr and GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput values.
// You can construct a concrete instance of `GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrInput` via:
//
//	        GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyArgs{...}
//
//	or:
//
//	        nil
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrInput interface {
	pulumi.Input

	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput
	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutputWithContext(context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput
}

type googleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrType GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyArgs

func GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtr(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyArgs) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrInput {
	return (*googleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrType)(v)
}

func (*googleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy)(nil)).Elem()
}

func (i *googleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrType) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutputWithContext(context.Background())
}

func (i *googleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrType) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput)
}

// FeaturePolicy defines features allowed to be used on RBE instances, as well as instance-wide behavior changes that take effect without opt-in or opt-out at usage time.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput {
	return o.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutputWithContext(context.Background())
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy {
		return &v
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput)
}

// Which container image sources are allowed. Currently only RBE-supported registry (gcr.io) is allowed. One can allow all repositories under a project or one specific repository only. E.g. container_image_sources { policy: RESTRICTED allowed_values: [ "gcr.io/project-foo", "gcr.io/project-bar/repo-baz", ] } will allow any repositories under "gcr.io/project-foo" plus the repository "gcr.io/project-bar/repo-baz". Default (UNSPECIFIED) is equivalent to any source is allowed.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput) ContainerImageSources() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		return v.ContainerImageSources
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Whether dockerAddCapabilities can be used or what capabilities are allowed.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput) DockerAddCapabilities() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		return v.DockerAddCapabilities
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Whether dockerChrootPath can be used.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput) DockerChrootPath() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		return v.DockerChrootPath
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Whether dockerNetwork can be used or what network modes are allowed. E.g. one may allow `off` value only via `allowed_values`.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput) DockerNetwork() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		return v.DockerNetwork
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Whether dockerPrivileged can be used.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput) DockerPrivileged() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		return v.DockerPrivileged
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Whether dockerRunAsRoot can be used.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput) DockerRunAsRoot() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		return v.DockerRunAsRoot
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Whether dockerRuntime is allowed to be set or what runtimes are allowed. Note linux_isolation takes precedence, and if set, docker_runtime values may be rejected if they are incompatible with the selected isolation.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput) DockerRuntime() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		return v.DockerRuntime
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Whether dockerSiblingContainers can be used.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput) DockerSiblingContainers() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		return v.DockerSiblingContainers
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// linux_isolation allows overriding the docker runtime used for containers started on Linux.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput) LinuxIsolation() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolationPtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation {
		return v.LinuxIsolation
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolationPtrOutput)
}

type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput) Elem() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy {
		if v != nil {
			return *v
		}
		var ret GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy
		return ret
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput)
}

// Which container image sources are allowed. Currently only RBE-supported registry (gcr.io) is allowed. One can allow all repositories under a project or one specific repository only. E.g. container_image_sources { policy: RESTRICTED allowed_values: [ "gcr.io/project-foo", "gcr.io/project-bar/repo-baz", ] } will allow any repositories under "gcr.io/project-foo" plus the repository "gcr.io/project-bar/repo-baz". Default (UNSPECIFIED) is equivalent to any source is allowed.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput) ContainerImageSources() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		if v == nil {
			return nil
		}
		return v.ContainerImageSources
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Whether dockerAddCapabilities can be used or what capabilities are allowed.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput) DockerAddCapabilities() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		if v == nil {
			return nil
		}
		return v.DockerAddCapabilities
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Whether dockerChrootPath can be used.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput) DockerChrootPath() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		if v == nil {
			return nil
		}
		return v.DockerChrootPath
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Whether dockerNetwork can be used or what network modes are allowed. E.g. one may allow `off` value only via `allowed_values`.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput) DockerNetwork() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		if v == nil {
			return nil
		}
		return v.DockerNetwork
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Whether dockerPrivileged can be used.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput) DockerPrivileged() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		if v == nil {
			return nil
		}
		return v.DockerPrivileged
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Whether dockerRunAsRoot can be used.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput) DockerRunAsRoot() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		if v == nil {
			return nil
		}
		return v.DockerRunAsRoot
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Whether dockerRuntime is allowed to be set or what runtimes are allowed. Note linux_isolation takes precedence, and if set, docker_runtime values may be rejected if they are incompatible with the selected isolation.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput) DockerRuntime() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		if v == nil {
			return nil
		}
		return v.DockerRuntime
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Whether dockerSiblingContainers can be used.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput) DockerSiblingContainers() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		if v == nil {
			return nil
		}
		return v.DockerSiblingContainers
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// linux_isolation allows overriding the docker runtime used for containers started on Linux.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput) LinuxIsolation() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolationPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation {
		if v == nil {
			return nil
		}
		return v.LinuxIsolation
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolationPtrOutput)
}

// Defines whether a feature can be used or what values are accepted.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature struct {
	// A list of acceptable values. Only effective when the policy is `RESTRICTED`.
	AllowedValues []string `pulumi:"allowedValues"`
	// The policy of the feature.
	Policy *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy `pulumi:"policy"`
}

// GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureInput is an input type that accepts GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureArgs and GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput values.
// You can construct a concrete instance of `GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureInput` via:
//
//	GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureArgs{...}
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureInput interface {
	pulumi.Input

	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput
	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutputWithContext(context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput
}

// Defines whether a feature can be used or what values are accepted.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureArgs struct {
	// A list of acceptable values. Only effective when the policy is `RESTRICTED`.
	AllowedValues pulumi.StringArrayInput `pulumi:"allowedValues"`
	// The policy of the feature.
	Policy GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicyPtrInput `pulumi:"policy"`
}

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature)(nil)).Elem()
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutputWithContext(context.Background())
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput)
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutputWithContext(context.Background())
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput).ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutputWithContext(ctx)
}

// GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrInput is an input type that accepts GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureArgs, GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtr and GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput values.
// You can construct a concrete instance of `GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrInput` via:
//
//	        GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureArgs{...}
//
//	or:
//
//	        nil
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrInput interface {
	pulumi.Input

	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput
	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutputWithContext(context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput
}

type googleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrType GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureArgs

func GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtr(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureArgs) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrInput {
	return (*googleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrType)(v)
}

func (*googleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature)(nil)).Elem()
}

func (i *googleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrType) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutputWithContext(context.Background())
}

func (i *googleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrType) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// Defines whether a feature can be used or what values are accepted.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutputWithContext(context.Background())
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		return &v
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput)
}

// A list of acceptable values. Only effective when the policy is `RESTRICTED`.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput) AllowedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature) []string {
		return v.AllowedValues
	}).(pulumi.StringArrayOutput)
}

// The policy of the feature.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput) Policy() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicyPtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy {
		return v.Policy
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicyPtrOutput)
}

type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput) Elem() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature {
		if v != nil {
			return *v
		}
		var ret GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
		return ret
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput)
}

// A list of acceptable values. Only effective when the policy is `RESTRICTED`.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput) AllowedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature) []string {
		if v == nil {
			return nil
		}
		return v.AllowedValues
	}).(pulumi.StringArrayOutput)
}

// The policy of the feature.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput) Policy() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicyPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicyPtrOutput)
}

// Defines whether a feature can be used or what values are accepted.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse struct {
	// A list of acceptable values. Only effective when the policy is `RESTRICTED`.
	AllowedValues []string `pulumi:"allowedValues"`
	// The policy of the feature.
	Policy string `pulumi:"policy"`
}

// Defines whether a feature can be used or what values are accepted.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput {
	return o
}

// A list of acceptable values. Only effective when the policy is `RESTRICTED`.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput) AllowedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse) []string {
		return v.AllowedValues
	}).(pulumi.StringArrayOutput)
}

// The policy of the feature.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse) string {
		return v.Policy
	}).(pulumi.StringOutput)
}

// FeaturePolicy defines features allowed to be used on RBE instances, as well as instance-wide behavior changes that take effect without opt-in or opt-out at usage time.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponse struct {
	// Which container image sources are allowed. Currently only RBE-supported registry (gcr.io) is allowed. One can allow all repositories under a project or one specific repository only. E.g. container_image_sources { policy: RESTRICTED allowed_values: [ "gcr.io/project-foo", "gcr.io/project-bar/repo-baz", ] } will allow any repositories under "gcr.io/project-foo" plus the repository "gcr.io/project-bar/repo-baz". Default (UNSPECIFIED) is equivalent to any source is allowed.
	ContainerImageSources GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse `pulumi:"containerImageSources"`
	// Whether dockerAddCapabilities can be used or what capabilities are allowed.
	DockerAddCapabilities GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse `pulumi:"dockerAddCapabilities"`
	// Whether dockerChrootPath can be used.
	DockerChrootPath GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse `pulumi:"dockerChrootPath"`
	// Whether dockerNetwork can be used or what network modes are allowed. E.g. one may allow `off` value only via `allowed_values`.
	DockerNetwork GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse `pulumi:"dockerNetwork"`
	// Whether dockerPrivileged can be used.
	DockerPrivileged GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse `pulumi:"dockerPrivileged"`
	// Whether dockerRunAsRoot can be used.
	DockerRunAsRoot GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse `pulumi:"dockerRunAsRoot"`
	// Whether dockerRuntime is allowed to be set or what runtimes are allowed. Note linux_isolation takes precedence, and if set, docker_runtime values may be rejected if they are incompatible with the selected isolation.
	DockerRuntime GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse `pulumi:"dockerRuntime"`
	// Whether dockerSiblingContainers can be used.
	DockerSiblingContainers GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse `pulumi:"dockerSiblingContainers"`
	// linux_isolation allows overriding the docker runtime used for containers started on Linux.
	LinuxIsolation string `pulumi:"linuxIsolation"`
}

// FeaturePolicy defines features allowed to be used on RBE instances, as well as instance-wide behavior changes that take effect without opt-in or opt-out at usage time.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponse)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput {
	return o
}

// Which container image sources are allowed. Currently only RBE-supported registry (gcr.io) is allowed. One can allow all repositories under a project or one specific repository only. E.g. container_image_sources { policy: RESTRICTED allowed_values: [ "gcr.io/project-foo", "gcr.io/project-bar/repo-baz", ] } will allow any repositories under "gcr.io/project-foo" plus the repository "gcr.io/project-bar/repo-baz". Default (UNSPECIFIED) is equivalent to any source is allowed.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput) ContainerImageSources() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponse) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse {
		return v.ContainerImageSources
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput)
}

// Whether dockerAddCapabilities can be used or what capabilities are allowed.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput) DockerAddCapabilities() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponse) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse {
		return v.DockerAddCapabilities
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput)
}

// Whether dockerChrootPath can be used.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput) DockerChrootPath() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponse) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse {
		return v.DockerChrootPath
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput)
}

// Whether dockerNetwork can be used or what network modes are allowed. E.g. one may allow `off` value only via `allowed_values`.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput) DockerNetwork() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponse) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse {
		return v.DockerNetwork
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput)
}

// Whether dockerPrivileged can be used.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput) DockerPrivileged() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponse) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse {
		return v.DockerPrivileged
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput)
}

// Whether dockerRunAsRoot can be used.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput) DockerRunAsRoot() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponse) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse {
		return v.DockerRunAsRoot
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput)
}

// Whether dockerRuntime is allowed to be set or what runtimes are allowed. Note linux_isolation takes precedence, and if set, docker_runtime values may be rejected if they are incompatible with the selected isolation.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput) DockerRuntime() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponse) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse {
		return v.DockerRuntime
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput)
}

// Whether dockerSiblingContainers can be used.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput) DockerSiblingContainers() GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponse) GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponse {
		return v.DockerSiblingContainers
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput)
}

// linux_isolation allows overriding the docker runtime used for containers started on Linux.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput) LinuxIsolation() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponse) string {
		return v.LinuxIsolation
	}).(pulumi.StringOutput)
}

// Defines the configuration to be used for creating workers in the worker pool.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig struct {
	// The accelerator card attached to each VM.
	Accelerator *GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig `pulumi:"accelerator"`
	// Size of the disk attached to the worker, in GB. See https://cloud.google.com/compute/docs/disks/
	DiskSizeGb string `pulumi:"diskSizeGb"`
	// Disk Type to use for the worker. See [Storage options](https://cloud.google.com/compute/docs/disks/#introduction). Currently only `pd-standard` and `pd-ssd` are supported.
	DiskType string `pulumi:"diskType"`
	// Labels associated with the workers. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International letters are permitted. Label keys must start with a letter. Label values are optional. There can not be more than 64 labels per resource.
	Labels map[string]string `pulumi:"labels"`
	// Machine type of the worker, such as `e2-standard-2`. See https://cloud.google.com/compute/docs/machine-types for a list of supported machine types. Note that `f1-micro` and `g1-small` are not yet supported.
	MachineType string `pulumi:"machineType"`
	// The maximum number of actions a worker can execute concurrently.
	MaxConcurrentActions *string `pulumi:"maxConcurrentActions"`
	// Minimum CPU platform to use when creating the worker. See [CPU Platforms](https://cloud.google.com/compute/docs/cpu-platforms).
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// Determines the type of network access granted to workers. Possible values: - "public": Workers can connect to the public internet. - "private": Workers can only connect to Google APIs and services. - "restricted-private": Workers can only connect to Google APIs that are reachable through `restricted.googleapis.com` (`199.36.153.4/30`).
	NetworkAccess *string `pulumi:"networkAccess"`
	// Determines whether the worker is reserved (equivalent to a Compute Engine on-demand VM and therefore won't be preempted). See [Preemptible VMs](https://cloud.google.com/preemptible-vms/) for more details.
	Reserved *bool `pulumi:"reserved"`
	// The node type name to be used for sole-tenant nodes.
	SoleTenantNodeType *string `pulumi:"soleTenantNodeType"`
	// The name of the image used by each VM.
	VmImage *string `pulumi:"vmImage"`
}

// GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigInput is an input type that accepts GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs and GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput values.
// You can construct a concrete instance of `GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigInput` via:
//
//	GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs{...}
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigInput interface {
	pulumi.Input

	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput
	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutputWithContext(context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput
}

// Defines the configuration to be used for creating workers in the worker pool.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs struct {
	// The accelerator card attached to each VM.
	Accelerator GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrInput `pulumi:"accelerator"`
	// Size of the disk attached to the worker, in GB. See https://cloud.google.com/compute/docs/disks/
	DiskSizeGb pulumi.StringInput `pulumi:"diskSizeGb"`
	// Disk Type to use for the worker. See [Storage options](https://cloud.google.com/compute/docs/disks/#introduction). Currently only `pd-standard` and `pd-ssd` are supported.
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// Labels associated with the workers. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International letters are permitted. Label keys must start with a letter. Label values are optional. There can not be more than 64 labels per resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Machine type of the worker, such as `e2-standard-2`. See https://cloud.google.com/compute/docs/machine-types for a list of supported machine types. Note that `f1-micro` and `g1-small` are not yet supported.
	MachineType pulumi.StringInput `pulumi:"machineType"`
	// The maximum number of actions a worker can execute concurrently.
	MaxConcurrentActions pulumi.StringPtrInput `pulumi:"maxConcurrentActions"`
	// Minimum CPU platform to use when creating the worker. See [CPU Platforms](https://cloud.google.com/compute/docs/cpu-platforms).
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// Determines the type of network access granted to workers. Possible values: - "public": Workers can connect to the public internet. - "private": Workers can only connect to Google APIs and services. - "restricted-private": Workers can only connect to Google APIs that are reachable through `restricted.googleapis.com` (`199.36.153.4/30`).
	NetworkAccess pulumi.StringPtrInput `pulumi:"networkAccess"`
	// Determines whether the worker is reserved (equivalent to a Compute Engine on-demand VM and therefore won't be preempted). See [Preemptible VMs](https://cloud.google.com/preemptible-vms/) for more details.
	Reserved pulumi.BoolPtrInput `pulumi:"reserved"`
	// The node type name to be used for sole-tenant nodes.
	SoleTenantNodeType pulumi.StringPtrInput `pulumi:"soleTenantNodeType"`
	// The name of the image used by each VM.
	VmImage pulumi.StringPtrInput `pulumi:"vmImage"`
}

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig)(nil)).Elem()
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutputWithContext(context.Background())
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput)
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutputWithContext(context.Background())
}

func (i GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput).ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutputWithContext(ctx)
}

// GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrInput is an input type that accepts GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs, GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtr and GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput values.
// You can construct a concrete instance of `GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrInput` via:
//
//	        GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrInput interface {
	pulumi.Input

	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput
	ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutputWithContext(context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput
}

type googleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrType GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs

func GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtr(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs) GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrInput {
	return (*googleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrType)(v)
}

func (*googleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig)(nil)).Elem()
}

func (i *googleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrType) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput {
	return i.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutputWithContext(context.Background())
}

func (i *googleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrType) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput)
}

// Defines the configuration to be used for creating workers in the worker pool.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput {
	return o.ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutputWithContext(context.Background())
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig {
		return &v
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput)
}

// The accelerator card attached to each VM.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) Accelerator() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig {
		return v.Accelerator
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput)
}

// Size of the disk attached to the worker, in GB. See https://cloud.google.com/compute/docs/disks/
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) DiskSizeGb() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) string { return v.DiskSizeGb }).(pulumi.StringOutput)
}

// Disk Type to use for the worker. See [Storage options](https://cloud.google.com/compute/docs/disks/#introduction). Currently only `pd-standard` and `pd-ssd` are supported.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) string { return v.DiskType }).(pulumi.StringOutput)
}

// Labels associated with the workers. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International letters are permitted. Label keys must start with a letter. Label values are optional. There can not be more than 64 labels per resource.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Machine type of the worker, such as `e2-standard-2`. See https://cloud.google.com/compute/docs/machine-types for a list of supported machine types. Note that `f1-micro` and `g1-small` are not yet supported.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

// The maximum number of actions a worker can execute concurrently.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) MaxConcurrentActions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *string {
		return v.MaxConcurrentActions
	}).(pulumi.StringPtrOutput)
}

// Minimum CPU platform to use when creating the worker. See [CPU Platforms](https://cloud.google.com/compute/docs/cpu-platforms).
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// Determines the type of network access granted to workers. Possible values: - "public": Workers can connect to the public internet. - "private": Workers can only connect to Google APIs and services. - "restricted-private": Workers can only connect to Google APIs that are reachable through `restricted.googleapis.com` (`199.36.153.4/30`).
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) NetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *string { return v.NetworkAccess }).(pulumi.StringPtrOutput)
}

// Determines whether the worker is reserved (equivalent to a Compute Engine on-demand VM and therefore won't be preempted). See [Preemptible VMs](https://cloud.google.com/preemptible-vms/) for more details.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) Reserved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *bool { return v.Reserved }).(pulumi.BoolPtrOutput)
}

// The node type name to be used for sole-tenant nodes.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) SoleTenantNodeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *string {
		return v.SoleTenantNodeType
	}).(pulumi.StringPtrOutput)
}

// The name of the image used by each VM.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput) VmImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *string { return v.VmImage }).(pulumi.StringPtrOutput)
}

type GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) Elem() GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig {
		if v != nil {
			return *v
		}
		var ret GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig
		return ret
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput)
}

// The accelerator card attached to each VM.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) Accelerator() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig {
		if v == nil {
			return nil
		}
		return v.Accelerator
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput)
}

// Size of the disk attached to the worker, in GB. See https://cloud.google.com/compute/docs/disks/
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) DiskSizeGb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DiskSizeGb
	}).(pulumi.StringPtrOutput)
}

// Disk Type to use for the worker. See [Storage options](https://cloud.google.com/compute/docs/disks/#introduction). Currently only `pd-standard` and `pd-ssd` are supported.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DiskType
	}).(pulumi.StringPtrOutput)
}

// Labels associated with the workers. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International letters are permitted. Label keys must start with a letter. Label values are optional. There can not be more than 64 labels per resource.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Machine type of the worker, such as `e2-standard-2`. See https://cloud.google.com/compute/docs/machine-types for a list of supported machine types. Note that `f1-micro` and `g1-small` are not yet supported.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.MachineType
	}).(pulumi.StringPtrOutput)
}

// The maximum number of actions a worker can execute concurrently.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) MaxConcurrentActions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentActions
	}).(pulumi.StringPtrOutput)
}

// Minimum CPU platform to use when creating the worker. See [CPU Platforms](https://cloud.google.com/compute/docs/cpu-platforms).
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinCpuPlatform
	}).(pulumi.StringPtrOutput)
}

// Determines the type of network access granted to workers. Possible values: - "public": Workers can connect to the public internet. - "private": Workers can only connect to Google APIs and services. - "restricted-private": Workers can only connect to Google APIs that are reachable through `restricted.googleapis.com` (`199.36.153.4/30`).
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) NetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.NetworkAccess
	}).(pulumi.StringPtrOutput)
}

// Determines whether the worker is reserved (equivalent to a Compute Engine on-demand VM and therefore won't be preempted). See [Preemptible VMs](https://cloud.google.com/preemptible-vms/) for more details.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) Reserved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Reserved
	}).(pulumi.BoolPtrOutput)
}

// The node type name to be used for sole-tenant nodes.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) SoleTenantNodeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.SoleTenantNodeType
	}).(pulumi.StringPtrOutput)
}

// The name of the image used by each VM.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput) VmImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig) *string {
		if v == nil {
			return nil
		}
		return v.VmImage
	}).(pulumi.StringPtrOutput)
}

// Defines the configuration to be used for creating workers in the worker pool.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse struct {
	// The accelerator card attached to each VM.
	Accelerator GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse `pulumi:"accelerator"`
	// Size of the disk attached to the worker, in GB. See https://cloud.google.com/compute/docs/disks/
	DiskSizeGb string `pulumi:"diskSizeGb"`
	// Disk Type to use for the worker. See [Storage options](https://cloud.google.com/compute/docs/disks/#introduction). Currently only `pd-standard` and `pd-ssd` are supported.
	DiskType string `pulumi:"diskType"`
	// Labels associated with the workers. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International letters are permitted. Label keys must start with a letter. Label values are optional. There can not be more than 64 labels per resource.
	Labels map[string]string `pulumi:"labels"`
	// Machine type of the worker, such as `e2-standard-2`. See https://cloud.google.com/compute/docs/machine-types for a list of supported machine types. Note that `f1-micro` and `g1-small` are not yet supported.
	MachineType string `pulumi:"machineType"`
	// The maximum number of actions a worker can execute concurrently.
	MaxConcurrentActions string `pulumi:"maxConcurrentActions"`
	// Minimum CPU platform to use when creating the worker. See [CPU Platforms](https://cloud.google.com/compute/docs/cpu-platforms).
	MinCpuPlatform string `pulumi:"minCpuPlatform"`
	// Determines the type of network access granted to workers. Possible values: - "public": Workers can connect to the public internet. - "private": Workers can only connect to Google APIs and services. - "restricted-private": Workers can only connect to Google APIs that are reachable through `restricted.googleapis.com` (`199.36.153.4/30`).
	NetworkAccess string `pulumi:"networkAccess"`
	// Determines whether the worker is reserved (equivalent to a Compute Engine on-demand VM and therefore won't be preempted). See [Preemptible VMs](https://cloud.google.com/preemptible-vms/) for more details.
	Reserved bool `pulumi:"reserved"`
	// The node type name to be used for sole-tenant nodes.
	SoleTenantNodeType string `pulumi:"soleTenantNodeType"`
	// The name of the image used by each VM.
	VmImage string `pulumi:"vmImage"`
}

// Defines the configuration to be used for creating workers in the worker pool.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse)(nil)).Elem()
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput() GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput {
	return o
}

func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput) ToGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutputWithContext(ctx context.Context) GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput {
	return o
}

// The accelerator card attached to each VM.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput) Accelerator() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponseOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponse {
		return v.Accelerator
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponseOutput)
}

// Size of the disk attached to the worker, in GB. See https://cloud.google.com/compute/docs/disks/
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput) DiskSizeGb() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse) string { return v.DiskSizeGb }).(pulumi.StringOutput)
}

// Disk Type to use for the worker. See [Storage options](https://cloud.google.com/compute/docs/disks/#introduction). Currently only `pd-standard` and `pd-ssd` are supported.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse) string { return v.DiskType }).(pulumi.StringOutput)
}

// Labels associated with the workers. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International letters are permitted. Label keys must start with a letter. Label values are optional. There can not be more than 64 labels per resource.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse) map[string]string {
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Machine type of the worker, such as `e2-standard-2`. See https://cloud.google.com/compute/docs/machine-types for a list of supported machine types. Note that `f1-micro` and `g1-small` are not yet supported.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse) string {
		return v.MachineType
	}).(pulumi.StringOutput)
}

// The maximum number of actions a worker can execute concurrently.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput) MaxConcurrentActions() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse) string {
		return v.MaxConcurrentActions
	}).(pulumi.StringOutput)
}

// Minimum CPU platform to use when creating the worker. See [CPU Platforms](https://cloud.google.com/compute/docs/cpu-platforms).
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput) MinCpuPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse) string {
		return v.MinCpuPlatform
	}).(pulumi.StringOutput)
}

// Determines the type of network access granted to workers. Possible values: - "public": Workers can connect to the public internet. - "private": Workers can only connect to Google APIs and services. - "restricted-private": Workers can only connect to Google APIs that are reachable through `restricted.googleapis.com` (`199.36.153.4/30`).
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput) NetworkAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse) string {
		return v.NetworkAccess
	}).(pulumi.StringOutput)
}

// Determines whether the worker is reserved (equivalent to a Compute Engine on-demand VM and therefore won't be preempted). See [Preemptible VMs](https://cloud.google.com/preemptible-vms/) for more details.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput) Reserved() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse) bool { return v.Reserved }).(pulumi.BoolOutput)
}

// The node type name to be used for sole-tenant nodes.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput) SoleTenantNodeType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse) string {
		return v.SoleTenantNodeType
	}).(pulumi.StringOutput)
}

// The name of the image used by each VM.
func (o GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput) VmImage() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse) string { return v.VmImage }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigInput)(nil)).Elem(), GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrInput)(nil)).Elem(), GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleInput)(nil)).Elem(), GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrInput)(nil)).Elem(), GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyInput)(nil)).Elem(), GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrInput)(nil)).Elem(), GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureInput)(nil)).Elem(), GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrInput)(nil)).Elem(), GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigInput)(nil)).Elem(), GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrInput)(nil)).Elem(), GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigOutput{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleOutput{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscalePtrOutput{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponseOutput{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyOutput{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyPtrOutput{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureOutput{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePtrOutput{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeatureResponseOutput{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponseOutput{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigOutput{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput{})
}
