// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The policy of the feature.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy pulumi.String

const (
	// Default value, if not explicitly set. Equivalent to FORBIDDEN, unless otherwise documented on a specific Feature.
	GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicyPolicyUnspecified = GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy("POLICY_UNSPECIFIED")
	// Feature is explicitly allowed.
	GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicyAllowed = GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy("ALLOWED")
	// Feature is forbidden. Requests attempting to leverage it will get an FailedPrecondition error, with a message like: "Feature forbidden by FeaturePolicy: Feature on instance "
	GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicyForbidden = GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy("FORBIDDEN")
	// Only the values specified in the `allowed_values` are allowed.
	GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicyRestricted = GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy("RESTRICTED")
)

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// linux_isolation allows overriding the docker runtime used for containers started on Linux.
type GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation pulumi.String

const (
	// Default value. Will be using Linux default runtime.
	GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolationLinuxIsolationUnspecified = GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation("LINUX_ISOLATION_UNSPECIFIED")
	// Use gVisor runsc runtime.
	GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolationGvisor = GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation("GVISOR")
	// Use stardard Linux runtime. This has the same behaviour as unspecified, but it can be used to revert back from gVisor.
	GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolationOff = GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation("OFF")
)

func (GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Output only. State of the instance.
type InstanceStateEnum pulumi.String

const (
	// Not a valid state, but the default value of the enum.
	InstanceStateEnumStateUnspecified = InstanceStateEnum("STATE_UNSPECIFIED")
	// The instance is in state `CREATING` once `CreateInstance` is called and before the instance is ready for use.
	InstanceStateEnumCreating = InstanceStateEnum("CREATING")
	// The instance is in state `RUNNING` when it is ready for use.
	InstanceStateEnumRunning = InstanceStateEnum("RUNNING")
	// An `INACTIVE` instance indicates that there is a problem that needs to be fixed. Such instances cannot be used for execution and instances that remain in this state for a significant period of time will be removed permanently.
	InstanceStateEnumInactive = InstanceStateEnum("INACTIVE")
)

func (InstanceStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e InstanceStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Output only. State of the worker pool.
type WorkerPoolStateEnum pulumi.String

const (
	// Not a valid state, but the default value of the enum.
	WorkerPoolStateEnumStateUnspecified = WorkerPoolStateEnum("STATE_UNSPECIFIED")
	// The worker pool is in state `CREATING` once `CreateWorkerPool` is called and before all requested workers are ready.
	WorkerPoolStateEnumCreating = WorkerPoolStateEnum("CREATING")
	// The worker pool is in state `RUNNING` when all its workers are ready for use.
	WorkerPoolStateEnumRunning = WorkerPoolStateEnum("RUNNING")
	// The worker pool is in state `UPDATING` once `UpdateWorkerPool` is called and before the new configuration has all the requested workers ready for use, and no older configuration has any workers. At that point the state transitions to `RUNNING`.
	WorkerPoolStateEnumUpdating = WorkerPoolStateEnum("UPDATING")
	// The worker pool is in state `DELETING` once the `Delete` method is called and before the deletion completes.
	WorkerPoolStateEnumDeleting = WorkerPoolStateEnum("DELETING")
	// The worker pool is in state `INACTIVE` when the instance hosting the worker pool in not running.
	WorkerPoolStateEnumInactive = WorkerPoolStateEnum("INACTIVE")
)

func (WorkerPoolStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e WorkerPoolStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkerPoolStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkerPoolStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WorkerPoolStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
