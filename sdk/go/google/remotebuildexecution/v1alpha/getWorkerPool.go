// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the specified worker pool.
func LookupWorkerPool(ctx *pulumi.Context, args *LookupWorkerPoolArgs, opts ...pulumi.InvokeOption) (*LookupWorkerPoolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkerPoolResult
	err := ctx.Invoke("google-native:remotebuildexecution/v1alpha:getWorkerPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWorkerPoolArgs struct {
	InstanceId   string  `pulumi:"instanceId"`
	Project      *string `pulumi:"project"`
	WorkerpoolId string  `pulumi:"workerpoolId"`
}

type LookupWorkerPoolResult struct {
	// The autoscale policy to apply on a pool.
	Autoscale GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponse `pulumi:"autoscale"`
	// Channel specifies the release channel of the pool.
	Channel string `pulumi:"channel"`
	// WorkerPool resource name formatted as: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`. name should not be populated when creating a worker pool since it is provided in the `poolId` field.
	Name string `pulumi:"name"`
	// State of the worker pool.
	State string `pulumi:"state"`
	// Specifies the properties, such as machine type and disk size, used for creating workers in a worker pool.
	WorkerConfig GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse `pulumi:"workerConfig"`
	// The desired number of workers in the worker pool. Must be a value between 0 and 15000.
	WorkerCount string `pulumi:"workerCount"`
}

func LookupWorkerPoolOutput(ctx *pulumi.Context, args LookupWorkerPoolOutputArgs, opts ...pulumi.InvokeOption) LookupWorkerPoolResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkerPoolResult, error) {
			args := v.(LookupWorkerPoolArgs)
			r, err := LookupWorkerPool(ctx, &args, opts...)
			var s LookupWorkerPoolResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkerPoolResultOutput)
}

type LookupWorkerPoolOutputArgs struct {
	InstanceId   pulumi.StringInput    `pulumi:"instanceId"`
	Project      pulumi.StringPtrInput `pulumi:"project"`
	WorkerpoolId pulumi.StringInput    `pulumi:"workerpoolId"`
}

func (LookupWorkerPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkerPoolArgs)(nil)).Elem()
}

type LookupWorkerPoolResultOutput struct{ *pulumi.OutputState }

func (LookupWorkerPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkerPoolResult)(nil)).Elem()
}

func (o LookupWorkerPoolResultOutput) ToLookupWorkerPoolResultOutput() LookupWorkerPoolResultOutput {
	return o
}

func (o LookupWorkerPoolResultOutput) ToLookupWorkerPoolResultOutputWithContext(ctx context.Context) LookupWorkerPoolResultOutput {
	return o
}

// The autoscale policy to apply on a pool.
func (o LookupWorkerPoolResultOutput) Autoscale() GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponseOutput {
	return o.ApplyT(func(v LookupWorkerPoolResult) GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponse {
		return v.Autoscale
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponseOutput)
}

// Channel specifies the release channel of the pool.
func (o LookupWorkerPoolResultOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkerPoolResult) string { return v.Channel }).(pulumi.StringOutput)
}

// WorkerPool resource name formatted as: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`. name should not be populated when creating a worker pool since it is provided in the `poolId` field.
func (o LookupWorkerPoolResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkerPoolResult) string { return v.Name }).(pulumi.StringOutput)
}

// State of the worker pool.
func (o LookupWorkerPoolResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkerPoolResult) string { return v.State }).(pulumi.StringOutput)
}

// Specifies the properties, such as machine type and disk size, used for creating workers in a worker pool.
func (o LookupWorkerPoolResultOutput) WorkerConfig() GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput {
	return o.ApplyT(func(v LookupWorkerPoolResult) GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse {
		return v.WorkerConfig
	}).(GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponseOutput)
}

// The desired number of workers in the worker pool. Must be a value between 0 and 15000.
func (o LookupWorkerPoolResultOutput) WorkerCount() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkerPoolResult) string { return v.WorkerCount }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkerPoolResultOutput{})
}
