// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1p1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Create a custom class.
type CustomClass struct {
	pulumi.CustomResourceState
}

// NewCustomClass registers a new resource with the given unique name, arguments, and options.
func NewCustomClass(ctx *pulumi.Context,
	name string, args *CustomClassArgs, opts ...pulumi.ResourceOption) (*CustomClass, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomClassesId == nil {
		return nil, errors.New("invalid value for required argument 'CustomClassesId'")
	}
	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	var resource CustomClass
	err := ctx.RegisterResource("google-cloud:speech/v1p1beta1:CustomClass", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomClass gets an existing CustomClass resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomClass(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomClassState, opts ...pulumi.ResourceOption) (*CustomClass, error) {
	var resource CustomClass
	err := ctx.ReadResource("google-cloud:speech/v1p1beta1:CustomClass", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomClass resources.
type customClassState struct {
}

type CustomClassState struct {
}

func (CustomClassState) ElementType() reflect.Type {
	return reflect.TypeOf((*customClassState)(nil)).Elem()
}

type customClassArgs struct {
	// Required. The custom class to create.
	CustomClass *CustomClassType `pulumi:"customClass"`
	// The ID to use for the custom class, which will become the final component of the custom class' resource name. This value should be 4-63 characters, and valid characters are /a-z-/.
	CustomClassId   *string `pulumi:"customClassId"`
	CustomClassesId string  `pulumi:"customClassesId"`
	LocationsId     string  `pulumi:"locationsId"`
	ProjectsId      string  `pulumi:"projectsId"`
}

// The set of arguments for constructing a CustomClass resource.
type CustomClassArgs struct {
	// Required. The custom class to create.
	CustomClass CustomClassTypePtrInput
	// The ID to use for the custom class, which will become the final component of the custom class' resource name. This value should be 4-63 characters, and valid characters are /a-z-/.
	CustomClassId   pulumi.StringPtrInput
	CustomClassesId pulumi.StringInput
	LocationsId     pulumi.StringInput
	ProjectsId      pulumi.StringInput
}

func (CustomClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customClassArgs)(nil)).Elem()
}

type CustomClassInput interface {
	pulumi.Input

	ToCustomClassOutput() CustomClassOutput
	ToCustomClassOutputWithContext(ctx context.Context) CustomClassOutput
}

func (*CustomClass) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomClass)(nil))
}

func (i *CustomClass) ToCustomClassOutput() CustomClassOutput {
	return i.ToCustomClassOutputWithContext(context.Background())
}

func (i *CustomClass) ToCustomClassOutputWithContext(ctx context.Context) CustomClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomClassOutput)
}

type CustomClassOutput struct {
	*pulumi.OutputState
}

func (CustomClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomClass)(nil))
}

func (o CustomClassOutput) ToCustomClassOutput() CustomClassOutput {
	return o
}

func (o CustomClassOutput) ToCustomClassOutputWithContext(ctx context.Context) CustomClassOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(CustomClassOutput{})
}
