// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The provisioning model.
type InstancePolicyProvisioningModel string

const (
	// Unspecified.
	InstancePolicyProvisioningModelProvisioningModelUnspecified = InstancePolicyProvisioningModel("PROVISIONING_MODEL_UNSPECIFIED")
	// Standard VM.
	InstancePolicyProvisioningModelStandard = InstancePolicyProvisioningModel("STANDARD")
	// SPOT VM.
	InstancePolicyProvisioningModelSpot = InstancePolicyProvisioningModel("SPOT")
	// Preemptible VM (PVM). Above SPOT VM is the preferable model for preemptible VM instances: the old preemptible VM model (indicated by this field) is the older model, and has been migrated to use the SPOT model as the underlying technology. This old model will still be supported.
	InstancePolicyProvisioningModelPreemptible = InstancePolicyProvisioningModel("PREEMPTIBLE")
)

func (InstancePolicyProvisioningModel) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePolicyProvisioningModel)(nil)).Elem()
}

func (e InstancePolicyProvisioningModel) ToInstancePolicyProvisioningModelOutput() InstancePolicyProvisioningModelOutput {
	return pulumi.ToOutput(e).(InstancePolicyProvisioningModelOutput)
}

func (e InstancePolicyProvisioningModel) ToInstancePolicyProvisioningModelOutputWithContext(ctx context.Context) InstancePolicyProvisioningModelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstancePolicyProvisioningModelOutput)
}

func (e InstancePolicyProvisioningModel) ToInstancePolicyProvisioningModelPtrOutput() InstancePolicyProvisioningModelPtrOutput {
	return e.ToInstancePolicyProvisioningModelPtrOutputWithContext(context.Background())
}

func (e InstancePolicyProvisioningModel) ToInstancePolicyProvisioningModelPtrOutputWithContext(ctx context.Context) InstancePolicyProvisioningModelPtrOutput {
	return InstancePolicyProvisioningModel(e).ToInstancePolicyProvisioningModelOutputWithContext(ctx).ToInstancePolicyProvisioningModelPtrOutputWithContext(ctx)
}

func (e InstancePolicyProvisioningModel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstancePolicyProvisioningModel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstancePolicyProvisioningModel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstancePolicyProvisioningModel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstancePolicyProvisioningModelOutput struct{ *pulumi.OutputState }

func (InstancePolicyProvisioningModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePolicyProvisioningModel)(nil)).Elem()
}

func (o InstancePolicyProvisioningModelOutput) ToInstancePolicyProvisioningModelOutput() InstancePolicyProvisioningModelOutput {
	return o
}

func (o InstancePolicyProvisioningModelOutput) ToInstancePolicyProvisioningModelOutputWithContext(ctx context.Context) InstancePolicyProvisioningModelOutput {
	return o
}

func (o InstancePolicyProvisioningModelOutput) ToInstancePolicyProvisioningModelPtrOutput() InstancePolicyProvisioningModelPtrOutput {
	return o.ToInstancePolicyProvisioningModelPtrOutputWithContext(context.Background())
}

func (o InstancePolicyProvisioningModelOutput) ToInstancePolicyProvisioningModelPtrOutputWithContext(ctx context.Context) InstancePolicyProvisioningModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePolicyProvisioningModel) *InstancePolicyProvisioningModel {
		return &v
	}).(InstancePolicyProvisioningModelPtrOutput)
}

func (o InstancePolicyProvisioningModelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstancePolicyProvisioningModelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstancePolicyProvisioningModel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstancePolicyProvisioningModelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstancePolicyProvisioningModelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstancePolicyProvisioningModel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstancePolicyProvisioningModelPtrOutput struct{ *pulumi.OutputState }

func (InstancePolicyProvisioningModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePolicyProvisioningModel)(nil)).Elem()
}

func (o InstancePolicyProvisioningModelPtrOutput) ToInstancePolicyProvisioningModelPtrOutput() InstancePolicyProvisioningModelPtrOutput {
	return o
}

func (o InstancePolicyProvisioningModelPtrOutput) ToInstancePolicyProvisioningModelPtrOutputWithContext(ctx context.Context) InstancePolicyProvisioningModelPtrOutput {
	return o
}

func (o InstancePolicyProvisioningModelPtrOutput) Elem() InstancePolicyProvisioningModelOutput {
	return o.ApplyT(func(v *InstancePolicyProvisioningModel) InstancePolicyProvisioningModel {
		if v != nil {
			return *v
		}
		var ret InstancePolicyProvisioningModel
		return ret
	}).(InstancePolicyProvisioningModelOutput)
}

func (o InstancePolicyProvisioningModelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstancePolicyProvisioningModelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstancePolicyProvisioningModel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstancePolicyProvisioningModelInput is an input type that accepts InstancePolicyProvisioningModelArgs and InstancePolicyProvisioningModelOutput values.
// You can construct a concrete instance of `InstancePolicyProvisioningModelInput` via:
//
//	InstancePolicyProvisioningModelArgs{...}
type InstancePolicyProvisioningModelInput interface {
	pulumi.Input

	ToInstancePolicyProvisioningModelOutput() InstancePolicyProvisioningModelOutput
	ToInstancePolicyProvisioningModelOutputWithContext(context.Context) InstancePolicyProvisioningModelOutput
}

var instancePolicyProvisioningModelPtrType = reflect.TypeOf((**InstancePolicyProvisioningModel)(nil)).Elem()

type InstancePolicyProvisioningModelPtrInput interface {
	pulumi.Input

	ToInstancePolicyProvisioningModelPtrOutput() InstancePolicyProvisioningModelPtrOutput
	ToInstancePolicyProvisioningModelPtrOutputWithContext(context.Context) InstancePolicyProvisioningModelPtrOutput
}

type instancePolicyProvisioningModelPtr string

func InstancePolicyProvisioningModelPtr(v string) InstancePolicyProvisioningModelPtrInput {
	return (*instancePolicyProvisioningModelPtr)(&v)
}

func (*instancePolicyProvisioningModelPtr) ElementType() reflect.Type {
	return instancePolicyProvisioningModelPtrType
}

func (in *instancePolicyProvisioningModelPtr) ToInstancePolicyProvisioningModelPtrOutput() InstancePolicyProvisioningModelPtrOutput {
	return pulumi.ToOutput(in).(InstancePolicyProvisioningModelPtrOutput)
}

func (in *instancePolicyProvisioningModelPtr) ToInstancePolicyProvisioningModelPtrOutputWithContext(ctx context.Context) InstancePolicyProvisioningModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstancePolicyProvisioningModelPtrOutput)
}

func (in *instancePolicyProvisioningModelPtr) ToOutput(ctx context.Context) pulumix.Output[*InstancePolicyProvisioningModel] {
	return pulumix.Output[*InstancePolicyProvisioningModel]{
		OutputState: in.ToInstancePolicyProvisioningModelPtrOutputWithContext(ctx).OutputState,
	}
}

// Action to execute when ActionCondition is true. When RETRY_TASK is specified, we will retry failed tasks if we notice any exit code match and fail tasks if no match is found. Likewise, when FAIL_TASK is specified, we will fail tasks if we notice any exit code match and retry tasks if no match is found.
type LifecyclePolicyAction string

const (
	// Action unspecified.
	LifecyclePolicyActionActionUnspecified = LifecyclePolicyAction("ACTION_UNSPECIFIED")
	// Action that tasks in the group will be scheduled to re-execute.
	LifecyclePolicyActionRetryTask = LifecyclePolicyAction("RETRY_TASK")
	// Action that tasks in the group will be stopped immediately.
	LifecyclePolicyActionFailTask = LifecyclePolicyAction("FAIL_TASK")
)

func (LifecyclePolicyAction) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyAction)(nil)).Elem()
}

func (e LifecyclePolicyAction) ToLifecyclePolicyActionOutput() LifecyclePolicyActionOutput {
	return pulumi.ToOutput(e).(LifecyclePolicyActionOutput)
}

func (e LifecyclePolicyAction) ToLifecyclePolicyActionOutputWithContext(ctx context.Context) LifecyclePolicyActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LifecyclePolicyActionOutput)
}

func (e LifecyclePolicyAction) ToLifecyclePolicyActionPtrOutput() LifecyclePolicyActionPtrOutput {
	return e.ToLifecyclePolicyActionPtrOutputWithContext(context.Background())
}

func (e LifecyclePolicyAction) ToLifecyclePolicyActionPtrOutputWithContext(ctx context.Context) LifecyclePolicyActionPtrOutput {
	return LifecyclePolicyAction(e).ToLifecyclePolicyActionOutputWithContext(ctx).ToLifecyclePolicyActionPtrOutputWithContext(ctx)
}

func (e LifecyclePolicyAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LifecyclePolicyAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LifecyclePolicyAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LifecyclePolicyAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LifecyclePolicyActionOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyAction)(nil)).Elem()
}

func (o LifecyclePolicyActionOutput) ToLifecyclePolicyActionOutput() LifecyclePolicyActionOutput {
	return o
}

func (o LifecyclePolicyActionOutput) ToLifecyclePolicyActionOutputWithContext(ctx context.Context) LifecyclePolicyActionOutput {
	return o
}

func (o LifecyclePolicyActionOutput) ToLifecyclePolicyActionPtrOutput() LifecyclePolicyActionPtrOutput {
	return o.ToLifecyclePolicyActionPtrOutputWithContext(context.Background())
}

func (o LifecyclePolicyActionOutput) ToLifecyclePolicyActionPtrOutputWithContext(ctx context.Context) LifecyclePolicyActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LifecyclePolicyAction) *LifecyclePolicyAction {
		return &v
	}).(LifecyclePolicyActionPtrOutput)
}

func (o LifecyclePolicyActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LifecyclePolicyActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LifecyclePolicyAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LifecyclePolicyActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LifecyclePolicyActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LifecyclePolicyAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LifecyclePolicyActionPtrOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyAction)(nil)).Elem()
}

func (o LifecyclePolicyActionPtrOutput) ToLifecyclePolicyActionPtrOutput() LifecyclePolicyActionPtrOutput {
	return o
}

func (o LifecyclePolicyActionPtrOutput) ToLifecyclePolicyActionPtrOutputWithContext(ctx context.Context) LifecyclePolicyActionPtrOutput {
	return o
}

func (o LifecyclePolicyActionPtrOutput) Elem() LifecyclePolicyActionOutput {
	return o.ApplyT(func(v *LifecyclePolicyAction) LifecyclePolicyAction {
		if v != nil {
			return *v
		}
		var ret LifecyclePolicyAction
		return ret
	}).(LifecyclePolicyActionOutput)
}

func (o LifecyclePolicyActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LifecyclePolicyActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LifecyclePolicyAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LifecyclePolicyActionInput is an input type that accepts LifecyclePolicyActionArgs and LifecyclePolicyActionOutput values.
// You can construct a concrete instance of `LifecyclePolicyActionInput` via:
//
//	LifecyclePolicyActionArgs{...}
type LifecyclePolicyActionInput interface {
	pulumi.Input

	ToLifecyclePolicyActionOutput() LifecyclePolicyActionOutput
	ToLifecyclePolicyActionOutputWithContext(context.Context) LifecyclePolicyActionOutput
}

var lifecyclePolicyActionPtrType = reflect.TypeOf((**LifecyclePolicyAction)(nil)).Elem()

type LifecyclePolicyActionPtrInput interface {
	pulumi.Input

	ToLifecyclePolicyActionPtrOutput() LifecyclePolicyActionPtrOutput
	ToLifecyclePolicyActionPtrOutputWithContext(context.Context) LifecyclePolicyActionPtrOutput
}

type lifecyclePolicyActionPtr string

func LifecyclePolicyActionPtr(v string) LifecyclePolicyActionPtrInput {
	return (*lifecyclePolicyActionPtr)(&v)
}

func (*lifecyclePolicyActionPtr) ElementType() reflect.Type {
	return lifecyclePolicyActionPtrType
}

func (in *lifecyclePolicyActionPtr) ToLifecyclePolicyActionPtrOutput() LifecyclePolicyActionPtrOutput {
	return pulumi.ToOutput(in).(LifecyclePolicyActionPtrOutput)
}

func (in *lifecyclePolicyActionPtr) ToLifecyclePolicyActionPtrOutputWithContext(ctx context.Context) LifecyclePolicyActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LifecyclePolicyActionPtrOutput)
}

func (in *lifecyclePolicyActionPtr) ToOutput(ctx context.Context) pulumix.Output[*LifecyclePolicyAction] {
	return pulumix.Output[*LifecyclePolicyAction]{
		OutputState: in.ToLifecyclePolicyActionPtrOutputWithContext(ctx).OutputState,
	}
}

// Where logs should be saved.
type LogsPolicyDestination string

const (
	// Logs are not preserved.
	LogsPolicyDestinationDestinationUnspecified = LogsPolicyDestination("DESTINATION_UNSPECIFIED")
	// Logs are streamed to Cloud Logging.
	LogsPolicyDestinationCloudLogging = LogsPolicyDestination("CLOUD_LOGGING")
	// Logs are saved to a file path.
	LogsPolicyDestinationPath = LogsPolicyDestination("PATH")
)

func (LogsPolicyDestination) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsPolicyDestination)(nil)).Elem()
}

func (e LogsPolicyDestination) ToLogsPolicyDestinationOutput() LogsPolicyDestinationOutput {
	return pulumi.ToOutput(e).(LogsPolicyDestinationOutput)
}

func (e LogsPolicyDestination) ToLogsPolicyDestinationOutputWithContext(ctx context.Context) LogsPolicyDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LogsPolicyDestinationOutput)
}

func (e LogsPolicyDestination) ToLogsPolicyDestinationPtrOutput() LogsPolicyDestinationPtrOutput {
	return e.ToLogsPolicyDestinationPtrOutputWithContext(context.Background())
}

func (e LogsPolicyDestination) ToLogsPolicyDestinationPtrOutputWithContext(ctx context.Context) LogsPolicyDestinationPtrOutput {
	return LogsPolicyDestination(e).ToLogsPolicyDestinationOutputWithContext(ctx).ToLogsPolicyDestinationPtrOutputWithContext(ctx)
}

func (e LogsPolicyDestination) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogsPolicyDestination) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogsPolicyDestination) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LogsPolicyDestination) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LogsPolicyDestinationOutput struct{ *pulumi.OutputState }

func (LogsPolicyDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsPolicyDestination)(nil)).Elem()
}

func (o LogsPolicyDestinationOutput) ToLogsPolicyDestinationOutput() LogsPolicyDestinationOutput {
	return o
}

func (o LogsPolicyDestinationOutput) ToLogsPolicyDestinationOutputWithContext(ctx context.Context) LogsPolicyDestinationOutput {
	return o
}

func (o LogsPolicyDestinationOutput) ToLogsPolicyDestinationPtrOutput() LogsPolicyDestinationPtrOutput {
	return o.ToLogsPolicyDestinationPtrOutputWithContext(context.Background())
}

func (o LogsPolicyDestinationOutput) ToLogsPolicyDestinationPtrOutputWithContext(ctx context.Context) LogsPolicyDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogsPolicyDestination) *LogsPolicyDestination {
		return &v
	}).(LogsPolicyDestinationPtrOutput)
}

func (o LogsPolicyDestinationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LogsPolicyDestinationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogsPolicyDestination) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LogsPolicyDestinationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogsPolicyDestinationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogsPolicyDestination) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LogsPolicyDestinationPtrOutput struct{ *pulumi.OutputState }

func (LogsPolicyDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsPolicyDestination)(nil)).Elem()
}

func (o LogsPolicyDestinationPtrOutput) ToLogsPolicyDestinationPtrOutput() LogsPolicyDestinationPtrOutput {
	return o
}

func (o LogsPolicyDestinationPtrOutput) ToLogsPolicyDestinationPtrOutputWithContext(ctx context.Context) LogsPolicyDestinationPtrOutput {
	return o
}

func (o LogsPolicyDestinationPtrOutput) Elem() LogsPolicyDestinationOutput {
	return o.ApplyT(func(v *LogsPolicyDestination) LogsPolicyDestination {
		if v != nil {
			return *v
		}
		var ret LogsPolicyDestination
		return ret
	}).(LogsPolicyDestinationOutput)
}

func (o LogsPolicyDestinationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogsPolicyDestinationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LogsPolicyDestination) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LogsPolicyDestinationInput is an input type that accepts LogsPolicyDestinationArgs and LogsPolicyDestinationOutput values.
// You can construct a concrete instance of `LogsPolicyDestinationInput` via:
//
//	LogsPolicyDestinationArgs{...}
type LogsPolicyDestinationInput interface {
	pulumi.Input

	ToLogsPolicyDestinationOutput() LogsPolicyDestinationOutput
	ToLogsPolicyDestinationOutputWithContext(context.Context) LogsPolicyDestinationOutput
}

var logsPolicyDestinationPtrType = reflect.TypeOf((**LogsPolicyDestination)(nil)).Elem()

type LogsPolicyDestinationPtrInput interface {
	pulumi.Input

	ToLogsPolicyDestinationPtrOutput() LogsPolicyDestinationPtrOutput
	ToLogsPolicyDestinationPtrOutputWithContext(context.Context) LogsPolicyDestinationPtrOutput
}

type logsPolicyDestinationPtr string

func LogsPolicyDestinationPtr(v string) LogsPolicyDestinationPtrInput {
	return (*logsPolicyDestinationPtr)(&v)
}

func (*logsPolicyDestinationPtr) ElementType() reflect.Type {
	return logsPolicyDestinationPtrType
}

func (in *logsPolicyDestinationPtr) ToLogsPolicyDestinationPtrOutput() LogsPolicyDestinationPtrOutput {
	return pulumi.ToOutput(in).(LogsPolicyDestinationPtrOutput)
}

func (in *logsPolicyDestinationPtr) ToLogsPolicyDestinationPtrOutputWithContext(ctx context.Context) LogsPolicyDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LogsPolicyDestinationPtrOutput)
}

func (in *logsPolicyDestinationPtr) ToOutput(ctx context.Context) pulumix.Output[*LogsPolicyDestination] {
	return pulumix.Output[*LogsPolicyDestination]{
		OutputState: in.ToLogsPolicyDestinationPtrOutputWithContext(ctx).OutputState,
	}
}

// The new job state.
type MessageNewJobState string

const (
	// Job state unspecified.
	MessageNewJobStateStateUnspecified = MessageNewJobState("STATE_UNSPECIFIED")
	// Job is admitted (validated and persisted) and waiting for resources.
	MessageNewJobStateQueued = MessageNewJobState("QUEUED")
	// Job is scheduled to run as soon as resource allocation is ready. The resource allocation may happen at a later time but with a high chance to succeed.
	MessageNewJobStateScheduled = MessageNewJobState("SCHEDULED")
	// Resource allocation has been successful. At least one Task in the Job is RUNNING.
	MessageNewJobStateRunning = MessageNewJobState("RUNNING")
	// All Tasks in the Job have finished successfully.
	MessageNewJobStateSucceeded = MessageNewJobState("SUCCEEDED")
	// At least one Task in the Job has failed.
	MessageNewJobStateFailed = MessageNewJobState("FAILED")
	// The Job will be deleted, but has not been deleted yet. Typically this is because resources used by the Job are still being cleaned up.
	MessageNewJobStateDeletionInProgress = MessageNewJobState("DELETION_IN_PROGRESS")
)

func (MessageNewJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageNewJobState)(nil)).Elem()
}

func (e MessageNewJobState) ToMessageNewJobStateOutput() MessageNewJobStateOutput {
	return pulumi.ToOutput(e).(MessageNewJobStateOutput)
}

func (e MessageNewJobState) ToMessageNewJobStateOutputWithContext(ctx context.Context) MessageNewJobStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MessageNewJobStateOutput)
}

func (e MessageNewJobState) ToMessageNewJobStatePtrOutput() MessageNewJobStatePtrOutput {
	return e.ToMessageNewJobStatePtrOutputWithContext(context.Background())
}

func (e MessageNewJobState) ToMessageNewJobStatePtrOutputWithContext(ctx context.Context) MessageNewJobStatePtrOutput {
	return MessageNewJobState(e).ToMessageNewJobStateOutputWithContext(ctx).ToMessageNewJobStatePtrOutputWithContext(ctx)
}

func (e MessageNewJobState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MessageNewJobState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MessageNewJobState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MessageNewJobState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MessageNewJobStateOutput struct{ *pulumi.OutputState }

func (MessageNewJobStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageNewJobState)(nil)).Elem()
}

func (o MessageNewJobStateOutput) ToMessageNewJobStateOutput() MessageNewJobStateOutput {
	return o
}

func (o MessageNewJobStateOutput) ToMessageNewJobStateOutputWithContext(ctx context.Context) MessageNewJobStateOutput {
	return o
}

func (o MessageNewJobStateOutput) ToMessageNewJobStatePtrOutput() MessageNewJobStatePtrOutput {
	return o.ToMessageNewJobStatePtrOutputWithContext(context.Background())
}

func (o MessageNewJobStateOutput) ToMessageNewJobStatePtrOutputWithContext(ctx context.Context) MessageNewJobStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MessageNewJobState) *MessageNewJobState {
		return &v
	}).(MessageNewJobStatePtrOutput)
}

func (o MessageNewJobStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MessageNewJobStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MessageNewJobState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MessageNewJobStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MessageNewJobStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MessageNewJobState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MessageNewJobStatePtrOutput struct{ *pulumi.OutputState }

func (MessageNewJobStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MessageNewJobState)(nil)).Elem()
}

func (o MessageNewJobStatePtrOutput) ToMessageNewJobStatePtrOutput() MessageNewJobStatePtrOutput {
	return o
}

func (o MessageNewJobStatePtrOutput) ToMessageNewJobStatePtrOutputWithContext(ctx context.Context) MessageNewJobStatePtrOutput {
	return o
}

func (o MessageNewJobStatePtrOutput) Elem() MessageNewJobStateOutput {
	return o.ApplyT(func(v *MessageNewJobState) MessageNewJobState {
		if v != nil {
			return *v
		}
		var ret MessageNewJobState
		return ret
	}).(MessageNewJobStateOutput)
}

func (o MessageNewJobStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MessageNewJobStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MessageNewJobState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MessageNewJobStateInput is an input type that accepts MessageNewJobStateArgs and MessageNewJobStateOutput values.
// You can construct a concrete instance of `MessageNewJobStateInput` via:
//
//	MessageNewJobStateArgs{...}
type MessageNewJobStateInput interface {
	pulumi.Input

	ToMessageNewJobStateOutput() MessageNewJobStateOutput
	ToMessageNewJobStateOutputWithContext(context.Context) MessageNewJobStateOutput
}

var messageNewJobStatePtrType = reflect.TypeOf((**MessageNewJobState)(nil)).Elem()

type MessageNewJobStatePtrInput interface {
	pulumi.Input

	ToMessageNewJobStatePtrOutput() MessageNewJobStatePtrOutput
	ToMessageNewJobStatePtrOutputWithContext(context.Context) MessageNewJobStatePtrOutput
}

type messageNewJobStatePtr string

func MessageNewJobStatePtr(v string) MessageNewJobStatePtrInput {
	return (*messageNewJobStatePtr)(&v)
}

func (*messageNewJobStatePtr) ElementType() reflect.Type {
	return messageNewJobStatePtrType
}

func (in *messageNewJobStatePtr) ToMessageNewJobStatePtrOutput() MessageNewJobStatePtrOutput {
	return pulumi.ToOutput(in).(MessageNewJobStatePtrOutput)
}

func (in *messageNewJobStatePtr) ToMessageNewJobStatePtrOutputWithContext(ctx context.Context) MessageNewJobStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MessageNewJobStatePtrOutput)
}

func (in *messageNewJobStatePtr) ToOutput(ctx context.Context) pulumix.Output[*MessageNewJobState] {
	return pulumix.Output[*MessageNewJobState]{
		OutputState: in.ToMessageNewJobStatePtrOutputWithContext(ctx).OutputState,
	}
}

// The new task state.
type MessageNewTaskState string

const (
	// Unknown state.
	MessageNewTaskStateStateUnspecified = MessageNewTaskState("STATE_UNSPECIFIED")
	// The Task is created and waiting for resources.
	MessageNewTaskStatePending = MessageNewTaskState("PENDING")
	// The Task is assigned to at least one VM.
	MessageNewTaskStateAssigned = MessageNewTaskState("ASSIGNED")
	// The Task is running.
	MessageNewTaskStateRunning = MessageNewTaskState("RUNNING")
	// The Task has failed.
	MessageNewTaskStateFailed = MessageNewTaskState("FAILED")
	// The Task has succeeded.
	MessageNewTaskStateSucceeded = MessageNewTaskState("SUCCEEDED")
	// The Task has not been executed when the Job finishes.
	MessageNewTaskStateUnexecuted = MessageNewTaskState("UNEXECUTED")
)

func (MessageNewTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageNewTaskState)(nil)).Elem()
}

func (e MessageNewTaskState) ToMessageNewTaskStateOutput() MessageNewTaskStateOutput {
	return pulumi.ToOutput(e).(MessageNewTaskStateOutput)
}

func (e MessageNewTaskState) ToMessageNewTaskStateOutputWithContext(ctx context.Context) MessageNewTaskStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MessageNewTaskStateOutput)
}

func (e MessageNewTaskState) ToMessageNewTaskStatePtrOutput() MessageNewTaskStatePtrOutput {
	return e.ToMessageNewTaskStatePtrOutputWithContext(context.Background())
}

func (e MessageNewTaskState) ToMessageNewTaskStatePtrOutputWithContext(ctx context.Context) MessageNewTaskStatePtrOutput {
	return MessageNewTaskState(e).ToMessageNewTaskStateOutputWithContext(ctx).ToMessageNewTaskStatePtrOutputWithContext(ctx)
}

func (e MessageNewTaskState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MessageNewTaskState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MessageNewTaskState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MessageNewTaskState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MessageNewTaskStateOutput struct{ *pulumi.OutputState }

func (MessageNewTaskStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageNewTaskState)(nil)).Elem()
}

func (o MessageNewTaskStateOutput) ToMessageNewTaskStateOutput() MessageNewTaskStateOutput {
	return o
}

func (o MessageNewTaskStateOutput) ToMessageNewTaskStateOutputWithContext(ctx context.Context) MessageNewTaskStateOutput {
	return o
}

func (o MessageNewTaskStateOutput) ToMessageNewTaskStatePtrOutput() MessageNewTaskStatePtrOutput {
	return o.ToMessageNewTaskStatePtrOutputWithContext(context.Background())
}

func (o MessageNewTaskStateOutput) ToMessageNewTaskStatePtrOutputWithContext(ctx context.Context) MessageNewTaskStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MessageNewTaskState) *MessageNewTaskState {
		return &v
	}).(MessageNewTaskStatePtrOutput)
}

func (o MessageNewTaskStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MessageNewTaskStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MessageNewTaskState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MessageNewTaskStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MessageNewTaskStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MessageNewTaskState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MessageNewTaskStatePtrOutput struct{ *pulumi.OutputState }

func (MessageNewTaskStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MessageNewTaskState)(nil)).Elem()
}

func (o MessageNewTaskStatePtrOutput) ToMessageNewTaskStatePtrOutput() MessageNewTaskStatePtrOutput {
	return o
}

func (o MessageNewTaskStatePtrOutput) ToMessageNewTaskStatePtrOutputWithContext(ctx context.Context) MessageNewTaskStatePtrOutput {
	return o
}

func (o MessageNewTaskStatePtrOutput) Elem() MessageNewTaskStateOutput {
	return o.ApplyT(func(v *MessageNewTaskState) MessageNewTaskState {
		if v != nil {
			return *v
		}
		var ret MessageNewTaskState
		return ret
	}).(MessageNewTaskStateOutput)
}

func (o MessageNewTaskStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MessageNewTaskStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MessageNewTaskState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MessageNewTaskStateInput is an input type that accepts MessageNewTaskStateArgs and MessageNewTaskStateOutput values.
// You can construct a concrete instance of `MessageNewTaskStateInput` via:
//
//	MessageNewTaskStateArgs{...}
type MessageNewTaskStateInput interface {
	pulumi.Input

	ToMessageNewTaskStateOutput() MessageNewTaskStateOutput
	ToMessageNewTaskStateOutputWithContext(context.Context) MessageNewTaskStateOutput
}

var messageNewTaskStatePtrType = reflect.TypeOf((**MessageNewTaskState)(nil)).Elem()

type MessageNewTaskStatePtrInput interface {
	pulumi.Input

	ToMessageNewTaskStatePtrOutput() MessageNewTaskStatePtrOutput
	ToMessageNewTaskStatePtrOutputWithContext(context.Context) MessageNewTaskStatePtrOutput
}

type messageNewTaskStatePtr string

func MessageNewTaskStatePtr(v string) MessageNewTaskStatePtrInput {
	return (*messageNewTaskStatePtr)(&v)
}

func (*messageNewTaskStatePtr) ElementType() reflect.Type {
	return messageNewTaskStatePtrType
}

func (in *messageNewTaskStatePtr) ToMessageNewTaskStatePtrOutput() MessageNewTaskStatePtrOutput {
	return pulumi.ToOutput(in).(MessageNewTaskStatePtrOutput)
}

func (in *messageNewTaskStatePtr) ToMessageNewTaskStatePtrOutputWithContext(ctx context.Context) MessageNewTaskStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MessageNewTaskStatePtrOutput)
}

func (in *messageNewTaskStatePtr) ToOutput(ctx context.Context) pulumix.Output[*MessageNewTaskState] {
	return pulumix.Output[*MessageNewTaskState]{
		OutputState: in.ToMessageNewTaskStatePtrOutputWithContext(ctx).OutputState,
	}
}

// The message type.
type MessageType string

const (
	// Unspecified.
	MessageTypeTypeUnspecified = MessageType("TYPE_UNSPECIFIED")
	// Notify users that the job state has changed.
	MessageTypeJobStateChanged = MessageType("JOB_STATE_CHANGED")
	// Notify users that the task state has changed.
	MessageTypeTaskStateChanged = MessageType("TASK_STATE_CHANGED")
)

func (MessageType) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageType)(nil)).Elem()
}

func (e MessageType) ToMessageTypeOutput() MessageTypeOutput {
	return pulumi.ToOutput(e).(MessageTypeOutput)
}

func (e MessageType) ToMessageTypeOutputWithContext(ctx context.Context) MessageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MessageTypeOutput)
}

func (e MessageType) ToMessageTypePtrOutput() MessageTypePtrOutput {
	return e.ToMessageTypePtrOutputWithContext(context.Background())
}

func (e MessageType) ToMessageTypePtrOutputWithContext(ctx context.Context) MessageTypePtrOutput {
	return MessageType(e).ToMessageTypeOutputWithContext(ctx).ToMessageTypePtrOutputWithContext(ctx)
}

func (e MessageType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MessageType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MessageType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MessageType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MessageTypeOutput struct{ *pulumi.OutputState }

func (MessageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageType)(nil)).Elem()
}

func (o MessageTypeOutput) ToMessageTypeOutput() MessageTypeOutput {
	return o
}

func (o MessageTypeOutput) ToMessageTypeOutputWithContext(ctx context.Context) MessageTypeOutput {
	return o
}

func (o MessageTypeOutput) ToMessageTypePtrOutput() MessageTypePtrOutput {
	return o.ToMessageTypePtrOutputWithContext(context.Background())
}

func (o MessageTypeOutput) ToMessageTypePtrOutputWithContext(ctx context.Context) MessageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MessageType) *MessageType {
		return &v
	}).(MessageTypePtrOutput)
}

func (o MessageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MessageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MessageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MessageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MessageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MessageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MessageTypePtrOutput struct{ *pulumi.OutputState }

func (MessageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MessageType)(nil)).Elem()
}

func (o MessageTypePtrOutput) ToMessageTypePtrOutput() MessageTypePtrOutput {
	return o
}

func (o MessageTypePtrOutput) ToMessageTypePtrOutputWithContext(ctx context.Context) MessageTypePtrOutput {
	return o
}

func (o MessageTypePtrOutput) Elem() MessageTypeOutput {
	return o.ApplyT(func(v *MessageType) MessageType {
		if v != nil {
			return *v
		}
		var ret MessageType
		return ret
	}).(MessageTypeOutput)
}

func (o MessageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MessageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MessageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MessageTypeInput is an input type that accepts MessageTypeArgs and MessageTypeOutput values.
// You can construct a concrete instance of `MessageTypeInput` via:
//
//	MessageTypeArgs{...}
type MessageTypeInput interface {
	pulumi.Input

	ToMessageTypeOutput() MessageTypeOutput
	ToMessageTypeOutputWithContext(context.Context) MessageTypeOutput
}

var messageTypePtrType = reflect.TypeOf((**MessageType)(nil)).Elem()

type MessageTypePtrInput interface {
	pulumi.Input

	ToMessageTypePtrOutput() MessageTypePtrOutput
	ToMessageTypePtrOutputWithContext(context.Context) MessageTypePtrOutput
}

type messageTypePtr string

func MessageTypePtr(v string) MessageTypePtrInput {
	return (*messageTypePtr)(&v)
}

func (*messageTypePtr) ElementType() reflect.Type {
	return messageTypePtrType
}

func (in *messageTypePtr) ToMessageTypePtrOutput() MessageTypePtrOutput {
	return pulumi.ToOutput(in).(MessageTypePtrOutput)
}

func (in *messageTypePtr) ToMessageTypePtrOutputWithContext(ctx context.Context) MessageTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MessageTypePtrOutput)
}

func (in *messageTypePtr) ToOutput(ctx context.Context) pulumix.Output[*MessageType] {
	return pulumix.Output[*MessageType]{
		OutputState: in.ToMessageTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Scheduling policy for Tasks in the TaskGroup. The default value is AS_SOON_AS_POSSIBLE.
type TaskGroupSchedulingPolicy string

const (
	// Unspecified.
	TaskGroupSchedulingPolicySchedulingPolicyUnspecified = TaskGroupSchedulingPolicy("SCHEDULING_POLICY_UNSPECIFIED")
	// Run Tasks as soon as resources are available. Tasks might be executed in parallel depending on parallelism and task_count values.
	TaskGroupSchedulingPolicyAsSoonAsPossible = TaskGroupSchedulingPolicy("AS_SOON_AS_POSSIBLE")
	// Run Tasks sequentially with increased task index.
	TaskGroupSchedulingPolicyInOrder = TaskGroupSchedulingPolicy("IN_ORDER")
)

func (TaskGroupSchedulingPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskGroupSchedulingPolicy)(nil)).Elem()
}

func (e TaskGroupSchedulingPolicy) ToTaskGroupSchedulingPolicyOutput() TaskGroupSchedulingPolicyOutput {
	return pulumi.ToOutput(e).(TaskGroupSchedulingPolicyOutput)
}

func (e TaskGroupSchedulingPolicy) ToTaskGroupSchedulingPolicyOutputWithContext(ctx context.Context) TaskGroupSchedulingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskGroupSchedulingPolicyOutput)
}

func (e TaskGroupSchedulingPolicy) ToTaskGroupSchedulingPolicyPtrOutput() TaskGroupSchedulingPolicyPtrOutput {
	return e.ToTaskGroupSchedulingPolicyPtrOutputWithContext(context.Background())
}

func (e TaskGroupSchedulingPolicy) ToTaskGroupSchedulingPolicyPtrOutputWithContext(ctx context.Context) TaskGroupSchedulingPolicyPtrOutput {
	return TaskGroupSchedulingPolicy(e).ToTaskGroupSchedulingPolicyOutputWithContext(ctx).ToTaskGroupSchedulingPolicyPtrOutputWithContext(ctx)
}

func (e TaskGroupSchedulingPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskGroupSchedulingPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskGroupSchedulingPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskGroupSchedulingPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskGroupSchedulingPolicyOutput struct{ *pulumi.OutputState }

func (TaskGroupSchedulingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskGroupSchedulingPolicy)(nil)).Elem()
}

func (o TaskGroupSchedulingPolicyOutput) ToTaskGroupSchedulingPolicyOutput() TaskGroupSchedulingPolicyOutput {
	return o
}

func (o TaskGroupSchedulingPolicyOutput) ToTaskGroupSchedulingPolicyOutputWithContext(ctx context.Context) TaskGroupSchedulingPolicyOutput {
	return o
}

func (o TaskGroupSchedulingPolicyOutput) ToTaskGroupSchedulingPolicyPtrOutput() TaskGroupSchedulingPolicyPtrOutput {
	return o.ToTaskGroupSchedulingPolicyPtrOutputWithContext(context.Background())
}

func (o TaskGroupSchedulingPolicyOutput) ToTaskGroupSchedulingPolicyPtrOutputWithContext(ctx context.Context) TaskGroupSchedulingPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskGroupSchedulingPolicy) *TaskGroupSchedulingPolicy {
		return &v
	}).(TaskGroupSchedulingPolicyPtrOutput)
}

func (o TaskGroupSchedulingPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskGroupSchedulingPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskGroupSchedulingPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskGroupSchedulingPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskGroupSchedulingPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskGroupSchedulingPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskGroupSchedulingPolicyPtrOutput struct{ *pulumi.OutputState }

func (TaskGroupSchedulingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskGroupSchedulingPolicy)(nil)).Elem()
}

func (o TaskGroupSchedulingPolicyPtrOutput) ToTaskGroupSchedulingPolicyPtrOutput() TaskGroupSchedulingPolicyPtrOutput {
	return o
}

func (o TaskGroupSchedulingPolicyPtrOutput) ToTaskGroupSchedulingPolicyPtrOutputWithContext(ctx context.Context) TaskGroupSchedulingPolicyPtrOutput {
	return o
}

func (o TaskGroupSchedulingPolicyPtrOutput) Elem() TaskGroupSchedulingPolicyOutput {
	return o.ApplyT(func(v *TaskGroupSchedulingPolicy) TaskGroupSchedulingPolicy {
		if v != nil {
			return *v
		}
		var ret TaskGroupSchedulingPolicy
		return ret
	}).(TaskGroupSchedulingPolicyOutput)
}

func (o TaskGroupSchedulingPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskGroupSchedulingPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskGroupSchedulingPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskGroupSchedulingPolicyInput is an input type that accepts TaskGroupSchedulingPolicyArgs and TaskGroupSchedulingPolicyOutput values.
// You can construct a concrete instance of `TaskGroupSchedulingPolicyInput` via:
//
//	TaskGroupSchedulingPolicyArgs{...}
type TaskGroupSchedulingPolicyInput interface {
	pulumi.Input

	ToTaskGroupSchedulingPolicyOutput() TaskGroupSchedulingPolicyOutput
	ToTaskGroupSchedulingPolicyOutputWithContext(context.Context) TaskGroupSchedulingPolicyOutput
}

var taskGroupSchedulingPolicyPtrType = reflect.TypeOf((**TaskGroupSchedulingPolicy)(nil)).Elem()

type TaskGroupSchedulingPolicyPtrInput interface {
	pulumi.Input

	ToTaskGroupSchedulingPolicyPtrOutput() TaskGroupSchedulingPolicyPtrOutput
	ToTaskGroupSchedulingPolicyPtrOutputWithContext(context.Context) TaskGroupSchedulingPolicyPtrOutput
}

type taskGroupSchedulingPolicyPtr string

func TaskGroupSchedulingPolicyPtr(v string) TaskGroupSchedulingPolicyPtrInput {
	return (*taskGroupSchedulingPolicyPtr)(&v)
}

func (*taskGroupSchedulingPolicyPtr) ElementType() reflect.Type {
	return taskGroupSchedulingPolicyPtrType
}

func (in *taskGroupSchedulingPolicyPtr) ToTaskGroupSchedulingPolicyPtrOutput() TaskGroupSchedulingPolicyPtrOutput {
	return pulumi.ToOutput(in).(TaskGroupSchedulingPolicyPtrOutput)
}

func (in *taskGroupSchedulingPolicyPtr) ToTaskGroupSchedulingPolicyPtrOutputWithContext(ctx context.Context) TaskGroupSchedulingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskGroupSchedulingPolicyPtrOutput)
}

func (in *taskGroupSchedulingPolicyPtr) ToOutput(ctx context.Context) pulumix.Output[*TaskGroupSchedulingPolicy] {
	return pulumix.Output[*TaskGroupSchedulingPolicy]{
		OutputState: in.ToTaskGroupSchedulingPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePolicyProvisioningModelInput)(nil)).Elem(), InstancePolicyProvisioningModel("PROVISIONING_MODEL_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePolicyProvisioningModelPtrInput)(nil)).Elem(), InstancePolicyProvisioningModel("PROVISIONING_MODEL_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyActionInput)(nil)).Elem(), LifecyclePolicyAction("ACTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyActionPtrInput)(nil)).Elem(), LifecyclePolicyAction("ACTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LogsPolicyDestinationInput)(nil)).Elem(), LogsPolicyDestination("DESTINATION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LogsPolicyDestinationPtrInput)(nil)).Elem(), LogsPolicyDestination("DESTINATION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MessageNewJobStateInput)(nil)).Elem(), MessageNewJobState("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MessageNewJobStatePtrInput)(nil)).Elem(), MessageNewJobState("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MessageNewTaskStateInput)(nil)).Elem(), MessageNewTaskState("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MessageNewTaskStatePtrInput)(nil)).Elem(), MessageNewTaskState("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MessageTypeInput)(nil)).Elem(), MessageType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MessageTypePtrInput)(nil)).Elem(), MessageType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TaskGroupSchedulingPolicyInput)(nil)).Elem(), TaskGroupSchedulingPolicy("SCHEDULING_POLICY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TaskGroupSchedulingPolicyPtrInput)(nil)).Elem(), TaskGroupSchedulingPolicy("SCHEDULING_POLICY_UNSPECIFIED"))
	pulumi.RegisterOutputType(InstancePolicyProvisioningModelOutput{})
	pulumi.RegisterOutputType(InstancePolicyProvisioningModelPtrOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyActionOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyActionPtrOutput{})
	pulumi.RegisterOutputType(LogsPolicyDestinationOutput{})
	pulumi.RegisterOutputType(LogsPolicyDestinationPtrOutput{})
	pulumi.RegisterOutputType(MessageNewJobStateOutput{})
	pulumi.RegisterOutputType(MessageNewJobStatePtrOutput{})
	pulumi.RegisterOutputType(MessageNewTaskStateOutput{})
	pulumi.RegisterOutputType(MessageNewTaskStatePtrOutput{})
	pulumi.RegisterOutputType(MessageTypeOutput{})
	pulumi.RegisterOutputType(MessageTypePtrOutput{})
	pulumi.RegisterOutputType(TaskGroupSchedulingPolicyOutput{})
	pulumi.RegisterOutputType(TaskGroupSchedulingPolicyPtrOutput{})
}
