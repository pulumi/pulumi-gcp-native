// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets an Execution. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the Execution does not exist
func LookupExecution(ctx *pulumi.Context, args *LookupExecutionArgs, opts ...pulumi.InvokeOption) (*LookupExecutionResult, error) {
	var rv LookupExecutionResult
	err := ctx.Invoke("google-native:toolresults/v1beta3:getExecution", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupExecutionArgs struct {
	ExecutionId string  `pulumi:"executionId"`
	HistoryId   string  `pulumi:"historyId"`
	Project     *string `pulumi:"project"`
}

type LookupExecutionResult struct {
	// The time when the Execution status transitioned to COMPLETE. This value will be set automatically when state transitions to COMPLETE. - In response: set if the execution state is COMPLETE. - In create/update request: never set
	CompletionTime TimestampResponse `pulumi:"completionTime"`
	// The time when the Execution was created. This value will be set automatically when CreateExecution is called. - In response: always set - In create/update request: never set
	CreationTime TimestampResponse `pulumi:"creationTime"`
	// The dimensions along which different steps in this execution may vary. This must remain fixed over the life of the execution. Returns INVALID_ARGUMENT if this field is set in an update request. Returns INVALID_ARGUMENT if the same name occurs in more than one dimension_definition. Returns INVALID_ARGUMENT if the size of the list is over 100. - In response: present if set by create - In create request: optional - In update request: never set
	DimensionDefinitions []MatrixDimensionDefinitionResponse `pulumi:"dimensionDefinitions"`
	// A unique identifier within a History for this Execution. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create/update request: never set
	ExecutionId string `pulumi:"executionId"`
	// Classify the result, for example into SUCCESS or FAILURE - In response: present if set by create/update request - In create/update request: optional
	Outcome OutcomeResponse `pulumi:"outcome"`
	// Lightweight information about execution request. - In response: present if set by create - In create: optional - In update: optional
	Specification SpecificationResponse `pulumi:"specification"`
	// The initial state is IN_PROGRESS. The only legal state transitions is from IN_PROGRESS to COMPLETE. A PRECONDITION_FAILED will be returned if an invalid transition is requested. The state can only be set to COMPLETE once. A FAILED_PRECONDITION will be returned if the state is set to COMPLETE multiple times. If the state is set to COMPLETE, all the in-progress steps within the execution will be set as COMPLETE. If the outcome of the step is not set, the outcome will be set to INCONCLUSIVE. - In response always set - In create/update request: optional
	State string `pulumi:"state"`
	// TestExecution Matrix ID that the TestExecutionService uses. - In response: present if set by create - In create: optional - In update: never set
	TestExecutionMatrixId string `pulumi:"testExecutionMatrixId"`
}

func LookupExecutionOutput(ctx *pulumi.Context, args LookupExecutionOutputArgs, opts ...pulumi.InvokeOption) LookupExecutionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupExecutionResult, error) {
			args := v.(LookupExecutionArgs)
			r, err := LookupExecution(ctx, &args, opts...)
			return *r, err
		}).(LookupExecutionResultOutput)
}

type LookupExecutionOutputArgs struct {
	ExecutionId pulumi.StringInput    `pulumi:"executionId"`
	HistoryId   pulumi.StringInput    `pulumi:"historyId"`
	Project     pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupExecutionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExecutionArgs)(nil)).Elem()
}

type LookupExecutionResultOutput struct{ *pulumi.OutputState }

func (LookupExecutionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExecutionResult)(nil)).Elem()
}

func (o LookupExecutionResultOutput) ToLookupExecutionResultOutput() LookupExecutionResultOutput {
	return o
}

func (o LookupExecutionResultOutput) ToLookupExecutionResultOutputWithContext(ctx context.Context) LookupExecutionResultOutput {
	return o
}

// The time when the Execution status transitioned to COMPLETE. This value will be set automatically when state transitions to COMPLETE. - In response: set if the execution state is COMPLETE. - In create/update request: never set
func (o LookupExecutionResultOutput) CompletionTime() TimestampResponseOutput {
	return o.ApplyT(func(v LookupExecutionResult) TimestampResponse { return v.CompletionTime }).(TimestampResponseOutput)
}

// The time when the Execution was created. This value will be set automatically when CreateExecution is called. - In response: always set - In create/update request: never set
func (o LookupExecutionResultOutput) CreationTime() TimestampResponseOutput {
	return o.ApplyT(func(v LookupExecutionResult) TimestampResponse { return v.CreationTime }).(TimestampResponseOutput)
}

// The dimensions along which different steps in this execution may vary. This must remain fixed over the life of the execution. Returns INVALID_ARGUMENT if this field is set in an update request. Returns INVALID_ARGUMENT if the same name occurs in more than one dimension_definition. Returns INVALID_ARGUMENT if the size of the list is over 100. - In response: present if set by create - In create request: optional - In update request: never set
func (o LookupExecutionResultOutput) DimensionDefinitions() MatrixDimensionDefinitionResponseArrayOutput {
	return o.ApplyT(func(v LookupExecutionResult) []MatrixDimensionDefinitionResponse { return v.DimensionDefinitions }).(MatrixDimensionDefinitionResponseArrayOutput)
}

// A unique identifier within a History for this Execution. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create/update request: never set
func (o LookupExecutionResultOutput) ExecutionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExecutionResult) string { return v.ExecutionId }).(pulumi.StringOutput)
}

// Classify the result, for example into SUCCESS or FAILURE - In response: present if set by create/update request - In create/update request: optional
func (o LookupExecutionResultOutput) Outcome() OutcomeResponseOutput {
	return o.ApplyT(func(v LookupExecutionResult) OutcomeResponse { return v.Outcome }).(OutcomeResponseOutput)
}

// Lightweight information about execution request. - In response: present if set by create - In create: optional - In update: optional
func (o LookupExecutionResultOutput) Specification() SpecificationResponseOutput {
	return o.ApplyT(func(v LookupExecutionResult) SpecificationResponse { return v.Specification }).(SpecificationResponseOutput)
}

// The initial state is IN_PROGRESS. The only legal state transitions is from IN_PROGRESS to COMPLETE. A PRECONDITION_FAILED will be returned if an invalid transition is requested. The state can only be set to COMPLETE once. A FAILED_PRECONDITION will be returned if the state is set to COMPLETE multiple times. If the state is set to COMPLETE, all the in-progress steps within the execution will be set as COMPLETE. If the outcome of the step is not set, the outcome will be set to INCONCLUSIVE. - In response always set - In create/update request: optional
func (o LookupExecutionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExecutionResult) string { return v.State }).(pulumi.StringOutput)
}

// TestExecution Matrix ID that the TestExecutionService uses. - In response: present if set by create - In create: optional - In update: never set
func (o LookupExecutionResultOutput) TestExecutionMatrixId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExecutionResult) string { return v.TestExecutionMatrixId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExecutionResultOutput{})
}
