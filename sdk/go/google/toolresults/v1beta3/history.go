// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a History. The returned History will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing project does not exist
// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
// on Google Cloud even though it will be deleted from Pulumi state.
type History struct {
	pulumi.CustomResourceState

	// A short human-readable (plain text) name to display in the UI. Maximum of 100 characters. - In response: present if set during create. - In create request: optional
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// A unique identifier within a project for this History. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create request: never set
	HistoryId pulumi.StringOutput `pulumi:"historyId"`
	// A name to uniquely identify a history within a project. Maximum of 200 characters. - In response always set - In create request: always set
	Name pulumi.StringOutput `pulumi:"name"`
	// The platform of the test history. - In response: always set. Returns the platform of the last execution if unknown.
	TestPlatform pulumi.StringOutput `pulumi:"testPlatform"`
}

// NewHistory registers a new resource with the given unique name, arguments, and options.
func NewHistory(ctx *pulumi.Context,
	name string, args *HistoryArgs, opts ...pulumi.ResourceOption) (*History, error) {
	if args == nil {
		args = &HistoryArgs{}
	}

	var resource History
	err := ctx.RegisterResource("google-native:toolresults/v1beta3:History", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHistory gets an existing History resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHistory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HistoryState, opts ...pulumi.ResourceOption) (*History, error) {
	var resource History
	err := ctx.ReadResource("google-native:toolresults/v1beta3:History", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering History resources.
type historyState struct {
}

type HistoryState struct {
}

func (HistoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*historyState)(nil)).Elem()
}

type historyArgs struct {
	// A short human-readable (plain text) name to display in the UI. Maximum of 100 characters. - In response: present if set during create. - In create request: optional
	DisplayName *string `pulumi:"displayName"`
	// A unique identifier within a project for this History. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create request: never set
	HistoryId *string `pulumi:"historyId"`
	// A name to uniquely identify a history within a project. Maximum of 200 characters. - In response always set - In create request: always set
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// A unique request ID for server to detect duplicated requests. For example, a UUID. Optional, but strongly recommended.
	RequestId *string `pulumi:"requestId"`
	// The platform of the test history. - In response: always set. Returns the platform of the last execution if unknown.
	TestPlatform *HistoryTestPlatform `pulumi:"testPlatform"`
}

// The set of arguments for constructing a History resource.
type HistoryArgs struct {
	// A short human-readable (plain text) name to display in the UI. Maximum of 100 characters. - In response: present if set during create. - In create request: optional
	DisplayName pulumi.StringPtrInput
	// A unique identifier within a project for this History. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create request: never set
	HistoryId pulumi.StringPtrInput
	// A name to uniquely identify a history within a project. Maximum of 200 characters. - In response always set - In create request: always set
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// A unique request ID for server to detect duplicated requests. For example, a UUID. Optional, but strongly recommended.
	RequestId pulumi.StringPtrInput
	// The platform of the test history. - In response: always set. Returns the platform of the last execution if unknown.
	TestPlatform HistoryTestPlatformPtrInput
}

func (HistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*historyArgs)(nil)).Elem()
}

type HistoryInput interface {
	pulumi.Input

	ToHistoryOutput() HistoryOutput
	ToHistoryOutputWithContext(ctx context.Context) HistoryOutput
}

func (*History) ElementType() reflect.Type {
	return reflect.TypeOf((**History)(nil)).Elem()
}

func (i *History) ToHistoryOutput() HistoryOutput {
	return i.ToHistoryOutputWithContext(context.Background())
}

func (i *History) ToHistoryOutputWithContext(ctx context.Context) HistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HistoryOutput)
}

type HistoryOutput struct{ *pulumi.OutputState }

func (HistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**History)(nil)).Elem()
}

func (o HistoryOutput) ToHistoryOutput() HistoryOutput {
	return o
}

func (o HistoryOutput) ToHistoryOutputWithContext(ctx context.Context) HistoryOutput {
	return o
}

// A short human-readable (plain text) name to display in the UI. Maximum of 100 characters. - In response: present if set during create. - In create request: optional
func (o HistoryOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *History) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// A unique identifier within a project for this History. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create request: never set
func (o HistoryOutput) HistoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *History) pulumi.StringOutput { return v.HistoryId }).(pulumi.StringOutput)
}

// A name to uniquely identify a history within a project. Maximum of 200 characters. - In response always set - In create request: always set
func (o HistoryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *History) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The platform of the test history. - In response: always set. Returns the platform of the last execution if unknown.
func (o HistoryOutput) TestPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v *History) pulumi.StringOutput { return v.TestPlatform }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HistoryInput)(nil)).Elem(), &History{})
	pulumi.RegisterOutputType(HistoryOutput{})
}
