// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets a Dataset version.
func LookupDatasetVersion(ctx *pulumi.Context, args *LookupDatasetVersionArgs, opts ...pulumi.InvokeOption) (*LookupDatasetVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDatasetVersionResult
	err := ctx.Invoke("google-native:aiplatform/v1beta1:getDatasetVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDatasetVersionArgs struct {
	DatasetId        string  `pulumi:"datasetId"`
	DatasetVersionId string  `pulumi:"datasetVersionId"`
	Location         string  `pulumi:"location"`
	Project          *string `pulumi:"project"`
	ReadMask         *string `pulumi:"readMask"`
}

type LookupDatasetVersionResult struct {
	// Name of the associated BigQuery dataset.
	BigQueryDatasetName string `pulumi:"bigQueryDatasetName"`
	// Timestamp when this DatasetVersion was created.
	CreateTime string `pulumi:"createTime"`
	// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag string `pulumi:"etag"`
	// The resource name of the DatasetVersion.
	Name string `pulumi:"name"`
	// Timestamp when this DatasetVersion was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupDatasetVersionOutput(ctx *pulumi.Context, args LookupDatasetVersionOutputArgs, opts ...pulumi.InvokeOption) LookupDatasetVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatasetVersionResult, error) {
			args := v.(LookupDatasetVersionArgs)
			r, err := LookupDatasetVersion(ctx, &args, opts...)
			var s LookupDatasetVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatasetVersionResultOutput)
}

type LookupDatasetVersionOutputArgs struct {
	DatasetId        pulumi.StringInput    `pulumi:"datasetId"`
	DatasetVersionId pulumi.StringInput    `pulumi:"datasetVersionId"`
	Location         pulumi.StringInput    `pulumi:"location"`
	Project          pulumi.StringPtrInput `pulumi:"project"`
	ReadMask         pulumi.StringPtrInput `pulumi:"readMask"`
}

func (LookupDatasetVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetVersionArgs)(nil)).Elem()
}

type LookupDatasetVersionResultOutput struct{ *pulumi.OutputState }

func (LookupDatasetVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetVersionResult)(nil)).Elem()
}

func (o LookupDatasetVersionResultOutput) ToLookupDatasetVersionResultOutput() LookupDatasetVersionResultOutput {
	return o
}

func (o LookupDatasetVersionResultOutput) ToLookupDatasetVersionResultOutputWithContext(ctx context.Context) LookupDatasetVersionResultOutput {
	return o
}

func (o LookupDatasetVersionResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDatasetVersionResult] {
	return pulumix.Output[LookupDatasetVersionResult]{
		OutputState: o.OutputState,
	}
}

// Name of the associated BigQuery dataset.
func (o LookupDatasetVersionResultOutput) BigQueryDatasetName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetVersionResult) string { return v.BigQueryDatasetName }).(pulumi.StringOutput)
}

// Timestamp when this DatasetVersion was created.
func (o LookupDatasetVersionResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetVersionResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
func (o LookupDatasetVersionResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetVersionResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The resource name of the DatasetVersion.
func (o LookupDatasetVersionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetVersionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Timestamp when this DatasetVersion was last updated.
func (o LookupDatasetVersionResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetVersionResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatasetVersionResultOutput{})
}
