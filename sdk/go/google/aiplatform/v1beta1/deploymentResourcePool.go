// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Create a DeploymentResourcePool.
type DeploymentResourcePool struct {
	pulumi.CustomResourceState

	// Timestamp when this DeploymentResourcePool was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The underlying DedicatedResources that the DeploymentResourcePool uses.
	DedicatedResources GoogleCloudAiplatformV1beta1DedicatedResourcesResponseOutput `pulumi:"dedicatedResources"`
	Location           pulumi.StringOutput                                          `pulumi:"location"`
	// Immutable. The resource name of the DeploymentResourcePool. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewDeploymentResourcePool registers a new resource with the given unique name, arguments, and options.
func NewDeploymentResourcePool(ctx *pulumi.Context,
	name string, args *DeploymentResourcePoolArgs, opts ...pulumi.ResourceOption) (*DeploymentResourcePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DedicatedResources == nil {
		return nil, errors.New("invalid value for required argument 'DedicatedResources'")
	}
	if args.DeploymentResourcePoolId == nil {
		return nil, errors.New("invalid value for required argument 'DeploymentResourcePoolId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeploymentResourcePool
	err := ctx.RegisterResource("google-native:aiplatform/v1beta1:DeploymentResourcePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeploymentResourcePool gets an existing DeploymentResourcePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeploymentResourcePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentResourcePoolState, opts ...pulumi.ResourceOption) (*DeploymentResourcePool, error) {
	var resource DeploymentResourcePool
	err := ctx.ReadResource("google-native:aiplatform/v1beta1:DeploymentResourcePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeploymentResourcePool resources.
type deploymentResourcePoolState struct {
}

type DeploymentResourcePoolState struct {
}

func (DeploymentResourcePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentResourcePoolState)(nil)).Elem()
}

type deploymentResourcePoolArgs struct {
	// The underlying DedicatedResources that the DeploymentResourcePool uses.
	DedicatedResources GoogleCloudAiplatformV1beta1DedicatedResources `pulumi:"dedicatedResources"`
	// The ID to use for the DeploymentResourcePool, which will become the final component of the DeploymentResourcePool's resource name. The maximum length is 63 characters, and valid characters are `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
	DeploymentResourcePoolId string  `pulumi:"deploymentResourcePoolId"`
	Location                 *string `pulumi:"location"`
	// Immutable. The resource name of the DeploymentResourcePool. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a DeploymentResourcePool resource.
type DeploymentResourcePoolArgs struct {
	// The underlying DedicatedResources that the DeploymentResourcePool uses.
	DedicatedResources GoogleCloudAiplatformV1beta1DedicatedResourcesInput
	// The ID to use for the DeploymentResourcePool, which will become the final component of the DeploymentResourcePool's resource name. The maximum length is 63 characters, and valid characters are `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
	DeploymentResourcePoolId pulumi.StringInput
	Location                 pulumi.StringPtrInput
	// Immutable. The resource name of the DeploymentResourcePool. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
}

func (DeploymentResourcePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentResourcePoolArgs)(nil)).Elem()
}

type DeploymentResourcePoolInput interface {
	pulumi.Input

	ToDeploymentResourcePoolOutput() DeploymentResourcePoolOutput
	ToDeploymentResourcePoolOutputWithContext(ctx context.Context) DeploymentResourcePoolOutput
}

func (*DeploymentResourcePool) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentResourcePool)(nil)).Elem()
}

func (i *DeploymentResourcePool) ToDeploymentResourcePoolOutput() DeploymentResourcePoolOutput {
	return i.ToDeploymentResourcePoolOutputWithContext(context.Background())
}

func (i *DeploymentResourcePool) ToDeploymentResourcePoolOutputWithContext(ctx context.Context) DeploymentResourcePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentResourcePoolOutput)
}

func (i *DeploymentResourcePool) ToOutput(ctx context.Context) pulumix.Output[*DeploymentResourcePool] {
	return pulumix.Output[*DeploymentResourcePool]{
		OutputState: i.ToDeploymentResourcePoolOutputWithContext(ctx).OutputState,
	}
}

type DeploymentResourcePoolOutput struct{ *pulumi.OutputState }

func (DeploymentResourcePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentResourcePool)(nil)).Elem()
}

func (o DeploymentResourcePoolOutput) ToDeploymentResourcePoolOutput() DeploymentResourcePoolOutput {
	return o
}

func (o DeploymentResourcePoolOutput) ToDeploymentResourcePoolOutputWithContext(ctx context.Context) DeploymentResourcePoolOutput {
	return o
}

func (o DeploymentResourcePoolOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentResourcePool] {
	return pulumix.Output[*DeploymentResourcePool]{
		OutputState: o.OutputState,
	}
}

// Timestamp when this DeploymentResourcePool was created.
func (o DeploymentResourcePoolOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentResourcePool) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The underlying DedicatedResources that the DeploymentResourcePool uses.
func (o DeploymentResourcePoolOutput) DedicatedResources() GoogleCloudAiplatformV1beta1DedicatedResourcesResponseOutput {
	return o.ApplyT(func(v *DeploymentResourcePool) GoogleCloudAiplatformV1beta1DedicatedResourcesResponseOutput {
		return v.DedicatedResources
	}).(GoogleCloudAiplatformV1beta1DedicatedResourcesResponseOutput)
}

func (o DeploymentResourcePoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentResourcePool) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Immutable. The resource name of the DeploymentResourcePool. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
func (o DeploymentResourcePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentResourcePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DeploymentResourcePoolOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentResourcePool) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentResourcePoolInput)(nil)).Elem(), &DeploymentResourcePool{})
	pulumi.RegisterOutputType(DeploymentResourcePoolOutput{})
}
