// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new FeatureGroup in a given project and location.
// Auto-naming is currently not supported for this resource.
type FeatureGroup struct {
	pulumi.CustomResourceState

	// Indicates that features for this group come from BigQuery Table/View. By default treats the source as a sparse time series source, which is required to have an entity_id and a feature_timestamp column in the source.
	BigQuery GoogleCloudAiplatformV1beta1FeatureGroupBigQueryResponseOutput `pulumi:"bigQuery"`
	// Timestamp when this FeatureGroup was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Description of the FeatureGroup.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Required. The ID to use for this FeatureGroup, which will become the final component of the FeatureGroup's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.
	FeatureGroupId pulumi.StringOutput `pulumi:"featureGroupId"`
	// Optional. The labels with user-defined metadata to organize your FeatureGroup. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureGroup(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Name of the FeatureGroup. Format: `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Timestamp when this FeatureGroup was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewFeatureGroup registers a new resource with the given unique name, arguments, and options.
func NewFeatureGroup(ctx *pulumi.Context,
	name string, args *FeatureGroupArgs, opts ...pulumi.ResourceOption) (*FeatureGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureGroupId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureGroupId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"featureGroupId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FeatureGroup
	err := ctx.RegisterResource("google-native:aiplatform/v1beta1:FeatureGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFeatureGroup gets an existing FeatureGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFeatureGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FeatureGroupState, opts ...pulumi.ResourceOption) (*FeatureGroup, error) {
	var resource FeatureGroup
	err := ctx.ReadResource("google-native:aiplatform/v1beta1:FeatureGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FeatureGroup resources.
type featureGroupState struct {
}

type FeatureGroupState struct {
}

func (FeatureGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*featureGroupState)(nil)).Elem()
}

type featureGroupArgs struct {
	// Indicates that features for this group come from BigQuery Table/View. By default treats the source as a sparse time series source, which is required to have an entity_id and a feature_timestamp column in the source.
	BigQuery *GoogleCloudAiplatformV1beta1FeatureGroupBigQuery `pulumi:"bigQuery"`
	// Optional. Description of the FeatureGroup.
	Description *string `pulumi:"description"`
	// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag *string `pulumi:"etag"`
	// Required. The ID to use for this FeatureGroup, which will become the final component of the FeatureGroup's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.
	FeatureGroupId string `pulumi:"featureGroupId"`
	// Optional. The labels with user-defined metadata to organize your FeatureGroup. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureGroup(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	Project  *string           `pulumi:"project"`
}

// The set of arguments for constructing a FeatureGroup resource.
type FeatureGroupArgs struct {
	// Indicates that features for this group come from BigQuery Table/View. By default treats the source as a sparse time series source, which is required to have an entity_id and a feature_timestamp column in the source.
	BigQuery GoogleCloudAiplatformV1beta1FeatureGroupBigQueryPtrInput
	// Optional. Description of the FeatureGroup.
	Description pulumi.StringPtrInput
	// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag pulumi.StringPtrInput
	// Required. The ID to use for this FeatureGroup, which will become the final component of the FeatureGroup's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.
	FeatureGroupId pulumi.StringInput
	// Optional. The labels with user-defined metadata to organize your FeatureGroup. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureGroup(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
}

func (FeatureGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*featureGroupArgs)(nil)).Elem()
}

type FeatureGroupInput interface {
	pulumi.Input

	ToFeatureGroupOutput() FeatureGroupOutput
	ToFeatureGroupOutputWithContext(ctx context.Context) FeatureGroupOutput
}

func (*FeatureGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureGroup)(nil)).Elem()
}

func (i *FeatureGroup) ToFeatureGroupOutput() FeatureGroupOutput {
	return i.ToFeatureGroupOutputWithContext(context.Background())
}

func (i *FeatureGroup) ToFeatureGroupOutputWithContext(ctx context.Context) FeatureGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupOutput)
}

type FeatureGroupOutput struct{ *pulumi.OutputState }

func (FeatureGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureGroup)(nil)).Elem()
}

func (o FeatureGroupOutput) ToFeatureGroupOutput() FeatureGroupOutput {
	return o
}

func (o FeatureGroupOutput) ToFeatureGroupOutputWithContext(ctx context.Context) FeatureGroupOutput {
	return o
}

// Indicates that features for this group come from BigQuery Table/View. By default treats the source as a sparse time series source, which is required to have an entity_id and a feature_timestamp column in the source.
func (o FeatureGroupOutput) BigQuery() GoogleCloudAiplatformV1beta1FeatureGroupBigQueryResponseOutput {
	return o.ApplyT(func(v *FeatureGroup) GoogleCloudAiplatformV1beta1FeatureGroupBigQueryResponseOutput {
		return v.BigQuery
	}).(GoogleCloudAiplatformV1beta1FeatureGroupBigQueryResponseOutput)
}

// Timestamp when this FeatureGroup was created.
func (o FeatureGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureGroup) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of the FeatureGroup.
func (o FeatureGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureGroup) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
func (o FeatureGroupOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureGroup) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Required. The ID to use for this FeatureGroup, which will become the final component of the FeatureGroup's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.
func (o FeatureGroupOutput) FeatureGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureGroup) pulumi.StringOutput { return v.FeatureGroupId }).(pulumi.StringOutput)
}

// Optional. The labels with user-defined metadata to organize your FeatureGroup. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureGroup(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
func (o FeatureGroupOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FeatureGroup) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o FeatureGroupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureGroup) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the FeatureGroup. Format: `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
func (o FeatureGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FeatureGroupOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureGroup) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Timestamp when this FeatureGroup was last updated.
func (o FeatureGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureGroup) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureGroupInput)(nil)).Elem(), &FeatureGroup{})
	pulumi.RegisterOutputType(FeatureGroupOutput{})
}
