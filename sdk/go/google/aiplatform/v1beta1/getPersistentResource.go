// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a PersistentResource.
func LookupPersistentResource(ctx *pulumi.Context, args *LookupPersistentResourceArgs, opts ...pulumi.InvokeOption) (*LookupPersistentResourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPersistentResourceResult
	err := ctx.Invoke("google-native:aiplatform/v1beta1:getPersistentResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPersistentResourceArgs struct {
	Location             string  `pulumi:"location"`
	PersistentResourceId string  `pulumi:"persistentResourceId"`
	Project              *string `pulumi:"project"`
}

type LookupPersistentResourceResult struct {
	// Time when the PersistentResource was created.
	CreateTime string `pulumi:"createTime"`
	// Optional. The display name of the PersistentResource. The name can be up to 128 characters long and can consist of any UTF-8 characters.
	DisplayName string `pulumi:"displayName"`
	// Optional. Customer-managed encryption key spec for a PersistentResource. If set, this PersistentResource and all sub-resources of this PersistentResource will be secured by this key.
	EncryptionSpec GoogleCloudAiplatformV1beta1EncryptionSpecResponse `pulumi:"encryptionSpec"`
	// Only populated when persistent resource's state is `STOPPING` or `ERROR`.
	Error GoogleRpcStatusResponse `pulumi:"error"`
	// Optional. The labels with user-defined metadata to organize PersistentResource. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
	Labels map[string]string `pulumi:"labels"`
	// Immutable. Resource name of a PersistentResource.
	Name string `pulumi:"name"`
	// Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to peered with Vertex AI to host the persistent resources. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the resources aren't peered with any network.
	Network string `pulumi:"network"`
	// Optional. A list of names for the reserved IP ranges under the VPC network that can be used for this persistent resource. If set, we will deploy the persistent resource within the provided IP ranges. Otherwise, the persistent resource is deployed to any IP ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].
	ReservedIpRanges []string `pulumi:"reservedIpRanges"`
	// The spec of the pools of different resources.
	ResourcePools []GoogleCloudAiplatformV1beta1ResourcePoolResponse `pulumi:"resourcePools"`
	// Runtime information of the Persistent Resource.
	ResourceRuntime GoogleCloudAiplatformV1beta1ResourceRuntimeResponse `pulumi:"resourceRuntime"`
	// Optional. Persistent Resource runtime spec. For example, used for Ray cluster configuration.
	ResourceRuntimeSpec GoogleCloudAiplatformV1beta1ResourceRuntimeSpecResponse `pulumi:"resourceRuntimeSpec"`
	// Time when the PersistentResource for the first time entered the `RUNNING` state.
	StartTime string `pulumi:"startTime"`
	// The detailed state of a Study.
	State string `pulumi:"state"`
	// Time when the PersistentResource was most recently updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupPersistentResourceOutput(ctx *pulumi.Context, args LookupPersistentResourceOutputArgs, opts ...pulumi.InvokeOption) LookupPersistentResourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPersistentResourceResult, error) {
			args := v.(LookupPersistentResourceArgs)
			r, err := LookupPersistentResource(ctx, &args, opts...)
			var s LookupPersistentResourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPersistentResourceResultOutput)
}

type LookupPersistentResourceOutputArgs struct {
	Location             pulumi.StringInput    `pulumi:"location"`
	PersistentResourceId pulumi.StringInput    `pulumi:"persistentResourceId"`
	Project              pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupPersistentResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPersistentResourceArgs)(nil)).Elem()
}

type LookupPersistentResourceResultOutput struct{ *pulumi.OutputState }

func (LookupPersistentResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPersistentResourceResult)(nil)).Elem()
}

func (o LookupPersistentResourceResultOutput) ToLookupPersistentResourceResultOutput() LookupPersistentResourceResultOutput {
	return o
}

func (o LookupPersistentResourceResultOutput) ToLookupPersistentResourceResultOutputWithContext(ctx context.Context) LookupPersistentResourceResultOutput {
	return o
}

// Time when the PersistentResource was created.
func (o LookupPersistentResourceResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPersistentResourceResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. The display name of the PersistentResource. The name can be up to 128 characters long and can consist of any UTF-8 characters.
func (o LookupPersistentResourceResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPersistentResourceResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Optional. Customer-managed encryption key spec for a PersistentResource. If set, this PersistentResource and all sub-resources of this PersistentResource will be secured by this key.
func (o LookupPersistentResourceResultOutput) EncryptionSpec() GoogleCloudAiplatformV1beta1EncryptionSpecResponseOutput {
	return o.ApplyT(func(v LookupPersistentResourceResult) GoogleCloudAiplatformV1beta1EncryptionSpecResponse {
		return v.EncryptionSpec
	}).(GoogleCloudAiplatformV1beta1EncryptionSpecResponseOutput)
}

// Only populated when persistent resource's state is `STOPPING` or `ERROR`.
func (o LookupPersistentResourceResultOutput) Error() GoogleRpcStatusResponseOutput {
	return o.ApplyT(func(v LookupPersistentResourceResult) GoogleRpcStatusResponse { return v.Error }).(GoogleRpcStatusResponseOutput)
}

// Optional. The labels with user-defined metadata to organize PersistentResource. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
func (o LookupPersistentResourceResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPersistentResourceResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Immutable. Resource name of a PersistentResource.
func (o LookupPersistentResourceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPersistentResourceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to peered with Vertex AI to host the persistent resources. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the resources aren't peered with any network.
func (o LookupPersistentResourceResultOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPersistentResourceResult) string { return v.Network }).(pulumi.StringOutput)
}

// Optional. A list of names for the reserved IP ranges under the VPC network that can be used for this persistent resource. If set, we will deploy the persistent resource within the provided IP ranges. Otherwise, the persistent resource is deployed to any IP ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].
func (o LookupPersistentResourceResultOutput) ReservedIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPersistentResourceResult) []string { return v.ReservedIpRanges }).(pulumi.StringArrayOutput)
}

// The spec of the pools of different resources.
func (o LookupPersistentResourceResultOutput) ResourcePools() GoogleCloudAiplatformV1beta1ResourcePoolResponseArrayOutput {
	return o.ApplyT(func(v LookupPersistentResourceResult) []GoogleCloudAiplatformV1beta1ResourcePoolResponse {
		return v.ResourcePools
	}).(GoogleCloudAiplatformV1beta1ResourcePoolResponseArrayOutput)
}

// Runtime information of the Persistent Resource.
func (o LookupPersistentResourceResultOutput) ResourceRuntime() GoogleCloudAiplatformV1beta1ResourceRuntimeResponseOutput {
	return o.ApplyT(func(v LookupPersistentResourceResult) GoogleCloudAiplatformV1beta1ResourceRuntimeResponse {
		return v.ResourceRuntime
	}).(GoogleCloudAiplatformV1beta1ResourceRuntimeResponseOutput)
}

// Optional. Persistent Resource runtime spec. For example, used for Ray cluster configuration.
func (o LookupPersistentResourceResultOutput) ResourceRuntimeSpec() GoogleCloudAiplatformV1beta1ResourceRuntimeSpecResponseOutput {
	return o.ApplyT(func(v LookupPersistentResourceResult) GoogleCloudAiplatformV1beta1ResourceRuntimeSpecResponse {
		return v.ResourceRuntimeSpec
	}).(GoogleCloudAiplatformV1beta1ResourceRuntimeSpecResponseOutput)
}

// Time when the PersistentResource for the first time entered the `RUNNING` state.
func (o LookupPersistentResourceResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPersistentResourceResult) string { return v.StartTime }).(pulumi.StringOutput)
}

// The detailed state of a Study.
func (o LookupPersistentResourceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPersistentResourceResult) string { return v.State }).(pulumi.StringOutput)
}

// Time when the PersistentResource was most recently updated.
func (o LookupPersistentResourceResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPersistentResourceResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPersistentResourceResultOutput{})
}
