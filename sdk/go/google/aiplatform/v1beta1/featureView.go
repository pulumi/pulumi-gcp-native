// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new FeatureView in a given FeatureOnlineStore.
type FeatureView struct {
	pulumi.CustomResourceState

	// Optional. Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.
	BigQuerySource GoogleCloudAiplatformV1beta1FeatureViewBigQuerySourceResponseOutput `pulumi:"bigQuerySource"`
	// Timestamp when this FeatureView was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag                 pulumi.StringOutput `pulumi:"etag"`
	FeatureOnlineStoreId pulumi.StringOutput `pulumi:"featureOnlineStoreId"`
	// Optional. Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.
	FeatureRegistrySource GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourceResponseOutput `pulumi:"featureRegistrySource"`
	// Required. The ID to use for the FeatureView, which will become the final component of the FeatureView's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a FeatureOnlineStore.
	FeatureViewId pulumi.StringOutput `pulumi:"featureViewId"`
	// Optional. Configuration for index preparation for vector search. It contains the required configurations to create an index from source data, so that approximate nearest neighbor (a.k.a ANN) algorithms search can be performed during online serving.
	IndexConfig GoogleCloudAiplatformV1beta1FeatureViewIndexConfigResponseOutput `pulumi:"indexConfig"`
	// Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Immutable. If set to true, one on demand sync will be run immediately, regardless whether the FeatureView.sync_config is configured or not.
	RunSyncImmediately pulumi.BoolPtrOutput `pulumi:"runSyncImmediately"`
	// A Service Account unique to this FeatureView. The role bigquery.dataViewer should be granted to this service account to allow Vertex AI Feature Store to sync data to the online store.
	ServiceAccountEmail pulumi.StringOutput `pulumi:"serviceAccountEmail"`
	// Optional. Service agent type used during data sync. By default, the Vertex AI Service Agent is used. When using an IAM Policy to isolate this FeatureView within a project, a separate service account should be provisioned by setting this field to `SERVICE_AGENT_TYPE_FEATURE_VIEW`. This will generate a separate service account to access the BigQuery source table.
	ServiceAgentType pulumi.StringOutput `pulumi:"serviceAgentType"`
	// Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for each entityId of this FeatureView are made ready for online serving.
	SyncConfig GoogleCloudAiplatformV1beta1FeatureViewSyncConfigResponseOutput `pulumi:"syncConfig"`
	// Timestamp when this FeatureView was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Optional. Deprecated: please use FeatureView.index_config instead.
	//
	// Deprecated: Optional. Deprecated: please use FeatureView.index_config instead.
	VectorSearchConfig GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigResponseOutput `pulumi:"vectorSearchConfig"`
}

// NewFeatureView registers a new resource with the given unique name, arguments, and options.
func NewFeatureView(ctx *pulumi.Context,
	name string, args *FeatureViewArgs, opts ...pulumi.ResourceOption) (*FeatureView, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureOnlineStoreId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureOnlineStoreId'")
	}
	if args.FeatureViewId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureViewId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"featureOnlineStoreId",
		"featureViewId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FeatureView
	err := ctx.RegisterResource("google-native:aiplatform/v1beta1:FeatureView", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFeatureView gets an existing FeatureView resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFeatureView(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FeatureViewState, opts ...pulumi.ResourceOption) (*FeatureView, error) {
	var resource FeatureView
	err := ctx.ReadResource("google-native:aiplatform/v1beta1:FeatureView", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FeatureView resources.
type featureViewState struct {
}

type FeatureViewState struct {
}

func (FeatureViewState) ElementType() reflect.Type {
	return reflect.TypeOf((*featureViewState)(nil)).Elem()
}

type featureViewArgs struct {
	// Optional. Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.
	BigQuerySource *GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource `pulumi:"bigQuerySource"`
	// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag                 *string `pulumi:"etag"`
	FeatureOnlineStoreId string  `pulumi:"featureOnlineStoreId"`
	// Optional. Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.
	FeatureRegistrySource *GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource `pulumi:"featureRegistrySource"`
	// Required. The ID to use for the FeatureView, which will become the final component of the FeatureView's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a FeatureOnlineStore.
	FeatureViewId string `pulumi:"featureViewId"`
	// Optional. Configuration for index preparation for vector search. It contains the required configurations to create an index from source data, so that approximate nearest neighbor (a.k.a ANN) algorithms search can be performed during online serving.
	IndexConfig *GoogleCloudAiplatformV1beta1FeatureViewIndexConfig `pulumi:"indexConfig"`
	// Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Immutable. If set to true, one on demand sync will be run immediately, regardless whether the FeatureView.sync_config is configured or not.
	RunSyncImmediately *bool `pulumi:"runSyncImmediately"`
	// Optional. Service agent type used during data sync. By default, the Vertex AI Service Agent is used. When using an IAM Policy to isolate this FeatureView within a project, a separate service account should be provisioned by setting this field to `SERVICE_AGENT_TYPE_FEATURE_VIEW`. This will generate a separate service account to access the BigQuery source table.
	ServiceAgentType *FeatureViewServiceAgentType `pulumi:"serviceAgentType"`
	// Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for each entityId of this FeatureView are made ready for online serving.
	SyncConfig *GoogleCloudAiplatformV1beta1FeatureViewSyncConfig `pulumi:"syncConfig"`
	// Optional. Deprecated: please use FeatureView.index_config instead.
	//
	// Deprecated: Optional. Deprecated: please use FeatureView.index_config instead.
	VectorSearchConfig *GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig `pulumi:"vectorSearchConfig"`
}

// The set of arguments for constructing a FeatureView resource.
type FeatureViewArgs struct {
	// Optional. Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.
	BigQuerySource GoogleCloudAiplatformV1beta1FeatureViewBigQuerySourcePtrInput
	// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag                 pulumi.StringPtrInput
	FeatureOnlineStoreId pulumi.StringInput
	// Optional. Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.
	FeatureRegistrySource GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourcePtrInput
	// Required. The ID to use for the FeatureView, which will become the final component of the FeatureView's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a FeatureOnlineStore.
	FeatureViewId pulumi.StringInput
	// Optional. Configuration for index preparation for vector search. It contains the required configurations to create an index from source data, so that approximate nearest neighbor (a.k.a ANN) algorithms search can be performed during online serving.
	IndexConfig GoogleCloudAiplatformV1beta1FeatureViewIndexConfigPtrInput
	// Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Immutable. If set to true, one on demand sync will be run immediately, regardless whether the FeatureView.sync_config is configured or not.
	RunSyncImmediately pulumi.BoolPtrInput
	// Optional. Service agent type used during data sync. By default, the Vertex AI Service Agent is used. When using an IAM Policy to isolate this FeatureView within a project, a separate service account should be provisioned by setting this field to `SERVICE_AGENT_TYPE_FEATURE_VIEW`. This will generate a separate service account to access the BigQuery source table.
	ServiceAgentType FeatureViewServiceAgentTypePtrInput
	// Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for each entityId of this FeatureView are made ready for online serving.
	SyncConfig GoogleCloudAiplatformV1beta1FeatureViewSyncConfigPtrInput
	// Optional. Deprecated: please use FeatureView.index_config instead.
	//
	// Deprecated: Optional. Deprecated: please use FeatureView.index_config instead.
	VectorSearchConfig GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigPtrInput
}

func (FeatureViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*featureViewArgs)(nil)).Elem()
}

type FeatureViewInput interface {
	pulumi.Input

	ToFeatureViewOutput() FeatureViewOutput
	ToFeatureViewOutputWithContext(ctx context.Context) FeatureViewOutput
}

func (*FeatureView) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureView)(nil)).Elem()
}

func (i *FeatureView) ToFeatureViewOutput() FeatureViewOutput {
	return i.ToFeatureViewOutputWithContext(context.Background())
}

func (i *FeatureView) ToFeatureViewOutputWithContext(ctx context.Context) FeatureViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureViewOutput)
}

type FeatureViewOutput struct{ *pulumi.OutputState }

func (FeatureViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureView)(nil)).Elem()
}

func (o FeatureViewOutput) ToFeatureViewOutput() FeatureViewOutput {
	return o
}

func (o FeatureViewOutput) ToFeatureViewOutputWithContext(ctx context.Context) FeatureViewOutput {
	return o
}

// Optional. Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.
func (o FeatureViewOutput) BigQuerySource() GoogleCloudAiplatformV1beta1FeatureViewBigQuerySourceResponseOutput {
	return o.ApplyT(func(v *FeatureView) GoogleCloudAiplatformV1beta1FeatureViewBigQuerySourceResponseOutput {
		return v.BigQuerySource
	}).(GoogleCloudAiplatformV1beta1FeatureViewBigQuerySourceResponseOutput)
}

// Timestamp when this FeatureView was created.
func (o FeatureViewOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureView) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
func (o FeatureViewOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureView) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o FeatureViewOutput) FeatureOnlineStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureView) pulumi.StringOutput { return v.FeatureOnlineStoreId }).(pulumi.StringOutput)
}

// Optional. Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.
func (o FeatureViewOutput) FeatureRegistrySource() GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourceResponseOutput {
	return o.ApplyT(func(v *FeatureView) GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourceResponseOutput {
		return v.FeatureRegistrySource
	}).(GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourceResponseOutput)
}

// Required. The ID to use for the FeatureView, which will become the final component of the FeatureView's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a FeatureOnlineStore.
func (o FeatureViewOutput) FeatureViewId() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureView) pulumi.StringOutput { return v.FeatureViewId }).(pulumi.StringOutput)
}

// Optional. Configuration for index preparation for vector search. It contains the required configurations to create an index from source data, so that approximate nearest neighbor (a.k.a ANN) algorithms search can be performed during online serving.
func (o FeatureViewOutput) IndexConfig() GoogleCloudAiplatformV1beta1FeatureViewIndexConfigResponseOutput {
	return o.ApplyT(func(v *FeatureView) GoogleCloudAiplatformV1beta1FeatureViewIndexConfigResponseOutput {
		return v.IndexConfig
	}).(GoogleCloudAiplatformV1beta1FeatureViewIndexConfigResponseOutput)
}

// Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
func (o FeatureViewOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FeatureView) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o FeatureViewOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureView) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
func (o FeatureViewOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureView) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FeatureViewOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureView) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Immutable. If set to true, one on demand sync will be run immediately, regardless whether the FeatureView.sync_config is configured or not.
func (o FeatureViewOutput) RunSyncImmediately() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FeatureView) pulumi.BoolPtrOutput { return v.RunSyncImmediately }).(pulumi.BoolPtrOutput)
}

// A Service Account unique to this FeatureView. The role bigquery.dataViewer should be granted to this service account to allow Vertex AI Feature Store to sync data to the online store.
func (o FeatureViewOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureView) pulumi.StringOutput { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

// Optional. Service agent type used during data sync. By default, the Vertex AI Service Agent is used. When using an IAM Policy to isolate this FeatureView within a project, a separate service account should be provisioned by setting this field to `SERVICE_AGENT_TYPE_FEATURE_VIEW`. This will generate a separate service account to access the BigQuery source table.
func (o FeatureViewOutput) ServiceAgentType() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureView) pulumi.StringOutput { return v.ServiceAgentType }).(pulumi.StringOutput)
}

// Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for each entityId of this FeatureView are made ready for online serving.
func (o FeatureViewOutput) SyncConfig() GoogleCloudAiplatformV1beta1FeatureViewSyncConfigResponseOutput {
	return o.ApplyT(func(v *FeatureView) GoogleCloudAiplatformV1beta1FeatureViewSyncConfigResponseOutput {
		return v.SyncConfig
	}).(GoogleCloudAiplatformV1beta1FeatureViewSyncConfigResponseOutput)
}

// Timestamp when this FeatureView was last updated.
func (o FeatureViewOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FeatureView) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Optional. Deprecated: please use FeatureView.index_config instead.
//
// Deprecated: Optional. Deprecated: please use FeatureView.index_config instead.
func (o FeatureViewOutput) VectorSearchConfig() GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigResponseOutput {
	return o.ApplyT(func(v *FeatureView) GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigResponseOutput {
		return v.VectorSearchConfig
	}).(GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureViewInput)(nil)).Elem(), &FeatureView{})
	pulumi.RegisterOutputType(FeatureViewOutput{})
}
