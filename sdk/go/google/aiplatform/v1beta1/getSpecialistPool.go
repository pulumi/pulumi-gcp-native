// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets a SpecialistPool.
func LookupSpecialistPool(ctx *pulumi.Context, args *LookupSpecialistPoolArgs, opts ...pulumi.InvokeOption) (*LookupSpecialistPoolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSpecialistPoolResult
	err := ctx.Invoke("google-native:aiplatform/v1beta1:getSpecialistPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSpecialistPoolArgs struct {
	Location         string  `pulumi:"location"`
	Project          *string `pulumi:"project"`
	SpecialistPoolId string  `pulumi:"specialistPoolId"`
}

type LookupSpecialistPoolResult struct {
	// The user-defined name of the SpecialistPool. The name can be up to 128 characters long and can consist of any UTF-8 characters. This field should be unique on project-level.
	DisplayName string `pulumi:"displayName"`
	// The resource name of the SpecialistPool.
	Name string `pulumi:"name"`
	// The resource name of the pending data labeling jobs.
	PendingDataLabelingJobs []string `pulumi:"pendingDataLabelingJobs"`
	// The email addresses of the managers in the SpecialistPool.
	SpecialistManagerEmails []string `pulumi:"specialistManagerEmails"`
	// The number of managers in this SpecialistPool.
	SpecialistManagersCount int `pulumi:"specialistManagersCount"`
	// The email addresses of workers in the SpecialistPool.
	SpecialistWorkerEmails []string `pulumi:"specialistWorkerEmails"`
}

func LookupSpecialistPoolOutput(ctx *pulumi.Context, args LookupSpecialistPoolOutputArgs, opts ...pulumi.InvokeOption) LookupSpecialistPoolResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSpecialistPoolResult, error) {
			args := v.(LookupSpecialistPoolArgs)
			r, err := LookupSpecialistPool(ctx, &args, opts...)
			var s LookupSpecialistPoolResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSpecialistPoolResultOutput)
}

type LookupSpecialistPoolOutputArgs struct {
	Location         pulumi.StringInput    `pulumi:"location"`
	Project          pulumi.StringPtrInput `pulumi:"project"`
	SpecialistPoolId pulumi.StringInput    `pulumi:"specialistPoolId"`
}

func (LookupSpecialistPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpecialistPoolArgs)(nil)).Elem()
}

type LookupSpecialistPoolResultOutput struct{ *pulumi.OutputState }

func (LookupSpecialistPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpecialistPoolResult)(nil)).Elem()
}

func (o LookupSpecialistPoolResultOutput) ToLookupSpecialistPoolResultOutput() LookupSpecialistPoolResultOutput {
	return o
}

func (o LookupSpecialistPoolResultOutput) ToLookupSpecialistPoolResultOutputWithContext(ctx context.Context) LookupSpecialistPoolResultOutput {
	return o
}

func (o LookupSpecialistPoolResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSpecialistPoolResult] {
	return pulumix.Output[LookupSpecialistPoolResult]{
		OutputState: o.OutputState,
	}
}

// The user-defined name of the SpecialistPool. The name can be up to 128 characters long and can consist of any UTF-8 characters. This field should be unique on project-level.
func (o LookupSpecialistPoolResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpecialistPoolResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The resource name of the SpecialistPool.
func (o LookupSpecialistPoolResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpecialistPoolResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource name of the pending data labeling jobs.
func (o LookupSpecialistPoolResultOutput) PendingDataLabelingJobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSpecialistPoolResult) []string { return v.PendingDataLabelingJobs }).(pulumi.StringArrayOutput)
}

// The email addresses of the managers in the SpecialistPool.
func (o LookupSpecialistPoolResultOutput) SpecialistManagerEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSpecialistPoolResult) []string { return v.SpecialistManagerEmails }).(pulumi.StringArrayOutput)
}

// The number of managers in this SpecialistPool.
func (o LookupSpecialistPoolResultOutput) SpecialistManagersCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSpecialistPoolResult) int { return v.SpecialistManagersCount }).(pulumi.IntOutput)
}

// The email addresses of workers in the SpecialistPool.
func (o LookupSpecialistPoolResultOutput) SpecialistWorkerEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSpecialistPoolResult) []string { return v.SpecialistWorkerEmails }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSpecialistPoolResultOutput{})
}
