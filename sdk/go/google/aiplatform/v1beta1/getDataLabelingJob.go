// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a DataLabelingJob.
func LookupDataLabelingJob(ctx *pulumi.Context, args *LookupDataLabelingJobArgs, opts ...pulumi.InvokeOption) (*LookupDataLabelingJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDataLabelingJobResult
	err := ctx.Invoke("google-native:aiplatform/v1beta1:getDataLabelingJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDataLabelingJobArgs struct {
	DataLabelingJobId string  `pulumi:"dataLabelingJobId"`
	Location          string  `pulumi:"location"`
	Project           *string `pulumi:"project"`
}

type LookupDataLabelingJobResult struct {
	// Parameters that configure the active learning pipeline. Active learning will label the data incrementally via several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
	ActiveLearningConfig GoogleCloudAiplatformV1beta1ActiveLearningConfigResponse `pulumi:"activeLearningConfig"`
	// Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	AnnotationLabels map[string]string `pulumi:"annotationLabels"`
	// Timestamp when this DataLabelingJob was created.
	CreateTime string `pulumi:"createTime"`
	// Estimated cost(in US dollars) that the DataLabelingJob has incurred to date.
	CurrentSpend GoogleTypeMoneyResponse `pulumi:"currentSpend"`
	// Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
	Datasets []string `pulumi:"datasets"`
	// The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
	DisplayName string `pulumi:"displayName"`
	// Customer-managed encryption key spec for a DataLabelingJob. If set, this DataLabelingJob will be secured by this key. Note: Annotations created in the DataLabelingJob are associated with the EncryptionSpec of the Dataset they are exported to.
	EncryptionSpec GoogleCloudAiplatformV1beta1EncryptionSpecResponse `pulumi:"encryptionSpec"`
	// DataLabelingJob errors. It is only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
	Error GoogleRpcStatusResponse `pulumi:"error"`
	// Input config parameters for the DataLabelingJob.
	Inputs interface{} `pulumi:"inputs"`
	// Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
	InputsSchemaUri string `pulumi:"inputsSchemaUri"`
	// The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
	InstructionUri string `pulumi:"instructionUri"`
	// Number of labelers to work on each DataItem.
	LabelerCount int `pulumi:"labelerCount"`
	// Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.
	LabelingProgress int `pulumi:"labelingProgress"`
	// The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title.
	Labels map[string]string `pulumi:"labels"`
	// Resource name of the DataLabelingJob.
	Name string `pulumi:"name"`
	// The SpecialistPools' resource names associated with this job.
	SpecialistPools []string `pulumi:"specialistPools"`
	// The detailed state of the job.
	State string `pulumi:"state"`
	// Timestamp when this DataLabelingJob was updated most recently.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupDataLabelingJobOutput(ctx *pulumi.Context, args LookupDataLabelingJobOutputArgs, opts ...pulumi.InvokeOption) LookupDataLabelingJobResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDataLabelingJobResult, error) {
			args := v.(LookupDataLabelingJobArgs)
			r, err := LookupDataLabelingJob(ctx, &args, opts...)
			var s LookupDataLabelingJobResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDataLabelingJobResultOutput)
}

type LookupDataLabelingJobOutputArgs struct {
	DataLabelingJobId pulumi.StringInput    `pulumi:"dataLabelingJobId"`
	Location          pulumi.StringInput    `pulumi:"location"`
	Project           pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupDataLabelingJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataLabelingJobArgs)(nil)).Elem()
}

type LookupDataLabelingJobResultOutput struct{ *pulumi.OutputState }

func (LookupDataLabelingJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataLabelingJobResult)(nil)).Elem()
}

func (o LookupDataLabelingJobResultOutput) ToLookupDataLabelingJobResultOutput() LookupDataLabelingJobResultOutput {
	return o
}

func (o LookupDataLabelingJobResultOutput) ToLookupDataLabelingJobResultOutputWithContext(ctx context.Context) LookupDataLabelingJobResultOutput {
	return o
}

// Parameters that configure the active learning pipeline. Active learning will label the data incrementally via several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
func (o LookupDataLabelingJobResultOutput) ActiveLearningConfig() GoogleCloudAiplatformV1beta1ActiveLearningConfigResponseOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) GoogleCloudAiplatformV1beta1ActiveLearningConfigResponse {
		return v.ActiveLearningConfig
	}).(GoogleCloudAiplatformV1beta1ActiveLearningConfigResponseOutput)
}

// Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
func (o LookupDataLabelingJobResultOutput) AnnotationLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) map[string]string { return v.AnnotationLabels }).(pulumi.StringMapOutput)
}

// Timestamp when this DataLabelingJob was created.
func (o LookupDataLabelingJobResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Estimated cost(in US dollars) that the DataLabelingJob has incurred to date.
func (o LookupDataLabelingJobResultOutput) CurrentSpend() GoogleTypeMoneyResponseOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) GoogleTypeMoneyResponse { return v.CurrentSpend }).(GoogleTypeMoneyResponseOutput)
}

// Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
func (o LookupDataLabelingJobResultOutput) Datasets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) []string { return v.Datasets }).(pulumi.StringArrayOutput)
}

// The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
func (o LookupDataLabelingJobResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Customer-managed encryption key spec for a DataLabelingJob. If set, this DataLabelingJob will be secured by this key. Note: Annotations created in the DataLabelingJob are associated with the EncryptionSpec of the Dataset they are exported to.
func (o LookupDataLabelingJobResultOutput) EncryptionSpec() GoogleCloudAiplatformV1beta1EncryptionSpecResponseOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) GoogleCloudAiplatformV1beta1EncryptionSpecResponse {
		return v.EncryptionSpec
	}).(GoogleCloudAiplatformV1beta1EncryptionSpecResponseOutput)
}

// DataLabelingJob errors. It is only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
func (o LookupDataLabelingJobResultOutput) Error() GoogleRpcStatusResponseOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) GoogleRpcStatusResponse { return v.Error }).(GoogleRpcStatusResponseOutput)
}

// Input config parameters for the DataLabelingJob.
func (o LookupDataLabelingJobResultOutput) Inputs() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) interface{} { return v.Inputs }).(pulumi.AnyOutput)
}

// Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
func (o LookupDataLabelingJobResultOutput) InputsSchemaUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) string { return v.InputsSchemaUri }).(pulumi.StringOutput)
}

// The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
func (o LookupDataLabelingJobResultOutput) InstructionUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) string { return v.InstructionUri }).(pulumi.StringOutput)
}

// Number of labelers to work on each DataItem.
func (o LookupDataLabelingJobResultOutput) LabelerCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) int { return v.LabelerCount }).(pulumi.IntOutput)
}

// Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.
func (o LookupDataLabelingJobResultOutput) LabelingProgress() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) int { return v.LabelingProgress }).(pulumi.IntOutput)
}

// The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title.
func (o LookupDataLabelingJobResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource name of the DataLabelingJob.
func (o LookupDataLabelingJobResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) string { return v.Name }).(pulumi.StringOutput)
}

// The SpecialistPools' resource names associated with this job.
func (o LookupDataLabelingJobResultOutput) SpecialistPools() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) []string { return v.SpecialistPools }).(pulumi.StringArrayOutput)
}

// The detailed state of the job.
func (o LookupDataLabelingJobResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) string { return v.State }).(pulumi.StringOutput)
}

// Timestamp when this DataLabelingJob was updated most recently.
func (o LookupDataLabelingJobResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataLabelingJobResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataLabelingJobResultOutput{})
}
