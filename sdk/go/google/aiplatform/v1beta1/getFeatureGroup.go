// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets details of a single FeatureGroup.
func LookupFeatureGroup(ctx *pulumi.Context, args *LookupFeatureGroupArgs, opts ...pulumi.InvokeOption) (*LookupFeatureGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFeatureGroupResult
	err := ctx.Invoke("google-native:aiplatform/v1beta1:getFeatureGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFeatureGroupArgs struct {
	FeatureGroupId string  `pulumi:"featureGroupId"`
	Location       string  `pulumi:"location"`
	Project        *string `pulumi:"project"`
}

type LookupFeatureGroupResult struct {
	// Indicates that features for this group come from BigQuery Table/View. By default treats the source as a sparse time series source, which is required to have an entity_id and a feature_timestamp column in the source.
	BigQuery GoogleCloudAiplatformV1beta1FeatureGroupBigQueryResponse `pulumi:"bigQuery"`
	// Timestamp when this FeatureGroup was created.
	CreateTime string `pulumi:"createTime"`
	// Optional. Description of the FeatureGroup.
	Description string `pulumi:"description"`
	// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag string `pulumi:"etag"`
	// Optional. The labels with user-defined metadata to organize your FeatureGroup. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureGroup(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels map[string]string `pulumi:"labels"`
	// Name of the FeatureGroup. Format: `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
	Name string `pulumi:"name"`
	// Timestamp when this FeatureGroup was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupFeatureGroupOutput(ctx *pulumi.Context, args LookupFeatureGroupOutputArgs, opts ...pulumi.InvokeOption) LookupFeatureGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFeatureGroupResult, error) {
			args := v.(LookupFeatureGroupArgs)
			r, err := LookupFeatureGroup(ctx, &args, opts...)
			var s LookupFeatureGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFeatureGroupResultOutput)
}

type LookupFeatureGroupOutputArgs struct {
	FeatureGroupId pulumi.StringInput    `pulumi:"featureGroupId"`
	Location       pulumi.StringInput    `pulumi:"location"`
	Project        pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupFeatureGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeatureGroupArgs)(nil)).Elem()
}

type LookupFeatureGroupResultOutput struct{ *pulumi.OutputState }

func (LookupFeatureGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeatureGroupResult)(nil)).Elem()
}

func (o LookupFeatureGroupResultOutput) ToLookupFeatureGroupResultOutput() LookupFeatureGroupResultOutput {
	return o
}

func (o LookupFeatureGroupResultOutput) ToLookupFeatureGroupResultOutputWithContext(ctx context.Context) LookupFeatureGroupResultOutput {
	return o
}

func (o LookupFeatureGroupResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupFeatureGroupResult] {
	return pulumix.Output[LookupFeatureGroupResult]{
		OutputState: o.OutputState,
	}
}

// Indicates that features for this group come from BigQuery Table/View. By default treats the source as a sparse time series source, which is required to have an entity_id and a feature_timestamp column in the source.
func (o LookupFeatureGroupResultOutput) BigQuery() GoogleCloudAiplatformV1beta1FeatureGroupBigQueryResponseOutput {
	return o.ApplyT(func(v LookupFeatureGroupResult) GoogleCloudAiplatformV1beta1FeatureGroupBigQueryResponse {
		return v.BigQuery
	}).(GoogleCloudAiplatformV1beta1FeatureGroupBigQueryResponseOutput)
}

// Timestamp when this FeatureGroup was created.
func (o LookupFeatureGroupResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureGroupResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of the FeatureGroup.
func (o LookupFeatureGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
func (o LookupFeatureGroupResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureGroupResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Optional. The labels with user-defined metadata to organize your FeatureGroup. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureGroup(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
func (o LookupFeatureGroupResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFeatureGroupResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the FeatureGroup. Format: `projects/{project}/locations/{location}/featureGroups/{featureGroup}`
func (o LookupFeatureGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// Timestamp when this FeatureGroup was last updated.
func (o LookupFeatureGroupResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureGroupResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFeatureGroupResultOutput{})
}
