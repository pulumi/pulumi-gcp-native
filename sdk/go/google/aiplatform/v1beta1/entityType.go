// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new EntityType in a given Featurestore.
type EntityType struct {
	pulumi.CustomResourceState

	// Timestamp when this EntityType was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Description of the EntityType.
	Description pulumi.StringOutput `pulumi:"description"`
	// Required. The ID to use for the EntityType, which will become the final component of the EntityType's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a featurestore.
	EntityTypeId pulumi.StringOutput `pulumi:"entityTypeId"`
	// Optional. Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag           pulumi.StringOutput `pulumi:"etag"`
	FeaturestoreId pulumi.StringOutput `pulumi:"featurestoreId"`
	// Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one EntityType (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Optional. The default monitoring configuration for all Features with value type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this EntityType. If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
	MonitoringConfig GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigResponseOutput `pulumi:"monitoringConfig"`
	// Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore.
	Name pulumi.StringOutput `pulumi:"name"`
	// Optional. Config for data retention policy in offline storage. TTL in days for feature values that will be stored in offline storage. The Feature Store offline storage periodically removes obsolete feature values older than `offline_storage_ttl_days` since the feature generation time. If unset (or explicitly set to 0), default to 4000 days TTL.
	OfflineStorageTtlDays pulumi.IntOutput    `pulumi:"offlineStorageTtlDays"`
	Project               pulumi.StringOutput `pulumi:"project"`
	// Timestamp when this EntityType was most recently updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewEntityType registers a new resource with the given unique name, arguments, and options.
func NewEntityType(ctx *pulumi.Context,
	name string, args *EntityTypeArgs, opts ...pulumi.ResourceOption) (*EntityType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EntityTypeId == nil {
		return nil, errors.New("invalid value for required argument 'EntityTypeId'")
	}
	if args.FeaturestoreId == nil {
		return nil, errors.New("invalid value for required argument 'FeaturestoreId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"entityTypeId",
		"featurestoreId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EntityType
	err := ctx.RegisterResource("google-native:aiplatform/v1beta1:EntityType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEntityType gets an existing EntityType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEntityType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EntityTypeState, opts ...pulumi.ResourceOption) (*EntityType, error) {
	var resource EntityType
	err := ctx.ReadResource("google-native:aiplatform/v1beta1:EntityType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EntityType resources.
type entityTypeState struct {
}

type EntityTypeState struct {
}

func (EntityTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*entityTypeState)(nil)).Elem()
}

type entityTypeArgs struct {
	// Optional. Description of the EntityType.
	Description *string `pulumi:"description"`
	// Required. The ID to use for the EntityType, which will become the final component of the EntityType's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a featurestore.
	EntityTypeId string `pulumi:"entityTypeId"`
	// Optional. Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag           *string `pulumi:"etag"`
	FeaturestoreId string  `pulumi:"featurestoreId"`
	// Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one EntityType (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// Optional. The default monitoring configuration for all Features with value type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this EntityType. If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
	MonitoringConfig *GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig `pulumi:"monitoringConfig"`
	// Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore.
	Name *string `pulumi:"name"`
	// Optional. Config for data retention policy in offline storage. TTL in days for feature values that will be stored in offline storage. The Feature Store offline storage periodically removes obsolete feature values older than `offline_storage_ttl_days` since the feature generation time. If unset (or explicitly set to 0), default to 4000 days TTL.
	OfflineStorageTtlDays *int    `pulumi:"offlineStorageTtlDays"`
	Project               *string `pulumi:"project"`
}

// The set of arguments for constructing a EntityType resource.
type EntityTypeArgs struct {
	// Optional. Description of the EntityType.
	Description pulumi.StringPtrInput
	// Required. The ID to use for the EntityType, which will become the final component of the EntityType's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a featurestore.
	EntityTypeId pulumi.StringInput
	// Optional. Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag           pulumi.StringPtrInput
	FeaturestoreId pulumi.StringInput
	// Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one EntityType (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// Optional. The default monitoring configuration for all Features with value type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this EntityType. If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
	MonitoringConfig GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigPtrInput
	// Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore.
	Name pulumi.StringPtrInput
	// Optional. Config for data retention policy in offline storage. TTL in days for feature values that will be stored in offline storage. The Feature Store offline storage periodically removes obsolete feature values older than `offline_storage_ttl_days` since the feature generation time. If unset (or explicitly set to 0), default to 4000 days TTL.
	OfflineStorageTtlDays pulumi.IntPtrInput
	Project               pulumi.StringPtrInput
}

func (EntityTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*entityTypeArgs)(nil)).Elem()
}

type EntityTypeInput interface {
	pulumi.Input

	ToEntityTypeOutput() EntityTypeOutput
	ToEntityTypeOutputWithContext(ctx context.Context) EntityTypeOutput
}

func (*EntityType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityType)(nil)).Elem()
}

func (i *EntityType) ToEntityTypeOutput() EntityTypeOutput {
	return i.ToEntityTypeOutputWithContext(context.Background())
}

func (i *EntityType) ToEntityTypeOutputWithContext(ctx context.Context) EntityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityTypeOutput)
}

type EntityTypeOutput struct{ *pulumi.OutputState }

func (EntityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityType)(nil)).Elem()
}

func (o EntityTypeOutput) ToEntityTypeOutput() EntityTypeOutput {
	return o
}

func (o EntityTypeOutput) ToEntityTypeOutputWithContext(ctx context.Context) EntityTypeOutput {
	return o
}

// Timestamp when this EntityType was created.
func (o EntityTypeOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *EntityType) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of the EntityType.
func (o EntityTypeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *EntityType) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Required. The ID to use for the EntityType, which will become the final component of the EntityType's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a featurestore.
func (o EntityTypeOutput) EntityTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *EntityType) pulumi.StringOutput { return v.EntityTypeId }).(pulumi.StringOutput)
}

// Optional. Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
func (o EntityTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *EntityType) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o EntityTypeOutput) FeaturestoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *EntityType) pulumi.StringOutput { return v.FeaturestoreId }).(pulumi.StringOutput)
}

// Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one EntityType (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
func (o EntityTypeOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EntityType) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o EntityTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *EntityType) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Optional. The default monitoring configuration for all Features with value type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this EntityType. If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
func (o EntityTypeOutput) MonitoringConfig() GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigResponseOutput {
	return o.ApplyT(func(v *EntityType) GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigResponseOutput {
		return v.MonitoringConfig
	}).(GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigResponseOutput)
}

// Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore.
func (o EntityTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EntityType) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional. Config for data retention policy in offline storage. TTL in days for feature values that will be stored in offline storage. The Feature Store offline storage periodically removes obsolete feature values older than `offline_storage_ttl_days` since the feature generation time. If unset (or explicitly set to 0), default to 4000 days TTL.
func (o EntityTypeOutput) OfflineStorageTtlDays() pulumi.IntOutput {
	return o.ApplyT(func(v *EntityType) pulumi.IntOutput { return v.OfflineStorageTtlDays }).(pulumi.IntOutput)
}

func (o EntityTypeOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *EntityType) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Timestamp when this EntityType was most recently updated.
func (o EntityTypeOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *EntityType) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EntityTypeInput)(nil)).Elem(), &EntityType{})
	pulumi.RegisterOutputType(EntityTypeOutput{})
}
