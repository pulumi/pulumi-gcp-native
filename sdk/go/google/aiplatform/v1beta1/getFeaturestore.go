// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets details of a single Featurestore.
func LookupFeaturestore(ctx *pulumi.Context, args *LookupFeaturestoreArgs, opts ...pulumi.InvokeOption) (*LookupFeaturestoreResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFeaturestoreResult
	err := ctx.Invoke("google-native:aiplatform/v1beta1:getFeaturestore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFeaturestoreArgs struct {
	FeaturestoreId string  `pulumi:"featurestoreId"`
	Location       string  `pulumi:"location"`
	Project        *string `pulumi:"project"`
}

type LookupFeaturestoreResult struct {
	// Timestamp when this Featurestore was created.
	CreateTime string `pulumi:"createTime"`
	// Optional. Customer-managed encryption key spec for data storage. If set, both of the online and offline data storage will be secured by this key.
	EncryptionSpec GoogleCloudAiplatformV1beta1EncryptionSpecResponse `pulumi:"encryptionSpec"`
	// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag string `pulumi:"etag"`
	// Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Featurestore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels map[string]string `pulumi:"labels"`
	// Name of the Featurestore. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`
	Name string `pulumi:"name"`
	// Optional. Config for online storage resources. The field should not co-exist with the field of `OnlineStoreReplicationConfig`. If both of it and OnlineStoreReplicationConfig are unset, the feature store will not have an online store and cannot be used for online serving.
	OnlineServingConfig GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigResponse `pulumi:"onlineServingConfig"`
	// Optional. TTL in days for feature values that will be stored in online serving storage. The Feature Store online storage periodically removes obsolete feature values older than `online_storage_ttl_days` since the feature generation time. Note that `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each EntityType under a featurestore. If not set, default to 4000 days
	OnlineStorageTtlDays int `pulumi:"onlineStorageTtlDays"`
	// State of the featurestore.
	State string `pulumi:"state"`
	// Timestamp when this Featurestore was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupFeaturestoreOutput(ctx *pulumi.Context, args LookupFeaturestoreOutputArgs, opts ...pulumi.InvokeOption) LookupFeaturestoreResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFeaturestoreResult, error) {
			args := v.(LookupFeaturestoreArgs)
			r, err := LookupFeaturestore(ctx, &args, opts...)
			var s LookupFeaturestoreResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFeaturestoreResultOutput)
}

type LookupFeaturestoreOutputArgs struct {
	FeaturestoreId pulumi.StringInput    `pulumi:"featurestoreId"`
	Location       pulumi.StringInput    `pulumi:"location"`
	Project        pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupFeaturestoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeaturestoreArgs)(nil)).Elem()
}

type LookupFeaturestoreResultOutput struct{ *pulumi.OutputState }

func (LookupFeaturestoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeaturestoreResult)(nil)).Elem()
}

func (o LookupFeaturestoreResultOutput) ToLookupFeaturestoreResultOutput() LookupFeaturestoreResultOutput {
	return o
}

func (o LookupFeaturestoreResultOutput) ToLookupFeaturestoreResultOutputWithContext(ctx context.Context) LookupFeaturestoreResultOutput {
	return o
}

func (o LookupFeaturestoreResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupFeaturestoreResult] {
	return pulumix.Output[LookupFeaturestoreResult]{
		OutputState: o.OutputState,
	}
}

// Timestamp when this Featurestore was created.
func (o LookupFeaturestoreResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeaturestoreResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Customer-managed encryption key spec for data storage. If set, both of the online and offline data storage will be secured by this key.
func (o LookupFeaturestoreResultOutput) EncryptionSpec() GoogleCloudAiplatformV1beta1EncryptionSpecResponseOutput {
	return o.ApplyT(func(v LookupFeaturestoreResult) GoogleCloudAiplatformV1beta1EncryptionSpecResponse {
		return v.EncryptionSpec
	}).(GoogleCloudAiplatformV1beta1EncryptionSpecResponseOutput)
}

// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
func (o LookupFeaturestoreResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeaturestoreResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Featurestore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
func (o LookupFeaturestoreResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFeaturestoreResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the Featurestore. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`
func (o LookupFeaturestoreResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeaturestoreResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. Config for online storage resources. The field should not co-exist with the field of `OnlineStoreReplicationConfig`. If both of it and OnlineStoreReplicationConfig are unset, the feature store will not have an online store and cannot be used for online serving.
func (o LookupFeaturestoreResultOutput) OnlineServingConfig() GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigResponseOutput {
	return o.ApplyT(func(v LookupFeaturestoreResult) GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigResponse {
		return v.OnlineServingConfig
	}).(GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigResponseOutput)
}

// Optional. TTL in days for feature values that will be stored in online serving storage. The Feature Store online storage periodically removes obsolete feature values older than `online_storage_ttl_days` since the feature generation time. Note that `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each EntityType under a featurestore. If not set, default to 4000 days
func (o LookupFeaturestoreResultOutput) OnlineStorageTtlDays() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFeaturestoreResult) int { return v.OnlineStorageTtlDays }).(pulumi.IntOutput)
}

// State of the featurestore.
func (o LookupFeaturestoreResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeaturestoreResult) string { return v.State }).(pulumi.StringOutput)
}

// Timestamp when this Featurestore was last updated.
func (o LookupFeaturestoreResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeaturestoreResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFeaturestoreResultOutput{})
}
