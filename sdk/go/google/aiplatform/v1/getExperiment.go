// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a TensorboardExperiment.
func LookupExperiment(ctx *pulumi.Context, args *LookupExperimentArgs, opts ...pulumi.InvokeOption) (*LookupExperimentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupExperimentResult
	err := ctx.Invoke("google-native:aiplatform/v1:getExperiment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupExperimentArgs struct {
	ExperimentId  string  `pulumi:"experimentId"`
	Location      string  `pulumi:"location"`
	Project       *string `pulumi:"project"`
	TensorboardId string  `pulumi:"tensorboardId"`
}

type LookupExperimentResult struct {
	// Timestamp when this TensorboardExperiment was created.
	CreateTime string `pulumi:"createTime"`
	// Description of this TensorboardExperiment.
	Description string `pulumi:"description"`
	// User provided name of this TensorboardExperiment.
	DisplayName string `pulumi:"displayName"`
	// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag string `pulumi:"etag"`
	// The labels with user-defined metadata to organize your TensorboardExperiment. Label keys and values cannot be longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `aiplatform.googleapis.com/` and are immutable. The following system labels exist for each Dataset: * `aiplatform.googleapis.com/dataset_metadata_schema`: output only. Its value is the metadata_schema's title.
	Labels map[string]string `pulumi:"labels"`
	// Name of the TensorboardExperiment. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
	Name string `pulumi:"name"`
	// Immutable. Source of the TensorboardExperiment. Example: a custom training job.
	Source string `pulumi:"source"`
	// Timestamp when this TensorboardExperiment was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupExperimentOutput(ctx *pulumi.Context, args LookupExperimentOutputArgs, opts ...pulumi.InvokeOption) LookupExperimentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupExperimentResult, error) {
			args := v.(LookupExperimentArgs)
			r, err := LookupExperiment(ctx, &args, opts...)
			var s LookupExperimentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupExperimentResultOutput)
}

type LookupExperimentOutputArgs struct {
	ExperimentId  pulumi.StringInput    `pulumi:"experimentId"`
	Location      pulumi.StringInput    `pulumi:"location"`
	Project       pulumi.StringPtrInput `pulumi:"project"`
	TensorboardId pulumi.StringInput    `pulumi:"tensorboardId"`
}

func (LookupExperimentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExperimentArgs)(nil)).Elem()
}

type LookupExperimentResultOutput struct{ *pulumi.OutputState }

func (LookupExperimentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExperimentResult)(nil)).Elem()
}

func (o LookupExperimentResultOutput) ToLookupExperimentResultOutput() LookupExperimentResultOutput {
	return o
}

func (o LookupExperimentResultOutput) ToLookupExperimentResultOutputWithContext(ctx context.Context) LookupExperimentResultOutput {
	return o
}

// Timestamp when this TensorboardExperiment was created.
func (o LookupExperimentResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of this TensorboardExperiment.
func (o LookupExperimentResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.Description }).(pulumi.StringOutput)
}

// User provided name of this TensorboardExperiment.
func (o LookupExperimentResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
func (o LookupExperimentResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The labels with user-defined metadata to organize your TensorboardExperiment. Label keys and values cannot be longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `aiplatform.googleapis.com/` and are immutable. The following system labels exist for each Dataset: * `aiplatform.googleapis.com/dataset_metadata_schema`: output only. Its value is the metadata_schema's title.
func (o LookupExperimentResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupExperimentResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the TensorboardExperiment. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
func (o LookupExperimentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.Name }).(pulumi.StringOutput)
}

// Immutable. Source of the TensorboardExperiment. Example: a custom training job.
func (o LookupExperimentResultOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.Source }).(pulumi.StringOutput)
}

// Timestamp when this TensorboardExperiment was last updated.
func (o LookupExperimentResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperimentResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExperimentResultOutput{})
}
