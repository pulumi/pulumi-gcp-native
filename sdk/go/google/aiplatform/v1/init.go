// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "google-native:aiplatform/v1:Artifact":
		r = &Artifact{}
	case "google-native:aiplatform/v1:BatchPredictionJob":
		r = &BatchPredictionJob{}
	case "google-native:aiplatform/v1:Context":
		r = &Context{}
	case "google-native:aiplatform/v1:CustomJob":
		r = &CustomJob{}
	case "google-native:aiplatform/v1:DataLabelingJob":
		r = &DataLabelingJob{}
	case "google-native:aiplatform/v1:Dataset":
		r = &Dataset{}
	case "google-native:aiplatform/v1:DatasetVersion":
		r = &DatasetVersion{}
	case "google-native:aiplatform/v1:DeploymentResourcePool":
		r = &DeploymentResourcePool{}
	case "google-native:aiplatform/v1:Endpoint":
		r = &Endpoint{}
	case "google-native:aiplatform/v1:EntityType":
		r = &EntityType{}
	case "google-native:aiplatform/v1:Execution":
		r = &Execution{}
	case "google-native:aiplatform/v1:Experiment":
		r = &Experiment{}
	case "google-native:aiplatform/v1:FeatureGroup":
		r = &FeatureGroup{}
	case "google-native:aiplatform/v1:FeatureGroupFeature":
		r = &FeatureGroupFeature{}
	case "google-native:aiplatform/v1:FeatureOnlineStore":
		r = &FeatureOnlineStore{}
	case "google-native:aiplatform/v1:FeatureStoreFeature":
		r = &FeatureStoreFeature{}
	case "google-native:aiplatform/v1:FeatureView":
		r = &FeatureView{}
	case "google-native:aiplatform/v1:Featurestore":
		r = &Featurestore{}
	case "google-native:aiplatform/v1:FeaturestoreEntityTypeIamBinding":
		r = &FeaturestoreEntityTypeIamBinding{}
	case "google-native:aiplatform/v1:FeaturestoreEntityTypeIamMember":
		r = &FeaturestoreEntityTypeIamMember{}
	case "google-native:aiplatform/v1:FeaturestoreEntityTypeIamPolicy":
		r = &FeaturestoreEntityTypeIamPolicy{}
	case "google-native:aiplatform/v1:FeaturestoreIamBinding":
		r = &FeaturestoreIamBinding{}
	case "google-native:aiplatform/v1:FeaturestoreIamMember":
		r = &FeaturestoreIamMember{}
	case "google-native:aiplatform/v1:FeaturestoreIamPolicy":
		r = &FeaturestoreIamPolicy{}
	case "google-native:aiplatform/v1:HyperparameterTuningJob":
		r = &HyperparameterTuningJob{}
	case "google-native:aiplatform/v1:Index":
		r = &Index{}
	case "google-native:aiplatform/v1:IndexEndpoint":
		r = &IndexEndpoint{}
	case "google-native:aiplatform/v1:MetadataSchema":
		r = &MetadataSchema{}
	case "google-native:aiplatform/v1:MetadataStore":
		r = &MetadataStore{}
	case "google-native:aiplatform/v1:ModelDeploymentMonitoringJob":
		r = &ModelDeploymentMonitoringJob{}
	case "google-native:aiplatform/v1:NasJob":
		r = &NasJob{}
	case "google-native:aiplatform/v1:NotebookRuntimeTemplate":
		r = &NotebookRuntimeTemplate{}
	case "google-native:aiplatform/v1:NotebookRuntimeTemplateIamBinding":
		r = &NotebookRuntimeTemplateIamBinding{}
	case "google-native:aiplatform/v1:NotebookRuntimeTemplateIamMember":
		r = &NotebookRuntimeTemplateIamMember{}
	case "google-native:aiplatform/v1:NotebookRuntimeTemplateIamPolicy":
		r = &NotebookRuntimeTemplateIamPolicy{}
	case "google-native:aiplatform/v1:PipelineJob":
		r = &PipelineJob{}
	case "google-native:aiplatform/v1:Run":
		r = &Run{}
	case "google-native:aiplatform/v1:Schedule":
		r = &Schedule{}
	case "google-native:aiplatform/v1:SpecialistPool":
		r = &SpecialistPool{}
	case "google-native:aiplatform/v1:Study":
		r = &Study{}
	case "google-native:aiplatform/v1:Tensorboard":
		r = &Tensorboard{}
	case "google-native:aiplatform/v1:TimeSeries":
		r = &TimeSeries{}
	case "google-native:aiplatform/v1:TrainingPipeline":
		r = &TrainingPipeline{}
	case "google-native:aiplatform/v1:Trial":
		r = &Trial{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"google-native",
		"aiplatform/v1",
		&module{version},
	)
}
