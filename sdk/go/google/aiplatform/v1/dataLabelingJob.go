// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a DataLabelingJob.
// Auto-naming is currently not supported for this resource.
type DataLabelingJob struct {
	pulumi.CustomResourceState

	// Parameters that configure the active learning pipeline. Active learning will label the data incrementally via several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
	ActiveLearningConfig GoogleCloudAiplatformV1ActiveLearningConfigResponseOutput `pulumi:"activeLearningConfig"`
	// Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	AnnotationLabels pulumi.StringMapOutput `pulumi:"annotationLabels"`
	// Timestamp when this DataLabelingJob was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Estimated cost(in US dollars) that the DataLabelingJob has incurred to date.
	CurrentSpend GoogleTypeMoneyResponseOutput `pulumi:"currentSpend"`
	// Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
	Datasets pulumi.StringArrayOutput `pulumi:"datasets"`
	// The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Customer-managed encryption key spec for a DataLabelingJob. If set, this DataLabelingJob will be secured by this key. Note: Annotations created in the DataLabelingJob are associated with the EncryptionSpec of the Dataset they are exported to.
	EncryptionSpec GoogleCloudAiplatformV1EncryptionSpecResponseOutput `pulumi:"encryptionSpec"`
	// DataLabelingJob errors. It is only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
	Error GoogleRpcStatusResponseOutput `pulumi:"error"`
	// Input config parameters for the DataLabelingJob.
	Inputs pulumi.AnyOutput `pulumi:"inputs"`
	// Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
	InputsSchemaUri pulumi.StringOutput `pulumi:"inputsSchemaUri"`
	// The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
	InstructionUri pulumi.StringOutput `pulumi:"instructionUri"`
	// Number of labelers to work on each DataItem.
	LabelerCount pulumi.IntOutput `pulumi:"labelerCount"`
	// Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.
	LabelingProgress pulumi.IntOutput `pulumi:"labelingProgress"`
	// The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Resource name of the DataLabelingJob.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The SpecialistPools' resource names associated with this job.
	SpecialistPools pulumi.StringArrayOutput `pulumi:"specialistPools"`
	// The detailed state of the job.
	State pulumi.StringOutput `pulumi:"state"`
	// Timestamp when this DataLabelingJob was updated most recently.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewDataLabelingJob registers a new resource with the given unique name, arguments, and options.
func NewDataLabelingJob(ctx *pulumi.Context,
	name string, args *DataLabelingJobArgs, opts ...pulumi.ResourceOption) (*DataLabelingJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Datasets == nil {
		return nil, errors.New("invalid value for required argument 'Datasets'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Inputs == nil {
		return nil, errors.New("invalid value for required argument 'Inputs'")
	}
	if args.InputsSchemaUri == nil {
		return nil, errors.New("invalid value for required argument 'InputsSchemaUri'")
	}
	if args.InstructionUri == nil {
		return nil, errors.New("invalid value for required argument 'InstructionUri'")
	}
	if args.LabelerCount == nil {
		return nil, errors.New("invalid value for required argument 'LabelerCount'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DataLabelingJob
	err := ctx.RegisterResource("google-native:aiplatform/v1:DataLabelingJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataLabelingJob gets an existing DataLabelingJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataLabelingJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataLabelingJobState, opts ...pulumi.ResourceOption) (*DataLabelingJob, error) {
	var resource DataLabelingJob
	err := ctx.ReadResource("google-native:aiplatform/v1:DataLabelingJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataLabelingJob resources.
type dataLabelingJobState struct {
}

type DataLabelingJobState struct {
}

func (DataLabelingJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataLabelingJobState)(nil)).Elem()
}

type dataLabelingJobArgs struct {
	// Parameters that configure the active learning pipeline. Active learning will label the data incrementally via several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
	ActiveLearningConfig *GoogleCloudAiplatformV1ActiveLearningConfig `pulumi:"activeLearningConfig"`
	// Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	AnnotationLabels map[string]string `pulumi:"annotationLabels"`
	// Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
	Datasets []string `pulumi:"datasets"`
	// The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
	DisplayName string `pulumi:"displayName"`
	// Customer-managed encryption key spec for a DataLabelingJob. If set, this DataLabelingJob will be secured by this key. Note: Annotations created in the DataLabelingJob are associated with the EncryptionSpec of the Dataset they are exported to.
	EncryptionSpec *GoogleCloudAiplatformV1EncryptionSpec `pulumi:"encryptionSpec"`
	// Input config parameters for the DataLabelingJob.
	Inputs interface{} `pulumi:"inputs"`
	// Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
	InputsSchemaUri string `pulumi:"inputsSchemaUri"`
	// The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
	InstructionUri string `pulumi:"instructionUri"`
	// Number of labelers to work on each DataItem.
	LabelerCount int `pulumi:"labelerCount"`
	// The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	Project  *string           `pulumi:"project"`
	// The SpecialistPools' resource names associated with this job.
	SpecialistPools []string `pulumi:"specialistPools"`
}

// The set of arguments for constructing a DataLabelingJob resource.
type DataLabelingJobArgs struct {
	// Parameters that configure the active learning pipeline. Active learning will label the data incrementally via several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
	ActiveLearningConfig GoogleCloudAiplatformV1ActiveLearningConfigPtrInput
	// Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	AnnotationLabels pulumi.StringMapInput
	// Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
	Datasets pulumi.StringArrayInput
	// The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
	DisplayName pulumi.StringInput
	// Customer-managed encryption key spec for a DataLabelingJob. If set, this DataLabelingJob will be secured by this key. Note: Annotations created in the DataLabelingJob are associated with the EncryptionSpec of the Dataset they are exported to.
	EncryptionSpec GoogleCloudAiplatformV1EncryptionSpecPtrInput
	// Input config parameters for the DataLabelingJob.
	Inputs pulumi.Input
	// Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
	InputsSchemaUri pulumi.StringInput
	// The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
	InstructionUri pulumi.StringInput
	// Number of labelers to work on each DataItem.
	LabelerCount pulumi.IntInput
	// The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// The SpecialistPools' resource names associated with this job.
	SpecialistPools pulumi.StringArrayInput
}

func (DataLabelingJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataLabelingJobArgs)(nil)).Elem()
}

type DataLabelingJobInput interface {
	pulumi.Input

	ToDataLabelingJobOutput() DataLabelingJobOutput
	ToDataLabelingJobOutputWithContext(ctx context.Context) DataLabelingJobOutput
}

func (*DataLabelingJob) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLabelingJob)(nil)).Elem()
}

func (i *DataLabelingJob) ToDataLabelingJobOutput() DataLabelingJobOutput {
	return i.ToDataLabelingJobOutputWithContext(context.Background())
}

func (i *DataLabelingJob) ToDataLabelingJobOutputWithContext(ctx context.Context) DataLabelingJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLabelingJobOutput)
}

type DataLabelingJobOutput struct{ *pulumi.OutputState }

func (DataLabelingJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLabelingJob)(nil)).Elem()
}

func (o DataLabelingJobOutput) ToDataLabelingJobOutput() DataLabelingJobOutput {
	return o
}

func (o DataLabelingJobOutput) ToDataLabelingJobOutputWithContext(ctx context.Context) DataLabelingJobOutput {
	return o
}

// Parameters that configure the active learning pipeline. Active learning will label the data incrementally via several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
func (o DataLabelingJobOutput) ActiveLearningConfig() GoogleCloudAiplatformV1ActiveLearningConfigResponseOutput {
	return o.ApplyT(func(v *DataLabelingJob) GoogleCloudAiplatformV1ActiveLearningConfigResponseOutput {
		return v.ActiveLearningConfig
	}).(GoogleCloudAiplatformV1ActiveLearningConfigResponseOutput)
}

// Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
func (o DataLabelingJobOutput) AnnotationLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.StringMapOutput { return v.AnnotationLabels }).(pulumi.StringMapOutput)
}

// Timestamp when this DataLabelingJob was created.
func (o DataLabelingJobOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Estimated cost(in US dollars) that the DataLabelingJob has incurred to date.
func (o DataLabelingJobOutput) CurrentSpend() GoogleTypeMoneyResponseOutput {
	return o.ApplyT(func(v *DataLabelingJob) GoogleTypeMoneyResponseOutput { return v.CurrentSpend }).(GoogleTypeMoneyResponseOutput)
}

// Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
func (o DataLabelingJobOutput) Datasets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.StringArrayOutput { return v.Datasets }).(pulumi.StringArrayOutput)
}

// The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
func (o DataLabelingJobOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Customer-managed encryption key spec for a DataLabelingJob. If set, this DataLabelingJob will be secured by this key. Note: Annotations created in the DataLabelingJob are associated with the EncryptionSpec of the Dataset they are exported to.
func (o DataLabelingJobOutput) EncryptionSpec() GoogleCloudAiplatformV1EncryptionSpecResponseOutput {
	return o.ApplyT(func(v *DataLabelingJob) GoogleCloudAiplatformV1EncryptionSpecResponseOutput { return v.EncryptionSpec }).(GoogleCloudAiplatformV1EncryptionSpecResponseOutput)
}

// DataLabelingJob errors. It is only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
func (o DataLabelingJobOutput) Error() GoogleRpcStatusResponseOutput {
	return o.ApplyT(func(v *DataLabelingJob) GoogleRpcStatusResponseOutput { return v.Error }).(GoogleRpcStatusResponseOutput)
}

// Input config parameters for the DataLabelingJob.
func (o DataLabelingJobOutput) Inputs() pulumi.AnyOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.AnyOutput { return v.Inputs }).(pulumi.AnyOutput)
}

// Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
func (o DataLabelingJobOutput) InputsSchemaUri() pulumi.StringOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.StringOutput { return v.InputsSchemaUri }).(pulumi.StringOutput)
}

// The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
func (o DataLabelingJobOutput) InstructionUri() pulumi.StringOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.StringOutput { return v.InstructionUri }).(pulumi.StringOutput)
}

// Number of labelers to work on each DataItem.
func (o DataLabelingJobOutput) LabelerCount() pulumi.IntOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.IntOutput { return v.LabelerCount }).(pulumi.IntOutput)
}

// Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.
func (o DataLabelingJobOutput) LabelingProgress() pulumi.IntOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.IntOutput { return v.LabelingProgress }).(pulumi.IntOutput)
}

// The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title.
func (o DataLabelingJobOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o DataLabelingJobOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Resource name of the DataLabelingJob.
func (o DataLabelingJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DataLabelingJobOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The SpecialistPools' resource names associated with this job.
func (o DataLabelingJobOutput) SpecialistPools() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.StringArrayOutput { return v.SpecialistPools }).(pulumi.StringArrayOutput)
}

// The detailed state of the job.
func (o DataLabelingJobOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Timestamp when this DataLabelingJob was updated most recently.
func (o DataLabelingJobOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DataLabelingJob) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataLabelingJobInput)(nil)).Elem(), &DataLabelingJob{})
	pulumi.RegisterOutputType(DataLabelingJobOutput{})
}
