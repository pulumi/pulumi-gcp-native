// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a Tensorboard.
// Auto-naming is currently not supported for this resource.
type Tensorboard struct {
	pulumi.CustomResourceState

	// Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a '/'.
	BlobStoragePathPrefix pulumi.StringOutput `pulumi:"blobStoragePathPrefix"`
	// Timestamp when this Tensorboard was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Description of this Tensorboard.
	Description pulumi.StringOutput `pulumi:"description"`
	// User provided name of this Tensorboard.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Customer-managed encryption key spec for a Tensorboard. If set, this Tensorboard and all sub-resources of this Tensorboard will be secured by this key.
	EncryptionSpec GoogleCloudAiplatformV1EncryptionSpecResponseOutput `pulumi:"encryptionSpec"`
	// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default.
	IsDefault pulumi.BoolOutput `pulumi:"isDefault"`
	// The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The number of Runs stored in this Tensorboard.
	RunCount pulumi.IntOutput `pulumi:"runCount"`
	// Timestamp when this Tensorboard was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewTensorboard registers a new resource with the given unique name, arguments, and options.
func NewTensorboard(ctx *pulumi.Context,
	name string, args *TensorboardArgs, opts ...pulumi.ResourceOption) (*Tensorboard, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Tensorboard
	err := ctx.RegisterResource("google-native:aiplatform/v1:Tensorboard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTensorboard gets an existing Tensorboard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTensorboard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TensorboardState, opts ...pulumi.ResourceOption) (*Tensorboard, error) {
	var resource Tensorboard
	err := ctx.ReadResource("google-native:aiplatform/v1:Tensorboard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Tensorboard resources.
type tensorboardState struct {
}

type TensorboardState struct {
}

func (TensorboardState) ElementType() reflect.Type {
	return reflect.TypeOf((*tensorboardState)(nil)).Elem()
}

type tensorboardArgs struct {
	// Description of this Tensorboard.
	Description *string `pulumi:"description"`
	// User provided name of this Tensorboard.
	DisplayName string `pulumi:"displayName"`
	// Customer-managed encryption key spec for a Tensorboard. If set, this Tensorboard and all sub-resources of this Tensorboard will be secured by this key.
	EncryptionSpec *GoogleCloudAiplatformV1EncryptionSpec `pulumi:"encryptionSpec"`
	// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag *string `pulumi:"etag"`
	// Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default.
	IsDefault *bool `pulumi:"isDefault"`
	// The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	Project  *string           `pulumi:"project"`
}

// The set of arguments for constructing a Tensorboard resource.
type TensorboardArgs struct {
	// Description of this Tensorboard.
	Description pulumi.StringPtrInput
	// User provided name of this Tensorboard.
	DisplayName pulumi.StringInput
	// Customer-managed encryption key spec for a Tensorboard. If set, this Tensorboard and all sub-resources of this Tensorboard will be secured by this key.
	EncryptionSpec GoogleCloudAiplatformV1EncryptionSpecPtrInput
	// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag pulumi.StringPtrInput
	// Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default.
	IsDefault pulumi.BoolPtrInput
	// The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
}

func (TensorboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tensorboardArgs)(nil)).Elem()
}

type TensorboardInput interface {
	pulumi.Input

	ToTensorboardOutput() TensorboardOutput
	ToTensorboardOutputWithContext(ctx context.Context) TensorboardOutput
}

func (*Tensorboard) ElementType() reflect.Type {
	return reflect.TypeOf((**Tensorboard)(nil)).Elem()
}

func (i *Tensorboard) ToTensorboardOutput() TensorboardOutput {
	return i.ToTensorboardOutputWithContext(context.Background())
}

func (i *Tensorboard) ToTensorboardOutputWithContext(ctx context.Context) TensorboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorboardOutput)
}

func (i *Tensorboard) ToOutput(ctx context.Context) pulumix.Output[*Tensorboard] {
	return pulumix.Output[*Tensorboard]{
		OutputState: i.ToTensorboardOutputWithContext(ctx).OutputState,
	}
}

type TensorboardOutput struct{ *pulumi.OutputState }

func (TensorboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Tensorboard)(nil)).Elem()
}

func (o TensorboardOutput) ToTensorboardOutput() TensorboardOutput {
	return o
}

func (o TensorboardOutput) ToTensorboardOutputWithContext(ctx context.Context) TensorboardOutput {
	return o
}

func (o TensorboardOutput) ToOutput(ctx context.Context) pulumix.Output[*Tensorboard] {
	return pulumix.Output[*Tensorboard]{
		OutputState: o.OutputState,
	}
}

// Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a '/'.
func (o TensorboardOutput) BlobStoragePathPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *Tensorboard) pulumi.StringOutput { return v.BlobStoragePathPrefix }).(pulumi.StringOutput)
}

// Timestamp when this Tensorboard was created.
func (o TensorboardOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Tensorboard) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of this Tensorboard.
func (o TensorboardOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Tensorboard) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// User provided name of this Tensorboard.
func (o TensorboardOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Tensorboard) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Customer-managed encryption key spec for a Tensorboard. If set, this Tensorboard and all sub-resources of this Tensorboard will be secured by this key.
func (o TensorboardOutput) EncryptionSpec() GoogleCloudAiplatformV1EncryptionSpecResponseOutput {
	return o.ApplyT(func(v *Tensorboard) GoogleCloudAiplatformV1EncryptionSpecResponseOutput { return v.EncryptionSpec }).(GoogleCloudAiplatformV1EncryptionSpecResponseOutput)
}

// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
func (o TensorboardOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *Tensorboard) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default.
func (o TensorboardOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v *Tensorboard) pulumi.BoolOutput { return v.IsDefault }).(pulumi.BoolOutput)
}

// The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
func (o TensorboardOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Tensorboard) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o TensorboardOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Tensorboard) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
func (o TensorboardOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Tensorboard) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o TensorboardOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Tensorboard) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The number of Runs stored in this Tensorboard.
func (o TensorboardOutput) RunCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Tensorboard) pulumi.IntOutput { return v.RunCount }).(pulumi.IntOutput)
}

// Timestamp when this Tensorboard was last updated.
func (o TensorboardOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Tensorboard) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TensorboardInput)(nil)).Elem(), &Tensorboard{})
	pulumi.RegisterOutputType(TensorboardOutput{})
}
