// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single EntityType.
func LookupEntityType(ctx *pulumi.Context, args *LookupEntityTypeArgs, opts ...pulumi.InvokeOption) (*LookupEntityTypeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEntityTypeResult
	err := ctx.Invoke("google-native:aiplatform/v1:getEntityType", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEntityTypeArgs struct {
	EntityTypeId   string  `pulumi:"entityTypeId"`
	FeaturestoreId string  `pulumi:"featurestoreId"`
	Location       string  `pulumi:"location"`
	Project        *string `pulumi:"project"`
}

type LookupEntityTypeResult struct {
	// Timestamp when this EntityType was created.
	CreateTime string `pulumi:"createTime"`
	// Optional. Description of the EntityType.
	Description string `pulumi:"description"`
	// Optional. Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag string `pulumi:"etag"`
	// Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one EntityType (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels map[string]string `pulumi:"labels"`
	// Optional. The default monitoring configuration for all Features with value type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this EntityType. If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
	MonitoringConfig GoogleCloudAiplatformV1FeaturestoreMonitoringConfigResponse `pulumi:"monitoringConfig"`
	// Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore.
	Name string `pulumi:"name"`
	// Optional. Config for data retention policy in offline storage. TTL in days for feature values that will be stored in offline storage. The Feature Store offline storage periodically removes obsolete feature values older than `offline_storage_ttl_days` since the feature generation time. If unset (or explicitly set to 0), default to 4000 days TTL.
	OfflineStorageTtlDays int `pulumi:"offlineStorageTtlDays"`
	// Timestamp when this EntityType was most recently updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupEntityTypeOutput(ctx *pulumi.Context, args LookupEntityTypeOutputArgs, opts ...pulumi.InvokeOption) LookupEntityTypeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEntityTypeResult, error) {
			args := v.(LookupEntityTypeArgs)
			r, err := LookupEntityType(ctx, &args, opts...)
			var s LookupEntityTypeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEntityTypeResultOutput)
}

type LookupEntityTypeOutputArgs struct {
	EntityTypeId   pulumi.StringInput    `pulumi:"entityTypeId"`
	FeaturestoreId pulumi.StringInput    `pulumi:"featurestoreId"`
	Location       pulumi.StringInput    `pulumi:"location"`
	Project        pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupEntityTypeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntityTypeArgs)(nil)).Elem()
}

type LookupEntityTypeResultOutput struct{ *pulumi.OutputState }

func (LookupEntityTypeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntityTypeResult)(nil)).Elem()
}

func (o LookupEntityTypeResultOutput) ToLookupEntityTypeResultOutput() LookupEntityTypeResultOutput {
	return o
}

func (o LookupEntityTypeResultOutput) ToLookupEntityTypeResultOutputWithContext(ctx context.Context) LookupEntityTypeResultOutput {
	return o
}

// Timestamp when this EntityType was created.
func (o LookupEntityTypeResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntityTypeResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of the EntityType.
func (o LookupEntityTypeResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntityTypeResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
func (o LookupEntityTypeResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntityTypeResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one EntityType (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
func (o LookupEntityTypeResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupEntityTypeResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Optional. The default monitoring configuration for all Features with value type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this EntityType. If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
func (o LookupEntityTypeResultOutput) MonitoringConfig() GoogleCloudAiplatformV1FeaturestoreMonitoringConfigResponseOutput {
	return o.ApplyT(func(v LookupEntityTypeResult) GoogleCloudAiplatformV1FeaturestoreMonitoringConfigResponse {
		return v.MonitoringConfig
	}).(GoogleCloudAiplatformV1FeaturestoreMonitoringConfigResponseOutput)
}

// Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore.
func (o LookupEntityTypeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntityTypeResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. Config for data retention policy in offline storage. TTL in days for feature values that will be stored in offline storage. The Feature Store offline storage periodically removes obsolete feature values older than `offline_storage_ttl_days` since the feature generation time. If unset (or explicitly set to 0), default to 4000 days TTL.
func (o LookupEntityTypeResultOutput) OfflineStorageTtlDays() pulumi.IntOutput {
	return o.ApplyT(func(v LookupEntityTypeResult) int { return v.OfflineStorageTtlDays }).(pulumi.IntOutput)
}

// Timestamp when this EntityType was most recently updated.
func (o LookupEntityTypeResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntityTypeResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEntityTypeResultOutput{})
}
