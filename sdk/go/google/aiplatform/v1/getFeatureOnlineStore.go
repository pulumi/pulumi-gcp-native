// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single FeatureOnlineStore.
func LookupFeatureOnlineStore(ctx *pulumi.Context, args *LookupFeatureOnlineStoreArgs, opts ...pulumi.InvokeOption) (*LookupFeatureOnlineStoreResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFeatureOnlineStoreResult
	err := ctx.Invoke("google-native:aiplatform/v1:getFeatureOnlineStore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFeatureOnlineStoreArgs struct {
	FeatureOnlineStoreId string  `pulumi:"featureOnlineStoreId"`
	Location             string  `pulumi:"location"`
	Project              *string `pulumi:"project"`
}

type LookupFeatureOnlineStoreResult struct {
	// Contains settings for the Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore.
	Bigtable GoogleCloudAiplatformV1FeatureOnlineStoreBigtableResponse `pulumi:"bigtable"`
	// Timestamp when this FeatureOnlineStore was created.
	CreateTime string `pulumi:"createTime"`
	// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag string `pulumi:"etag"`
	// Optional. The labels with user-defined metadata to organize your FeatureOnlineStore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels map[string]string `pulumi:"labels"`
	// Name of the FeatureOnlineStore. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`
	Name string `pulumi:"name"`
	// State of the featureOnlineStore.
	State string `pulumi:"state"`
	// Timestamp when this FeatureOnlineStore was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupFeatureOnlineStoreOutput(ctx *pulumi.Context, args LookupFeatureOnlineStoreOutputArgs, opts ...pulumi.InvokeOption) LookupFeatureOnlineStoreResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFeatureOnlineStoreResult, error) {
			args := v.(LookupFeatureOnlineStoreArgs)
			r, err := LookupFeatureOnlineStore(ctx, &args, opts...)
			var s LookupFeatureOnlineStoreResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFeatureOnlineStoreResultOutput)
}

type LookupFeatureOnlineStoreOutputArgs struct {
	FeatureOnlineStoreId pulumi.StringInput    `pulumi:"featureOnlineStoreId"`
	Location             pulumi.StringInput    `pulumi:"location"`
	Project              pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupFeatureOnlineStoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeatureOnlineStoreArgs)(nil)).Elem()
}

type LookupFeatureOnlineStoreResultOutput struct{ *pulumi.OutputState }

func (LookupFeatureOnlineStoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeatureOnlineStoreResult)(nil)).Elem()
}

func (o LookupFeatureOnlineStoreResultOutput) ToLookupFeatureOnlineStoreResultOutput() LookupFeatureOnlineStoreResultOutput {
	return o
}

func (o LookupFeatureOnlineStoreResultOutput) ToLookupFeatureOnlineStoreResultOutputWithContext(ctx context.Context) LookupFeatureOnlineStoreResultOutput {
	return o
}

// Contains settings for the Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore.
func (o LookupFeatureOnlineStoreResultOutput) Bigtable() GoogleCloudAiplatformV1FeatureOnlineStoreBigtableResponseOutput {
	return o.ApplyT(func(v LookupFeatureOnlineStoreResult) GoogleCloudAiplatformV1FeatureOnlineStoreBigtableResponse {
		return v.Bigtable
	}).(GoogleCloudAiplatformV1FeatureOnlineStoreBigtableResponseOutput)
}

// Timestamp when this FeatureOnlineStore was created.
func (o LookupFeatureOnlineStoreResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureOnlineStoreResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
func (o LookupFeatureOnlineStoreResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureOnlineStoreResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Optional. The labels with user-defined metadata to organize your FeatureOnlineStore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
func (o LookupFeatureOnlineStoreResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFeatureOnlineStoreResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the FeatureOnlineStore. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`
func (o LookupFeatureOnlineStoreResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureOnlineStoreResult) string { return v.Name }).(pulumi.StringOutput)
}

// State of the featureOnlineStore.
func (o LookupFeatureOnlineStoreResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureOnlineStoreResult) string { return v.State }).(pulumi.StringOutput)
}

// Timestamp when this FeatureOnlineStore was last updated.
func (o LookupFeatureOnlineStoreResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureOnlineStoreResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFeatureOnlineStoreResultOutput{})
}
