// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a TensorboardRun.
// Auto-naming is currently not supported for this resource.
type Run struct {
	pulumi.CustomResourceState

	// Timestamp when this TensorboardRun was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Description of this TensorboardRun.
	Description pulumi.StringOutput `pulumi:"description"`
	// User provided name of this TensorboardRun. This value must be unique among all TensorboardRuns belonging to the same parent TensorboardExperiment.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag         pulumi.StringOutput `pulumi:"etag"`
	ExperimentId pulumi.StringOutput `pulumi:"experimentId"`
	// The labels with user-defined metadata to organize your TensorboardRuns. This field will be used to filter and visualize Runs in the Tensorboard UI. For example, a Vertex AI training job can set a label aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created within that job. An end user can set a label experiment_id=xxxxx for all the runs produced in a Jupyter notebook. These runs can be grouped by a label value and visualized together in the Tensorboard UI. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one TensorboardRun (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Name of the TensorboardRun. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
	Name          pulumi.StringOutput `pulumi:"name"`
	Project       pulumi.StringOutput `pulumi:"project"`
	TensorboardId pulumi.StringOutput `pulumi:"tensorboardId"`
	// Required. The ID to use for the Tensorboard run, which becomes the final component of the Tensorboard run's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.
	TensorboardRunId pulumi.StringOutput `pulumi:"tensorboardRunId"`
	// Timestamp when this TensorboardRun was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewRun registers a new resource with the given unique name, arguments, and options.
func NewRun(ctx *pulumi.Context,
	name string, args *RunArgs, opts ...pulumi.ResourceOption) (*Run, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.ExperimentId == nil {
		return nil, errors.New("invalid value for required argument 'ExperimentId'")
	}
	if args.TensorboardId == nil {
		return nil, errors.New("invalid value for required argument 'TensorboardId'")
	}
	if args.TensorboardRunId == nil {
		return nil, errors.New("invalid value for required argument 'TensorboardRunId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"experimentId",
		"location",
		"project",
		"tensorboardId",
		"tensorboardRunId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Run
	err := ctx.RegisterResource("google-native:aiplatform/v1:Run", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRun gets an existing Run resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRun(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RunState, opts ...pulumi.ResourceOption) (*Run, error) {
	var resource Run
	err := ctx.ReadResource("google-native:aiplatform/v1:Run", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Run resources.
type runState struct {
}

type RunState struct {
}

func (RunState) ElementType() reflect.Type {
	return reflect.TypeOf((*runState)(nil)).Elem()
}

type runArgs struct {
	// Description of this TensorboardRun.
	Description *string `pulumi:"description"`
	// User provided name of this TensorboardRun. This value must be unique among all TensorboardRuns belonging to the same parent TensorboardExperiment.
	DisplayName string `pulumi:"displayName"`
	// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag         *string `pulumi:"etag"`
	ExperimentId string  `pulumi:"experimentId"`
	// The labels with user-defined metadata to organize your TensorboardRuns. This field will be used to filter and visualize Runs in the Tensorboard UI. For example, a Vertex AI training job can set a label aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created within that job. An end user can set a label experiment_id=xxxxx for all the runs produced in a Jupyter notebook. These runs can be grouped by a label value and visualized together in the Tensorboard UI. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one TensorboardRun (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels        map[string]string `pulumi:"labels"`
	Location      *string           `pulumi:"location"`
	Project       *string           `pulumi:"project"`
	TensorboardId string            `pulumi:"tensorboardId"`
	// Required. The ID to use for the Tensorboard run, which becomes the final component of the Tensorboard run's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.
	TensorboardRunId string `pulumi:"tensorboardRunId"`
}

// The set of arguments for constructing a Run resource.
type RunArgs struct {
	// Description of this TensorboardRun.
	Description pulumi.StringPtrInput
	// User provided name of this TensorboardRun. This value must be unique among all TensorboardRuns belonging to the same parent TensorboardExperiment.
	DisplayName pulumi.StringInput
	// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag         pulumi.StringPtrInput
	ExperimentId pulumi.StringInput
	// The labels with user-defined metadata to organize your TensorboardRuns. This field will be used to filter and visualize Runs in the Tensorboard UI. For example, a Vertex AI training job can set a label aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created within that job. An end user can set a label experiment_id=xxxxx for all the runs produced in a Jupyter notebook. These runs can be grouped by a label value and visualized together in the Tensorboard UI. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one TensorboardRun (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels        pulumi.StringMapInput
	Location      pulumi.StringPtrInput
	Project       pulumi.StringPtrInput
	TensorboardId pulumi.StringInput
	// Required. The ID to use for the Tensorboard run, which becomes the final component of the Tensorboard run's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.
	TensorboardRunId pulumi.StringInput
}

func (RunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*runArgs)(nil)).Elem()
}

type RunInput interface {
	pulumi.Input

	ToRunOutput() RunOutput
	ToRunOutputWithContext(ctx context.Context) RunOutput
}

func (*Run) ElementType() reflect.Type {
	return reflect.TypeOf((**Run)(nil)).Elem()
}

func (i *Run) ToRunOutput() RunOutput {
	return i.ToRunOutputWithContext(context.Background())
}

func (i *Run) ToRunOutputWithContext(ctx context.Context) RunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunOutput)
}

type RunOutput struct{ *pulumi.OutputState }

func (RunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Run)(nil)).Elem()
}

func (o RunOutput) ToRunOutput() RunOutput {
	return o
}

func (o RunOutput) ToRunOutputWithContext(ctx context.Context) RunOutput {
	return o
}

// Timestamp when this TensorboardRun was created.
func (o RunOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of this TensorboardRun.
func (o RunOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// User provided name of this TensorboardRun. This value must be unique among all TensorboardRuns belonging to the same parent TensorboardExperiment.
func (o RunOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
func (o RunOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o RunOutput) ExperimentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.ExperimentId }).(pulumi.StringOutput)
}

// The labels with user-defined metadata to organize your TensorboardRuns. This field will be used to filter and visualize Runs in the Tensorboard UI. For example, a Vertex AI training job can set a label aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created within that job. An end user can set a label experiment_id=xxxxx for all the runs produced in a Jupyter notebook. These runs can be grouped by a label value and visualized together in the Tensorboard UI. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one TensorboardRun (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
func (o RunOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Run) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o RunOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the TensorboardRun. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
func (o RunOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o RunOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o RunOutput) TensorboardId() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.TensorboardId }).(pulumi.StringOutput)
}

// Required. The ID to use for the Tensorboard run, which becomes the final component of the Tensorboard run's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.
func (o RunOutput) TensorboardRunId() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.TensorboardRunId }).(pulumi.StringOutput)
}

// Timestamp when this TensorboardRun was last updated.
func (o RunOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RunInput)(nil)).Elem(), &Run{})
	pulumi.RegisterOutputType(RunOutput{})
}
