// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets a Tensorboard.
func LookupTensorboard(ctx *pulumi.Context, args *LookupTensorboardArgs, opts ...pulumi.InvokeOption) (*LookupTensorboardResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTensorboardResult
	err := ctx.Invoke("google-native:aiplatform/v1:getTensorboard", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTensorboardArgs struct {
	Location      string  `pulumi:"location"`
	Project       *string `pulumi:"project"`
	TensorboardId string  `pulumi:"tensorboardId"`
}

type LookupTensorboardResult struct {
	// Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a '/'.
	BlobStoragePathPrefix string `pulumi:"blobStoragePathPrefix"`
	// Timestamp when this Tensorboard was created.
	CreateTime string `pulumi:"createTime"`
	// Description of this Tensorboard.
	Description string `pulumi:"description"`
	// User provided name of this Tensorboard.
	DisplayName string `pulumi:"displayName"`
	// Customer-managed encryption key spec for a Tensorboard. If set, this Tensorboard and all sub-resources of this Tensorboard will be secured by this key.
	EncryptionSpec GoogleCloudAiplatformV1EncryptionSpecResponse `pulumi:"encryptionSpec"`
	// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag string `pulumi:"etag"`
	// Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default.
	IsDefault bool `pulumi:"isDefault"`
	// The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
	Labels map[string]string `pulumi:"labels"`
	// Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
	Name string `pulumi:"name"`
	// The number of Runs stored in this Tensorboard.
	RunCount int `pulumi:"runCount"`
	// Timestamp when this Tensorboard was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupTensorboardOutput(ctx *pulumi.Context, args LookupTensorboardOutputArgs, opts ...pulumi.InvokeOption) LookupTensorboardResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTensorboardResult, error) {
			args := v.(LookupTensorboardArgs)
			r, err := LookupTensorboard(ctx, &args, opts...)
			var s LookupTensorboardResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTensorboardResultOutput)
}

type LookupTensorboardOutputArgs struct {
	Location      pulumi.StringInput    `pulumi:"location"`
	Project       pulumi.StringPtrInput `pulumi:"project"`
	TensorboardId pulumi.StringInput    `pulumi:"tensorboardId"`
}

func (LookupTensorboardOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTensorboardArgs)(nil)).Elem()
}

type LookupTensorboardResultOutput struct{ *pulumi.OutputState }

func (LookupTensorboardResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTensorboardResult)(nil)).Elem()
}

func (o LookupTensorboardResultOutput) ToLookupTensorboardResultOutput() LookupTensorboardResultOutput {
	return o
}

func (o LookupTensorboardResultOutput) ToLookupTensorboardResultOutputWithContext(ctx context.Context) LookupTensorboardResultOutput {
	return o
}

func (o LookupTensorboardResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupTensorboardResult] {
	return pulumix.Output[LookupTensorboardResult]{
		OutputState: o.OutputState,
	}
}

// Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a '/'.
func (o LookupTensorboardResultOutput) BlobStoragePathPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTensorboardResult) string { return v.BlobStoragePathPrefix }).(pulumi.StringOutput)
}

// Timestamp when this Tensorboard was created.
func (o LookupTensorboardResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTensorboardResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of this Tensorboard.
func (o LookupTensorboardResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTensorboardResult) string { return v.Description }).(pulumi.StringOutput)
}

// User provided name of this Tensorboard.
func (o LookupTensorboardResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTensorboardResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Customer-managed encryption key spec for a Tensorboard. If set, this Tensorboard and all sub-resources of this Tensorboard will be secured by this key.
func (o LookupTensorboardResultOutput) EncryptionSpec() GoogleCloudAiplatformV1EncryptionSpecResponseOutput {
	return o.ApplyT(func(v LookupTensorboardResult) GoogleCloudAiplatformV1EncryptionSpecResponse { return v.EncryptionSpec }).(GoogleCloudAiplatformV1EncryptionSpecResponseOutput)
}

// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
func (o LookupTensorboardResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTensorboardResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default.
func (o LookupTensorboardResultOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTensorboardResult) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
func (o LookupTensorboardResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupTensorboardResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
func (o LookupTensorboardResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTensorboardResult) string { return v.Name }).(pulumi.StringOutput)
}

// The number of Runs stored in this Tensorboard.
func (o LookupTensorboardResultOutput) RunCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTensorboardResult) int { return v.RunCount }).(pulumi.IntOutput)
}

// Timestamp when this Tensorboard was last updated.
func (o LookupTensorboardResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTensorboardResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTensorboardResultOutput{})
}
