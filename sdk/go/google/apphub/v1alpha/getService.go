// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a Service in an Application.
func LookupService(ctx *pulumi.Context, args *LookupServiceArgs, opts ...pulumi.InvokeOption) (*LookupServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceResult
	err := ctx.Invoke("google-native:apphub/v1alpha:getService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupServiceArgs struct {
	ApplicationId string  `pulumi:"applicationId"`
	Location      string  `pulumi:"location"`
	Project       *string `pulumi:"project"`
	ServiceId     string  `pulumi:"serviceId"`
}

type LookupServiceResult struct {
	// Optional. Consumer provided attributes.
	Attributes AttributesResponse `pulumi:"attributes"`
	// Create time.
	CreateTime string `pulumi:"createTime"`
	// Optional. User-defined description of a Service. Can have a maximum length of 2048 characters.
	Description string `pulumi:"description"`
	// Immutable. The resource name of the original discovered service.
	DiscoveredService string `pulumi:"discoveredService"`
	// Optional. User-defined name for the Service. Can have a maximum length of 63 characters.
	DisplayName string `pulumi:"displayName"`
	// Identifier. The resource name of a Service. Format: "projects/{host-project-id}/locations/{location}/applications/{application-id}/services/{service-id}"
	Name string `pulumi:"name"`
	// Properties of an underlying compute resource that can comprise a Service. These are immutable.
	ServiceProperties ServicePropertiesResponse `pulumi:"serviceProperties"`
	// Reference to an underlying networking resource that can comprise a Service. These are immutable.
	ServiceReference ServiceReferenceResponse `pulumi:"serviceReference"`
	// Service state.
	State string `pulumi:"state"`
	// A universally unique identifier (UUID) for the `Service` in the UUID4 format.
	Uid string `pulumi:"uid"`
	// Update time.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupServiceOutput(ctx *pulumi.Context, args LookupServiceOutputArgs, opts ...pulumi.InvokeOption) LookupServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceResult, error) {
			args := v.(LookupServiceArgs)
			r, err := LookupService(ctx, &args, opts...)
			var s LookupServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServiceResultOutput)
}

type LookupServiceOutputArgs struct {
	ApplicationId pulumi.StringInput    `pulumi:"applicationId"`
	Location      pulumi.StringInput    `pulumi:"location"`
	Project       pulumi.StringPtrInput `pulumi:"project"`
	ServiceId     pulumi.StringInput    `pulumi:"serviceId"`
}

func (LookupServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceArgs)(nil)).Elem()
}

type LookupServiceResultOutput struct{ *pulumi.OutputState }

func (LookupServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceResult)(nil)).Elem()
}

func (o LookupServiceResultOutput) ToLookupServiceResultOutput() LookupServiceResultOutput {
	return o
}

func (o LookupServiceResultOutput) ToLookupServiceResultOutputWithContext(ctx context.Context) LookupServiceResultOutput {
	return o
}

// Optional. Consumer provided attributes.
func (o LookupServiceResultOutput) Attributes() AttributesResponseOutput {
	return o.ApplyT(func(v LookupServiceResult) AttributesResponse { return v.Attributes }).(AttributesResponseOutput)
}

// Create time.
func (o LookupServiceResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. User-defined description of a Service. Can have a maximum length of 2048 characters.
func (o LookupServiceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Description }).(pulumi.StringOutput)
}

// Immutable. The resource name of the original discovered service.
func (o LookupServiceResultOutput) DiscoveredService() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.DiscoveredService }).(pulumi.StringOutput)
}

// Optional. User-defined name for the Service. Can have a maximum length of 63 characters.
func (o LookupServiceResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Identifier. The resource name of a Service. Format: "projects/{host-project-id}/locations/{location}/applications/{application-id}/services/{service-id}"
func (o LookupServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of an underlying compute resource that can comprise a Service. These are immutable.
func (o LookupServiceResultOutput) ServiceProperties() ServicePropertiesResponseOutput {
	return o.ApplyT(func(v LookupServiceResult) ServicePropertiesResponse { return v.ServiceProperties }).(ServicePropertiesResponseOutput)
}

// Reference to an underlying networking resource that can comprise a Service. These are immutable.
func (o LookupServiceResultOutput) ServiceReference() ServiceReferenceResponseOutput {
	return o.ApplyT(func(v LookupServiceResult) ServiceReferenceResponse { return v.ServiceReference }).(ServiceReferenceResponseOutput)
}

// Service state.
func (o LookupServiceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.State }).(pulumi.StringOutput)
}

// A universally unique identifier (UUID) for the `Service` in the UUID4 format.
func (o LookupServiceResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Uid }).(pulumi.StringOutput)
}

// Update time.
func (o LookupServiceResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceResultOutput{})
}
