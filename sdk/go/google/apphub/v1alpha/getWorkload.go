// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a Workload in an Application.
func LookupWorkload(ctx *pulumi.Context, args *LookupWorkloadArgs, opts ...pulumi.InvokeOption) (*LookupWorkloadResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkloadResult
	err := ctx.Invoke("google-native:apphub/v1alpha:getWorkload", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWorkloadArgs struct {
	ApplicationId string  `pulumi:"applicationId"`
	Location      string  `pulumi:"location"`
	Project       *string `pulumi:"project"`
	WorkloadId    string  `pulumi:"workloadId"`
}

type LookupWorkloadResult struct {
	// Optional. Consumer provided attributes.
	Attributes AttributesResponse `pulumi:"attributes"`
	// Create time.
	CreateTime string `pulumi:"createTime"`
	// Optional. User-defined description of a Workload. Can have a maximum length of 2048 characters.
	Description string `pulumi:"description"`
	// Immutable. The resource name of the original discovered workload.
	DiscoveredWorkload string `pulumi:"discoveredWorkload"`
	// Optional. User-defined name for the Workload. Can have a maximum length of 63 characters.
	DisplayName string `pulumi:"displayName"`
	// Identifier. The resource name of the Workload. Format: "projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"
	Name string `pulumi:"name"`
	// Workload state.
	State string `pulumi:"state"`
	// A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
	Uid string `pulumi:"uid"`
	// Update time.
	UpdateTime string `pulumi:"updateTime"`
	// Properties of an underlying compute resource represented by the Workload. These are immutable.
	WorkloadProperties WorkloadPropertiesResponse `pulumi:"workloadProperties"`
	// Reference of an underlying compute resource represented by the Workload. These are immutable.
	WorkloadReference WorkloadReferenceResponse `pulumi:"workloadReference"`
}

func LookupWorkloadOutput(ctx *pulumi.Context, args LookupWorkloadOutputArgs, opts ...pulumi.InvokeOption) LookupWorkloadResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkloadResult, error) {
			args := v.(LookupWorkloadArgs)
			r, err := LookupWorkload(ctx, &args, opts...)
			var s LookupWorkloadResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkloadResultOutput)
}

type LookupWorkloadOutputArgs struct {
	ApplicationId pulumi.StringInput    `pulumi:"applicationId"`
	Location      pulumi.StringInput    `pulumi:"location"`
	Project       pulumi.StringPtrInput `pulumi:"project"`
	WorkloadId    pulumi.StringInput    `pulumi:"workloadId"`
}

func (LookupWorkloadOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkloadArgs)(nil)).Elem()
}

type LookupWorkloadResultOutput struct{ *pulumi.OutputState }

func (LookupWorkloadResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkloadResult)(nil)).Elem()
}

func (o LookupWorkloadResultOutput) ToLookupWorkloadResultOutput() LookupWorkloadResultOutput {
	return o
}

func (o LookupWorkloadResultOutput) ToLookupWorkloadResultOutputWithContext(ctx context.Context) LookupWorkloadResultOutput {
	return o
}

// Optional. Consumer provided attributes.
func (o LookupWorkloadResultOutput) Attributes() AttributesResponseOutput {
	return o.ApplyT(func(v LookupWorkloadResult) AttributesResponse { return v.Attributes }).(AttributesResponseOutput)
}

// Create time.
func (o LookupWorkloadResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. User-defined description of a Workload. Can have a maximum length of 2048 characters.
func (o LookupWorkloadResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.Description }).(pulumi.StringOutput)
}

// Immutable. The resource name of the original discovered workload.
func (o LookupWorkloadResultOutput) DiscoveredWorkload() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.DiscoveredWorkload }).(pulumi.StringOutput)
}

// Optional. User-defined name for the Workload. Can have a maximum length of 63 characters.
func (o LookupWorkloadResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Identifier. The resource name of the Workload. Format: "projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"
func (o LookupWorkloadResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.Name }).(pulumi.StringOutput)
}

// Workload state.
func (o LookupWorkloadResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.State }).(pulumi.StringOutput)
}

// A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
func (o LookupWorkloadResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.Uid }).(pulumi.StringOutput)
}

// Update time.
func (o LookupWorkloadResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkloadResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// Properties of an underlying compute resource represented by the Workload. These are immutable.
func (o LookupWorkloadResultOutput) WorkloadProperties() WorkloadPropertiesResponseOutput {
	return o.ApplyT(func(v LookupWorkloadResult) WorkloadPropertiesResponse { return v.WorkloadProperties }).(WorkloadPropertiesResponseOutput)
}

// Reference of an underlying compute resource represented by the Workload. These are immutable.
func (o LookupWorkloadResultOutput) WorkloadReference() WorkloadReferenceResponseOutput {
	return o.ApplyT(func(v LookupWorkloadResult) WorkloadReferenceResponse { return v.WorkloadReference }).(WorkloadReferenceResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkloadResultOutput{})
}
