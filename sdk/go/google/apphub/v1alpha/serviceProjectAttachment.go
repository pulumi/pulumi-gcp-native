// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Attaches a service project to the host project.
type ServiceProjectAttachment struct {
	pulumi.CustomResourceState

	// Create time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	Location   pulumi.StringOutput `pulumi:"location"`
	// Identifier. The resource name of a ServiceProjectAttachment. Format: "projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}."
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Immutable. Service project name in the format: "projects/abc" or "projects/123". As input, project name with either project id or number are accepted. As output, this field will contain project number.
	ServiceProject pulumi.StringOutput `pulumi:"serviceProject"`
	// Required. The service project attachment identifier must contain the project id of the service project specified in the service_project_attachment.service_project field.
	ServiceProjectAttachmentId pulumi.StringOutput `pulumi:"serviceProjectAttachmentId"`
	// ServiceProjectAttachment state.
	State pulumi.StringOutput `pulumi:"state"`
	// A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
	Uid pulumi.StringOutput `pulumi:"uid"`
}

// NewServiceProjectAttachment registers a new resource with the given unique name, arguments, and options.
func NewServiceProjectAttachment(ctx *pulumi.Context,
	name string, args *ServiceProjectAttachmentArgs, opts ...pulumi.ResourceOption) (*ServiceProjectAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceProject == nil {
		return nil, errors.New("invalid value for required argument 'ServiceProject'")
	}
	if args.ServiceProjectAttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceProjectAttachmentId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
		"serviceProjectAttachmentId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceProjectAttachment
	err := ctx.RegisterResource("google-native:apphub/v1alpha:ServiceProjectAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceProjectAttachment gets an existing ServiceProjectAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceProjectAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceProjectAttachmentState, opts ...pulumi.ResourceOption) (*ServiceProjectAttachment, error) {
	var resource ServiceProjectAttachment
	err := ctx.ReadResource("google-native:apphub/v1alpha:ServiceProjectAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceProjectAttachment resources.
type serviceProjectAttachmentState struct {
}

type ServiceProjectAttachmentState struct {
}

func (ServiceProjectAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceProjectAttachmentState)(nil)).Elem()
}

type serviceProjectAttachmentArgs struct {
	Location *string `pulumi:"location"`
	// Identifier. The resource name of a ServiceProjectAttachment. Format: "projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}."
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// Immutable. Service project name in the format: "projects/abc" or "projects/123". As input, project name with either project id or number are accepted. As output, this field will contain project number.
	ServiceProject string `pulumi:"serviceProject"`
	// Required. The service project attachment identifier must contain the project id of the service project specified in the service_project_attachment.service_project field.
	ServiceProjectAttachmentId string `pulumi:"serviceProjectAttachmentId"`
}

// The set of arguments for constructing a ServiceProjectAttachment resource.
type ServiceProjectAttachmentArgs struct {
	Location pulumi.StringPtrInput
	// Identifier. The resource name of a ServiceProjectAttachment. Format: "projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}."
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// Immutable. Service project name in the format: "projects/abc" or "projects/123". As input, project name with either project id or number are accepted. As output, this field will contain project number.
	ServiceProject pulumi.StringInput
	// Required. The service project attachment identifier must contain the project id of the service project specified in the service_project_attachment.service_project field.
	ServiceProjectAttachmentId pulumi.StringInput
}

func (ServiceProjectAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceProjectAttachmentArgs)(nil)).Elem()
}

type ServiceProjectAttachmentInput interface {
	pulumi.Input

	ToServiceProjectAttachmentOutput() ServiceProjectAttachmentOutput
	ToServiceProjectAttachmentOutputWithContext(ctx context.Context) ServiceProjectAttachmentOutput
}

func (*ServiceProjectAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceProjectAttachment)(nil)).Elem()
}

func (i *ServiceProjectAttachment) ToServiceProjectAttachmentOutput() ServiceProjectAttachmentOutput {
	return i.ToServiceProjectAttachmentOutputWithContext(context.Background())
}

func (i *ServiceProjectAttachment) ToServiceProjectAttachmentOutputWithContext(ctx context.Context) ServiceProjectAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceProjectAttachmentOutput)
}

type ServiceProjectAttachmentOutput struct{ *pulumi.OutputState }

func (ServiceProjectAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceProjectAttachment)(nil)).Elem()
}

func (o ServiceProjectAttachmentOutput) ToServiceProjectAttachmentOutput() ServiceProjectAttachmentOutput {
	return o
}

func (o ServiceProjectAttachmentOutput) ToServiceProjectAttachmentOutputWithContext(ctx context.Context) ServiceProjectAttachmentOutput {
	return o
}

// Create time.
func (o ServiceProjectAttachmentOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceProjectAttachment) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o ServiceProjectAttachmentOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceProjectAttachment) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The resource name of a ServiceProjectAttachment. Format: "projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}."
func (o ServiceProjectAttachmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceProjectAttachment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ServiceProjectAttachmentOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceProjectAttachment) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o ServiceProjectAttachmentOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceProjectAttachment) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Immutable. Service project name in the format: "projects/abc" or "projects/123". As input, project name with either project id or number are accepted. As output, this field will contain project number.
func (o ServiceProjectAttachmentOutput) ServiceProject() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceProjectAttachment) pulumi.StringOutput { return v.ServiceProject }).(pulumi.StringOutput)
}

// Required. The service project attachment identifier must contain the project id of the service project specified in the service_project_attachment.service_project field.
func (o ServiceProjectAttachmentOutput) ServiceProjectAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceProjectAttachment) pulumi.StringOutput { return v.ServiceProjectAttachmentId }).(pulumi.StringOutput)
}

// ServiceProjectAttachment state.
func (o ServiceProjectAttachmentOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceProjectAttachment) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
func (o ServiceProjectAttachmentOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceProjectAttachment) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceProjectAttachmentInput)(nil)).Elem(), &ServiceProjectAttachment{})
	pulumi.RegisterOutputType(ServiceProjectAttachmentOutput{})
}
