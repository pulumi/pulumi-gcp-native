// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts values of the AuditLogConfigLogType enum
// A concrete instance of `AuditLogConfigLogTypeInput` can be one of the following:
//
//	AuditLogConfigLogTypeLogTypeUnspecified
//	AuditLogConfigLogTypeAdminRead
//	AuditLogConfigLogTypeDataWrite
//	AuditLogConfigLogTypeDataRead
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AuditLogConfigLogType] {
	return pulumix.Output[*AuditLogConfigLogType]{
		OutputState: in.ToAuditLogConfigLogTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. Criticality Type.
type CriticalityType string

const (
	// Unspecified type.
	CriticalityTypeTypeUnspecified = CriticalityType("TYPE_UNSPECIFIED")
	// Mission critical service, application or workload.
	CriticalityTypeMissionCritical = CriticalityType("MISSION_CRITICAL")
	// High impact.
	CriticalityTypeHigh = CriticalityType("HIGH")
	// Medium impact.
	CriticalityTypeMedium = CriticalityType("MEDIUM")
	// Low impact.
	CriticalityTypeLow = CriticalityType("LOW")
)

func (CriticalityType) ElementType() reflect.Type {
	return reflect.TypeOf((*CriticalityType)(nil)).Elem()
}

func (e CriticalityType) ToCriticalityTypeOutput() CriticalityTypeOutput {
	return pulumi.ToOutput(e).(CriticalityTypeOutput)
}

func (e CriticalityType) ToCriticalityTypeOutputWithContext(ctx context.Context) CriticalityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CriticalityTypeOutput)
}

func (e CriticalityType) ToCriticalityTypePtrOutput() CriticalityTypePtrOutput {
	return e.ToCriticalityTypePtrOutputWithContext(context.Background())
}

func (e CriticalityType) ToCriticalityTypePtrOutputWithContext(ctx context.Context) CriticalityTypePtrOutput {
	return CriticalityType(e).ToCriticalityTypeOutputWithContext(ctx).ToCriticalityTypePtrOutputWithContext(ctx)
}

func (e CriticalityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CriticalityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CriticalityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CriticalityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CriticalityTypeOutput struct{ *pulumi.OutputState }

func (CriticalityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CriticalityType)(nil)).Elem()
}

func (o CriticalityTypeOutput) ToCriticalityTypeOutput() CriticalityTypeOutput {
	return o
}

func (o CriticalityTypeOutput) ToCriticalityTypeOutputWithContext(ctx context.Context) CriticalityTypeOutput {
	return o
}

func (o CriticalityTypeOutput) ToCriticalityTypePtrOutput() CriticalityTypePtrOutput {
	return o.ToCriticalityTypePtrOutputWithContext(context.Background())
}

func (o CriticalityTypeOutput) ToCriticalityTypePtrOutputWithContext(ctx context.Context) CriticalityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CriticalityType) *CriticalityType {
		return &v
	}).(CriticalityTypePtrOutput)
}

func (o CriticalityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CriticalityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CriticalityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CriticalityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CriticalityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CriticalityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CriticalityTypePtrOutput struct{ *pulumi.OutputState }

func (CriticalityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CriticalityType)(nil)).Elem()
}

func (o CriticalityTypePtrOutput) ToCriticalityTypePtrOutput() CriticalityTypePtrOutput {
	return o
}

func (o CriticalityTypePtrOutput) ToCriticalityTypePtrOutputWithContext(ctx context.Context) CriticalityTypePtrOutput {
	return o
}

func (o CriticalityTypePtrOutput) Elem() CriticalityTypeOutput {
	return o.ApplyT(func(v *CriticalityType) CriticalityType {
		if v != nil {
			return *v
		}
		var ret CriticalityType
		return ret
	}).(CriticalityTypeOutput)
}

func (o CriticalityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CriticalityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CriticalityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CriticalityTypeInput is an input type that accepts values of the CriticalityType enum
// A concrete instance of `CriticalityTypeInput` can be one of the following:
//
//	CriticalityTypeTypeUnspecified
//	CriticalityTypeMissionCritical
//	CriticalityTypeHigh
//	CriticalityTypeMedium
//	CriticalityTypeLow
type CriticalityTypeInput interface {
	pulumi.Input

	ToCriticalityTypeOutput() CriticalityTypeOutput
	ToCriticalityTypeOutputWithContext(context.Context) CriticalityTypeOutput
}

var criticalityTypePtrType = reflect.TypeOf((**CriticalityType)(nil)).Elem()

type CriticalityTypePtrInput interface {
	pulumi.Input

	ToCriticalityTypePtrOutput() CriticalityTypePtrOutput
	ToCriticalityTypePtrOutputWithContext(context.Context) CriticalityTypePtrOutput
}

type criticalityTypePtr string

func CriticalityTypePtr(v string) CriticalityTypePtrInput {
	return (*criticalityTypePtr)(&v)
}

func (*criticalityTypePtr) ElementType() reflect.Type {
	return criticalityTypePtrType
}

func (in *criticalityTypePtr) ToCriticalityTypePtrOutput() CriticalityTypePtrOutput {
	return pulumi.ToOutput(in).(CriticalityTypePtrOutput)
}

func (in *criticalityTypePtr) ToCriticalityTypePtrOutputWithContext(ctx context.Context) CriticalityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CriticalityTypePtrOutput)
}

func (in *criticalityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*CriticalityType] {
	return pulumix.Output[*CriticalityType]{
		OutputState: in.ToCriticalityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. Environment Type.
type EnvironmentType string

const (
	// Unspecified type.
	EnvironmentTypeTypeUnspecified = EnvironmentType("TYPE_UNSPECIFIED")
	// Production environment.
	EnvironmentTypeProduction = EnvironmentType("PRODUCTION")
	// Staging environment.
	EnvironmentTypeStaging = EnvironmentType("STAGING")
	// Test environment.
	EnvironmentTypeTest = EnvironmentType("TEST")
	// Development environment.
	EnvironmentTypeDevelopment = EnvironmentType("DEVELOPMENT")
)

func (EnvironmentType) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentType)(nil)).Elem()
}

func (e EnvironmentType) ToEnvironmentTypeOutput() EnvironmentTypeOutput {
	return pulumi.ToOutput(e).(EnvironmentTypeOutput)
}

func (e EnvironmentType) ToEnvironmentTypeOutputWithContext(ctx context.Context) EnvironmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnvironmentTypeOutput)
}

func (e EnvironmentType) ToEnvironmentTypePtrOutput() EnvironmentTypePtrOutput {
	return e.ToEnvironmentTypePtrOutputWithContext(context.Background())
}

func (e EnvironmentType) ToEnvironmentTypePtrOutputWithContext(ctx context.Context) EnvironmentTypePtrOutput {
	return EnvironmentType(e).ToEnvironmentTypeOutputWithContext(ctx).ToEnvironmentTypePtrOutputWithContext(ctx)
}

func (e EnvironmentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnvironmentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnvironmentTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentType)(nil)).Elem()
}

func (o EnvironmentTypeOutput) ToEnvironmentTypeOutput() EnvironmentTypeOutput {
	return o
}

func (o EnvironmentTypeOutput) ToEnvironmentTypeOutputWithContext(ctx context.Context) EnvironmentTypeOutput {
	return o
}

func (o EnvironmentTypeOutput) ToEnvironmentTypePtrOutput() EnvironmentTypePtrOutput {
	return o.ToEnvironmentTypePtrOutputWithContext(context.Background())
}

func (o EnvironmentTypeOutput) ToEnvironmentTypePtrOutputWithContext(ctx context.Context) EnvironmentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentType) *EnvironmentType {
		return &v
	}).(EnvironmentTypePtrOutput)
}

func (o EnvironmentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentTypePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentType)(nil)).Elem()
}

func (o EnvironmentTypePtrOutput) ToEnvironmentTypePtrOutput() EnvironmentTypePtrOutput {
	return o
}

func (o EnvironmentTypePtrOutput) ToEnvironmentTypePtrOutputWithContext(ctx context.Context) EnvironmentTypePtrOutput {
	return o
}

func (o EnvironmentTypePtrOutput) Elem() EnvironmentTypeOutput {
	return o.ApplyT(func(v *EnvironmentType) EnvironmentType {
		if v != nil {
			return *v
		}
		var ret EnvironmentType
		return ret
	}).(EnvironmentTypeOutput)
}

func (o EnvironmentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnvironmentTypeInput is an input type that accepts values of the EnvironmentType enum
// A concrete instance of `EnvironmentTypeInput` can be one of the following:
//
//	EnvironmentTypeTypeUnspecified
//	EnvironmentTypeProduction
//	EnvironmentTypeStaging
//	EnvironmentTypeTest
//	EnvironmentTypeDevelopment
type EnvironmentTypeInput interface {
	pulumi.Input

	ToEnvironmentTypeOutput() EnvironmentTypeOutput
	ToEnvironmentTypeOutputWithContext(context.Context) EnvironmentTypeOutput
}

var environmentTypePtrType = reflect.TypeOf((**EnvironmentType)(nil)).Elem()

type EnvironmentTypePtrInput interface {
	pulumi.Input

	ToEnvironmentTypePtrOutput() EnvironmentTypePtrOutput
	ToEnvironmentTypePtrOutputWithContext(context.Context) EnvironmentTypePtrOutput
}

type environmentTypePtr string

func EnvironmentTypePtr(v string) EnvironmentTypePtrInput {
	return (*environmentTypePtr)(&v)
}

func (*environmentTypePtr) ElementType() reflect.Type {
	return environmentTypePtrType
}

func (in *environmentTypePtr) ToEnvironmentTypePtrOutput() EnvironmentTypePtrOutput {
	return pulumi.ToOutput(in).(EnvironmentTypePtrOutput)
}

func (in *environmentTypePtr) ToEnvironmentTypePtrOutputWithContext(ctx context.Context) EnvironmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnvironmentTypePtrOutput)
}

func (in *environmentTypePtr) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentType] {
	return pulumix.Output[*EnvironmentType]{
		OutputState: in.ToEnvironmentTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. Scope Type.
type ScopeType string

const (
	// Unspecified type.
	ScopeTypeTypeUnspecified = ScopeType("TYPE_UNSPECIFIED")
	// Regional type.
	ScopeTypeRegional = ScopeType("REGIONAL")
)

func (ScopeType) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeType)(nil)).Elem()
}

func (e ScopeType) ToScopeTypeOutput() ScopeTypeOutput {
	return pulumi.ToOutput(e).(ScopeTypeOutput)
}

func (e ScopeType) ToScopeTypeOutputWithContext(ctx context.Context) ScopeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScopeTypeOutput)
}

func (e ScopeType) ToScopeTypePtrOutput() ScopeTypePtrOutput {
	return e.ToScopeTypePtrOutputWithContext(context.Background())
}

func (e ScopeType) ToScopeTypePtrOutputWithContext(ctx context.Context) ScopeTypePtrOutput {
	return ScopeType(e).ToScopeTypeOutputWithContext(ctx).ToScopeTypePtrOutputWithContext(ctx)
}

func (e ScopeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScopeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScopeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScopeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScopeTypeOutput struct{ *pulumi.OutputState }

func (ScopeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeType)(nil)).Elem()
}

func (o ScopeTypeOutput) ToScopeTypeOutput() ScopeTypeOutput {
	return o
}

func (o ScopeTypeOutput) ToScopeTypeOutputWithContext(ctx context.Context) ScopeTypeOutput {
	return o
}

func (o ScopeTypeOutput) ToScopeTypePtrOutput() ScopeTypePtrOutput {
	return o.ToScopeTypePtrOutputWithContext(context.Background())
}

func (o ScopeTypeOutput) ToScopeTypePtrOutputWithContext(ctx context.Context) ScopeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScopeType) *ScopeType {
		return &v
	}).(ScopeTypePtrOutput)
}

func (o ScopeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScopeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScopeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScopeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScopeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScopeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScopeTypePtrOutput struct{ *pulumi.OutputState }

func (ScopeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopeType)(nil)).Elem()
}

func (o ScopeTypePtrOutput) ToScopeTypePtrOutput() ScopeTypePtrOutput {
	return o
}

func (o ScopeTypePtrOutput) ToScopeTypePtrOutputWithContext(ctx context.Context) ScopeTypePtrOutput {
	return o
}

func (o ScopeTypePtrOutput) Elem() ScopeTypeOutput {
	return o.ApplyT(func(v *ScopeType) ScopeType {
		if v != nil {
			return *v
		}
		var ret ScopeType
		return ret
	}).(ScopeTypeOutput)
}

func (o ScopeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScopeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScopeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScopeTypeInput is an input type that accepts values of the ScopeType enum
// A concrete instance of `ScopeTypeInput` can be one of the following:
//
//	ScopeTypeTypeUnspecified
//	ScopeTypeRegional
type ScopeTypeInput interface {
	pulumi.Input

	ToScopeTypeOutput() ScopeTypeOutput
	ToScopeTypeOutputWithContext(context.Context) ScopeTypeOutput
}

var scopeTypePtrType = reflect.TypeOf((**ScopeType)(nil)).Elem()

type ScopeTypePtrInput interface {
	pulumi.Input

	ToScopeTypePtrOutput() ScopeTypePtrOutput
	ToScopeTypePtrOutputWithContext(context.Context) ScopeTypePtrOutput
}

type scopeTypePtr string

func ScopeTypePtr(v string) ScopeTypePtrInput {
	return (*scopeTypePtr)(&v)
}

func (*scopeTypePtr) ElementType() reflect.Type {
	return scopeTypePtrType
}

func (in *scopeTypePtr) ToScopeTypePtrOutput() ScopeTypePtrOutput {
	return pulumi.ToOutput(in).(ScopeTypePtrOutput)
}

func (in *scopeTypePtr) ToScopeTypePtrOutputWithContext(ctx context.Context) ScopeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScopeTypePtrOutput)
}

func (in *scopeTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ScopeType] {
	return pulumix.Output[*ScopeType]{
		OutputState: in.ToScopeTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CriticalityTypeInput)(nil)).Elem(), CriticalityType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CriticalityTypePtrInput)(nil)).Elem(), CriticalityType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentTypeInput)(nil)).Elem(), EnvironmentType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentTypePtrInput)(nil)).Elem(), EnvironmentType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ScopeTypeInput)(nil)).Elem(), ScopeType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ScopeTypePtrInput)(nil)).Elem(), ScopeType("TYPE_UNSPECIFIED"))
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(CriticalityTypeOutput{})
	pulumi.RegisterOutputType(CriticalityTypePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentTypePtrOutput{})
	pulumi.RegisterOutputType(ScopeTypeOutput{})
	pulumi.RegisterOutputType(ScopeTypePtrOutput{})
}
