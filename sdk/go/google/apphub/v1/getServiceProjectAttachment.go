// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a service project attachment.
func LookupServiceProjectAttachment(ctx *pulumi.Context, args *LookupServiceProjectAttachmentArgs, opts ...pulumi.InvokeOption) (*LookupServiceProjectAttachmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceProjectAttachmentResult
	err := ctx.Invoke("google-native:apphub/v1:getServiceProjectAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupServiceProjectAttachmentArgs struct {
	Location                   string  `pulumi:"location"`
	Project                    *string `pulumi:"project"`
	ServiceProjectAttachmentId string  `pulumi:"serviceProjectAttachmentId"`
}

type LookupServiceProjectAttachmentResult struct {
	// Create time.
	CreateTime string `pulumi:"createTime"`
	// Identifier. The resource name of a ServiceProjectAttachment. Format: "projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}."
	Name string `pulumi:"name"`
	// Immutable. Service project name in the format: "projects/abc" or "projects/123". As input, project name with either project id or number are accepted. As output, this field will contain project number.
	ServiceProject string `pulumi:"serviceProject"`
	// ServiceProjectAttachment state.
	State string `pulumi:"state"`
	// A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
	Uid string `pulumi:"uid"`
}

func LookupServiceProjectAttachmentOutput(ctx *pulumi.Context, args LookupServiceProjectAttachmentOutputArgs, opts ...pulumi.InvokeOption) LookupServiceProjectAttachmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceProjectAttachmentResult, error) {
			args := v.(LookupServiceProjectAttachmentArgs)
			r, err := LookupServiceProjectAttachment(ctx, &args, opts...)
			var s LookupServiceProjectAttachmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServiceProjectAttachmentResultOutput)
}

type LookupServiceProjectAttachmentOutputArgs struct {
	Location                   pulumi.StringInput    `pulumi:"location"`
	Project                    pulumi.StringPtrInput `pulumi:"project"`
	ServiceProjectAttachmentId pulumi.StringInput    `pulumi:"serviceProjectAttachmentId"`
}

func (LookupServiceProjectAttachmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceProjectAttachmentArgs)(nil)).Elem()
}

type LookupServiceProjectAttachmentResultOutput struct{ *pulumi.OutputState }

func (LookupServiceProjectAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceProjectAttachmentResult)(nil)).Elem()
}

func (o LookupServiceProjectAttachmentResultOutput) ToLookupServiceProjectAttachmentResultOutput() LookupServiceProjectAttachmentResultOutput {
	return o
}

func (o LookupServiceProjectAttachmentResultOutput) ToLookupServiceProjectAttachmentResultOutputWithContext(ctx context.Context) LookupServiceProjectAttachmentResultOutput {
	return o
}

// Create time.
func (o LookupServiceProjectAttachmentResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceProjectAttachmentResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Identifier. The resource name of a ServiceProjectAttachment. Format: "projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}."
func (o LookupServiceProjectAttachmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceProjectAttachmentResult) string { return v.Name }).(pulumi.StringOutput)
}

// Immutable. Service project name in the format: "projects/abc" or "projects/123". As input, project name with either project id or number are accepted. As output, this field will contain project number.
func (o LookupServiceProjectAttachmentResultOutput) ServiceProject() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceProjectAttachmentResult) string { return v.ServiceProject }).(pulumi.StringOutput)
}

// ServiceProjectAttachment state.
func (o LookupServiceProjectAttachmentResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceProjectAttachmentResult) string { return v.State }).(pulumi.StringOutput)
}

// A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
func (o LookupServiceProjectAttachmentResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceProjectAttachmentResult) string { return v.Uid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceProjectAttachmentResultOutput{})
}
