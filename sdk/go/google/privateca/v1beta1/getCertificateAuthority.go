// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns a CertificateAuthority.
func LookupCertificateAuthority(ctx *pulumi.Context, args *LookupCertificateAuthorityArgs, opts ...pulumi.InvokeOption) (*LookupCertificateAuthorityResult, error) {
	var rv LookupCertificateAuthorityResult
	err := ctx.Invoke("google-native:privateca/v1beta1:getCertificateAuthority", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCertificateAuthorityArgs struct {
	CertificateAuthorityId string `pulumi:"certificateAuthorityId"`
	Location               string `pulumi:"location"`
	Project                string `pulumi:"project"`
}

type LookupCertificateAuthorityResult struct {
	// URLs for accessing content published by this CA, such as the CA certificate and CRLs.
	AccessUrls AccessUrlsResponse `pulumi:"accessUrls"`
	// A structured description of this CertificateAuthority's CA certificate and its issuers. Ordered as self-to-root.
	CaCertificateDescriptions []CertificateDescriptionResponse `pulumi:"caCertificateDescriptions"`
	// Optional. The CertificateAuthorityPolicy to enforce when issuing Certificates from this CertificateAuthority.
	CertificatePolicy CertificateAuthorityPolicyResponse `pulumi:"certificatePolicy"`
	// Required. Immutable. The config used to create a self-signed X.509 certificate or CSR.
	Config CertificateConfigResponse `pulumi:"config"`
	// The time at which this CertificateAuthority was created.
	CreateTime string `pulumi:"createTime"`
	// The time at which this CertificateAuthority will be deleted, if scheduled for deletion.
	DeleteTime string `pulumi:"deleteTime"`
	// Immutable. The name of a Cloud Storage bucket where this CertificateAuthority will publish content, such as the CA certificate and CRLs. This must be a bucket name, without any prefixes (such as `gs://`) or suffixes (such as `.googleapis.com`). For example, to use a bucket named `my-bucket`, you would simply specify `my-bucket`. If not specified, a managed bucket will be created.
	GcsBucket string `pulumi:"gcsBucket"`
	// Optional. The IssuingOptions to follow when issuing Certificates from this CertificateAuthority.
	IssuingOptions IssuingOptionsResponse `pulumi:"issuingOptions"`
	// Required. Immutable. Used when issuing certificates for this CertificateAuthority. If this CertificateAuthority is a self-signed CertificateAuthority, this key is also used to sign the self-signed CA certificate. Otherwise, it is used to sign a CSR.
	KeySpec KeyVersionSpecResponse `pulumi:"keySpec"`
	// Optional. Labels with user-defined metadata.
	Labels map[string]string `pulumi:"labels"`
	// Required. The desired lifetime of the CA certificate. Used to create the "not_before_time" and "not_after_time" fields inside an X.509 certificate.
	Lifetime string `pulumi:"lifetime"`
	// The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.
	Name string `pulumi:"name"`
	// This CertificateAuthority's certificate chain, including the current CertificateAuthority's certificate. Ordered such that the root issuer is the final element (consistent with RFC 5246). For a self-signed CA, this will only list the current CertificateAuthority's certificate.
	PemCaCertificates []string `pulumi:"pemCaCertificates"`
	// The State for this CertificateAuthority.
	State string `pulumi:"state"`
	// Optional. If this is a subordinate CertificateAuthority, this field will be set with the subordinate configuration, which describes its issuers. This may be updated, but this CertificateAuthority must continue to validate.
	SubordinateConfig SubordinateConfigResponse `pulumi:"subordinateConfig"`
	// Required. Immutable. The Tier of this CertificateAuthority.
	Tier string `pulumi:"tier"`
	// Required. Immutable. The Type of this CertificateAuthority.
	Type string `pulumi:"type"`
	// The time at which this CertificateAuthority was updated.
	UpdateTime string `pulumi:"updateTime"`
}
