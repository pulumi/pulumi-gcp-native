// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Scan authentication configuration.
type Authentication struct {
	// Authentication using a custom account.
	CustomAccount *CustomAccount `pulumi:"customAccount"`
	// Authentication using a Google account.
	GoogleAccount *GoogleAccount `pulumi:"googleAccount"`
}

// AuthenticationInput is an input type that accepts AuthenticationArgs and AuthenticationOutput values.
// You can construct a concrete instance of `AuthenticationInput` via:
//
//          AuthenticationArgs{...}
type AuthenticationInput interface {
	pulumi.Input

	ToAuthenticationOutput() AuthenticationOutput
	ToAuthenticationOutputWithContext(context.Context) AuthenticationOutput
}

// Scan authentication configuration.
type AuthenticationArgs struct {
	// Authentication using a custom account.
	CustomAccount CustomAccountPtrInput `pulumi:"customAccount"`
	// Authentication using a Google account.
	GoogleAccount GoogleAccountPtrInput `pulumi:"googleAccount"`
}

func (AuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Authentication)(nil)).Elem()
}

func (i AuthenticationArgs) ToAuthenticationOutput() AuthenticationOutput {
	return i.ToAuthenticationOutputWithContext(context.Background())
}

func (i AuthenticationArgs) ToAuthenticationOutputWithContext(ctx context.Context) AuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationOutput)
}

func (i AuthenticationArgs) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return i.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (i AuthenticationArgs) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationOutput).ToAuthenticationPtrOutputWithContext(ctx)
}

// AuthenticationPtrInput is an input type that accepts AuthenticationArgs, AuthenticationPtr and AuthenticationPtrOutput values.
// You can construct a concrete instance of `AuthenticationPtrInput` via:
//
//          AuthenticationArgs{...}
//
//  or:
//
//          nil
type AuthenticationPtrInput interface {
	pulumi.Input

	ToAuthenticationPtrOutput() AuthenticationPtrOutput
	ToAuthenticationPtrOutputWithContext(context.Context) AuthenticationPtrOutput
}

type authenticationPtrType AuthenticationArgs

func AuthenticationPtr(v *AuthenticationArgs) AuthenticationPtrInput {
	return (*authenticationPtrType)(v)
}

func (*authenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Authentication)(nil)).Elem()
}

func (i *authenticationPtrType) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return i.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (i *authenticationPtrType) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationPtrOutput)
}

// Scan authentication configuration.
type AuthenticationOutput struct{ *pulumi.OutputState }

func (AuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Authentication)(nil)).Elem()
}

func (o AuthenticationOutput) ToAuthenticationOutput() AuthenticationOutput {
	return o
}

func (o AuthenticationOutput) ToAuthenticationOutputWithContext(ctx context.Context) AuthenticationOutput {
	return o
}

func (o AuthenticationOutput) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return o.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (o AuthenticationOutput) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Authentication) *Authentication {
		return &v
	}).(AuthenticationPtrOutput)
}

// Authentication using a custom account.
func (o AuthenticationOutput) CustomAccount() CustomAccountPtrOutput {
	return o.ApplyT(func(v Authentication) *CustomAccount { return v.CustomAccount }).(CustomAccountPtrOutput)
}

// Authentication using a Google account.
func (o AuthenticationOutput) GoogleAccount() GoogleAccountPtrOutput {
	return o.ApplyT(func(v Authentication) *GoogleAccount { return v.GoogleAccount }).(GoogleAccountPtrOutput)
}

type AuthenticationPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Authentication)(nil)).Elem()
}

func (o AuthenticationPtrOutput) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return o
}

func (o AuthenticationPtrOutput) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return o
}

func (o AuthenticationPtrOutput) Elem() AuthenticationOutput {
	return o.ApplyT(func(v *Authentication) Authentication {
		if v != nil {
			return *v
		}
		var ret Authentication
		return ret
	}).(AuthenticationOutput)
}

// Authentication using a custom account.
func (o AuthenticationPtrOutput) CustomAccount() CustomAccountPtrOutput {
	return o.ApplyT(func(v *Authentication) *CustomAccount {
		if v == nil {
			return nil
		}
		return v.CustomAccount
	}).(CustomAccountPtrOutput)
}

// Authentication using a Google account.
func (o AuthenticationPtrOutput) GoogleAccount() GoogleAccountPtrOutput {
	return o.ApplyT(func(v *Authentication) *GoogleAccount {
		if v == nil {
			return nil
		}
		return v.GoogleAccount
	}).(GoogleAccountPtrOutput)
}

// Scan authentication configuration.
type AuthenticationResponse struct {
	// Authentication using a custom account.
	CustomAccount CustomAccountResponse `pulumi:"customAccount"`
	// Authentication using a Google account.
	GoogleAccount GoogleAccountResponse `pulumi:"googleAccount"`
}

// AuthenticationResponseInput is an input type that accepts AuthenticationResponseArgs and AuthenticationResponseOutput values.
// You can construct a concrete instance of `AuthenticationResponseInput` via:
//
//          AuthenticationResponseArgs{...}
type AuthenticationResponseInput interface {
	pulumi.Input

	ToAuthenticationResponseOutput() AuthenticationResponseOutput
	ToAuthenticationResponseOutputWithContext(context.Context) AuthenticationResponseOutput
}

// Scan authentication configuration.
type AuthenticationResponseArgs struct {
	// Authentication using a custom account.
	CustomAccount CustomAccountResponseInput `pulumi:"customAccount"`
	// Authentication using a Google account.
	GoogleAccount GoogleAccountResponseInput `pulumi:"googleAccount"`
}

func (AuthenticationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationResponse)(nil)).Elem()
}

func (i AuthenticationResponseArgs) ToAuthenticationResponseOutput() AuthenticationResponseOutput {
	return i.ToAuthenticationResponseOutputWithContext(context.Background())
}

func (i AuthenticationResponseArgs) ToAuthenticationResponseOutputWithContext(ctx context.Context) AuthenticationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationResponseOutput)
}

func (i AuthenticationResponseArgs) ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput {
	return i.ToAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (i AuthenticationResponseArgs) ToAuthenticationResponsePtrOutputWithContext(ctx context.Context) AuthenticationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationResponseOutput).ToAuthenticationResponsePtrOutputWithContext(ctx)
}

// AuthenticationResponsePtrInput is an input type that accepts AuthenticationResponseArgs, AuthenticationResponsePtr and AuthenticationResponsePtrOutput values.
// You can construct a concrete instance of `AuthenticationResponsePtrInput` via:
//
//          AuthenticationResponseArgs{...}
//
//  or:
//
//          nil
type AuthenticationResponsePtrInput interface {
	pulumi.Input

	ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput
	ToAuthenticationResponsePtrOutputWithContext(context.Context) AuthenticationResponsePtrOutput
}

type authenticationResponsePtrType AuthenticationResponseArgs

func AuthenticationResponsePtr(v *AuthenticationResponseArgs) AuthenticationResponsePtrInput {
	return (*authenticationResponsePtrType)(v)
}

func (*authenticationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationResponse)(nil)).Elem()
}

func (i *authenticationResponsePtrType) ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput {
	return i.ToAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (i *authenticationResponsePtrType) ToAuthenticationResponsePtrOutputWithContext(ctx context.Context) AuthenticationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationResponsePtrOutput)
}

// Scan authentication configuration.
type AuthenticationResponseOutput struct{ *pulumi.OutputState }

func (AuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationResponse)(nil)).Elem()
}

func (o AuthenticationResponseOutput) ToAuthenticationResponseOutput() AuthenticationResponseOutput {
	return o
}

func (o AuthenticationResponseOutput) ToAuthenticationResponseOutputWithContext(ctx context.Context) AuthenticationResponseOutput {
	return o
}

func (o AuthenticationResponseOutput) ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput {
	return o.ToAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (o AuthenticationResponseOutput) ToAuthenticationResponsePtrOutputWithContext(ctx context.Context) AuthenticationResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthenticationResponse) *AuthenticationResponse {
		return &v
	}).(AuthenticationResponsePtrOutput)
}

// Authentication using a custom account.
func (o AuthenticationResponseOutput) CustomAccount() CustomAccountResponseOutput {
	return o.ApplyT(func(v AuthenticationResponse) CustomAccountResponse { return v.CustomAccount }).(CustomAccountResponseOutput)
}

// Authentication using a Google account.
func (o AuthenticationResponseOutput) GoogleAccount() GoogleAccountResponseOutput {
	return o.ApplyT(func(v AuthenticationResponse) GoogleAccountResponse { return v.GoogleAccount }).(GoogleAccountResponseOutput)
}

type AuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationResponse)(nil)).Elem()
}

func (o AuthenticationResponsePtrOutput) ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput {
	return o
}

func (o AuthenticationResponsePtrOutput) ToAuthenticationResponsePtrOutputWithContext(ctx context.Context) AuthenticationResponsePtrOutput {
	return o
}

func (o AuthenticationResponsePtrOutput) Elem() AuthenticationResponseOutput {
	return o.ApplyT(func(v *AuthenticationResponse) AuthenticationResponse {
		if v != nil {
			return *v
		}
		var ret AuthenticationResponse
		return ret
	}).(AuthenticationResponseOutput)
}

// Authentication using a custom account.
func (o AuthenticationResponsePtrOutput) CustomAccount() CustomAccountResponsePtrOutput {
	return o.ApplyT(func(v *AuthenticationResponse) *CustomAccountResponse {
		if v == nil {
			return nil
		}
		return &v.CustomAccount
	}).(CustomAccountResponsePtrOutput)
}

// Authentication using a Google account.
func (o AuthenticationResponsePtrOutput) GoogleAccount() GoogleAccountResponsePtrOutput {
	return o.ApplyT(func(v *AuthenticationResponse) *GoogleAccountResponse {
		if v == nil {
			return nil
		}
		return &v.GoogleAccount
	}).(GoogleAccountResponsePtrOutput)
}

// Describes authentication configuration that uses a custom account.
type CustomAccount struct {
	// The login form URL of the website.
	LoginUrl string `pulumi:"loginUrl"`
	// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password string `pulumi:"password"`
	// The user name of the custom account.
	Username string `pulumi:"username"`
}

// CustomAccountInput is an input type that accepts CustomAccountArgs and CustomAccountOutput values.
// You can construct a concrete instance of `CustomAccountInput` via:
//
//          CustomAccountArgs{...}
type CustomAccountInput interface {
	pulumi.Input

	ToCustomAccountOutput() CustomAccountOutput
	ToCustomAccountOutputWithContext(context.Context) CustomAccountOutput
}

// Describes authentication configuration that uses a custom account.
type CustomAccountArgs struct {
	// The login form URL of the website.
	LoginUrl pulumi.StringInput `pulumi:"loginUrl"`
	// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password pulumi.StringInput `pulumi:"password"`
	// The user name of the custom account.
	Username pulumi.StringInput `pulumi:"username"`
}

func (CustomAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomAccount)(nil)).Elem()
}

func (i CustomAccountArgs) ToCustomAccountOutput() CustomAccountOutput {
	return i.ToCustomAccountOutputWithContext(context.Background())
}

func (i CustomAccountArgs) ToCustomAccountOutputWithContext(ctx context.Context) CustomAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAccountOutput)
}

func (i CustomAccountArgs) ToCustomAccountPtrOutput() CustomAccountPtrOutput {
	return i.ToCustomAccountPtrOutputWithContext(context.Background())
}

func (i CustomAccountArgs) ToCustomAccountPtrOutputWithContext(ctx context.Context) CustomAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAccountOutput).ToCustomAccountPtrOutputWithContext(ctx)
}

// CustomAccountPtrInput is an input type that accepts CustomAccountArgs, CustomAccountPtr and CustomAccountPtrOutput values.
// You can construct a concrete instance of `CustomAccountPtrInput` via:
//
//          CustomAccountArgs{...}
//
//  or:
//
//          nil
type CustomAccountPtrInput interface {
	pulumi.Input

	ToCustomAccountPtrOutput() CustomAccountPtrOutput
	ToCustomAccountPtrOutputWithContext(context.Context) CustomAccountPtrOutput
}

type customAccountPtrType CustomAccountArgs

func CustomAccountPtr(v *CustomAccountArgs) CustomAccountPtrInput {
	return (*customAccountPtrType)(v)
}

func (*customAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAccount)(nil)).Elem()
}

func (i *customAccountPtrType) ToCustomAccountPtrOutput() CustomAccountPtrOutput {
	return i.ToCustomAccountPtrOutputWithContext(context.Background())
}

func (i *customAccountPtrType) ToCustomAccountPtrOutputWithContext(ctx context.Context) CustomAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAccountPtrOutput)
}

// Describes authentication configuration that uses a custom account.
type CustomAccountOutput struct{ *pulumi.OutputState }

func (CustomAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomAccount)(nil)).Elem()
}

func (o CustomAccountOutput) ToCustomAccountOutput() CustomAccountOutput {
	return o
}

func (o CustomAccountOutput) ToCustomAccountOutputWithContext(ctx context.Context) CustomAccountOutput {
	return o
}

func (o CustomAccountOutput) ToCustomAccountPtrOutput() CustomAccountPtrOutput {
	return o.ToCustomAccountPtrOutputWithContext(context.Background())
}

func (o CustomAccountOutput) ToCustomAccountPtrOutputWithContext(ctx context.Context) CustomAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomAccount) *CustomAccount {
		return &v
	}).(CustomAccountPtrOutput)
}

// The login form URL of the website.
func (o CustomAccountOutput) LoginUrl() pulumi.StringOutput {
	return o.ApplyT(func(v CustomAccount) string { return v.LoginUrl }).(pulumi.StringOutput)
}

// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o CustomAccountOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v CustomAccount) string { return v.Password }).(pulumi.StringOutput)
}

// The user name of the custom account.
func (o CustomAccountOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v CustomAccount) string { return v.Username }).(pulumi.StringOutput)
}

type CustomAccountPtrOutput struct{ *pulumi.OutputState }

func (CustomAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAccount)(nil)).Elem()
}

func (o CustomAccountPtrOutput) ToCustomAccountPtrOutput() CustomAccountPtrOutput {
	return o
}

func (o CustomAccountPtrOutput) ToCustomAccountPtrOutputWithContext(ctx context.Context) CustomAccountPtrOutput {
	return o
}

func (o CustomAccountPtrOutput) Elem() CustomAccountOutput {
	return o.ApplyT(func(v *CustomAccount) CustomAccount {
		if v != nil {
			return *v
		}
		var ret CustomAccount
		return ret
	}).(CustomAccountOutput)
}

// The login form URL of the website.
func (o CustomAccountPtrOutput) LoginUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAccount) *string {
		if v == nil {
			return nil
		}
		return &v.LoginUrl
	}).(pulumi.StringPtrOutput)
}

// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o CustomAccountPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The user name of the custom account.
func (o CustomAccountPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Describes authentication configuration that uses a custom account.
type CustomAccountResponse struct {
	// The login form URL of the website.
	LoginUrl string `pulumi:"loginUrl"`
	// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password string `pulumi:"password"`
	// The user name of the custom account.
	Username string `pulumi:"username"`
}

// CustomAccountResponseInput is an input type that accepts CustomAccountResponseArgs and CustomAccountResponseOutput values.
// You can construct a concrete instance of `CustomAccountResponseInput` via:
//
//          CustomAccountResponseArgs{...}
type CustomAccountResponseInput interface {
	pulumi.Input

	ToCustomAccountResponseOutput() CustomAccountResponseOutput
	ToCustomAccountResponseOutputWithContext(context.Context) CustomAccountResponseOutput
}

// Describes authentication configuration that uses a custom account.
type CustomAccountResponseArgs struct {
	// The login form URL of the website.
	LoginUrl pulumi.StringInput `pulumi:"loginUrl"`
	// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password pulumi.StringInput `pulumi:"password"`
	// The user name of the custom account.
	Username pulumi.StringInput `pulumi:"username"`
}

func (CustomAccountResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomAccountResponse)(nil)).Elem()
}

func (i CustomAccountResponseArgs) ToCustomAccountResponseOutput() CustomAccountResponseOutput {
	return i.ToCustomAccountResponseOutputWithContext(context.Background())
}

func (i CustomAccountResponseArgs) ToCustomAccountResponseOutputWithContext(ctx context.Context) CustomAccountResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAccountResponseOutput)
}

func (i CustomAccountResponseArgs) ToCustomAccountResponsePtrOutput() CustomAccountResponsePtrOutput {
	return i.ToCustomAccountResponsePtrOutputWithContext(context.Background())
}

func (i CustomAccountResponseArgs) ToCustomAccountResponsePtrOutputWithContext(ctx context.Context) CustomAccountResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAccountResponseOutput).ToCustomAccountResponsePtrOutputWithContext(ctx)
}

// CustomAccountResponsePtrInput is an input type that accepts CustomAccountResponseArgs, CustomAccountResponsePtr and CustomAccountResponsePtrOutput values.
// You can construct a concrete instance of `CustomAccountResponsePtrInput` via:
//
//          CustomAccountResponseArgs{...}
//
//  or:
//
//          nil
type CustomAccountResponsePtrInput interface {
	pulumi.Input

	ToCustomAccountResponsePtrOutput() CustomAccountResponsePtrOutput
	ToCustomAccountResponsePtrOutputWithContext(context.Context) CustomAccountResponsePtrOutput
}

type customAccountResponsePtrType CustomAccountResponseArgs

func CustomAccountResponsePtr(v *CustomAccountResponseArgs) CustomAccountResponsePtrInput {
	return (*customAccountResponsePtrType)(v)
}

func (*customAccountResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAccountResponse)(nil)).Elem()
}

func (i *customAccountResponsePtrType) ToCustomAccountResponsePtrOutput() CustomAccountResponsePtrOutput {
	return i.ToCustomAccountResponsePtrOutputWithContext(context.Background())
}

func (i *customAccountResponsePtrType) ToCustomAccountResponsePtrOutputWithContext(ctx context.Context) CustomAccountResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAccountResponsePtrOutput)
}

// Describes authentication configuration that uses a custom account.
type CustomAccountResponseOutput struct{ *pulumi.OutputState }

func (CustomAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomAccountResponse)(nil)).Elem()
}

func (o CustomAccountResponseOutput) ToCustomAccountResponseOutput() CustomAccountResponseOutput {
	return o
}

func (o CustomAccountResponseOutput) ToCustomAccountResponseOutputWithContext(ctx context.Context) CustomAccountResponseOutput {
	return o
}

func (o CustomAccountResponseOutput) ToCustomAccountResponsePtrOutput() CustomAccountResponsePtrOutput {
	return o.ToCustomAccountResponsePtrOutputWithContext(context.Background())
}

func (o CustomAccountResponseOutput) ToCustomAccountResponsePtrOutputWithContext(ctx context.Context) CustomAccountResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomAccountResponse) *CustomAccountResponse {
		return &v
	}).(CustomAccountResponsePtrOutput)
}

// The login form URL of the website.
func (o CustomAccountResponseOutput) LoginUrl() pulumi.StringOutput {
	return o.ApplyT(func(v CustomAccountResponse) string { return v.LoginUrl }).(pulumi.StringOutput)
}

// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o CustomAccountResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v CustomAccountResponse) string { return v.Password }).(pulumi.StringOutput)
}

// The user name of the custom account.
func (o CustomAccountResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v CustomAccountResponse) string { return v.Username }).(pulumi.StringOutput)
}

type CustomAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAccountResponse)(nil)).Elem()
}

func (o CustomAccountResponsePtrOutput) ToCustomAccountResponsePtrOutput() CustomAccountResponsePtrOutput {
	return o
}

func (o CustomAccountResponsePtrOutput) ToCustomAccountResponsePtrOutputWithContext(ctx context.Context) CustomAccountResponsePtrOutput {
	return o
}

func (o CustomAccountResponsePtrOutput) Elem() CustomAccountResponseOutput {
	return o.ApplyT(func(v *CustomAccountResponse) CustomAccountResponse {
		if v != nil {
			return *v
		}
		var ret CustomAccountResponse
		return ret
	}).(CustomAccountResponseOutput)
}

// The login form URL of the website.
func (o CustomAccountResponsePtrOutput) LoginUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAccountResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LoginUrl
	}).(pulumi.StringPtrOutput)
}

// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o CustomAccountResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAccountResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The user name of the custom account.
func (o CustomAccountResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAccountResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Describes authentication configuration that uses a Google account.
type GoogleAccount struct {
	// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password string `pulumi:"password"`
	// The user name of the Google account.
	Username string `pulumi:"username"`
}

// GoogleAccountInput is an input type that accepts GoogleAccountArgs and GoogleAccountOutput values.
// You can construct a concrete instance of `GoogleAccountInput` via:
//
//          GoogleAccountArgs{...}
type GoogleAccountInput interface {
	pulumi.Input

	ToGoogleAccountOutput() GoogleAccountOutput
	ToGoogleAccountOutputWithContext(context.Context) GoogleAccountOutput
}

// Describes authentication configuration that uses a Google account.
type GoogleAccountArgs struct {
	// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password pulumi.StringInput `pulumi:"password"`
	// The user name of the Google account.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GoogleAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleAccount)(nil)).Elem()
}

func (i GoogleAccountArgs) ToGoogleAccountOutput() GoogleAccountOutput {
	return i.ToGoogleAccountOutputWithContext(context.Background())
}

func (i GoogleAccountArgs) ToGoogleAccountOutputWithContext(ctx context.Context) GoogleAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAccountOutput)
}

func (i GoogleAccountArgs) ToGoogleAccountPtrOutput() GoogleAccountPtrOutput {
	return i.ToGoogleAccountPtrOutputWithContext(context.Background())
}

func (i GoogleAccountArgs) ToGoogleAccountPtrOutputWithContext(ctx context.Context) GoogleAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAccountOutput).ToGoogleAccountPtrOutputWithContext(ctx)
}

// GoogleAccountPtrInput is an input type that accepts GoogleAccountArgs, GoogleAccountPtr and GoogleAccountPtrOutput values.
// You can construct a concrete instance of `GoogleAccountPtrInput` via:
//
//          GoogleAccountArgs{...}
//
//  or:
//
//          nil
type GoogleAccountPtrInput interface {
	pulumi.Input

	ToGoogleAccountPtrOutput() GoogleAccountPtrOutput
	ToGoogleAccountPtrOutputWithContext(context.Context) GoogleAccountPtrOutput
}

type googleAccountPtrType GoogleAccountArgs

func GoogleAccountPtr(v *GoogleAccountArgs) GoogleAccountPtrInput {
	return (*googleAccountPtrType)(v)
}

func (*googleAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleAccount)(nil)).Elem()
}

func (i *googleAccountPtrType) ToGoogleAccountPtrOutput() GoogleAccountPtrOutput {
	return i.ToGoogleAccountPtrOutputWithContext(context.Background())
}

func (i *googleAccountPtrType) ToGoogleAccountPtrOutputWithContext(ctx context.Context) GoogleAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAccountPtrOutput)
}

// Describes authentication configuration that uses a Google account.
type GoogleAccountOutput struct{ *pulumi.OutputState }

func (GoogleAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleAccount)(nil)).Elem()
}

func (o GoogleAccountOutput) ToGoogleAccountOutput() GoogleAccountOutput {
	return o
}

func (o GoogleAccountOutput) ToGoogleAccountOutputWithContext(ctx context.Context) GoogleAccountOutput {
	return o
}

func (o GoogleAccountOutput) ToGoogleAccountPtrOutput() GoogleAccountPtrOutput {
	return o.ToGoogleAccountPtrOutputWithContext(context.Background())
}

func (o GoogleAccountOutput) ToGoogleAccountPtrOutputWithContext(ctx context.Context) GoogleAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleAccount) *GoogleAccount {
		return &v
	}).(GoogleAccountPtrOutput)
}

// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o GoogleAccountOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleAccount) string { return v.Password }).(pulumi.StringOutput)
}

// The user name of the Google account.
func (o GoogleAccountOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleAccount) string { return v.Username }).(pulumi.StringOutput)
}

type GoogleAccountPtrOutput struct{ *pulumi.OutputState }

func (GoogleAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleAccount)(nil)).Elem()
}

func (o GoogleAccountPtrOutput) ToGoogleAccountPtrOutput() GoogleAccountPtrOutput {
	return o
}

func (o GoogleAccountPtrOutput) ToGoogleAccountPtrOutputWithContext(ctx context.Context) GoogleAccountPtrOutput {
	return o
}

func (o GoogleAccountPtrOutput) Elem() GoogleAccountOutput {
	return o.ApplyT(func(v *GoogleAccount) GoogleAccount {
		if v != nil {
			return *v
		}
		var ret GoogleAccount
		return ret
	}).(GoogleAccountOutput)
}

// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o GoogleAccountPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The user name of the Google account.
func (o GoogleAccountPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Describes authentication configuration that uses a Google account.
type GoogleAccountResponse struct {
	// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password string `pulumi:"password"`
	// The user name of the Google account.
	Username string `pulumi:"username"`
}

// GoogleAccountResponseInput is an input type that accepts GoogleAccountResponseArgs and GoogleAccountResponseOutput values.
// You can construct a concrete instance of `GoogleAccountResponseInput` via:
//
//          GoogleAccountResponseArgs{...}
type GoogleAccountResponseInput interface {
	pulumi.Input

	ToGoogleAccountResponseOutput() GoogleAccountResponseOutput
	ToGoogleAccountResponseOutputWithContext(context.Context) GoogleAccountResponseOutput
}

// Describes authentication configuration that uses a Google account.
type GoogleAccountResponseArgs struct {
	// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password pulumi.StringInput `pulumi:"password"`
	// The user name of the Google account.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GoogleAccountResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleAccountResponse)(nil)).Elem()
}

func (i GoogleAccountResponseArgs) ToGoogleAccountResponseOutput() GoogleAccountResponseOutput {
	return i.ToGoogleAccountResponseOutputWithContext(context.Background())
}

func (i GoogleAccountResponseArgs) ToGoogleAccountResponseOutputWithContext(ctx context.Context) GoogleAccountResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAccountResponseOutput)
}

func (i GoogleAccountResponseArgs) ToGoogleAccountResponsePtrOutput() GoogleAccountResponsePtrOutput {
	return i.ToGoogleAccountResponsePtrOutputWithContext(context.Background())
}

func (i GoogleAccountResponseArgs) ToGoogleAccountResponsePtrOutputWithContext(ctx context.Context) GoogleAccountResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAccountResponseOutput).ToGoogleAccountResponsePtrOutputWithContext(ctx)
}

// GoogleAccountResponsePtrInput is an input type that accepts GoogleAccountResponseArgs, GoogleAccountResponsePtr and GoogleAccountResponsePtrOutput values.
// You can construct a concrete instance of `GoogleAccountResponsePtrInput` via:
//
//          GoogleAccountResponseArgs{...}
//
//  or:
//
//          nil
type GoogleAccountResponsePtrInput interface {
	pulumi.Input

	ToGoogleAccountResponsePtrOutput() GoogleAccountResponsePtrOutput
	ToGoogleAccountResponsePtrOutputWithContext(context.Context) GoogleAccountResponsePtrOutput
}

type googleAccountResponsePtrType GoogleAccountResponseArgs

func GoogleAccountResponsePtr(v *GoogleAccountResponseArgs) GoogleAccountResponsePtrInput {
	return (*googleAccountResponsePtrType)(v)
}

func (*googleAccountResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleAccountResponse)(nil)).Elem()
}

func (i *googleAccountResponsePtrType) ToGoogleAccountResponsePtrOutput() GoogleAccountResponsePtrOutput {
	return i.ToGoogleAccountResponsePtrOutputWithContext(context.Background())
}

func (i *googleAccountResponsePtrType) ToGoogleAccountResponsePtrOutputWithContext(ctx context.Context) GoogleAccountResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAccountResponsePtrOutput)
}

// Describes authentication configuration that uses a Google account.
type GoogleAccountResponseOutput struct{ *pulumi.OutputState }

func (GoogleAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleAccountResponse)(nil)).Elem()
}

func (o GoogleAccountResponseOutput) ToGoogleAccountResponseOutput() GoogleAccountResponseOutput {
	return o
}

func (o GoogleAccountResponseOutput) ToGoogleAccountResponseOutputWithContext(ctx context.Context) GoogleAccountResponseOutput {
	return o
}

func (o GoogleAccountResponseOutput) ToGoogleAccountResponsePtrOutput() GoogleAccountResponsePtrOutput {
	return o.ToGoogleAccountResponsePtrOutputWithContext(context.Background())
}

func (o GoogleAccountResponseOutput) ToGoogleAccountResponsePtrOutputWithContext(ctx context.Context) GoogleAccountResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleAccountResponse) *GoogleAccountResponse {
		return &v
	}).(GoogleAccountResponsePtrOutput)
}

// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o GoogleAccountResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleAccountResponse) string { return v.Password }).(pulumi.StringOutput)
}

// The user name of the Google account.
func (o GoogleAccountResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleAccountResponse) string { return v.Username }).(pulumi.StringOutput)
}

type GoogleAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (GoogleAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleAccountResponse)(nil)).Elem()
}

func (o GoogleAccountResponsePtrOutput) ToGoogleAccountResponsePtrOutput() GoogleAccountResponsePtrOutput {
	return o
}

func (o GoogleAccountResponsePtrOutput) ToGoogleAccountResponsePtrOutputWithContext(ctx context.Context) GoogleAccountResponsePtrOutput {
	return o
}

func (o GoogleAccountResponsePtrOutput) Elem() GoogleAccountResponseOutput {
	return o.ApplyT(func(v *GoogleAccountResponse) GoogleAccountResponse {
		if v != nil {
			return *v
		}
		var ret GoogleAccountResponse
		return ret
	}).(GoogleAccountResponseOutput)
}

// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o GoogleAccountResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleAccountResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The user name of the Google account.
func (o GoogleAccountResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleAccountResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// A ScanRun is a output-only resource representing an actual run of the scan.
type ScanRun struct {
	// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
	EndTime *string `pulumi:"endTime"`
	// The execution state of the ScanRun.
	ExecutionState *ScanRunExecutionState `pulumi:"executionState"`
	// Whether the scan run has found any vulnerabilities.
	HasVulnerabilities *bool `pulumi:"hasVulnerabilities"`
	// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
	Name *string `pulumi:"name"`
	// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
	ProgressPercent *int `pulumi:"progressPercent"`
	// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
	ResultState *ScanRunResultState `pulumi:"resultState"`
	// The time at which the ScanRun started.
	StartTime *string `pulumi:"startTime"`
	// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
	UrlsCrawledCount *string `pulumi:"urlsCrawledCount"`
	// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
	UrlsTestedCount *string `pulumi:"urlsTestedCount"`
}

// ScanRunInput is an input type that accepts ScanRunArgs and ScanRunOutput values.
// You can construct a concrete instance of `ScanRunInput` via:
//
//          ScanRunArgs{...}
type ScanRunInput interface {
	pulumi.Input

	ToScanRunOutput() ScanRunOutput
	ToScanRunOutputWithContext(context.Context) ScanRunOutput
}

// A ScanRun is a output-only resource representing an actual run of the scan.
type ScanRunArgs struct {
	// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The execution state of the ScanRun.
	ExecutionState ScanRunExecutionStatePtrInput `pulumi:"executionState"`
	// Whether the scan run has found any vulnerabilities.
	HasVulnerabilities pulumi.BoolPtrInput `pulumi:"hasVulnerabilities"`
	// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
	ProgressPercent pulumi.IntPtrInput `pulumi:"progressPercent"`
	// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
	ResultState ScanRunResultStatePtrInput `pulumi:"resultState"`
	// The time at which the ScanRun started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
	UrlsCrawledCount pulumi.StringPtrInput `pulumi:"urlsCrawledCount"`
	// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
	UrlsTestedCount pulumi.StringPtrInput `pulumi:"urlsTestedCount"`
}

func (ScanRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRun)(nil)).Elem()
}

func (i ScanRunArgs) ToScanRunOutput() ScanRunOutput {
	return i.ToScanRunOutputWithContext(context.Background())
}

func (i ScanRunArgs) ToScanRunOutputWithContext(ctx context.Context) ScanRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunOutput)
}

func (i ScanRunArgs) ToScanRunPtrOutput() ScanRunPtrOutput {
	return i.ToScanRunPtrOutputWithContext(context.Background())
}

func (i ScanRunArgs) ToScanRunPtrOutputWithContext(ctx context.Context) ScanRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunOutput).ToScanRunPtrOutputWithContext(ctx)
}

// ScanRunPtrInput is an input type that accepts ScanRunArgs, ScanRunPtr and ScanRunPtrOutput values.
// You can construct a concrete instance of `ScanRunPtrInput` via:
//
//          ScanRunArgs{...}
//
//  or:
//
//          nil
type ScanRunPtrInput interface {
	pulumi.Input

	ToScanRunPtrOutput() ScanRunPtrOutput
	ToScanRunPtrOutputWithContext(context.Context) ScanRunPtrOutput
}

type scanRunPtrType ScanRunArgs

func ScanRunPtr(v *ScanRunArgs) ScanRunPtrInput {
	return (*scanRunPtrType)(v)
}

func (*scanRunPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanRun)(nil)).Elem()
}

func (i *scanRunPtrType) ToScanRunPtrOutput() ScanRunPtrOutput {
	return i.ToScanRunPtrOutputWithContext(context.Background())
}

func (i *scanRunPtrType) ToScanRunPtrOutputWithContext(ctx context.Context) ScanRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunPtrOutput)
}

// A ScanRun is a output-only resource representing an actual run of the scan.
type ScanRunOutput struct{ *pulumi.OutputState }

func (ScanRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRun)(nil)).Elem()
}

func (o ScanRunOutput) ToScanRunOutput() ScanRunOutput {
	return o
}

func (o ScanRunOutput) ToScanRunOutputWithContext(ctx context.Context) ScanRunOutput {
	return o
}

func (o ScanRunOutput) ToScanRunPtrOutput() ScanRunPtrOutput {
	return o.ToScanRunPtrOutputWithContext(context.Background())
}

func (o ScanRunOutput) ToScanRunPtrOutputWithContext(ctx context.Context) ScanRunPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScanRun) *ScanRun {
		return &v
	}).(ScanRunPtrOutput)
}

// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
func (o ScanRunOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScanRun) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The execution state of the ScanRun.
func (o ScanRunOutput) ExecutionState() ScanRunExecutionStatePtrOutput {
	return o.ApplyT(func(v ScanRun) *ScanRunExecutionState { return v.ExecutionState }).(ScanRunExecutionStatePtrOutput)
}

// Whether the scan run has found any vulnerabilities.
func (o ScanRunOutput) HasVulnerabilities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScanRun) *bool { return v.HasVulnerabilities }).(pulumi.BoolPtrOutput)
}

// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
func (o ScanRunOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScanRun) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
func (o ScanRunOutput) ProgressPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScanRun) *int { return v.ProgressPercent }).(pulumi.IntPtrOutput)
}

// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
func (o ScanRunOutput) ResultState() ScanRunResultStatePtrOutput {
	return o.ApplyT(func(v ScanRun) *ScanRunResultState { return v.ResultState }).(ScanRunResultStatePtrOutput)
}

// The time at which the ScanRun started.
func (o ScanRunOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScanRun) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
func (o ScanRunOutput) UrlsCrawledCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScanRun) *string { return v.UrlsCrawledCount }).(pulumi.StringPtrOutput)
}

// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
func (o ScanRunOutput) UrlsTestedCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScanRun) *string { return v.UrlsTestedCount }).(pulumi.StringPtrOutput)
}

type ScanRunPtrOutput struct{ *pulumi.OutputState }

func (ScanRunPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanRun)(nil)).Elem()
}

func (o ScanRunPtrOutput) ToScanRunPtrOutput() ScanRunPtrOutput {
	return o
}

func (o ScanRunPtrOutput) ToScanRunPtrOutputWithContext(ctx context.Context) ScanRunPtrOutput {
	return o
}

func (o ScanRunPtrOutput) Elem() ScanRunOutput {
	return o.ApplyT(func(v *ScanRun) ScanRun {
		if v != nil {
			return *v
		}
		var ret ScanRun
		return ret
	}).(ScanRunOutput)
}

// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
func (o ScanRunPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRun) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// The execution state of the ScanRun.
func (o ScanRunPtrOutput) ExecutionState() ScanRunExecutionStatePtrOutput {
	return o.ApplyT(func(v *ScanRun) *ScanRunExecutionState {
		if v == nil {
			return nil
		}
		return v.ExecutionState
	}).(ScanRunExecutionStatePtrOutput)
}

// Whether the scan run has found any vulnerabilities.
func (o ScanRunPtrOutput) HasVulnerabilities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScanRun) *bool {
		if v == nil {
			return nil
		}
		return v.HasVulnerabilities
	}).(pulumi.BoolPtrOutput)
}

// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
func (o ScanRunPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRun) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
func (o ScanRunPtrOutput) ProgressPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScanRun) *int {
		if v == nil {
			return nil
		}
		return v.ProgressPercent
	}).(pulumi.IntPtrOutput)
}

// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
func (o ScanRunPtrOutput) ResultState() ScanRunResultStatePtrOutput {
	return o.ApplyT(func(v *ScanRun) *ScanRunResultState {
		if v == nil {
			return nil
		}
		return v.ResultState
	}).(ScanRunResultStatePtrOutput)
}

// The time at which the ScanRun started.
func (o ScanRunPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRun) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
func (o ScanRunPtrOutput) UrlsCrawledCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRun) *string {
		if v == nil {
			return nil
		}
		return v.UrlsCrawledCount
	}).(pulumi.StringPtrOutput)
}

// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
func (o ScanRunPtrOutput) UrlsTestedCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRun) *string {
		if v == nil {
			return nil
		}
		return v.UrlsTestedCount
	}).(pulumi.StringPtrOutput)
}

// A ScanRun is a output-only resource representing an actual run of the scan.
type ScanRunResponse struct {
	// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
	EndTime string `pulumi:"endTime"`
	// The execution state of the ScanRun.
	ExecutionState string `pulumi:"executionState"`
	// Whether the scan run has found any vulnerabilities.
	HasVulnerabilities bool `pulumi:"hasVulnerabilities"`
	// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
	Name string `pulumi:"name"`
	// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
	ProgressPercent int `pulumi:"progressPercent"`
	// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
	ResultState string `pulumi:"resultState"`
	// The time at which the ScanRun started.
	StartTime string `pulumi:"startTime"`
	// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
	UrlsCrawledCount string `pulumi:"urlsCrawledCount"`
	// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
	UrlsTestedCount string `pulumi:"urlsTestedCount"`
}

// ScanRunResponseInput is an input type that accepts ScanRunResponseArgs and ScanRunResponseOutput values.
// You can construct a concrete instance of `ScanRunResponseInput` via:
//
//          ScanRunResponseArgs{...}
type ScanRunResponseInput interface {
	pulumi.Input

	ToScanRunResponseOutput() ScanRunResponseOutput
	ToScanRunResponseOutputWithContext(context.Context) ScanRunResponseOutput
}

// A ScanRun is a output-only resource representing an actual run of the scan.
type ScanRunResponseArgs struct {
	// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The execution state of the ScanRun.
	ExecutionState pulumi.StringInput `pulumi:"executionState"`
	// Whether the scan run has found any vulnerabilities.
	HasVulnerabilities pulumi.BoolInput `pulumi:"hasVulnerabilities"`
	// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
	Name pulumi.StringInput `pulumi:"name"`
	// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
	ProgressPercent pulumi.IntInput `pulumi:"progressPercent"`
	// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
	ResultState pulumi.StringInput `pulumi:"resultState"`
	// The time at which the ScanRun started.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
	UrlsCrawledCount pulumi.StringInput `pulumi:"urlsCrawledCount"`
	// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
	UrlsTestedCount pulumi.StringInput `pulumi:"urlsTestedCount"`
}

func (ScanRunResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRunResponse)(nil)).Elem()
}

func (i ScanRunResponseArgs) ToScanRunResponseOutput() ScanRunResponseOutput {
	return i.ToScanRunResponseOutputWithContext(context.Background())
}

func (i ScanRunResponseArgs) ToScanRunResponseOutputWithContext(ctx context.Context) ScanRunResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunResponseOutput)
}

func (i ScanRunResponseArgs) ToScanRunResponsePtrOutput() ScanRunResponsePtrOutput {
	return i.ToScanRunResponsePtrOutputWithContext(context.Background())
}

func (i ScanRunResponseArgs) ToScanRunResponsePtrOutputWithContext(ctx context.Context) ScanRunResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunResponseOutput).ToScanRunResponsePtrOutputWithContext(ctx)
}

// ScanRunResponsePtrInput is an input type that accepts ScanRunResponseArgs, ScanRunResponsePtr and ScanRunResponsePtrOutput values.
// You can construct a concrete instance of `ScanRunResponsePtrInput` via:
//
//          ScanRunResponseArgs{...}
//
//  or:
//
//          nil
type ScanRunResponsePtrInput interface {
	pulumi.Input

	ToScanRunResponsePtrOutput() ScanRunResponsePtrOutput
	ToScanRunResponsePtrOutputWithContext(context.Context) ScanRunResponsePtrOutput
}

type scanRunResponsePtrType ScanRunResponseArgs

func ScanRunResponsePtr(v *ScanRunResponseArgs) ScanRunResponsePtrInput {
	return (*scanRunResponsePtrType)(v)
}

func (*scanRunResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanRunResponse)(nil)).Elem()
}

func (i *scanRunResponsePtrType) ToScanRunResponsePtrOutput() ScanRunResponsePtrOutput {
	return i.ToScanRunResponsePtrOutputWithContext(context.Background())
}

func (i *scanRunResponsePtrType) ToScanRunResponsePtrOutputWithContext(ctx context.Context) ScanRunResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunResponsePtrOutput)
}

// A ScanRun is a output-only resource representing an actual run of the scan.
type ScanRunResponseOutput struct{ *pulumi.OutputState }

func (ScanRunResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRunResponse)(nil)).Elem()
}

func (o ScanRunResponseOutput) ToScanRunResponseOutput() ScanRunResponseOutput {
	return o
}

func (o ScanRunResponseOutput) ToScanRunResponseOutputWithContext(ctx context.Context) ScanRunResponseOutput {
	return o
}

func (o ScanRunResponseOutput) ToScanRunResponsePtrOutput() ScanRunResponsePtrOutput {
	return o.ToScanRunResponsePtrOutputWithContext(context.Background())
}

func (o ScanRunResponseOutput) ToScanRunResponsePtrOutputWithContext(ctx context.Context) ScanRunResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScanRunResponse) *ScanRunResponse {
		return &v
	}).(ScanRunResponsePtrOutput)
}

// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
func (o ScanRunResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// The execution state of the ScanRun.
func (o ScanRunResponseOutput) ExecutionState() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunResponse) string { return v.ExecutionState }).(pulumi.StringOutput)
}

// Whether the scan run has found any vulnerabilities.
func (o ScanRunResponseOutput) HasVulnerabilities() pulumi.BoolOutput {
	return o.ApplyT(func(v ScanRunResponse) bool { return v.HasVulnerabilities }).(pulumi.BoolOutput)
}

// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
func (o ScanRunResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
func (o ScanRunResponseOutput) ProgressPercent() pulumi.IntOutput {
	return o.ApplyT(func(v ScanRunResponse) int { return v.ProgressPercent }).(pulumi.IntOutput)
}

// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
func (o ScanRunResponseOutput) ResultState() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunResponse) string { return v.ResultState }).(pulumi.StringOutput)
}

// The time at which the ScanRun started.
func (o ScanRunResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
func (o ScanRunResponseOutput) UrlsCrawledCount() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunResponse) string { return v.UrlsCrawledCount }).(pulumi.StringOutput)
}

// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
func (o ScanRunResponseOutput) UrlsTestedCount() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunResponse) string { return v.UrlsTestedCount }).(pulumi.StringOutput)
}

type ScanRunResponsePtrOutput struct{ *pulumi.OutputState }

func (ScanRunResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanRunResponse)(nil)).Elem()
}

func (o ScanRunResponsePtrOutput) ToScanRunResponsePtrOutput() ScanRunResponsePtrOutput {
	return o
}

func (o ScanRunResponsePtrOutput) ToScanRunResponsePtrOutputWithContext(ctx context.Context) ScanRunResponsePtrOutput {
	return o
}

func (o ScanRunResponsePtrOutput) Elem() ScanRunResponseOutput {
	return o.ApplyT(func(v *ScanRunResponse) ScanRunResponse {
		if v != nil {
			return *v
		}
		var ret ScanRunResponse
		return ret
	}).(ScanRunResponseOutput)
}

// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
func (o ScanRunResponsePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndTime
	}).(pulumi.StringPtrOutput)
}

// The execution state of the ScanRun.
func (o ScanRunResponsePtrOutput) ExecutionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExecutionState
	}).(pulumi.StringPtrOutput)
}

// Whether the scan run has found any vulnerabilities.
func (o ScanRunResponsePtrOutput) HasVulnerabilities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.HasVulnerabilities
	}).(pulumi.BoolPtrOutput)
}

// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
func (o ScanRunResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
func (o ScanRunResponsePtrOutput) ProgressPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ProgressPercent
	}).(pulumi.IntPtrOutput)
}

// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
func (o ScanRunResponsePtrOutput) ResultState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResultState
	}).(pulumi.StringPtrOutput)
}

// The time at which the ScanRun started.
func (o ScanRunResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
func (o ScanRunResponsePtrOutput) UrlsCrawledCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UrlsCrawledCount
	}).(pulumi.StringPtrOutput)
}

// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
func (o ScanRunResponsePtrOutput) UrlsTestedCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UrlsTestedCount
	}).(pulumi.StringPtrOutput)
}

// Scan schedule configuration.
type Schedule struct {
	// The duration of time between executions in days.
	IntervalDurationDays int `pulumi:"intervalDurationDays"`
	// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
	ScheduleTime *string `pulumi:"scheduleTime"`
}

// ScheduleInput is an input type that accepts ScheduleArgs and ScheduleOutput values.
// You can construct a concrete instance of `ScheduleInput` via:
//
//          ScheduleArgs{...}
type ScheduleInput interface {
	pulumi.Input

	ToScheduleOutput() ScheduleOutput
	ToScheduleOutputWithContext(context.Context) ScheduleOutput
}

// Scan schedule configuration.
type ScheduleArgs struct {
	// The duration of time between executions in days.
	IntervalDurationDays pulumi.IntInput `pulumi:"intervalDurationDays"`
	// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
	ScheduleTime pulumi.StringPtrInput `pulumi:"scheduleTime"`
}

func (ScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Schedule)(nil)).Elem()
}

func (i ScheduleArgs) ToScheduleOutput() ScheduleOutput {
	return i.ToScheduleOutputWithContext(context.Background())
}

func (i ScheduleArgs) ToScheduleOutputWithContext(ctx context.Context) ScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleOutput)
}

func (i ScheduleArgs) ToSchedulePtrOutput() SchedulePtrOutput {
	return i.ToSchedulePtrOutputWithContext(context.Background())
}

func (i ScheduleArgs) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleOutput).ToSchedulePtrOutputWithContext(ctx)
}

// SchedulePtrInput is an input type that accepts ScheduleArgs, SchedulePtr and SchedulePtrOutput values.
// You can construct a concrete instance of `SchedulePtrInput` via:
//
//          ScheduleArgs{...}
//
//  or:
//
//          nil
type SchedulePtrInput interface {
	pulumi.Input

	ToSchedulePtrOutput() SchedulePtrOutput
	ToSchedulePtrOutputWithContext(context.Context) SchedulePtrOutput
}

type schedulePtrType ScheduleArgs

func SchedulePtr(v *ScheduleArgs) SchedulePtrInput {
	return (*schedulePtrType)(v)
}

func (*schedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Schedule)(nil)).Elem()
}

func (i *schedulePtrType) ToSchedulePtrOutput() SchedulePtrOutput {
	return i.ToSchedulePtrOutputWithContext(context.Background())
}

func (i *schedulePtrType) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulePtrOutput)
}

// Scan schedule configuration.
type ScheduleOutput struct{ *pulumi.OutputState }

func (ScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Schedule)(nil)).Elem()
}

func (o ScheduleOutput) ToScheduleOutput() ScheduleOutput {
	return o
}

func (o ScheduleOutput) ToScheduleOutputWithContext(ctx context.Context) ScheduleOutput {
	return o
}

func (o ScheduleOutput) ToSchedulePtrOutput() SchedulePtrOutput {
	return o.ToSchedulePtrOutputWithContext(context.Background())
}

func (o ScheduleOutput) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Schedule) *Schedule {
		return &v
	}).(SchedulePtrOutput)
}

// The duration of time between executions in days.
func (o ScheduleOutput) IntervalDurationDays() pulumi.IntOutput {
	return o.ApplyT(func(v Schedule) int { return v.IntervalDurationDays }).(pulumi.IntOutput)
}

// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
func (o ScheduleOutput) ScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Schedule) *string { return v.ScheduleTime }).(pulumi.StringPtrOutput)
}

type SchedulePtrOutput struct{ *pulumi.OutputState }

func (SchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Schedule)(nil)).Elem()
}

func (o SchedulePtrOutput) ToSchedulePtrOutput() SchedulePtrOutput {
	return o
}

func (o SchedulePtrOutput) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return o
}

func (o SchedulePtrOutput) Elem() ScheduleOutput {
	return o.ApplyT(func(v *Schedule) Schedule {
		if v != nil {
			return *v
		}
		var ret Schedule
		return ret
	}).(ScheduleOutput)
}

// The duration of time between executions in days.
func (o SchedulePtrOutput) IntervalDurationDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Schedule) *int {
		if v == nil {
			return nil
		}
		return &v.IntervalDurationDays
	}).(pulumi.IntPtrOutput)
}

// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
func (o SchedulePtrOutput) ScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Schedule) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleTime
	}).(pulumi.StringPtrOutput)
}

// Scan schedule configuration.
type ScheduleResponse struct {
	// The duration of time between executions in days.
	IntervalDurationDays int `pulumi:"intervalDurationDays"`
	// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
	ScheduleTime string `pulumi:"scheduleTime"`
}

// ScheduleResponseInput is an input type that accepts ScheduleResponseArgs and ScheduleResponseOutput values.
// You can construct a concrete instance of `ScheduleResponseInput` via:
//
//          ScheduleResponseArgs{...}
type ScheduleResponseInput interface {
	pulumi.Input

	ToScheduleResponseOutput() ScheduleResponseOutput
	ToScheduleResponseOutputWithContext(context.Context) ScheduleResponseOutput
}

// Scan schedule configuration.
type ScheduleResponseArgs struct {
	// The duration of time between executions in days.
	IntervalDurationDays pulumi.IntInput `pulumi:"intervalDurationDays"`
	// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
	ScheduleTime pulumi.StringInput `pulumi:"scheduleTime"`
}

func (ScheduleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleResponse)(nil)).Elem()
}

func (i ScheduleResponseArgs) ToScheduleResponseOutput() ScheduleResponseOutput {
	return i.ToScheduleResponseOutputWithContext(context.Background())
}

func (i ScheduleResponseArgs) ToScheduleResponseOutputWithContext(ctx context.Context) ScheduleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleResponseOutput)
}

func (i ScheduleResponseArgs) ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput {
	return i.ToScheduleResponsePtrOutputWithContext(context.Background())
}

func (i ScheduleResponseArgs) ToScheduleResponsePtrOutputWithContext(ctx context.Context) ScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleResponseOutput).ToScheduleResponsePtrOutputWithContext(ctx)
}

// ScheduleResponsePtrInput is an input type that accepts ScheduleResponseArgs, ScheduleResponsePtr and ScheduleResponsePtrOutput values.
// You can construct a concrete instance of `ScheduleResponsePtrInput` via:
//
//          ScheduleResponseArgs{...}
//
//  or:
//
//          nil
type ScheduleResponsePtrInput interface {
	pulumi.Input

	ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput
	ToScheduleResponsePtrOutputWithContext(context.Context) ScheduleResponsePtrOutput
}

type scheduleResponsePtrType ScheduleResponseArgs

func ScheduleResponsePtr(v *ScheduleResponseArgs) ScheduleResponsePtrInput {
	return (*scheduleResponsePtrType)(v)
}

func (*scheduleResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleResponse)(nil)).Elem()
}

func (i *scheduleResponsePtrType) ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput {
	return i.ToScheduleResponsePtrOutputWithContext(context.Background())
}

func (i *scheduleResponsePtrType) ToScheduleResponsePtrOutputWithContext(ctx context.Context) ScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleResponsePtrOutput)
}

// Scan schedule configuration.
type ScheduleResponseOutput struct{ *pulumi.OutputState }

func (ScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleResponse)(nil)).Elem()
}

func (o ScheduleResponseOutput) ToScheduleResponseOutput() ScheduleResponseOutput {
	return o
}

func (o ScheduleResponseOutput) ToScheduleResponseOutputWithContext(ctx context.Context) ScheduleResponseOutput {
	return o
}

func (o ScheduleResponseOutput) ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput {
	return o.ToScheduleResponsePtrOutputWithContext(context.Background())
}

func (o ScheduleResponseOutput) ToScheduleResponsePtrOutputWithContext(ctx context.Context) ScheduleResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleResponse) *ScheduleResponse {
		return &v
	}).(ScheduleResponsePtrOutput)
}

// The duration of time between executions in days.
func (o ScheduleResponseOutput) IntervalDurationDays() pulumi.IntOutput {
	return o.ApplyT(func(v ScheduleResponse) int { return v.IntervalDurationDays }).(pulumi.IntOutput)
}

// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
func (o ScheduleResponseOutput) ScheduleTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleResponse) string { return v.ScheduleTime }).(pulumi.StringOutput)
}

type ScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (ScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleResponse)(nil)).Elem()
}

func (o ScheduleResponsePtrOutput) ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput {
	return o
}

func (o ScheduleResponsePtrOutput) ToScheduleResponsePtrOutputWithContext(ctx context.Context) ScheduleResponsePtrOutput {
	return o
}

func (o ScheduleResponsePtrOutput) Elem() ScheduleResponseOutput {
	return o.ApplyT(func(v *ScheduleResponse) ScheduleResponse {
		if v != nil {
			return *v
		}
		var ret ScheduleResponse
		return ret
	}).(ScheduleResponseOutput)
}

// The duration of time between executions in days.
func (o ScheduleResponsePtrOutput) IntervalDurationDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *int {
		if v == nil {
			return nil
		}
		return &v.IntervalDurationDays
	}).(pulumi.IntPtrOutput)
}

// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
func (o ScheduleResponsePtrOutput) ScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleTime
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationInput)(nil)).Elem(), AuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationPtrInput)(nil)).Elem(), AuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationResponseInput)(nil)).Elem(), AuthenticationResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationResponsePtrInput)(nil)).Elem(), AuthenticationResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAccountInput)(nil)).Elem(), CustomAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAccountPtrInput)(nil)).Elem(), CustomAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAccountResponseInput)(nil)).Elem(), CustomAccountResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAccountResponsePtrInput)(nil)).Elem(), CustomAccountResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleAccountInput)(nil)).Elem(), GoogleAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleAccountPtrInput)(nil)).Elem(), GoogleAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleAccountResponseInput)(nil)).Elem(), GoogleAccountResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleAccountResponsePtrInput)(nil)).Elem(), GoogleAccountResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScanRunInput)(nil)).Elem(), ScanRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScanRunPtrInput)(nil)).Elem(), ScanRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScanRunResponseInput)(nil)).Elem(), ScanRunResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScanRunResponsePtrInput)(nil)).Elem(), ScanRunResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleInput)(nil)).Elem(), ScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulePtrInput)(nil)).Elem(), ScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleResponseInput)(nil)).Elem(), ScheduleResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleResponsePtrInput)(nil)).Elem(), ScheduleResponseArgs{})
	pulumi.RegisterOutputType(AuthenticationOutput{})
	pulumi.RegisterOutputType(AuthenticationPtrOutput{})
	pulumi.RegisterOutputType(AuthenticationResponseOutput{})
	pulumi.RegisterOutputType(AuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomAccountOutput{})
	pulumi.RegisterOutputType(CustomAccountPtrOutput{})
	pulumi.RegisterOutputType(CustomAccountResponseOutput{})
	pulumi.RegisterOutputType(CustomAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(GoogleAccountOutput{})
	pulumi.RegisterOutputType(GoogleAccountPtrOutput{})
	pulumi.RegisterOutputType(GoogleAccountResponseOutput{})
	pulumi.RegisterOutputType(GoogleAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(ScanRunOutput{})
	pulumi.RegisterOutputType(ScanRunPtrOutput{})
	pulumi.RegisterOutputType(ScanRunResponseOutput{})
	pulumi.RegisterOutputType(ScanRunResponsePtrOutput{})
	pulumi.RegisterOutputType(ScheduleOutput{})
	pulumi.RegisterOutputType(SchedulePtrOutput{})
	pulumi.RegisterOutputType(ScheduleResponseOutput{})
	pulumi.RegisterOutputType(ScheduleResponsePtrOutput{})
}
