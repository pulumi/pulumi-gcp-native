// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Scan authentication configuration.
type Authentication struct {
	// Authentication using a custom account.
	CustomAccount *CustomAccount `pulumi:"customAccount"`
	// Authentication using a Google account.
	GoogleAccount *GoogleAccount `pulumi:"googleAccount"`
	// Authentication using Identity-Aware-Proxy (IAP).
	IapCredential *IapCredential `pulumi:"iapCredential"`
}

// AuthenticationInput is an input type that accepts AuthenticationArgs and AuthenticationOutput values.
// You can construct a concrete instance of `AuthenticationInput` via:
//
//          AuthenticationArgs{...}
type AuthenticationInput interface {
	pulumi.Input

	ToAuthenticationOutput() AuthenticationOutput
	ToAuthenticationOutputWithContext(context.Context) AuthenticationOutput
}

// Scan authentication configuration.
type AuthenticationArgs struct {
	// Authentication using a custom account.
	CustomAccount CustomAccountPtrInput `pulumi:"customAccount"`
	// Authentication using a Google account.
	GoogleAccount GoogleAccountPtrInput `pulumi:"googleAccount"`
	// Authentication using Identity-Aware-Proxy (IAP).
	IapCredential IapCredentialPtrInput `pulumi:"iapCredential"`
}

func (AuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Authentication)(nil)).Elem()
}

func (i AuthenticationArgs) ToAuthenticationOutput() AuthenticationOutput {
	return i.ToAuthenticationOutputWithContext(context.Background())
}

func (i AuthenticationArgs) ToAuthenticationOutputWithContext(ctx context.Context) AuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationOutput)
}

func (i AuthenticationArgs) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return i.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (i AuthenticationArgs) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationOutput).ToAuthenticationPtrOutputWithContext(ctx)
}

// AuthenticationPtrInput is an input type that accepts AuthenticationArgs, AuthenticationPtr and AuthenticationPtrOutput values.
// You can construct a concrete instance of `AuthenticationPtrInput` via:
//
//          AuthenticationArgs{...}
//
//  or:
//
//          nil
type AuthenticationPtrInput interface {
	pulumi.Input

	ToAuthenticationPtrOutput() AuthenticationPtrOutput
	ToAuthenticationPtrOutputWithContext(context.Context) AuthenticationPtrOutput
}

type authenticationPtrType AuthenticationArgs

func AuthenticationPtr(v *AuthenticationArgs) AuthenticationPtrInput {
	return (*authenticationPtrType)(v)
}

func (*authenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Authentication)(nil)).Elem()
}

func (i *authenticationPtrType) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return i.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (i *authenticationPtrType) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationPtrOutput)
}

// Scan authentication configuration.
type AuthenticationOutput struct{ *pulumi.OutputState }

func (AuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Authentication)(nil)).Elem()
}

func (o AuthenticationOutput) ToAuthenticationOutput() AuthenticationOutput {
	return o
}

func (o AuthenticationOutput) ToAuthenticationOutputWithContext(ctx context.Context) AuthenticationOutput {
	return o
}

func (o AuthenticationOutput) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return o.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (o AuthenticationOutput) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Authentication) *Authentication {
		return &v
	}).(AuthenticationPtrOutput)
}

// Authentication using a custom account.
func (o AuthenticationOutput) CustomAccount() CustomAccountPtrOutput {
	return o.ApplyT(func(v Authentication) *CustomAccount { return v.CustomAccount }).(CustomAccountPtrOutput)
}

// Authentication using a Google account.
func (o AuthenticationOutput) GoogleAccount() GoogleAccountPtrOutput {
	return o.ApplyT(func(v Authentication) *GoogleAccount { return v.GoogleAccount }).(GoogleAccountPtrOutput)
}

// Authentication using Identity-Aware-Proxy (IAP).
func (o AuthenticationOutput) IapCredential() IapCredentialPtrOutput {
	return o.ApplyT(func(v Authentication) *IapCredential { return v.IapCredential }).(IapCredentialPtrOutput)
}

type AuthenticationPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Authentication)(nil)).Elem()
}

func (o AuthenticationPtrOutput) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return o
}

func (o AuthenticationPtrOutput) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return o
}

func (o AuthenticationPtrOutput) Elem() AuthenticationOutput {
	return o.ApplyT(func(v *Authentication) Authentication {
		if v != nil {
			return *v
		}
		var ret Authentication
		return ret
	}).(AuthenticationOutput)
}

// Authentication using a custom account.
func (o AuthenticationPtrOutput) CustomAccount() CustomAccountPtrOutput {
	return o.ApplyT(func(v *Authentication) *CustomAccount {
		if v == nil {
			return nil
		}
		return v.CustomAccount
	}).(CustomAccountPtrOutput)
}

// Authentication using a Google account.
func (o AuthenticationPtrOutput) GoogleAccount() GoogleAccountPtrOutput {
	return o.ApplyT(func(v *Authentication) *GoogleAccount {
		if v == nil {
			return nil
		}
		return v.GoogleAccount
	}).(GoogleAccountPtrOutput)
}

// Authentication using Identity-Aware-Proxy (IAP).
func (o AuthenticationPtrOutput) IapCredential() IapCredentialPtrOutput {
	return o.ApplyT(func(v *Authentication) *IapCredential {
		if v == nil {
			return nil
		}
		return v.IapCredential
	}).(IapCredentialPtrOutput)
}

// Scan authentication configuration.
type AuthenticationResponse struct {
	// Authentication using a custom account.
	CustomAccount CustomAccountResponse `pulumi:"customAccount"`
	// Authentication using a Google account.
	GoogleAccount GoogleAccountResponse `pulumi:"googleAccount"`
	// Authentication using Identity-Aware-Proxy (IAP).
	IapCredential IapCredentialResponse `pulumi:"iapCredential"`
}

// AuthenticationResponseInput is an input type that accepts AuthenticationResponseArgs and AuthenticationResponseOutput values.
// You can construct a concrete instance of `AuthenticationResponseInput` via:
//
//          AuthenticationResponseArgs{...}
type AuthenticationResponseInput interface {
	pulumi.Input

	ToAuthenticationResponseOutput() AuthenticationResponseOutput
	ToAuthenticationResponseOutputWithContext(context.Context) AuthenticationResponseOutput
}

// Scan authentication configuration.
type AuthenticationResponseArgs struct {
	// Authentication using a custom account.
	CustomAccount CustomAccountResponseInput `pulumi:"customAccount"`
	// Authentication using a Google account.
	GoogleAccount GoogleAccountResponseInput `pulumi:"googleAccount"`
	// Authentication using Identity-Aware-Proxy (IAP).
	IapCredential IapCredentialResponseInput `pulumi:"iapCredential"`
}

func (AuthenticationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationResponse)(nil)).Elem()
}

func (i AuthenticationResponseArgs) ToAuthenticationResponseOutput() AuthenticationResponseOutput {
	return i.ToAuthenticationResponseOutputWithContext(context.Background())
}

func (i AuthenticationResponseArgs) ToAuthenticationResponseOutputWithContext(ctx context.Context) AuthenticationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationResponseOutput)
}

func (i AuthenticationResponseArgs) ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput {
	return i.ToAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (i AuthenticationResponseArgs) ToAuthenticationResponsePtrOutputWithContext(ctx context.Context) AuthenticationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationResponseOutput).ToAuthenticationResponsePtrOutputWithContext(ctx)
}

// AuthenticationResponsePtrInput is an input type that accepts AuthenticationResponseArgs, AuthenticationResponsePtr and AuthenticationResponsePtrOutput values.
// You can construct a concrete instance of `AuthenticationResponsePtrInput` via:
//
//          AuthenticationResponseArgs{...}
//
//  or:
//
//          nil
type AuthenticationResponsePtrInput interface {
	pulumi.Input

	ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput
	ToAuthenticationResponsePtrOutputWithContext(context.Context) AuthenticationResponsePtrOutput
}

type authenticationResponsePtrType AuthenticationResponseArgs

func AuthenticationResponsePtr(v *AuthenticationResponseArgs) AuthenticationResponsePtrInput {
	return (*authenticationResponsePtrType)(v)
}

func (*authenticationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationResponse)(nil)).Elem()
}

func (i *authenticationResponsePtrType) ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput {
	return i.ToAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (i *authenticationResponsePtrType) ToAuthenticationResponsePtrOutputWithContext(ctx context.Context) AuthenticationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationResponsePtrOutput)
}

// Scan authentication configuration.
type AuthenticationResponseOutput struct{ *pulumi.OutputState }

func (AuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationResponse)(nil)).Elem()
}

func (o AuthenticationResponseOutput) ToAuthenticationResponseOutput() AuthenticationResponseOutput {
	return o
}

func (o AuthenticationResponseOutput) ToAuthenticationResponseOutputWithContext(ctx context.Context) AuthenticationResponseOutput {
	return o
}

func (o AuthenticationResponseOutput) ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput {
	return o.ToAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (o AuthenticationResponseOutput) ToAuthenticationResponsePtrOutputWithContext(ctx context.Context) AuthenticationResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthenticationResponse) *AuthenticationResponse {
		return &v
	}).(AuthenticationResponsePtrOutput)
}

// Authentication using a custom account.
func (o AuthenticationResponseOutput) CustomAccount() CustomAccountResponseOutput {
	return o.ApplyT(func(v AuthenticationResponse) CustomAccountResponse { return v.CustomAccount }).(CustomAccountResponseOutput)
}

// Authentication using a Google account.
func (o AuthenticationResponseOutput) GoogleAccount() GoogleAccountResponseOutput {
	return o.ApplyT(func(v AuthenticationResponse) GoogleAccountResponse { return v.GoogleAccount }).(GoogleAccountResponseOutput)
}

// Authentication using Identity-Aware-Proxy (IAP).
func (o AuthenticationResponseOutput) IapCredential() IapCredentialResponseOutput {
	return o.ApplyT(func(v AuthenticationResponse) IapCredentialResponse { return v.IapCredential }).(IapCredentialResponseOutput)
}

type AuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationResponse)(nil)).Elem()
}

func (o AuthenticationResponsePtrOutput) ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput {
	return o
}

func (o AuthenticationResponsePtrOutput) ToAuthenticationResponsePtrOutputWithContext(ctx context.Context) AuthenticationResponsePtrOutput {
	return o
}

func (o AuthenticationResponsePtrOutput) Elem() AuthenticationResponseOutput {
	return o.ApplyT(func(v *AuthenticationResponse) AuthenticationResponse {
		if v != nil {
			return *v
		}
		var ret AuthenticationResponse
		return ret
	}).(AuthenticationResponseOutput)
}

// Authentication using a custom account.
func (o AuthenticationResponsePtrOutput) CustomAccount() CustomAccountResponsePtrOutput {
	return o.ApplyT(func(v *AuthenticationResponse) *CustomAccountResponse {
		if v == nil {
			return nil
		}
		return &v.CustomAccount
	}).(CustomAccountResponsePtrOutput)
}

// Authentication using a Google account.
func (o AuthenticationResponsePtrOutput) GoogleAccount() GoogleAccountResponsePtrOutput {
	return o.ApplyT(func(v *AuthenticationResponse) *GoogleAccountResponse {
		if v == nil {
			return nil
		}
		return &v.GoogleAccount
	}).(GoogleAccountResponsePtrOutput)
}

// Authentication using Identity-Aware-Proxy (IAP).
func (o AuthenticationResponsePtrOutput) IapCredential() IapCredentialResponsePtrOutput {
	return o.ApplyT(func(v *AuthenticationResponse) *IapCredentialResponse {
		if v == nil {
			return nil
		}
		return &v.IapCredential
	}).(IapCredentialResponsePtrOutput)
}

// Describes authentication configuration that uses a custom account.
type CustomAccount struct {
	// The login form URL of the website.
	LoginUrl string `pulumi:"loginUrl"`
	// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password string `pulumi:"password"`
	// The user name of the custom account.
	Username string `pulumi:"username"`
}

// CustomAccountInput is an input type that accepts CustomAccountArgs and CustomAccountOutput values.
// You can construct a concrete instance of `CustomAccountInput` via:
//
//          CustomAccountArgs{...}
type CustomAccountInput interface {
	pulumi.Input

	ToCustomAccountOutput() CustomAccountOutput
	ToCustomAccountOutputWithContext(context.Context) CustomAccountOutput
}

// Describes authentication configuration that uses a custom account.
type CustomAccountArgs struct {
	// The login form URL of the website.
	LoginUrl pulumi.StringInput `pulumi:"loginUrl"`
	// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password pulumi.StringInput `pulumi:"password"`
	// The user name of the custom account.
	Username pulumi.StringInput `pulumi:"username"`
}

func (CustomAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomAccount)(nil)).Elem()
}

func (i CustomAccountArgs) ToCustomAccountOutput() CustomAccountOutput {
	return i.ToCustomAccountOutputWithContext(context.Background())
}

func (i CustomAccountArgs) ToCustomAccountOutputWithContext(ctx context.Context) CustomAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAccountOutput)
}

func (i CustomAccountArgs) ToCustomAccountPtrOutput() CustomAccountPtrOutput {
	return i.ToCustomAccountPtrOutputWithContext(context.Background())
}

func (i CustomAccountArgs) ToCustomAccountPtrOutputWithContext(ctx context.Context) CustomAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAccountOutput).ToCustomAccountPtrOutputWithContext(ctx)
}

// CustomAccountPtrInput is an input type that accepts CustomAccountArgs, CustomAccountPtr and CustomAccountPtrOutput values.
// You can construct a concrete instance of `CustomAccountPtrInput` via:
//
//          CustomAccountArgs{...}
//
//  or:
//
//          nil
type CustomAccountPtrInput interface {
	pulumi.Input

	ToCustomAccountPtrOutput() CustomAccountPtrOutput
	ToCustomAccountPtrOutputWithContext(context.Context) CustomAccountPtrOutput
}

type customAccountPtrType CustomAccountArgs

func CustomAccountPtr(v *CustomAccountArgs) CustomAccountPtrInput {
	return (*customAccountPtrType)(v)
}

func (*customAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAccount)(nil)).Elem()
}

func (i *customAccountPtrType) ToCustomAccountPtrOutput() CustomAccountPtrOutput {
	return i.ToCustomAccountPtrOutputWithContext(context.Background())
}

func (i *customAccountPtrType) ToCustomAccountPtrOutputWithContext(ctx context.Context) CustomAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAccountPtrOutput)
}

// Describes authentication configuration that uses a custom account.
type CustomAccountOutput struct{ *pulumi.OutputState }

func (CustomAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomAccount)(nil)).Elem()
}

func (o CustomAccountOutput) ToCustomAccountOutput() CustomAccountOutput {
	return o
}

func (o CustomAccountOutput) ToCustomAccountOutputWithContext(ctx context.Context) CustomAccountOutput {
	return o
}

func (o CustomAccountOutput) ToCustomAccountPtrOutput() CustomAccountPtrOutput {
	return o.ToCustomAccountPtrOutputWithContext(context.Background())
}

func (o CustomAccountOutput) ToCustomAccountPtrOutputWithContext(ctx context.Context) CustomAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomAccount) *CustomAccount {
		return &v
	}).(CustomAccountPtrOutput)
}

// The login form URL of the website.
func (o CustomAccountOutput) LoginUrl() pulumi.StringOutput {
	return o.ApplyT(func(v CustomAccount) string { return v.LoginUrl }).(pulumi.StringOutput)
}

// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o CustomAccountOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v CustomAccount) string { return v.Password }).(pulumi.StringOutput)
}

// The user name of the custom account.
func (o CustomAccountOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v CustomAccount) string { return v.Username }).(pulumi.StringOutput)
}

type CustomAccountPtrOutput struct{ *pulumi.OutputState }

func (CustomAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAccount)(nil)).Elem()
}

func (o CustomAccountPtrOutput) ToCustomAccountPtrOutput() CustomAccountPtrOutput {
	return o
}

func (o CustomAccountPtrOutput) ToCustomAccountPtrOutputWithContext(ctx context.Context) CustomAccountPtrOutput {
	return o
}

func (o CustomAccountPtrOutput) Elem() CustomAccountOutput {
	return o.ApplyT(func(v *CustomAccount) CustomAccount {
		if v != nil {
			return *v
		}
		var ret CustomAccount
		return ret
	}).(CustomAccountOutput)
}

// The login form URL of the website.
func (o CustomAccountPtrOutput) LoginUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAccount) *string {
		if v == nil {
			return nil
		}
		return &v.LoginUrl
	}).(pulumi.StringPtrOutput)
}

// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o CustomAccountPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The user name of the custom account.
func (o CustomAccountPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Describes authentication configuration that uses a custom account.
type CustomAccountResponse struct {
	// The login form URL of the website.
	LoginUrl string `pulumi:"loginUrl"`
	// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password string `pulumi:"password"`
	// The user name of the custom account.
	Username string `pulumi:"username"`
}

// CustomAccountResponseInput is an input type that accepts CustomAccountResponseArgs and CustomAccountResponseOutput values.
// You can construct a concrete instance of `CustomAccountResponseInput` via:
//
//          CustomAccountResponseArgs{...}
type CustomAccountResponseInput interface {
	pulumi.Input

	ToCustomAccountResponseOutput() CustomAccountResponseOutput
	ToCustomAccountResponseOutputWithContext(context.Context) CustomAccountResponseOutput
}

// Describes authentication configuration that uses a custom account.
type CustomAccountResponseArgs struct {
	// The login form URL of the website.
	LoginUrl pulumi.StringInput `pulumi:"loginUrl"`
	// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password pulumi.StringInput `pulumi:"password"`
	// The user name of the custom account.
	Username pulumi.StringInput `pulumi:"username"`
}

func (CustomAccountResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomAccountResponse)(nil)).Elem()
}

func (i CustomAccountResponseArgs) ToCustomAccountResponseOutput() CustomAccountResponseOutput {
	return i.ToCustomAccountResponseOutputWithContext(context.Background())
}

func (i CustomAccountResponseArgs) ToCustomAccountResponseOutputWithContext(ctx context.Context) CustomAccountResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAccountResponseOutput)
}

func (i CustomAccountResponseArgs) ToCustomAccountResponsePtrOutput() CustomAccountResponsePtrOutput {
	return i.ToCustomAccountResponsePtrOutputWithContext(context.Background())
}

func (i CustomAccountResponseArgs) ToCustomAccountResponsePtrOutputWithContext(ctx context.Context) CustomAccountResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAccountResponseOutput).ToCustomAccountResponsePtrOutputWithContext(ctx)
}

// CustomAccountResponsePtrInput is an input type that accepts CustomAccountResponseArgs, CustomAccountResponsePtr and CustomAccountResponsePtrOutput values.
// You can construct a concrete instance of `CustomAccountResponsePtrInput` via:
//
//          CustomAccountResponseArgs{...}
//
//  or:
//
//          nil
type CustomAccountResponsePtrInput interface {
	pulumi.Input

	ToCustomAccountResponsePtrOutput() CustomAccountResponsePtrOutput
	ToCustomAccountResponsePtrOutputWithContext(context.Context) CustomAccountResponsePtrOutput
}

type customAccountResponsePtrType CustomAccountResponseArgs

func CustomAccountResponsePtr(v *CustomAccountResponseArgs) CustomAccountResponsePtrInput {
	return (*customAccountResponsePtrType)(v)
}

func (*customAccountResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAccountResponse)(nil)).Elem()
}

func (i *customAccountResponsePtrType) ToCustomAccountResponsePtrOutput() CustomAccountResponsePtrOutput {
	return i.ToCustomAccountResponsePtrOutputWithContext(context.Background())
}

func (i *customAccountResponsePtrType) ToCustomAccountResponsePtrOutputWithContext(ctx context.Context) CustomAccountResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAccountResponsePtrOutput)
}

// Describes authentication configuration that uses a custom account.
type CustomAccountResponseOutput struct{ *pulumi.OutputState }

func (CustomAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomAccountResponse)(nil)).Elem()
}

func (o CustomAccountResponseOutput) ToCustomAccountResponseOutput() CustomAccountResponseOutput {
	return o
}

func (o CustomAccountResponseOutput) ToCustomAccountResponseOutputWithContext(ctx context.Context) CustomAccountResponseOutput {
	return o
}

func (o CustomAccountResponseOutput) ToCustomAccountResponsePtrOutput() CustomAccountResponsePtrOutput {
	return o.ToCustomAccountResponsePtrOutputWithContext(context.Background())
}

func (o CustomAccountResponseOutput) ToCustomAccountResponsePtrOutputWithContext(ctx context.Context) CustomAccountResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomAccountResponse) *CustomAccountResponse {
		return &v
	}).(CustomAccountResponsePtrOutput)
}

// The login form URL of the website.
func (o CustomAccountResponseOutput) LoginUrl() pulumi.StringOutput {
	return o.ApplyT(func(v CustomAccountResponse) string { return v.LoginUrl }).(pulumi.StringOutput)
}

// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o CustomAccountResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v CustomAccountResponse) string { return v.Password }).(pulumi.StringOutput)
}

// The user name of the custom account.
func (o CustomAccountResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v CustomAccountResponse) string { return v.Username }).(pulumi.StringOutput)
}

type CustomAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAccountResponse)(nil)).Elem()
}

func (o CustomAccountResponsePtrOutput) ToCustomAccountResponsePtrOutput() CustomAccountResponsePtrOutput {
	return o
}

func (o CustomAccountResponsePtrOutput) ToCustomAccountResponsePtrOutputWithContext(ctx context.Context) CustomAccountResponsePtrOutput {
	return o
}

func (o CustomAccountResponsePtrOutput) Elem() CustomAccountResponseOutput {
	return o.ApplyT(func(v *CustomAccountResponse) CustomAccountResponse {
		if v != nil {
			return *v
		}
		var ret CustomAccountResponse
		return ret
	}).(CustomAccountResponseOutput)
}

// The login form URL of the website.
func (o CustomAccountResponsePtrOutput) LoginUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAccountResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LoginUrl
	}).(pulumi.StringPtrOutput)
}

// Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o CustomAccountResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAccountResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The user name of the custom account.
func (o CustomAccountResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAccountResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Describes authentication configuration that uses a Google account.
type GoogleAccount struct {
	// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password string `pulumi:"password"`
	// The user name of the Google account.
	Username string `pulumi:"username"`
}

// GoogleAccountInput is an input type that accepts GoogleAccountArgs and GoogleAccountOutput values.
// You can construct a concrete instance of `GoogleAccountInput` via:
//
//          GoogleAccountArgs{...}
type GoogleAccountInput interface {
	pulumi.Input

	ToGoogleAccountOutput() GoogleAccountOutput
	ToGoogleAccountOutputWithContext(context.Context) GoogleAccountOutput
}

// Describes authentication configuration that uses a Google account.
type GoogleAccountArgs struct {
	// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password pulumi.StringInput `pulumi:"password"`
	// The user name of the Google account.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GoogleAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleAccount)(nil)).Elem()
}

func (i GoogleAccountArgs) ToGoogleAccountOutput() GoogleAccountOutput {
	return i.ToGoogleAccountOutputWithContext(context.Background())
}

func (i GoogleAccountArgs) ToGoogleAccountOutputWithContext(ctx context.Context) GoogleAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAccountOutput)
}

func (i GoogleAccountArgs) ToGoogleAccountPtrOutput() GoogleAccountPtrOutput {
	return i.ToGoogleAccountPtrOutputWithContext(context.Background())
}

func (i GoogleAccountArgs) ToGoogleAccountPtrOutputWithContext(ctx context.Context) GoogleAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAccountOutput).ToGoogleAccountPtrOutputWithContext(ctx)
}

// GoogleAccountPtrInput is an input type that accepts GoogleAccountArgs, GoogleAccountPtr and GoogleAccountPtrOutput values.
// You can construct a concrete instance of `GoogleAccountPtrInput` via:
//
//          GoogleAccountArgs{...}
//
//  or:
//
//          nil
type GoogleAccountPtrInput interface {
	pulumi.Input

	ToGoogleAccountPtrOutput() GoogleAccountPtrOutput
	ToGoogleAccountPtrOutputWithContext(context.Context) GoogleAccountPtrOutput
}

type googleAccountPtrType GoogleAccountArgs

func GoogleAccountPtr(v *GoogleAccountArgs) GoogleAccountPtrInput {
	return (*googleAccountPtrType)(v)
}

func (*googleAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleAccount)(nil)).Elem()
}

func (i *googleAccountPtrType) ToGoogleAccountPtrOutput() GoogleAccountPtrOutput {
	return i.ToGoogleAccountPtrOutputWithContext(context.Background())
}

func (i *googleAccountPtrType) ToGoogleAccountPtrOutputWithContext(ctx context.Context) GoogleAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAccountPtrOutput)
}

// Describes authentication configuration that uses a Google account.
type GoogleAccountOutput struct{ *pulumi.OutputState }

func (GoogleAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleAccount)(nil)).Elem()
}

func (o GoogleAccountOutput) ToGoogleAccountOutput() GoogleAccountOutput {
	return o
}

func (o GoogleAccountOutput) ToGoogleAccountOutputWithContext(ctx context.Context) GoogleAccountOutput {
	return o
}

func (o GoogleAccountOutput) ToGoogleAccountPtrOutput() GoogleAccountPtrOutput {
	return o.ToGoogleAccountPtrOutputWithContext(context.Background())
}

func (o GoogleAccountOutput) ToGoogleAccountPtrOutputWithContext(ctx context.Context) GoogleAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleAccount) *GoogleAccount {
		return &v
	}).(GoogleAccountPtrOutput)
}

// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o GoogleAccountOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleAccount) string { return v.Password }).(pulumi.StringOutput)
}

// The user name of the Google account.
func (o GoogleAccountOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleAccount) string { return v.Username }).(pulumi.StringOutput)
}

type GoogleAccountPtrOutput struct{ *pulumi.OutputState }

func (GoogleAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleAccount)(nil)).Elem()
}

func (o GoogleAccountPtrOutput) ToGoogleAccountPtrOutput() GoogleAccountPtrOutput {
	return o
}

func (o GoogleAccountPtrOutput) ToGoogleAccountPtrOutputWithContext(ctx context.Context) GoogleAccountPtrOutput {
	return o
}

func (o GoogleAccountPtrOutput) Elem() GoogleAccountOutput {
	return o.ApplyT(func(v *GoogleAccount) GoogleAccount {
		if v != nil {
			return *v
		}
		var ret GoogleAccount
		return ret
	}).(GoogleAccountOutput)
}

// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o GoogleAccountPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The user name of the Google account.
func (o GoogleAccountPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Describes authentication configuration that uses a Google account.
type GoogleAccountResponse struct {
	// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password string `pulumi:"password"`
	// The user name of the Google account.
	Username string `pulumi:"username"`
}

// GoogleAccountResponseInput is an input type that accepts GoogleAccountResponseArgs and GoogleAccountResponseOutput values.
// You can construct a concrete instance of `GoogleAccountResponseInput` via:
//
//          GoogleAccountResponseArgs{...}
type GoogleAccountResponseInput interface {
	pulumi.Input

	ToGoogleAccountResponseOutput() GoogleAccountResponseOutput
	ToGoogleAccountResponseOutputWithContext(context.Context) GoogleAccountResponseOutput
}

// Describes authentication configuration that uses a Google account.
type GoogleAccountResponseArgs struct {
	// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
	Password pulumi.StringInput `pulumi:"password"`
	// The user name of the Google account.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GoogleAccountResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleAccountResponse)(nil)).Elem()
}

func (i GoogleAccountResponseArgs) ToGoogleAccountResponseOutput() GoogleAccountResponseOutput {
	return i.ToGoogleAccountResponseOutputWithContext(context.Background())
}

func (i GoogleAccountResponseArgs) ToGoogleAccountResponseOutputWithContext(ctx context.Context) GoogleAccountResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAccountResponseOutput)
}

func (i GoogleAccountResponseArgs) ToGoogleAccountResponsePtrOutput() GoogleAccountResponsePtrOutput {
	return i.ToGoogleAccountResponsePtrOutputWithContext(context.Background())
}

func (i GoogleAccountResponseArgs) ToGoogleAccountResponsePtrOutputWithContext(ctx context.Context) GoogleAccountResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAccountResponseOutput).ToGoogleAccountResponsePtrOutputWithContext(ctx)
}

// GoogleAccountResponsePtrInput is an input type that accepts GoogleAccountResponseArgs, GoogleAccountResponsePtr and GoogleAccountResponsePtrOutput values.
// You can construct a concrete instance of `GoogleAccountResponsePtrInput` via:
//
//          GoogleAccountResponseArgs{...}
//
//  or:
//
//          nil
type GoogleAccountResponsePtrInput interface {
	pulumi.Input

	ToGoogleAccountResponsePtrOutput() GoogleAccountResponsePtrOutput
	ToGoogleAccountResponsePtrOutputWithContext(context.Context) GoogleAccountResponsePtrOutput
}

type googleAccountResponsePtrType GoogleAccountResponseArgs

func GoogleAccountResponsePtr(v *GoogleAccountResponseArgs) GoogleAccountResponsePtrInput {
	return (*googleAccountResponsePtrType)(v)
}

func (*googleAccountResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleAccountResponse)(nil)).Elem()
}

func (i *googleAccountResponsePtrType) ToGoogleAccountResponsePtrOutput() GoogleAccountResponsePtrOutput {
	return i.ToGoogleAccountResponsePtrOutputWithContext(context.Background())
}

func (i *googleAccountResponsePtrType) ToGoogleAccountResponsePtrOutputWithContext(ctx context.Context) GoogleAccountResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleAccountResponsePtrOutput)
}

// Describes authentication configuration that uses a Google account.
type GoogleAccountResponseOutput struct{ *pulumi.OutputState }

func (GoogleAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleAccountResponse)(nil)).Elem()
}

func (o GoogleAccountResponseOutput) ToGoogleAccountResponseOutput() GoogleAccountResponseOutput {
	return o
}

func (o GoogleAccountResponseOutput) ToGoogleAccountResponseOutputWithContext(ctx context.Context) GoogleAccountResponseOutput {
	return o
}

func (o GoogleAccountResponseOutput) ToGoogleAccountResponsePtrOutput() GoogleAccountResponsePtrOutput {
	return o.ToGoogleAccountResponsePtrOutputWithContext(context.Background())
}

func (o GoogleAccountResponseOutput) ToGoogleAccountResponsePtrOutputWithContext(ctx context.Context) GoogleAccountResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleAccountResponse) *GoogleAccountResponse {
		return &v
	}).(GoogleAccountResponsePtrOutput)
}

// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o GoogleAccountResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleAccountResponse) string { return v.Password }).(pulumi.StringOutput)
}

// The user name of the Google account.
func (o GoogleAccountResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleAccountResponse) string { return v.Username }).(pulumi.StringOutput)
}

type GoogleAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (GoogleAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleAccountResponse)(nil)).Elem()
}

func (o GoogleAccountResponsePtrOutput) ToGoogleAccountResponsePtrOutput() GoogleAccountResponsePtrOutput {
	return o
}

func (o GoogleAccountResponsePtrOutput) ToGoogleAccountResponsePtrOutputWithContext(ctx context.Context) GoogleAccountResponsePtrOutput {
	return o
}

func (o GoogleAccountResponsePtrOutput) Elem() GoogleAccountResponseOutput {
	return o.ApplyT(func(v *GoogleAccountResponse) GoogleAccountResponse {
		if v != nil {
			return *v
		}
		var ret GoogleAccountResponse
		return ret
	}).(GoogleAccountResponseOutput)
}

// Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
func (o GoogleAccountResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleAccountResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The user name of the Google account.
func (o GoogleAccountResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleAccountResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Describes authentication configuration for Identity-Aware-Proxy (IAP).
type IapCredential struct {
	// Authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
	IapTestServiceAccountInfo *IapTestServiceAccountInfo `pulumi:"iapTestServiceAccountInfo"`
}

// IapCredentialInput is an input type that accepts IapCredentialArgs and IapCredentialOutput values.
// You can construct a concrete instance of `IapCredentialInput` via:
//
//          IapCredentialArgs{...}
type IapCredentialInput interface {
	pulumi.Input

	ToIapCredentialOutput() IapCredentialOutput
	ToIapCredentialOutputWithContext(context.Context) IapCredentialOutput
}

// Describes authentication configuration for Identity-Aware-Proxy (IAP).
type IapCredentialArgs struct {
	// Authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
	IapTestServiceAccountInfo IapTestServiceAccountInfoPtrInput `pulumi:"iapTestServiceAccountInfo"`
}

func (IapCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IapCredential)(nil)).Elem()
}

func (i IapCredentialArgs) ToIapCredentialOutput() IapCredentialOutput {
	return i.ToIapCredentialOutputWithContext(context.Background())
}

func (i IapCredentialArgs) ToIapCredentialOutputWithContext(ctx context.Context) IapCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapCredentialOutput)
}

func (i IapCredentialArgs) ToIapCredentialPtrOutput() IapCredentialPtrOutput {
	return i.ToIapCredentialPtrOutputWithContext(context.Background())
}

func (i IapCredentialArgs) ToIapCredentialPtrOutputWithContext(ctx context.Context) IapCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapCredentialOutput).ToIapCredentialPtrOutputWithContext(ctx)
}

// IapCredentialPtrInput is an input type that accepts IapCredentialArgs, IapCredentialPtr and IapCredentialPtrOutput values.
// You can construct a concrete instance of `IapCredentialPtrInput` via:
//
//          IapCredentialArgs{...}
//
//  or:
//
//          nil
type IapCredentialPtrInput interface {
	pulumi.Input

	ToIapCredentialPtrOutput() IapCredentialPtrOutput
	ToIapCredentialPtrOutputWithContext(context.Context) IapCredentialPtrOutput
}

type iapCredentialPtrType IapCredentialArgs

func IapCredentialPtr(v *IapCredentialArgs) IapCredentialPtrInput {
	return (*iapCredentialPtrType)(v)
}

func (*iapCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IapCredential)(nil)).Elem()
}

func (i *iapCredentialPtrType) ToIapCredentialPtrOutput() IapCredentialPtrOutput {
	return i.ToIapCredentialPtrOutputWithContext(context.Background())
}

func (i *iapCredentialPtrType) ToIapCredentialPtrOutputWithContext(ctx context.Context) IapCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapCredentialPtrOutput)
}

// Describes authentication configuration for Identity-Aware-Proxy (IAP).
type IapCredentialOutput struct{ *pulumi.OutputState }

func (IapCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IapCredential)(nil)).Elem()
}

func (o IapCredentialOutput) ToIapCredentialOutput() IapCredentialOutput {
	return o
}

func (o IapCredentialOutput) ToIapCredentialOutputWithContext(ctx context.Context) IapCredentialOutput {
	return o
}

func (o IapCredentialOutput) ToIapCredentialPtrOutput() IapCredentialPtrOutput {
	return o.ToIapCredentialPtrOutputWithContext(context.Background())
}

func (o IapCredentialOutput) ToIapCredentialPtrOutputWithContext(ctx context.Context) IapCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IapCredential) *IapCredential {
		return &v
	}).(IapCredentialPtrOutput)
}

// Authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
func (o IapCredentialOutput) IapTestServiceAccountInfo() IapTestServiceAccountInfoPtrOutput {
	return o.ApplyT(func(v IapCredential) *IapTestServiceAccountInfo { return v.IapTestServiceAccountInfo }).(IapTestServiceAccountInfoPtrOutput)
}

type IapCredentialPtrOutput struct{ *pulumi.OutputState }

func (IapCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IapCredential)(nil)).Elem()
}

func (o IapCredentialPtrOutput) ToIapCredentialPtrOutput() IapCredentialPtrOutput {
	return o
}

func (o IapCredentialPtrOutput) ToIapCredentialPtrOutputWithContext(ctx context.Context) IapCredentialPtrOutput {
	return o
}

func (o IapCredentialPtrOutput) Elem() IapCredentialOutput {
	return o.ApplyT(func(v *IapCredential) IapCredential {
		if v != nil {
			return *v
		}
		var ret IapCredential
		return ret
	}).(IapCredentialOutput)
}

// Authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
func (o IapCredentialPtrOutput) IapTestServiceAccountInfo() IapTestServiceAccountInfoPtrOutput {
	return o.ApplyT(func(v *IapCredential) *IapTestServiceAccountInfo {
		if v == nil {
			return nil
		}
		return v.IapTestServiceAccountInfo
	}).(IapTestServiceAccountInfoPtrOutput)
}

// Describes authentication configuration for Identity-Aware-Proxy (IAP).
type IapCredentialResponse struct {
	// Authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
	IapTestServiceAccountInfo IapTestServiceAccountInfoResponse `pulumi:"iapTestServiceAccountInfo"`
}

// IapCredentialResponseInput is an input type that accepts IapCredentialResponseArgs and IapCredentialResponseOutput values.
// You can construct a concrete instance of `IapCredentialResponseInput` via:
//
//          IapCredentialResponseArgs{...}
type IapCredentialResponseInput interface {
	pulumi.Input

	ToIapCredentialResponseOutput() IapCredentialResponseOutput
	ToIapCredentialResponseOutputWithContext(context.Context) IapCredentialResponseOutput
}

// Describes authentication configuration for Identity-Aware-Proxy (IAP).
type IapCredentialResponseArgs struct {
	// Authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
	IapTestServiceAccountInfo IapTestServiceAccountInfoResponseInput `pulumi:"iapTestServiceAccountInfo"`
}

func (IapCredentialResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IapCredentialResponse)(nil)).Elem()
}

func (i IapCredentialResponseArgs) ToIapCredentialResponseOutput() IapCredentialResponseOutput {
	return i.ToIapCredentialResponseOutputWithContext(context.Background())
}

func (i IapCredentialResponseArgs) ToIapCredentialResponseOutputWithContext(ctx context.Context) IapCredentialResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapCredentialResponseOutput)
}

func (i IapCredentialResponseArgs) ToIapCredentialResponsePtrOutput() IapCredentialResponsePtrOutput {
	return i.ToIapCredentialResponsePtrOutputWithContext(context.Background())
}

func (i IapCredentialResponseArgs) ToIapCredentialResponsePtrOutputWithContext(ctx context.Context) IapCredentialResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapCredentialResponseOutput).ToIapCredentialResponsePtrOutputWithContext(ctx)
}

// IapCredentialResponsePtrInput is an input type that accepts IapCredentialResponseArgs, IapCredentialResponsePtr and IapCredentialResponsePtrOutput values.
// You can construct a concrete instance of `IapCredentialResponsePtrInput` via:
//
//          IapCredentialResponseArgs{...}
//
//  or:
//
//          nil
type IapCredentialResponsePtrInput interface {
	pulumi.Input

	ToIapCredentialResponsePtrOutput() IapCredentialResponsePtrOutput
	ToIapCredentialResponsePtrOutputWithContext(context.Context) IapCredentialResponsePtrOutput
}

type iapCredentialResponsePtrType IapCredentialResponseArgs

func IapCredentialResponsePtr(v *IapCredentialResponseArgs) IapCredentialResponsePtrInput {
	return (*iapCredentialResponsePtrType)(v)
}

func (*iapCredentialResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IapCredentialResponse)(nil)).Elem()
}

func (i *iapCredentialResponsePtrType) ToIapCredentialResponsePtrOutput() IapCredentialResponsePtrOutput {
	return i.ToIapCredentialResponsePtrOutputWithContext(context.Background())
}

func (i *iapCredentialResponsePtrType) ToIapCredentialResponsePtrOutputWithContext(ctx context.Context) IapCredentialResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapCredentialResponsePtrOutput)
}

// Describes authentication configuration for Identity-Aware-Proxy (IAP).
type IapCredentialResponseOutput struct{ *pulumi.OutputState }

func (IapCredentialResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IapCredentialResponse)(nil)).Elem()
}

func (o IapCredentialResponseOutput) ToIapCredentialResponseOutput() IapCredentialResponseOutput {
	return o
}

func (o IapCredentialResponseOutput) ToIapCredentialResponseOutputWithContext(ctx context.Context) IapCredentialResponseOutput {
	return o
}

func (o IapCredentialResponseOutput) ToIapCredentialResponsePtrOutput() IapCredentialResponsePtrOutput {
	return o.ToIapCredentialResponsePtrOutputWithContext(context.Background())
}

func (o IapCredentialResponseOutput) ToIapCredentialResponsePtrOutputWithContext(ctx context.Context) IapCredentialResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IapCredentialResponse) *IapCredentialResponse {
		return &v
	}).(IapCredentialResponsePtrOutput)
}

// Authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
func (o IapCredentialResponseOutput) IapTestServiceAccountInfo() IapTestServiceAccountInfoResponseOutput {
	return o.ApplyT(func(v IapCredentialResponse) IapTestServiceAccountInfoResponse { return v.IapTestServiceAccountInfo }).(IapTestServiceAccountInfoResponseOutput)
}

type IapCredentialResponsePtrOutput struct{ *pulumi.OutputState }

func (IapCredentialResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IapCredentialResponse)(nil)).Elem()
}

func (o IapCredentialResponsePtrOutput) ToIapCredentialResponsePtrOutput() IapCredentialResponsePtrOutput {
	return o
}

func (o IapCredentialResponsePtrOutput) ToIapCredentialResponsePtrOutputWithContext(ctx context.Context) IapCredentialResponsePtrOutput {
	return o
}

func (o IapCredentialResponsePtrOutput) Elem() IapCredentialResponseOutput {
	return o.ApplyT(func(v *IapCredentialResponse) IapCredentialResponse {
		if v != nil {
			return *v
		}
		var ret IapCredentialResponse
		return ret
	}).(IapCredentialResponseOutput)
}

// Authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
func (o IapCredentialResponsePtrOutput) IapTestServiceAccountInfo() IapTestServiceAccountInfoResponsePtrOutput {
	return o.ApplyT(func(v *IapCredentialResponse) *IapTestServiceAccountInfoResponse {
		if v == nil {
			return nil
		}
		return &v.IapTestServiceAccountInfo
	}).(IapTestServiceAccountInfoResponsePtrOutput)
}

// Describes authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
type IapTestServiceAccountInfo struct {
	// Describes OAuth2 Client ID of resources protected by Identity-Aware-Proxy(IAP).
	TargetAudienceClientId string `pulumi:"targetAudienceClientId"`
}

// IapTestServiceAccountInfoInput is an input type that accepts IapTestServiceAccountInfoArgs and IapTestServiceAccountInfoOutput values.
// You can construct a concrete instance of `IapTestServiceAccountInfoInput` via:
//
//          IapTestServiceAccountInfoArgs{...}
type IapTestServiceAccountInfoInput interface {
	pulumi.Input

	ToIapTestServiceAccountInfoOutput() IapTestServiceAccountInfoOutput
	ToIapTestServiceAccountInfoOutputWithContext(context.Context) IapTestServiceAccountInfoOutput
}

// Describes authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
type IapTestServiceAccountInfoArgs struct {
	// Describes OAuth2 Client ID of resources protected by Identity-Aware-Proxy(IAP).
	TargetAudienceClientId pulumi.StringInput `pulumi:"targetAudienceClientId"`
}

func (IapTestServiceAccountInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IapTestServiceAccountInfo)(nil)).Elem()
}

func (i IapTestServiceAccountInfoArgs) ToIapTestServiceAccountInfoOutput() IapTestServiceAccountInfoOutput {
	return i.ToIapTestServiceAccountInfoOutputWithContext(context.Background())
}

func (i IapTestServiceAccountInfoArgs) ToIapTestServiceAccountInfoOutputWithContext(ctx context.Context) IapTestServiceAccountInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapTestServiceAccountInfoOutput)
}

func (i IapTestServiceAccountInfoArgs) ToIapTestServiceAccountInfoPtrOutput() IapTestServiceAccountInfoPtrOutput {
	return i.ToIapTestServiceAccountInfoPtrOutputWithContext(context.Background())
}

func (i IapTestServiceAccountInfoArgs) ToIapTestServiceAccountInfoPtrOutputWithContext(ctx context.Context) IapTestServiceAccountInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapTestServiceAccountInfoOutput).ToIapTestServiceAccountInfoPtrOutputWithContext(ctx)
}

// IapTestServiceAccountInfoPtrInput is an input type that accepts IapTestServiceAccountInfoArgs, IapTestServiceAccountInfoPtr and IapTestServiceAccountInfoPtrOutput values.
// You can construct a concrete instance of `IapTestServiceAccountInfoPtrInput` via:
//
//          IapTestServiceAccountInfoArgs{...}
//
//  or:
//
//          nil
type IapTestServiceAccountInfoPtrInput interface {
	pulumi.Input

	ToIapTestServiceAccountInfoPtrOutput() IapTestServiceAccountInfoPtrOutput
	ToIapTestServiceAccountInfoPtrOutputWithContext(context.Context) IapTestServiceAccountInfoPtrOutput
}

type iapTestServiceAccountInfoPtrType IapTestServiceAccountInfoArgs

func IapTestServiceAccountInfoPtr(v *IapTestServiceAccountInfoArgs) IapTestServiceAccountInfoPtrInput {
	return (*iapTestServiceAccountInfoPtrType)(v)
}

func (*iapTestServiceAccountInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IapTestServiceAccountInfo)(nil)).Elem()
}

func (i *iapTestServiceAccountInfoPtrType) ToIapTestServiceAccountInfoPtrOutput() IapTestServiceAccountInfoPtrOutput {
	return i.ToIapTestServiceAccountInfoPtrOutputWithContext(context.Background())
}

func (i *iapTestServiceAccountInfoPtrType) ToIapTestServiceAccountInfoPtrOutputWithContext(ctx context.Context) IapTestServiceAccountInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapTestServiceAccountInfoPtrOutput)
}

// Describes authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
type IapTestServiceAccountInfoOutput struct{ *pulumi.OutputState }

func (IapTestServiceAccountInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IapTestServiceAccountInfo)(nil)).Elem()
}

func (o IapTestServiceAccountInfoOutput) ToIapTestServiceAccountInfoOutput() IapTestServiceAccountInfoOutput {
	return o
}

func (o IapTestServiceAccountInfoOutput) ToIapTestServiceAccountInfoOutputWithContext(ctx context.Context) IapTestServiceAccountInfoOutput {
	return o
}

func (o IapTestServiceAccountInfoOutput) ToIapTestServiceAccountInfoPtrOutput() IapTestServiceAccountInfoPtrOutput {
	return o.ToIapTestServiceAccountInfoPtrOutputWithContext(context.Background())
}

func (o IapTestServiceAccountInfoOutput) ToIapTestServiceAccountInfoPtrOutputWithContext(ctx context.Context) IapTestServiceAccountInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IapTestServiceAccountInfo) *IapTestServiceAccountInfo {
		return &v
	}).(IapTestServiceAccountInfoPtrOutput)
}

// Describes OAuth2 Client ID of resources protected by Identity-Aware-Proxy(IAP).
func (o IapTestServiceAccountInfoOutput) TargetAudienceClientId() pulumi.StringOutput {
	return o.ApplyT(func(v IapTestServiceAccountInfo) string { return v.TargetAudienceClientId }).(pulumi.StringOutput)
}

type IapTestServiceAccountInfoPtrOutput struct{ *pulumi.OutputState }

func (IapTestServiceAccountInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IapTestServiceAccountInfo)(nil)).Elem()
}

func (o IapTestServiceAccountInfoPtrOutput) ToIapTestServiceAccountInfoPtrOutput() IapTestServiceAccountInfoPtrOutput {
	return o
}

func (o IapTestServiceAccountInfoPtrOutput) ToIapTestServiceAccountInfoPtrOutputWithContext(ctx context.Context) IapTestServiceAccountInfoPtrOutput {
	return o
}

func (o IapTestServiceAccountInfoPtrOutput) Elem() IapTestServiceAccountInfoOutput {
	return o.ApplyT(func(v *IapTestServiceAccountInfo) IapTestServiceAccountInfo {
		if v != nil {
			return *v
		}
		var ret IapTestServiceAccountInfo
		return ret
	}).(IapTestServiceAccountInfoOutput)
}

// Describes OAuth2 Client ID of resources protected by Identity-Aware-Proxy(IAP).
func (o IapTestServiceAccountInfoPtrOutput) TargetAudienceClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IapTestServiceAccountInfo) *string {
		if v == nil {
			return nil
		}
		return &v.TargetAudienceClientId
	}).(pulumi.StringPtrOutput)
}

// Describes authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
type IapTestServiceAccountInfoResponse struct {
	// Describes OAuth2 Client ID of resources protected by Identity-Aware-Proxy(IAP).
	TargetAudienceClientId string `pulumi:"targetAudienceClientId"`
}

// IapTestServiceAccountInfoResponseInput is an input type that accepts IapTestServiceAccountInfoResponseArgs and IapTestServiceAccountInfoResponseOutput values.
// You can construct a concrete instance of `IapTestServiceAccountInfoResponseInput` via:
//
//          IapTestServiceAccountInfoResponseArgs{...}
type IapTestServiceAccountInfoResponseInput interface {
	pulumi.Input

	ToIapTestServiceAccountInfoResponseOutput() IapTestServiceAccountInfoResponseOutput
	ToIapTestServiceAccountInfoResponseOutputWithContext(context.Context) IapTestServiceAccountInfoResponseOutput
}

// Describes authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
type IapTestServiceAccountInfoResponseArgs struct {
	// Describes OAuth2 Client ID of resources protected by Identity-Aware-Proxy(IAP).
	TargetAudienceClientId pulumi.StringInput `pulumi:"targetAudienceClientId"`
}

func (IapTestServiceAccountInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IapTestServiceAccountInfoResponse)(nil)).Elem()
}

func (i IapTestServiceAccountInfoResponseArgs) ToIapTestServiceAccountInfoResponseOutput() IapTestServiceAccountInfoResponseOutput {
	return i.ToIapTestServiceAccountInfoResponseOutputWithContext(context.Background())
}

func (i IapTestServiceAccountInfoResponseArgs) ToIapTestServiceAccountInfoResponseOutputWithContext(ctx context.Context) IapTestServiceAccountInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapTestServiceAccountInfoResponseOutput)
}

func (i IapTestServiceAccountInfoResponseArgs) ToIapTestServiceAccountInfoResponsePtrOutput() IapTestServiceAccountInfoResponsePtrOutput {
	return i.ToIapTestServiceAccountInfoResponsePtrOutputWithContext(context.Background())
}

func (i IapTestServiceAccountInfoResponseArgs) ToIapTestServiceAccountInfoResponsePtrOutputWithContext(ctx context.Context) IapTestServiceAccountInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapTestServiceAccountInfoResponseOutput).ToIapTestServiceAccountInfoResponsePtrOutputWithContext(ctx)
}

// IapTestServiceAccountInfoResponsePtrInput is an input type that accepts IapTestServiceAccountInfoResponseArgs, IapTestServiceAccountInfoResponsePtr and IapTestServiceAccountInfoResponsePtrOutput values.
// You can construct a concrete instance of `IapTestServiceAccountInfoResponsePtrInput` via:
//
//          IapTestServiceAccountInfoResponseArgs{...}
//
//  or:
//
//          nil
type IapTestServiceAccountInfoResponsePtrInput interface {
	pulumi.Input

	ToIapTestServiceAccountInfoResponsePtrOutput() IapTestServiceAccountInfoResponsePtrOutput
	ToIapTestServiceAccountInfoResponsePtrOutputWithContext(context.Context) IapTestServiceAccountInfoResponsePtrOutput
}

type iapTestServiceAccountInfoResponsePtrType IapTestServiceAccountInfoResponseArgs

func IapTestServiceAccountInfoResponsePtr(v *IapTestServiceAccountInfoResponseArgs) IapTestServiceAccountInfoResponsePtrInput {
	return (*iapTestServiceAccountInfoResponsePtrType)(v)
}

func (*iapTestServiceAccountInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IapTestServiceAccountInfoResponse)(nil)).Elem()
}

func (i *iapTestServiceAccountInfoResponsePtrType) ToIapTestServiceAccountInfoResponsePtrOutput() IapTestServiceAccountInfoResponsePtrOutput {
	return i.ToIapTestServiceAccountInfoResponsePtrOutputWithContext(context.Background())
}

func (i *iapTestServiceAccountInfoResponsePtrType) ToIapTestServiceAccountInfoResponsePtrOutputWithContext(ctx context.Context) IapTestServiceAccountInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapTestServiceAccountInfoResponsePtrOutput)
}

// Describes authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
type IapTestServiceAccountInfoResponseOutput struct{ *pulumi.OutputState }

func (IapTestServiceAccountInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IapTestServiceAccountInfoResponse)(nil)).Elem()
}

func (o IapTestServiceAccountInfoResponseOutput) ToIapTestServiceAccountInfoResponseOutput() IapTestServiceAccountInfoResponseOutput {
	return o
}

func (o IapTestServiceAccountInfoResponseOutput) ToIapTestServiceAccountInfoResponseOutputWithContext(ctx context.Context) IapTestServiceAccountInfoResponseOutput {
	return o
}

func (o IapTestServiceAccountInfoResponseOutput) ToIapTestServiceAccountInfoResponsePtrOutput() IapTestServiceAccountInfoResponsePtrOutput {
	return o.ToIapTestServiceAccountInfoResponsePtrOutputWithContext(context.Background())
}

func (o IapTestServiceAccountInfoResponseOutput) ToIapTestServiceAccountInfoResponsePtrOutputWithContext(ctx context.Context) IapTestServiceAccountInfoResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IapTestServiceAccountInfoResponse) *IapTestServiceAccountInfoResponse {
		return &v
	}).(IapTestServiceAccountInfoResponsePtrOutput)
}

// Describes OAuth2 Client ID of resources protected by Identity-Aware-Proxy(IAP).
func (o IapTestServiceAccountInfoResponseOutput) TargetAudienceClientId() pulumi.StringOutput {
	return o.ApplyT(func(v IapTestServiceAccountInfoResponse) string { return v.TargetAudienceClientId }).(pulumi.StringOutput)
}

type IapTestServiceAccountInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (IapTestServiceAccountInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IapTestServiceAccountInfoResponse)(nil)).Elem()
}

func (o IapTestServiceAccountInfoResponsePtrOutput) ToIapTestServiceAccountInfoResponsePtrOutput() IapTestServiceAccountInfoResponsePtrOutput {
	return o
}

func (o IapTestServiceAccountInfoResponsePtrOutput) ToIapTestServiceAccountInfoResponsePtrOutputWithContext(ctx context.Context) IapTestServiceAccountInfoResponsePtrOutput {
	return o
}

func (o IapTestServiceAccountInfoResponsePtrOutput) Elem() IapTestServiceAccountInfoResponseOutput {
	return o.ApplyT(func(v *IapTestServiceAccountInfoResponse) IapTestServiceAccountInfoResponse {
		if v != nil {
			return *v
		}
		var ret IapTestServiceAccountInfoResponse
		return ret
	}).(IapTestServiceAccountInfoResponseOutput)
}

// Describes OAuth2 Client ID of resources protected by Identity-Aware-Proxy(IAP).
func (o IapTestServiceAccountInfoResponsePtrOutput) TargetAudienceClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IapTestServiceAccountInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetAudienceClientId
	}).(pulumi.StringPtrOutput)
}

// Defines a custom error message used by CreateScanConfig and UpdateScanConfig APIs when scan configuration validation fails. It is also reported as part of a ScanRunErrorTrace message if scan validation fails due to a scan configuration error.
type ScanConfigError struct {
	// Indicates the reason code for a configuration failure.
	Code *ScanConfigErrorCode `pulumi:"code"`
	// Indicates the full name of the ScanConfig field that triggers this error, for example "scan_config.max_qps". This field is provided for troubleshooting purposes only and its actual value can change in the future.
	FieldName *string `pulumi:"fieldName"`
}

// ScanConfigErrorInput is an input type that accepts ScanConfigErrorArgs and ScanConfigErrorOutput values.
// You can construct a concrete instance of `ScanConfigErrorInput` via:
//
//          ScanConfigErrorArgs{...}
type ScanConfigErrorInput interface {
	pulumi.Input

	ToScanConfigErrorOutput() ScanConfigErrorOutput
	ToScanConfigErrorOutputWithContext(context.Context) ScanConfigErrorOutput
}

// Defines a custom error message used by CreateScanConfig and UpdateScanConfig APIs when scan configuration validation fails. It is also reported as part of a ScanRunErrorTrace message if scan validation fails due to a scan configuration error.
type ScanConfigErrorArgs struct {
	// Indicates the reason code for a configuration failure.
	Code ScanConfigErrorCodePtrInput `pulumi:"code"`
	// Indicates the full name of the ScanConfig field that triggers this error, for example "scan_config.max_qps". This field is provided for troubleshooting purposes only and its actual value can change in the future.
	FieldName pulumi.StringPtrInput `pulumi:"fieldName"`
}

func (ScanConfigErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanConfigError)(nil)).Elem()
}

func (i ScanConfigErrorArgs) ToScanConfigErrorOutput() ScanConfigErrorOutput {
	return i.ToScanConfigErrorOutputWithContext(context.Background())
}

func (i ScanConfigErrorArgs) ToScanConfigErrorOutputWithContext(ctx context.Context) ScanConfigErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanConfigErrorOutput)
}

func (i ScanConfigErrorArgs) ToScanConfigErrorPtrOutput() ScanConfigErrorPtrOutput {
	return i.ToScanConfigErrorPtrOutputWithContext(context.Background())
}

func (i ScanConfigErrorArgs) ToScanConfigErrorPtrOutputWithContext(ctx context.Context) ScanConfigErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanConfigErrorOutput).ToScanConfigErrorPtrOutputWithContext(ctx)
}

// ScanConfigErrorPtrInput is an input type that accepts ScanConfigErrorArgs, ScanConfigErrorPtr and ScanConfigErrorPtrOutput values.
// You can construct a concrete instance of `ScanConfigErrorPtrInput` via:
//
//          ScanConfigErrorArgs{...}
//
//  or:
//
//          nil
type ScanConfigErrorPtrInput interface {
	pulumi.Input

	ToScanConfigErrorPtrOutput() ScanConfigErrorPtrOutput
	ToScanConfigErrorPtrOutputWithContext(context.Context) ScanConfigErrorPtrOutput
}

type scanConfigErrorPtrType ScanConfigErrorArgs

func ScanConfigErrorPtr(v *ScanConfigErrorArgs) ScanConfigErrorPtrInput {
	return (*scanConfigErrorPtrType)(v)
}

func (*scanConfigErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanConfigError)(nil)).Elem()
}

func (i *scanConfigErrorPtrType) ToScanConfigErrorPtrOutput() ScanConfigErrorPtrOutput {
	return i.ToScanConfigErrorPtrOutputWithContext(context.Background())
}

func (i *scanConfigErrorPtrType) ToScanConfigErrorPtrOutputWithContext(ctx context.Context) ScanConfigErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanConfigErrorPtrOutput)
}

// Defines a custom error message used by CreateScanConfig and UpdateScanConfig APIs when scan configuration validation fails. It is also reported as part of a ScanRunErrorTrace message if scan validation fails due to a scan configuration error.
type ScanConfigErrorOutput struct{ *pulumi.OutputState }

func (ScanConfigErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanConfigError)(nil)).Elem()
}

func (o ScanConfigErrorOutput) ToScanConfigErrorOutput() ScanConfigErrorOutput {
	return o
}

func (o ScanConfigErrorOutput) ToScanConfigErrorOutputWithContext(ctx context.Context) ScanConfigErrorOutput {
	return o
}

func (o ScanConfigErrorOutput) ToScanConfigErrorPtrOutput() ScanConfigErrorPtrOutput {
	return o.ToScanConfigErrorPtrOutputWithContext(context.Background())
}

func (o ScanConfigErrorOutput) ToScanConfigErrorPtrOutputWithContext(ctx context.Context) ScanConfigErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScanConfigError) *ScanConfigError {
		return &v
	}).(ScanConfigErrorPtrOutput)
}

// Indicates the reason code for a configuration failure.
func (o ScanConfigErrorOutput) Code() ScanConfigErrorCodePtrOutput {
	return o.ApplyT(func(v ScanConfigError) *ScanConfigErrorCode { return v.Code }).(ScanConfigErrorCodePtrOutput)
}

// Indicates the full name of the ScanConfig field that triggers this error, for example "scan_config.max_qps". This field is provided for troubleshooting purposes only and its actual value can change in the future.
func (o ScanConfigErrorOutput) FieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScanConfigError) *string { return v.FieldName }).(pulumi.StringPtrOutput)
}

type ScanConfigErrorPtrOutput struct{ *pulumi.OutputState }

func (ScanConfigErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanConfigError)(nil)).Elem()
}

func (o ScanConfigErrorPtrOutput) ToScanConfigErrorPtrOutput() ScanConfigErrorPtrOutput {
	return o
}

func (o ScanConfigErrorPtrOutput) ToScanConfigErrorPtrOutputWithContext(ctx context.Context) ScanConfigErrorPtrOutput {
	return o
}

func (o ScanConfigErrorPtrOutput) Elem() ScanConfigErrorOutput {
	return o.ApplyT(func(v *ScanConfigError) ScanConfigError {
		if v != nil {
			return *v
		}
		var ret ScanConfigError
		return ret
	}).(ScanConfigErrorOutput)
}

// Indicates the reason code for a configuration failure.
func (o ScanConfigErrorPtrOutput) Code() ScanConfigErrorCodePtrOutput {
	return o.ApplyT(func(v *ScanConfigError) *ScanConfigErrorCode {
		if v == nil {
			return nil
		}
		return v.Code
	}).(ScanConfigErrorCodePtrOutput)
}

// Indicates the full name of the ScanConfig field that triggers this error, for example "scan_config.max_qps". This field is provided for troubleshooting purposes only and its actual value can change in the future.
func (o ScanConfigErrorPtrOutput) FieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanConfigError) *string {
		if v == nil {
			return nil
		}
		return v.FieldName
	}).(pulumi.StringPtrOutput)
}

// Defines a custom error message used by CreateScanConfig and UpdateScanConfig APIs when scan configuration validation fails. It is also reported as part of a ScanRunErrorTrace message if scan validation fails due to a scan configuration error.
type ScanConfigErrorResponse struct {
	// Indicates the reason code for a configuration failure.
	Code string `pulumi:"code"`
	// Indicates the full name of the ScanConfig field that triggers this error, for example "scan_config.max_qps". This field is provided for troubleshooting purposes only and its actual value can change in the future.
	FieldName string `pulumi:"fieldName"`
}

// ScanConfigErrorResponseInput is an input type that accepts ScanConfigErrorResponseArgs and ScanConfigErrorResponseOutput values.
// You can construct a concrete instance of `ScanConfigErrorResponseInput` via:
//
//          ScanConfigErrorResponseArgs{...}
type ScanConfigErrorResponseInput interface {
	pulumi.Input

	ToScanConfigErrorResponseOutput() ScanConfigErrorResponseOutput
	ToScanConfigErrorResponseOutputWithContext(context.Context) ScanConfigErrorResponseOutput
}

// Defines a custom error message used by CreateScanConfig and UpdateScanConfig APIs when scan configuration validation fails. It is also reported as part of a ScanRunErrorTrace message if scan validation fails due to a scan configuration error.
type ScanConfigErrorResponseArgs struct {
	// Indicates the reason code for a configuration failure.
	Code pulumi.StringInput `pulumi:"code"`
	// Indicates the full name of the ScanConfig field that triggers this error, for example "scan_config.max_qps". This field is provided for troubleshooting purposes only and its actual value can change in the future.
	FieldName pulumi.StringInput `pulumi:"fieldName"`
}

func (ScanConfigErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanConfigErrorResponse)(nil)).Elem()
}

func (i ScanConfigErrorResponseArgs) ToScanConfigErrorResponseOutput() ScanConfigErrorResponseOutput {
	return i.ToScanConfigErrorResponseOutputWithContext(context.Background())
}

func (i ScanConfigErrorResponseArgs) ToScanConfigErrorResponseOutputWithContext(ctx context.Context) ScanConfigErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanConfigErrorResponseOutput)
}

func (i ScanConfigErrorResponseArgs) ToScanConfigErrorResponsePtrOutput() ScanConfigErrorResponsePtrOutput {
	return i.ToScanConfigErrorResponsePtrOutputWithContext(context.Background())
}

func (i ScanConfigErrorResponseArgs) ToScanConfigErrorResponsePtrOutputWithContext(ctx context.Context) ScanConfigErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanConfigErrorResponseOutput).ToScanConfigErrorResponsePtrOutputWithContext(ctx)
}

// ScanConfigErrorResponsePtrInput is an input type that accepts ScanConfigErrorResponseArgs, ScanConfigErrorResponsePtr and ScanConfigErrorResponsePtrOutput values.
// You can construct a concrete instance of `ScanConfigErrorResponsePtrInput` via:
//
//          ScanConfigErrorResponseArgs{...}
//
//  or:
//
//          nil
type ScanConfigErrorResponsePtrInput interface {
	pulumi.Input

	ToScanConfigErrorResponsePtrOutput() ScanConfigErrorResponsePtrOutput
	ToScanConfigErrorResponsePtrOutputWithContext(context.Context) ScanConfigErrorResponsePtrOutput
}

type scanConfigErrorResponsePtrType ScanConfigErrorResponseArgs

func ScanConfigErrorResponsePtr(v *ScanConfigErrorResponseArgs) ScanConfigErrorResponsePtrInput {
	return (*scanConfigErrorResponsePtrType)(v)
}

func (*scanConfigErrorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanConfigErrorResponse)(nil)).Elem()
}

func (i *scanConfigErrorResponsePtrType) ToScanConfigErrorResponsePtrOutput() ScanConfigErrorResponsePtrOutput {
	return i.ToScanConfigErrorResponsePtrOutputWithContext(context.Background())
}

func (i *scanConfigErrorResponsePtrType) ToScanConfigErrorResponsePtrOutputWithContext(ctx context.Context) ScanConfigErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanConfigErrorResponsePtrOutput)
}

// Defines a custom error message used by CreateScanConfig and UpdateScanConfig APIs when scan configuration validation fails. It is also reported as part of a ScanRunErrorTrace message if scan validation fails due to a scan configuration error.
type ScanConfigErrorResponseOutput struct{ *pulumi.OutputState }

func (ScanConfigErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanConfigErrorResponse)(nil)).Elem()
}

func (o ScanConfigErrorResponseOutput) ToScanConfigErrorResponseOutput() ScanConfigErrorResponseOutput {
	return o
}

func (o ScanConfigErrorResponseOutput) ToScanConfigErrorResponseOutputWithContext(ctx context.Context) ScanConfigErrorResponseOutput {
	return o
}

func (o ScanConfigErrorResponseOutput) ToScanConfigErrorResponsePtrOutput() ScanConfigErrorResponsePtrOutput {
	return o.ToScanConfigErrorResponsePtrOutputWithContext(context.Background())
}

func (o ScanConfigErrorResponseOutput) ToScanConfigErrorResponsePtrOutputWithContext(ctx context.Context) ScanConfigErrorResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScanConfigErrorResponse) *ScanConfigErrorResponse {
		return &v
	}).(ScanConfigErrorResponsePtrOutput)
}

// Indicates the reason code for a configuration failure.
func (o ScanConfigErrorResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ScanConfigErrorResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Indicates the full name of the ScanConfig field that triggers this error, for example "scan_config.max_qps". This field is provided for troubleshooting purposes only and its actual value can change in the future.
func (o ScanConfigErrorResponseOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v ScanConfigErrorResponse) string { return v.FieldName }).(pulumi.StringOutput)
}

type ScanConfigErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (ScanConfigErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanConfigErrorResponse)(nil)).Elem()
}

func (o ScanConfigErrorResponsePtrOutput) ToScanConfigErrorResponsePtrOutput() ScanConfigErrorResponsePtrOutput {
	return o
}

func (o ScanConfigErrorResponsePtrOutput) ToScanConfigErrorResponsePtrOutputWithContext(ctx context.Context) ScanConfigErrorResponsePtrOutput {
	return o
}

func (o ScanConfigErrorResponsePtrOutput) Elem() ScanConfigErrorResponseOutput {
	return o.ApplyT(func(v *ScanConfigErrorResponse) ScanConfigErrorResponse {
		if v != nil {
			return *v
		}
		var ret ScanConfigErrorResponse
		return ret
	}).(ScanConfigErrorResponseOutput)
}

// Indicates the reason code for a configuration failure.
func (o ScanConfigErrorResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanConfigErrorResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// Indicates the full name of the ScanConfig field that triggers this error, for example "scan_config.max_qps". This field is provided for troubleshooting purposes only and its actual value can change in the future.
func (o ScanConfigErrorResponsePtrOutput) FieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanConfigErrorResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FieldName
	}).(pulumi.StringPtrOutput)
}

// A ScanRun is a output-only resource representing an actual run of the scan. Next id: 12
type ScanRun struct {
	// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
	EndTime *string `pulumi:"endTime"`
	// If result_state is an ERROR, this field provides the primary reason for scan's termination and more details, if such are available.
	ErrorTrace *ScanRunErrorTrace `pulumi:"errorTrace"`
	// The execution state of the ScanRun.
	ExecutionState *ScanRunExecutionState `pulumi:"executionState"`
	// Whether the scan run has found any vulnerabilities.
	HasVulnerabilities *bool `pulumi:"hasVulnerabilities"`
	// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
	Name *string `pulumi:"name"`
	// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
	ProgressPercent *int `pulumi:"progressPercent"`
	// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
	ResultState *ScanRunResultState `pulumi:"resultState"`
	// The time at which the ScanRun started.
	StartTime *string `pulumi:"startTime"`
	// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
	UrlsCrawledCount *string `pulumi:"urlsCrawledCount"`
	// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
	UrlsTestedCount *string `pulumi:"urlsTestedCount"`
	// A list of warnings, if such are encountered during this scan run.
	WarningTraces []ScanRunWarningTrace `pulumi:"warningTraces"`
}

// ScanRunInput is an input type that accepts ScanRunArgs and ScanRunOutput values.
// You can construct a concrete instance of `ScanRunInput` via:
//
//          ScanRunArgs{...}
type ScanRunInput interface {
	pulumi.Input

	ToScanRunOutput() ScanRunOutput
	ToScanRunOutputWithContext(context.Context) ScanRunOutput
}

// A ScanRun is a output-only resource representing an actual run of the scan. Next id: 12
type ScanRunArgs struct {
	// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// If result_state is an ERROR, this field provides the primary reason for scan's termination and more details, if such are available.
	ErrorTrace ScanRunErrorTracePtrInput `pulumi:"errorTrace"`
	// The execution state of the ScanRun.
	ExecutionState ScanRunExecutionStatePtrInput `pulumi:"executionState"`
	// Whether the scan run has found any vulnerabilities.
	HasVulnerabilities pulumi.BoolPtrInput `pulumi:"hasVulnerabilities"`
	// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
	ProgressPercent pulumi.IntPtrInput `pulumi:"progressPercent"`
	// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
	ResultState ScanRunResultStatePtrInput `pulumi:"resultState"`
	// The time at which the ScanRun started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
	UrlsCrawledCount pulumi.StringPtrInput `pulumi:"urlsCrawledCount"`
	// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
	UrlsTestedCount pulumi.StringPtrInput `pulumi:"urlsTestedCount"`
	// A list of warnings, if such are encountered during this scan run.
	WarningTraces ScanRunWarningTraceArrayInput `pulumi:"warningTraces"`
}

func (ScanRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRun)(nil)).Elem()
}

func (i ScanRunArgs) ToScanRunOutput() ScanRunOutput {
	return i.ToScanRunOutputWithContext(context.Background())
}

func (i ScanRunArgs) ToScanRunOutputWithContext(ctx context.Context) ScanRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunOutput)
}

func (i ScanRunArgs) ToScanRunPtrOutput() ScanRunPtrOutput {
	return i.ToScanRunPtrOutputWithContext(context.Background())
}

func (i ScanRunArgs) ToScanRunPtrOutputWithContext(ctx context.Context) ScanRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunOutput).ToScanRunPtrOutputWithContext(ctx)
}

// ScanRunPtrInput is an input type that accepts ScanRunArgs, ScanRunPtr and ScanRunPtrOutput values.
// You can construct a concrete instance of `ScanRunPtrInput` via:
//
//          ScanRunArgs{...}
//
//  or:
//
//          nil
type ScanRunPtrInput interface {
	pulumi.Input

	ToScanRunPtrOutput() ScanRunPtrOutput
	ToScanRunPtrOutputWithContext(context.Context) ScanRunPtrOutput
}

type scanRunPtrType ScanRunArgs

func ScanRunPtr(v *ScanRunArgs) ScanRunPtrInput {
	return (*scanRunPtrType)(v)
}

func (*scanRunPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanRun)(nil)).Elem()
}

func (i *scanRunPtrType) ToScanRunPtrOutput() ScanRunPtrOutput {
	return i.ToScanRunPtrOutputWithContext(context.Background())
}

func (i *scanRunPtrType) ToScanRunPtrOutputWithContext(ctx context.Context) ScanRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunPtrOutput)
}

// A ScanRun is a output-only resource representing an actual run of the scan. Next id: 12
type ScanRunOutput struct{ *pulumi.OutputState }

func (ScanRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRun)(nil)).Elem()
}

func (o ScanRunOutput) ToScanRunOutput() ScanRunOutput {
	return o
}

func (o ScanRunOutput) ToScanRunOutputWithContext(ctx context.Context) ScanRunOutput {
	return o
}

func (o ScanRunOutput) ToScanRunPtrOutput() ScanRunPtrOutput {
	return o.ToScanRunPtrOutputWithContext(context.Background())
}

func (o ScanRunOutput) ToScanRunPtrOutputWithContext(ctx context.Context) ScanRunPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScanRun) *ScanRun {
		return &v
	}).(ScanRunPtrOutput)
}

// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
func (o ScanRunOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScanRun) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// If result_state is an ERROR, this field provides the primary reason for scan's termination and more details, if such are available.
func (o ScanRunOutput) ErrorTrace() ScanRunErrorTracePtrOutput {
	return o.ApplyT(func(v ScanRun) *ScanRunErrorTrace { return v.ErrorTrace }).(ScanRunErrorTracePtrOutput)
}

// The execution state of the ScanRun.
func (o ScanRunOutput) ExecutionState() ScanRunExecutionStatePtrOutput {
	return o.ApplyT(func(v ScanRun) *ScanRunExecutionState { return v.ExecutionState }).(ScanRunExecutionStatePtrOutput)
}

// Whether the scan run has found any vulnerabilities.
func (o ScanRunOutput) HasVulnerabilities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScanRun) *bool { return v.HasVulnerabilities }).(pulumi.BoolPtrOutput)
}

// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
func (o ScanRunOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScanRun) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
func (o ScanRunOutput) ProgressPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScanRun) *int { return v.ProgressPercent }).(pulumi.IntPtrOutput)
}

// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
func (o ScanRunOutput) ResultState() ScanRunResultStatePtrOutput {
	return o.ApplyT(func(v ScanRun) *ScanRunResultState { return v.ResultState }).(ScanRunResultStatePtrOutput)
}

// The time at which the ScanRun started.
func (o ScanRunOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScanRun) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
func (o ScanRunOutput) UrlsCrawledCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScanRun) *string { return v.UrlsCrawledCount }).(pulumi.StringPtrOutput)
}

// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
func (o ScanRunOutput) UrlsTestedCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScanRun) *string { return v.UrlsTestedCount }).(pulumi.StringPtrOutput)
}

// A list of warnings, if such are encountered during this scan run.
func (o ScanRunOutput) WarningTraces() ScanRunWarningTraceArrayOutput {
	return o.ApplyT(func(v ScanRun) []ScanRunWarningTrace { return v.WarningTraces }).(ScanRunWarningTraceArrayOutput)
}

type ScanRunPtrOutput struct{ *pulumi.OutputState }

func (ScanRunPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanRun)(nil)).Elem()
}

func (o ScanRunPtrOutput) ToScanRunPtrOutput() ScanRunPtrOutput {
	return o
}

func (o ScanRunPtrOutput) ToScanRunPtrOutputWithContext(ctx context.Context) ScanRunPtrOutput {
	return o
}

func (o ScanRunPtrOutput) Elem() ScanRunOutput {
	return o.ApplyT(func(v *ScanRun) ScanRun {
		if v != nil {
			return *v
		}
		var ret ScanRun
		return ret
	}).(ScanRunOutput)
}

// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
func (o ScanRunPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRun) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// If result_state is an ERROR, this field provides the primary reason for scan's termination and more details, if such are available.
func (o ScanRunPtrOutput) ErrorTrace() ScanRunErrorTracePtrOutput {
	return o.ApplyT(func(v *ScanRun) *ScanRunErrorTrace {
		if v == nil {
			return nil
		}
		return v.ErrorTrace
	}).(ScanRunErrorTracePtrOutput)
}

// The execution state of the ScanRun.
func (o ScanRunPtrOutput) ExecutionState() ScanRunExecutionStatePtrOutput {
	return o.ApplyT(func(v *ScanRun) *ScanRunExecutionState {
		if v == nil {
			return nil
		}
		return v.ExecutionState
	}).(ScanRunExecutionStatePtrOutput)
}

// Whether the scan run has found any vulnerabilities.
func (o ScanRunPtrOutput) HasVulnerabilities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScanRun) *bool {
		if v == nil {
			return nil
		}
		return v.HasVulnerabilities
	}).(pulumi.BoolPtrOutput)
}

// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
func (o ScanRunPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRun) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
func (o ScanRunPtrOutput) ProgressPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScanRun) *int {
		if v == nil {
			return nil
		}
		return v.ProgressPercent
	}).(pulumi.IntPtrOutput)
}

// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
func (o ScanRunPtrOutput) ResultState() ScanRunResultStatePtrOutput {
	return o.ApplyT(func(v *ScanRun) *ScanRunResultState {
		if v == nil {
			return nil
		}
		return v.ResultState
	}).(ScanRunResultStatePtrOutput)
}

// The time at which the ScanRun started.
func (o ScanRunPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRun) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
func (o ScanRunPtrOutput) UrlsCrawledCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRun) *string {
		if v == nil {
			return nil
		}
		return v.UrlsCrawledCount
	}).(pulumi.StringPtrOutput)
}

// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
func (o ScanRunPtrOutput) UrlsTestedCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRun) *string {
		if v == nil {
			return nil
		}
		return v.UrlsTestedCount
	}).(pulumi.StringPtrOutput)
}

// A list of warnings, if such are encountered during this scan run.
func (o ScanRunPtrOutput) WarningTraces() ScanRunWarningTraceArrayOutput {
	return o.ApplyT(func(v *ScanRun) []ScanRunWarningTrace {
		if v == nil {
			return nil
		}
		return v.WarningTraces
	}).(ScanRunWarningTraceArrayOutput)
}

// Output only. Defines an error trace message for a ScanRun.
type ScanRunErrorTrace struct {
	// Indicates the error reason code.
	Code *ScanRunErrorTraceCode `pulumi:"code"`
	// If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most common HTTP error code, if such is available. For example, if this code is 404, the scan has encountered too many NOT_FOUND responses.
	MostCommonHttpErrorCode *int `pulumi:"mostCommonHttpErrorCode"`
	// If the scan encounters SCAN_CONFIG_ISSUE error, this field has the error message encountered during scan configuration validation that is performed before each scan run.
	ScanConfigError *ScanConfigError `pulumi:"scanConfigError"`
}

// ScanRunErrorTraceInput is an input type that accepts ScanRunErrorTraceArgs and ScanRunErrorTraceOutput values.
// You can construct a concrete instance of `ScanRunErrorTraceInput` via:
//
//          ScanRunErrorTraceArgs{...}
type ScanRunErrorTraceInput interface {
	pulumi.Input

	ToScanRunErrorTraceOutput() ScanRunErrorTraceOutput
	ToScanRunErrorTraceOutputWithContext(context.Context) ScanRunErrorTraceOutput
}

// Output only. Defines an error trace message for a ScanRun.
type ScanRunErrorTraceArgs struct {
	// Indicates the error reason code.
	Code ScanRunErrorTraceCodePtrInput `pulumi:"code"`
	// If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most common HTTP error code, if such is available. For example, if this code is 404, the scan has encountered too many NOT_FOUND responses.
	MostCommonHttpErrorCode pulumi.IntPtrInput `pulumi:"mostCommonHttpErrorCode"`
	// If the scan encounters SCAN_CONFIG_ISSUE error, this field has the error message encountered during scan configuration validation that is performed before each scan run.
	ScanConfigError ScanConfigErrorPtrInput `pulumi:"scanConfigError"`
}

func (ScanRunErrorTraceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRunErrorTrace)(nil)).Elem()
}

func (i ScanRunErrorTraceArgs) ToScanRunErrorTraceOutput() ScanRunErrorTraceOutput {
	return i.ToScanRunErrorTraceOutputWithContext(context.Background())
}

func (i ScanRunErrorTraceArgs) ToScanRunErrorTraceOutputWithContext(ctx context.Context) ScanRunErrorTraceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunErrorTraceOutput)
}

func (i ScanRunErrorTraceArgs) ToScanRunErrorTracePtrOutput() ScanRunErrorTracePtrOutput {
	return i.ToScanRunErrorTracePtrOutputWithContext(context.Background())
}

func (i ScanRunErrorTraceArgs) ToScanRunErrorTracePtrOutputWithContext(ctx context.Context) ScanRunErrorTracePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunErrorTraceOutput).ToScanRunErrorTracePtrOutputWithContext(ctx)
}

// ScanRunErrorTracePtrInput is an input type that accepts ScanRunErrorTraceArgs, ScanRunErrorTracePtr and ScanRunErrorTracePtrOutput values.
// You can construct a concrete instance of `ScanRunErrorTracePtrInput` via:
//
//          ScanRunErrorTraceArgs{...}
//
//  or:
//
//          nil
type ScanRunErrorTracePtrInput interface {
	pulumi.Input

	ToScanRunErrorTracePtrOutput() ScanRunErrorTracePtrOutput
	ToScanRunErrorTracePtrOutputWithContext(context.Context) ScanRunErrorTracePtrOutput
}

type scanRunErrorTracePtrType ScanRunErrorTraceArgs

func ScanRunErrorTracePtr(v *ScanRunErrorTraceArgs) ScanRunErrorTracePtrInput {
	return (*scanRunErrorTracePtrType)(v)
}

func (*scanRunErrorTracePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanRunErrorTrace)(nil)).Elem()
}

func (i *scanRunErrorTracePtrType) ToScanRunErrorTracePtrOutput() ScanRunErrorTracePtrOutput {
	return i.ToScanRunErrorTracePtrOutputWithContext(context.Background())
}

func (i *scanRunErrorTracePtrType) ToScanRunErrorTracePtrOutputWithContext(ctx context.Context) ScanRunErrorTracePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunErrorTracePtrOutput)
}

// Output only. Defines an error trace message for a ScanRun.
type ScanRunErrorTraceOutput struct{ *pulumi.OutputState }

func (ScanRunErrorTraceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRunErrorTrace)(nil)).Elem()
}

func (o ScanRunErrorTraceOutput) ToScanRunErrorTraceOutput() ScanRunErrorTraceOutput {
	return o
}

func (o ScanRunErrorTraceOutput) ToScanRunErrorTraceOutputWithContext(ctx context.Context) ScanRunErrorTraceOutput {
	return o
}

func (o ScanRunErrorTraceOutput) ToScanRunErrorTracePtrOutput() ScanRunErrorTracePtrOutput {
	return o.ToScanRunErrorTracePtrOutputWithContext(context.Background())
}

func (o ScanRunErrorTraceOutput) ToScanRunErrorTracePtrOutputWithContext(ctx context.Context) ScanRunErrorTracePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScanRunErrorTrace) *ScanRunErrorTrace {
		return &v
	}).(ScanRunErrorTracePtrOutput)
}

// Indicates the error reason code.
func (o ScanRunErrorTraceOutput) Code() ScanRunErrorTraceCodePtrOutput {
	return o.ApplyT(func(v ScanRunErrorTrace) *ScanRunErrorTraceCode { return v.Code }).(ScanRunErrorTraceCodePtrOutput)
}

// If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most common HTTP error code, if such is available. For example, if this code is 404, the scan has encountered too many NOT_FOUND responses.
func (o ScanRunErrorTraceOutput) MostCommonHttpErrorCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScanRunErrorTrace) *int { return v.MostCommonHttpErrorCode }).(pulumi.IntPtrOutput)
}

// If the scan encounters SCAN_CONFIG_ISSUE error, this field has the error message encountered during scan configuration validation that is performed before each scan run.
func (o ScanRunErrorTraceOutput) ScanConfigError() ScanConfigErrorPtrOutput {
	return o.ApplyT(func(v ScanRunErrorTrace) *ScanConfigError { return v.ScanConfigError }).(ScanConfigErrorPtrOutput)
}

type ScanRunErrorTracePtrOutput struct{ *pulumi.OutputState }

func (ScanRunErrorTracePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanRunErrorTrace)(nil)).Elem()
}

func (o ScanRunErrorTracePtrOutput) ToScanRunErrorTracePtrOutput() ScanRunErrorTracePtrOutput {
	return o
}

func (o ScanRunErrorTracePtrOutput) ToScanRunErrorTracePtrOutputWithContext(ctx context.Context) ScanRunErrorTracePtrOutput {
	return o
}

func (o ScanRunErrorTracePtrOutput) Elem() ScanRunErrorTraceOutput {
	return o.ApplyT(func(v *ScanRunErrorTrace) ScanRunErrorTrace {
		if v != nil {
			return *v
		}
		var ret ScanRunErrorTrace
		return ret
	}).(ScanRunErrorTraceOutput)
}

// Indicates the error reason code.
func (o ScanRunErrorTracePtrOutput) Code() ScanRunErrorTraceCodePtrOutput {
	return o.ApplyT(func(v *ScanRunErrorTrace) *ScanRunErrorTraceCode {
		if v == nil {
			return nil
		}
		return v.Code
	}).(ScanRunErrorTraceCodePtrOutput)
}

// If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most common HTTP error code, if such is available. For example, if this code is 404, the scan has encountered too many NOT_FOUND responses.
func (o ScanRunErrorTracePtrOutput) MostCommonHttpErrorCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScanRunErrorTrace) *int {
		if v == nil {
			return nil
		}
		return v.MostCommonHttpErrorCode
	}).(pulumi.IntPtrOutput)
}

// If the scan encounters SCAN_CONFIG_ISSUE error, this field has the error message encountered during scan configuration validation that is performed before each scan run.
func (o ScanRunErrorTracePtrOutput) ScanConfigError() ScanConfigErrorPtrOutput {
	return o.ApplyT(func(v *ScanRunErrorTrace) *ScanConfigError {
		if v == nil {
			return nil
		}
		return v.ScanConfigError
	}).(ScanConfigErrorPtrOutput)
}

// Output only. Defines an error trace message for a ScanRun.
type ScanRunErrorTraceResponse struct {
	// Indicates the error reason code.
	Code string `pulumi:"code"`
	// If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most common HTTP error code, if such is available. For example, if this code is 404, the scan has encountered too many NOT_FOUND responses.
	MostCommonHttpErrorCode int `pulumi:"mostCommonHttpErrorCode"`
	// If the scan encounters SCAN_CONFIG_ISSUE error, this field has the error message encountered during scan configuration validation that is performed before each scan run.
	ScanConfigError ScanConfigErrorResponse `pulumi:"scanConfigError"`
}

// ScanRunErrorTraceResponseInput is an input type that accepts ScanRunErrorTraceResponseArgs and ScanRunErrorTraceResponseOutput values.
// You can construct a concrete instance of `ScanRunErrorTraceResponseInput` via:
//
//          ScanRunErrorTraceResponseArgs{...}
type ScanRunErrorTraceResponseInput interface {
	pulumi.Input

	ToScanRunErrorTraceResponseOutput() ScanRunErrorTraceResponseOutput
	ToScanRunErrorTraceResponseOutputWithContext(context.Context) ScanRunErrorTraceResponseOutput
}

// Output only. Defines an error trace message for a ScanRun.
type ScanRunErrorTraceResponseArgs struct {
	// Indicates the error reason code.
	Code pulumi.StringInput `pulumi:"code"`
	// If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most common HTTP error code, if such is available. For example, if this code is 404, the scan has encountered too many NOT_FOUND responses.
	MostCommonHttpErrorCode pulumi.IntInput `pulumi:"mostCommonHttpErrorCode"`
	// If the scan encounters SCAN_CONFIG_ISSUE error, this field has the error message encountered during scan configuration validation that is performed before each scan run.
	ScanConfigError ScanConfigErrorResponseInput `pulumi:"scanConfigError"`
}

func (ScanRunErrorTraceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRunErrorTraceResponse)(nil)).Elem()
}

func (i ScanRunErrorTraceResponseArgs) ToScanRunErrorTraceResponseOutput() ScanRunErrorTraceResponseOutput {
	return i.ToScanRunErrorTraceResponseOutputWithContext(context.Background())
}

func (i ScanRunErrorTraceResponseArgs) ToScanRunErrorTraceResponseOutputWithContext(ctx context.Context) ScanRunErrorTraceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunErrorTraceResponseOutput)
}

func (i ScanRunErrorTraceResponseArgs) ToScanRunErrorTraceResponsePtrOutput() ScanRunErrorTraceResponsePtrOutput {
	return i.ToScanRunErrorTraceResponsePtrOutputWithContext(context.Background())
}

func (i ScanRunErrorTraceResponseArgs) ToScanRunErrorTraceResponsePtrOutputWithContext(ctx context.Context) ScanRunErrorTraceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunErrorTraceResponseOutput).ToScanRunErrorTraceResponsePtrOutputWithContext(ctx)
}

// ScanRunErrorTraceResponsePtrInput is an input type that accepts ScanRunErrorTraceResponseArgs, ScanRunErrorTraceResponsePtr and ScanRunErrorTraceResponsePtrOutput values.
// You can construct a concrete instance of `ScanRunErrorTraceResponsePtrInput` via:
//
//          ScanRunErrorTraceResponseArgs{...}
//
//  or:
//
//          nil
type ScanRunErrorTraceResponsePtrInput interface {
	pulumi.Input

	ToScanRunErrorTraceResponsePtrOutput() ScanRunErrorTraceResponsePtrOutput
	ToScanRunErrorTraceResponsePtrOutputWithContext(context.Context) ScanRunErrorTraceResponsePtrOutput
}

type scanRunErrorTraceResponsePtrType ScanRunErrorTraceResponseArgs

func ScanRunErrorTraceResponsePtr(v *ScanRunErrorTraceResponseArgs) ScanRunErrorTraceResponsePtrInput {
	return (*scanRunErrorTraceResponsePtrType)(v)
}

func (*scanRunErrorTraceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanRunErrorTraceResponse)(nil)).Elem()
}

func (i *scanRunErrorTraceResponsePtrType) ToScanRunErrorTraceResponsePtrOutput() ScanRunErrorTraceResponsePtrOutput {
	return i.ToScanRunErrorTraceResponsePtrOutputWithContext(context.Background())
}

func (i *scanRunErrorTraceResponsePtrType) ToScanRunErrorTraceResponsePtrOutputWithContext(ctx context.Context) ScanRunErrorTraceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunErrorTraceResponsePtrOutput)
}

// Output only. Defines an error trace message for a ScanRun.
type ScanRunErrorTraceResponseOutput struct{ *pulumi.OutputState }

func (ScanRunErrorTraceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRunErrorTraceResponse)(nil)).Elem()
}

func (o ScanRunErrorTraceResponseOutput) ToScanRunErrorTraceResponseOutput() ScanRunErrorTraceResponseOutput {
	return o
}

func (o ScanRunErrorTraceResponseOutput) ToScanRunErrorTraceResponseOutputWithContext(ctx context.Context) ScanRunErrorTraceResponseOutput {
	return o
}

func (o ScanRunErrorTraceResponseOutput) ToScanRunErrorTraceResponsePtrOutput() ScanRunErrorTraceResponsePtrOutput {
	return o.ToScanRunErrorTraceResponsePtrOutputWithContext(context.Background())
}

func (o ScanRunErrorTraceResponseOutput) ToScanRunErrorTraceResponsePtrOutputWithContext(ctx context.Context) ScanRunErrorTraceResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScanRunErrorTraceResponse) *ScanRunErrorTraceResponse {
		return &v
	}).(ScanRunErrorTraceResponsePtrOutput)
}

// Indicates the error reason code.
func (o ScanRunErrorTraceResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunErrorTraceResponse) string { return v.Code }).(pulumi.StringOutput)
}

// If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most common HTTP error code, if such is available. For example, if this code is 404, the scan has encountered too many NOT_FOUND responses.
func (o ScanRunErrorTraceResponseOutput) MostCommonHttpErrorCode() pulumi.IntOutput {
	return o.ApplyT(func(v ScanRunErrorTraceResponse) int { return v.MostCommonHttpErrorCode }).(pulumi.IntOutput)
}

// If the scan encounters SCAN_CONFIG_ISSUE error, this field has the error message encountered during scan configuration validation that is performed before each scan run.
func (o ScanRunErrorTraceResponseOutput) ScanConfigError() ScanConfigErrorResponseOutput {
	return o.ApplyT(func(v ScanRunErrorTraceResponse) ScanConfigErrorResponse { return v.ScanConfigError }).(ScanConfigErrorResponseOutput)
}

type ScanRunErrorTraceResponsePtrOutput struct{ *pulumi.OutputState }

func (ScanRunErrorTraceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanRunErrorTraceResponse)(nil)).Elem()
}

func (o ScanRunErrorTraceResponsePtrOutput) ToScanRunErrorTraceResponsePtrOutput() ScanRunErrorTraceResponsePtrOutput {
	return o
}

func (o ScanRunErrorTraceResponsePtrOutput) ToScanRunErrorTraceResponsePtrOutputWithContext(ctx context.Context) ScanRunErrorTraceResponsePtrOutput {
	return o
}

func (o ScanRunErrorTraceResponsePtrOutput) Elem() ScanRunErrorTraceResponseOutput {
	return o.ApplyT(func(v *ScanRunErrorTraceResponse) ScanRunErrorTraceResponse {
		if v != nil {
			return *v
		}
		var ret ScanRunErrorTraceResponse
		return ret
	}).(ScanRunErrorTraceResponseOutput)
}

// Indicates the error reason code.
func (o ScanRunErrorTraceResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunErrorTraceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most common HTTP error code, if such is available. For example, if this code is 404, the scan has encountered too many NOT_FOUND responses.
func (o ScanRunErrorTraceResponsePtrOutput) MostCommonHttpErrorCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScanRunErrorTraceResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MostCommonHttpErrorCode
	}).(pulumi.IntPtrOutput)
}

// If the scan encounters SCAN_CONFIG_ISSUE error, this field has the error message encountered during scan configuration validation that is performed before each scan run.
func (o ScanRunErrorTraceResponsePtrOutput) ScanConfigError() ScanConfigErrorResponsePtrOutput {
	return o.ApplyT(func(v *ScanRunErrorTraceResponse) *ScanConfigErrorResponse {
		if v == nil {
			return nil
		}
		return &v.ScanConfigError
	}).(ScanConfigErrorResponsePtrOutput)
}

// A ScanRun is a output-only resource representing an actual run of the scan. Next id: 12
type ScanRunResponse struct {
	// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
	EndTime string `pulumi:"endTime"`
	// If result_state is an ERROR, this field provides the primary reason for scan's termination and more details, if such are available.
	ErrorTrace ScanRunErrorTraceResponse `pulumi:"errorTrace"`
	// The execution state of the ScanRun.
	ExecutionState string `pulumi:"executionState"`
	// Whether the scan run has found any vulnerabilities.
	HasVulnerabilities bool `pulumi:"hasVulnerabilities"`
	// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
	Name string `pulumi:"name"`
	// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
	ProgressPercent int `pulumi:"progressPercent"`
	// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
	ResultState string `pulumi:"resultState"`
	// The time at which the ScanRun started.
	StartTime string `pulumi:"startTime"`
	// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
	UrlsCrawledCount string `pulumi:"urlsCrawledCount"`
	// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
	UrlsTestedCount string `pulumi:"urlsTestedCount"`
	// A list of warnings, if such are encountered during this scan run.
	WarningTraces []ScanRunWarningTraceResponse `pulumi:"warningTraces"`
}

// ScanRunResponseInput is an input type that accepts ScanRunResponseArgs and ScanRunResponseOutput values.
// You can construct a concrete instance of `ScanRunResponseInput` via:
//
//          ScanRunResponseArgs{...}
type ScanRunResponseInput interface {
	pulumi.Input

	ToScanRunResponseOutput() ScanRunResponseOutput
	ToScanRunResponseOutputWithContext(context.Context) ScanRunResponseOutput
}

// A ScanRun is a output-only resource representing an actual run of the scan. Next id: 12
type ScanRunResponseArgs struct {
	// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// If result_state is an ERROR, this field provides the primary reason for scan's termination and more details, if such are available.
	ErrorTrace ScanRunErrorTraceResponseInput `pulumi:"errorTrace"`
	// The execution state of the ScanRun.
	ExecutionState pulumi.StringInput `pulumi:"executionState"`
	// Whether the scan run has found any vulnerabilities.
	HasVulnerabilities pulumi.BoolInput `pulumi:"hasVulnerabilities"`
	// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
	Name pulumi.StringInput `pulumi:"name"`
	// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
	ProgressPercent pulumi.IntInput `pulumi:"progressPercent"`
	// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
	ResultState pulumi.StringInput `pulumi:"resultState"`
	// The time at which the ScanRun started.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
	UrlsCrawledCount pulumi.StringInput `pulumi:"urlsCrawledCount"`
	// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
	UrlsTestedCount pulumi.StringInput `pulumi:"urlsTestedCount"`
	// A list of warnings, if such are encountered during this scan run.
	WarningTraces ScanRunWarningTraceResponseArrayInput `pulumi:"warningTraces"`
}

func (ScanRunResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRunResponse)(nil)).Elem()
}

func (i ScanRunResponseArgs) ToScanRunResponseOutput() ScanRunResponseOutput {
	return i.ToScanRunResponseOutputWithContext(context.Background())
}

func (i ScanRunResponseArgs) ToScanRunResponseOutputWithContext(ctx context.Context) ScanRunResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunResponseOutput)
}

func (i ScanRunResponseArgs) ToScanRunResponsePtrOutput() ScanRunResponsePtrOutput {
	return i.ToScanRunResponsePtrOutputWithContext(context.Background())
}

func (i ScanRunResponseArgs) ToScanRunResponsePtrOutputWithContext(ctx context.Context) ScanRunResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunResponseOutput).ToScanRunResponsePtrOutputWithContext(ctx)
}

// ScanRunResponsePtrInput is an input type that accepts ScanRunResponseArgs, ScanRunResponsePtr and ScanRunResponsePtrOutput values.
// You can construct a concrete instance of `ScanRunResponsePtrInput` via:
//
//          ScanRunResponseArgs{...}
//
//  or:
//
//          nil
type ScanRunResponsePtrInput interface {
	pulumi.Input

	ToScanRunResponsePtrOutput() ScanRunResponsePtrOutput
	ToScanRunResponsePtrOutputWithContext(context.Context) ScanRunResponsePtrOutput
}

type scanRunResponsePtrType ScanRunResponseArgs

func ScanRunResponsePtr(v *ScanRunResponseArgs) ScanRunResponsePtrInput {
	return (*scanRunResponsePtrType)(v)
}

func (*scanRunResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanRunResponse)(nil)).Elem()
}

func (i *scanRunResponsePtrType) ToScanRunResponsePtrOutput() ScanRunResponsePtrOutput {
	return i.ToScanRunResponsePtrOutputWithContext(context.Background())
}

func (i *scanRunResponsePtrType) ToScanRunResponsePtrOutputWithContext(ctx context.Context) ScanRunResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunResponsePtrOutput)
}

// A ScanRun is a output-only resource representing an actual run of the scan. Next id: 12
type ScanRunResponseOutput struct{ *pulumi.OutputState }

func (ScanRunResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRunResponse)(nil)).Elem()
}

func (o ScanRunResponseOutput) ToScanRunResponseOutput() ScanRunResponseOutput {
	return o
}

func (o ScanRunResponseOutput) ToScanRunResponseOutputWithContext(ctx context.Context) ScanRunResponseOutput {
	return o
}

func (o ScanRunResponseOutput) ToScanRunResponsePtrOutput() ScanRunResponsePtrOutput {
	return o.ToScanRunResponsePtrOutputWithContext(context.Background())
}

func (o ScanRunResponseOutput) ToScanRunResponsePtrOutputWithContext(ctx context.Context) ScanRunResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScanRunResponse) *ScanRunResponse {
		return &v
	}).(ScanRunResponsePtrOutput)
}

// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
func (o ScanRunResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// If result_state is an ERROR, this field provides the primary reason for scan's termination and more details, if such are available.
func (o ScanRunResponseOutput) ErrorTrace() ScanRunErrorTraceResponseOutput {
	return o.ApplyT(func(v ScanRunResponse) ScanRunErrorTraceResponse { return v.ErrorTrace }).(ScanRunErrorTraceResponseOutput)
}

// The execution state of the ScanRun.
func (o ScanRunResponseOutput) ExecutionState() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunResponse) string { return v.ExecutionState }).(pulumi.StringOutput)
}

// Whether the scan run has found any vulnerabilities.
func (o ScanRunResponseOutput) HasVulnerabilities() pulumi.BoolOutput {
	return o.ApplyT(func(v ScanRunResponse) bool { return v.HasVulnerabilities }).(pulumi.BoolOutput)
}

// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
func (o ScanRunResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
func (o ScanRunResponseOutput) ProgressPercent() pulumi.IntOutput {
	return o.ApplyT(func(v ScanRunResponse) int { return v.ProgressPercent }).(pulumi.IntOutput)
}

// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
func (o ScanRunResponseOutput) ResultState() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunResponse) string { return v.ResultState }).(pulumi.StringOutput)
}

// The time at which the ScanRun started.
func (o ScanRunResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
func (o ScanRunResponseOutput) UrlsCrawledCount() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunResponse) string { return v.UrlsCrawledCount }).(pulumi.StringOutput)
}

// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
func (o ScanRunResponseOutput) UrlsTestedCount() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunResponse) string { return v.UrlsTestedCount }).(pulumi.StringOutput)
}

// A list of warnings, if such are encountered during this scan run.
func (o ScanRunResponseOutput) WarningTraces() ScanRunWarningTraceResponseArrayOutput {
	return o.ApplyT(func(v ScanRunResponse) []ScanRunWarningTraceResponse { return v.WarningTraces }).(ScanRunWarningTraceResponseArrayOutput)
}

type ScanRunResponsePtrOutput struct{ *pulumi.OutputState }

func (ScanRunResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanRunResponse)(nil)).Elem()
}

func (o ScanRunResponsePtrOutput) ToScanRunResponsePtrOutput() ScanRunResponsePtrOutput {
	return o
}

func (o ScanRunResponsePtrOutput) ToScanRunResponsePtrOutputWithContext(ctx context.Context) ScanRunResponsePtrOutput {
	return o
}

func (o ScanRunResponsePtrOutput) Elem() ScanRunResponseOutput {
	return o.ApplyT(func(v *ScanRunResponse) ScanRunResponse {
		if v != nil {
			return *v
		}
		var ret ScanRunResponse
		return ret
	}).(ScanRunResponseOutput)
}

// The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
func (o ScanRunResponsePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndTime
	}).(pulumi.StringPtrOutput)
}

// If result_state is an ERROR, this field provides the primary reason for scan's termination and more details, if such are available.
func (o ScanRunResponsePtrOutput) ErrorTrace() ScanRunErrorTraceResponsePtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *ScanRunErrorTraceResponse {
		if v == nil {
			return nil
		}
		return &v.ErrorTrace
	}).(ScanRunErrorTraceResponsePtrOutput)
}

// The execution state of the ScanRun.
func (o ScanRunResponsePtrOutput) ExecutionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExecutionState
	}).(pulumi.StringPtrOutput)
}

// Whether the scan run has found any vulnerabilities.
func (o ScanRunResponsePtrOutput) HasVulnerabilities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.HasVulnerabilities
	}).(pulumi.BoolPtrOutput)
}

// The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
func (o ScanRunResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
func (o ScanRunResponsePtrOutput) ProgressPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ProgressPercent
	}).(pulumi.IntPtrOutput)
}

// The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
func (o ScanRunResponsePtrOutput) ResultState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResultState
	}).(pulumi.StringPtrOutput)
}

// The time at which the ScanRun started.
func (o ScanRunResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
func (o ScanRunResponsePtrOutput) UrlsCrawledCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UrlsCrawledCount
	}).(pulumi.StringPtrOutput)
}

// The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
func (o ScanRunResponsePtrOutput) UrlsTestedCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScanRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UrlsTestedCount
	}).(pulumi.StringPtrOutput)
}

// A list of warnings, if such are encountered during this scan run.
func (o ScanRunResponsePtrOutput) WarningTraces() ScanRunWarningTraceResponseArrayOutput {
	return o.ApplyT(func(v *ScanRunResponse) []ScanRunWarningTraceResponse {
		if v == nil {
			return nil
		}
		return v.WarningTraces
	}).(ScanRunWarningTraceResponseArrayOutput)
}

// Output only. Defines a warning trace message for ScanRun. Warning traces provide customers with useful information that helps make the scanning process more effective.
type ScanRunWarningTrace struct {
	// Indicates the warning code.
	Code *ScanRunWarningTraceCode `pulumi:"code"`
}

// ScanRunWarningTraceInput is an input type that accepts ScanRunWarningTraceArgs and ScanRunWarningTraceOutput values.
// You can construct a concrete instance of `ScanRunWarningTraceInput` via:
//
//          ScanRunWarningTraceArgs{...}
type ScanRunWarningTraceInput interface {
	pulumi.Input

	ToScanRunWarningTraceOutput() ScanRunWarningTraceOutput
	ToScanRunWarningTraceOutputWithContext(context.Context) ScanRunWarningTraceOutput
}

// Output only. Defines a warning trace message for ScanRun. Warning traces provide customers with useful information that helps make the scanning process more effective.
type ScanRunWarningTraceArgs struct {
	// Indicates the warning code.
	Code ScanRunWarningTraceCodePtrInput `pulumi:"code"`
}

func (ScanRunWarningTraceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRunWarningTrace)(nil)).Elem()
}

func (i ScanRunWarningTraceArgs) ToScanRunWarningTraceOutput() ScanRunWarningTraceOutput {
	return i.ToScanRunWarningTraceOutputWithContext(context.Background())
}

func (i ScanRunWarningTraceArgs) ToScanRunWarningTraceOutputWithContext(ctx context.Context) ScanRunWarningTraceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunWarningTraceOutput)
}

// ScanRunWarningTraceArrayInput is an input type that accepts ScanRunWarningTraceArray and ScanRunWarningTraceArrayOutput values.
// You can construct a concrete instance of `ScanRunWarningTraceArrayInput` via:
//
//          ScanRunWarningTraceArray{ ScanRunWarningTraceArgs{...} }
type ScanRunWarningTraceArrayInput interface {
	pulumi.Input

	ToScanRunWarningTraceArrayOutput() ScanRunWarningTraceArrayOutput
	ToScanRunWarningTraceArrayOutputWithContext(context.Context) ScanRunWarningTraceArrayOutput
}

type ScanRunWarningTraceArray []ScanRunWarningTraceInput

func (ScanRunWarningTraceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScanRunWarningTrace)(nil)).Elem()
}

func (i ScanRunWarningTraceArray) ToScanRunWarningTraceArrayOutput() ScanRunWarningTraceArrayOutput {
	return i.ToScanRunWarningTraceArrayOutputWithContext(context.Background())
}

func (i ScanRunWarningTraceArray) ToScanRunWarningTraceArrayOutputWithContext(ctx context.Context) ScanRunWarningTraceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunWarningTraceArrayOutput)
}

// Output only. Defines a warning trace message for ScanRun. Warning traces provide customers with useful information that helps make the scanning process more effective.
type ScanRunWarningTraceOutput struct{ *pulumi.OutputState }

func (ScanRunWarningTraceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRunWarningTrace)(nil)).Elem()
}

func (o ScanRunWarningTraceOutput) ToScanRunWarningTraceOutput() ScanRunWarningTraceOutput {
	return o
}

func (o ScanRunWarningTraceOutput) ToScanRunWarningTraceOutputWithContext(ctx context.Context) ScanRunWarningTraceOutput {
	return o
}

// Indicates the warning code.
func (o ScanRunWarningTraceOutput) Code() ScanRunWarningTraceCodePtrOutput {
	return o.ApplyT(func(v ScanRunWarningTrace) *ScanRunWarningTraceCode { return v.Code }).(ScanRunWarningTraceCodePtrOutput)
}

type ScanRunWarningTraceArrayOutput struct{ *pulumi.OutputState }

func (ScanRunWarningTraceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScanRunWarningTrace)(nil)).Elem()
}

func (o ScanRunWarningTraceArrayOutput) ToScanRunWarningTraceArrayOutput() ScanRunWarningTraceArrayOutput {
	return o
}

func (o ScanRunWarningTraceArrayOutput) ToScanRunWarningTraceArrayOutputWithContext(ctx context.Context) ScanRunWarningTraceArrayOutput {
	return o
}

func (o ScanRunWarningTraceArrayOutput) Index(i pulumi.IntInput) ScanRunWarningTraceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScanRunWarningTrace {
		return vs[0].([]ScanRunWarningTrace)[vs[1].(int)]
	}).(ScanRunWarningTraceOutput)
}

// Output only. Defines a warning trace message for ScanRun. Warning traces provide customers with useful information that helps make the scanning process more effective.
type ScanRunWarningTraceResponse struct {
	// Indicates the warning code.
	Code string `pulumi:"code"`
}

// ScanRunWarningTraceResponseInput is an input type that accepts ScanRunWarningTraceResponseArgs and ScanRunWarningTraceResponseOutput values.
// You can construct a concrete instance of `ScanRunWarningTraceResponseInput` via:
//
//          ScanRunWarningTraceResponseArgs{...}
type ScanRunWarningTraceResponseInput interface {
	pulumi.Input

	ToScanRunWarningTraceResponseOutput() ScanRunWarningTraceResponseOutput
	ToScanRunWarningTraceResponseOutputWithContext(context.Context) ScanRunWarningTraceResponseOutput
}

// Output only. Defines a warning trace message for ScanRun. Warning traces provide customers with useful information that helps make the scanning process more effective.
type ScanRunWarningTraceResponseArgs struct {
	// Indicates the warning code.
	Code pulumi.StringInput `pulumi:"code"`
}

func (ScanRunWarningTraceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRunWarningTraceResponse)(nil)).Elem()
}

func (i ScanRunWarningTraceResponseArgs) ToScanRunWarningTraceResponseOutput() ScanRunWarningTraceResponseOutput {
	return i.ToScanRunWarningTraceResponseOutputWithContext(context.Background())
}

func (i ScanRunWarningTraceResponseArgs) ToScanRunWarningTraceResponseOutputWithContext(ctx context.Context) ScanRunWarningTraceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunWarningTraceResponseOutput)
}

// ScanRunWarningTraceResponseArrayInput is an input type that accepts ScanRunWarningTraceResponseArray and ScanRunWarningTraceResponseArrayOutput values.
// You can construct a concrete instance of `ScanRunWarningTraceResponseArrayInput` via:
//
//          ScanRunWarningTraceResponseArray{ ScanRunWarningTraceResponseArgs{...} }
type ScanRunWarningTraceResponseArrayInput interface {
	pulumi.Input

	ToScanRunWarningTraceResponseArrayOutput() ScanRunWarningTraceResponseArrayOutput
	ToScanRunWarningTraceResponseArrayOutputWithContext(context.Context) ScanRunWarningTraceResponseArrayOutput
}

type ScanRunWarningTraceResponseArray []ScanRunWarningTraceResponseInput

func (ScanRunWarningTraceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScanRunWarningTraceResponse)(nil)).Elem()
}

func (i ScanRunWarningTraceResponseArray) ToScanRunWarningTraceResponseArrayOutput() ScanRunWarningTraceResponseArrayOutput {
	return i.ToScanRunWarningTraceResponseArrayOutputWithContext(context.Background())
}

func (i ScanRunWarningTraceResponseArray) ToScanRunWarningTraceResponseArrayOutputWithContext(ctx context.Context) ScanRunWarningTraceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScanRunWarningTraceResponseArrayOutput)
}

// Output only. Defines a warning trace message for ScanRun. Warning traces provide customers with useful information that helps make the scanning process more effective.
type ScanRunWarningTraceResponseOutput struct{ *pulumi.OutputState }

func (ScanRunWarningTraceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanRunWarningTraceResponse)(nil)).Elem()
}

func (o ScanRunWarningTraceResponseOutput) ToScanRunWarningTraceResponseOutput() ScanRunWarningTraceResponseOutput {
	return o
}

func (o ScanRunWarningTraceResponseOutput) ToScanRunWarningTraceResponseOutputWithContext(ctx context.Context) ScanRunWarningTraceResponseOutput {
	return o
}

// Indicates the warning code.
func (o ScanRunWarningTraceResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ScanRunWarningTraceResponse) string { return v.Code }).(pulumi.StringOutput)
}

type ScanRunWarningTraceResponseArrayOutput struct{ *pulumi.OutputState }

func (ScanRunWarningTraceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScanRunWarningTraceResponse)(nil)).Elem()
}

func (o ScanRunWarningTraceResponseArrayOutput) ToScanRunWarningTraceResponseArrayOutput() ScanRunWarningTraceResponseArrayOutput {
	return o
}

func (o ScanRunWarningTraceResponseArrayOutput) ToScanRunWarningTraceResponseArrayOutputWithContext(ctx context.Context) ScanRunWarningTraceResponseArrayOutput {
	return o
}

func (o ScanRunWarningTraceResponseArrayOutput) Index(i pulumi.IntInput) ScanRunWarningTraceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScanRunWarningTraceResponse {
		return vs[0].([]ScanRunWarningTraceResponse)[vs[1].(int)]
	}).(ScanRunWarningTraceResponseOutput)
}

// Scan schedule configuration.
type Schedule struct {
	// The duration of time between executions in days.
	IntervalDurationDays int `pulumi:"intervalDurationDays"`
	// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
	ScheduleTime *string `pulumi:"scheduleTime"`
}

// ScheduleInput is an input type that accepts ScheduleArgs and ScheduleOutput values.
// You can construct a concrete instance of `ScheduleInput` via:
//
//          ScheduleArgs{...}
type ScheduleInput interface {
	pulumi.Input

	ToScheduleOutput() ScheduleOutput
	ToScheduleOutputWithContext(context.Context) ScheduleOutput
}

// Scan schedule configuration.
type ScheduleArgs struct {
	// The duration of time between executions in days.
	IntervalDurationDays pulumi.IntInput `pulumi:"intervalDurationDays"`
	// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
	ScheduleTime pulumi.StringPtrInput `pulumi:"scheduleTime"`
}

func (ScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Schedule)(nil)).Elem()
}

func (i ScheduleArgs) ToScheduleOutput() ScheduleOutput {
	return i.ToScheduleOutputWithContext(context.Background())
}

func (i ScheduleArgs) ToScheduleOutputWithContext(ctx context.Context) ScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleOutput)
}

func (i ScheduleArgs) ToSchedulePtrOutput() SchedulePtrOutput {
	return i.ToSchedulePtrOutputWithContext(context.Background())
}

func (i ScheduleArgs) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleOutput).ToSchedulePtrOutputWithContext(ctx)
}

// SchedulePtrInput is an input type that accepts ScheduleArgs, SchedulePtr and SchedulePtrOutput values.
// You can construct a concrete instance of `SchedulePtrInput` via:
//
//          ScheduleArgs{...}
//
//  or:
//
//          nil
type SchedulePtrInput interface {
	pulumi.Input

	ToSchedulePtrOutput() SchedulePtrOutput
	ToSchedulePtrOutputWithContext(context.Context) SchedulePtrOutput
}

type schedulePtrType ScheduleArgs

func SchedulePtr(v *ScheduleArgs) SchedulePtrInput {
	return (*schedulePtrType)(v)
}

func (*schedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Schedule)(nil)).Elem()
}

func (i *schedulePtrType) ToSchedulePtrOutput() SchedulePtrOutput {
	return i.ToSchedulePtrOutputWithContext(context.Background())
}

func (i *schedulePtrType) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulePtrOutput)
}

// Scan schedule configuration.
type ScheduleOutput struct{ *pulumi.OutputState }

func (ScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Schedule)(nil)).Elem()
}

func (o ScheduleOutput) ToScheduleOutput() ScheduleOutput {
	return o
}

func (o ScheduleOutput) ToScheduleOutputWithContext(ctx context.Context) ScheduleOutput {
	return o
}

func (o ScheduleOutput) ToSchedulePtrOutput() SchedulePtrOutput {
	return o.ToSchedulePtrOutputWithContext(context.Background())
}

func (o ScheduleOutput) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Schedule) *Schedule {
		return &v
	}).(SchedulePtrOutput)
}

// The duration of time between executions in days.
func (o ScheduleOutput) IntervalDurationDays() pulumi.IntOutput {
	return o.ApplyT(func(v Schedule) int { return v.IntervalDurationDays }).(pulumi.IntOutput)
}

// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
func (o ScheduleOutput) ScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Schedule) *string { return v.ScheduleTime }).(pulumi.StringPtrOutput)
}

type SchedulePtrOutput struct{ *pulumi.OutputState }

func (SchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Schedule)(nil)).Elem()
}

func (o SchedulePtrOutput) ToSchedulePtrOutput() SchedulePtrOutput {
	return o
}

func (o SchedulePtrOutput) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return o
}

func (o SchedulePtrOutput) Elem() ScheduleOutput {
	return o.ApplyT(func(v *Schedule) Schedule {
		if v != nil {
			return *v
		}
		var ret Schedule
		return ret
	}).(ScheduleOutput)
}

// The duration of time between executions in days.
func (o SchedulePtrOutput) IntervalDurationDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Schedule) *int {
		if v == nil {
			return nil
		}
		return &v.IntervalDurationDays
	}).(pulumi.IntPtrOutput)
}

// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
func (o SchedulePtrOutput) ScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Schedule) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleTime
	}).(pulumi.StringPtrOutput)
}

// Scan schedule configuration.
type ScheduleResponse struct {
	// The duration of time between executions in days.
	IntervalDurationDays int `pulumi:"intervalDurationDays"`
	// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
	ScheduleTime string `pulumi:"scheduleTime"`
}

// ScheduleResponseInput is an input type that accepts ScheduleResponseArgs and ScheduleResponseOutput values.
// You can construct a concrete instance of `ScheduleResponseInput` via:
//
//          ScheduleResponseArgs{...}
type ScheduleResponseInput interface {
	pulumi.Input

	ToScheduleResponseOutput() ScheduleResponseOutput
	ToScheduleResponseOutputWithContext(context.Context) ScheduleResponseOutput
}

// Scan schedule configuration.
type ScheduleResponseArgs struct {
	// The duration of time between executions in days.
	IntervalDurationDays pulumi.IntInput `pulumi:"intervalDurationDays"`
	// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
	ScheduleTime pulumi.StringInput `pulumi:"scheduleTime"`
}

func (ScheduleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleResponse)(nil)).Elem()
}

func (i ScheduleResponseArgs) ToScheduleResponseOutput() ScheduleResponseOutput {
	return i.ToScheduleResponseOutputWithContext(context.Background())
}

func (i ScheduleResponseArgs) ToScheduleResponseOutputWithContext(ctx context.Context) ScheduleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleResponseOutput)
}

func (i ScheduleResponseArgs) ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput {
	return i.ToScheduleResponsePtrOutputWithContext(context.Background())
}

func (i ScheduleResponseArgs) ToScheduleResponsePtrOutputWithContext(ctx context.Context) ScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleResponseOutput).ToScheduleResponsePtrOutputWithContext(ctx)
}

// ScheduleResponsePtrInput is an input type that accepts ScheduleResponseArgs, ScheduleResponsePtr and ScheduleResponsePtrOutput values.
// You can construct a concrete instance of `ScheduleResponsePtrInput` via:
//
//          ScheduleResponseArgs{...}
//
//  or:
//
//          nil
type ScheduleResponsePtrInput interface {
	pulumi.Input

	ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput
	ToScheduleResponsePtrOutputWithContext(context.Context) ScheduleResponsePtrOutput
}

type scheduleResponsePtrType ScheduleResponseArgs

func ScheduleResponsePtr(v *ScheduleResponseArgs) ScheduleResponsePtrInput {
	return (*scheduleResponsePtrType)(v)
}

func (*scheduleResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleResponse)(nil)).Elem()
}

func (i *scheduleResponsePtrType) ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput {
	return i.ToScheduleResponsePtrOutputWithContext(context.Background())
}

func (i *scheduleResponsePtrType) ToScheduleResponsePtrOutputWithContext(ctx context.Context) ScheduleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleResponsePtrOutput)
}

// Scan schedule configuration.
type ScheduleResponseOutput struct{ *pulumi.OutputState }

func (ScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleResponse)(nil)).Elem()
}

func (o ScheduleResponseOutput) ToScheduleResponseOutput() ScheduleResponseOutput {
	return o
}

func (o ScheduleResponseOutput) ToScheduleResponseOutputWithContext(ctx context.Context) ScheduleResponseOutput {
	return o
}

func (o ScheduleResponseOutput) ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput {
	return o.ToScheduleResponsePtrOutputWithContext(context.Background())
}

func (o ScheduleResponseOutput) ToScheduleResponsePtrOutputWithContext(ctx context.Context) ScheduleResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleResponse) *ScheduleResponse {
		return &v
	}).(ScheduleResponsePtrOutput)
}

// The duration of time between executions in days.
func (o ScheduleResponseOutput) IntervalDurationDays() pulumi.IntOutput {
	return o.ApplyT(func(v ScheduleResponse) int { return v.IntervalDurationDays }).(pulumi.IntOutput)
}

// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
func (o ScheduleResponseOutput) ScheduleTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleResponse) string { return v.ScheduleTime }).(pulumi.StringOutput)
}

type ScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (ScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleResponse)(nil)).Elem()
}

func (o ScheduleResponsePtrOutput) ToScheduleResponsePtrOutput() ScheduleResponsePtrOutput {
	return o
}

func (o ScheduleResponsePtrOutput) ToScheduleResponsePtrOutputWithContext(ctx context.Context) ScheduleResponsePtrOutput {
	return o
}

func (o ScheduleResponsePtrOutput) Elem() ScheduleResponseOutput {
	return o.ApplyT(func(v *ScheduleResponse) ScheduleResponse {
		if v != nil {
			return *v
		}
		var ret ScheduleResponse
		return ret
	}).(ScheduleResponseOutput)
}

// The duration of time between executions in days.
func (o ScheduleResponsePtrOutput) IntervalDurationDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *int {
		if v == nil {
			return nil
		}
		return &v.IntervalDurationDays
	}).(pulumi.IntPtrOutput)
}

// A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
func (o ScheduleResponsePtrOutput) ScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleTime
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthenticationOutput{})
	pulumi.RegisterOutputType(AuthenticationPtrOutput{})
	pulumi.RegisterOutputType(AuthenticationResponseOutput{})
	pulumi.RegisterOutputType(AuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomAccountOutput{})
	pulumi.RegisterOutputType(CustomAccountPtrOutput{})
	pulumi.RegisterOutputType(CustomAccountResponseOutput{})
	pulumi.RegisterOutputType(CustomAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(GoogleAccountOutput{})
	pulumi.RegisterOutputType(GoogleAccountPtrOutput{})
	pulumi.RegisterOutputType(GoogleAccountResponseOutput{})
	pulumi.RegisterOutputType(GoogleAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(IapCredentialOutput{})
	pulumi.RegisterOutputType(IapCredentialPtrOutput{})
	pulumi.RegisterOutputType(IapCredentialResponseOutput{})
	pulumi.RegisterOutputType(IapCredentialResponsePtrOutput{})
	pulumi.RegisterOutputType(IapTestServiceAccountInfoOutput{})
	pulumi.RegisterOutputType(IapTestServiceAccountInfoPtrOutput{})
	pulumi.RegisterOutputType(IapTestServiceAccountInfoResponseOutput{})
	pulumi.RegisterOutputType(IapTestServiceAccountInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ScanConfigErrorOutput{})
	pulumi.RegisterOutputType(ScanConfigErrorPtrOutput{})
	pulumi.RegisterOutputType(ScanConfigErrorResponseOutput{})
	pulumi.RegisterOutputType(ScanConfigErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(ScanRunOutput{})
	pulumi.RegisterOutputType(ScanRunPtrOutput{})
	pulumi.RegisterOutputType(ScanRunErrorTraceOutput{})
	pulumi.RegisterOutputType(ScanRunErrorTracePtrOutput{})
	pulumi.RegisterOutputType(ScanRunErrorTraceResponseOutput{})
	pulumi.RegisterOutputType(ScanRunErrorTraceResponsePtrOutput{})
	pulumi.RegisterOutputType(ScanRunResponseOutput{})
	pulumi.RegisterOutputType(ScanRunResponsePtrOutput{})
	pulumi.RegisterOutputType(ScanRunWarningTraceOutput{})
	pulumi.RegisterOutputType(ScanRunWarningTraceArrayOutput{})
	pulumi.RegisterOutputType(ScanRunWarningTraceResponseOutput{})
	pulumi.RegisterOutputType(ScanRunWarningTraceResponseArrayOutput{})
	pulumi.RegisterOutputType(ScheduleOutput{})
	pulumi.RegisterOutputType(SchedulePtrOutput{})
	pulumi.RegisterOutputType(ScheduleResponseOutput{})
	pulumi.RegisterOutputType(ScheduleResponsePtrOutput{})
}
