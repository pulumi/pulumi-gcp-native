// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Controls export of scan configurations and results to Security Command Center.
type ScanConfigExportToSecurityCommandCenter string

const (
	// Use default, which is ENABLED.
	ScanConfigExportToSecurityCommandCenterExportToSecurityCommandCenterUnspecified = ScanConfigExportToSecurityCommandCenter("EXPORT_TO_SECURITY_COMMAND_CENTER_UNSPECIFIED")
	// Export results of this scan to Security Command Center.
	ScanConfigExportToSecurityCommandCenterEnabled = ScanConfigExportToSecurityCommandCenter("ENABLED")
	// Do not export results of this scan to Security Command Center.
	ScanConfigExportToSecurityCommandCenterDisabled = ScanConfigExportToSecurityCommandCenter("DISABLED")
)

func (ScanConfigExportToSecurityCommandCenter) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanConfigExportToSecurityCommandCenter)(nil)).Elem()
}

func (e ScanConfigExportToSecurityCommandCenter) ToScanConfigExportToSecurityCommandCenterOutput() ScanConfigExportToSecurityCommandCenterOutput {
	return pulumi.ToOutput(e).(ScanConfigExportToSecurityCommandCenterOutput)
}

func (e ScanConfigExportToSecurityCommandCenter) ToScanConfigExportToSecurityCommandCenterOutputWithContext(ctx context.Context) ScanConfigExportToSecurityCommandCenterOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScanConfigExportToSecurityCommandCenterOutput)
}

func (e ScanConfigExportToSecurityCommandCenter) ToScanConfigExportToSecurityCommandCenterPtrOutput() ScanConfigExportToSecurityCommandCenterPtrOutput {
	return e.ToScanConfigExportToSecurityCommandCenterPtrOutputWithContext(context.Background())
}

func (e ScanConfigExportToSecurityCommandCenter) ToScanConfigExportToSecurityCommandCenterPtrOutputWithContext(ctx context.Context) ScanConfigExportToSecurityCommandCenterPtrOutput {
	return ScanConfigExportToSecurityCommandCenter(e).ToScanConfigExportToSecurityCommandCenterOutputWithContext(ctx).ToScanConfigExportToSecurityCommandCenterPtrOutputWithContext(ctx)
}

func (e ScanConfigExportToSecurityCommandCenter) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScanConfigExportToSecurityCommandCenter) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScanConfigExportToSecurityCommandCenter) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScanConfigExportToSecurityCommandCenter) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScanConfigExportToSecurityCommandCenterOutput struct{ *pulumi.OutputState }

func (ScanConfigExportToSecurityCommandCenterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanConfigExportToSecurityCommandCenter)(nil)).Elem()
}

func (o ScanConfigExportToSecurityCommandCenterOutput) ToScanConfigExportToSecurityCommandCenterOutput() ScanConfigExportToSecurityCommandCenterOutput {
	return o
}

func (o ScanConfigExportToSecurityCommandCenterOutput) ToScanConfigExportToSecurityCommandCenterOutputWithContext(ctx context.Context) ScanConfigExportToSecurityCommandCenterOutput {
	return o
}

func (o ScanConfigExportToSecurityCommandCenterOutput) ToScanConfigExportToSecurityCommandCenterPtrOutput() ScanConfigExportToSecurityCommandCenterPtrOutput {
	return o.ToScanConfigExportToSecurityCommandCenterPtrOutputWithContext(context.Background())
}

func (o ScanConfigExportToSecurityCommandCenterOutput) ToScanConfigExportToSecurityCommandCenterPtrOutputWithContext(ctx context.Context) ScanConfigExportToSecurityCommandCenterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScanConfigExportToSecurityCommandCenter) *ScanConfigExportToSecurityCommandCenter {
		return &v
	}).(ScanConfigExportToSecurityCommandCenterPtrOutput)
}

func (o ScanConfigExportToSecurityCommandCenterOutput) ToOutput(ctx context.Context) pulumix.Output[ScanConfigExportToSecurityCommandCenter] {
	return pulumix.Output[ScanConfigExportToSecurityCommandCenter]{
		OutputState: o.OutputState,
	}
}

func (o ScanConfigExportToSecurityCommandCenterOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScanConfigExportToSecurityCommandCenterOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScanConfigExportToSecurityCommandCenter) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScanConfigExportToSecurityCommandCenterOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScanConfigExportToSecurityCommandCenterOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScanConfigExportToSecurityCommandCenter) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScanConfigExportToSecurityCommandCenterPtrOutput struct{ *pulumi.OutputState }

func (ScanConfigExportToSecurityCommandCenterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanConfigExportToSecurityCommandCenter)(nil)).Elem()
}

func (o ScanConfigExportToSecurityCommandCenterPtrOutput) ToScanConfigExportToSecurityCommandCenterPtrOutput() ScanConfigExportToSecurityCommandCenterPtrOutput {
	return o
}

func (o ScanConfigExportToSecurityCommandCenterPtrOutput) ToScanConfigExportToSecurityCommandCenterPtrOutputWithContext(ctx context.Context) ScanConfigExportToSecurityCommandCenterPtrOutput {
	return o
}

func (o ScanConfigExportToSecurityCommandCenterPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ScanConfigExportToSecurityCommandCenter] {
	return pulumix.Output[*ScanConfigExportToSecurityCommandCenter]{
		OutputState: o.OutputState,
	}
}

func (o ScanConfigExportToSecurityCommandCenterPtrOutput) Elem() ScanConfigExportToSecurityCommandCenterOutput {
	return o.ApplyT(func(v *ScanConfigExportToSecurityCommandCenter) ScanConfigExportToSecurityCommandCenter {
		if v != nil {
			return *v
		}
		var ret ScanConfigExportToSecurityCommandCenter
		return ret
	}).(ScanConfigExportToSecurityCommandCenterOutput)
}

func (o ScanConfigExportToSecurityCommandCenterPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScanConfigExportToSecurityCommandCenterPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScanConfigExportToSecurityCommandCenter) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScanConfigExportToSecurityCommandCenterInput is an input type that accepts ScanConfigExportToSecurityCommandCenterArgs and ScanConfigExportToSecurityCommandCenterOutput values.
// You can construct a concrete instance of `ScanConfigExportToSecurityCommandCenterInput` via:
//
//	ScanConfigExportToSecurityCommandCenterArgs{...}
type ScanConfigExportToSecurityCommandCenterInput interface {
	pulumi.Input

	ToScanConfigExportToSecurityCommandCenterOutput() ScanConfigExportToSecurityCommandCenterOutput
	ToScanConfigExportToSecurityCommandCenterOutputWithContext(context.Context) ScanConfigExportToSecurityCommandCenterOutput
}

var scanConfigExportToSecurityCommandCenterPtrType = reflect.TypeOf((**ScanConfigExportToSecurityCommandCenter)(nil)).Elem()

type ScanConfigExportToSecurityCommandCenterPtrInput interface {
	pulumi.Input

	ToScanConfigExportToSecurityCommandCenterPtrOutput() ScanConfigExportToSecurityCommandCenterPtrOutput
	ToScanConfigExportToSecurityCommandCenterPtrOutputWithContext(context.Context) ScanConfigExportToSecurityCommandCenterPtrOutput
}

type scanConfigExportToSecurityCommandCenterPtr string

func ScanConfigExportToSecurityCommandCenterPtr(v string) ScanConfigExportToSecurityCommandCenterPtrInput {
	return (*scanConfigExportToSecurityCommandCenterPtr)(&v)
}

func (*scanConfigExportToSecurityCommandCenterPtr) ElementType() reflect.Type {
	return scanConfigExportToSecurityCommandCenterPtrType
}

func (in *scanConfigExportToSecurityCommandCenterPtr) ToScanConfigExportToSecurityCommandCenterPtrOutput() ScanConfigExportToSecurityCommandCenterPtrOutput {
	return pulumi.ToOutput(in).(ScanConfigExportToSecurityCommandCenterPtrOutput)
}

func (in *scanConfigExportToSecurityCommandCenterPtr) ToScanConfigExportToSecurityCommandCenterPtrOutputWithContext(ctx context.Context) ScanConfigExportToSecurityCommandCenterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScanConfigExportToSecurityCommandCenterPtrOutput)
}

func (in *scanConfigExportToSecurityCommandCenterPtr) ToOutput(ctx context.Context) pulumix.Output[*ScanConfigExportToSecurityCommandCenter] {
	return pulumix.Output[*ScanConfigExportToSecurityCommandCenter]{
		OutputState: in.ToScanConfigExportToSecurityCommandCenterPtrOutputWithContext(ctx).OutputState,
	}
}

// The risk level selected for the scan
type ScanConfigRiskLevel string

const (
	// Use default, which is NORMAL.
	ScanConfigRiskLevelRiskLevelUnspecified = ScanConfigRiskLevel("RISK_LEVEL_UNSPECIFIED")
	// Normal scanning (Recommended)
	ScanConfigRiskLevelNormal = ScanConfigRiskLevel("NORMAL")
	// Lower impact scanning
	ScanConfigRiskLevelLow = ScanConfigRiskLevel("LOW")
)

func (ScanConfigRiskLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanConfigRiskLevel)(nil)).Elem()
}

func (e ScanConfigRiskLevel) ToScanConfigRiskLevelOutput() ScanConfigRiskLevelOutput {
	return pulumi.ToOutput(e).(ScanConfigRiskLevelOutput)
}

func (e ScanConfigRiskLevel) ToScanConfigRiskLevelOutputWithContext(ctx context.Context) ScanConfigRiskLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScanConfigRiskLevelOutput)
}

func (e ScanConfigRiskLevel) ToScanConfigRiskLevelPtrOutput() ScanConfigRiskLevelPtrOutput {
	return e.ToScanConfigRiskLevelPtrOutputWithContext(context.Background())
}

func (e ScanConfigRiskLevel) ToScanConfigRiskLevelPtrOutputWithContext(ctx context.Context) ScanConfigRiskLevelPtrOutput {
	return ScanConfigRiskLevel(e).ToScanConfigRiskLevelOutputWithContext(ctx).ToScanConfigRiskLevelPtrOutputWithContext(ctx)
}

func (e ScanConfigRiskLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScanConfigRiskLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScanConfigRiskLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScanConfigRiskLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScanConfigRiskLevelOutput struct{ *pulumi.OutputState }

func (ScanConfigRiskLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanConfigRiskLevel)(nil)).Elem()
}

func (o ScanConfigRiskLevelOutput) ToScanConfigRiskLevelOutput() ScanConfigRiskLevelOutput {
	return o
}

func (o ScanConfigRiskLevelOutput) ToScanConfigRiskLevelOutputWithContext(ctx context.Context) ScanConfigRiskLevelOutput {
	return o
}

func (o ScanConfigRiskLevelOutput) ToScanConfigRiskLevelPtrOutput() ScanConfigRiskLevelPtrOutput {
	return o.ToScanConfigRiskLevelPtrOutputWithContext(context.Background())
}

func (o ScanConfigRiskLevelOutput) ToScanConfigRiskLevelPtrOutputWithContext(ctx context.Context) ScanConfigRiskLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScanConfigRiskLevel) *ScanConfigRiskLevel {
		return &v
	}).(ScanConfigRiskLevelPtrOutput)
}

func (o ScanConfigRiskLevelOutput) ToOutput(ctx context.Context) pulumix.Output[ScanConfigRiskLevel] {
	return pulumix.Output[ScanConfigRiskLevel]{
		OutputState: o.OutputState,
	}
}

func (o ScanConfigRiskLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScanConfigRiskLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScanConfigRiskLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScanConfigRiskLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScanConfigRiskLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScanConfigRiskLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScanConfigRiskLevelPtrOutput struct{ *pulumi.OutputState }

func (ScanConfigRiskLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanConfigRiskLevel)(nil)).Elem()
}

func (o ScanConfigRiskLevelPtrOutput) ToScanConfigRiskLevelPtrOutput() ScanConfigRiskLevelPtrOutput {
	return o
}

func (o ScanConfigRiskLevelPtrOutput) ToScanConfigRiskLevelPtrOutputWithContext(ctx context.Context) ScanConfigRiskLevelPtrOutput {
	return o
}

func (o ScanConfigRiskLevelPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ScanConfigRiskLevel] {
	return pulumix.Output[*ScanConfigRiskLevel]{
		OutputState: o.OutputState,
	}
}

func (o ScanConfigRiskLevelPtrOutput) Elem() ScanConfigRiskLevelOutput {
	return o.ApplyT(func(v *ScanConfigRiskLevel) ScanConfigRiskLevel {
		if v != nil {
			return *v
		}
		var ret ScanConfigRiskLevel
		return ret
	}).(ScanConfigRiskLevelOutput)
}

func (o ScanConfigRiskLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScanConfigRiskLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScanConfigRiskLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScanConfigRiskLevelInput is an input type that accepts ScanConfigRiskLevelArgs and ScanConfigRiskLevelOutput values.
// You can construct a concrete instance of `ScanConfigRiskLevelInput` via:
//
//	ScanConfigRiskLevelArgs{...}
type ScanConfigRiskLevelInput interface {
	pulumi.Input

	ToScanConfigRiskLevelOutput() ScanConfigRiskLevelOutput
	ToScanConfigRiskLevelOutputWithContext(context.Context) ScanConfigRiskLevelOutput
}

var scanConfigRiskLevelPtrType = reflect.TypeOf((**ScanConfigRiskLevel)(nil)).Elem()

type ScanConfigRiskLevelPtrInput interface {
	pulumi.Input

	ToScanConfigRiskLevelPtrOutput() ScanConfigRiskLevelPtrOutput
	ToScanConfigRiskLevelPtrOutputWithContext(context.Context) ScanConfigRiskLevelPtrOutput
}

type scanConfigRiskLevelPtr string

func ScanConfigRiskLevelPtr(v string) ScanConfigRiskLevelPtrInput {
	return (*scanConfigRiskLevelPtr)(&v)
}

func (*scanConfigRiskLevelPtr) ElementType() reflect.Type {
	return scanConfigRiskLevelPtrType
}

func (in *scanConfigRiskLevelPtr) ToScanConfigRiskLevelPtrOutput() ScanConfigRiskLevelPtrOutput {
	return pulumi.ToOutput(in).(ScanConfigRiskLevelPtrOutput)
}

func (in *scanConfigRiskLevelPtr) ToScanConfigRiskLevelPtrOutputWithContext(ctx context.Context) ScanConfigRiskLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScanConfigRiskLevelPtrOutput)
}

func (in *scanConfigRiskLevelPtr) ToOutput(ctx context.Context) pulumix.Output[*ScanConfigRiskLevel] {
	return pulumix.Output[*ScanConfigRiskLevel]{
		OutputState: in.ToScanConfigRiskLevelPtrOutputWithContext(ctx).OutputState,
	}
}

// The user agent used during scanning.
type ScanConfigUserAgent string

const (
	// The user agent is unknown. Service will default to CHROME_LINUX.
	ScanConfigUserAgentUserAgentUnspecified = ScanConfigUserAgent("USER_AGENT_UNSPECIFIED")
	// Chrome on Linux. This is the service default if unspecified.
	ScanConfigUserAgentChromeLinux = ScanConfigUserAgent("CHROME_LINUX")
	// Chrome on Android.
	ScanConfigUserAgentChromeAndroid = ScanConfigUserAgent("CHROME_ANDROID")
	// Safari on IPhone.
	ScanConfigUserAgentSafariIphone = ScanConfigUserAgent("SAFARI_IPHONE")
)

func (ScanConfigUserAgent) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanConfigUserAgent)(nil)).Elem()
}

func (e ScanConfigUserAgent) ToScanConfigUserAgentOutput() ScanConfigUserAgentOutput {
	return pulumi.ToOutput(e).(ScanConfigUserAgentOutput)
}

func (e ScanConfigUserAgent) ToScanConfigUserAgentOutputWithContext(ctx context.Context) ScanConfigUserAgentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScanConfigUserAgentOutput)
}

func (e ScanConfigUserAgent) ToScanConfigUserAgentPtrOutput() ScanConfigUserAgentPtrOutput {
	return e.ToScanConfigUserAgentPtrOutputWithContext(context.Background())
}

func (e ScanConfigUserAgent) ToScanConfigUserAgentPtrOutputWithContext(ctx context.Context) ScanConfigUserAgentPtrOutput {
	return ScanConfigUserAgent(e).ToScanConfigUserAgentOutputWithContext(ctx).ToScanConfigUserAgentPtrOutputWithContext(ctx)
}

func (e ScanConfigUserAgent) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScanConfigUserAgent) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScanConfigUserAgent) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScanConfigUserAgent) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScanConfigUserAgentOutput struct{ *pulumi.OutputState }

func (ScanConfigUserAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScanConfigUserAgent)(nil)).Elem()
}

func (o ScanConfigUserAgentOutput) ToScanConfigUserAgentOutput() ScanConfigUserAgentOutput {
	return o
}

func (o ScanConfigUserAgentOutput) ToScanConfigUserAgentOutputWithContext(ctx context.Context) ScanConfigUserAgentOutput {
	return o
}

func (o ScanConfigUserAgentOutput) ToScanConfigUserAgentPtrOutput() ScanConfigUserAgentPtrOutput {
	return o.ToScanConfigUserAgentPtrOutputWithContext(context.Background())
}

func (o ScanConfigUserAgentOutput) ToScanConfigUserAgentPtrOutputWithContext(ctx context.Context) ScanConfigUserAgentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScanConfigUserAgent) *ScanConfigUserAgent {
		return &v
	}).(ScanConfigUserAgentPtrOutput)
}

func (o ScanConfigUserAgentOutput) ToOutput(ctx context.Context) pulumix.Output[ScanConfigUserAgent] {
	return pulumix.Output[ScanConfigUserAgent]{
		OutputState: o.OutputState,
	}
}

func (o ScanConfigUserAgentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScanConfigUserAgentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScanConfigUserAgent) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScanConfigUserAgentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScanConfigUserAgentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScanConfigUserAgent) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScanConfigUserAgentPtrOutput struct{ *pulumi.OutputState }

func (ScanConfigUserAgentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScanConfigUserAgent)(nil)).Elem()
}

func (o ScanConfigUserAgentPtrOutput) ToScanConfigUserAgentPtrOutput() ScanConfigUserAgentPtrOutput {
	return o
}

func (o ScanConfigUserAgentPtrOutput) ToScanConfigUserAgentPtrOutputWithContext(ctx context.Context) ScanConfigUserAgentPtrOutput {
	return o
}

func (o ScanConfigUserAgentPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ScanConfigUserAgent] {
	return pulumix.Output[*ScanConfigUserAgent]{
		OutputState: o.OutputState,
	}
}

func (o ScanConfigUserAgentPtrOutput) Elem() ScanConfigUserAgentOutput {
	return o.ApplyT(func(v *ScanConfigUserAgent) ScanConfigUserAgent {
		if v != nil {
			return *v
		}
		var ret ScanConfigUserAgent
		return ret
	}).(ScanConfigUserAgentOutput)
}

func (o ScanConfigUserAgentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScanConfigUserAgentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScanConfigUserAgent) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScanConfigUserAgentInput is an input type that accepts ScanConfigUserAgentArgs and ScanConfigUserAgentOutput values.
// You can construct a concrete instance of `ScanConfigUserAgentInput` via:
//
//	ScanConfigUserAgentArgs{...}
type ScanConfigUserAgentInput interface {
	pulumi.Input

	ToScanConfigUserAgentOutput() ScanConfigUserAgentOutput
	ToScanConfigUserAgentOutputWithContext(context.Context) ScanConfigUserAgentOutput
}

var scanConfigUserAgentPtrType = reflect.TypeOf((**ScanConfigUserAgent)(nil)).Elem()

type ScanConfigUserAgentPtrInput interface {
	pulumi.Input

	ToScanConfigUserAgentPtrOutput() ScanConfigUserAgentPtrOutput
	ToScanConfigUserAgentPtrOutputWithContext(context.Context) ScanConfigUserAgentPtrOutput
}

type scanConfigUserAgentPtr string

func ScanConfigUserAgentPtr(v string) ScanConfigUserAgentPtrInput {
	return (*scanConfigUserAgentPtr)(&v)
}

func (*scanConfigUserAgentPtr) ElementType() reflect.Type {
	return scanConfigUserAgentPtrType
}

func (in *scanConfigUserAgentPtr) ToScanConfigUserAgentPtrOutput() ScanConfigUserAgentPtrOutput {
	return pulumi.ToOutput(in).(ScanConfigUserAgentPtrOutput)
}

func (in *scanConfigUserAgentPtr) ToScanConfigUserAgentPtrOutputWithContext(ctx context.Context) ScanConfigUserAgentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScanConfigUserAgentPtrOutput)
}

func (in *scanConfigUserAgentPtr) ToOutput(ctx context.Context) pulumix.Output[*ScanConfigUserAgent] {
	return pulumix.Output[*ScanConfigUserAgent]{
		OutputState: in.ToScanConfigUserAgentPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScanConfigExportToSecurityCommandCenterInput)(nil)).Elem(), ScanConfigExportToSecurityCommandCenter("EXPORT_TO_SECURITY_COMMAND_CENTER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ScanConfigExportToSecurityCommandCenterPtrInput)(nil)).Elem(), ScanConfigExportToSecurityCommandCenter("EXPORT_TO_SECURITY_COMMAND_CENTER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ScanConfigRiskLevelInput)(nil)).Elem(), ScanConfigRiskLevel("RISK_LEVEL_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ScanConfigRiskLevelPtrInput)(nil)).Elem(), ScanConfigRiskLevel("RISK_LEVEL_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ScanConfigUserAgentInput)(nil)).Elem(), ScanConfigUserAgent("USER_AGENT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ScanConfigUserAgentPtrInput)(nil)).Elem(), ScanConfigUserAgent("USER_AGENT_UNSPECIFIED"))
	pulumi.RegisterOutputType(ScanConfigExportToSecurityCommandCenterOutput{})
	pulumi.RegisterOutputType(ScanConfigExportToSecurityCommandCenterPtrOutput{})
	pulumi.RegisterOutputType(ScanConfigRiskLevelOutput{})
	pulumi.RegisterOutputType(ScanConfigRiskLevelPtrOutput{})
	pulumi.RegisterOutputType(ScanConfigUserAgentOutput{})
	pulumi.RegisterOutputType(ScanConfigUserAgentPtrOutput{})
}
