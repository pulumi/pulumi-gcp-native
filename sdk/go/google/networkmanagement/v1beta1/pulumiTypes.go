// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Details of the final state "abort" and associated resource.
type AbortInfoResponse struct {
	// Causes that the analysis is aborted.
	Cause string `pulumi:"cause"`
	// List of project IDs that the user has specified in the request but does not have permission to access network configs. Analysis is aborted in this case with the PERMISSION_DENIED cause.
	ProjectsMissingPermission []string `pulumi:"projectsMissingPermission"`
	// URI of the resource that caused the abort.
	ResourceUri string `pulumi:"resourceUri"`
}

// Details of the final state "abort" and associated resource.
type AbortInfoResponseOutput struct{ *pulumi.OutputState }

func (AbortInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AbortInfoResponse)(nil)).Elem()
}

func (o AbortInfoResponseOutput) ToAbortInfoResponseOutput() AbortInfoResponseOutput {
	return o
}

func (o AbortInfoResponseOutput) ToAbortInfoResponseOutputWithContext(ctx context.Context) AbortInfoResponseOutput {
	return o
}

// Causes that the analysis is aborted.
func (o AbortInfoResponseOutput) Cause() pulumi.StringOutput {
	return o.ApplyT(func(v AbortInfoResponse) string { return v.Cause }).(pulumi.StringOutput)
}

// List of project IDs that the user has specified in the request but does not have permission to access network configs. Analysis is aborted in this case with the PERMISSION_DENIED cause.
func (o AbortInfoResponseOutput) ProjectsMissingPermission() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AbortInfoResponse) []string { return v.ProjectsMissingPermission }).(pulumi.StringArrayOutput)
}

// URI of the resource that caused the abort.
func (o AbortInfoResponseOutput) ResourceUri() pulumi.StringOutput {
	return o.ApplyT(func(v AbortInfoResponse) string { return v.ResourceUri }).(pulumi.StringOutput)
}

// Wrapper for the App Engine service version attributes.
type AppEngineVersionEndpoint struct {
	// An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions) name.
	Uri *string `pulumi:"uri"`
}

// AppEngineVersionEndpointInput is an input type that accepts AppEngineVersionEndpointArgs and AppEngineVersionEndpointOutput values.
// You can construct a concrete instance of `AppEngineVersionEndpointInput` via:
//
//	AppEngineVersionEndpointArgs{...}
type AppEngineVersionEndpointInput interface {
	pulumi.Input

	ToAppEngineVersionEndpointOutput() AppEngineVersionEndpointOutput
	ToAppEngineVersionEndpointOutputWithContext(context.Context) AppEngineVersionEndpointOutput
}

// Wrapper for the App Engine service version attributes.
type AppEngineVersionEndpointArgs struct {
	// An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions) name.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (AppEngineVersionEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppEngineVersionEndpoint)(nil)).Elem()
}

func (i AppEngineVersionEndpointArgs) ToAppEngineVersionEndpointOutput() AppEngineVersionEndpointOutput {
	return i.ToAppEngineVersionEndpointOutputWithContext(context.Background())
}

func (i AppEngineVersionEndpointArgs) ToAppEngineVersionEndpointOutputWithContext(ctx context.Context) AppEngineVersionEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineVersionEndpointOutput)
}

func (i AppEngineVersionEndpointArgs) ToAppEngineVersionEndpointPtrOutput() AppEngineVersionEndpointPtrOutput {
	return i.ToAppEngineVersionEndpointPtrOutputWithContext(context.Background())
}

func (i AppEngineVersionEndpointArgs) ToAppEngineVersionEndpointPtrOutputWithContext(ctx context.Context) AppEngineVersionEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineVersionEndpointOutput).ToAppEngineVersionEndpointPtrOutputWithContext(ctx)
}

// AppEngineVersionEndpointPtrInput is an input type that accepts AppEngineVersionEndpointArgs, AppEngineVersionEndpointPtr and AppEngineVersionEndpointPtrOutput values.
// You can construct a concrete instance of `AppEngineVersionEndpointPtrInput` via:
//
//	        AppEngineVersionEndpointArgs{...}
//
//	or:
//
//	        nil
type AppEngineVersionEndpointPtrInput interface {
	pulumi.Input

	ToAppEngineVersionEndpointPtrOutput() AppEngineVersionEndpointPtrOutput
	ToAppEngineVersionEndpointPtrOutputWithContext(context.Context) AppEngineVersionEndpointPtrOutput
}

type appEngineVersionEndpointPtrType AppEngineVersionEndpointArgs

func AppEngineVersionEndpointPtr(v *AppEngineVersionEndpointArgs) AppEngineVersionEndpointPtrInput {
	return (*appEngineVersionEndpointPtrType)(v)
}

func (*appEngineVersionEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppEngineVersionEndpoint)(nil)).Elem()
}

func (i *appEngineVersionEndpointPtrType) ToAppEngineVersionEndpointPtrOutput() AppEngineVersionEndpointPtrOutput {
	return i.ToAppEngineVersionEndpointPtrOutputWithContext(context.Background())
}

func (i *appEngineVersionEndpointPtrType) ToAppEngineVersionEndpointPtrOutputWithContext(ctx context.Context) AppEngineVersionEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineVersionEndpointPtrOutput)
}

// Wrapper for the App Engine service version attributes.
type AppEngineVersionEndpointOutput struct{ *pulumi.OutputState }

func (AppEngineVersionEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppEngineVersionEndpoint)(nil)).Elem()
}

func (o AppEngineVersionEndpointOutput) ToAppEngineVersionEndpointOutput() AppEngineVersionEndpointOutput {
	return o
}

func (o AppEngineVersionEndpointOutput) ToAppEngineVersionEndpointOutputWithContext(ctx context.Context) AppEngineVersionEndpointOutput {
	return o
}

func (o AppEngineVersionEndpointOutput) ToAppEngineVersionEndpointPtrOutput() AppEngineVersionEndpointPtrOutput {
	return o.ToAppEngineVersionEndpointPtrOutputWithContext(context.Background())
}

func (o AppEngineVersionEndpointOutput) ToAppEngineVersionEndpointPtrOutputWithContext(ctx context.Context) AppEngineVersionEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppEngineVersionEndpoint) *AppEngineVersionEndpoint {
		return &v
	}).(AppEngineVersionEndpointPtrOutput)
}

// An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions) name.
func (o AppEngineVersionEndpointOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppEngineVersionEndpoint) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type AppEngineVersionEndpointPtrOutput struct{ *pulumi.OutputState }

func (AppEngineVersionEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppEngineVersionEndpoint)(nil)).Elem()
}

func (o AppEngineVersionEndpointPtrOutput) ToAppEngineVersionEndpointPtrOutput() AppEngineVersionEndpointPtrOutput {
	return o
}

func (o AppEngineVersionEndpointPtrOutput) ToAppEngineVersionEndpointPtrOutputWithContext(ctx context.Context) AppEngineVersionEndpointPtrOutput {
	return o
}

func (o AppEngineVersionEndpointPtrOutput) Elem() AppEngineVersionEndpointOutput {
	return o.ApplyT(func(v *AppEngineVersionEndpoint) AppEngineVersionEndpoint {
		if v != nil {
			return *v
		}
		var ret AppEngineVersionEndpoint
		return ret
	}).(AppEngineVersionEndpointOutput)
}

// An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions) name.
func (o AppEngineVersionEndpointPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppEngineVersionEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// Wrapper for the App Engine service version attributes.
type AppEngineVersionEndpointResponse struct {
	// An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions) name.
	Uri string `pulumi:"uri"`
}

// Wrapper for the App Engine service version attributes.
type AppEngineVersionEndpointResponseOutput struct{ *pulumi.OutputState }

func (AppEngineVersionEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppEngineVersionEndpointResponse)(nil)).Elem()
}

func (o AppEngineVersionEndpointResponseOutput) ToAppEngineVersionEndpointResponseOutput() AppEngineVersionEndpointResponseOutput {
	return o
}

func (o AppEngineVersionEndpointResponseOutput) ToAppEngineVersionEndpointResponseOutputWithContext(ctx context.Context) AppEngineVersionEndpointResponseOutput {
	return o
}

// An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions) name.
func (o AppEngineVersionEndpointResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v AppEngineVersionEndpointResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// For display only. Metadata associated with an App Engine version.
type AppEngineVersionInfoResponse struct {
	// Name of an App Engine version.
	DisplayName string `pulumi:"displayName"`
	// App Engine execution environment for a version.
	Environment string `pulumi:"environment"`
	// Runtime of the App Engine version.
	Runtime string `pulumi:"runtime"`
	// URI of an App Engine version.
	Uri string `pulumi:"uri"`
}

// For display only. Metadata associated with an App Engine version.
type AppEngineVersionInfoResponseOutput struct{ *pulumi.OutputState }

func (AppEngineVersionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppEngineVersionInfoResponse)(nil)).Elem()
}

func (o AppEngineVersionInfoResponseOutput) ToAppEngineVersionInfoResponseOutput() AppEngineVersionInfoResponseOutput {
	return o
}

func (o AppEngineVersionInfoResponseOutput) ToAppEngineVersionInfoResponseOutputWithContext(ctx context.Context) AppEngineVersionInfoResponseOutput {
	return o
}

// Name of an App Engine version.
func (o AppEngineVersionInfoResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v AppEngineVersionInfoResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// App Engine execution environment for a version.
func (o AppEngineVersionInfoResponseOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v AppEngineVersionInfoResponse) string { return v.Environment }).(pulumi.StringOutput)
}

// Runtime of the App Engine version.
func (o AppEngineVersionInfoResponseOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v AppEngineVersionInfoResponse) string { return v.Runtime }).(pulumi.StringOutput)
}

// URI of an App Engine version.
func (o AppEngineVersionInfoResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v AppEngineVersionInfoResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfig struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []AuditLogConfig `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service *string `pulumi:"service"`
}

// AuditConfigInput is an input type that accepts AuditConfigArgs and AuditConfigOutput values.
// You can construct a concrete instance of `AuditConfigInput` via:
//
//	AuditConfigArgs{...}
type AuditConfigInput interface {
	pulumi.Input

	ToAuditConfigOutput() AuditConfigOutput
	ToAuditConfigOutputWithContext(context.Context) AuditConfigOutput
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigArgs struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs AuditLogConfigArrayInput `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (AuditConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfig)(nil)).Elem()
}

func (i AuditConfigArgs) ToAuditConfigOutput() AuditConfigOutput {
	return i.ToAuditConfigOutputWithContext(context.Background())
}

func (i AuditConfigArgs) ToAuditConfigOutputWithContext(ctx context.Context) AuditConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigOutput)
}

// AuditConfigArrayInput is an input type that accepts AuditConfigArray and AuditConfigArrayOutput values.
// You can construct a concrete instance of `AuditConfigArrayInput` via:
//
//	AuditConfigArray{ AuditConfigArgs{...} }
type AuditConfigArrayInput interface {
	pulumi.Input

	ToAuditConfigArrayOutput() AuditConfigArrayOutput
	ToAuditConfigArrayOutputWithContext(context.Context) AuditConfigArrayOutput
}

type AuditConfigArray []AuditConfigInput

func (AuditConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfig)(nil)).Elem()
}

func (i AuditConfigArray) ToAuditConfigArrayOutput() AuditConfigArrayOutput {
	return i.ToAuditConfigArrayOutputWithContext(context.Background())
}

func (i AuditConfigArray) ToAuditConfigArrayOutputWithContext(ctx context.Context) AuditConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigArrayOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigOutput struct{ *pulumi.OutputState }

func (AuditConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfig)(nil)).Elem()
}

func (o AuditConfigOutput) ToAuditConfigOutput() AuditConfigOutput {
	return o
}

func (o AuditConfigOutput) ToAuditConfigOutputWithContext(ctx context.Context) AuditConfigOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o AuditConfigOutput) AuditLogConfigs() AuditLogConfigArrayOutput {
	return o.ApplyT(func(v AuditConfig) []AuditLogConfig { return v.AuditLogConfigs }).(AuditLogConfigArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o AuditConfigOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuditConfig) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type AuditConfigArrayOutput struct{ *pulumi.OutputState }

func (AuditConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfig)(nil)).Elem()
}

func (o AuditConfigArrayOutput) ToAuditConfigArrayOutput() AuditConfigArrayOutput {
	return o
}

func (o AuditConfigArrayOutput) ToAuditConfigArrayOutputWithContext(ctx context.Context) AuditConfigArrayOutput {
	return o
}

func (o AuditConfigArrayOutput) Index(i pulumi.IntInput) AuditConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditConfig {
		return vs[0].([]AuditConfig)[vs[1].(int)]
	}).(AuditConfigOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigResponse struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []AuditLogConfigResponse `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service string `pulumi:"service"`
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigResponseOutput struct{ *pulumi.OutputState }

func (AuditConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfigResponse)(nil)).Elem()
}

func (o AuditConfigResponseOutput) ToAuditConfigResponseOutput() AuditConfigResponseOutput {
	return o
}

func (o AuditConfigResponseOutput) ToAuditConfigResponseOutputWithContext(ctx context.Context) AuditConfigResponseOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o AuditConfigResponseOutput) AuditLogConfigs() AuditLogConfigResponseArrayOutput {
	return o.ApplyT(func(v AuditConfigResponse) []AuditLogConfigResponse { return v.AuditLogConfigs }).(AuditLogConfigResponseArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o AuditConfigResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v AuditConfigResponse) string { return v.Service }).(pulumi.StringOutput)
}

type AuditConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (AuditConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfigResponse)(nil)).Elem()
}

func (o AuditConfigResponseArrayOutput) ToAuditConfigResponseArrayOutput() AuditConfigResponseArrayOutput {
	return o
}

func (o AuditConfigResponseArrayOutput) ToAuditConfigResponseArrayOutputWithContext(ctx context.Context) AuditConfigResponseArrayOutput {
	return o
}

func (o AuditConfigResponseArrayOutput) Index(i pulumi.IntInput) AuditConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditConfigResponse {
		return vs[0].([]AuditConfigResponse)[vs[1].(int)]
	}).(AuditConfigResponseOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfig struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType *AuditLogConfigLogType `pulumi:"logType"`
}

// AuditLogConfigInput is an input type that accepts AuditLogConfigArgs and AuditLogConfigOutput values.
// You can construct a concrete instance of `AuditLogConfigInput` via:
//
//	AuditLogConfigArgs{...}
type AuditLogConfigInput interface {
	pulumi.Input

	ToAuditLogConfigOutput() AuditLogConfigOutput
	ToAuditLogConfigOutputWithContext(context.Context) AuditLogConfigOutput
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigArgs struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType AuditLogConfigLogTypePtrInput `pulumi:"logType"`
}

func (AuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfig)(nil)).Elem()
}

func (i AuditLogConfigArgs) ToAuditLogConfigOutput() AuditLogConfigOutput {
	return i.ToAuditLogConfigOutputWithContext(context.Background())
}

func (i AuditLogConfigArgs) ToAuditLogConfigOutputWithContext(ctx context.Context) AuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigOutput)
}

// AuditLogConfigArrayInput is an input type that accepts AuditLogConfigArray and AuditLogConfigArrayOutput values.
// You can construct a concrete instance of `AuditLogConfigArrayInput` via:
//
//	AuditLogConfigArray{ AuditLogConfigArgs{...} }
type AuditLogConfigArrayInput interface {
	pulumi.Input

	ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput
	ToAuditLogConfigArrayOutputWithContext(context.Context) AuditLogConfigArrayOutput
}

type AuditLogConfigArray []AuditLogConfigInput

func (AuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfig)(nil)).Elem()
}

func (i AuditLogConfigArray) ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput {
	return i.ToAuditLogConfigArrayOutputWithContext(context.Background())
}

func (i AuditLogConfigArray) ToAuditLogConfigArrayOutputWithContext(ctx context.Context) AuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigArrayOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigOutput struct{ *pulumi.OutputState }

func (AuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfig)(nil)).Elem()
}

func (o AuditLogConfigOutput) ToAuditLogConfigOutput() AuditLogConfigOutput {
	return o
}

func (o AuditLogConfigOutput) ToAuditLogConfigOutputWithContext(ctx context.Context) AuditLogConfigOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o AuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o AuditLogConfigOutput) LogType() AuditLogConfigLogTypePtrOutput {
	return o.ApplyT(func(v AuditLogConfig) *AuditLogConfigLogType { return v.LogType }).(AuditLogConfigLogTypePtrOutput)
}

type AuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (AuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfig)(nil)).Elem()
}

func (o AuditLogConfigArrayOutput) ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput {
	return o
}

func (o AuditLogConfigArrayOutput) ToAuditLogConfigArrayOutputWithContext(ctx context.Context) AuditLogConfigArrayOutput {
	return o
}

func (o AuditLogConfigArrayOutput) Index(i pulumi.IntInput) AuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditLogConfig {
		return vs[0].([]AuditLogConfig)[vs[1].(int)]
	}).(AuditLogConfigOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigResponse struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType string `pulumi:"logType"`
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigResponseOutput struct{ *pulumi.OutputState }

func (AuditLogConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigResponse)(nil)).Elem()
}

func (o AuditLogConfigResponseOutput) ToAuditLogConfigResponseOutput() AuditLogConfigResponseOutput {
	return o
}

func (o AuditLogConfigResponseOutput) ToAuditLogConfigResponseOutputWithContext(ctx context.Context) AuditLogConfigResponseOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o AuditLogConfigResponseOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogConfigResponse) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o AuditLogConfigResponseOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v AuditLogConfigResponse) string { return v.LogType }).(pulumi.StringOutput)
}

type AuditLogConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (AuditLogConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfigResponse)(nil)).Elem()
}

func (o AuditLogConfigResponseArrayOutput) ToAuditLogConfigResponseArrayOutput() AuditLogConfigResponseArrayOutput {
	return o
}

func (o AuditLogConfigResponseArrayOutput) ToAuditLogConfigResponseArrayOutputWithContext(ctx context.Context) AuditLogConfigResponseArrayOutput {
	return o
}

func (o AuditLogConfigResponseArrayOutput) Index(i pulumi.IntInput) AuditLogConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditLogConfigResponse {
		return vs[0].([]AuditLogConfigResponse)[vs[1].(int)]
	}).(AuditLogConfigResponseOutput)
}

// Associates `members`, or principals, with a `role`.
type Binding struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition *Expr `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role *string `pulumi:"role"`
}

// BindingInput is an input type that accepts BindingArgs and BindingOutput values.
// You can construct a concrete instance of `BindingInput` via:
//
//	BindingArgs{...}
type BindingInput interface {
	pulumi.Input

	ToBindingOutput() BindingOutput
	ToBindingOutputWithContext(context.Context) BindingOutput
}

// Associates `members`, or principals, with a `role`.
type BindingArgs struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprPtrInput `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (BindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (i BindingArgs) ToBindingOutput() BindingOutput {
	return i.ToBindingOutputWithContext(context.Background())
}

func (i BindingArgs) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingOutput)
}

// BindingArrayInput is an input type that accepts BindingArray and BindingArrayOutput values.
// You can construct a concrete instance of `BindingArrayInput` via:
//
//	BindingArray{ BindingArgs{...} }
type BindingArrayInput interface {
	pulumi.Input

	ToBindingArrayOutput() BindingArrayOutput
	ToBindingArrayOutputWithContext(context.Context) BindingArrayOutput
}

type BindingArray []BindingInput

func (BindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (i BindingArray) ToBindingArrayOutput() BindingArrayOutput {
	return i.ToBindingArrayOutputWithContext(context.Background())
}

func (i BindingArray) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingArrayOutput)
}

// Associates `members`, or principals, with a `role`.
type BindingOutput struct{ *pulumi.OutputState }

func (BindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (o BindingOutput) ToBindingOutput() BindingOutput {
	return o
}

func (o BindingOutput) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingOutput) Condition() ExprPtrOutput {
	return o.ApplyT(func(v Binding) *Expr { return v.Condition }).(ExprPtrOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
func (o BindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Binding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o BindingOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Binding) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type BindingArrayOutput struct{ *pulumi.OutputState }

func (BindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (o BindingArrayOutput) ToBindingArrayOutput() BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) Index(i pulumi.IntInput) BindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Binding {
		return vs[0].([]Binding)[vs[1].(int)]
	}).(BindingOutput)
}

// Associates `members`, or principals, with a `role`.
type BindingResponse struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprResponse `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role string `pulumi:"role"`
}

// Associates `members`, or principals, with a `role`.
type BindingResponseOutput struct{ *pulumi.OutputState }

func (BindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingResponse)(nil)).Elem()
}

func (o BindingResponseOutput) ToBindingResponseOutput() BindingResponseOutput {
	return o
}

func (o BindingResponseOutput) ToBindingResponseOutputWithContext(ctx context.Context) BindingResponseOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingResponseOutput) Condition() ExprResponseOutput {
	return o.ApplyT(func(v BindingResponse) ExprResponse { return v.Condition }).(ExprResponseOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
func (o BindingResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BindingResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o BindingResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v BindingResponse) string { return v.Role }).(pulumi.StringOutput)
}

type BindingResponseArrayOutput struct{ *pulumi.OutputState }

func (BindingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingResponse)(nil)).Elem()
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutput() BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutputWithContext(ctx context.Context) BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) Index(i pulumi.IntInput) BindingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BindingResponse {
		return vs[0].([]BindingResponse)[vs[1].(int)]
	}).(BindingResponseOutput)
}

// Wrapper for Cloud Function attributes.
type CloudFunctionEndpoint struct {
	// A [Cloud Function](https://cloud.google.com/functions) name.
	Uri *string `pulumi:"uri"`
}

// CloudFunctionEndpointInput is an input type that accepts CloudFunctionEndpointArgs and CloudFunctionEndpointOutput values.
// You can construct a concrete instance of `CloudFunctionEndpointInput` via:
//
//	CloudFunctionEndpointArgs{...}
type CloudFunctionEndpointInput interface {
	pulumi.Input

	ToCloudFunctionEndpointOutput() CloudFunctionEndpointOutput
	ToCloudFunctionEndpointOutputWithContext(context.Context) CloudFunctionEndpointOutput
}

// Wrapper for Cloud Function attributes.
type CloudFunctionEndpointArgs struct {
	// A [Cloud Function](https://cloud.google.com/functions) name.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (CloudFunctionEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudFunctionEndpoint)(nil)).Elem()
}

func (i CloudFunctionEndpointArgs) ToCloudFunctionEndpointOutput() CloudFunctionEndpointOutput {
	return i.ToCloudFunctionEndpointOutputWithContext(context.Background())
}

func (i CloudFunctionEndpointArgs) ToCloudFunctionEndpointOutputWithContext(ctx context.Context) CloudFunctionEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudFunctionEndpointOutput)
}

func (i CloudFunctionEndpointArgs) ToCloudFunctionEndpointPtrOutput() CloudFunctionEndpointPtrOutput {
	return i.ToCloudFunctionEndpointPtrOutputWithContext(context.Background())
}

func (i CloudFunctionEndpointArgs) ToCloudFunctionEndpointPtrOutputWithContext(ctx context.Context) CloudFunctionEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudFunctionEndpointOutput).ToCloudFunctionEndpointPtrOutputWithContext(ctx)
}

// CloudFunctionEndpointPtrInput is an input type that accepts CloudFunctionEndpointArgs, CloudFunctionEndpointPtr and CloudFunctionEndpointPtrOutput values.
// You can construct a concrete instance of `CloudFunctionEndpointPtrInput` via:
//
//	        CloudFunctionEndpointArgs{...}
//
//	or:
//
//	        nil
type CloudFunctionEndpointPtrInput interface {
	pulumi.Input

	ToCloudFunctionEndpointPtrOutput() CloudFunctionEndpointPtrOutput
	ToCloudFunctionEndpointPtrOutputWithContext(context.Context) CloudFunctionEndpointPtrOutput
}

type cloudFunctionEndpointPtrType CloudFunctionEndpointArgs

func CloudFunctionEndpointPtr(v *CloudFunctionEndpointArgs) CloudFunctionEndpointPtrInput {
	return (*cloudFunctionEndpointPtrType)(v)
}

func (*cloudFunctionEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudFunctionEndpoint)(nil)).Elem()
}

func (i *cloudFunctionEndpointPtrType) ToCloudFunctionEndpointPtrOutput() CloudFunctionEndpointPtrOutput {
	return i.ToCloudFunctionEndpointPtrOutputWithContext(context.Background())
}

func (i *cloudFunctionEndpointPtrType) ToCloudFunctionEndpointPtrOutputWithContext(ctx context.Context) CloudFunctionEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudFunctionEndpointPtrOutput)
}

// Wrapper for Cloud Function attributes.
type CloudFunctionEndpointOutput struct{ *pulumi.OutputState }

func (CloudFunctionEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudFunctionEndpoint)(nil)).Elem()
}

func (o CloudFunctionEndpointOutput) ToCloudFunctionEndpointOutput() CloudFunctionEndpointOutput {
	return o
}

func (o CloudFunctionEndpointOutput) ToCloudFunctionEndpointOutputWithContext(ctx context.Context) CloudFunctionEndpointOutput {
	return o
}

func (o CloudFunctionEndpointOutput) ToCloudFunctionEndpointPtrOutput() CloudFunctionEndpointPtrOutput {
	return o.ToCloudFunctionEndpointPtrOutputWithContext(context.Background())
}

func (o CloudFunctionEndpointOutput) ToCloudFunctionEndpointPtrOutputWithContext(ctx context.Context) CloudFunctionEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudFunctionEndpoint) *CloudFunctionEndpoint {
		return &v
	}).(CloudFunctionEndpointPtrOutput)
}

// A [Cloud Function](https://cloud.google.com/functions) name.
func (o CloudFunctionEndpointOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudFunctionEndpoint) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type CloudFunctionEndpointPtrOutput struct{ *pulumi.OutputState }

func (CloudFunctionEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudFunctionEndpoint)(nil)).Elem()
}

func (o CloudFunctionEndpointPtrOutput) ToCloudFunctionEndpointPtrOutput() CloudFunctionEndpointPtrOutput {
	return o
}

func (o CloudFunctionEndpointPtrOutput) ToCloudFunctionEndpointPtrOutputWithContext(ctx context.Context) CloudFunctionEndpointPtrOutput {
	return o
}

func (o CloudFunctionEndpointPtrOutput) Elem() CloudFunctionEndpointOutput {
	return o.ApplyT(func(v *CloudFunctionEndpoint) CloudFunctionEndpoint {
		if v != nil {
			return *v
		}
		var ret CloudFunctionEndpoint
		return ret
	}).(CloudFunctionEndpointOutput)
}

// A [Cloud Function](https://cloud.google.com/functions) name.
func (o CloudFunctionEndpointPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudFunctionEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// Wrapper for Cloud Function attributes.
type CloudFunctionEndpointResponse struct {
	// A [Cloud Function](https://cloud.google.com/functions) name.
	Uri string `pulumi:"uri"`
}

// Wrapper for Cloud Function attributes.
type CloudFunctionEndpointResponseOutput struct{ *pulumi.OutputState }

func (CloudFunctionEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudFunctionEndpointResponse)(nil)).Elem()
}

func (o CloudFunctionEndpointResponseOutput) ToCloudFunctionEndpointResponseOutput() CloudFunctionEndpointResponseOutput {
	return o
}

func (o CloudFunctionEndpointResponseOutput) ToCloudFunctionEndpointResponseOutputWithContext(ctx context.Context) CloudFunctionEndpointResponseOutput {
	return o
}

// A [Cloud Function](https://cloud.google.com/functions) name.
func (o CloudFunctionEndpointResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v CloudFunctionEndpointResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// For display only. Metadata associated with a Cloud Function.
type CloudFunctionInfoResponse struct {
	// Name of a Cloud Function.
	DisplayName string `pulumi:"displayName"`
	// Location in which the Cloud Function is deployed.
	Location string `pulumi:"location"`
	// URI of a Cloud Function.
	Uri string `pulumi:"uri"`
	// Latest successfully deployed version id of the Cloud Function.
	VersionId string `pulumi:"versionId"`
}

// For display only. Metadata associated with a Cloud Function.
type CloudFunctionInfoResponseOutput struct{ *pulumi.OutputState }

func (CloudFunctionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudFunctionInfoResponse)(nil)).Elem()
}

func (o CloudFunctionInfoResponseOutput) ToCloudFunctionInfoResponseOutput() CloudFunctionInfoResponseOutput {
	return o
}

func (o CloudFunctionInfoResponseOutput) ToCloudFunctionInfoResponseOutputWithContext(ctx context.Context) CloudFunctionInfoResponseOutput {
	return o
}

// Name of a Cloud Function.
func (o CloudFunctionInfoResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v CloudFunctionInfoResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Location in which the Cloud Function is deployed.
func (o CloudFunctionInfoResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v CloudFunctionInfoResponse) string { return v.Location }).(pulumi.StringOutput)
}

// URI of a Cloud Function.
func (o CloudFunctionInfoResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v CloudFunctionInfoResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Latest successfully deployed version id of the Cloud Function.
func (o CloudFunctionInfoResponseOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v CloudFunctionInfoResponse) string { return v.VersionId }).(pulumi.StringOutput)
}

// Wrapper for Cloud Run revision attributes.
type CloudRunRevisionEndpoint struct {
	// A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get) URI. The format is: projects/{project}/locations/{location}/revisions/{revision}
	Uri *string `pulumi:"uri"`
}

// CloudRunRevisionEndpointInput is an input type that accepts CloudRunRevisionEndpointArgs and CloudRunRevisionEndpointOutput values.
// You can construct a concrete instance of `CloudRunRevisionEndpointInput` via:
//
//	CloudRunRevisionEndpointArgs{...}
type CloudRunRevisionEndpointInput interface {
	pulumi.Input

	ToCloudRunRevisionEndpointOutput() CloudRunRevisionEndpointOutput
	ToCloudRunRevisionEndpointOutputWithContext(context.Context) CloudRunRevisionEndpointOutput
}

// Wrapper for Cloud Run revision attributes.
type CloudRunRevisionEndpointArgs struct {
	// A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get) URI. The format is: projects/{project}/locations/{location}/revisions/{revision}
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (CloudRunRevisionEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudRunRevisionEndpoint)(nil)).Elem()
}

func (i CloudRunRevisionEndpointArgs) ToCloudRunRevisionEndpointOutput() CloudRunRevisionEndpointOutput {
	return i.ToCloudRunRevisionEndpointOutputWithContext(context.Background())
}

func (i CloudRunRevisionEndpointArgs) ToCloudRunRevisionEndpointOutputWithContext(ctx context.Context) CloudRunRevisionEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudRunRevisionEndpointOutput)
}

func (i CloudRunRevisionEndpointArgs) ToCloudRunRevisionEndpointPtrOutput() CloudRunRevisionEndpointPtrOutput {
	return i.ToCloudRunRevisionEndpointPtrOutputWithContext(context.Background())
}

func (i CloudRunRevisionEndpointArgs) ToCloudRunRevisionEndpointPtrOutputWithContext(ctx context.Context) CloudRunRevisionEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudRunRevisionEndpointOutput).ToCloudRunRevisionEndpointPtrOutputWithContext(ctx)
}

// CloudRunRevisionEndpointPtrInput is an input type that accepts CloudRunRevisionEndpointArgs, CloudRunRevisionEndpointPtr and CloudRunRevisionEndpointPtrOutput values.
// You can construct a concrete instance of `CloudRunRevisionEndpointPtrInput` via:
//
//	        CloudRunRevisionEndpointArgs{...}
//
//	or:
//
//	        nil
type CloudRunRevisionEndpointPtrInput interface {
	pulumi.Input

	ToCloudRunRevisionEndpointPtrOutput() CloudRunRevisionEndpointPtrOutput
	ToCloudRunRevisionEndpointPtrOutputWithContext(context.Context) CloudRunRevisionEndpointPtrOutput
}

type cloudRunRevisionEndpointPtrType CloudRunRevisionEndpointArgs

func CloudRunRevisionEndpointPtr(v *CloudRunRevisionEndpointArgs) CloudRunRevisionEndpointPtrInput {
	return (*cloudRunRevisionEndpointPtrType)(v)
}

func (*cloudRunRevisionEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudRunRevisionEndpoint)(nil)).Elem()
}

func (i *cloudRunRevisionEndpointPtrType) ToCloudRunRevisionEndpointPtrOutput() CloudRunRevisionEndpointPtrOutput {
	return i.ToCloudRunRevisionEndpointPtrOutputWithContext(context.Background())
}

func (i *cloudRunRevisionEndpointPtrType) ToCloudRunRevisionEndpointPtrOutputWithContext(ctx context.Context) CloudRunRevisionEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudRunRevisionEndpointPtrOutput)
}

// Wrapper for Cloud Run revision attributes.
type CloudRunRevisionEndpointOutput struct{ *pulumi.OutputState }

func (CloudRunRevisionEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudRunRevisionEndpoint)(nil)).Elem()
}

func (o CloudRunRevisionEndpointOutput) ToCloudRunRevisionEndpointOutput() CloudRunRevisionEndpointOutput {
	return o
}

func (o CloudRunRevisionEndpointOutput) ToCloudRunRevisionEndpointOutputWithContext(ctx context.Context) CloudRunRevisionEndpointOutput {
	return o
}

func (o CloudRunRevisionEndpointOutput) ToCloudRunRevisionEndpointPtrOutput() CloudRunRevisionEndpointPtrOutput {
	return o.ToCloudRunRevisionEndpointPtrOutputWithContext(context.Background())
}

func (o CloudRunRevisionEndpointOutput) ToCloudRunRevisionEndpointPtrOutputWithContext(ctx context.Context) CloudRunRevisionEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudRunRevisionEndpoint) *CloudRunRevisionEndpoint {
		return &v
	}).(CloudRunRevisionEndpointPtrOutput)
}

// A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get) URI. The format is: projects/{project}/locations/{location}/revisions/{revision}
func (o CloudRunRevisionEndpointOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudRunRevisionEndpoint) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type CloudRunRevisionEndpointPtrOutput struct{ *pulumi.OutputState }

func (CloudRunRevisionEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudRunRevisionEndpoint)(nil)).Elem()
}

func (o CloudRunRevisionEndpointPtrOutput) ToCloudRunRevisionEndpointPtrOutput() CloudRunRevisionEndpointPtrOutput {
	return o
}

func (o CloudRunRevisionEndpointPtrOutput) ToCloudRunRevisionEndpointPtrOutputWithContext(ctx context.Context) CloudRunRevisionEndpointPtrOutput {
	return o
}

func (o CloudRunRevisionEndpointPtrOutput) Elem() CloudRunRevisionEndpointOutput {
	return o.ApplyT(func(v *CloudRunRevisionEndpoint) CloudRunRevisionEndpoint {
		if v != nil {
			return *v
		}
		var ret CloudRunRevisionEndpoint
		return ret
	}).(CloudRunRevisionEndpointOutput)
}

// A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get) URI. The format is: projects/{project}/locations/{location}/revisions/{revision}
func (o CloudRunRevisionEndpointPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudRunRevisionEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// Wrapper for Cloud Run revision attributes.
type CloudRunRevisionEndpointResponse struct {
	// A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get) URI. The format is: projects/{project}/locations/{location}/revisions/{revision}
	Uri string `pulumi:"uri"`
}

// Wrapper for Cloud Run revision attributes.
type CloudRunRevisionEndpointResponseOutput struct{ *pulumi.OutputState }

func (CloudRunRevisionEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudRunRevisionEndpointResponse)(nil)).Elem()
}

func (o CloudRunRevisionEndpointResponseOutput) ToCloudRunRevisionEndpointResponseOutput() CloudRunRevisionEndpointResponseOutput {
	return o
}

func (o CloudRunRevisionEndpointResponseOutput) ToCloudRunRevisionEndpointResponseOutputWithContext(ctx context.Context) CloudRunRevisionEndpointResponseOutput {
	return o
}

// A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get) URI. The format is: projects/{project}/locations/{location}/revisions/{revision}
func (o CloudRunRevisionEndpointResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v CloudRunRevisionEndpointResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// For display only. Metadata associated with a Cloud Run revision.
type CloudRunRevisionInfoResponse struct {
	// Name of a Cloud Run revision.
	DisplayName string `pulumi:"displayName"`
	// Location in which this revision is deployed.
	Location string `pulumi:"location"`
	// ID of Cloud Run Service this revision belongs to.
	ServiceName string `pulumi:"serviceName"`
	// URI of Cloud Run service this revision belongs to.
	ServiceUri string `pulumi:"serviceUri"`
	// URI of a Cloud Run revision.
	Uri string `pulumi:"uri"`
}

// For display only. Metadata associated with a Cloud Run revision.
type CloudRunRevisionInfoResponseOutput struct{ *pulumi.OutputState }

func (CloudRunRevisionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudRunRevisionInfoResponse)(nil)).Elem()
}

func (o CloudRunRevisionInfoResponseOutput) ToCloudRunRevisionInfoResponseOutput() CloudRunRevisionInfoResponseOutput {
	return o
}

func (o CloudRunRevisionInfoResponseOutput) ToCloudRunRevisionInfoResponseOutputWithContext(ctx context.Context) CloudRunRevisionInfoResponseOutput {
	return o
}

// Name of a Cloud Run revision.
func (o CloudRunRevisionInfoResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v CloudRunRevisionInfoResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Location in which this revision is deployed.
func (o CloudRunRevisionInfoResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v CloudRunRevisionInfoResponse) string { return v.Location }).(pulumi.StringOutput)
}

// ID of Cloud Run Service this revision belongs to.
func (o CloudRunRevisionInfoResponseOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v CloudRunRevisionInfoResponse) string { return v.ServiceName }).(pulumi.StringOutput)
}

// URI of Cloud Run service this revision belongs to.
func (o CloudRunRevisionInfoResponseOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v CloudRunRevisionInfoResponse) string { return v.ServiceUri }).(pulumi.StringOutput)
}

// URI of a Cloud Run revision.
func (o CloudRunRevisionInfoResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v CloudRunRevisionInfoResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// For display only. Metadata associated with a Cloud SQL instance.
type CloudSQLInstanceInfoResponse struct {
	// Name of a Cloud SQL instance.
	DisplayName string `pulumi:"displayName"`
	// External IP address of a Cloud SQL instance.
	ExternalIp string `pulumi:"externalIp"`
	// Internal IP address of a Cloud SQL instance.
	InternalIp string `pulumi:"internalIp"`
	// URI of a Cloud SQL instance network or empty string if the instance does not have one.
	NetworkUri string `pulumi:"networkUri"`
	// Region in which the Cloud SQL instance is running.
	Region string `pulumi:"region"`
	// URI of a Cloud SQL instance.
	Uri string `pulumi:"uri"`
}

// For display only. Metadata associated with a Cloud SQL instance.
type CloudSQLInstanceInfoResponseOutput struct{ *pulumi.OutputState }

func (CloudSQLInstanceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSQLInstanceInfoResponse)(nil)).Elem()
}

func (o CloudSQLInstanceInfoResponseOutput) ToCloudSQLInstanceInfoResponseOutput() CloudSQLInstanceInfoResponseOutput {
	return o
}

func (o CloudSQLInstanceInfoResponseOutput) ToCloudSQLInstanceInfoResponseOutputWithContext(ctx context.Context) CloudSQLInstanceInfoResponseOutput {
	return o
}

// Name of a Cloud SQL instance.
func (o CloudSQLInstanceInfoResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v CloudSQLInstanceInfoResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// External IP address of a Cloud SQL instance.
func (o CloudSQLInstanceInfoResponseOutput) ExternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudSQLInstanceInfoResponse) string { return v.ExternalIp }).(pulumi.StringOutput)
}

// Internal IP address of a Cloud SQL instance.
func (o CloudSQLInstanceInfoResponseOutput) InternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudSQLInstanceInfoResponse) string { return v.InternalIp }).(pulumi.StringOutput)
}

// URI of a Cloud SQL instance network or empty string if the instance does not have one.
func (o CloudSQLInstanceInfoResponseOutput) NetworkUri() pulumi.StringOutput {
	return o.ApplyT(func(v CloudSQLInstanceInfoResponse) string { return v.NetworkUri }).(pulumi.StringOutput)
}

// Region in which the Cloud SQL instance is running.
func (o CloudSQLInstanceInfoResponseOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v CloudSQLInstanceInfoResponse) string { return v.Region }).(pulumi.StringOutput)
}

// URI of a Cloud SQL instance.
func (o CloudSQLInstanceInfoResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v CloudSQLInstanceInfoResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Details of the final state "deliver" and associated resource.
type DeliverInfoResponse struct {
	// URI of the resource that the packet is delivered to.
	ResourceUri string `pulumi:"resourceUri"`
	// Target type where the packet is delivered to.
	Target string `pulumi:"target"`
}

// Details of the final state "deliver" and associated resource.
type DeliverInfoResponseOutput struct{ *pulumi.OutputState }

func (DeliverInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliverInfoResponse)(nil)).Elem()
}

func (o DeliverInfoResponseOutput) ToDeliverInfoResponseOutput() DeliverInfoResponseOutput {
	return o
}

func (o DeliverInfoResponseOutput) ToDeliverInfoResponseOutputWithContext(ctx context.Context) DeliverInfoResponseOutput {
	return o
}

// URI of the resource that the packet is delivered to.
func (o DeliverInfoResponseOutput) ResourceUri() pulumi.StringOutput {
	return o.ApplyT(func(v DeliverInfoResponse) string { return v.ResourceUri }).(pulumi.StringOutput)
}

// Target type where the packet is delivered to.
func (o DeliverInfoResponseOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v DeliverInfoResponse) string { return v.Target }).(pulumi.StringOutput)
}

// Details of the final state "drop" and associated resource.
type DropInfoResponse struct {
	// Cause that the packet is dropped.
	Cause string `pulumi:"cause"`
	// URI of the resource that caused the drop.
	ResourceUri string `pulumi:"resourceUri"`
}

// Details of the final state "drop" and associated resource.
type DropInfoResponseOutput struct{ *pulumi.OutputState }

func (DropInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DropInfoResponse)(nil)).Elem()
}

func (o DropInfoResponseOutput) ToDropInfoResponseOutput() DropInfoResponseOutput {
	return o
}

func (o DropInfoResponseOutput) ToDropInfoResponseOutputWithContext(ctx context.Context) DropInfoResponseOutput {
	return o
}

// Cause that the packet is dropped.
func (o DropInfoResponseOutput) Cause() pulumi.StringOutput {
	return o.ApplyT(func(v DropInfoResponse) string { return v.Cause }).(pulumi.StringOutput)
}

// URI of the resource that caused the drop.
func (o DropInfoResponseOutput) ResourceUri() pulumi.StringOutput {
	return o.ApplyT(func(v DropInfoResponse) string { return v.ResourceUri }).(pulumi.StringOutput)
}

// Representation of a network edge location as per https://cloud.google.com/vpc/docs/edge-locations.
type EdgeLocationResponse struct {
	// Name of the metropolitan area.
	MetropolitanArea string `pulumi:"metropolitanArea"`
}

// Representation of a network edge location as per https://cloud.google.com/vpc/docs/edge-locations.
type EdgeLocationResponseOutput struct{ *pulumi.OutputState }

func (EdgeLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeLocationResponse)(nil)).Elem()
}

func (o EdgeLocationResponseOutput) ToEdgeLocationResponseOutput() EdgeLocationResponseOutput {
	return o
}

func (o EdgeLocationResponseOutput) ToEdgeLocationResponseOutputWithContext(ctx context.Context) EdgeLocationResponseOutput {
	return o
}

// Name of the metropolitan area.
func (o EdgeLocationResponseOutput) MetropolitanArea() pulumi.StringOutput {
	return o.ApplyT(func(v EdgeLocationResponse) string { return v.MetropolitanArea }).(pulumi.StringOutput)
}

// Source or destination of the Connectivity Test.
type Endpoint struct {
	// An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions).
	AppEngineVersion *AppEngineVersionEndpoint `pulumi:"appEngineVersion"`
	// A [Cloud Function](https://cloud.google.com/functions).
	CloudFunction *CloudFunctionEndpoint `pulumi:"cloudFunction"`
	// A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get)
	CloudRunRevision *CloudRunRevisionEndpoint `pulumi:"cloudRunRevision"`
	// A [Cloud SQL](https://cloud.google.com/sql) instance URI.
	CloudSqlInstance *string `pulumi:"cloudSqlInstance"`
	// A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format: projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}
	ForwardingRule *string `pulumi:"forwardingRule"`
	// A cluster URI for [Google Kubernetes Engine master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).
	GkeMasterCluster *string `pulumi:"gkeMasterCluster"`
	// A Compute Engine instance URI.
	Instance *string `pulumi:"instance"`
	// The IP address of the endpoint, which can be an external or internal IP. An IPv6 address is only allowed when the test's destination is a [global load balancer VIP](https://cloud.google.com/load-balancing/docs/load-balancing-overview).
	IpAddress *string `pulumi:"ipAddress"`
	// A Compute Engine network URI.
	Network *string `pulumi:"network"`
	// Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.
	NetworkType *EndpointNetworkType `pulumi:"networkType"`
	// The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.
	Port *int `pulumi:"port"`
	// Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID: 1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.
	Project *string `pulumi:"project"`
}

// EndpointInput is an input type that accepts EndpointArgs and EndpointOutput values.
// You can construct a concrete instance of `EndpointInput` via:
//
//	EndpointArgs{...}
type EndpointInput interface {
	pulumi.Input

	ToEndpointOutput() EndpointOutput
	ToEndpointOutputWithContext(context.Context) EndpointOutput
}

// Source or destination of the Connectivity Test.
type EndpointArgs struct {
	// An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions).
	AppEngineVersion AppEngineVersionEndpointPtrInput `pulumi:"appEngineVersion"`
	// A [Cloud Function](https://cloud.google.com/functions).
	CloudFunction CloudFunctionEndpointPtrInput `pulumi:"cloudFunction"`
	// A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get)
	CloudRunRevision CloudRunRevisionEndpointPtrInput `pulumi:"cloudRunRevision"`
	// A [Cloud SQL](https://cloud.google.com/sql) instance URI.
	CloudSqlInstance pulumi.StringPtrInput `pulumi:"cloudSqlInstance"`
	// A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format: projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}
	ForwardingRule pulumi.StringPtrInput `pulumi:"forwardingRule"`
	// A cluster URI for [Google Kubernetes Engine master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).
	GkeMasterCluster pulumi.StringPtrInput `pulumi:"gkeMasterCluster"`
	// A Compute Engine instance URI.
	Instance pulumi.StringPtrInput `pulumi:"instance"`
	// The IP address of the endpoint, which can be an external or internal IP. An IPv6 address is only allowed when the test's destination is a [global load balancer VIP](https://cloud.google.com/load-balancing/docs/load-balancing-overview).
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// A Compute Engine network URI.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.
	NetworkType EndpointNetworkTypePtrInput `pulumi:"networkType"`
	// The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID: 1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (EndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Endpoint)(nil)).Elem()
}

func (i EndpointArgs) ToEndpointOutput() EndpointOutput {
	return i.ToEndpointOutputWithContext(context.Background())
}

func (i EndpointArgs) ToEndpointOutputWithContext(ctx context.Context) EndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointOutput)
}

// Source or destination of the Connectivity Test.
type EndpointOutput struct{ *pulumi.OutputState }

func (EndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Endpoint)(nil)).Elem()
}

func (o EndpointOutput) ToEndpointOutput() EndpointOutput {
	return o
}

func (o EndpointOutput) ToEndpointOutputWithContext(ctx context.Context) EndpointOutput {
	return o
}

// An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions).
func (o EndpointOutput) AppEngineVersion() AppEngineVersionEndpointPtrOutput {
	return o.ApplyT(func(v Endpoint) *AppEngineVersionEndpoint { return v.AppEngineVersion }).(AppEngineVersionEndpointPtrOutput)
}

// A [Cloud Function](https://cloud.google.com/functions).
func (o EndpointOutput) CloudFunction() CloudFunctionEndpointPtrOutput {
	return o.ApplyT(func(v Endpoint) *CloudFunctionEndpoint { return v.CloudFunction }).(CloudFunctionEndpointPtrOutput)
}

// A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get)
func (o EndpointOutput) CloudRunRevision() CloudRunRevisionEndpointPtrOutput {
	return o.ApplyT(func(v Endpoint) *CloudRunRevisionEndpoint { return v.CloudRunRevision }).(CloudRunRevisionEndpointPtrOutput)
}

// A [Cloud SQL](https://cloud.google.com/sql) instance URI.
func (o EndpointOutput) CloudSqlInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Endpoint) *string { return v.CloudSqlInstance }).(pulumi.StringPtrOutput)
}

// A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format: projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}
func (o EndpointOutput) ForwardingRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Endpoint) *string { return v.ForwardingRule }).(pulumi.StringPtrOutput)
}

// A cluster URI for [Google Kubernetes Engine master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).
func (o EndpointOutput) GkeMasterCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Endpoint) *string { return v.GkeMasterCluster }).(pulumi.StringPtrOutput)
}

// A Compute Engine instance URI.
func (o EndpointOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Endpoint) *string { return v.Instance }).(pulumi.StringPtrOutput)
}

// The IP address of the endpoint, which can be an external or internal IP. An IPv6 address is only allowed when the test's destination is a [global load balancer VIP](https://cloud.google.com/load-balancing/docs/load-balancing-overview).
func (o EndpointOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Endpoint) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// A Compute Engine network URI.
func (o EndpointOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Endpoint) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.
func (o EndpointOutput) NetworkType() EndpointNetworkTypePtrOutput {
	return o.ApplyT(func(v Endpoint) *EndpointNetworkType { return v.NetworkType }).(EndpointNetworkTypePtrOutput)
}

// The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.
func (o EndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Endpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID: 1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.
func (o EndpointOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Endpoint) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// For display only. The specification of the endpoints for the test. EndpointInfo is derived from source and destination Endpoint and validated by the backend data plane model.
type EndpointInfoResponse struct {
	// Destination IP address.
	DestinationIp string `pulumi:"destinationIp"`
	// URI of the network where this packet is sent to.
	DestinationNetworkUri string `pulumi:"destinationNetworkUri"`
	// Destination port. Only valid when protocol is TCP or UDP.
	DestinationPort int `pulumi:"destinationPort"`
	// IP protocol in string format, for example: "TCP", "UDP", "ICMP".
	Protocol string `pulumi:"protocol"`
	// URI of the source telemetry agent this packet originates from.
	SourceAgentUri string `pulumi:"sourceAgentUri"`
	// Source IP address.
	SourceIp string `pulumi:"sourceIp"`
	// URI of the network where this packet originates from.
	SourceNetworkUri string `pulumi:"sourceNetworkUri"`
	// Source port. Only valid when protocol is TCP or UDP.
	SourcePort int `pulumi:"sourcePort"`
}

// For display only. The specification of the endpoints for the test. EndpointInfo is derived from source and destination Endpoint and validated by the backend data plane model.
type EndpointInfoResponseOutput struct{ *pulumi.OutputState }

func (EndpointInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointInfoResponse)(nil)).Elem()
}

func (o EndpointInfoResponseOutput) ToEndpointInfoResponseOutput() EndpointInfoResponseOutput {
	return o
}

func (o EndpointInfoResponseOutput) ToEndpointInfoResponseOutputWithContext(ctx context.Context) EndpointInfoResponseOutput {
	return o
}

// Destination IP address.
func (o EndpointInfoResponseOutput) DestinationIp() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointInfoResponse) string { return v.DestinationIp }).(pulumi.StringOutput)
}

// URI of the network where this packet is sent to.
func (o EndpointInfoResponseOutput) DestinationNetworkUri() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointInfoResponse) string { return v.DestinationNetworkUri }).(pulumi.StringOutput)
}

// Destination port. Only valid when protocol is TCP or UDP.
func (o EndpointInfoResponseOutput) DestinationPort() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointInfoResponse) int { return v.DestinationPort }).(pulumi.IntOutput)
}

// IP protocol in string format, for example: "TCP", "UDP", "ICMP".
func (o EndpointInfoResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointInfoResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// URI of the source telemetry agent this packet originates from.
func (o EndpointInfoResponseOutput) SourceAgentUri() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointInfoResponse) string { return v.SourceAgentUri }).(pulumi.StringOutput)
}

// Source IP address.
func (o EndpointInfoResponseOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointInfoResponse) string { return v.SourceIp }).(pulumi.StringOutput)
}

// URI of the network where this packet originates from.
func (o EndpointInfoResponseOutput) SourceNetworkUri() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointInfoResponse) string { return v.SourceNetworkUri }).(pulumi.StringOutput)
}

// Source port. Only valid when protocol is TCP or UDP.
func (o EndpointInfoResponseOutput) SourcePort() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointInfoResponse) int { return v.SourcePort }).(pulumi.IntOutput)
}

// Source or destination of the Connectivity Test.
type EndpointResponse struct {
	// An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions).
	AppEngineVersion AppEngineVersionEndpointResponse `pulumi:"appEngineVersion"`
	// A [Cloud Function](https://cloud.google.com/functions).
	CloudFunction CloudFunctionEndpointResponse `pulumi:"cloudFunction"`
	// A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get)
	CloudRunRevision CloudRunRevisionEndpointResponse `pulumi:"cloudRunRevision"`
	// A [Cloud SQL](https://cloud.google.com/sql) instance URI.
	CloudSqlInstance string `pulumi:"cloudSqlInstance"`
	// A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format: projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}
	ForwardingRule string `pulumi:"forwardingRule"`
	// Specifies the type of the target of the forwarding rule.
	ForwardingRuleTarget string `pulumi:"forwardingRuleTarget"`
	// A cluster URI for [Google Kubernetes Engine master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).
	GkeMasterCluster string `pulumi:"gkeMasterCluster"`
	// A Compute Engine instance URI.
	Instance string `pulumi:"instance"`
	// The IP address of the endpoint, which can be an external or internal IP. An IPv6 address is only allowed when the test's destination is a [global load balancer VIP](https://cloud.google.com/load-balancing/docs/load-balancing-overview).
	IpAddress string `pulumi:"ipAddress"`
	// ID of the load balancer the forwarding rule points to. Empty for forwarding rules not related to load balancers.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// Type of the load balancer the forwarding rule points to.
	LoadBalancerType string `pulumi:"loadBalancerType"`
	// A Compute Engine network URI.
	Network string `pulumi:"network"`
	// Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.
	NetworkType string `pulumi:"networkType"`
	// The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.
	Port int `pulumi:"port"`
	// Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID: 1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.
	Project string `pulumi:"project"`
}

// Source or destination of the Connectivity Test.
type EndpointResponseOutput struct{ *pulumi.OutputState }

func (EndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointResponse)(nil)).Elem()
}

func (o EndpointResponseOutput) ToEndpointResponseOutput() EndpointResponseOutput {
	return o
}

func (o EndpointResponseOutput) ToEndpointResponseOutputWithContext(ctx context.Context) EndpointResponseOutput {
	return o
}

// An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions).
func (o EndpointResponseOutput) AppEngineVersion() AppEngineVersionEndpointResponseOutput {
	return o.ApplyT(func(v EndpointResponse) AppEngineVersionEndpointResponse { return v.AppEngineVersion }).(AppEngineVersionEndpointResponseOutput)
}

// A [Cloud Function](https://cloud.google.com/functions).
func (o EndpointResponseOutput) CloudFunction() CloudFunctionEndpointResponseOutput {
	return o.ApplyT(func(v EndpointResponse) CloudFunctionEndpointResponse { return v.CloudFunction }).(CloudFunctionEndpointResponseOutput)
}

// A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get)
func (o EndpointResponseOutput) CloudRunRevision() CloudRunRevisionEndpointResponseOutput {
	return o.ApplyT(func(v EndpointResponse) CloudRunRevisionEndpointResponse { return v.CloudRunRevision }).(CloudRunRevisionEndpointResponseOutput)
}

// A [Cloud SQL](https://cloud.google.com/sql) instance URI.
func (o EndpointResponseOutput) CloudSqlInstance() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointResponse) string { return v.CloudSqlInstance }).(pulumi.StringOutput)
}

// A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format: projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}
func (o EndpointResponseOutput) ForwardingRule() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointResponse) string { return v.ForwardingRule }).(pulumi.StringOutput)
}

// Specifies the type of the target of the forwarding rule.
func (o EndpointResponseOutput) ForwardingRuleTarget() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointResponse) string { return v.ForwardingRuleTarget }).(pulumi.StringOutput)
}

// A cluster URI for [Google Kubernetes Engine master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).
func (o EndpointResponseOutput) GkeMasterCluster() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointResponse) string { return v.GkeMasterCluster }).(pulumi.StringOutput)
}

// A Compute Engine instance URI.
func (o EndpointResponseOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointResponse) string { return v.Instance }).(pulumi.StringOutput)
}

// The IP address of the endpoint, which can be an external or internal IP. An IPv6 address is only allowed when the test's destination is a [global load balancer VIP](https://cloud.google.com/load-balancing/docs/load-balancing-overview).
func (o EndpointResponseOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointResponse) string { return v.IpAddress }).(pulumi.StringOutput)
}

// ID of the load balancer the forwarding rule points to. Empty for forwarding rules not related to load balancers.
func (o EndpointResponseOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointResponse) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// Type of the load balancer the forwarding rule points to.
func (o EndpointResponseOutput) LoadBalancerType() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointResponse) string { return v.LoadBalancerType }).(pulumi.StringOutput)
}

// A Compute Engine network URI.
func (o EndpointResponseOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointResponse) string { return v.Network }).(pulumi.StringOutput)
}

// Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.
func (o EndpointResponseOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointResponse) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.
func (o EndpointResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointResponse) int { return v.Port }).(pulumi.IntOutput)
}

// Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID: 1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.
func (o EndpointResponseOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointResponse) string { return v.Project }).(pulumi.StringOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type Expr struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression *string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// ExprInput is an input type that accepts ExprArgs and ExprOutput values.
// You can construct a concrete instance of `ExprInput` via:
//
//	ExprArgs{...}
type ExprInput interface {
	pulumi.Input

	ToExprOutput() ExprOutput
	ToExprOutputWithContext(context.Context) ExprOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (ExprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (i ExprArgs) ToExprOutput() ExprOutput {
	return i.ToExprOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput)
}

func (i ExprArgs) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput).ToExprPtrOutputWithContext(ctx)
}

// ExprPtrInput is an input type that accepts ExprArgs, ExprPtr and ExprPtrOutput values.
// You can construct a concrete instance of `ExprPtrInput` via:
//
//	        ExprArgs{...}
//
//	or:
//
//	        nil
type ExprPtrInput interface {
	pulumi.Input

	ToExprPtrOutput() ExprPtrOutput
	ToExprPtrOutputWithContext(context.Context) ExprPtrOutput
}

type exprPtrType ExprArgs

func ExprPtr(v *ExprArgs) ExprPtrInput {
	return (*exprPtrType)(v)
}

func (*exprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (i *exprPtrType) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i *exprPtrType) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprOutput struct{ *pulumi.OutputState }

func (ExprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (o ExprOutput) ToExprOutput() ExprOutput {
	return o
}

func (o ExprOutput) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return o
}

func (o ExprOutput) ToExprPtrOutput() ExprPtrOutput {
	return o.ToExprPtrOutputWithContext(context.Background())
}

func (o ExprOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Expr) *Expr {
		return &v
	}).(ExprPtrOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ExprPtrOutput struct{ *pulumi.OutputState }

func (ExprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (o ExprPtrOutput) ToExprPtrOutput() ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) Elem() ExprOutput {
	return o.ApplyT(func(v *Expr) Expr {
		if v != nil {
			return *v
		}
		var ret Expr
		return ret
	}).(ExprOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponse struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title string `pulumi:"title"`
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponseOutput struct{ *pulumi.OutputState }

func (ExprResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExprResponse)(nil)).Elem()
}

func (o ExprResponseOutput) ToExprResponseOutput() ExprResponseOutput {
	return o
}

func (o ExprResponseOutput) ToExprResponseOutputWithContext(ctx context.Context) ExprResponseOutput {
	return o
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Title }).(pulumi.StringOutput)
}

// For display only. Metadata associated with a VPC firewall rule, an implied VPC firewall rule, or a hierarchical firewall policy rule.
type FirewallInfoResponse struct {
	// Possible values: ALLOW, DENY
	Action string `pulumi:"action"`
	// Possible values: INGRESS, EGRESS
	Direction string `pulumi:"direction"`
	// The display name of the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
	DisplayName string `pulumi:"displayName"`
	// The firewall rule's type.
	FirewallRuleType string `pulumi:"firewallRuleType"`
	// The URI of the VPC network that the firewall rule is associated with. This field is not applicable to hierarchical firewall policy rules.
	NetworkUri string `pulumi:"networkUri"`
	// The hierarchical firewall policy that this rule is associated with. This field is not applicable to VPC firewall rules.
	Policy string `pulumi:"policy"`
	// The priority of the firewall rule.
	Priority int `pulumi:"priority"`
	// The target service accounts specified by the firewall rule.
	TargetServiceAccounts []string `pulumi:"targetServiceAccounts"`
	// The target tags defined by the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
	TargetTags []string `pulumi:"targetTags"`
	// The URI of the VPC firewall rule. This field is not applicable to implied firewall rules or hierarchical firewall policy rules.
	Uri string `pulumi:"uri"`
}

// For display only. Metadata associated with a VPC firewall rule, an implied VPC firewall rule, or a hierarchical firewall policy rule.
type FirewallInfoResponseOutput struct{ *pulumi.OutputState }

func (FirewallInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInfoResponse)(nil)).Elem()
}

func (o FirewallInfoResponseOutput) ToFirewallInfoResponseOutput() FirewallInfoResponseOutput {
	return o
}

func (o FirewallInfoResponseOutput) ToFirewallInfoResponseOutputWithContext(ctx context.Context) FirewallInfoResponseOutput {
	return o
}

// Possible values: ALLOW, DENY
func (o FirewallInfoResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInfoResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Possible values: INGRESS, EGRESS
func (o FirewallInfoResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInfoResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// The display name of the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
func (o FirewallInfoResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInfoResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The firewall rule's type.
func (o FirewallInfoResponseOutput) FirewallRuleType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInfoResponse) string { return v.FirewallRuleType }).(pulumi.StringOutput)
}

// The URI of the VPC network that the firewall rule is associated with. This field is not applicable to hierarchical firewall policy rules.
func (o FirewallInfoResponseOutput) NetworkUri() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInfoResponse) string { return v.NetworkUri }).(pulumi.StringOutput)
}

// The hierarchical firewall policy that this rule is associated with. This field is not applicable to VPC firewall rules.
func (o FirewallInfoResponseOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInfoResponse) string { return v.Policy }).(pulumi.StringOutput)
}

// The priority of the firewall rule.
func (o FirewallInfoResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v FirewallInfoResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// The target service accounts specified by the firewall rule.
func (o FirewallInfoResponseOutput) TargetServiceAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallInfoResponse) []string { return v.TargetServiceAccounts }).(pulumi.StringArrayOutput)
}

// The target tags defined by the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
func (o FirewallInfoResponseOutput) TargetTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallInfoResponse) []string { return v.TargetTags }).(pulumi.StringArrayOutput)
}

// The URI of the VPC firewall rule. This field is not applicable to implied firewall rules or hierarchical firewall policy rules.
func (o FirewallInfoResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInfoResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Details of the final state "forward" and associated resource.
type ForwardInfoResponse struct {
	// URI of the resource that the packet is forwarded to.
	ResourceUri string `pulumi:"resourceUri"`
	// Target type where this packet is forwarded to.
	Target string `pulumi:"target"`
}

// Details of the final state "forward" and associated resource.
type ForwardInfoResponseOutput struct{ *pulumi.OutputState }

func (ForwardInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardInfoResponse)(nil)).Elem()
}

func (o ForwardInfoResponseOutput) ToForwardInfoResponseOutput() ForwardInfoResponseOutput {
	return o
}

func (o ForwardInfoResponseOutput) ToForwardInfoResponseOutputWithContext(ctx context.Context) ForwardInfoResponseOutput {
	return o
}

// URI of the resource that the packet is forwarded to.
func (o ForwardInfoResponseOutput) ResourceUri() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardInfoResponse) string { return v.ResourceUri }).(pulumi.StringOutput)
}

// Target type where this packet is forwarded to.
func (o ForwardInfoResponseOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardInfoResponse) string { return v.Target }).(pulumi.StringOutput)
}

// For display only. Metadata associated with a Compute Engine forwarding rule.
type ForwardingRuleInfoResponse struct {
	// Name of a Compute Engine forwarding rule.
	DisplayName string `pulumi:"displayName"`
	// Port range defined in the forwarding rule that matches the test.
	MatchedPortRange string `pulumi:"matchedPortRange"`
	// Protocol defined in the forwarding rule that matches the test.
	MatchedProtocol string `pulumi:"matchedProtocol"`
	// Network URI. Only valid for Internal Load Balancer.
	NetworkUri string `pulumi:"networkUri"`
	// Target type of the forwarding rule.
	Target string `pulumi:"target"`
	// URI of a Compute Engine forwarding rule.
	Uri string `pulumi:"uri"`
	// VIP of the forwarding rule.
	Vip string `pulumi:"vip"`
}

// For display only. Metadata associated with a Compute Engine forwarding rule.
type ForwardingRuleInfoResponseOutput struct{ *pulumi.OutputState }

func (ForwardingRuleInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleInfoResponse)(nil)).Elem()
}

func (o ForwardingRuleInfoResponseOutput) ToForwardingRuleInfoResponseOutput() ForwardingRuleInfoResponseOutput {
	return o
}

func (o ForwardingRuleInfoResponseOutput) ToForwardingRuleInfoResponseOutputWithContext(ctx context.Context) ForwardingRuleInfoResponseOutput {
	return o
}

// Name of a Compute Engine forwarding rule.
func (o ForwardingRuleInfoResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingRuleInfoResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Port range defined in the forwarding rule that matches the test.
func (o ForwardingRuleInfoResponseOutput) MatchedPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingRuleInfoResponse) string { return v.MatchedPortRange }).(pulumi.StringOutput)
}

// Protocol defined in the forwarding rule that matches the test.
func (o ForwardingRuleInfoResponseOutput) MatchedProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingRuleInfoResponse) string { return v.MatchedProtocol }).(pulumi.StringOutput)
}

// Network URI. Only valid for Internal Load Balancer.
func (o ForwardingRuleInfoResponseOutput) NetworkUri() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingRuleInfoResponse) string { return v.NetworkUri }).(pulumi.StringOutput)
}

// Target type of the forwarding rule.
func (o ForwardingRuleInfoResponseOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingRuleInfoResponse) string { return v.Target }).(pulumi.StringOutput)
}

// URI of a Compute Engine forwarding rule.
func (o ForwardingRuleInfoResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingRuleInfoResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// VIP of the forwarding rule.
func (o ForwardingRuleInfoResponseOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingRuleInfoResponse) string { return v.Vip }).(pulumi.StringOutput)
}

// For display only. Metadata associated with a Google Kubernetes Engine (GKE) cluster master.
type GKEMasterInfoResponse struct {
	// URI of a GKE cluster network.
	ClusterNetworkUri string `pulumi:"clusterNetworkUri"`
	// URI of a GKE cluster.
	ClusterUri string `pulumi:"clusterUri"`
	// External IP address of a GKE cluster master.
	ExternalIp string `pulumi:"externalIp"`
	// Internal IP address of a GKE cluster master.
	InternalIp string `pulumi:"internalIp"`
}

// For display only. Metadata associated with a Google Kubernetes Engine (GKE) cluster master.
type GKEMasterInfoResponseOutput struct{ *pulumi.OutputState }

func (GKEMasterInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GKEMasterInfoResponse)(nil)).Elem()
}

func (o GKEMasterInfoResponseOutput) ToGKEMasterInfoResponseOutput() GKEMasterInfoResponseOutput {
	return o
}

func (o GKEMasterInfoResponseOutput) ToGKEMasterInfoResponseOutputWithContext(ctx context.Context) GKEMasterInfoResponseOutput {
	return o
}

// URI of a GKE cluster network.
func (o GKEMasterInfoResponseOutput) ClusterNetworkUri() pulumi.StringOutput {
	return o.ApplyT(func(v GKEMasterInfoResponse) string { return v.ClusterNetworkUri }).(pulumi.StringOutput)
}

// URI of a GKE cluster.
func (o GKEMasterInfoResponseOutput) ClusterUri() pulumi.StringOutput {
	return o.ApplyT(func(v GKEMasterInfoResponse) string { return v.ClusterUri }).(pulumi.StringOutput)
}

// External IP address of a GKE cluster master.
func (o GKEMasterInfoResponseOutput) ExternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v GKEMasterInfoResponse) string { return v.ExternalIp }).(pulumi.StringOutput)
}

// Internal IP address of a GKE cluster master.
func (o GKEMasterInfoResponseOutput) InternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v GKEMasterInfoResponse) string { return v.InternalIp }).(pulumi.StringOutput)
}

// For display only. Details of a Google Service sending packets to a VPC network. Although the source IP might be a publicly routable address, some Google Services use special routes within Google production infrastructure to reach Compute Engine Instances. https://cloud.google.com/vpc/docs/routes#special_return_paths
type GoogleServiceInfoResponse struct {
	// Recognized type of a Google Service.
	GoogleServiceType string `pulumi:"googleServiceType"`
	// Source IP address.
	SourceIp string `pulumi:"sourceIp"`
}

// For display only. Details of a Google Service sending packets to a VPC network. Although the source IP might be a publicly routable address, some Google Services use special routes within Google production infrastructure to reach Compute Engine Instances. https://cloud.google.com/vpc/docs/routes#special_return_paths
type GoogleServiceInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleServiceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleServiceInfoResponse)(nil)).Elem()
}

func (o GoogleServiceInfoResponseOutput) ToGoogleServiceInfoResponseOutput() GoogleServiceInfoResponseOutput {
	return o
}

func (o GoogleServiceInfoResponseOutput) ToGoogleServiceInfoResponseOutputWithContext(ctx context.Context) GoogleServiceInfoResponseOutput {
	return o
}

// Recognized type of a Google Service.
func (o GoogleServiceInfoResponseOutput) GoogleServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleServiceInfoResponse) string { return v.GoogleServiceType }).(pulumi.StringOutput)
}

// Source IP address.
func (o GoogleServiceInfoResponseOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleServiceInfoResponse) string { return v.SourceIp }).(pulumi.StringOutput)
}

// For display only. Metadata associated with a Compute Engine instance.
type InstanceInfoResponse struct {
	// Name of a Compute Engine instance.
	DisplayName string `pulumi:"displayName"`
	// External IP address of the network interface.
	ExternalIp string `pulumi:"externalIp"`
	// Name of the network interface of a Compute Engine instance.
	Interface string `pulumi:"interface"`
	// Internal IP address of the network interface.
	InternalIp string `pulumi:"internalIp"`
	// Network tags configured on the instance.
	NetworkTags []string `pulumi:"networkTags"`
	// URI of a Compute Engine network.
	NetworkUri string `pulumi:"networkUri"`
	// Service account authorized for the instance.
	ServiceAccount string `pulumi:"serviceAccount"`
	// URI of a Compute Engine instance.
	Uri string `pulumi:"uri"`
}

// For display only. Metadata associated with a Compute Engine instance.
type InstanceInfoResponseOutput struct{ *pulumi.OutputState }

func (InstanceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceInfoResponse)(nil)).Elem()
}

func (o InstanceInfoResponseOutput) ToInstanceInfoResponseOutput() InstanceInfoResponseOutput {
	return o
}

func (o InstanceInfoResponseOutput) ToInstanceInfoResponseOutputWithContext(ctx context.Context) InstanceInfoResponseOutput {
	return o
}

// Name of a Compute Engine instance.
func (o InstanceInfoResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceInfoResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// External IP address of the network interface.
func (o InstanceInfoResponseOutput) ExternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceInfoResponse) string { return v.ExternalIp }).(pulumi.StringOutput)
}

// Name of the network interface of a Compute Engine instance.
func (o InstanceInfoResponseOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceInfoResponse) string { return v.Interface }).(pulumi.StringOutput)
}

// Internal IP address of the network interface.
func (o InstanceInfoResponseOutput) InternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceInfoResponse) string { return v.InternalIp }).(pulumi.StringOutput)
}

// Network tags configured on the instance.
func (o InstanceInfoResponseOutput) NetworkTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceInfoResponse) []string { return v.NetworkTags }).(pulumi.StringArrayOutput)
}

// URI of a Compute Engine network.
func (o InstanceInfoResponseOutput) NetworkUri() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceInfoResponse) string { return v.NetworkUri }).(pulumi.StringOutput)
}

// Service account authorized for the instance.
func (o InstanceInfoResponseOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceInfoResponse) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// URI of a Compute Engine instance.
func (o InstanceInfoResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceInfoResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Describes measured latency distribution.
type LatencyDistributionResponse struct {
	// Representative latency percentiles.
	LatencyPercentiles []LatencyPercentileResponse `pulumi:"latencyPercentiles"`
}

// Describes measured latency distribution.
type LatencyDistributionResponseOutput struct{ *pulumi.OutputState }

func (LatencyDistributionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LatencyDistributionResponse)(nil)).Elem()
}

func (o LatencyDistributionResponseOutput) ToLatencyDistributionResponseOutput() LatencyDistributionResponseOutput {
	return o
}

func (o LatencyDistributionResponseOutput) ToLatencyDistributionResponseOutputWithContext(ctx context.Context) LatencyDistributionResponseOutput {
	return o
}

// Representative latency percentiles.
func (o LatencyDistributionResponseOutput) LatencyPercentiles() LatencyPercentileResponseArrayOutput {
	return o.ApplyT(func(v LatencyDistributionResponse) []LatencyPercentileResponse { return v.LatencyPercentiles }).(LatencyPercentileResponseArrayOutput)
}

// Latency percentile rank and value.
type LatencyPercentileResponse struct {
	// percent-th percentile of latency observed, in microseconds. Fraction of percent/100 of samples have latency lower or equal to the value of this field.
	LatencyMicros string `pulumi:"latencyMicros"`
	// Percentage of samples this data point applies to.
	Percent int `pulumi:"percent"`
}

// Latency percentile rank and value.
type LatencyPercentileResponseOutput struct{ *pulumi.OutputState }

func (LatencyPercentileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LatencyPercentileResponse)(nil)).Elem()
}

func (o LatencyPercentileResponseOutput) ToLatencyPercentileResponseOutput() LatencyPercentileResponseOutput {
	return o
}

func (o LatencyPercentileResponseOutput) ToLatencyPercentileResponseOutputWithContext(ctx context.Context) LatencyPercentileResponseOutput {
	return o
}

// percent-th percentile of latency observed, in microseconds. Fraction of percent/100 of samples have latency lower or equal to the value of this field.
func (o LatencyPercentileResponseOutput) LatencyMicros() pulumi.StringOutput {
	return o.ApplyT(func(v LatencyPercentileResponse) string { return v.LatencyMicros }).(pulumi.StringOutput)
}

// Percentage of samples this data point applies to.
func (o LatencyPercentileResponseOutput) Percent() pulumi.IntOutput {
	return o.ApplyT(func(v LatencyPercentileResponse) int { return v.Percent }).(pulumi.IntOutput)
}

type LatencyPercentileResponseArrayOutput struct{ *pulumi.OutputState }

func (LatencyPercentileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LatencyPercentileResponse)(nil)).Elem()
}

func (o LatencyPercentileResponseArrayOutput) ToLatencyPercentileResponseArrayOutput() LatencyPercentileResponseArrayOutput {
	return o
}

func (o LatencyPercentileResponseArrayOutput) ToLatencyPercentileResponseArrayOutputWithContext(ctx context.Context) LatencyPercentileResponseArrayOutput {
	return o
}

func (o LatencyPercentileResponseArrayOutput) Index(i pulumi.IntInput) LatencyPercentileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LatencyPercentileResponse {
		return vs[0].([]LatencyPercentileResponse)[vs[1].(int)]
	}).(LatencyPercentileResponseOutput)
}

// For display only. Metadata associated with a specific load balancer backend.
type LoadBalancerBackendResponse struct {
	// Name of a Compute Engine instance or network endpoint.
	DisplayName string `pulumi:"displayName"`
	// A list of firewall rule URIs allowing probes from health check IP ranges.
	HealthCheckAllowingFirewallRules []string `pulumi:"healthCheckAllowingFirewallRules"`
	// A list of firewall rule URIs blocking probes from health check IP ranges.
	HealthCheckBlockingFirewallRules []string `pulumi:"healthCheckBlockingFirewallRules"`
	// State of the health check firewall configuration.
	HealthCheckFirewallState string `pulumi:"healthCheckFirewallState"`
	// URI of a Compute Engine instance or network endpoint.
	Uri string `pulumi:"uri"`
}

// For display only. Metadata associated with a specific load balancer backend.
type LoadBalancerBackendResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendResponse)(nil)).Elem()
}

func (o LoadBalancerBackendResponseOutput) ToLoadBalancerBackendResponseOutput() LoadBalancerBackendResponseOutput {
	return o
}

func (o LoadBalancerBackendResponseOutput) ToLoadBalancerBackendResponseOutputWithContext(ctx context.Context) LoadBalancerBackendResponseOutput {
	return o
}

// Name of a Compute Engine instance or network endpoint.
func (o LoadBalancerBackendResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerBackendResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A list of firewall rule URIs allowing probes from health check IP ranges.
func (o LoadBalancerBackendResponseOutput) HealthCheckAllowingFirewallRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadBalancerBackendResponse) []string { return v.HealthCheckAllowingFirewallRules }).(pulumi.StringArrayOutput)
}

// A list of firewall rule URIs blocking probes from health check IP ranges.
func (o LoadBalancerBackendResponseOutput) HealthCheckBlockingFirewallRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadBalancerBackendResponse) []string { return v.HealthCheckBlockingFirewallRules }).(pulumi.StringArrayOutput)
}

// State of the health check firewall configuration.
func (o LoadBalancerBackendResponseOutput) HealthCheckFirewallState() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerBackendResponse) string { return v.HealthCheckFirewallState }).(pulumi.StringOutput)
}

// URI of a Compute Engine instance or network endpoint.
func (o LoadBalancerBackendResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerBackendResponse) string { return v.Uri }).(pulumi.StringOutput)
}

type LoadBalancerBackendResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendResponse)(nil)).Elem()
}

func (o LoadBalancerBackendResponseArrayOutput) ToLoadBalancerBackendResponseArrayOutput() LoadBalancerBackendResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendResponseArrayOutput) ToLoadBalancerBackendResponseArrayOutputWithContext(ctx context.Context) LoadBalancerBackendResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancerBackendResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerBackendResponse {
		return vs[0].([]LoadBalancerBackendResponse)[vs[1].(int)]
	}).(LoadBalancerBackendResponseOutput)
}

// For display only. Metadata associated with a load balancer.
type LoadBalancerInfoResponse struct {
	// Type of load balancer's backend configuration.
	BackendType string `pulumi:"backendType"`
	// Backend configuration URI.
	BackendUri string `pulumi:"backendUri"`
	// Information for the loadbalancer backends.
	Backends []LoadBalancerBackendResponse `pulumi:"backends"`
	// URI of the health check for the load balancer. Deprecated and no longer populated as different load balancer backends might have different health checks.
	//
	// Deprecated: URI of the health check for the load balancer. Deprecated and no longer populated as different load balancer backends might have different health checks.
	HealthCheckUri string `pulumi:"healthCheckUri"`
	// Type of the load balancer.
	LoadBalancerType string `pulumi:"loadBalancerType"`
}

// For display only. Metadata associated with a load balancer.
type LoadBalancerInfoResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerInfoResponse)(nil)).Elem()
}

func (o LoadBalancerInfoResponseOutput) ToLoadBalancerInfoResponseOutput() LoadBalancerInfoResponseOutput {
	return o
}

func (o LoadBalancerInfoResponseOutput) ToLoadBalancerInfoResponseOutputWithContext(ctx context.Context) LoadBalancerInfoResponseOutput {
	return o
}

// Type of load balancer's backend configuration.
func (o LoadBalancerInfoResponseOutput) BackendType() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerInfoResponse) string { return v.BackendType }).(pulumi.StringOutput)
}

// Backend configuration URI.
func (o LoadBalancerInfoResponseOutput) BackendUri() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerInfoResponse) string { return v.BackendUri }).(pulumi.StringOutput)
}

// Information for the loadbalancer backends.
func (o LoadBalancerInfoResponseOutput) Backends() LoadBalancerBackendResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerInfoResponse) []LoadBalancerBackendResponse { return v.Backends }).(LoadBalancerBackendResponseArrayOutput)
}

// URI of the health check for the load balancer. Deprecated and no longer populated as different load balancer backends might have different health checks.
//
// Deprecated: URI of the health check for the load balancer. Deprecated and no longer populated as different load balancer backends might have different health checks.
func (o LoadBalancerInfoResponseOutput) HealthCheckUri() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerInfoResponse) string { return v.HealthCheckUri }).(pulumi.StringOutput)
}

// Type of the load balancer.
func (o LoadBalancerInfoResponseOutput) LoadBalancerType() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerInfoResponse) string { return v.LoadBalancerType }).(pulumi.StringOutput)
}

// For display only. Metadata associated with a Compute Engine network.
type NetworkInfoResponse struct {
	// Name of a Compute Engine network.
	DisplayName string `pulumi:"displayName"`
	// The IP range that matches the test.
	MatchedIpRange string `pulumi:"matchedIpRange"`
	// URI of a Compute Engine network.
	Uri string `pulumi:"uri"`
}

// For display only. Metadata associated with a Compute Engine network.
type NetworkInfoResponseOutput struct{ *pulumi.OutputState }

func (NetworkInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInfoResponse)(nil)).Elem()
}

func (o NetworkInfoResponseOutput) ToNetworkInfoResponseOutput() NetworkInfoResponseOutput {
	return o
}

func (o NetworkInfoResponseOutput) ToNetworkInfoResponseOutputWithContext(ctx context.Context) NetworkInfoResponseOutput {
	return o
}

// Name of a Compute Engine network.
func (o NetworkInfoResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInfoResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The IP range that matches the test.
func (o NetworkInfoResponseOutput) MatchedIpRange() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInfoResponse) string { return v.MatchedIpRange }).(pulumi.StringOutput)
}

// URI of a Compute Engine network.
func (o NetworkInfoResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInfoResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Results of active probing from the last run of the test.
type ProbingDetailsResponse struct {
	// The reason probing was aborted.
	AbortCause string `pulumi:"abortCause"`
	// The EdgeLocation from which a packet destined for/originating from the internet will egress/ingress the Google network. This will only be populated for a connectivity test which has an internet destination/source address. The absence of this field *must not* be used as an indication that the destination/source is part of the Google network.
	DestinationEgressLocation EdgeLocationResponse `pulumi:"destinationEgressLocation"`
	// The source and destination endpoints derived from the test input and used for active probing.
	EndpointInfo EndpointInfoResponse `pulumi:"endpointInfo"`
	// Details about an internal failure or the cancellation of active probing.
	Error StatusResponse `pulumi:"error"`
	// Latency as measured by active probing in one direction: from the source to the destination endpoint.
	ProbingLatency LatencyDistributionResponse `pulumi:"probingLatency"`
	// The overall result of active probing.
	Result string `pulumi:"result"`
	// Number of probes sent.
	SentProbeCount int `pulumi:"sentProbeCount"`
	// Number of probes that reached the destination.
	SuccessfulProbeCount int `pulumi:"successfulProbeCount"`
	// The time that reachability was assessed through active probing.
	VerifyTime string `pulumi:"verifyTime"`
}

// Results of active probing from the last run of the test.
type ProbingDetailsResponseOutput struct{ *pulumi.OutputState }

func (ProbingDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbingDetailsResponse)(nil)).Elem()
}

func (o ProbingDetailsResponseOutput) ToProbingDetailsResponseOutput() ProbingDetailsResponseOutput {
	return o
}

func (o ProbingDetailsResponseOutput) ToProbingDetailsResponseOutputWithContext(ctx context.Context) ProbingDetailsResponseOutput {
	return o
}

// The reason probing was aborted.
func (o ProbingDetailsResponseOutput) AbortCause() pulumi.StringOutput {
	return o.ApplyT(func(v ProbingDetailsResponse) string { return v.AbortCause }).(pulumi.StringOutput)
}

// The EdgeLocation from which a packet destined for/originating from the internet will egress/ingress the Google network. This will only be populated for a connectivity test which has an internet destination/source address. The absence of this field *must not* be used as an indication that the destination/source is part of the Google network.
func (o ProbingDetailsResponseOutput) DestinationEgressLocation() EdgeLocationResponseOutput {
	return o.ApplyT(func(v ProbingDetailsResponse) EdgeLocationResponse { return v.DestinationEgressLocation }).(EdgeLocationResponseOutput)
}

// The source and destination endpoints derived from the test input and used for active probing.
func (o ProbingDetailsResponseOutput) EndpointInfo() EndpointInfoResponseOutput {
	return o.ApplyT(func(v ProbingDetailsResponse) EndpointInfoResponse { return v.EndpointInfo }).(EndpointInfoResponseOutput)
}

// Details about an internal failure or the cancellation of active probing.
func (o ProbingDetailsResponseOutput) Error() StatusResponseOutput {
	return o.ApplyT(func(v ProbingDetailsResponse) StatusResponse { return v.Error }).(StatusResponseOutput)
}

// Latency as measured by active probing in one direction: from the source to the destination endpoint.
func (o ProbingDetailsResponseOutput) ProbingLatency() LatencyDistributionResponseOutput {
	return o.ApplyT(func(v ProbingDetailsResponse) LatencyDistributionResponse { return v.ProbingLatency }).(LatencyDistributionResponseOutput)
}

// The overall result of active probing.
func (o ProbingDetailsResponseOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v ProbingDetailsResponse) string { return v.Result }).(pulumi.StringOutput)
}

// Number of probes sent.
func (o ProbingDetailsResponseOutput) SentProbeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ProbingDetailsResponse) int { return v.SentProbeCount }).(pulumi.IntOutput)
}

// Number of probes that reached the destination.
func (o ProbingDetailsResponseOutput) SuccessfulProbeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ProbingDetailsResponse) int { return v.SuccessfulProbeCount }).(pulumi.IntOutput)
}

// The time that reachability was assessed through active probing.
func (o ProbingDetailsResponseOutput) VerifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v ProbingDetailsResponse) string { return v.VerifyTime }).(pulumi.StringOutput)
}

// Results of the configuration analysis from the last run of the test.
type ReachabilityDetailsResponse struct {
	// The details of a failure or a cancellation of reachability analysis.
	Error StatusResponse `pulumi:"error"`
	// The overall result of the test's configuration analysis.
	Result string `pulumi:"result"`
	// Result may contain a list of traces if a test has multiple possible paths in the network, such as when destination endpoint is a load balancer with multiple backends.
	Traces []TraceResponse `pulumi:"traces"`
	// The time of the configuration analysis.
	VerifyTime string `pulumi:"verifyTime"`
}

// Results of the configuration analysis from the last run of the test.
type ReachabilityDetailsResponseOutput struct{ *pulumi.OutputState }

func (ReachabilityDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReachabilityDetailsResponse)(nil)).Elem()
}

func (o ReachabilityDetailsResponseOutput) ToReachabilityDetailsResponseOutput() ReachabilityDetailsResponseOutput {
	return o
}

func (o ReachabilityDetailsResponseOutput) ToReachabilityDetailsResponseOutputWithContext(ctx context.Context) ReachabilityDetailsResponseOutput {
	return o
}

// The details of a failure or a cancellation of reachability analysis.
func (o ReachabilityDetailsResponseOutput) Error() StatusResponseOutput {
	return o.ApplyT(func(v ReachabilityDetailsResponse) StatusResponse { return v.Error }).(StatusResponseOutput)
}

// The overall result of the test's configuration analysis.
func (o ReachabilityDetailsResponseOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v ReachabilityDetailsResponse) string { return v.Result }).(pulumi.StringOutput)
}

// Result may contain a list of traces if a test has multiple possible paths in the network, such as when destination endpoint is a load balancer with multiple backends.
func (o ReachabilityDetailsResponseOutput) Traces() TraceResponseArrayOutput {
	return o.ApplyT(func(v ReachabilityDetailsResponse) []TraceResponse { return v.Traces }).(TraceResponseArrayOutput)
}

// The time of the configuration analysis.
func (o ReachabilityDetailsResponseOutput) VerifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v ReachabilityDetailsResponse) string { return v.VerifyTime }).(pulumi.StringOutput)
}

// For display only. Metadata associated with a Compute Engine route.
type RouteInfoResponse struct {
	// Destination IP range of the route.
	DestIpRange string `pulumi:"destIpRange"`
	// Destination port ranges of the route. Policy based routes only.
	DestPortRanges []string `pulumi:"destPortRanges"`
	// Name of a route.
	DisplayName string `pulumi:"displayName"`
	// Instance tags of the route.
	InstanceTags []string `pulumi:"instanceTags"`
	// URI of a NCC Hub. NCC_HUB routes only.
	NccHubUri string `pulumi:"nccHubUri"`
	// URI of a NCC Spoke. NCC_HUB routes only.
	NccSpokeUri string `pulumi:"nccSpokeUri"`
	// URI of a Compute Engine network. NETWORK routes only.
	NetworkUri string `pulumi:"networkUri"`
	// Next hop of the route.
	NextHop string `pulumi:"nextHop"`
	// Type of next hop.
	NextHopType string `pulumi:"nextHopType"`
	// Priority of the route.
	Priority int `pulumi:"priority"`
	// Protocols of the route. Policy based routes only.
	Protocols []string `pulumi:"protocols"`
	// Indicates where route is applicable.
	RouteScope string `pulumi:"routeScope"`
	// Type of route.
	RouteType string `pulumi:"routeType"`
	// Source IP address range of the route. Policy based routes only.
	SrcIpRange string `pulumi:"srcIpRange"`
	// Source port ranges of the route. Policy based routes only.
	SrcPortRanges []string `pulumi:"srcPortRanges"`
	// URI of a route. Dynamic, peering static and peering dynamic routes do not have an URI. Advertised route from Google Cloud VPC to on-premises network also does not have an URI.
	Uri string `pulumi:"uri"`
}

// For display only. Metadata associated with a Compute Engine route.
type RouteInfoResponseOutput struct{ *pulumi.OutputState }

func (RouteInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteInfoResponse)(nil)).Elem()
}

func (o RouteInfoResponseOutput) ToRouteInfoResponseOutput() RouteInfoResponseOutput {
	return o
}

func (o RouteInfoResponseOutput) ToRouteInfoResponseOutputWithContext(ctx context.Context) RouteInfoResponseOutput {
	return o
}

// Destination IP range of the route.
func (o RouteInfoResponseOutput) DestIpRange() pulumi.StringOutput {
	return o.ApplyT(func(v RouteInfoResponse) string { return v.DestIpRange }).(pulumi.StringOutput)
}

// Destination port ranges of the route. Policy based routes only.
func (o RouteInfoResponseOutput) DestPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteInfoResponse) []string { return v.DestPortRanges }).(pulumi.StringArrayOutput)
}

// Name of a route.
func (o RouteInfoResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteInfoResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Instance tags of the route.
func (o RouteInfoResponseOutput) InstanceTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteInfoResponse) []string { return v.InstanceTags }).(pulumi.StringArrayOutput)
}

// URI of a NCC Hub. NCC_HUB routes only.
func (o RouteInfoResponseOutput) NccHubUri() pulumi.StringOutput {
	return o.ApplyT(func(v RouteInfoResponse) string { return v.NccHubUri }).(pulumi.StringOutput)
}

// URI of a NCC Spoke. NCC_HUB routes only.
func (o RouteInfoResponseOutput) NccSpokeUri() pulumi.StringOutput {
	return o.ApplyT(func(v RouteInfoResponse) string { return v.NccSpokeUri }).(pulumi.StringOutput)
}

// URI of a Compute Engine network. NETWORK routes only.
func (o RouteInfoResponseOutput) NetworkUri() pulumi.StringOutput {
	return o.ApplyT(func(v RouteInfoResponse) string { return v.NetworkUri }).(pulumi.StringOutput)
}

// Next hop of the route.
func (o RouteInfoResponseOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v RouteInfoResponse) string { return v.NextHop }).(pulumi.StringOutput)
}

// Type of next hop.
func (o RouteInfoResponseOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteInfoResponse) string { return v.NextHopType }).(pulumi.StringOutput)
}

// Priority of the route.
func (o RouteInfoResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RouteInfoResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Protocols of the route. Policy based routes only.
func (o RouteInfoResponseOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteInfoResponse) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// Indicates where route is applicable.
func (o RouteInfoResponseOutput) RouteScope() pulumi.StringOutput {
	return o.ApplyT(func(v RouteInfoResponse) string { return v.RouteScope }).(pulumi.StringOutput)
}

// Type of route.
func (o RouteInfoResponseOutput) RouteType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteInfoResponse) string { return v.RouteType }).(pulumi.StringOutput)
}

// Source IP address range of the route. Policy based routes only.
func (o RouteInfoResponseOutput) SrcIpRange() pulumi.StringOutput {
	return o.ApplyT(func(v RouteInfoResponse) string { return v.SrcIpRange }).(pulumi.StringOutput)
}

// Source port ranges of the route. Policy based routes only.
func (o RouteInfoResponseOutput) SrcPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteInfoResponse) []string { return v.SrcPortRanges }).(pulumi.StringArrayOutput)
}

// URI of a route. Dynamic, peering static and peering dynamic routes do not have an URI. Advertised route from Google Cloud VPC to on-premises network also does not have an URI.
func (o RouteInfoResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v RouteInfoResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type StatusResponse struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code int `pulumi:"code"`
	// A list of messages that carry the error details. There is a common set of message types for APIs to use.
	Details []map[string]interface{} `pulumi:"details"`
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message string `pulumi:"message"`
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type StatusResponseOutput struct{ *pulumi.OutputState }

func (StatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusResponse)(nil)).Elem()
}

func (o StatusResponseOutput) ToStatusResponseOutput() StatusResponseOutput {
	return o
}

func (o StatusResponseOutput) ToStatusResponseOutputWithContext(ctx context.Context) StatusResponseOutput {
	return o
}

// The status code, which should be an enum value of google.rpc.Code.
func (o StatusResponseOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v StatusResponse) int { return v.Code }).(pulumi.IntOutput)
}

// A list of messages that carry the error details. There is a common set of message types for APIs to use.
func (o StatusResponseOutput) Details() pulumi.MapArrayOutput {
	return o.ApplyT(func(v StatusResponse) []map[string]interface{} { return v.Details }).(pulumi.MapArrayOutput)
}

// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
func (o StatusResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v StatusResponse) string { return v.Message }).(pulumi.StringOutput)
}

// A simulated forwarding path is composed of multiple steps. Each step has a well-defined state and an associated configuration.
type StepResponse struct {
	// Display information of the final state "abort" and reason.
	Abort AbortInfoResponse `pulumi:"abort"`
	// Display information of an App Engine service version.
	AppEngineVersion AppEngineVersionInfoResponse `pulumi:"appEngineVersion"`
	// This is a step that leads to the final state Drop.
	CausesDrop bool `pulumi:"causesDrop"`
	// Display information of a Cloud Function.
	CloudFunction CloudFunctionInfoResponse `pulumi:"cloudFunction"`
	// Display information of a Cloud Run revision.
	CloudRunRevision CloudRunRevisionInfoResponse `pulumi:"cloudRunRevision"`
	// Display information of a Cloud SQL instance.
	CloudSqlInstance CloudSQLInstanceInfoResponse `pulumi:"cloudSqlInstance"`
	// Display information of the final state "deliver" and reason.
	Deliver DeliverInfoResponse `pulumi:"deliver"`
	// A description of the step. Usually this is a summary of the state.
	Description string `pulumi:"description"`
	// Display information of the final state "drop" and reason.
	Drop DropInfoResponse `pulumi:"drop"`
	// Display information of the source and destination under analysis. The endpoint information in an intermediate state may differ with the initial input, as it might be modified by state like NAT, or Connection Proxy.
	Endpoint EndpointInfoResponse `pulumi:"endpoint"`
	// Display information of a Compute Engine firewall rule.
	Firewall FirewallInfoResponse `pulumi:"firewall"`
	// Display information of the final state "forward" and reason.
	Forward ForwardInfoResponse `pulumi:"forward"`
	// Display information of a Compute Engine forwarding rule.
	ForwardingRule ForwardingRuleInfoResponse `pulumi:"forwardingRule"`
	// Display information of a Google Kubernetes Engine cluster master.
	GkeMaster GKEMasterInfoResponse `pulumi:"gkeMaster"`
	// Display information of a Google service
	GoogleService GoogleServiceInfoResponse `pulumi:"googleService"`
	// Display information of a Compute Engine instance.
	Instance InstanceInfoResponse `pulumi:"instance"`
	// Display information of the load balancers.
	LoadBalancer LoadBalancerInfoResponse `pulumi:"loadBalancer"`
	// Display information of a Google Cloud network.
	Network NetworkInfoResponse `pulumi:"network"`
	// Project ID that contains the configuration this step is validating.
	Project string `pulumi:"project"`
	// Display information of a Compute Engine route.
	Route RouteInfoResponse `pulumi:"route"`
	// Each step is in one of the pre-defined states.
	State string `pulumi:"state"`
	// Display information of a VPC connector.
	VpcConnector VpcConnectorInfoResponse `pulumi:"vpcConnector"`
	// Display information of a Compute Engine VPN gateway.
	VpnGateway VpnGatewayInfoResponse `pulumi:"vpnGateway"`
	// Display information of a Compute Engine VPN tunnel.
	VpnTunnel VpnTunnelInfoResponse `pulumi:"vpnTunnel"`
}

// A simulated forwarding path is composed of multiple steps. Each step has a well-defined state and an associated configuration.
type StepResponseOutput struct{ *pulumi.OutputState }

func (StepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StepResponse)(nil)).Elem()
}

func (o StepResponseOutput) ToStepResponseOutput() StepResponseOutput {
	return o
}

func (o StepResponseOutput) ToStepResponseOutputWithContext(ctx context.Context) StepResponseOutput {
	return o
}

// Display information of the final state "abort" and reason.
func (o StepResponseOutput) Abort() AbortInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) AbortInfoResponse { return v.Abort }).(AbortInfoResponseOutput)
}

// Display information of an App Engine service version.
func (o StepResponseOutput) AppEngineVersion() AppEngineVersionInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) AppEngineVersionInfoResponse { return v.AppEngineVersion }).(AppEngineVersionInfoResponseOutput)
}

// This is a step that leads to the final state Drop.
func (o StepResponseOutput) CausesDrop() pulumi.BoolOutput {
	return o.ApplyT(func(v StepResponse) bool { return v.CausesDrop }).(pulumi.BoolOutput)
}

// Display information of a Cloud Function.
func (o StepResponseOutput) CloudFunction() CloudFunctionInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) CloudFunctionInfoResponse { return v.CloudFunction }).(CloudFunctionInfoResponseOutput)
}

// Display information of a Cloud Run revision.
func (o StepResponseOutput) CloudRunRevision() CloudRunRevisionInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) CloudRunRevisionInfoResponse { return v.CloudRunRevision }).(CloudRunRevisionInfoResponseOutput)
}

// Display information of a Cloud SQL instance.
func (o StepResponseOutput) CloudSqlInstance() CloudSQLInstanceInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) CloudSQLInstanceInfoResponse { return v.CloudSqlInstance }).(CloudSQLInstanceInfoResponseOutput)
}

// Display information of the final state "deliver" and reason.
func (o StepResponseOutput) Deliver() DeliverInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) DeliverInfoResponse { return v.Deliver }).(DeliverInfoResponseOutput)
}

// A description of the step. Usually this is a summary of the state.
func (o StepResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v StepResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Display information of the final state "drop" and reason.
func (o StepResponseOutput) Drop() DropInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) DropInfoResponse { return v.Drop }).(DropInfoResponseOutput)
}

// Display information of the source and destination under analysis. The endpoint information in an intermediate state may differ with the initial input, as it might be modified by state like NAT, or Connection Proxy.
func (o StepResponseOutput) Endpoint() EndpointInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) EndpointInfoResponse { return v.Endpoint }).(EndpointInfoResponseOutput)
}

// Display information of a Compute Engine firewall rule.
func (o StepResponseOutput) Firewall() FirewallInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) FirewallInfoResponse { return v.Firewall }).(FirewallInfoResponseOutput)
}

// Display information of the final state "forward" and reason.
func (o StepResponseOutput) Forward() ForwardInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) ForwardInfoResponse { return v.Forward }).(ForwardInfoResponseOutput)
}

// Display information of a Compute Engine forwarding rule.
func (o StepResponseOutput) ForwardingRule() ForwardingRuleInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) ForwardingRuleInfoResponse { return v.ForwardingRule }).(ForwardingRuleInfoResponseOutput)
}

// Display information of a Google Kubernetes Engine cluster master.
func (o StepResponseOutput) GkeMaster() GKEMasterInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) GKEMasterInfoResponse { return v.GkeMaster }).(GKEMasterInfoResponseOutput)
}

// Display information of a Google service
func (o StepResponseOutput) GoogleService() GoogleServiceInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) GoogleServiceInfoResponse { return v.GoogleService }).(GoogleServiceInfoResponseOutput)
}

// Display information of a Compute Engine instance.
func (o StepResponseOutput) Instance() InstanceInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) InstanceInfoResponse { return v.Instance }).(InstanceInfoResponseOutput)
}

// Display information of the load balancers.
func (o StepResponseOutput) LoadBalancer() LoadBalancerInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) LoadBalancerInfoResponse { return v.LoadBalancer }).(LoadBalancerInfoResponseOutput)
}

// Display information of a Google Cloud network.
func (o StepResponseOutput) Network() NetworkInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) NetworkInfoResponse { return v.Network }).(NetworkInfoResponseOutput)
}

// Project ID that contains the configuration this step is validating.
func (o StepResponseOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v StepResponse) string { return v.Project }).(pulumi.StringOutput)
}

// Display information of a Compute Engine route.
func (o StepResponseOutput) Route() RouteInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) RouteInfoResponse { return v.Route }).(RouteInfoResponseOutput)
}

// Each step is in one of the pre-defined states.
func (o StepResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v StepResponse) string { return v.State }).(pulumi.StringOutput)
}

// Display information of a VPC connector.
func (o StepResponseOutput) VpcConnector() VpcConnectorInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) VpcConnectorInfoResponse { return v.VpcConnector }).(VpcConnectorInfoResponseOutput)
}

// Display information of a Compute Engine VPN gateway.
func (o StepResponseOutput) VpnGateway() VpnGatewayInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) VpnGatewayInfoResponse { return v.VpnGateway }).(VpnGatewayInfoResponseOutput)
}

// Display information of a Compute Engine VPN tunnel.
func (o StepResponseOutput) VpnTunnel() VpnTunnelInfoResponseOutput {
	return o.ApplyT(func(v StepResponse) VpnTunnelInfoResponse { return v.VpnTunnel }).(VpnTunnelInfoResponseOutput)
}

type StepResponseArrayOutput struct{ *pulumi.OutputState }

func (StepResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepResponse)(nil)).Elem()
}

func (o StepResponseArrayOutput) ToStepResponseArrayOutput() StepResponseArrayOutput {
	return o
}

func (o StepResponseArrayOutput) ToStepResponseArrayOutputWithContext(ctx context.Context) StepResponseArrayOutput {
	return o
}

func (o StepResponseArrayOutput) Index(i pulumi.IntInput) StepResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StepResponse {
		return vs[0].([]StepResponse)[vs[1].(int)]
	}).(StepResponseOutput)
}

// Trace represents one simulated packet forwarding path. * Each trace contains multiple ordered steps. * Each step is in a particular state with associated configuration. * State is categorized as final or non-final states. * Each final state has a reason associated. * Each trace must end with a final state (the last step). ```|---------------------Trace----------------------| Step1(State) Step2(State) --- StepN(State(final))```
type TraceResponse struct {
	// Derived from the source and destination endpoints definition specified by user request, and validated by the data plane model. If there are multiple traces starting from different source locations, then the endpoint_info may be different between traces.
	EndpointInfo EndpointInfoResponse `pulumi:"endpointInfo"`
	// A trace of a test contains multiple steps from the initial state to the final state (delivered, dropped, forwarded, or aborted). The steps are ordered by the processing sequence within the simulated network state machine. It is critical to preserve the order of the steps and avoid reordering or sorting them.
	Steps []StepResponse `pulumi:"steps"`
}

// Trace represents one simulated packet forwarding path. * Each trace contains multiple ordered steps. * Each step is in a particular state with associated configuration. * State is categorized as final or non-final states. * Each final state has a reason associated. * Each trace must end with a final state (the last step). ```|---------------------Trace----------------------| Step1(State) Step2(State) --- StepN(State(final))```
type TraceResponseOutput struct{ *pulumi.OutputState }

func (TraceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceResponse)(nil)).Elem()
}

func (o TraceResponseOutput) ToTraceResponseOutput() TraceResponseOutput {
	return o
}

func (o TraceResponseOutput) ToTraceResponseOutputWithContext(ctx context.Context) TraceResponseOutput {
	return o
}

// Derived from the source and destination endpoints definition specified by user request, and validated by the data plane model. If there are multiple traces starting from different source locations, then the endpoint_info may be different between traces.
func (o TraceResponseOutput) EndpointInfo() EndpointInfoResponseOutput {
	return o.ApplyT(func(v TraceResponse) EndpointInfoResponse { return v.EndpointInfo }).(EndpointInfoResponseOutput)
}

// A trace of a test contains multiple steps from the initial state to the final state (delivered, dropped, forwarded, or aborted). The steps are ordered by the processing sequence within the simulated network state machine. It is critical to preserve the order of the steps and avoid reordering or sorting them.
func (o TraceResponseOutput) Steps() StepResponseArrayOutput {
	return o.ApplyT(func(v TraceResponse) []StepResponse { return v.Steps }).(StepResponseArrayOutput)
}

type TraceResponseArrayOutput struct{ *pulumi.OutputState }

func (TraceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceResponse)(nil)).Elem()
}

func (o TraceResponseArrayOutput) ToTraceResponseArrayOutput() TraceResponseArrayOutput {
	return o
}

func (o TraceResponseArrayOutput) ToTraceResponseArrayOutputWithContext(ctx context.Context) TraceResponseArrayOutput {
	return o
}

func (o TraceResponseArrayOutput) Index(i pulumi.IntInput) TraceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TraceResponse {
		return vs[0].([]TraceResponse)[vs[1].(int)]
	}).(TraceResponseOutput)
}

// For display only. Metadata associated with a VPC connector.
type VpcConnectorInfoResponse struct {
	// Name of a VPC connector.
	DisplayName string `pulumi:"displayName"`
	// Location in which the VPC connector is deployed.
	Location string `pulumi:"location"`
	// URI of a VPC connector.
	Uri string `pulumi:"uri"`
}

// For display only. Metadata associated with a VPC connector.
type VpcConnectorInfoResponseOutput struct{ *pulumi.OutputState }

func (VpcConnectorInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcConnectorInfoResponse)(nil)).Elem()
}

func (o VpcConnectorInfoResponseOutput) ToVpcConnectorInfoResponseOutput() VpcConnectorInfoResponseOutput {
	return o
}

func (o VpcConnectorInfoResponseOutput) ToVpcConnectorInfoResponseOutputWithContext(ctx context.Context) VpcConnectorInfoResponseOutput {
	return o
}

// Name of a VPC connector.
func (o VpcConnectorInfoResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v VpcConnectorInfoResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Location in which the VPC connector is deployed.
func (o VpcConnectorInfoResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v VpcConnectorInfoResponse) string { return v.Location }).(pulumi.StringOutput)
}

// URI of a VPC connector.
func (o VpcConnectorInfoResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v VpcConnectorInfoResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// For display only. Metadata associated with a Compute Engine VPN gateway.
type VpnGatewayInfoResponse struct {
	// Name of a VPN gateway.
	DisplayName string `pulumi:"displayName"`
	// IP address of the VPN gateway.
	IpAddress string `pulumi:"ipAddress"`
	// URI of a Compute Engine network where the VPN gateway is configured.
	NetworkUri string `pulumi:"networkUri"`
	// Name of a Google Cloud region where this VPN gateway is configured.
	Region string `pulumi:"region"`
	// URI of a VPN gateway.
	Uri string `pulumi:"uri"`
	// A VPN tunnel that is associated with this VPN gateway. There may be multiple VPN tunnels configured on a VPN gateway, and only the one relevant to the test is displayed.
	VpnTunnelUri string `pulumi:"vpnTunnelUri"`
}

// For display only. Metadata associated with a Compute Engine VPN gateway.
type VpnGatewayInfoResponseOutput struct{ *pulumi.OutputState }

func (VpnGatewayInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayInfoResponse)(nil)).Elem()
}

func (o VpnGatewayInfoResponseOutput) ToVpnGatewayInfoResponseOutput() VpnGatewayInfoResponseOutput {
	return o
}

func (o VpnGatewayInfoResponseOutput) ToVpnGatewayInfoResponseOutputWithContext(ctx context.Context) VpnGatewayInfoResponseOutput {
	return o
}

// Name of a VPN gateway.
func (o VpnGatewayInfoResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayInfoResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// IP address of the VPN gateway.
func (o VpnGatewayInfoResponseOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayInfoResponse) string { return v.IpAddress }).(pulumi.StringOutput)
}

// URI of a Compute Engine network where the VPN gateway is configured.
func (o VpnGatewayInfoResponseOutput) NetworkUri() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayInfoResponse) string { return v.NetworkUri }).(pulumi.StringOutput)
}

// Name of a Google Cloud region where this VPN gateway is configured.
func (o VpnGatewayInfoResponseOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayInfoResponse) string { return v.Region }).(pulumi.StringOutput)
}

// URI of a VPN gateway.
func (o VpnGatewayInfoResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayInfoResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// A VPN tunnel that is associated with this VPN gateway. There may be multiple VPN tunnels configured on a VPN gateway, and only the one relevant to the test is displayed.
func (o VpnGatewayInfoResponseOutput) VpnTunnelUri() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayInfoResponse) string { return v.VpnTunnelUri }).(pulumi.StringOutput)
}

// For display only. Metadata associated with a Compute Engine VPN tunnel.
type VpnTunnelInfoResponse struct {
	// Name of a VPN tunnel.
	DisplayName string `pulumi:"displayName"`
	// URI of a Compute Engine network where the VPN tunnel is configured.
	NetworkUri string `pulumi:"networkUri"`
	// Name of a Google Cloud region where this VPN tunnel is configured.
	Region string `pulumi:"region"`
	// URI of a VPN gateway at remote end of the tunnel.
	RemoteGateway string `pulumi:"remoteGateway"`
	// Remote VPN gateway's IP address.
	RemoteGatewayIp string `pulumi:"remoteGatewayIp"`
	// Type of the routing policy.
	RoutingType string `pulumi:"routingType"`
	// URI of the VPN gateway at local end of the tunnel.
	SourceGateway string `pulumi:"sourceGateway"`
	// Local VPN gateway's IP address.
	SourceGatewayIp string `pulumi:"sourceGatewayIp"`
	// URI of a VPN tunnel.
	Uri string `pulumi:"uri"`
}

// For display only. Metadata associated with a Compute Engine VPN tunnel.
type VpnTunnelInfoResponseOutput struct{ *pulumi.OutputState }

func (VpnTunnelInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnTunnelInfoResponse)(nil)).Elem()
}

func (o VpnTunnelInfoResponseOutput) ToVpnTunnelInfoResponseOutput() VpnTunnelInfoResponseOutput {
	return o
}

func (o VpnTunnelInfoResponseOutput) ToVpnTunnelInfoResponseOutputWithContext(ctx context.Context) VpnTunnelInfoResponseOutput {
	return o
}

// Name of a VPN tunnel.
func (o VpnTunnelInfoResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v VpnTunnelInfoResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// URI of a Compute Engine network where the VPN tunnel is configured.
func (o VpnTunnelInfoResponseOutput) NetworkUri() pulumi.StringOutput {
	return o.ApplyT(func(v VpnTunnelInfoResponse) string { return v.NetworkUri }).(pulumi.StringOutput)
}

// Name of a Google Cloud region where this VPN tunnel is configured.
func (o VpnTunnelInfoResponseOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v VpnTunnelInfoResponse) string { return v.Region }).(pulumi.StringOutput)
}

// URI of a VPN gateway at remote end of the tunnel.
func (o VpnTunnelInfoResponseOutput) RemoteGateway() pulumi.StringOutput {
	return o.ApplyT(func(v VpnTunnelInfoResponse) string { return v.RemoteGateway }).(pulumi.StringOutput)
}

// Remote VPN gateway's IP address.
func (o VpnTunnelInfoResponseOutput) RemoteGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v VpnTunnelInfoResponse) string { return v.RemoteGatewayIp }).(pulumi.StringOutput)
}

// Type of the routing policy.
func (o VpnTunnelInfoResponseOutput) RoutingType() pulumi.StringOutput {
	return o.ApplyT(func(v VpnTunnelInfoResponse) string { return v.RoutingType }).(pulumi.StringOutput)
}

// URI of the VPN gateway at local end of the tunnel.
func (o VpnTunnelInfoResponseOutput) SourceGateway() pulumi.StringOutput {
	return o.ApplyT(func(v VpnTunnelInfoResponse) string { return v.SourceGateway }).(pulumi.StringOutput)
}

// Local VPN gateway's IP address.
func (o VpnTunnelInfoResponseOutput) SourceGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v VpnTunnelInfoResponse) string { return v.SourceGatewayIp }).(pulumi.StringOutput)
}

// URI of a VPN tunnel.
func (o VpnTunnelInfoResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v VpnTunnelInfoResponse) string { return v.Uri }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppEngineVersionEndpointInput)(nil)).Elem(), AppEngineVersionEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppEngineVersionEndpointPtrInput)(nil)).Elem(), AppEngineVersionEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigInput)(nil)).Elem(), AuditConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigArrayInput)(nil)).Elem(), AuditConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigInput)(nil)).Elem(), AuditLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigArrayInput)(nil)).Elem(), AuditLogConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingInput)(nil)).Elem(), BindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingArrayInput)(nil)).Elem(), BindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudFunctionEndpointInput)(nil)).Elem(), CloudFunctionEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudFunctionEndpointPtrInput)(nil)).Elem(), CloudFunctionEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudRunRevisionEndpointInput)(nil)).Elem(), CloudRunRevisionEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudRunRevisionEndpointPtrInput)(nil)).Elem(), CloudRunRevisionEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointInput)(nil)).Elem(), EndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExprInput)(nil)).Elem(), ExprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExprPtrInput)(nil)).Elem(), ExprArgs{})
	pulumi.RegisterOutputType(AbortInfoResponseOutput{})
	pulumi.RegisterOutputType(AppEngineVersionEndpointOutput{})
	pulumi.RegisterOutputType(AppEngineVersionEndpointPtrOutput{})
	pulumi.RegisterOutputType(AppEngineVersionEndpointResponseOutput{})
	pulumi.RegisterOutputType(AppEngineVersionInfoResponseOutput{})
	pulumi.RegisterOutputType(AuditConfigOutput{})
	pulumi.RegisterOutputType(AuditConfigArrayOutput{})
	pulumi.RegisterOutputType(AuditConfigResponseOutput{})
	pulumi.RegisterOutputType(AuditConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(AuditLogConfigOutput{})
	pulumi.RegisterOutputType(AuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(AuditLogConfigResponseOutput{})
	pulumi.RegisterOutputType(AuditLogConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(BindingOutput{})
	pulumi.RegisterOutputType(BindingArrayOutput{})
	pulumi.RegisterOutputType(BindingResponseOutput{})
	pulumi.RegisterOutputType(BindingResponseArrayOutput{})
	pulumi.RegisterOutputType(CloudFunctionEndpointOutput{})
	pulumi.RegisterOutputType(CloudFunctionEndpointPtrOutput{})
	pulumi.RegisterOutputType(CloudFunctionEndpointResponseOutput{})
	pulumi.RegisterOutputType(CloudFunctionInfoResponseOutput{})
	pulumi.RegisterOutputType(CloudRunRevisionEndpointOutput{})
	pulumi.RegisterOutputType(CloudRunRevisionEndpointPtrOutput{})
	pulumi.RegisterOutputType(CloudRunRevisionEndpointResponseOutput{})
	pulumi.RegisterOutputType(CloudRunRevisionInfoResponseOutput{})
	pulumi.RegisterOutputType(CloudSQLInstanceInfoResponseOutput{})
	pulumi.RegisterOutputType(DeliverInfoResponseOutput{})
	pulumi.RegisterOutputType(DropInfoResponseOutput{})
	pulumi.RegisterOutputType(EdgeLocationResponseOutput{})
	pulumi.RegisterOutputType(EndpointOutput{})
	pulumi.RegisterOutputType(EndpointInfoResponseOutput{})
	pulumi.RegisterOutputType(EndpointResponseOutput{})
	pulumi.RegisterOutputType(ExprOutput{})
	pulumi.RegisterOutputType(ExprPtrOutput{})
	pulumi.RegisterOutputType(ExprResponseOutput{})
	pulumi.RegisterOutputType(FirewallInfoResponseOutput{})
	pulumi.RegisterOutputType(ForwardInfoResponseOutput{})
	pulumi.RegisterOutputType(ForwardingRuleInfoResponseOutput{})
	pulumi.RegisterOutputType(GKEMasterInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleServiceInfoResponseOutput{})
	pulumi.RegisterOutputType(InstanceInfoResponseOutput{})
	pulumi.RegisterOutputType(LatencyDistributionResponseOutput{})
	pulumi.RegisterOutputType(LatencyPercentileResponseOutput{})
	pulumi.RegisterOutputType(LatencyPercentileResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerInfoResponseOutput{})
	pulumi.RegisterOutputType(NetworkInfoResponseOutput{})
	pulumi.RegisterOutputType(ProbingDetailsResponseOutput{})
	pulumi.RegisterOutputType(ReachabilityDetailsResponseOutput{})
	pulumi.RegisterOutputType(RouteInfoResponseOutput{})
	pulumi.RegisterOutputType(StatusResponseOutput{})
	pulumi.RegisterOutputType(StepResponseOutput{})
	pulumi.RegisterOutputType(StepResponseArrayOutput{})
	pulumi.RegisterOutputType(TraceResponseOutput{})
	pulumi.RegisterOutputType(TraceResponseArrayOutput{})
	pulumi.RegisterOutputType(VpcConnectorInfoResponseOutput{})
	pulumi.RegisterOutputType(VpnGatewayInfoResponseOutput{})
	pulumi.RegisterOutputType(VpnTunnelInfoResponseOutput{})
}
