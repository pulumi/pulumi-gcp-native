// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Immutable. The blockchain type of the node.
type BlockchainNodeBlockchainType string

const (
	// Blockchain type has not been specified, but should be.
	BlockchainNodeBlockchainTypeBlockchainTypeUnspecified = BlockchainNodeBlockchainType("BLOCKCHAIN_TYPE_UNSPECIFIED")
	// The blockchain type is Ethereum.
	BlockchainNodeBlockchainTypeEthereum = BlockchainNodeBlockchainType("ETHEREUM")
)

func (BlockchainNodeBlockchainType) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainNodeBlockchainType)(nil)).Elem()
}

func (e BlockchainNodeBlockchainType) ToBlockchainNodeBlockchainTypeOutput() BlockchainNodeBlockchainTypeOutput {
	return pulumi.ToOutput(e).(BlockchainNodeBlockchainTypeOutput)
}

func (e BlockchainNodeBlockchainType) ToBlockchainNodeBlockchainTypeOutputWithContext(ctx context.Context) BlockchainNodeBlockchainTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BlockchainNodeBlockchainTypeOutput)
}

func (e BlockchainNodeBlockchainType) ToBlockchainNodeBlockchainTypePtrOutput() BlockchainNodeBlockchainTypePtrOutput {
	return e.ToBlockchainNodeBlockchainTypePtrOutputWithContext(context.Background())
}

func (e BlockchainNodeBlockchainType) ToBlockchainNodeBlockchainTypePtrOutputWithContext(ctx context.Context) BlockchainNodeBlockchainTypePtrOutput {
	return BlockchainNodeBlockchainType(e).ToBlockchainNodeBlockchainTypeOutputWithContext(ctx).ToBlockchainNodeBlockchainTypePtrOutputWithContext(ctx)
}

func (e BlockchainNodeBlockchainType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BlockchainNodeBlockchainType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BlockchainNodeBlockchainType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BlockchainNodeBlockchainType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BlockchainNodeBlockchainTypeOutput struct{ *pulumi.OutputState }

func (BlockchainNodeBlockchainTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockchainNodeBlockchainType)(nil)).Elem()
}

func (o BlockchainNodeBlockchainTypeOutput) ToBlockchainNodeBlockchainTypeOutput() BlockchainNodeBlockchainTypeOutput {
	return o
}

func (o BlockchainNodeBlockchainTypeOutput) ToBlockchainNodeBlockchainTypeOutputWithContext(ctx context.Context) BlockchainNodeBlockchainTypeOutput {
	return o
}

func (o BlockchainNodeBlockchainTypeOutput) ToBlockchainNodeBlockchainTypePtrOutput() BlockchainNodeBlockchainTypePtrOutput {
	return o.ToBlockchainNodeBlockchainTypePtrOutputWithContext(context.Background())
}

func (o BlockchainNodeBlockchainTypeOutput) ToBlockchainNodeBlockchainTypePtrOutputWithContext(ctx context.Context) BlockchainNodeBlockchainTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlockchainNodeBlockchainType) *BlockchainNodeBlockchainType {
		return &v
	}).(BlockchainNodeBlockchainTypePtrOutput)
}

func (o BlockchainNodeBlockchainTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BlockchainNodeBlockchainTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BlockchainNodeBlockchainType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BlockchainNodeBlockchainTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BlockchainNodeBlockchainTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BlockchainNodeBlockchainType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BlockchainNodeBlockchainTypePtrOutput struct{ *pulumi.OutputState }

func (BlockchainNodeBlockchainTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockchainNodeBlockchainType)(nil)).Elem()
}

func (o BlockchainNodeBlockchainTypePtrOutput) ToBlockchainNodeBlockchainTypePtrOutput() BlockchainNodeBlockchainTypePtrOutput {
	return o
}

func (o BlockchainNodeBlockchainTypePtrOutput) ToBlockchainNodeBlockchainTypePtrOutputWithContext(ctx context.Context) BlockchainNodeBlockchainTypePtrOutput {
	return o
}

func (o BlockchainNodeBlockchainTypePtrOutput) Elem() BlockchainNodeBlockchainTypeOutput {
	return o.ApplyT(func(v *BlockchainNodeBlockchainType) BlockchainNodeBlockchainType {
		if v != nil {
			return *v
		}
		var ret BlockchainNodeBlockchainType
		return ret
	}).(BlockchainNodeBlockchainTypeOutput)
}

func (o BlockchainNodeBlockchainTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BlockchainNodeBlockchainTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BlockchainNodeBlockchainType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BlockchainNodeBlockchainTypeInput is an input type that accepts values of the BlockchainNodeBlockchainType enum
// A concrete instance of `BlockchainNodeBlockchainTypeInput` can be one of the following:
//
//	BlockchainNodeBlockchainTypeBlockchainTypeUnspecified
//	BlockchainNodeBlockchainTypeEthereum
type BlockchainNodeBlockchainTypeInput interface {
	pulumi.Input

	ToBlockchainNodeBlockchainTypeOutput() BlockchainNodeBlockchainTypeOutput
	ToBlockchainNodeBlockchainTypeOutputWithContext(context.Context) BlockchainNodeBlockchainTypeOutput
}

var blockchainNodeBlockchainTypePtrType = reflect.TypeOf((**BlockchainNodeBlockchainType)(nil)).Elem()

type BlockchainNodeBlockchainTypePtrInput interface {
	pulumi.Input

	ToBlockchainNodeBlockchainTypePtrOutput() BlockchainNodeBlockchainTypePtrOutput
	ToBlockchainNodeBlockchainTypePtrOutputWithContext(context.Context) BlockchainNodeBlockchainTypePtrOutput
}

type blockchainNodeBlockchainTypePtr string

func BlockchainNodeBlockchainTypePtr(v string) BlockchainNodeBlockchainTypePtrInput {
	return (*blockchainNodeBlockchainTypePtr)(&v)
}

func (*blockchainNodeBlockchainTypePtr) ElementType() reflect.Type {
	return blockchainNodeBlockchainTypePtrType
}

func (in *blockchainNodeBlockchainTypePtr) ToBlockchainNodeBlockchainTypePtrOutput() BlockchainNodeBlockchainTypePtrOutput {
	return pulumi.ToOutput(in).(BlockchainNodeBlockchainTypePtrOutput)
}

func (in *blockchainNodeBlockchainTypePtr) ToBlockchainNodeBlockchainTypePtrOutputWithContext(ctx context.Context) BlockchainNodeBlockchainTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BlockchainNodeBlockchainTypePtrOutput)
}

// Immutable. The consensus client.
type EthereumDetailsConsensusClient string

const (
	// Consensus client has not been specified, but should be.
	EthereumDetailsConsensusClientConsensusClientUnspecified = EthereumDetailsConsensusClient("CONSENSUS_CLIENT_UNSPECIFIED")
	// Consensus client implementation written in Rust, maintained by Sigma Prime. See [Lighthouse - Sigma Prime](https://lighthouse.sigmaprime.io/) for details.
	EthereumDetailsConsensusClientLighthouse = EthereumDetailsConsensusClient("LIGHTHOUSE")
	// Erigon's embedded consensus client embedded in the execution client. Note this option is not currently available when creating new blockchain nodes. See [Erigon on GitHub](https://github.com/ledgerwatch/erigon#embedded-consensus-layer) for details.
	EthereumDetailsConsensusClientErigonEmbeddedConsensusLayer = EthereumDetailsConsensusClient("ERIGON_EMBEDDED_CONSENSUS_LAYER")
)

func (EthereumDetailsConsensusClient) ElementType() reflect.Type {
	return reflect.TypeOf((*EthereumDetailsConsensusClient)(nil)).Elem()
}

func (e EthereumDetailsConsensusClient) ToEthereumDetailsConsensusClientOutput() EthereumDetailsConsensusClientOutput {
	return pulumi.ToOutput(e).(EthereumDetailsConsensusClientOutput)
}

func (e EthereumDetailsConsensusClient) ToEthereumDetailsConsensusClientOutputWithContext(ctx context.Context) EthereumDetailsConsensusClientOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EthereumDetailsConsensusClientOutput)
}

func (e EthereumDetailsConsensusClient) ToEthereumDetailsConsensusClientPtrOutput() EthereumDetailsConsensusClientPtrOutput {
	return e.ToEthereumDetailsConsensusClientPtrOutputWithContext(context.Background())
}

func (e EthereumDetailsConsensusClient) ToEthereumDetailsConsensusClientPtrOutputWithContext(ctx context.Context) EthereumDetailsConsensusClientPtrOutput {
	return EthereumDetailsConsensusClient(e).ToEthereumDetailsConsensusClientOutputWithContext(ctx).ToEthereumDetailsConsensusClientPtrOutputWithContext(ctx)
}

func (e EthereumDetailsConsensusClient) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EthereumDetailsConsensusClient) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EthereumDetailsConsensusClient) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EthereumDetailsConsensusClient) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EthereumDetailsConsensusClientOutput struct{ *pulumi.OutputState }

func (EthereumDetailsConsensusClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EthereumDetailsConsensusClient)(nil)).Elem()
}

func (o EthereumDetailsConsensusClientOutput) ToEthereumDetailsConsensusClientOutput() EthereumDetailsConsensusClientOutput {
	return o
}

func (o EthereumDetailsConsensusClientOutput) ToEthereumDetailsConsensusClientOutputWithContext(ctx context.Context) EthereumDetailsConsensusClientOutput {
	return o
}

func (o EthereumDetailsConsensusClientOutput) ToEthereumDetailsConsensusClientPtrOutput() EthereumDetailsConsensusClientPtrOutput {
	return o.ToEthereumDetailsConsensusClientPtrOutputWithContext(context.Background())
}

func (o EthereumDetailsConsensusClientOutput) ToEthereumDetailsConsensusClientPtrOutputWithContext(ctx context.Context) EthereumDetailsConsensusClientPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EthereumDetailsConsensusClient) *EthereumDetailsConsensusClient {
		return &v
	}).(EthereumDetailsConsensusClientPtrOutput)
}

func (o EthereumDetailsConsensusClientOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EthereumDetailsConsensusClientOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EthereumDetailsConsensusClient) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EthereumDetailsConsensusClientOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EthereumDetailsConsensusClientOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EthereumDetailsConsensusClient) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EthereumDetailsConsensusClientPtrOutput struct{ *pulumi.OutputState }

func (EthereumDetailsConsensusClientPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EthereumDetailsConsensusClient)(nil)).Elem()
}

func (o EthereumDetailsConsensusClientPtrOutput) ToEthereumDetailsConsensusClientPtrOutput() EthereumDetailsConsensusClientPtrOutput {
	return o
}

func (o EthereumDetailsConsensusClientPtrOutput) ToEthereumDetailsConsensusClientPtrOutputWithContext(ctx context.Context) EthereumDetailsConsensusClientPtrOutput {
	return o
}

func (o EthereumDetailsConsensusClientPtrOutput) Elem() EthereumDetailsConsensusClientOutput {
	return o.ApplyT(func(v *EthereumDetailsConsensusClient) EthereumDetailsConsensusClient {
		if v != nil {
			return *v
		}
		var ret EthereumDetailsConsensusClient
		return ret
	}).(EthereumDetailsConsensusClientOutput)
}

func (o EthereumDetailsConsensusClientPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EthereumDetailsConsensusClientPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EthereumDetailsConsensusClient) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EthereumDetailsConsensusClientInput is an input type that accepts values of the EthereumDetailsConsensusClient enum
// A concrete instance of `EthereumDetailsConsensusClientInput` can be one of the following:
//
//	EthereumDetailsConsensusClientConsensusClientUnspecified
//	EthereumDetailsConsensusClientLighthouse
//	EthereumDetailsConsensusClientErigonEmbeddedConsensusLayer
type EthereumDetailsConsensusClientInput interface {
	pulumi.Input

	ToEthereumDetailsConsensusClientOutput() EthereumDetailsConsensusClientOutput
	ToEthereumDetailsConsensusClientOutputWithContext(context.Context) EthereumDetailsConsensusClientOutput
}

var ethereumDetailsConsensusClientPtrType = reflect.TypeOf((**EthereumDetailsConsensusClient)(nil)).Elem()

type EthereumDetailsConsensusClientPtrInput interface {
	pulumi.Input

	ToEthereumDetailsConsensusClientPtrOutput() EthereumDetailsConsensusClientPtrOutput
	ToEthereumDetailsConsensusClientPtrOutputWithContext(context.Context) EthereumDetailsConsensusClientPtrOutput
}

type ethereumDetailsConsensusClientPtr string

func EthereumDetailsConsensusClientPtr(v string) EthereumDetailsConsensusClientPtrInput {
	return (*ethereumDetailsConsensusClientPtr)(&v)
}

func (*ethereumDetailsConsensusClientPtr) ElementType() reflect.Type {
	return ethereumDetailsConsensusClientPtrType
}

func (in *ethereumDetailsConsensusClientPtr) ToEthereumDetailsConsensusClientPtrOutput() EthereumDetailsConsensusClientPtrOutput {
	return pulumi.ToOutput(in).(EthereumDetailsConsensusClientPtrOutput)
}

func (in *ethereumDetailsConsensusClientPtr) ToEthereumDetailsConsensusClientPtrOutputWithContext(ctx context.Context) EthereumDetailsConsensusClientPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EthereumDetailsConsensusClientPtrOutput)
}

// Immutable. The execution client
type EthereumDetailsExecutionClient string

const (
	// Execution client has not been specified, but should be.
	EthereumDetailsExecutionClientExecutionClientUnspecified = EthereumDetailsExecutionClient("EXECUTION_CLIENT_UNSPECIFIED")
	// Official Go implementation of the Ethereum protocol. See [go-ethereum](https://geth.ethereum.org/) for details.
	EthereumDetailsExecutionClientGeth = EthereumDetailsExecutionClient("GETH")
	// An implementation of Ethereum (execution client), on the efficiency frontier, written in Go. See [Erigon on GitHub](https://github.com/ledgerwatch/erigon) for details.
	EthereumDetailsExecutionClientErigon = EthereumDetailsExecutionClient("ERIGON")
)

func (EthereumDetailsExecutionClient) ElementType() reflect.Type {
	return reflect.TypeOf((*EthereumDetailsExecutionClient)(nil)).Elem()
}

func (e EthereumDetailsExecutionClient) ToEthereumDetailsExecutionClientOutput() EthereumDetailsExecutionClientOutput {
	return pulumi.ToOutput(e).(EthereumDetailsExecutionClientOutput)
}

func (e EthereumDetailsExecutionClient) ToEthereumDetailsExecutionClientOutputWithContext(ctx context.Context) EthereumDetailsExecutionClientOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EthereumDetailsExecutionClientOutput)
}

func (e EthereumDetailsExecutionClient) ToEthereumDetailsExecutionClientPtrOutput() EthereumDetailsExecutionClientPtrOutput {
	return e.ToEthereumDetailsExecutionClientPtrOutputWithContext(context.Background())
}

func (e EthereumDetailsExecutionClient) ToEthereumDetailsExecutionClientPtrOutputWithContext(ctx context.Context) EthereumDetailsExecutionClientPtrOutput {
	return EthereumDetailsExecutionClient(e).ToEthereumDetailsExecutionClientOutputWithContext(ctx).ToEthereumDetailsExecutionClientPtrOutputWithContext(ctx)
}

func (e EthereumDetailsExecutionClient) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EthereumDetailsExecutionClient) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EthereumDetailsExecutionClient) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EthereumDetailsExecutionClient) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EthereumDetailsExecutionClientOutput struct{ *pulumi.OutputState }

func (EthereumDetailsExecutionClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EthereumDetailsExecutionClient)(nil)).Elem()
}

func (o EthereumDetailsExecutionClientOutput) ToEthereumDetailsExecutionClientOutput() EthereumDetailsExecutionClientOutput {
	return o
}

func (o EthereumDetailsExecutionClientOutput) ToEthereumDetailsExecutionClientOutputWithContext(ctx context.Context) EthereumDetailsExecutionClientOutput {
	return o
}

func (o EthereumDetailsExecutionClientOutput) ToEthereumDetailsExecutionClientPtrOutput() EthereumDetailsExecutionClientPtrOutput {
	return o.ToEthereumDetailsExecutionClientPtrOutputWithContext(context.Background())
}

func (o EthereumDetailsExecutionClientOutput) ToEthereumDetailsExecutionClientPtrOutputWithContext(ctx context.Context) EthereumDetailsExecutionClientPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EthereumDetailsExecutionClient) *EthereumDetailsExecutionClient {
		return &v
	}).(EthereumDetailsExecutionClientPtrOutput)
}

func (o EthereumDetailsExecutionClientOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EthereumDetailsExecutionClientOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EthereumDetailsExecutionClient) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EthereumDetailsExecutionClientOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EthereumDetailsExecutionClientOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EthereumDetailsExecutionClient) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EthereumDetailsExecutionClientPtrOutput struct{ *pulumi.OutputState }

func (EthereumDetailsExecutionClientPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EthereumDetailsExecutionClient)(nil)).Elem()
}

func (o EthereumDetailsExecutionClientPtrOutput) ToEthereumDetailsExecutionClientPtrOutput() EthereumDetailsExecutionClientPtrOutput {
	return o
}

func (o EthereumDetailsExecutionClientPtrOutput) ToEthereumDetailsExecutionClientPtrOutputWithContext(ctx context.Context) EthereumDetailsExecutionClientPtrOutput {
	return o
}

func (o EthereumDetailsExecutionClientPtrOutput) Elem() EthereumDetailsExecutionClientOutput {
	return o.ApplyT(func(v *EthereumDetailsExecutionClient) EthereumDetailsExecutionClient {
		if v != nil {
			return *v
		}
		var ret EthereumDetailsExecutionClient
		return ret
	}).(EthereumDetailsExecutionClientOutput)
}

func (o EthereumDetailsExecutionClientPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EthereumDetailsExecutionClientPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EthereumDetailsExecutionClient) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EthereumDetailsExecutionClientInput is an input type that accepts values of the EthereumDetailsExecutionClient enum
// A concrete instance of `EthereumDetailsExecutionClientInput` can be one of the following:
//
//	EthereumDetailsExecutionClientExecutionClientUnspecified
//	EthereumDetailsExecutionClientGeth
//	EthereumDetailsExecutionClientErigon
type EthereumDetailsExecutionClientInput interface {
	pulumi.Input

	ToEthereumDetailsExecutionClientOutput() EthereumDetailsExecutionClientOutput
	ToEthereumDetailsExecutionClientOutputWithContext(context.Context) EthereumDetailsExecutionClientOutput
}

var ethereumDetailsExecutionClientPtrType = reflect.TypeOf((**EthereumDetailsExecutionClient)(nil)).Elem()

type EthereumDetailsExecutionClientPtrInput interface {
	pulumi.Input

	ToEthereumDetailsExecutionClientPtrOutput() EthereumDetailsExecutionClientPtrOutput
	ToEthereumDetailsExecutionClientPtrOutputWithContext(context.Context) EthereumDetailsExecutionClientPtrOutput
}

type ethereumDetailsExecutionClientPtr string

func EthereumDetailsExecutionClientPtr(v string) EthereumDetailsExecutionClientPtrInput {
	return (*ethereumDetailsExecutionClientPtr)(&v)
}

func (*ethereumDetailsExecutionClientPtr) ElementType() reflect.Type {
	return ethereumDetailsExecutionClientPtrType
}

func (in *ethereumDetailsExecutionClientPtr) ToEthereumDetailsExecutionClientPtrOutput() EthereumDetailsExecutionClientPtrOutput {
	return pulumi.ToOutput(in).(EthereumDetailsExecutionClientPtrOutput)
}

func (in *ethereumDetailsExecutionClientPtr) ToEthereumDetailsExecutionClientPtrOutputWithContext(ctx context.Context) EthereumDetailsExecutionClientPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EthereumDetailsExecutionClientPtrOutput)
}

// Immutable. The Ethereum environment being accessed.
type EthereumDetailsNetwork string

const (
	// The network has not been specified, but should be.
	EthereumDetailsNetworkNetworkUnspecified = EthereumDetailsNetwork("NETWORK_UNSPECIFIED")
	// The Ethereum Mainnet.
	EthereumDetailsNetworkMainnet = EthereumDetailsNetwork("MAINNET")
	// The Ethereum Testnet based on Goerli protocol.
	EthereumDetailsNetworkTestnetGoerliPrater = EthereumDetailsNetwork("TESTNET_GOERLI_PRATER")
	// The Ethereum Testnet based on Sepolia/Bepolia protocol. See https://github.com/eth-clients/sepolia.
	EthereumDetailsNetworkTestnetSepolia = EthereumDetailsNetwork("TESTNET_SEPOLIA")
	// The Ethereum Testnet based on Holesky specification. See https://github.com/eth-clients/holesky.
	EthereumDetailsNetworkTestnetHolesky = EthereumDetailsNetwork("TESTNET_HOLESKY")
)

func (EthereumDetailsNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((*EthereumDetailsNetwork)(nil)).Elem()
}

func (e EthereumDetailsNetwork) ToEthereumDetailsNetworkOutput() EthereumDetailsNetworkOutput {
	return pulumi.ToOutput(e).(EthereumDetailsNetworkOutput)
}

func (e EthereumDetailsNetwork) ToEthereumDetailsNetworkOutputWithContext(ctx context.Context) EthereumDetailsNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EthereumDetailsNetworkOutput)
}

func (e EthereumDetailsNetwork) ToEthereumDetailsNetworkPtrOutput() EthereumDetailsNetworkPtrOutput {
	return e.ToEthereumDetailsNetworkPtrOutputWithContext(context.Background())
}

func (e EthereumDetailsNetwork) ToEthereumDetailsNetworkPtrOutputWithContext(ctx context.Context) EthereumDetailsNetworkPtrOutput {
	return EthereumDetailsNetwork(e).ToEthereumDetailsNetworkOutputWithContext(ctx).ToEthereumDetailsNetworkPtrOutputWithContext(ctx)
}

func (e EthereumDetailsNetwork) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EthereumDetailsNetwork) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EthereumDetailsNetwork) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EthereumDetailsNetwork) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EthereumDetailsNetworkOutput struct{ *pulumi.OutputState }

func (EthereumDetailsNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EthereumDetailsNetwork)(nil)).Elem()
}

func (o EthereumDetailsNetworkOutput) ToEthereumDetailsNetworkOutput() EthereumDetailsNetworkOutput {
	return o
}

func (o EthereumDetailsNetworkOutput) ToEthereumDetailsNetworkOutputWithContext(ctx context.Context) EthereumDetailsNetworkOutput {
	return o
}

func (o EthereumDetailsNetworkOutput) ToEthereumDetailsNetworkPtrOutput() EthereumDetailsNetworkPtrOutput {
	return o.ToEthereumDetailsNetworkPtrOutputWithContext(context.Background())
}

func (o EthereumDetailsNetworkOutput) ToEthereumDetailsNetworkPtrOutputWithContext(ctx context.Context) EthereumDetailsNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EthereumDetailsNetwork) *EthereumDetailsNetwork {
		return &v
	}).(EthereumDetailsNetworkPtrOutput)
}

func (o EthereumDetailsNetworkOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EthereumDetailsNetworkOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EthereumDetailsNetwork) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EthereumDetailsNetworkOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EthereumDetailsNetworkOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EthereumDetailsNetwork) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EthereumDetailsNetworkPtrOutput struct{ *pulumi.OutputState }

func (EthereumDetailsNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EthereumDetailsNetwork)(nil)).Elem()
}

func (o EthereumDetailsNetworkPtrOutput) ToEthereumDetailsNetworkPtrOutput() EthereumDetailsNetworkPtrOutput {
	return o
}

func (o EthereumDetailsNetworkPtrOutput) ToEthereumDetailsNetworkPtrOutputWithContext(ctx context.Context) EthereumDetailsNetworkPtrOutput {
	return o
}

func (o EthereumDetailsNetworkPtrOutput) Elem() EthereumDetailsNetworkOutput {
	return o.ApplyT(func(v *EthereumDetailsNetwork) EthereumDetailsNetwork {
		if v != nil {
			return *v
		}
		var ret EthereumDetailsNetwork
		return ret
	}).(EthereumDetailsNetworkOutput)
}

func (o EthereumDetailsNetworkPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EthereumDetailsNetworkPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EthereumDetailsNetwork) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EthereumDetailsNetworkInput is an input type that accepts values of the EthereumDetailsNetwork enum
// A concrete instance of `EthereumDetailsNetworkInput` can be one of the following:
//
//	EthereumDetailsNetworkNetworkUnspecified
//	EthereumDetailsNetworkMainnet
//	EthereumDetailsNetworkTestnetGoerliPrater
//	EthereumDetailsNetworkTestnetSepolia
//	EthereumDetailsNetworkTestnetHolesky
type EthereumDetailsNetworkInput interface {
	pulumi.Input

	ToEthereumDetailsNetworkOutput() EthereumDetailsNetworkOutput
	ToEthereumDetailsNetworkOutputWithContext(context.Context) EthereumDetailsNetworkOutput
}

var ethereumDetailsNetworkPtrType = reflect.TypeOf((**EthereumDetailsNetwork)(nil)).Elem()

type EthereumDetailsNetworkPtrInput interface {
	pulumi.Input

	ToEthereumDetailsNetworkPtrOutput() EthereumDetailsNetworkPtrOutput
	ToEthereumDetailsNetworkPtrOutputWithContext(context.Context) EthereumDetailsNetworkPtrOutput
}

type ethereumDetailsNetworkPtr string

func EthereumDetailsNetworkPtr(v string) EthereumDetailsNetworkPtrInput {
	return (*ethereumDetailsNetworkPtr)(&v)
}

func (*ethereumDetailsNetworkPtr) ElementType() reflect.Type {
	return ethereumDetailsNetworkPtrType
}

func (in *ethereumDetailsNetworkPtr) ToEthereumDetailsNetworkPtrOutput() EthereumDetailsNetworkPtrOutput {
	return pulumi.ToOutput(in).(EthereumDetailsNetworkPtrOutput)
}

func (in *ethereumDetailsNetworkPtr) ToEthereumDetailsNetworkPtrOutputWithContext(ctx context.Context) EthereumDetailsNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EthereumDetailsNetworkPtrOutput)
}

// Immutable. The type of Ethereum node.
type EthereumDetailsNodeType string

const (
	// Node type has not been specified, but should be.
	EthereumDetailsNodeTypeNodeTypeUnspecified = EthereumDetailsNodeType("NODE_TYPE_UNSPECIFIED")
	// An Ethereum node that only downloads Ethereum block headers.
	EthereumDetailsNodeTypeLight = EthereumDetailsNodeType("LIGHT")
	// Keeps a complete copy of the blockchain data, and contributes to the network by receiving, validating, and forwarding transactions.
	EthereumDetailsNodeTypeFull = EthereumDetailsNodeType("FULL")
	// Holds the same data as full node as well as all of the blockchain's history state data dating back to the Genesis Block.
	EthereumDetailsNodeTypeArchive = EthereumDetailsNodeType("ARCHIVE")
)

func (EthereumDetailsNodeType) ElementType() reflect.Type {
	return reflect.TypeOf((*EthereumDetailsNodeType)(nil)).Elem()
}

func (e EthereumDetailsNodeType) ToEthereumDetailsNodeTypeOutput() EthereumDetailsNodeTypeOutput {
	return pulumi.ToOutput(e).(EthereumDetailsNodeTypeOutput)
}

func (e EthereumDetailsNodeType) ToEthereumDetailsNodeTypeOutputWithContext(ctx context.Context) EthereumDetailsNodeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EthereumDetailsNodeTypeOutput)
}

func (e EthereumDetailsNodeType) ToEthereumDetailsNodeTypePtrOutput() EthereumDetailsNodeTypePtrOutput {
	return e.ToEthereumDetailsNodeTypePtrOutputWithContext(context.Background())
}

func (e EthereumDetailsNodeType) ToEthereumDetailsNodeTypePtrOutputWithContext(ctx context.Context) EthereumDetailsNodeTypePtrOutput {
	return EthereumDetailsNodeType(e).ToEthereumDetailsNodeTypeOutputWithContext(ctx).ToEthereumDetailsNodeTypePtrOutputWithContext(ctx)
}

func (e EthereumDetailsNodeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EthereumDetailsNodeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EthereumDetailsNodeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EthereumDetailsNodeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EthereumDetailsNodeTypeOutput struct{ *pulumi.OutputState }

func (EthereumDetailsNodeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EthereumDetailsNodeType)(nil)).Elem()
}

func (o EthereumDetailsNodeTypeOutput) ToEthereumDetailsNodeTypeOutput() EthereumDetailsNodeTypeOutput {
	return o
}

func (o EthereumDetailsNodeTypeOutput) ToEthereumDetailsNodeTypeOutputWithContext(ctx context.Context) EthereumDetailsNodeTypeOutput {
	return o
}

func (o EthereumDetailsNodeTypeOutput) ToEthereumDetailsNodeTypePtrOutput() EthereumDetailsNodeTypePtrOutput {
	return o.ToEthereumDetailsNodeTypePtrOutputWithContext(context.Background())
}

func (o EthereumDetailsNodeTypeOutput) ToEthereumDetailsNodeTypePtrOutputWithContext(ctx context.Context) EthereumDetailsNodeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EthereumDetailsNodeType) *EthereumDetailsNodeType {
		return &v
	}).(EthereumDetailsNodeTypePtrOutput)
}

func (o EthereumDetailsNodeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EthereumDetailsNodeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EthereumDetailsNodeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EthereumDetailsNodeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EthereumDetailsNodeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EthereumDetailsNodeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EthereumDetailsNodeTypePtrOutput struct{ *pulumi.OutputState }

func (EthereumDetailsNodeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EthereumDetailsNodeType)(nil)).Elem()
}

func (o EthereumDetailsNodeTypePtrOutput) ToEthereumDetailsNodeTypePtrOutput() EthereumDetailsNodeTypePtrOutput {
	return o
}

func (o EthereumDetailsNodeTypePtrOutput) ToEthereumDetailsNodeTypePtrOutputWithContext(ctx context.Context) EthereumDetailsNodeTypePtrOutput {
	return o
}

func (o EthereumDetailsNodeTypePtrOutput) Elem() EthereumDetailsNodeTypeOutput {
	return o.ApplyT(func(v *EthereumDetailsNodeType) EthereumDetailsNodeType {
		if v != nil {
			return *v
		}
		var ret EthereumDetailsNodeType
		return ret
	}).(EthereumDetailsNodeTypeOutput)
}

func (o EthereumDetailsNodeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EthereumDetailsNodeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EthereumDetailsNodeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EthereumDetailsNodeTypeInput is an input type that accepts values of the EthereumDetailsNodeType enum
// A concrete instance of `EthereumDetailsNodeTypeInput` can be one of the following:
//
//	EthereumDetailsNodeTypeNodeTypeUnspecified
//	EthereumDetailsNodeTypeLight
//	EthereumDetailsNodeTypeFull
//	EthereumDetailsNodeTypeArchive
type EthereumDetailsNodeTypeInput interface {
	pulumi.Input

	ToEthereumDetailsNodeTypeOutput() EthereumDetailsNodeTypeOutput
	ToEthereumDetailsNodeTypeOutputWithContext(context.Context) EthereumDetailsNodeTypeOutput
}

var ethereumDetailsNodeTypePtrType = reflect.TypeOf((**EthereumDetailsNodeType)(nil)).Elem()

type EthereumDetailsNodeTypePtrInput interface {
	pulumi.Input

	ToEthereumDetailsNodeTypePtrOutput() EthereumDetailsNodeTypePtrOutput
	ToEthereumDetailsNodeTypePtrOutputWithContext(context.Context) EthereumDetailsNodeTypePtrOutput
}

type ethereumDetailsNodeTypePtr string

func EthereumDetailsNodeTypePtr(v string) EthereumDetailsNodeTypePtrInput {
	return (*ethereumDetailsNodeTypePtr)(&v)
}

func (*ethereumDetailsNodeTypePtr) ElementType() reflect.Type {
	return ethereumDetailsNodeTypePtrType
}

func (in *ethereumDetailsNodeTypePtr) ToEthereumDetailsNodeTypePtrOutput() EthereumDetailsNodeTypePtrOutput {
	return pulumi.ToOutput(in).(EthereumDetailsNodeTypePtrOutput)
}

func (in *ethereumDetailsNodeTypePtr) ToEthereumDetailsNodeTypePtrOutputWithContext(ctx context.Context) EthereumDetailsNodeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EthereumDetailsNodeTypePtrOutput)
}

// Immutable. Blockchain garbage collection mode.
type GethDetailsGarbageCollectionMode string

const (
	// The garbage collection has not been specified.
	GethDetailsGarbageCollectionModeGarbageCollectionModeUnspecified = GethDetailsGarbageCollectionMode("GARBAGE_COLLECTION_MODE_UNSPECIFIED")
	// Configures Geth's garbage collection so that older data not needed for a full node is deleted. This is the default mode when creating a full node.
	GethDetailsGarbageCollectionModeFull = GethDetailsGarbageCollectionMode("FULL")
	// Configures Geth's garbage collection so that old data is never deleted. This is the default mode when creating an archive node. This value can also be chosen when creating a full node in order to create a partial/recent archive node. See [Sync modes](https://geth.ethereum.org/docs/fundamentals/sync-modes) for more details.
	GethDetailsGarbageCollectionModeArchive = GethDetailsGarbageCollectionMode("ARCHIVE")
)

func (GethDetailsGarbageCollectionMode) ElementType() reflect.Type {
	return reflect.TypeOf((*GethDetailsGarbageCollectionMode)(nil)).Elem()
}

func (e GethDetailsGarbageCollectionMode) ToGethDetailsGarbageCollectionModeOutput() GethDetailsGarbageCollectionModeOutput {
	return pulumi.ToOutput(e).(GethDetailsGarbageCollectionModeOutput)
}

func (e GethDetailsGarbageCollectionMode) ToGethDetailsGarbageCollectionModeOutputWithContext(ctx context.Context) GethDetailsGarbageCollectionModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GethDetailsGarbageCollectionModeOutput)
}

func (e GethDetailsGarbageCollectionMode) ToGethDetailsGarbageCollectionModePtrOutput() GethDetailsGarbageCollectionModePtrOutput {
	return e.ToGethDetailsGarbageCollectionModePtrOutputWithContext(context.Background())
}

func (e GethDetailsGarbageCollectionMode) ToGethDetailsGarbageCollectionModePtrOutputWithContext(ctx context.Context) GethDetailsGarbageCollectionModePtrOutput {
	return GethDetailsGarbageCollectionMode(e).ToGethDetailsGarbageCollectionModeOutputWithContext(ctx).ToGethDetailsGarbageCollectionModePtrOutputWithContext(ctx)
}

func (e GethDetailsGarbageCollectionMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GethDetailsGarbageCollectionMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GethDetailsGarbageCollectionMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GethDetailsGarbageCollectionMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GethDetailsGarbageCollectionModeOutput struct{ *pulumi.OutputState }

func (GethDetailsGarbageCollectionModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GethDetailsGarbageCollectionMode)(nil)).Elem()
}

func (o GethDetailsGarbageCollectionModeOutput) ToGethDetailsGarbageCollectionModeOutput() GethDetailsGarbageCollectionModeOutput {
	return o
}

func (o GethDetailsGarbageCollectionModeOutput) ToGethDetailsGarbageCollectionModeOutputWithContext(ctx context.Context) GethDetailsGarbageCollectionModeOutput {
	return o
}

func (o GethDetailsGarbageCollectionModeOutput) ToGethDetailsGarbageCollectionModePtrOutput() GethDetailsGarbageCollectionModePtrOutput {
	return o.ToGethDetailsGarbageCollectionModePtrOutputWithContext(context.Background())
}

func (o GethDetailsGarbageCollectionModeOutput) ToGethDetailsGarbageCollectionModePtrOutputWithContext(ctx context.Context) GethDetailsGarbageCollectionModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GethDetailsGarbageCollectionMode) *GethDetailsGarbageCollectionMode {
		return &v
	}).(GethDetailsGarbageCollectionModePtrOutput)
}

func (o GethDetailsGarbageCollectionModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GethDetailsGarbageCollectionModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GethDetailsGarbageCollectionMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GethDetailsGarbageCollectionModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GethDetailsGarbageCollectionModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GethDetailsGarbageCollectionMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GethDetailsGarbageCollectionModePtrOutput struct{ *pulumi.OutputState }

func (GethDetailsGarbageCollectionModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GethDetailsGarbageCollectionMode)(nil)).Elem()
}

func (o GethDetailsGarbageCollectionModePtrOutput) ToGethDetailsGarbageCollectionModePtrOutput() GethDetailsGarbageCollectionModePtrOutput {
	return o
}

func (o GethDetailsGarbageCollectionModePtrOutput) ToGethDetailsGarbageCollectionModePtrOutputWithContext(ctx context.Context) GethDetailsGarbageCollectionModePtrOutput {
	return o
}

func (o GethDetailsGarbageCollectionModePtrOutput) Elem() GethDetailsGarbageCollectionModeOutput {
	return o.ApplyT(func(v *GethDetailsGarbageCollectionMode) GethDetailsGarbageCollectionMode {
		if v != nil {
			return *v
		}
		var ret GethDetailsGarbageCollectionMode
		return ret
	}).(GethDetailsGarbageCollectionModeOutput)
}

func (o GethDetailsGarbageCollectionModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GethDetailsGarbageCollectionModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GethDetailsGarbageCollectionMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GethDetailsGarbageCollectionModeInput is an input type that accepts values of the GethDetailsGarbageCollectionMode enum
// A concrete instance of `GethDetailsGarbageCollectionModeInput` can be one of the following:
//
//	GethDetailsGarbageCollectionModeGarbageCollectionModeUnspecified
//	GethDetailsGarbageCollectionModeFull
//	GethDetailsGarbageCollectionModeArchive
type GethDetailsGarbageCollectionModeInput interface {
	pulumi.Input

	ToGethDetailsGarbageCollectionModeOutput() GethDetailsGarbageCollectionModeOutput
	ToGethDetailsGarbageCollectionModeOutputWithContext(context.Context) GethDetailsGarbageCollectionModeOutput
}

var gethDetailsGarbageCollectionModePtrType = reflect.TypeOf((**GethDetailsGarbageCollectionMode)(nil)).Elem()

type GethDetailsGarbageCollectionModePtrInput interface {
	pulumi.Input

	ToGethDetailsGarbageCollectionModePtrOutput() GethDetailsGarbageCollectionModePtrOutput
	ToGethDetailsGarbageCollectionModePtrOutputWithContext(context.Context) GethDetailsGarbageCollectionModePtrOutput
}

type gethDetailsGarbageCollectionModePtr string

func GethDetailsGarbageCollectionModePtr(v string) GethDetailsGarbageCollectionModePtrInput {
	return (*gethDetailsGarbageCollectionModePtr)(&v)
}

func (*gethDetailsGarbageCollectionModePtr) ElementType() reflect.Type {
	return gethDetailsGarbageCollectionModePtrType
}

func (in *gethDetailsGarbageCollectionModePtr) ToGethDetailsGarbageCollectionModePtrOutput() GethDetailsGarbageCollectionModePtrOutput {
	return pulumi.ToOutput(in).(GethDetailsGarbageCollectionModePtrOutput)
}

func (in *gethDetailsGarbageCollectionModePtr) ToGethDetailsGarbageCollectionModePtrOutputWithContext(ctx context.Context) GethDetailsGarbageCollectionModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GethDetailsGarbageCollectionModePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BlockchainNodeBlockchainTypeInput)(nil)).Elem(), BlockchainNodeBlockchainType("BLOCKCHAIN_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BlockchainNodeBlockchainTypePtrInput)(nil)).Elem(), BlockchainNodeBlockchainType("BLOCKCHAIN_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EthereumDetailsConsensusClientInput)(nil)).Elem(), EthereumDetailsConsensusClient("CONSENSUS_CLIENT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EthereumDetailsConsensusClientPtrInput)(nil)).Elem(), EthereumDetailsConsensusClient("CONSENSUS_CLIENT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EthereumDetailsExecutionClientInput)(nil)).Elem(), EthereumDetailsExecutionClient("EXECUTION_CLIENT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EthereumDetailsExecutionClientPtrInput)(nil)).Elem(), EthereumDetailsExecutionClient("EXECUTION_CLIENT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EthereumDetailsNetworkInput)(nil)).Elem(), EthereumDetailsNetwork("NETWORK_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EthereumDetailsNetworkPtrInput)(nil)).Elem(), EthereumDetailsNetwork("NETWORK_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EthereumDetailsNodeTypeInput)(nil)).Elem(), EthereumDetailsNodeType("NODE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EthereumDetailsNodeTypePtrInput)(nil)).Elem(), EthereumDetailsNodeType("NODE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GethDetailsGarbageCollectionModeInput)(nil)).Elem(), GethDetailsGarbageCollectionMode("GARBAGE_COLLECTION_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GethDetailsGarbageCollectionModePtrInput)(nil)).Elem(), GethDetailsGarbageCollectionMode("GARBAGE_COLLECTION_MODE_UNSPECIFIED"))
	pulumi.RegisterOutputType(BlockchainNodeBlockchainTypeOutput{})
	pulumi.RegisterOutputType(BlockchainNodeBlockchainTypePtrOutput{})
	pulumi.RegisterOutputType(EthereumDetailsConsensusClientOutput{})
	pulumi.RegisterOutputType(EthereumDetailsConsensusClientPtrOutput{})
	pulumi.RegisterOutputType(EthereumDetailsExecutionClientOutput{})
	pulumi.RegisterOutputType(EthereumDetailsExecutionClientPtrOutput{})
	pulumi.RegisterOutputType(EthereumDetailsNetworkOutput{})
	pulumi.RegisterOutputType(EthereumDetailsNetworkPtrOutput{})
	pulumi.RegisterOutputType(EthereumDetailsNodeTypeOutput{})
	pulumi.RegisterOutputType(EthereumDetailsNodeTypePtrOutput{})
	pulumi.RegisterOutputType(GethDetailsGarbageCollectionModeOutput{})
	pulumi.RegisterOutputType(GethDetailsGarbageCollectionModePtrOutput{})
}
