// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type AuditConfig struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []AuditLogConfig `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
	Service *string `pulumi:"service"`
}

// AuditConfigInput is an input type that accepts AuditConfigArgs and AuditConfigOutput values.
// You can construct a concrete instance of `AuditConfigInput` via:
//
//          AuditConfigArgs{...}
type AuditConfigInput interface {
	pulumi.Input

	ToAuditConfigOutput() AuditConfigOutput
	ToAuditConfigOutputWithContext(context.Context) AuditConfigOutput
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type AuditConfigArgs struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs AuditLogConfigArrayInput `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (AuditConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfig)(nil)).Elem()
}

func (i AuditConfigArgs) ToAuditConfigOutput() AuditConfigOutput {
	return i.ToAuditConfigOutputWithContext(context.Background())
}

func (i AuditConfigArgs) ToAuditConfigOutputWithContext(ctx context.Context) AuditConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigOutput)
}

// AuditConfigArrayInput is an input type that accepts AuditConfigArray and AuditConfigArrayOutput values.
// You can construct a concrete instance of `AuditConfigArrayInput` via:
//
//          AuditConfigArray{ AuditConfigArgs{...} }
type AuditConfigArrayInput interface {
	pulumi.Input

	ToAuditConfigArrayOutput() AuditConfigArrayOutput
	ToAuditConfigArrayOutputWithContext(context.Context) AuditConfigArrayOutput
}

type AuditConfigArray []AuditConfigInput

func (AuditConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfig)(nil)).Elem()
}

func (i AuditConfigArray) ToAuditConfigArrayOutput() AuditConfigArrayOutput {
	return i.ToAuditConfigArrayOutputWithContext(context.Background())
}

func (i AuditConfigArray) ToAuditConfigArrayOutputWithContext(ctx context.Context) AuditConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigArrayOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type AuditConfigOutput struct{ *pulumi.OutputState }

func (AuditConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfig)(nil)).Elem()
}

func (o AuditConfigOutput) ToAuditConfigOutput() AuditConfigOutput {
	return o
}

func (o AuditConfigOutput) ToAuditConfigOutputWithContext(ctx context.Context) AuditConfigOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o AuditConfigOutput) AuditLogConfigs() AuditLogConfigArrayOutput {
	return o.ApplyT(func(v AuditConfig) []AuditLogConfig { return v.AuditLogConfigs }).(AuditLogConfigArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
func (o AuditConfigOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuditConfig) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type AuditConfigArrayOutput struct{ *pulumi.OutputState }

func (AuditConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfig)(nil)).Elem()
}

func (o AuditConfigArrayOutput) ToAuditConfigArrayOutput() AuditConfigArrayOutput {
	return o
}

func (o AuditConfigArrayOutput) ToAuditConfigArrayOutputWithContext(ctx context.Context) AuditConfigArrayOutput {
	return o
}

func (o AuditConfigArrayOutput) Index(i pulumi.IntInput) AuditConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditConfig {
		return vs[0].([]AuditConfig)[vs[1].(int)]
	}).(AuditConfigOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type AuditConfigResponse struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []AuditLogConfigResponse `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
	Service string `pulumi:"service"`
}

// AuditConfigResponseInput is an input type that accepts AuditConfigResponseArgs and AuditConfigResponseOutput values.
// You can construct a concrete instance of `AuditConfigResponseInput` via:
//
//          AuditConfigResponseArgs{...}
type AuditConfigResponseInput interface {
	pulumi.Input

	ToAuditConfigResponseOutput() AuditConfigResponseOutput
	ToAuditConfigResponseOutputWithContext(context.Context) AuditConfigResponseOutput
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type AuditConfigResponseArgs struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs AuditLogConfigResponseArrayInput `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
	Service pulumi.StringInput `pulumi:"service"`
}

func (AuditConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfigResponse)(nil)).Elem()
}

func (i AuditConfigResponseArgs) ToAuditConfigResponseOutput() AuditConfigResponseOutput {
	return i.ToAuditConfigResponseOutputWithContext(context.Background())
}

func (i AuditConfigResponseArgs) ToAuditConfigResponseOutputWithContext(ctx context.Context) AuditConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigResponseOutput)
}

// AuditConfigResponseArrayInput is an input type that accepts AuditConfigResponseArray and AuditConfigResponseArrayOutput values.
// You can construct a concrete instance of `AuditConfigResponseArrayInput` via:
//
//          AuditConfigResponseArray{ AuditConfigResponseArgs{...} }
type AuditConfigResponseArrayInput interface {
	pulumi.Input

	ToAuditConfigResponseArrayOutput() AuditConfigResponseArrayOutput
	ToAuditConfigResponseArrayOutputWithContext(context.Context) AuditConfigResponseArrayOutput
}

type AuditConfigResponseArray []AuditConfigResponseInput

func (AuditConfigResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfigResponse)(nil)).Elem()
}

func (i AuditConfigResponseArray) ToAuditConfigResponseArrayOutput() AuditConfigResponseArrayOutput {
	return i.ToAuditConfigResponseArrayOutputWithContext(context.Background())
}

func (i AuditConfigResponseArray) ToAuditConfigResponseArrayOutputWithContext(ctx context.Context) AuditConfigResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigResponseArrayOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type AuditConfigResponseOutput struct{ *pulumi.OutputState }

func (AuditConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfigResponse)(nil)).Elem()
}

func (o AuditConfigResponseOutput) ToAuditConfigResponseOutput() AuditConfigResponseOutput {
	return o
}

func (o AuditConfigResponseOutput) ToAuditConfigResponseOutputWithContext(ctx context.Context) AuditConfigResponseOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o AuditConfigResponseOutput) AuditLogConfigs() AuditLogConfigResponseArrayOutput {
	return o.ApplyT(func(v AuditConfigResponse) []AuditLogConfigResponse { return v.AuditLogConfigs }).(AuditLogConfigResponseArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
func (o AuditConfigResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v AuditConfigResponse) string { return v.Service }).(pulumi.StringOutput)
}

type AuditConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (AuditConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfigResponse)(nil)).Elem()
}

func (o AuditConfigResponseArrayOutput) ToAuditConfigResponseArrayOutput() AuditConfigResponseArrayOutput {
	return o
}

func (o AuditConfigResponseArrayOutput) ToAuditConfigResponseArrayOutputWithContext(ctx context.Context) AuditConfigResponseArrayOutput {
	return o
}

func (o AuditConfigResponseArrayOutput) Index(i pulumi.IntInput) AuditConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditConfigResponse {
		return vs[0].([]AuditConfigResponse)[vs[1].(int)]
	}).(AuditConfigResponseOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfig struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType *AuditLogConfigLogType `pulumi:"logType"`
}

// AuditLogConfigInput is an input type that accepts AuditLogConfigArgs and AuditLogConfigOutput values.
// You can construct a concrete instance of `AuditLogConfigInput` via:
//
//          AuditLogConfigArgs{...}
type AuditLogConfigInput interface {
	pulumi.Input

	ToAuditLogConfigOutput() AuditLogConfigOutput
	ToAuditLogConfigOutputWithContext(context.Context) AuditLogConfigOutput
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigArgs struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType AuditLogConfigLogTypePtrInput `pulumi:"logType"`
}

func (AuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfig)(nil)).Elem()
}

func (i AuditLogConfigArgs) ToAuditLogConfigOutput() AuditLogConfigOutput {
	return i.ToAuditLogConfigOutputWithContext(context.Background())
}

func (i AuditLogConfigArgs) ToAuditLogConfigOutputWithContext(ctx context.Context) AuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigOutput)
}

// AuditLogConfigArrayInput is an input type that accepts AuditLogConfigArray and AuditLogConfigArrayOutput values.
// You can construct a concrete instance of `AuditLogConfigArrayInput` via:
//
//          AuditLogConfigArray{ AuditLogConfigArgs{...} }
type AuditLogConfigArrayInput interface {
	pulumi.Input

	ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput
	ToAuditLogConfigArrayOutputWithContext(context.Context) AuditLogConfigArrayOutput
}

type AuditLogConfigArray []AuditLogConfigInput

func (AuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfig)(nil)).Elem()
}

func (i AuditLogConfigArray) ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput {
	return i.ToAuditLogConfigArrayOutputWithContext(context.Background())
}

func (i AuditLogConfigArray) ToAuditLogConfigArrayOutputWithContext(ctx context.Context) AuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigArrayOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigOutput struct{ *pulumi.OutputState }

func (AuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfig)(nil)).Elem()
}

func (o AuditLogConfigOutput) ToAuditLogConfigOutput() AuditLogConfigOutput {
	return o
}

func (o AuditLogConfigOutput) ToAuditLogConfigOutputWithContext(ctx context.Context) AuditLogConfigOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o AuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o AuditLogConfigOutput) LogType() AuditLogConfigLogTypePtrOutput {
	return o.ApplyT(func(v AuditLogConfig) *AuditLogConfigLogType { return v.LogType }).(AuditLogConfigLogTypePtrOutput)
}

type AuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (AuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfig)(nil)).Elem()
}

func (o AuditLogConfigArrayOutput) ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput {
	return o
}

func (o AuditLogConfigArrayOutput) ToAuditLogConfigArrayOutputWithContext(ctx context.Context) AuditLogConfigArrayOutput {
	return o
}

func (o AuditLogConfigArrayOutput) Index(i pulumi.IntInput) AuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditLogConfig {
		return vs[0].([]AuditLogConfig)[vs[1].(int)]
	}).(AuditLogConfigOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigResponse struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType string `pulumi:"logType"`
}

// AuditLogConfigResponseInput is an input type that accepts AuditLogConfigResponseArgs and AuditLogConfigResponseOutput values.
// You can construct a concrete instance of `AuditLogConfigResponseInput` via:
//
//          AuditLogConfigResponseArgs{...}
type AuditLogConfigResponseInput interface {
	pulumi.Input

	ToAuditLogConfigResponseOutput() AuditLogConfigResponseOutput
	ToAuditLogConfigResponseOutputWithContext(context.Context) AuditLogConfigResponseOutput
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigResponseArgs struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (AuditLogConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigResponse)(nil)).Elem()
}

func (i AuditLogConfigResponseArgs) ToAuditLogConfigResponseOutput() AuditLogConfigResponseOutput {
	return i.ToAuditLogConfigResponseOutputWithContext(context.Background())
}

func (i AuditLogConfigResponseArgs) ToAuditLogConfigResponseOutputWithContext(ctx context.Context) AuditLogConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigResponseOutput)
}

// AuditLogConfigResponseArrayInput is an input type that accepts AuditLogConfigResponseArray and AuditLogConfigResponseArrayOutput values.
// You can construct a concrete instance of `AuditLogConfigResponseArrayInput` via:
//
//          AuditLogConfigResponseArray{ AuditLogConfigResponseArgs{...} }
type AuditLogConfigResponseArrayInput interface {
	pulumi.Input

	ToAuditLogConfigResponseArrayOutput() AuditLogConfigResponseArrayOutput
	ToAuditLogConfigResponseArrayOutputWithContext(context.Context) AuditLogConfigResponseArrayOutput
}

type AuditLogConfigResponseArray []AuditLogConfigResponseInput

func (AuditLogConfigResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfigResponse)(nil)).Elem()
}

func (i AuditLogConfigResponseArray) ToAuditLogConfigResponseArrayOutput() AuditLogConfigResponseArrayOutput {
	return i.ToAuditLogConfigResponseArrayOutputWithContext(context.Background())
}

func (i AuditLogConfigResponseArray) ToAuditLogConfigResponseArrayOutputWithContext(ctx context.Context) AuditLogConfigResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigResponseArrayOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigResponseOutput struct{ *pulumi.OutputState }

func (AuditLogConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigResponse)(nil)).Elem()
}

func (o AuditLogConfigResponseOutput) ToAuditLogConfigResponseOutput() AuditLogConfigResponseOutput {
	return o
}

func (o AuditLogConfigResponseOutput) ToAuditLogConfigResponseOutputWithContext(ctx context.Context) AuditLogConfigResponseOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o AuditLogConfigResponseOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogConfigResponse) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o AuditLogConfigResponseOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v AuditLogConfigResponse) string { return v.LogType }).(pulumi.StringOutput)
}

type AuditLogConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (AuditLogConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfigResponse)(nil)).Elem()
}

func (o AuditLogConfigResponseArrayOutput) ToAuditLogConfigResponseArrayOutput() AuditLogConfigResponseArrayOutput {
	return o
}

func (o AuditLogConfigResponseArrayOutput) ToAuditLogConfigResponseArrayOutputWithContext(ctx context.Context) AuditLogConfigResponseArrayOutput {
	return o
}

func (o AuditLogConfigResponseArrayOutput) Index(i pulumi.IntInput) AuditLogConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditLogConfigResponse {
		return vs[0].([]AuditLogConfigResponse)[vs[1].(int)]
	}).(AuditLogConfigResponseOutput)
}

// Associates members with a role.
type Binding struct {
	// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition *Expr `pulumi:"condition"`
	// Specifies the identities requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
	Members []string `pulumi:"members"`
	// Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner.
	Role *string `pulumi:"role"`
}

// BindingInput is an input type that accepts BindingArgs and BindingOutput values.
// You can construct a concrete instance of `BindingInput` via:
//
//          BindingArgs{...}
type BindingInput interface {
	pulumi.Input

	ToBindingOutput() BindingOutput
	ToBindingOutputWithContext(context.Context) BindingOutput
}

// Associates members with a role.
type BindingArgs struct {
	// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprPtrInput `pulumi:"condition"`
	// Specifies the identities requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (BindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (i BindingArgs) ToBindingOutput() BindingOutput {
	return i.ToBindingOutputWithContext(context.Background())
}

func (i BindingArgs) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingOutput)
}

// BindingArrayInput is an input type that accepts BindingArray and BindingArrayOutput values.
// You can construct a concrete instance of `BindingArrayInput` via:
//
//          BindingArray{ BindingArgs{...} }
type BindingArrayInput interface {
	pulumi.Input

	ToBindingArrayOutput() BindingArrayOutput
	ToBindingArrayOutputWithContext(context.Context) BindingArrayOutput
}

type BindingArray []BindingInput

func (BindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (i BindingArray) ToBindingArrayOutput() BindingArrayOutput {
	return i.ToBindingArrayOutputWithContext(context.Background())
}

func (i BindingArray) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingArrayOutput)
}

// Associates members with a role.
type BindingOutput struct{ *pulumi.OutputState }

func (BindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (o BindingOutput) ToBindingOutput() BindingOutput {
	return o
}

func (o BindingOutput) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return o
}

// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingOutput) Condition() ExprPtrOutput {
	return o.ApplyT(func(v Binding) *Expr { return v.Condition }).(ExprPtrOutput)
}

// Specifies the identities requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
func (o BindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Binding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner.
func (o BindingOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Binding) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type BindingArrayOutput struct{ *pulumi.OutputState }

func (BindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (o BindingArrayOutput) ToBindingArrayOutput() BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) Index(i pulumi.IntInput) BindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Binding {
		return vs[0].([]Binding)[vs[1].(int)]
	}).(BindingOutput)
}

// Associates members with a role.
type BindingResponse struct {
	// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprResponse `pulumi:"condition"`
	// Specifies the identities requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
	Members []string `pulumi:"members"`
	// Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner.
	Role string `pulumi:"role"`
}

// BindingResponseInput is an input type that accepts BindingResponseArgs and BindingResponseOutput values.
// You can construct a concrete instance of `BindingResponseInput` via:
//
//          BindingResponseArgs{...}
type BindingResponseInput interface {
	pulumi.Input

	ToBindingResponseOutput() BindingResponseOutput
	ToBindingResponseOutputWithContext(context.Context) BindingResponseOutput
}

// Associates members with a role.
type BindingResponseArgs struct {
	// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprResponseInput `pulumi:"condition"`
	// Specifies the identities requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner.
	Role pulumi.StringInput `pulumi:"role"`
}

func (BindingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingResponse)(nil)).Elem()
}

func (i BindingResponseArgs) ToBindingResponseOutput() BindingResponseOutput {
	return i.ToBindingResponseOutputWithContext(context.Background())
}

func (i BindingResponseArgs) ToBindingResponseOutputWithContext(ctx context.Context) BindingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingResponseOutput)
}

// BindingResponseArrayInput is an input type that accepts BindingResponseArray and BindingResponseArrayOutput values.
// You can construct a concrete instance of `BindingResponseArrayInput` via:
//
//          BindingResponseArray{ BindingResponseArgs{...} }
type BindingResponseArrayInput interface {
	pulumi.Input

	ToBindingResponseArrayOutput() BindingResponseArrayOutput
	ToBindingResponseArrayOutputWithContext(context.Context) BindingResponseArrayOutput
}

type BindingResponseArray []BindingResponseInput

func (BindingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingResponse)(nil)).Elem()
}

func (i BindingResponseArray) ToBindingResponseArrayOutput() BindingResponseArrayOutput {
	return i.ToBindingResponseArrayOutputWithContext(context.Background())
}

func (i BindingResponseArray) ToBindingResponseArrayOutputWithContext(ctx context.Context) BindingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingResponseArrayOutput)
}

// Associates members with a role.
type BindingResponseOutput struct{ *pulumi.OutputState }

func (BindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingResponse)(nil)).Elem()
}

func (o BindingResponseOutput) ToBindingResponseOutput() BindingResponseOutput {
	return o
}

func (o BindingResponseOutput) ToBindingResponseOutputWithContext(ctx context.Context) BindingResponseOutput {
	return o
}

// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingResponseOutput) Condition() ExprResponseOutput {
	return o.ApplyT(func(v BindingResponse) ExprResponse { return v.Condition }).(ExprResponseOutput)
}

// Specifies the identities requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
func (o BindingResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BindingResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner.
func (o BindingResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v BindingResponse) string { return v.Role }).(pulumi.StringOutput)
}

type BindingResponseArrayOutput struct{ *pulumi.OutputState }

func (BindingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingResponse)(nil)).Elem()
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutput() BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutputWithContext(ctx context.Context) BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) Index(i pulumi.IntInput) BindingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BindingResponse {
		return vs[0].([]BindingResponse)[vs[1].(int)]
	}).(BindingResponseOutput)
}

// Specifies how metastore metadata should be integrated with the Data Catalog service.
type DataCatalogConfig struct {
	// Defines whether the metastore metadata should be synced to Data Catalog. The default value is to disable syncing metastore metadata to Data Catalog.
	Enabled *bool `pulumi:"enabled"`
}

// DataCatalogConfigInput is an input type that accepts DataCatalogConfigArgs and DataCatalogConfigOutput values.
// You can construct a concrete instance of `DataCatalogConfigInput` via:
//
//          DataCatalogConfigArgs{...}
type DataCatalogConfigInput interface {
	pulumi.Input

	ToDataCatalogConfigOutput() DataCatalogConfigOutput
	ToDataCatalogConfigOutputWithContext(context.Context) DataCatalogConfigOutput
}

// Specifies how metastore metadata should be integrated with the Data Catalog service.
type DataCatalogConfigArgs struct {
	// Defines whether the metastore metadata should be synced to Data Catalog. The default value is to disable syncing metastore metadata to Data Catalog.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (DataCatalogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataCatalogConfig)(nil)).Elem()
}

func (i DataCatalogConfigArgs) ToDataCatalogConfigOutput() DataCatalogConfigOutput {
	return i.ToDataCatalogConfigOutputWithContext(context.Background())
}

func (i DataCatalogConfigArgs) ToDataCatalogConfigOutputWithContext(ctx context.Context) DataCatalogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCatalogConfigOutput)
}

func (i DataCatalogConfigArgs) ToDataCatalogConfigPtrOutput() DataCatalogConfigPtrOutput {
	return i.ToDataCatalogConfigPtrOutputWithContext(context.Background())
}

func (i DataCatalogConfigArgs) ToDataCatalogConfigPtrOutputWithContext(ctx context.Context) DataCatalogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCatalogConfigOutput).ToDataCatalogConfigPtrOutputWithContext(ctx)
}

// DataCatalogConfigPtrInput is an input type that accepts DataCatalogConfigArgs, DataCatalogConfigPtr and DataCatalogConfigPtrOutput values.
// You can construct a concrete instance of `DataCatalogConfigPtrInput` via:
//
//          DataCatalogConfigArgs{...}
//
//  or:
//
//          nil
type DataCatalogConfigPtrInput interface {
	pulumi.Input

	ToDataCatalogConfigPtrOutput() DataCatalogConfigPtrOutput
	ToDataCatalogConfigPtrOutputWithContext(context.Context) DataCatalogConfigPtrOutput
}

type dataCatalogConfigPtrType DataCatalogConfigArgs

func DataCatalogConfigPtr(v *DataCatalogConfigArgs) DataCatalogConfigPtrInput {
	return (*dataCatalogConfigPtrType)(v)
}

func (*dataCatalogConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogConfig)(nil)).Elem()
}

func (i *dataCatalogConfigPtrType) ToDataCatalogConfigPtrOutput() DataCatalogConfigPtrOutput {
	return i.ToDataCatalogConfigPtrOutputWithContext(context.Background())
}

func (i *dataCatalogConfigPtrType) ToDataCatalogConfigPtrOutputWithContext(ctx context.Context) DataCatalogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCatalogConfigPtrOutput)
}

// Specifies how metastore metadata should be integrated with the Data Catalog service.
type DataCatalogConfigOutput struct{ *pulumi.OutputState }

func (DataCatalogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataCatalogConfig)(nil)).Elem()
}

func (o DataCatalogConfigOutput) ToDataCatalogConfigOutput() DataCatalogConfigOutput {
	return o
}

func (o DataCatalogConfigOutput) ToDataCatalogConfigOutputWithContext(ctx context.Context) DataCatalogConfigOutput {
	return o
}

func (o DataCatalogConfigOutput) ToDataCatalogConfigPtrOutput() DataCatalogConfigPtrOutput {
	return o.ToDataCatalogConfigPtrOutputWithContext(context.Background())
}

func (o DataCatalogConfigOutput) ToDataCatalogConfigPtrOutputWithContext(ctx context.Context) DataCatalogConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataCatalogConfig) *DataCatalogConfig {
		return &v
	}).(DataCatalogConfigPtrOutput)
}

// Defines whether the metastore metadata should be synced to Data Catalog. The default value is to disable syncing metastore metadata to Data Catalog.
func (o DataCatalogConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataCatalogConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type DataCatalogConfigPtrOutput struct{ *pulumi.OutputState }

func (DataCatalogConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogConfig)(nil)).Elem()
}

func (o DataCatalogConfigPtrOutput) ToDataCatalogConfigPtrOutput() DataCatalogConfigPtrOutput {
	return o
}

func (o DataCatalogConfigPtrOutput) ToDataCatalogConfigPtrOutputWithContext(ctx context.Context) DataCatalogConfigPtrOutput {
	return o
}

func (o DataCatalogConfigPtrOutput) Elem() DataCatalogConfigOutput {
	return o.ApplyT(func(v *DataCatalogConfig) DataCatalogConfig {
		if v != nil {
			return *v
		}
		var ret DataCatalogConfig
		return ret
	}).(DataCatalogConfigOutput)
}

// Defines whether the metastore metadata should be synced to Data Catalog. The default value is to disable syncing metastore metadata to Data Catalog.
func (o DataCatalogConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataCatalogConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies how metastore metadata should be integrated with the Data Catalog service.
type DataCatalogConfigResponse struct {
	// Defines whether the metastore metadata should be synced to Data Catalog. The default value is to disable syncing metastore metadata to Data Catalog.
	Enabled bool `pulumi:"enabled"`
}

// DataCatalogConfigResponseInput is an input type that accepts DataCatalogConfigResponseArgs and DataCatalogConfigResponseOutput values.
// You can construct a concrete instance of `DataCatalogConfigResponseInput` via:
//
//          DataCatalogConfigResponseArgs{...}
type DataCatalogConfigResponseInput interface {
	pulumi.Input

	ToDataCatalogConfigResponseOutput() DataCatalogConfigResponseOutput
	ToDataCatalogConfigResponseOutputWithContext(context.Context) DataCatalogConfigResponseOutput
}

// Specifies how metastore metadata should be integrated with the Data Catalog service.
type DataCatalogConfigResponseArgs struct {
	// Defines whether the metastore metadata should be synced to Data Catalog. The default value is to disable syncing metastore metadata to Data Catalog.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (DataCatalogConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataCatalogConfigResponse)(nil)).Elem()
}

func (i DataCatalogConfigResponseArgs) ToDataCatalogConfigResponseOutput() DataCatalogConfigResponseOutput {
	return i.ToDataCatalogConfigResponseOutputWithContext(context.Background())
}

func (i DataCatalogConfigResponseArgs) ToDataCatalogConfigResponseOutputWithContext(ctx context.Context) DataCatalogConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCatalogConfigResponseOutput)
}

func (i DataCatalogConfigResponseArgs) ToDataCatalogConfigResponsePtrOutput() DataCatalogConfigResponsePtrOutput {
	return i.ToDataCatalogConfigResponsePtrOutputWithContext(context.Background())
}

func (i DataCatalogConfigResponseArgs) ToDataCatalogConfigResponsePtrOutputWithContext(ctx context.Context) DataCatalogConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCatalogConfigResponseOutput).ToDataCatalogConfigResponsePtrOutputWithContext(ctx)
}

// DataCatalogConfigResponsePtrInput is an input type that accepts DataCatalogConfigResponseArgs, DataCatalogConfigResponsePtr and DataCatalogConfigResponsePtrOutput values.
// You can construct a concrete instance of `DataCatalogConfigResponsePtrInput` via:
//
//          DataCatalogConfigResponseArgs{...}
//
//  or:
//
//          nil
type DataCatalogConfigResponsePtrInput interface {
	pulumi.Input

	ToDataCatalogConfigResponsePtrOutput() DataCatalogConfigResponsePtrOutput
	ToDataCatalogConfigResponsePtrOutputWithContext(context.Context) DataCatalogConfigResponsePtrOutput
}

type dataCatalogConfigResponsePtrType DataCatalogConfigResponseArgs

func DataCatalogConfigResponsePtr(v *DataCatalogConfigResponseArgs) DataCatalogConfigResponsePtrInput {
	return (*dataCatalogConfigResponsePtrType)(v)
}

func (*dataCatalogConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogConfigResponse)(nil)).Elem()
}

func (i *dataCatalogConfigResponsePtrType) ToDataCatalogConfigResponsePtrOutput() DataCatalogConfigResponsePtrOutput {
	return i.ToDataCatalogConfigResponsePtrOutputWithContext(context.Background())
}

func (i *dataCatalogConfigResponsePtrType) ToDataCatalogConfigResponsePtrOutputWithContext(ctx context.Context) DataCatalogConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCatalogConfigResponsePtrOutput)
}

// Specifies how metastore metadata should be integrated with the Data Catalog service.
type DataCatalogConfigResponseOutput struct{ *pulumi.OutputState }

func (DataCatalogConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataCatalogConfigResponse)(nil)).Elem()
}

func (o DataCatalogConfigResponseOutput) ToDataCatalogConfigResponseOutput() DataCatalogConfigResponseOutput {
	return o
}

func (o DataCatalogConfigResponseOutput) ToDataCatalogConfigResponseOutputWithContext(ctx context.Context) DataCatalogConfigResponseOutput {
	return o
}

func (o DataCatalogConfigResponseOutput) ToDataCatalogConfigResponsePtrOutput() DataCatalogConfigResponsePtrOutput {
	return o.ToDataCatalogConfigResponsePtrOutputWithContext(context.Background())
}

func (o DataCatalogConfigResponseOutput) ToDataCatalogConfigResponsePtrOutputWithContext(ctx context.Context) DataCatalogConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataCatalogConfigResponse) *DataCatalogConfigResponse {
		return &v
	}).(DataCatalogConfigResponsePtrOutput)
}

// Defines whether the metastore metadata should be synced to Data Catalog. The default value is to disable syncing metastore metadata to Data Catalog.
func (o DataCatalogConfigResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DataCatalogConfigResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type DataCatalogConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (DataCatalogConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogConfigResponse)(nil)).Elem()
}

func (o DataCatalogConfigResponsePtrOutput) ToDataCatalogConfigResponsePtrOutput() DataCatalogConfigResponsePtrOutput {
	return o
}

func (o DataCatalogConfigResponsePtrOutput) ToDataCatalogConfigResponsePtrOutputWithContext(ctx context.Context) DataCatalogConfigResponsePtrOutput {
	return o
}

func (o DataCatalogConfigResponsePtrOutput) Elem() DataCatalogConfigResponseOutput {
	return o.ApplyT(func(v *DataCatalogConfigResponse) DataCatalogConfigResponse {
		if v != nil {
			return *v
		}
		var ret DataCatalogConfigResponse
		return ret
	}).(DataCatalogConfigResponseOutput)
}

// Defines whether the metastore metadata should be synced to Data Catalog. The default value is to disable syncing metastore metadata to Data Catalog.
func (o DataCatalogConfigResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataCatalogConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A specification of the location of and metadata about a database dump from a relational database management system.
type DatabaseDump struct {
	// The type of the database.
	DatabaseType *DatabaseDumpDatabaseType `pulumi:"databaseType"`
	// A Cloud Storage object or folder URI that specifies the source from which to import metadata. It must begin with gs://.
	GcsUri *string `pulumi:"gcsUri"`
	// The name of the source database.
	SourceDatabase *string `pulumi:"sourceDatabase"`
	// Optional. The type of the database dump. If unspecified, defaults to MYSQL.
	Type *DatabaseDumpType `pulumi:"type"`
}

// DatabaseDumpInput is an input type that accepts DatabaseDumpArgs and DatabaseDumpOutput values.
// You can construct a concrete instance of `DatabaseDumpInput` via:
//
//          DatabaseDumpArgs{...}
type DatabaseDumpInput interface {
	pulumi.Input

	ToDatabaseDumpOutput() DatabaseDumpOutput
	ToDatabaseDumpOutputWithContext(context.Context) DatabaseDumpOutput
}

// A specification of the location of and metadata about a database dump from a relational database management system.
type DatabaseDumpArgs struct {
	// The type of the database.
	DatabaseType DatabaseDumpDatabaseTypePtrInput `pulumi:"databaseType"`
	// A Cloud Storage object or folder URI that specifies the source from which to import metadata. It must begin with gs://.
	GcsUri pulumi.StringPtrInput `pulumi:"gcsUri"`
	// The name of the source database.
	SourceDatabase pulumi.StringPtrInput `pulumi:"sourceDatabase"`
	// Optional. The type of the database dump. If unspecified, defaults to MYSQL.
	Type DatabaseDumpTypePtrInput `pulumi:"type"`
}

func (DatabaseDumpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseDump)(nil)).Elem()
}

func (i DatabaseDumpArgs) ToDatabaseDumpOutput() DatabaseDumpOutput {
	return i.ToDatabaseDumpOutputWithContext(context.Background())
}

func (i DatabaseDumpArgs) ToDatabaseDumpOutputWithContext(ctx context.Context) DatabaseDumpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseDumpOutput)
}

func (i DatabaseDumpArgs) ToDatabaseDumpPtrOutput() DatabaseDumpPtrOutput {
	return i.ToDatabaseDumpPtrOutputWithContext(context.Background())
}

func (i DatabaseDumpArgs) ToDatabaseDumpPtrOutputWithContext(ctx context.Context) DatabaseDumpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseDumpOutput).ToDatabaseDumpPtrOutputWithContext(ctx)
}

// DatabaseDumpPtrInput is an input type that accepts DatabaseDumpArgs, DatabaseDumpPtr and DatabaseDumpPtrOutput values.
// You can construct a concrete instance of `DatabaseDumpPtrInput` via:
//
//          DatabaseDumpArgs{...}
//
//  or:
//
//          nil
type DatabaseDumpPtrInput interface {
	pulumi.Input

	ToDatabaseDumpPtrOutput() DatabaseDumpPtrOutput
	ToDatabaseDumpPtrOutputWithContext(context.Context) DatabaseDumpPtrOutput
}

type databaseDumpPtrType DatabaseDumpArgs

func DatabaseDumpPtr(v *DatabaseDumpArgs) DatabaseDumpPtrInput {
	return (*databaseDumpPtrType)(v)
}

func (*databaseDumpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseDump)(nil)).Elem()
}

func (i *databaseDumpPtrType) ToDatabaseDumpPtrOutput() DatabaseDumpPtrOutput {
	return i.ToDatabaseDumpPtrOutputWithContext(context.Background())
}

func (i *databaseDumpPtrType) ToDatabaseDumpPtrOutputWithContext(ctx context.Context) DatabaseDumpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseDumpPtrOutput)
}

// A specification of the location of and metadata about a database dump from a relational database management system.
type DatabaseDumpOutput struct{ *pulumi.OutputState }

func (DatabaseDumpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseDump)(nil)).Elem()
}

func (o DatabaseDumpOutput) ToDatabaseDumpOutput() DatabaseDumpOutput {
	return o
}

func (o DatabaseDumpOutput) ToDatabaseDumpOutputWithContext(ctx context.Context) DatabaseDumpOutput {
	return o
}

func (o DatabaseDumpOutput) ToDatabaseDumpPtrOutput() DatabaseDumpPtrOutput {
	return o.ToDatabaseDumpPtrOutputWithContext(context.Background())
}

func (o DatabaseDumpOutput) ToDatabaseDumpPtrOutputWithContext(ctx context.Context) DatabaseDumpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseDump) *DatabaseDump {
		return &v
	}).(DatabaseDumpPtrOutput)
}

// The type of the database.
func (o DatabaseDumpOutput) DatabaseType() DatabaseDumpDatabaseTypePtrOutput {
	return o.ApplyT(func(v DatabaseDump) *DatabaseDumpDatabaseType { return v.DatabaseType }).(DatabaseDumpDatabaseTypePtrOutput)
}

// A Cloud Storage object or folder URI that specifies the source from which to import metadata. It must begin with gs://.
func (o DatabaseDumpOutput) GcsUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseDump) *string { return v.GcsUri }).(pulumi.StringPtrOutput)
}

// The name of the source database.
func (o DatabaseDumpOutput) SourceDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseDump) *string { return v.SourceDatabase }).(pulumi.StringPtrOutput)
}

// Optional. The type of the database dump. If unspecified, defaults to MYSQL.
func (o DatabaseDumpOutput) Type() DatabaseDumpTypePtrOutput {
	return o.ApplyT(func(v DatabaseDump) *DatabaseDumpType { return v.Type }).(DatabaseDumpTypePtrOutput)
}

type DatabaseDumpPtrOutput struct{ *pulumi.OutputState }

func (DatabaseDumpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseDump)(nil)).Elem()
}

func (o DatabaseDumpPtrOutput) ToDatabaseDumpPtrOutput() DatabaseDumpPtrOutput {
	return o
}

func (o DatabaseDumpPtrOutput) ToDatabaseDumpPtrOutputWithContext(ctx context.Context) DatabaseDumpPtrOutput {
	return o
}

func (o DatabaseDumpPtrOutput) Elem() DatabaseDumpOutput {
	return o.ApplyT(func(v *DatabaseDump) DatabaseDump {
		if v != nil {
			return *v
		}
		var ret DatabaseDump
		return ret
	}).(DatabaseDumpOutput)
}

// The type of the database.
func (o DatabaseDumpPtrOutput) DatabaseType() DatabaseDumpDatabaseTypePtrOutput {
	return o.ApplyT(func(v *DatabaseDump) *DatabaseDumpDatabaseType {
		if v == nil {
			return nil
		}
		return v.DatabaseType
	}).(DatabaseDumpDatabaseTypePtrOutput)
}

// A Cloud Storage object or folder URI that specifies the source from which to import metadata. It must begin with gs://.
func (o DatabaseDumpPtrOutput) GcsUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseDump) *string {
		if v == nil {
			return nil
		}
		return v.GcsUri
	}).(pulumi.StringPtrOutput)
}

// The name of the source database.
func (o DatabaseDumpPtrOutput) SourceDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseDump) *string {
		if v == nil {
			return nil
		}
		return v.SourceDatabase
	}).(pulumi.StringPtrOutput)
}

// Optional. The type of the database dump. If unspecified, defaults to MYSQL.
func (o DatabaseDumpPtrOutput) Type() DatabaseDumpTypePtrOutput {
	return o.ApplyT(func(v *DatabaseDump) *DatabaseDumpType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(DatabaseDumpTypePtrOutput)
}

// A specification of the location of and metadata about a database dump from a relational database management system.
type DatabaseDumpResponse struct {
	// The type of the database.
	DatabaseType string `pulumi:"databaseType"`
	// A Cloud Storage object or folder URI that specifies the source from which to import metadata. It must begin with gs://.
	GcsUri string `pulumi:"gcsUri"`
	// The name of the source database.
	SourceDatabase string `pulumi:"sourceDatabase"`
	// Optional. The type of the database dump. If unspecified, defaults to MYSQL.
	Type string `pulumi:"type"`
}

// DatabaseDumpResponseInput is an input type that accepts DatabaseDumpResponseArgs and DatabaseDumpResponseOutput values.
// You can construct a concrete instance of `DatabaseDumpResponseInput` via:
//
//          DatabaseDumpResponseArgs{...}
type DatabaseDumpResponseInput interface {
	pulumi.Input

	ToDatabaseDumpResponseOutput() DatabaseDumpResponseOutput
	ToDatabaseDumpResponseOutputWithContext(context.Context) DatabaseDumpResponseOutput
}

// A specification of the location of and metadata about a database dump from a relational database management system.
type DatabaseDumpResponseArgs struct {
	// The type of the database.
	DatabaseType pulumi.StringInput `pulumi:"databaseType"`
	// A Cloud Storage object or folder URI that specifies the source from which to import metadata. It must begin with gs://.
	GcsUri pulumi.StringInput `pulumi:"gcsUri"`
	// The name of the source database.
	SourceDatabase pulumi.StringInput `pulumi:"sourceDatabase"`
	// Optional. The type of the database dump. If unspecified, defaults to MYSQL.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatabaseDumpResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseDumpResponse)(nil)).Elem()
}

func (i DatabaseDumpResponseArgs) ToDatabaseDumpResponseOutput() DatabaseDumpResponseOutput {
	return i.ToDatabaseDumpResponseOutputWithContext(context.Background())
}

func (i DatabaseDumpResponseArgs) ToDatabaseDumpResponseOutputWithContext(ctx context.Context) DatabaseDumpResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseDumpResponseOutput)
}

func (i DatabaseDumpResponseArgs) ToDatabaseDumpResponsePtrOutput() DatabaseDumpResponsePtrOutput {
	return i.ToDatabaseDumpResponsePtrOutputWithContext(context.Background())
}

func (i DatabaseDumpResponseArgs) ToDatabaseDumpResponsePtrOutputWithContext(ctx context.Context) DatabaseDumpResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseDumpResponseOutput).ToDatabaseDumpResponsePtrOutputWithContext(ctx)
}

// DatabaseDumpResponsePtrInput is an input type that accepts DatabaseDumpResponseArgs, DatabaseDumpResponsePtr and DatabaseDumpResponsePtrOutput values.
// You can construct a concrete instance of `DatabaseDumpResponsePtrInput` via:
//
//          DatabaseDumpResponseArgs{...}
//
//  or:
//
//          nil
type DatabaseDumpResponsePtrInput interface {
	pulumi.Input

	ToDatabaseDumpResponsePtrOutput() DatabaseDumpResponsePtrOutput
	ToDatabaseDumpResponsePtrOutputWithContext(context.Context) DatabaseDumpResponsePtrOutput
}

type databaseDumpResponsePtrType DatabaseDumpResponseArgs

func DatabaseDumpResponsePtr(v *DatabaseDumpResponseArgs) DatabaseDumpResponsePtrInput {
	return (*databaseDumpResponsePtrType)(v)
}

func (*databaseDumpResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseDumpResponse)(nil)).Elem()
}

func (i *databaseDumpResponsePtrType) ToDatabaseDumpResponsePtrOutput() DatabaseDumpResponsePtrOutput {
	return i.ToDatabaseDumpResponsePtrOutputWithContext(context.Background())
}

func (i *databaseDumpResponsePtrType) ToDatabaseDumpResponsePtrOutputWithContext(ctx context.Context) DatabaseDumpResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseDumpResponsePtrOutput)
}

// A specification of the location of and metadata about a database dump from a relational database management system.
type DatabaseDumpResponseOutput struct{ *pulumi.OutputState }

func (DatabaseDumpResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseDumpResponse)(nil)).Elem()
}

func (o DatabaseDumpResponseOutput) ToDatabaseDumpResponseOutput() DatabaseDumpResponseOutput {
	return o
}

func (o DatabaseDumpResponseOutput) ToDatabaseDumpResponseOutputWithContext(ctx context.Context) DatabaseDumpResponseOutput {
	return o
}

func (o DatabaseDumpResponseOutput) ToDatabaseDumpResponsePtrOutput() DatabaseDumpResponsePtrOutput {
	return o.ToDatabaseDumpResponsePtrOutputWithContext(context.Background())
}

func (o DatabaseDumpResponseOutput) ToDatabaseDumpResponsePtrOutputWithContext(ctx context.Context) DatabaseDumpResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseDumpResponse) *DatabaseDumpResponse {
		return &v
	}).(DatabaseDumpResponsePtrOutput)
}

// The type of the database.
func (o DatabaseDumpResponseOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseDumpResponse) string { return v.DatabaseType }).(pulumi.StringOutput)
}

// A Cloud Storage object or folder URI that specifies the source from which to import metadata. It must begin with gs://.
func (o DatabaseDumpResponseOutput) GcsUri() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseDumpResponse) string { return v.GcsUri }).(pulumi.StringOutput)
}

// The name of the source database.
func (o DatabaseDumpResponseOutput) SourceDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseDumpResponse) string { return v.SourceDatabase }).(pulumi.StringOutput)
}

// Optional. The type of the database dump. If unspecified, defaults to MYSQL.
func (o DatabaseDumpResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseDumpResponse) string { return v.Type }).(pulumi.StringOutput)
}

type DatabaseDumpResponsePtrOutput struct{ *pulumi.OutputState }

func (DatabaseDumpResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseDumpResponse)(nil)).Elem()
}

func (o DatabaseDumpResponsePtrOutput) ToDatabaseDumpResponsePtrOutput() DatabaseDumpResponsePtrOutput {
	return o
}

func (o DatabaseDumpResponsePtrOutput) ToDatabaseDumpResponsePtrOutputWithContext(ctx context.Context) DatabaseDumpResponsePtrOutput {
	return o
}

func (o DatabaseDumpResponsePtrOutput) Elem() DatabaseDumpResponseOutput {
	return o.ApplyT(func(v *DatabaseDumpResponse) DatabaseDumpResponse {
		if v != nil {
			return *v
		}
		var ret DatabaseDumpResponse
		return ret
	}).(DatabaseDumpResponseOutput)
}

// The type of the database.
func (o DatabaseDumpResponsePtrOutput) DatabaseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseDumpResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseType
	}).(pulumi.StringPtrOutput)
}

// A Cloud Storage object or folder URI that specifies the source from which to import metadata. It must begin with gs://.
func (o DatabaseDumpResponsePtrOutput) GcsUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseDumpResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GcsUri
	}).(pulumi.StringPtrOutput)
}

// The name of the source database.
func (o DatabaseDumpResponsePtrOutput) SourceDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseDumpResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceDatabase
	}).(pulumi.StringPtrOutput)
}

// Optional. The type of the database dump. If unspecified, defaults to MYSQL.
func (o DatabaseDumpResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseDumpResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Encryption settings for the service.
type EncryptionConfig struct {
	// The fully qualified customer provided Cloud KMS key name to use for customer data encryption, in the following form:projects/{project_number}/locations/{location_id}/keyRings/{key_ring_id}/cryptoKeys/{crypto_key_id}.
	KmsKey *string `pulumi:"kmsKey"`
}

// EncryptionConfigInput is an input type that accepts EncryptionConfigArgs and EncryptionConfigOutput values.
// You can construct a concrete instance of `EncryptionConfigInput` via:
//
//          EncryptionConfigArgs{...}
type EncryptionConfigInput interface {
	pulumi.Input

	ToEncryptionConfigOutput() EncryptionConfigOutput
	ToEncryptionConfigOutputWithContext(context.Context) EncryptionConfigOutput
}

// Encryption settings for the service.
type EncryptionConfigArgs struct {
	// The fully qualified customer provided Cloud KMS key name to use for customer data encryption, in the following form:projects/{project_number}/locations/{location_id}/keyRings/{key_ring_id}/cryptoKeys/{crypto_key_id}.
	KmsKey pulumi.StringPtrInput `pulumi:"kmsKey"`
}

func (EncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfig)(nil)).Elem()
}

func (i EncryptionConfigArgs) ToEncryptionConfigOutput() EncryptionConfigOutput {
	return i.ToEncryptionConfigOutputWithContext(context.Background())
}

func (i EncryptionConfigArgs) ToEncryptionConfigOutputWithContext(ctx context.Context) EncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigOutput)
}

func (i EncryptionConfigArgs) ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput {
	return i.ToEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i EncryptionConfigArgs) ToEncryptionConfigPtrOutputWithContext(ctx context.Context) EncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigOutput).ToEncryptionConfigPtrOutputWithContext(ctx)
}

// EncryptionConfigPtrInput is an input type that accepts EncryptionConfigArgs, EncryptionConfigPtr and EncryptionConfigPtrOutput values.
// You can construct a concrete instance of `EncryptionConfigPtrInput` via:
//
//          EncryptionConfigArgs{...}
//
//  or:
//
//          nil
type EncryptionConfigPtrInput interface {
	pulumi.Input

	ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput
	ToEncryptionConfigPtrOutputWithContext(context.Context) EncryptionConfigPtrOutput
}

type encryptionConfigPtrType EncryptionConfigArgs

func EncryptionConfigPtr(v *EncryptionConfigArgs) EncryptionConfigPtrInput {
	return (*encryptionConfigPtrType)(v)
}

func (*encryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfig)(nil)).Elem()
}

func (i *encryptionConfigPtrType) ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput {
	return i.ToEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *encryptionConfigPtrType) ToEncryptionConfigPtrOutputWithContext(ctx context.Context) EncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigPtrOutput)
}

// Encryption settings for the service.
type EncryptionConfigOutput struct{ *pulumi.OutputState }

func (EncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfig)(nil)).Elem()
}

func (o EncryptionConfigOutput) ToEncryptionConfigOutput() EncryptionConfigOutput {
	return o
}

func (o EncryptionConfigOutput) ToEncryptionConfigOutputWithContext(ctx context.Context) EncryptionConfigOutput {
	return o
}

func (o EncryptionConfigOutput) ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput {
	return o.ToEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o EncryptionConfigOutput) ToEncryptionConfigPtrOutputWithContext(ctx context.Context) EncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionConfig) *EncryptionConfig {
		return &v
	}).(EncryptionConfigPtrOutput)
}

// The fully qualified customer provided Cloud KMS key name to use for customer data encryption, in the following form:projects/{project_number}/locations/{location_id}/keyRings/{key_ring_id}/cryptoKeys/{crypto_key_id}.
func (o EncryptionConfigOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionConfig) *string { return v.KmsKey }).(pulumi.StringPtrOutput)
}

type EncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (EncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfig)(nil)).Elem()
}

func (o EncryptionConfigPtrOutput) ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput {
	return o
}

func (o EncryptionConfigPtrOutput) ToEncryptionConfigPtrOutputWithContext(ctx context.Context) EncryptionConfigPtrOutput {
	return o
}

func (o EncryptionConfigPtrOutput) Elem() EncryptionConfigOutput {
	return o.ApplyT(func(v *EncryptionConfig) EncryptionConfig {
		if v != nil {
			return *v
		}
		var ret EncryptionConfig
		return ret
	}).(EncryptionConfigOutput)
}

// The fully qualified customer provided Cloud KMS key name to use for customer data encryption, in the following form:projects/{project_number}/locations/{location_id}/keyRings/{key_ring_id}/cryptoKeys/{crypto_key_id}.
func (o EncryptionConfigPtrOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKey
	}).(pulumi.StringPtrOutput)
}

// Encryption settings for the service.
type EncryptionConfigResponse struct {
	// The fully qualified customer provided Cloud KMS key name to use for customer data encryption, in the following form:projects/{project_number}/locations/{location_id}/keyRings/{key_ring_id}/cryptoKeys/{crypto_key_id}.
	KmsKey string `pulumi:"kmsKey"`
}

// EncryptionConfigResponseInput is an input type that accepts EncryptionConfigResponseArgs and EncryptionConfigResponseOutput values.
// You can construct a concrete instance of `EncryptionConfigResponseInput` via:
//
//          EncryptionConfigResponseArgs{...}
type EncryptionConfigResponseInput interface {
	pulumi.Input

	ToEncryptionConfigResponseOutput() EncryptionConfigResponseOutput
	ToEncryptionConfigResponseOutputWithContext(context.Context) EncryptionConfigResponseOutput
}

// Encryption settings for the service.
type EncryptionConfigResponseArgs struct {
	// The fully qualified customer provided Cloud KMS key name to use for customer data encryption, in the following form:projects/{project_number}/locations/{location_id}/keyRings/{key_ring_id}/cryptoKeys/{crypto_key_id}.
	KmsKey pulumi.StringInput `pulumi:"kmsKey"`
}

func (EncryptionConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfigResponse)(nil)).Elem()
}

func (i EncryptionConfigResponseArgs) ToEncryptionConfigResponseOutput() EncryptionConfigResponseOutput {
	return i.ToEncryptionConfigResponseOutputWithContext(context.Background())
}

func (i EncryptionConfigResponseArgs) ToEncryptionConfigResponseOutputWithContext(ctx context.Context) EncryptionConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigResponseOutput)
}

func (i EncryptionConfigResponseArgs) ToEncryptionConfigResponsePtrOutput() EncryptionConfigResponsePtrOutput {
	return i.ToEncryptionConfigResponsePtrOutputWithContext(context.Background())
}

func (i EncryptionConfigResponseArgs) ToEncryptionConfigResponsePtrOutputWithContext(ctx context.Context) EncryptionConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigResponseOutput).ToEncryptionConfigResponsePtrOutputWithContext(ctx)
}

// EncryptionConfigResponsePtrInput is an input type that accepts EncryptionConfigResponseArgs, EncryptionConfigResponsePtr and EncryptionConfigResponsePtrOutput values.
// You can construct a concrete instance of `EncryptionConfigResponsePtrInput` via:
//
//          EncryptionConfigResponseArgs{...}
//
//  or:
//
//          nil
type EncryptionConfigResponsePtrInput interface {
	pulumi.Input

	ToEncryptionConfigResponsePtrOutput() EncryptionConfigResponsePtrOutput
	ToEncryptionConfigResponsePtrOutputWithContext(context.Context) EncryptionConfigResponsePtrOutput
}

type encryptionConfigResponsePtrType EncryptionConfigResponseArgs

func EncryptionConfigResponsePtr(v *EncryptionConfigResponseArgs) EncryptionConfigResponsePtrInput {
	return (*encryptionConfigResponsePtrType)(v)
}

func (*encryptionConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfigResponse)(nil)).Elem()
}

func (i *encryptionConfigResponsePtrType) ToEncryptionConfigResponsePtrOutput() EncryptionConfigResponsePtrOutput {
	return i.ToEncryptionConfigResponsePtrOutputWithContext(context.Background())
}

func (i *encryptionConfigResponsePtrType) ToEncryptionConfigResponsePtrOutputWithContext(ctx context.Context) EncryptionConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigResponsePtrOutput)
}

// Encryption settings for the service.
type EncryptionConfigResponseOutput struct{ *pulumi.OutputState }

func (EncryptionConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfigResponse)(nil)).Elem()
}

func (o EncryptionConfigResponseOutput) ToEncryptionConfigResponseOutput() EncryptionConfigResponseOutput {
	return o
}

func (o EncryptionConfigResponseOutput) ToEncryptionConfigResponseOutputWithContext(ctx context.Context) EncryptionConfigResponseOutput {
	return o
}

func (o EncryptionConfigResponseOutput) ToEncryptionConfigResponsePtrOutput() EncryptionConfigResponsePtrOutput {
	return o.ToEncryptionConfigResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionConfigResponseOutput) ToEncryptionConfigResponsePtrOutputWithContext(ctx context.Context) EncryptionConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionConfigResponse) *EncryptionConfigResponse {
		return &v
	}).(EncryptionConfigResponsePtrOutput)
}

// The fully qualified customer provided Cloud KMS key name to use for customer data encryption, in the following form:projects/{project_number}/locations/{location_id}/keyRings/{key_ring_id}/cryptoKeys/{crypto_key_id}.
func (o EncryptionConfigResponseOutput) KmsKey() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionConfigResponse) string { return v.KmsKey }).(pulumi.StringOutput)
}

type EncryptionConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfigResponse)(nil)).Elem()
}

func (o EncryptionConfigResponsePtrOutput) ToEncryptionConfigResponsePtrOutput() EncryptionConfigResponsePtrOutput {
	return o
}

func (o EncryptionConfigResponsePtrOutput) ToEncryptionConfigResponsePtrOutputWithContext(ctx context.Context) EncryptionConfigResponsePtrOutput {
	return o
}

func (o EncryptionConfigResponsePtrOutput) Elem() EncryptionConfigResponseOutput {
	return o.ApplyT(func(v *EncryptionConfigResponse) EncryptionConfigResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionConfigResponse
		return ret
	}).(EncryptionConfigResponseOutput)
}

// The fully qualified customer provided Cloud KMS key name to use for customer data encryption, in the following form:projects/{project_number}/locations/{location_id}/keyRings/{key_ring_id}/cryptoKeys/{crypto_key_id}.
func (o EncryptionConfigResponsePtrOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKey
	}).(pulumi.StringPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type Expr struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression *string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// ExprInput is an input type that accepts ExprArgs and ExprOutput values.
// You can construct a concrete instance of `ExprInput` via:
//
//          ExprArgs{...}
type ExprInput interface {
	pulumi.Input

	ToExprOutput() ExprOutput
	ToExprOutputWithContext(context.Context) ExprOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (ExprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (i ExprArgs) ToExprOutput() ExprOutput {
	return i.ToExprOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput)
}

func (i ExprArgs) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput).ToExprPtrOutputWithContext(ctx)
}

// ExprPtrInput is an input type that accepts ExprArgs, ExprPtr and ExprPtrOutput values.
// You can construct a concrete instance of `ExprPtrInput` via:
//
//          ExprArgs{...}
//
//  or:
//
//          nil
type ExprPtrInput interface {
	pulumi.Input

	ToExprPtrOutput() ExprPtrOutput
	ToExprPtrOutputWithContext(context.Context) ExprPtrOutput
}

type exprPtrType ExprArgs

func ExprPtr(v *ExprArgs) ExprPtrInput {
	return (*exprPtrType)(v)
}

func (*exprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (i *exprPtrType) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i *exprPtrType) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprOutput struct{ *pulumi.OutputState }

func (ExprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (o ExprOutput) ToExprOutput() ExprOutput {
	return o
}

func (o ExprOutput) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return o
}

func (o ExprOutput) ToExprPtrOutput() ExprPtrOutput {
	return o.ToExprPtrOutputWithContext(context.Background())
}

func (o ExprOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Expr) *Expr {
		return &v
	}).(ExprPtrOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ExprPtrOutput struct{ *pulumi.OutputState }

func (ExprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (o ExprPtrOutput) ToExprPtrOutput() ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) Elem() ExprOutput {
	return o.ApplyT(func(v *Expr) Expr {
		if v != nil {
			return *v
		}
		var ret Expr
		return ret
	}).(ExprOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponse struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title string `pulumi:"title"`
}

// ExprResponseInput is an input type that accepts ExprResponseArgs and ExprResponseOutput values.
// You can construct a concrete instance of `ExprResponseInput` via:
//
//          ExprResponseArgs{...}
type ExprResponseInput interface {
	pulumi.Input

	ToExprResponseOutput() ExprResponseOutput
	ToExprResponseOutputWithContext(context.Context) ExprResponseOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponseArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringInput `pulumi:"title"`
}

func (ExprResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExprResponse)(nil)).Elem()
}

func (i ExprResponseArgs) ToExprResponseOutput() ExprResponseOutput {
	return i.ToExprResponseOutputWithContext(context.Background())
}

func (i ExprResponseArgs) ToExprResponseOutputWithContext(ctx context.Context) ExprResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprResponseOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponseOutput struct{ *pulumi.OutputState }

func (ExprResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExprResponse)(nil)).Elem()
}

func (o ExprResponseOutput) ToExprResponseOutput() ExprResponseOutput {
	return o
}

func (o ExprResponseOutput) ToExprResponseOutputWithContext(ctx context.Context) ExprResponseOutput {
	return o
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Title }).(pulumi.StringOutput)
}

// Specifies configuration information specific to running Hive metastore software as the metastore service.
type HiveMetastoreConfig struct {
	// A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml). The mappings override system defaults (some keys cannot be overridden).
	ConfigOverrides map[string]string `pulumi:"configOverrides"`
	// Information used to configure the Hive metastore service as a service principal in a Kerberos realm. To disable Kerberos, use the UpdateService method and specify this field's path (hive_metastore_config.kerberos_config) in the request's update_mask while omitting this field from the request's service.
	KerberosConfig *KerberosConfig `pulumi:"kerberosConfig"`
	// Immutable. The Hive metastore schema version.
	Version *string `pulumi:"version"`
}

// HiveMetastoreConfigInput is an input type that accepts HiveMetastoreConfigArgs and HiveMetastoreConfigOutput values.
// You can construct a concrete instance of `HiveMetastoreConfigInput` via:
//
//          HiveMetastoreConfigArgs{...}
type HiveMetastoreConfigInput interface {
	pulumi.Input

	ToHiveMetastoreConfigOutput() HiveMetastoreConfigOutput
	ToHiveMetastoreConfigOutputWithContext(context.Context) HiveMetastoreConfigOutput
}

// Specifies configuration information specific to running Hive metastore software as the metastore service.
type HiveMetastoreConfigArgs struct {
	// A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml). The mappings override system defaults (some keys cannot be overridden).
	ConfigOverrides pulumi.StringMapInput `pulumi:"configOverrides"`
	// Information used to configure the Hive metastore service as a service principal in a Kerberos realm. To disable Kerberos, use the UpdateService method and specify this field's path (hive_metastore_config.kerberos_config) in the request's update_mask while omitting this field from the request's service.
	KerberosConfig KerberosConfigPtrInput `pulumi:"kerberosConfig"`
	// Immutable. The Hive metastore schema version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (HiveMetastoreConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveMetastoreConfig)(nil)).Elem()
}

func (i HiveMetastoreConfigArgs) ToHiveMetastoreConfigOutput() HiveMetastoreConfigOutput {
	return i.ToHiveMetastoreConfigOutputWithContext(context.Background())
}

func (i HiveMetastoreConfigArgs) ToHiveMetastoreConfigOutputWithContext(ctx context.Context) HiveMetastoreConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveMetastoreConfigOutput)
}

func (i HiveMetastoreConfigArgs) ToHiveMetastoreConfigPtrOutput() HiveMetastoreConfigPtrOutput {
	return i.ToHiveMetastoreConfigPtrOutputWithContext(context.Background())
}

func (i HiveMetastoreConfigArgs) ToHiveMetastoreConfigPtrOutputWithContext(ctx context.Context) HiveMetastoreConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveMetastoreConfigOutput).ToHiveMetastoreConfigPtrOutputWithContext(ctx)
}

// HiveMetastoreConfigPtrInput is an input type that accepts HiveMetastoreConfigArgs, HiveMetastoreConfigPtr and HiveMetastoreConfigPtrOutput values.
// You can construct a concrete instance of `HiveMetastoreConfigPtrInput` via:
//
//          HiveMetastoreConfigArgs{...}
//
//  or:
//
//          nil
type HiveMetastoreConfigPtrInput interface {
	pulumi.Input

	ToHiveMetastoreConfigPtrOutput() HiveMetastoreConfigPtrOutput
	ToHiveMetastoreConfigPtrOutputWithContext(context.Context) HiveMetastoreConfigPtrOutput
}

type hiveMetastoreConfigPtrType HiveMetastoreConfigArgs

func HiveMetastoreConfigPtr(v *HiveMetastoreConfigArgs) HiveMetastoreConfigPtrInput {
	return (*hiveMetastoreConfigPtrType)(v)
}

func (*hiveMetastoreConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HiveMetastoreConfig)(nil)).Elem()
}

func (i *hiveMetastoreConfigPtrType) ToHiveMetastoreConfigPtrOutput() HiveMetastoreConfigPtrOutput {
	return i.ToHiveMetastoreConfigPtrOutputWithContext(context.Background())
}

func (i *hiveMetastoreConfigPtrType) ToHiveMetastoreConfigPtrOutputWithContext(ctx context.Context) HiveMetastoreConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveMetastoreConfigPtrOutput)
}

// Specifies configuration information specific to running Hive metastore software as the metastore service.
type HiveMetastoreConfigOutput struct{ *pulumi.OutputState }

func (HiveMetastoreConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveMetastoreConfig)(nil)).Elem()
}

func (o HiveMetastoreConfigOutput) ToHiveMetastoreConfigOutput() HiveMetastoreConfigOutput {
	return o
}

func (o HiveMetastoreConfigOutput) ToHiveMetastoreConfigOutputWithContext(ctx context.Context) HiveMetastoreConfigOutput {
	return o
}

func (o HiveMetastoreConfigOutput) ToHiveMetastoreConfigPtrOutput() HiveMetastoreConfigPtrOutput {
	return o.ToHiveMetastoreConfigPtrOutputWithContext(context.Background())
}

func (o HiveMetastoreConfigOutput) ToHiveMetastoreConfigPtrOutputWithContext(ctx context.Context) HiveMetastoreConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HiveMetastoreConfig) *HiveMetastoreConfig {
		return &v
	}).(HiveMetastoreConfigPtrOutput)
}

// A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml). The mappings override system defaults (some keys cannot be overridden).
func (o HiveMetastoreConfigOutput) ConfigOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v HiveMetastoreConfig) map[string]string { return v.ConfigOverrides }).(pulumi.StringMapOutput)
}

// Information used to configure the Hive metastore service as a service principal in a Kerberos realm. To disable Kerberos, use the UpdateService method and specify this field's path (hive_metastore_config.kerberos_config) in the request's update_mask while omitting this field from the request's service.
func (o HiveMetastoreConfigOutput) KerberosConfig() KerberosConfigPtrOutput {
	return o.ApplyT(func(v HiveMetastoreConfig) *KerberosConfig { return v.KerberosConfig }).(KerberosConfigPtrOutput)
}

// Immutable. The Hive metastore schema version.
func (o HiveMetastoreConfigOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HiveMetastoreConfig) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type HiveMetastoreConfigPtrOutput struct{ *pulumi.OutputState }

func (HiveMetastoreConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HiveMetastoreConfig)(nil)).Elem()
}

func (o HiveMetastoreConfigPtrOutput) ToHiveMetastoreConfigPtrOutput() HiveMetastoreConfigPtrOutput {
	return o
}

func (o HiveMetastoreConfigPtrOutput) ToHiveMetastoreConfigPtrOutputWithContext(ctx context.Context) HiveMetastoreConfigPtrOutput {
	return o
}

func (o HiveMetastoreConfigPtrOutput) Elem() HiveMetastoreConfigOutput {
	return o.ApplyT(func(v *HiveMetastoreConfig) HiveMetastoreConfig {
		if v != nil {
			return *v
		}
		var ret HiveMetastoreConfig
		return ret
	}).(HiveMetastoreConfigOutput)
}

// A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml). The mappings override system defaults (some keys cannot be overridden).
func (o HiveMetastoreConfigPtrOutput) ConfigOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HiveMetastoreConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.ConfigOverrides
	}).(pulumi.StringMapOutput)
}

// Information used to configure the Hive metastore service as a service principal in a Kerberos realm. To disable Kerberos, use the UpdateService method and specify this field's path (hive_metastore_config.kerberos_config) in the request's update_mask while omitting this field from the request's service.
func (o HiveMetastoreConfigPtrOutput) KerberosConfig() KerberosConfigPtrOutput {
	return o.ApplyT(func(v *HiveMetastoreConfig) *KerberosConfig {
		if v == nil {
			return nil
		}
		return v.KerberosConfig
	}).(KerberosConfigPtrOutput)
}

// Immutable. The Hive metastore schema version.
func (o HiveMetastoreConfigPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HiveMetastoreConfig) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Specifies configuration information specific to running Hive metastore software as the metastore service.
type HiveMetastoreConfigResponse struct {
	// A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml). The mappings override system defaults (some keys cannot be overridden).
	ConfigOverrides map[string]string `pulumi:"configOverrides"`
	// Information used to configure the Hive metastore service as a service principal in a Kerberos realm. To disable Kerberos, use the UpdateService method and specify this field's path (hive_metastore_config.kerberos_config) in the request's update_mask while omitting this field from the request's service.
	KerberosConfig KerberosConfigResponse `pulumi:"kerberosConfig"`
	// Immutable. The Hive metastore schema version.
	Version string `pulumi:"version"`
}

// HiveMetastoreConfigResponseInput is an input type that accepts HiveMetastoreConfigResponseArgs and HiveMetastoreConfigResponseOutput values.
// You can construct a concrete instance of `HiveMetastoreConfigResponseInput` via:
//
//          HiveMetastoreConfigResponseArgs{...}
type HiveMetastoreConfigResponseInput interface {
	pulumi.Input

	ToHiveMetastoreConfigResponseOutput() HiveMetastoreConfigResponseOutput
	ToHiveMetastoreConfigResponseOutputWithContext(context.Context) HiveMetastoreConfigResponseOutput
}

// Specifies configuration information specific to running Hive metastore software as the metastore service.
type HiveMetastoreConfigResponseArgs struct {
	// A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml). The mappings override system defaults (some keys cannot be overridden).
	ConfigOverrides pulumi.StringMapInput `pulumi:"configOverrides"`
	// Information used to configure the Hive metastore service as a service principal in a Kerberos realm. To disable Kerberos, use the UpdateService method and specify this field's path (hive_metastore_config.kerberos_config) in the request's update_mask while omitting this field from the request's service.
	KerberosConfig KerberosConfigResponseInput `pulumi:"kerberosConfig"`
	// Immutable. The Hive metastore schema version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (HiveMetastoreConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveMetastoreConfigResponse)(nil)).Elem()
}

func (i HiveMetastoreConfigResponseArgs) ToHiveMetastoreConfigResponseOutput() HiveMetastoreConfigResponseOutput {
	return i.ToHiveMetastoreConfigResponseOutputWithContext(context.Background())
}

func (i HiveMetastoreConfigResponseArgs) ToHiveMetastoreConfigResponseOutputWithContext(ctx context.Context) HiveMetastoreConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveMetastoreConfigResponseOutput)
}

func (i HiveMetastoreConfigResponseArgs) ToHiveMetastoreConfigResponsePtrOutput() HiveMetastoreConfigResponsePtrOutput {
	return i.ToHiveMetastoreConfigResponsePtrOutputWithContext(context.Background())
}

func (i HiveMetastoreConfigResponseArgs) ToHiveMetastoreConfigResponsePtrOutputWithContext(ctx context.Context) HiveMetastoreConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveMetastoreConfigResponseOutput).ToHiveMetastoreConfigResponsePtrOutputWithContext(ctx)
}

// HiveMetastoreConfigResponsePtrInput is an input type that accepts HiveMetastoreConfigResponseArgs, HiveMetastoreConfigResponsePtr and HiveMetastoreConfigResponsePtrOutput values.
// You can construct a concrete instance of `HiveMetastoreConfigResponsePtrInput` via:
//
//          HiveMetastoreConfigResponseArgs{...}
//
//  or:
//
//          nil
type HiveMetastoreConfigResponsePtrInput interface {
	pulumi.Input

	ToHiveMetastoreConfigResponsePtrOutput() HiveMetastoreConfigResponsePtrOutput
	ToHiveMetastoreConfigResponsePtrOutputWithContext(context.Context) HiveMetastoreConfigResponsePtrOutput
}

type hiveMetastoreConfigResponsePtrType HiveMetastoreConfigResponseArgs

func HiveMetastoreConfigResponsePtr(v *HiveMetastoreConfigResponseArgs) HiveMetastoreConfigResponsePtrInput {
	return (*hiveMetastoreConfigResponsePtrType)(v)
}

func (*hiveMetastoreConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HiveMetastoreConfigResponse)(nil)).Elem()
}

func (i *hiveMetastoreConfigResponsePtrType) ToHiveMetastoreConfigResponsePtrOutput() HiveMetastoreConfigResponsePtrOutput {
	return i.ToHiveMetastoreConfigResponsePtrOutputWithContext(context.Background())
}

func (i *hiveMetastoreConfigResponsePtrType) ToHiveMetastoreConfigResponsePtrOutputWithContext(ctx context.Context) HiveMetastoreConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveMetastoreConfigResponsePtrOutput)
}

// Specifies configuration information specific to running Hive metastore software as the metastore service.
type HiveMetastoreConfigResponseOutput struct{ *pulumi.OutputState }

func (HiveMetastoreConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveMetastoreConfigResponse)(nil)).Elem()
}

func (o HiveMetastoreConfigResponseOutput) ToHiveMetastoreConfigResponseOutput() HiveMetastoreConfigResponseOutput {
	return o
}

func (o HiveMetastoreConfigResponseOutput) ToHiveMetastoreConfigResponseOutputWithContext(ctx context.Context) HiveMetastoreConfigResponseOutput {
	return o
}

func (o HiveMetastoreConfigResponseOutput) ToHiveMetastoreConfigResponsePtrOutput() HiveMetastoreConfigResponsePtrOutput {
	return o.ToHiveMetastoreConfigResponsePtrOutputWithContext(context.Background())
}

func (o HiveMetastoreConfigResponseOutput) ToHiveMetastoreConfigResponsePtrOutputWithContext(ctx context.Context) HiveMetastoreConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HiveMetastoreConfigResponse) *HiveMetastoreConfigResponse {
		return &v
	}).(HiveMetastoreConfigResponsePtrOutput)
}

// A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml). The mappings override system defaults (some keys cannot be overridden).
func (o HiveMetastoreConfigResponseOutput) ConfigOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v HiveMetastoreConfigResponse) map[string]string { return v.ConfigOverrides }).(pulumi.StringMapOutput)
}

// Information used to configure the Hive metastore service as a service principal in a Kerberos realm. To disable Kerberos, use the UpdateService method and specify this field's path (hive_metastore_config.kerberos_config) in the request's update_mask while omitting this field from the request's service.
func (o HiveMetastoreConfigResponseOutput) KerberosConfig() KerberosConfigResponseOutput {
	return o.ApplyT(func(v HiveMetastoreConfigResponse) KerberosConfigResponse { return v.KerberosConfig }).(KerberosConfigResponseOutput)
}

// Immutable. The Hive metastore schema version.
func (o HiveMetastoreConfigResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v HiveMetastoreConfigResponse) string { return v.Version }).(pulumi.StringOutput)
}

type HiveMetastoreConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (HiveMetastoreConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HiveMetastoreConfigResponse)(nil)).Elem()
}

func (o HiveMetastoreConfigResponsePtrOutput) ToHiveMetastoreConfigResponsePtrOutput() HiveMetastoreConfigResponsePtrOutput {
	return o
}

func (o HiveMetastoreConfigResponsePtrOutput) ToHiveMetastoreConfigResponsePtrOutputWithContext(ctx context.Context) HiveMetastoreConfigResponsePtrOutput {
	return o
}

func (o HiveMetastoreConfigResponsePtrOutput) Elem() HiveMetastoreConfigResponseOutput {
	return o.ApplyT(func(v *HiveMetastoreConfigResponse) HiveMetastoreConfigResponse {
		if v != nil {
			return *v
		}
		var ret HiveMetastoreConfigResponse
		return ret
	}).(HiveMetastoreConfigResponseOutput)
}

// A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml). The mappings override system defaults (some keys cannot be overridden).
func (o HiveMetastoreConfigResponsePtrOutput) ConfigOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HiveMetastoreConfigResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.ConfigOverrides
	}).(pulumi.StringMapOutput)
}

// Information used to configure the Hive metastore service as a service principal in a Kerberos realm. To disable Kerberos, use the UpdateService method and specify this field's path (hive_metastore_config.kerberos_config) in the request's update_mask while omitting this field from the request's service.
func (o HiveMetastoreConfigResponsePtrOutput) KerberosConfig() KerberosConfigResponsePtrOutput {
	return o.ApplyT(func(v *HiveMetastoreConfigResponse) *KerberosConfigResponse {
		if v == nil {
			return nil
		}
		return &v.KerberosConfig
	}).(KerberosConfigResponsePtrOutput)
}

// Immutable. The Hive metastore schema version.
func (o HiveMetastoreConfigResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HiveMetastoreConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// Configuration information for a Kerberos principal.
type KerberosConfig struct {
	// A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
	Keytab *Secret `pulumi:"keytab"`
	// A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
	Krb5ConfigGcsUri *string `pulumi:"krb5ConfigGcsUri"`
	// A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format.
	Principal *string `pulumi:"principal"`
}

// KerberosConfigInput is an input type that accepts KerberosConfigArgs and KerberosConfigOutput values.
// You can construct a concrete instance of `KerberosConfigInput` via:
//
//          KerberosConfigArgs{...}
type KerberosConfigInput interface {
	pulumi.Input

	ToKerberosConfigOutput() KerberosConfigOutput
	ToKerberosConfigOutputWithContext(context.Context) KerberosConfigOutput
}

// Configuration information for a Kerberos principal.
type KerberosConfigArgs struct {
	// A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
	Keytab SecretPtrInput `pulumi:"keytab"`
	// A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
	Krb5ConfigGcsUri pulumi.StringPtrInput `pulumi:"krb5ConfigGcsUri"`
	// A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format.
	Principal pulumi.StringPtrInput `pulumi:"principal"`
}

func (KerberosConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KerberosConfig)(nil)).Elem()
}

func (i KerberosConfigArgs) ToKerberosConfigOutput() KerberosConfigOutput {
	return i.ToKerberosConfigOutputWithContext(context.Background())
}

func (i KerberosConfigArgs) ToKerberosConfigOutputWithContext(ctx context.Context) KerberosConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KerberosConfigOutput)
}

func (i KerberosConfigArgs) ToKerberosConfigPtrOutput() KerberosConfigPtrOutput {
	return i.ToKerberosConfigPtrOutputWithContext(context.Background())
}

func (i KerberosConfigArgs) ToKerberosConfigPtrOutputWithContext(ctx context.Context) KerberosConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KerberosConfigOutput).ToKerberosConfigPtrOutputWithContext(ctx)
}

// KerberosConfigPtrInput is an input type that accepts KerberosConfigArgs, KerberosConfigPtr and KerberosConfigPtrOutput values.
// You can construct a concrete instance of `KerberosConfigPtrInput` via:
//
//          KerberosConfigArgs{...}
//
//  or:
//
//          nil
type KerberosConfigPtrInput interface {
	pulumi.Input

	ToKerberosConfigPtrOutput() KerberosConfigPtrOutput
	ToKerberosConfigPtrOutputWithContext(context.Context) KerberosConfigPtrOutput
}

type kerberosConfigPtrType KerberosConfigArgs

func KerberosConfigPtr(v *KerberosConfigArgs) KerberosConfigPtrInput {
	return (*kerberosConfigPtrType)(v)
}

func (*kerberosConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KerberosConfig)(nil)).Elem()
}

func (i *kerberosConfigPtrType) ToKerberosConfigPtrOutput() KerberosConfigPtrOutput {
	return i.ToKerberosConfigPtrOutputWithContext(context.Background())
}

func (i *kerberosConfigPtrType) ToKerberosConfigPtrOutputWithContext(ctx context.Context) KerberosConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KerberosConfigPtrOutput)
}

// Configuration information for a Kerberos principal.
type KerberosConfigOutput struct{ *pulumi.OutputState }

func (KerberosConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KerberosConfig)(nil)).Elem()
}

func (o KerberosConfigOutput) ToKerberosConfigOutput() KerberosConfigOutput {
	return o
}

func (o KerberosConfigOutput) ToKerberosConfigOutputWithContext(ctx context.Context) KerberosConfigOutput {
	return o
}

func (o KerberosConfigOutput) ToKerberosConfigPtrOutput() KerberosConfigPtrOutput {
	return o.ToKerberosConfigPtrOutputWithContext(context.Background())
}

func (o KerberosConfigOutput) ToKerberosConfigPtrOutputWithContext(ctx context.Context) KerberosConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KerberosConfig) *KerberosConfig {
		return &v
	}).(KerberosConfigPtrOutput)
}

// A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
func (o KerberosConfigOutput) Keytab() SecretPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *Secret { return v.Keytab }).(SecretPtrOutput)
}

// A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
func (o KerberosConfigOutput) Krb5ConfigGcsUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.Krb5ConfigGcsUri }).(pulumi.StringPtrOutput)
}

// A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format.
func (o KerberosConfigOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KerberosConfig) *string { return v.Principal }).(pulumi.StringPtrOutput)
}

type KerberosConfigPtrOutput struct{ *pulumi.OutputState }

func (KerberosConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KerberosConfig)(nil)).Elem()
}

func (o KerberosConfigPtrOutput) ToKerberosConfigPtrOutput() KerberosConfigPtrOutput {
	return o
}

func (o KerberosConfigPtrOutput) ToKerberosConfigPtrOutputWithContext(ctx context.Context) KerberosConfigPtrOutput {
	return o
}

func (o KerberosConfigPtrOutput) Elem() KerberosConfigOutput {
	return o.ApplyT(func(v *KerberosConfig) KerberosConfig {
		if v != nil {
			return *v
		}
		var ret KerberosConfig
		return ret
	}).(KerberosConfigOutput)
}

// A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
func (o KerberosConfigPtrOutput) Keytab() SecretPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *Secret {
		if v == nil {
			return nil
		}
		return v.Keytab
	}).(SecretPtrOutput)
}

// A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
func (o KerberosConfigPtrOutput) Krb5ConfigGcsUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.Krb5ConfigGcsUri
	}).(pulumi.StringPtrOutput)
}

// A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format.
func (o KerberosConfigPtrOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfig) *string {
		if v == nil {
			return nil
		}
		return v.Principal
	}).(pulumi.StringPtrOutput)
}

// Configuration information for a Kerberos principal.
type KerberosConfigResponse struct {
	// A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
	Keytab SecretResponse `pulumi:"keytab"`
	// A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
	Krb5ConfigGcsUri string `pulumi:"krb5ConfigGcsUri"`
	// A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format.
	Principal string `pulumi:"principal"`
}

// KerberosConfigResponseInput is an input type that accepts KerberosConfigResponseArgs and KerberosConfigResponseOutput values.
// You can construct a concrete instance of `KerberosConfigResponseInput` via:
//
//          KerberosConfigResponseArgs{...}
type KerberosConfigResponseInput interface {
	pulumi.Input

	ToKerberosConfigResponseOutput() KerberosConfigResponseOutput
	ToKerberosConfigResponseOutputWithContext(context.Context) KerberosConfigResponseOutput
}

// Configuration information for a Kerberos principal.
type KerberosConfigResponseArgs struct {
	// A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
	Keytab SecretResponseInput `pulumi:"keytab"`
	// A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
	Krb5ConfigGcsUri pulumi.StringInput `pulumi:"krb5ConfigGcsUri"`
	// A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format.
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (KerberosConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KerberosConfigResponse)(nil)).Elem()
}

func (i KerberosConfigResponseArgs) ToKerberosConfigResponseOutput() KerberosConfigResponseOutput {
	return i.ToKerberosConfigResponseOutputWithContext(context.Background())
}

func (i KerberosConfigResponseArgs) ToKerberosConfigResponseOutputWithContext(ctx context.Context) KerberosConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KerberosConfigResponseOutput)
}

func (i KerberosConfigResponseArgs) ToKerberosConfigResponsePtrOutput() KerberosConfigResponsePtrOutput {
	return i.ToKerberosConfigResponsePtrOutputWithContext(context.Background())
}

func (i KerberosConfigResponseArgs) ToKerberosConfigResponsePtrOutputWithContext(ctx context.Context) KerberosConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KerberosConfigResponseOutput).ToKerberosConfigResponsePtrOutputWithContext(ctx)
}

// KerberosConfigResponsePtrInput is an input type that accepts KerberosConfigResponseArgs, KerberosConfigResponsePtr and KerberosConfigResponsePtrOutput values.
// You can construct a concrete instance of `KerberosConfigResponsePtrInput` via:
//
//          KerberosConfigResponseArgs{...}
//
//  or:
//
//          nil
type KerberosConfigResponsePtrInput interface {
	pulumi.Input

	ToKerberosConfigResponsePtrOutput() KerberosConfigResponsePtrOutput
	ToKerberosConfigResponsePtrOutputWithContext(context.Context) KerberosConfigResponsePtrOutput
}

type kerberosConfigResponsePtrType KerberosConfigResponseArgs

func KerberosConfigResponsePtr(v *KerberosConfigResponseArgs) KerberosConfigResponsePtrInput {
	return (*kerberosConfigResponsePtrType)(v)
}

func (*kerberosConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KerberosConfigResponse)(nil)).Elem()
}

func (i *kerberosConfigResponsePtrType) ToKerberosConfigResponsePtrOutput() KerberosConfigResponsePtrOutput {
	return i.ToKerberosConfigResponsePtrOutputWithContext(context.Background())
}

func (i *kerberosConfigResponsePtrType) ToKerberosConfigResponsePtrOutputWithContext(ctx context.Context) KerberosConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KerberosConfigResponsePtrOutput)
}

// Configuration information for a Kerberos principal.
type KerberosConfigResponseOutput struct{ *pulumi.OutputState }

func (KerberosConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KerberosConfigResponse)(nil)).Elem()
}

func (o KerberosConfigResponseOutput) ToKerberosConfigResponseOutput() KerberosConfigResponseOutput {
	return o
}

func (o KerberosConfigResponseOutput) ToKerberosConfigResponseOutputWithContext(ctx context.Context) KerberosConfigResponseOutput {
	return o
}

func (o KerberosConfigResponseOutput) ToKerberosConfigResponsePtrOutput() KerberosConfigResponsePtrOutput {
	return o.ToKerberosConfigResponsePtrOutputWithContext(context.Background())
}

func (o KerberosConfigResponseOutput) ToKerberosConfigResponsePtrOutputWithContext(ctx context.Context) KerberosConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KerberosConfigResponse) *KerberosConfigResponse {
		return &v
	}).(KerberosConfigResponsePtrOutput)
}

// A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
func (o KerberosConfigResponseOutput) Keytab() SecretResponseOutput {
	return o.ApplyT(func(v KerberosConfigResponse) SecretResponse { return v.Keytab }).(SecretResponseOutput)
}

// A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
func (o KerberosConfigResponseOutput) Krb5ConfigGcsUri() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.Krb5ConfigGcsUri }).(pulumi.StringOutput)
}

// A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format.
func (o KerberosConfigResponseOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v KerberosConfigResponse) string { return v.Principal }).(pulumi.StringOutput)
}

type KerberosConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (KerberosConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KerberosConfigResponse)(nil)).Elem()
}

func (o KerberosConfigResponsePtrOutput) ToKerberosConfigResponsePtrOutput() KerberosConfigResponsePtrOutput {
	return o
}

func (o KerberosConfigResponsePtrOutput) ToKerberosConfigResponsePtrOutputWithContext(ctx context.Context) KerberosConfigResponsePtrOutput {
	return o
}

func (o KerberosConfigResponsePtrOutput) Elem() KerberosConfigResponseOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) KerberosConfigResponse {
		if v != nil {
			return *v
		}
		var ret KerberosConfigResponse
		return ret
	}).(KerberosConfigResponseOutput)
}

// A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
func (o KerberosConfigResponsePtrOutput) Keytab() SecretResponsePtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *SecretResponse {
		if v == nil {
			return nil
		}
		return &v.Keytab
	}).(SecretResponsePtrOutput)
}

// A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
func (o KerberosConfigResponsePtrOutput) Krb5ConfigGcsUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Krb5ConfigGcsUri
	}).(pulumi.StringPtrOutput)
}

// A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format.
func (o KerberosConfigResponsePtrOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KerberosConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Principal
	}).(pulumi.StringPtrOutput)
}

// Maintenance window. This specifies when Dataproc Metastore may perform system maintenance operation to the service.
type MaintenanceWindow struct {
	// The day of week, when the window starts.
	DayOfWeek *MaintenanceWindowDayOfWeek `pulumi:"dayOfWeek"`
	// The hour of day (0-23) when the window starts.
	HourOfDay *int `pulumi:"hourOfDay"`
}

// MaintenanceWindowInput is an input type that accepts MaintenanceWindowArgs and MaintenanceWindowOutput values.
// You can construct a concrete instance of `MaintenanceWindowInput` via:
//
//          MaintenanceWindowArgs{...}
type MaintenanceWindowInput interface {
	pulumi.Input

	ToMaintenanceWindowOutput() MaintenanceWindowOutput
	ToMaintenanceWindowOutputWithContext(context.Context) MaintenanceWindowOutput
}

// Maintenance window. This specifies when Dataproc Metastore may perform system maintenance operation to the service.
type MaintenanceWindowArgs struct {
	// The day of week, when the window starts.
	DayOfWeek MaintenanceWindowDayOfWeekPtrInput `pulumi:"dayOfWeek"`
	// The hour of day (0-23) when the window starts.
	HourOfDay pulumi.IntPtrInput `pulumi:"hourOfDay"`
}

func (MaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindow)(nil)).Elem()
}

func (i MaintenanceWindowArgs) ToMaintenanceWindowOutput() MaintenanceWindowOutput {
	return i.ToMaintenanceWindowOutputWithContext(context.Background())
}

func (i MaintenanceWindowArgs) ToMaintenanceWindowOutputWithContext(ctx context.Context) MaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowOutput)
}

func (i MaintenanceWindowArgs) ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput {
	return i.ToMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i MaintenanceWindowArgs) ToMaintenanceWindowPtrOutputWithContext(ctx context.Context) MaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowOutput).ToMaintenanceWindowPtrOutputWithContext(ctx)
}

// MaintenanceWindowPtrInput is an input type that accepts MaintenanceWindowArgs, MaintenanceWindowPtr and MaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `MaintenanceWindowPtrInput` via:
//
//          MaintenanceWindowArgs{...}
//
//  or:
//
//          nil
type MaintenanceWindowPtrInput interface {
	pulumi.Input

	ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput
	ToMaintenanceWindowPtrOutputWithContext(context.Context) MaintenanceWindowPtrOutput
}

type maintenanceWindowPtrType MaintenanceWindowArgs

func MaintenanceWindowPtr(v *MaintenanceWindowArgs) MaintenanceWindowPtrInput {
	return (*maintenanceWindowPtrType)(v)
}

func (*maintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindow)(nil)).Elem()
}

func (i *maintenanceWindowPtrType) ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput {
	return i.ToMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *maintenanceWindowPtrType) ToMaintenanceWindowPtrOutputWithContext(ctx context.Context) MaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowPtrOutput)
}

// Maintenance window. This specifies when Dataproc Metastore may perform system maintenance operation to the service.
type MaintenanceWindowOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindow)(nil)).Elem()
}

func (o MaintenanceWindowOutput) ToMaintenanceWindowOutput() MaintenanceWindowOutput {
	return o
}

func (o MaintenanceWindowOutput) ToMaintenanceWindowOutputWithContext(ctx context.Context) MaintenanceWindowOutput {
	return o
}

func (o MaintenanceWindowOutput) ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput {
	return o.ToMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowOutput) ToMaintenanceWindowPtrOutputWithContext(ctx context.Context) MaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceWindow) *MaintenanceWindow {
		return &v
	}).(MaintenanceWindowPtrOutput)
}

// The day of week, when the window starts.
func (o MaintenanceWindowOutput) DayOfWeek() MaintenanceWindowDayOfWeekPtrOutput {
	return o.ApplyT(func(v MaintenanceWindow) *MaintenanceWindowDayOfWeek { return v.DayOfWeek }).(MaintenanceWindowDayOfWeekPtrOutput)
}

// The hour of day (0-23) when the window starts.
func (o MaintenanceWindowOutput) HourOfDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaintenanceWindow) *int { return v.HourOfDay }).(pulumi.IntPtrOutput)
}

type MaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindow)(nil)).Elem()
}

func (o MaintenanceWindowPtrOutput) ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput {
	return o
}

func (o MaintenanceWindowPtrOutput) ToMaintenanceWindowPtrOutputWithContext(ctx context.Context) MaintenanceWindowPtrOutput {
	return o
}

func (o MaintenanceWindowPtrOutput) Elem() MaintenanceWindowOutput {
	return o.ApplyT(func(v *MaintenanceWindow) MaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindow
		return ret
	}).(MaintenanceWindowOutput)
}

// The day of week, when the window starts.
func (o MaintenanceWindowPtrOutput) DayOfWeek() MaintenanceWindowDayOfWeekPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindow) *MaintenanceWindowDayOfWeek {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(MaintenanceWindowDayOfWeekPtrOutput)
}

// The hour of day (0-23) when the window starts.
func (o MaintenanceWindowPtrOutput) HourOfDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.HourOfDay
	}).(pulumi.IntPtrOutput)
}

// Maintenance window. This specifies when Dataproc Metastore may perform system maintenance operation to the service.
type MaintenanceWindowResponse struct {
	// The day of week, when the window starts.
	DayOfWeek string `pulumi:"dayOfWeek"`
	// The hour of day (0-23) when the window starts.
	HourOfDay int `pulumi:"hourOfDay"`
}

// MaintenanceWindowResponseInput is an input type that accepts MaintenanceWindowResponseArgs and MaintenanceWindowResponseOutput values.
// You can construct a concrete instance of `MaintenanceWindowResponseInput` via:
//
//          MaintenanceWindowResponseArgs{...}
type MaintenanceWindowResponseInput interface {
	pulumi.Input

	ToMaintenanceWindowResponseOutput() MaintenanceWindowResponseOutput
	ToMaintenanceWindowResponseOutputWithContext(context.Context) MaintenanceWindowResponseOutput
}

// Maintenance window. This specifies when Dataproc Metastore may perform system maintenance operation to the service.
type MaintenanceWindowResponseArgs struct {
	// The day of week, when the window starts.
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
	// The hour of day (0-23) when the window starts.
	HourOfDay pulumi.IntInput `pulumi:"hourOfDay"`
}

func (MaintenanceWindowResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowResponse)(nil)).Elem()
}

func (i MaintenanceWindowResponseArgs) ToMaintenanceWindowResponseOutput() MaintenanceWindowResponseOutput {
	return i.ToMaintenanceWindowResponseOutputWithContext(context.Background())
}

func (i MaintenanceWindowResponseArgs) ToMaintenanceWindowResponseOutputWithContext(ctx context.Context) MaintenanceWindowResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowResponseOutput)
}

func (i MaintenanceWindowResponseArgs) ToMaintenanceWindowResponsePtrOutput() MaintenanceWindowResponsePtrOutput {
	return i.ToMaintenanceWindowResponsePtrOutputWithContext(context.Background())
}

func (i MaintenanceWindowResponseArgs) ToMaintenanceWindowResponsePtrOutputWithContext(ctx context.Context) MaintenanceWindowResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowResponseOutput).ToMaintenanceWindowResponsePtrOutputWithContext(ctx)
}

// MaintenanceWindowResponsePtrInput is an input type that accepts MaintenanceWindowResponseArgs, MaintenanceWindowResponsePtr and MaintenanceWindowResponsePtrOutput values.
// You can construct a concrete instance of `MaintenanceWindowResponsePtrInput` via:
//
//          MaintenanceWindowResponseArgs{...}
//
//  or:
//
//          nil
type MaintenanceWindowResponsePtrInput interface {
	pulumi.Input

	ToMaintenanceWindowResponsePtrOutput() MaintenanceWindowResponsePtrOutput
	ToMaintenanceWindowResponsePtrOutputWithContext(context.Context) MaintenanceWindowResponsePtrOutput
}

type maintenanceWindowResponsePtrType MaintenanceWindowResponseArgs

func MaintenanceWindowResponsePtr(v *MaintenanceWindowResponseArgs) MaintenanceWindowResponsePtrInput {
	return (*maintenanceWindowResponsePtrType)(v)
}

func (*maintenanceWindowResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowResponse)(nil)).Elem()
}

func (i *maintenanceWindowResponsePtrType) ToMaintenanceWindowResponsePtrOutput() MaintenanceWindowResponsePtrOutput {
	return i.ToMaintenanceWindowResponsePtrOutputWithContext(context.Background())
}

func (i *maintenanceWindowResponsePtrType) ToMaintenanceWindowResponsePtrOutputWithContext(ctx context.Context) MaintenanceWindowResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowResponsePtrOutput)
}

// Maintenance window. This specifies when Dataproc Metastore may perform system maintenance operation to the service.
type MaintenanceWindowResponseOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowResponse)(nil)).Elem()
}

func (o MaintenanceWindowResponseOutput) ToMaintenanceWindowResponseOutput() MaintenanceWindowResponseOutput {
	return o
}

func (o MaintenanceWindowResponseOutput) ToMaintenanceWindowResponseOutputWithContext(ctx context.Context) MaintenanceWindowResponseOutput {
	return o
}

func (o MaintenanceWindowResponseOutput) ToMaintenanceWindowResponsePtrOutput() MaintenanceWindowResponsePtrOutput {
	return o.ToMaintenanceWindowResponsePtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowResponseOutput) ToMaintenanceWindowResponsePtrOutputWithContext(ctx context.Context) MaintenanceWindowResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceWindowResponse) *MaintenanceWindowResponse {
		return &v
	}).(MaintenanceWindowResponsePtrOutput)
}

// The day of week, when the window starts.
func (o MaintenanceWindowResponseOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v MaintenanceWindowResponse) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

// The hour of day (0-23) when the window starts.
func (o MaintenanceWindowResponseOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v MaintenanceWindowResponse) int { return v.HourOfDay }).(pulumi.IntOutput)
}

type MaintenanceWindowResponsePtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowResponse)(nil)).Elem()
}

func (o MaintenanceWindowResponsePtrOutput) ToMaintenanceWindowResponsePtrOutput() MaintenanceWindowResponsePtrOutput {
	return o
}

func (o MaintenanceWindowResponsePtrOutput) ToMaintenanceWindowResponsePtrOutputWithContext(ctx context.Context) MaintenanceWindowResponsePtrOutput {
	return o
}

func (o MaintenanceWindowResponsePtrOutput) Elem() MaintenanceWindowResponseOutput {
	return o.ApplyT(func(v *MaintenanceWindowResponse) MaintenanceWindowResponse {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindowResponse
		return ret
	}).(MaintenanceWindowResponseOutput)
}

// The day of week, when the window starts.
func (o MaintenanceWindowResponsePtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

// The hour of day (0-23) when the window starts.
func (o MaintenanceWindowResponsePtrOutput) HourOfDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowResponse) *int {
		if v == nil {
			return nil
		}
		return &v.HourOfDay
	}).(pulumi.IntPtrOutput)
}

// The details of a metadata export operation.
type MetadataExportResponse struct {
	// The type of the database dump.
	DatabaseDumpType string `pulumi:"databaseDumpType"`
	// A Cloud Storage URI of a folder that metadata are exported to, in the form of gs:////, where is automatically generated.
	DestinationGcsUri string `pulumi:"destinationGcsUri"`
	// The time when the export ended.
	EndTime string `pulumi:"endTime"`
	// The time when the export started.
	StartTime string `pulumi:"startTime"`
	// The current state of the export.
	State string `pulumi:"state"`
}

// MetadataExportResponseInput is an input type that accepts MetadataExportResponseArgs and MetadataExportResponseOutput values.
// You can construct a concrete instance of `MetadataExportResponseInput` via:
//
//          MetadataExportResponseArgs{...}
type MetadataExportResponseInput interface {
	pulumi.Input

	ToMetadataExportResponseOutput() MetadataExportResponseOutput
	ToMetadataExportResponseOutputWithContext(context.Context) MetadataExportResponseOutput
}

// The details of a metadata export operation.
type MetadataExportResponseArgs struct {
	// The type of the database dump.
	DatabaseDumpType pulumi.StringInput `pulumi:"databaseDumpType"`
	// A Cloud Storage URI of a folder that metadata are exported to, in the form of gs:////, where is automatically generated.
	DestinationGcsUri pulumi.StringInput `pulumi:"destinationGcsUri"`
	// The time when the export ended.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The time when the export started.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// The current state of the export.
	State pulumi.StringInput `pulumi:"state"`
}

func (MetadataExportResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataExportResponse)(nil)).Elem()
}

func (i MetadataExportResponseArgs) ToMetadataExportResponseOutput() MetadataExportResponseOutput {
	return i.ToMetadataExportResponseOutputWithContext(context.Background())
}

func (i MetadataExportResponseArgs) ToMetadataExportResponseOutputWithContext(ctx context.Context) MetadataExportResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataExportResponseOutput)
}

// MetadataExportResponseArrayInput is an input type that accepts MetadataExportResponseArray and MetadataExportResponseArrayOutput values.
// You can construct a concrete instance of `MetadataExportResponseArrayInput` via:
//
//          MetadataExportResponseArray{ MetadataExportResponseArgs{...} }
type MetadataExportResponseArrayInput interface {
	pulumi.Input

	ToMetadataExportResponseArrayOutput() MetadataExportResponseArrayOutput
	ToMetadataExportResponseArrayOutputWithContext(context.Context) MetadataExportResponseArrayOutput
}

type MetadataExportResponseArray []MetadataExportResponseInput

func (MetadataExportResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataExportResponse)(nil)).Elem()
}

func (i MetadataExportResponseArray) ToMetadataExportResponseArrayOutput() MetadataExportResponseArrayOutput {
	return i.ToMetadataExportResponseArrayOutputWithContext(context.Background())
}

func (i MetadataExportResponseArray) ToMetadataExportResponseArrayOutputWithContext(ctx context.Context) MetadataExportResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataExportResponseArrayOutput)
}

// The details of a metadata export operation.
type MetadataExportResponseOutput struct{ *pulumi.OutputState }

func (MetadataExportResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataExportResponse)(nil)).Elem()
}

func (o MetadataExportResponseOutput) ToMetadataExportResponseOutput() MetadataExportResponseOutput {
	return o
}

func (o MetadataExportResponseOutput) ToMetadataExportResponseOutputWithContext(ctx context.Context) MetadataExportResponseOutput {
	return o
}

// The type of the database dump.
func (o MetadataExportResponseOutput) DatabaseDumpType() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataExportResponse) string { return v.DatabaseDumpType }).(pulumi.StringOutput)
}

// A Cloud Storage URI of a folder that metadata are exported to, in the form of gs:////, where is automatically generated.
func (o MetadataExportResponseOutput) DestinationGcsUri() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataExportResponse) string { return v.DestinationGcsUri }).(pulumi.StringOutput)
}

// The time when the export ended.
func (o MetadataExportResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataExportResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// The time when the export started.
func (o MetadataExportResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataExportResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// The current state of the export.
func (o MetadataExportResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataExportResponse) string { return v.State }).(pulumi.StringOutput)
}

type MetadataExportResponseArrayOutput struct{ *pulumi.OutputState }

func (MetadataExportResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataExportResponse)(nil)).Elem()
}

func (o MetadataExportResponseArrayOutput) ToMetadataExportResponseArrayOutput() MetadataExportResponseArrayOutput {
	return o
}

func (o MetadataExportResponseArrayOutput) ToMetadataExportResponseArrayOutputWithContext(ctx context.Context) MetadataExportResponseArrayOutput {
	return o
}

func (o MetadataExportResponseArrayOutput) Index(i pulumi.IntInput) MetadataExportResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetadataExportResponse {
		return vs[0].([]MetadataExportResponse)[vs[1].(int)]
	}).(MetadataExportResponseOutput)
}

// Specifies how metastore metadata should be integrated with external services.
type MetadataIntegration struct {
	// The integration config for the Data Catalog service.
	DataCatalogConfig *DataCatalogConfig `pulumi:"dataCatalogConfig"`
}

// MetadataIntegrationInput is an input type that accepts MetadataIntegrationArgs and MetadataIntegrationOutput values.
// You can construct a concrete instance of `MetadataIntegrationInput` via:
//
//          MetadataIntegrationArgs{...}
type MetadataIntegrationInput interface {
	pulumi.Input

	ToMetadataIntegrationOutput() MetadataIntegrationOutput
	ToMetadataIntegrationOutputWithContext(context.Context) MetadataIntegrationOutput
}

// Specifies how metastore metadata should be integrated with external services.
type MetadataIntegrationArgs struct {
	// The integration config for the Data Catalog service.
	DataCatalogConfig DataCatalogConfigPtrInput `pulumi:"dataCatalogConfig"`
}

func (MetadataIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataIntegration)(nil)).Elem()
}

func (i MetadataIntegrationArgs) ToMetadataIntegrationOutput() MetadataIntegrationOutput {
	return i.ToMetadataIntegrationOutputWithContext(context.Background())
}

func (i MetadataIntegrationArgs) ToMetadataIntegrationOutputWithContext(ctx context.Context) MetadataIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataIntegrationOutput)
}

func (i MetadataIntegrationArgs) ToMetadataIntegrationPtrOutput() MetadataIntegrationPtrOutput {
	return i.ToMetadataIntegrationPtrOutputWithContext(context.Background())
}

func (i MetadataIntegrationArgs) ToMetadataIntegrationPtrOutputWithContext(ctx context.Context) MetadataIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataIntegrationOutput).ToMetadataIntegrationPtrOutputWithContext(ctx)
}

// MetadataIntegrationPtrInput is an input type that accepts MetadataIntegrationArgs, MetadataIntegrationPtr and MetadataIntegrationPtrOutput values.
// You can construct a concrete instance of `MetadataIntegrationPtrInput` via:
//
//          MetadataIntegrationArgs{...}
//
//  or:
//
//          nil
type MetadataIntegrationPtrInput interface {
	pulumi.Input

	ToMetadataIntegrationPtrOutput() MetadataIntegrationPtrOutput
	ToMetadataIntegrationPtrOutputWithContext(context.Context) MetadataIntegrationPtrOutput
}

type metadataIntegrationPtrType MetadataIntegrationArgs

func MetadataIntegrationPtr(v *MetadataIntegrationArgs) MetadataIntegrationPtrInput {
	return (*metadataIntegrationPtrType)(v)
}

func (*metadataIntegrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataIntegration)(nil)).Elem()
}

func (i *metadataIntegrationPtrType) ToMetadataIntegrationPtrOutput() MetadataIntegrationPtrOutput {
	return i.ToMetadataIntegrationPtrOutputWithContext(context.Background())
}

func (i *metadataIntegrationPtrType) ToMetadataIntegrationPtrOutputWithContext(ctx context.Context) MetadataIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataIntegrationPtrOutput)
}

// Specifies how metastore metadata should be integrated with external services.
type MetadataIntegrationOutput struct{ *pulumi.OutputState }

func (MetadataIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataIntegration)(nil)).Elem()
}

func (o MetadataIntegrationOutput) ToMetadataIntegrationOutput() MetadataIntegrationOutput {
	return o
}

func (o MetadataIntegrationOutput) ToMetadataIntegrationOutputWithContext(ctx context.Context) MetadataIntegrationOutput {
	return o
}

func (o MetadataIntegrationOutput) ToMetadataIntegrationPtrOutput() MetadataIntegrationPtrOutput {
	return o.ToMetadataIntegrationPtrOutputWithContext(context.Background())
}

func (o MetadataIntegrationOutput) ToMetadataIntegrationPtrOutputWithContext(ctx context.Context) MetadataIntegrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataIntegration) *MetadataIntegration {
		return &v
	}).(MetadataIntegrationPtrOutput)
}

// The integration config for the Data Catalog service.
func (o MetadataIntegrationOutput) DataCatalogConfig() DataCatalogConfigPtrOutput {
	return o.ApplyT(func(v MetadataIntegration) *DataCatalogConfig { return v.DataCatalogConfig }).(DataCatalogConfigPtrOutput)
}

type MetadataIntegrationPtrOutput struct{ *pulumi.OutputState }

func (MetadataIntegrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataIntegration)(nil)).Elem()
}

func (o MetadataIntegrationPtrOutput) ToMetadataIntegrationPtrOutput() MetadataIntegrationPtrOutput {
	return o
}

func (o MetadataIntegrationPtrOutput) ToMetadataIntegrationPtrOutputWithContext(ctx context.Context) MetadataIntegrationPtrOutput {
	return o
}

func (o MetadataIntegrationPtrOutput) Elem() MetadataIntegrationOutput {
	return o.ApplyT(func(v *MetadataIntegration) MetadataIntegration {
		if v != nil {
			return *v
		}
		var ret MetadataIntegration
		return ret
	}).(MetadataIntegrationOutput)
}

// The integration config for the Data Catalog service.
func (o MetadataIntegrationPtrOutput) DataCatalogConfig() DataCatalogConfigPtrOutput {
	return o.ApplyT(func(v *MetadataIntegration) *DataCatalogConfig {
		if v == nil {
			return nil
		}
		return v.DataCatalogConfig
	}).(DataCatalogConfigPtrOutput)
}

// Specifies how metastore metadata should be integrated with external services.
type MetadataIntegrationResponse struct {
	// The integration config for the Data Catalog service.
	DataCatalogConfig DataCatalogConfigResponse `pulumi:"dataCatalogConfig"`
}

// MetadataIntegrationResponseInput is an input type that accepts MetadataIntegrationResponseArgs and MetadataIntegrationResponseOutput values.
// You can construct a concrete instance of `MetadataIntegrationResponseInput` via:
//
//          MetadataIntegrationResponseArgs{...}
type MetadataIntegrationResponseInput interface {
	pulumi.Input

	ToMetadataIntegrationResponseOutput() MetadataIntegrationResponseOutput
	ToMetadataIntegrationResponseOutputWithContext(context.Context) MetadataIntegrationResponseOutput
}

// Specifies how metastore metadata should be integrated with external services.
type MetadataIntegrationResponseArgs struct {
	// The integration config for the Data Catalog service.
	DataCatalogConfig DataCatalogConfigResponseInput `pulumi:"dataCatalogConfig"`
}

func (MetadataIntegrationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataIntegrationResponse)(nil)).Elem()
}

func (i MetadataIntegrationResponseArgs) ToMetadataIntegrationResponseOutput() MetadataIntegrationResponseOutput {
	return i.ToMetadataIntegrationResponseOutputWithContext(context.Background())
}

func (i MetadataIntegrationResponseArgs) ToMetadataIntegrationResponseOutputWithContext(ctx context.Context) MetadataIntegrationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataIntegrationResponseOutput)
}

func (i MetadataIntegrationResponseArgs) ToMetadataIntegrationResponsePtrOutput() MetadataIntegrationResponsePtrOutput {
	return i.ToMetadataIntegrationResponsePtrOutputWithContext(context.Background())
}

func (i MetadataIntegrationResponseArgs) ToMetadataIntegrationResponsePtrOutputWithContext(ctx context.Context) MetadataIntegrationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataIntegrationResponseOutput).ToMetadataIntegrationResponsePtrOutputWithContext(ctx)
}

// MetadataIntegrationResponsePtrInput is an input type that accepts MetadataIntegrationResponseArgs, MetadataIntegrationResponsePtr and MetadataIntegrationResponsePtrOutput values.
// You can construct a concrete instance of `MetadataIntegrationResponsePtrInput` via:
//
//          MetadataIntegrationResponseArgs{...}
//
//  or:
//
//          nil
type MetadataIntegrationResponsePtrInput interface {
	pulumi.Input

	ToMetadataIntegrationResponsePtrOutput() MetadataIntegrationResponsePtrOutput
	ToMetadataIntegrationResponsePtrOutputWithContext(context.Context) MetadataIntegrationResponsePtrOutput
}

type metadataIntegrationResponsePtrType MetadataIntegrationResponseArgs

func MetadataIntegrationResponsePtr(v *MetadataIntegrationResponseArgs) MetadataIntegrationResponsePtrInput {
	return (*metadataIntegrationResponsePtrType)(v)
}

func (*metadataIntegrationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataIntegrationResponse)(nil)).Elem()
}

func (i *metadataIntegrationResponsePtrType) ToMetadataIntegrationResponsePtrOutput() MetadataIntegrationResponsePtrOutput {
	return i.ToMetadataIntegrationResponsePtrOutputWithContext(context.Background())
}

func (i *metadataIntegrationResponsePtrType) ToMetadataIntegrationResponsePtrOutputWithContext(ctx context.Context) MetadataIntegrationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataIntegrationResponsePtrOutput)
}

// Specifies how metastore metadata should be integrated with external services.
type MetadataIntegrationResponseOutput struct{ *pulumi.OutputState }

func (MetadataIntegrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataIntegrationResponse)(nil)).Elem()
}

func (o MetadataIntegrationResponseOutput) ToMetadataIntegrationResponseOutput() MetadataIntegrationResponseOutput {
	return o
}

func (o MetadataIntegrationResponseOutput) ToMetadataIntegrationResponseOutputWithContext(ctx context.Context) MetadataIntegrationResponseOutput {
	return o
}

func (o MetadataIntegrationResponseOutput) ToMetadataIntegrationResponsePtrOutput() MetadataIntegrationResponsePtrOutput {
	return o.ToMetadataIntegrationResponsePtrOutputWithContext(context.Background())
}

func (o MetadataIntegrationResponseOutput) ToMetadataIntegrationResponsePtrOutputWithContext(ctx context.Context) MetadataIntegrationResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataIntegrationResponse) *MetadataIntegrationResponse {
		return &v
	}).(MetadataIntegrationResponsePtrOutput)
}

// The integration config for the Data Catalog service.
func (o MetadataIntegrationResponseOutput) DataCatalogConfig() DataCatalogConfigResponseOutput {
	return o.ApplyT(func(v MetadataIntegrationResponse) DataCatalogConfigResponse { return v.DataCatalogConfig }).(DataCatalogConfigResponseOutput)
}

type MetadataIntegrationResponsePtrOutput struct{ *pulumi.OutputState }

func (MetadataIntegrationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataIntegrationResponse)(nil)).Elem()
}

func (o MetadataIntegrationResponsePtrOutput) ToMetadataIntegrationResponsePtrOutput() MetadataIntegrationResponsePtrOutput {
	return o
}

func (o MetadataIntegrationResponsePtrOutput) ToMetadataIntegrationResponsePtrOutputWithContext(ctx context.Context) MetadataIntegrationResponsePtrOutput {
	return o
}

func (o MetadataIntegrationResponsePtrOutput) Elem() MetadataIntegrationResponseOutput {
	return o.ApplyT(func(v *MetadataIntegrationResponse) MetadataIntegrationResponse {
		if v != nil {
			return *v
		}
		var ret MetadataIntegrationResponse
		return ret
	}).(MetadataIntegrationResponseOutput)
}

// The integration config for the Data Catalog service.
func (o MetadataIntegrationResponsePtrOutput) DataCatalogConfig() DataCatalogConfigResponsePtrOutput {
	return o.ApplyT(func(v *MetadataIntegrationResponse) *DataCatalogConfigResponse {
		if v == nil {
			return nil
		}
		return &v.DataCatalogConfig
	}).(DataCatalogConfigResponsePtrOutput)
}

// The metadata management activities of the metastore service.
type MetadataManagementActivityResponse struct {
	// The latest metadata exports of the metastore service.
	MetadataExports []MetadataExportResponse `pulumi:"metadataExports"`
	// The latest restores of the metastore service.
	Restores []RestoreResponse `pulumi:"restores"`
}

// MetadataManagementActivityResponseInput is an input type that accepts MetadataManagementActivityResponseArgs and MetadataManagementActivityResponseOutput values.
// You can construct a concrete instance of `MetadataManagementActivityResponseInput` via:
//
//          MetadataManagementActivityResponseArgs{...}
type MetadataManagementActivityResponseInput interface {
	pulumi.Input

	ToMetadataManagementActivityResponseOutput() MetadataManagementActivityResponseOutput
	ToMetadataManagementActivityResponseOutputWithContext(context.Context) MetadataManagementActivityResponseOutput
}

// The metadata management activities of the metastore service.
type MetadataManagementActivityResponseArgs struct {
	// The latest metadata exports of the metastore service.
	MetadataExports MetadataExportResponseArrayInput `pulumi:"metadataExports"`
	// The latest restores of the metastore service.
	Restores RestoreResponseArrayInput `pulumi:"restores"`
}

func (MetadataManagementActivityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataManagementActivityResponse)(nil)).Elem()
}

func (i MetadataManagementActivityResponseArgs) ToMetadataManagementActivityResponseOutput() MetadataManagementActivityResponseOutput {
	return i.ToMetadataManagementActivityResponseOutputWithContext(context.Background())
}

func (i MetadataManagementActivityResponseArgs) ToMetadataManagementActivityResponseOutputWithContext(ctx context.Context) MetadataManagementActivityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataManagementActivityResponseOutput)
}

func (i MetadataManagementActivityResponseArgs) ToMetadataManagementActivityResponsePtrOutput() MetadataManagementActivityResponsePtrOutput {
	return i.ToMetadataManagementActivityResponsePtrOutputWithContext(context.Background())
}

func (i MetadataManagementActivityResponseArgs) ToMetadataManagementActivityResponsePtrOutputWithContext(ctx context.Context) MetadataManagementActivityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataManagementActivityResponseOutput).ToMetadataManagementActivityResponsePtrOutputWithContext(ctx)
}

// MetadataManagementActivityResponsePtrInput is an input type that accepts MetadataManagementActivityResponseArgs, MetadataManagementActivityResponsePtr and MetadataManagementActivityResponsePtrOutput values.
// You can construct a concrete instance of `MetadataManagementActivityResponsePtrInput` via:
//
//          MetadataManagementActivityResponseArgs{...}
//
//  or:
//
//          nil
type MetadataManagementActivityResponsePtrInput interface {
	pulumi.Input

	ToMetadataManagementActivityResponsePtrOutput() MetadataManagementActivityResponsePtrOutput
	ToMetadataManagementActivityResponsePtrOutputWithContext(context.Context) MetadataManagementActivityResponsePtrOutput
}

type metadataManagementActivityResponsePtrType MetadataManagementActivityResponseArgs

func MetadataManagementActivityResponsePtr(v *MetadataManagementActivityResponseArgs) MetadataManagementActivityResponsePtrInput {
	return (*metadataManagementActivityResponsePtrType)(v)
}

func (*metadataManagementActivityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataManagementActivityResponse)(nil)).Elem()
}

func (i *metadataManagementActivityResponsePtrType) ToMetadataManagementActivityResponsePtrOutput() MetadataManagementActivityResponsePtrOutput {
	return i.ToMetadataManagementActivityResponsePtrOutputWithContext(context.Background())
}

func (i *metadataManagementActivityResponsePtrType) ToMetadataManagementActivityResponsePtrOutputWithContext(ctx context.Context) MetadataManagementActivityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataManagementActivityResponsePtrOutput)
}

// The metadata management activities of the metastore service.
type MetadataManagementActivityResponseOutput struct{ *pulumi.OutputState }

func (MetadataManagementActivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataManagementActivityResponse)(nil)).Elem()
}

func (o MetadataManagementActivityResponseOutput) ToMetadataManagementActivityResponseOutput() MetadataManagementActivityResponseOutput {
	return o
}

func (o MetadataManagementActivityResponseOutput) ToMetadataManagementActivityResponseOutputWithContext(ctx context.Context) MetadataManagementActivityResponseOutput {
	return o
}

func (o MetadataManagementActivityResponseOutput) ToMetadataManagementActivityResponsePtrOutput() MetadataManagementActivityResponsePtrOutput {
	return o.ToMetadataManagementActivityResponsePtrOutputWithContext(context.Background())
}

func (o MetadataManagementActivityResponseOutput) ToMetadataManagementActivityResponsePtrOutputWithContext(ctx context.Context) MetadataManagementActivityResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataManagementActivityResponse) *MetadataManagementActivityResponse {
		return &v
	}).(MetadataManagementActivityResponsePtrOutput)
}

// The latest metadata exports of the metastore service.
func (o MetadataManagementActivityResponseOutput) MetadataExports() MetadataExportResponseArrayOutput {
	return o.ApplyT(func(v MetadataManagementActivityResponse) []MetadataExportResponse { return v.MetadataExports }).(MetadataExportResponseArrayOutput)
}

// The latest restores of the metastore service.
func (o MetadataManagementActivityResponseOutput) Restores() RestoreResponseArrayOutput {
	return o.ApplyT(func(v MetadataManagementActivityResponse) []RestoreResponse { return v.Restores }).(RestoreResponseArrayOutput)
}

type MetadataManagementActivityResponsePtrOutput struct{ *pulumi.OutputState }

func (MetadataManagementActivityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataManagementActivityResponse)(nil)).Elem()
}

func (o MetadataManagementActivityResponsePtrOutput) ToMetadataManagementActivityResponsePtrOutput() MetadataManagementActivityResponsePtrOutput {
	return o
}

func (o MetadataManagementActivityResponsePtrOutput) ToMetadataManagementActivityResponsePtrOutputWithContext(ctx context.Context) MetadataManagementActivityResponsePtrOutput {
	return o
}

func (o MetadataManagementActivityResponsePtrOutput) Elem() MetadataManagementActivityResponseOutput {
	return o.ApplyT(func(v *MetadataManagementActivityResponse) MetadataManagementActivityResponse {
		if v != nil {
			return *v
		}
		var ret MetadataManagementActivityResponse
		return ret
	}).(MetadataManagementActivityResponseOutput)
}

// The latest metadata exports of the metastore service.
func (o MetadataManagementActivityResponsePtrOutput) MetadataExports() MetadataExportResponseArrayOutput {
	return o.ApplyT(func(v *MetadataManagementActivityResponse) []MetadataExportResponse {
		if v == nil {
			return nil
		}
		return v.MetadataExports
	}).(MetadataExportResponseArrayOutput)
}

// The latest restores of the metastore service.
func (o MetadataManagementActivityResponsePtrOutput) Restores() RestoreResponseArrayOutput {
	return o.ApplyT(func(v *MetadataManagementActivityResponse) []RestoreResponse {
		if v == nil {
			return nil
		}
		return v.Restores
	}).(RestoreResponseArrayOutput)
}

// The details of a metadata restore operation.
type RestoreResponse struct {
	// The relative resource name of the metastore service backup to restore from, in the following form:projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}.
	Backup string `pulumi:"backup"`
	// The restore details containing the revision of the service to be restored to, in format of JSON.
	Details string `pulumi:"details"`
	// The time when the restore ended.
	EndTime string `pulumi:"endTime"`
	// The time when the restore started.
	StartTime string `pulumi:"startTime"`
	// The current state of the restore.
	State string `pulumi:"state"`
	// The type of restore.
	Type string `pulumi:"type"`
}

// RestoreResponseInput is an input type that accepts RestoreResponseArgs and RestoreResponseOutput values.
// You can construct a concrete instance of `RestoreResponseInput` via:
//
//          RestoreResponseArgs{...}
type RestoreResponseInput interface {
	pulumi.Input

	ToRestoreResponseOutput() RestoreResponseOutput
	ToRestoreResponseOutputWithContext(context.Context) RestoreResponseOutput
}

// The details of a metadata restore operation.
type RestoreResponseArgs struct {
	// The relative resource name of the metastore service backup to restore from, in the following form:projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}.
	Backup pulumi.StringInput `pulumi:"backup"`
	// The restore details containing the revision of the service to be restored to, in format of JSON.
	Details pulumi.StringInput `pulumi:"details"`
	// The time when the restore ended.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The time when the restore started.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// The current state of the restore.
	State pulumi.StringInput `pulumi:"state"`
	// The type of restore.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RestoreResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreResponse)(nil)).Elem()
}

func (i RestoreResponseArgs) ToRestoreResponseOutput() RestoreResponseOutput {
	return i.ToRestoreResponseOutputWithContext(context.Background())
}

func (i RestoreResponseArgs) ToRestoreResponseOutputWithContext(ctx context.Context) RestoreResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreResponseOutput)
}

// RestoreResponseArrayInput is an input type that accepts RestoreResponseArray and RestoreResponseArrayOutput values.
// You can construct a concrete instance of `RestoreResponseArrayInput` via:
//
//          RestoreResponseArray{ RestoreResponseArgs{...} }
type RestoreResponseArrayInput interface {
	pulumi.Input

	ToRestoreResponseArrayOutput() RestoreResponseArrayOutput
	ToRestoreResponseArrayOutputWithContext(context.Context) RestoreResponseArrayOutput
}

type RestoreResponseArray []RestoreResponseInput

func (RestoreResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestoreResponse)(nil)).Elem()
}

func (i RestoreResponseArray) ToRestoreResponseArrayOutput() RestoreResponseArrayOutput {
	return i.ToRestoreResponseArrayOutputWithContext(context.Background())
}

func (i RestoreResponseArray) ToRestoreResponseArrayOutputWithContext(ctx context.Context) RestoreResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreResponseArrayOutput)
}

// The details of a metadata restore operation.
type RestoreResponseOutput struct{ *pulumi.OutputState }

func (RestoreResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreResponse)(nil)).Elem()
}

func (o RestoreResponseOutput) ToRestoreResponseOutput() RestoreResponseOutput {
	return o
}

func (o RestoreResponseOutput) ToRestoreResponseOutputWithContext(ctx context.Context) RestoreResponseOutput {
	return o
}

// The relative resource name of the metastore service backup to restore from, in the following form:projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}.
func (o RestoreResponseOutput) Backup() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreResponse) string { return v.Backup }).(pulumi.StringOutput)
}

// The restore details containing the revision of the service to be restored to, in format of JSON.
func (o RestoreResponseOutput) Details() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreResponse) string { return v.Details }).(pulumi.StringOutput)
}

// The time when the restore ended.
func (o RestoreResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// The time when the restore started.
func (o RestoreResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// The current state of the restore.
func (o RestoreResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreResponse) string { return v.State }).(pulumi.StringOutput)
}

// The type of restore.
func (o RestoreResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RestoreResponseArrayOutput struct{ *pulumi.OutputState }

func (RestoreResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestoreResponse)(nil)).Elem()
}

func (o RestoreResponseArrayOutput) ToRestoreResponseArrayOutput() RestoreResponseArrayOutput {
	return o
}

func (o RestoreResponseArrayOutput) ToRestoreResponseArrayOutputWithContext(ctx context.Context) RestoreResponseArrayOutput {
	return o
}

func (o RestoreResponseArrayOutput) Index(i pulumi.IntInput) RestoreResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RestoreResponse {
		return vs[0].([]RestoreResponse)[vs[1].(int)]
	}).(RestoreResponseOutput)
}

// A securely stored value.
type Secret struct {
	// The relative resource name of a Secret Manager secret version, in the following form:projects/{project_number}/secrets/{secret_id}/versions/{version_id}.
	CloudSecret *string `pulumi:"cloudSecret"`
}

// SecretInput is an input type that accepts SecretArgs and SecretOutput values.
// You can construct a concrete instance of `SecretInput` via:
//
//          SecretArgs{...}
type SecretInput interface {
	pulumi.Input

	ToSecretOutput() SecretOutput
	ToSecretOutputWithContext(context.Context) SecretOutput
}

// A securely stored value.
type SecretArgs struct {
	// The relative resource name of a Secret Manager secret version, in the following form:projects/{project_number}/secrets/{secret_id}/versions/{version_id}.
	CloudSecret pulumi.StringPtrInput `pulumi:"cloudSecret"`
}

func (SecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Secret)(nil)).Elem()
}

func (i SecretArgs) ToSecretOutput() SecretOutput {
	return i.ToSecretOutputWithContext(context.Background())
}

func (i SecretArgs) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOutput)
}

func (i SecretArgs) ToSecretPtrOutput() SecretPtrOutput {
	return i.ToSecretPtrOutputWithContext(context.Background())
}

func (i SecretArgs) ToSecretPtrOutputWithContext(ctx context.Context) SecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOutput).ToSecretPtrOutputWithContext(ctx)
}

// SecretPtrInput is an input type that accepts SecretArgs, SecretPtr and SecretPtrOutput values.
// You can construct a concrete instance of `SecretPtrInput` via:
//
//          SecretArgs{...}
//
//  or:
//
//          nil
type SecretPtrInput interface {
	pulumi.Input

	ToSecretPtrOutput() SecretPtrOutput
	ToSecretPtrOutputWithContext(context.Context) SecretPtrOutput
}

type secretPtrType SecretArgs

func SecretPtr(v *SecretArgs) SecretPtrInput {
	return (*secretPtrType)(v)
}

func (*secretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Secret)(nil)).Elem()
}

func (i *secretPtrType) ToSecretPtrOutput() SecretPtrOutput {
	return i.ToSecretPtrOutputWithContext(context.Background())
}

func (i *secretPtrType) ToSecretPtrOutputWithContext(ctx context.Context) SecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretPtrOutput)
}

// A securely stored value.
type SecretOutput struct{ *pulumi.OutputState }

func (SecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Secret)(nil)).Elem()
}

func (o SecretOutput) ToSecretOutput() SecretOutput {
	return o
}

func (o SecretOutput) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return o
}

func (o SecretOutput) ToSecretPtrOutput() SecretPtrOutput {
	return o.ToSecretPtrOutputWithContext(context.Background())
}

func (o SecretOutput) ToSecretPtrOutputWithContext(ctx context.Context) SecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Secret) *Secret {
		return &v
	}).(SecretPtrOutput)
}

// The relative resource name of a Secret Manager secret version, in the following form:projects/{project_number}/secrets/{secret_id}/versions/{version_id}.
func (o SecretOutput) CloudSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Secret) *string { return v.CloudSecret }).(pulumi.StringPtrOutput)
}

type SecretPtrOutput struct{ *pulumi.OutputState }

func (SecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Secret)(nil)).Elem()
}

func (o SecretPtrOutput) ToSecretPtrOutput() SecretPtrOutput {
	return o
}

func (o SecretPtrOutput) ToSecretPtrOutputWithContext(ctx context.Context) SecretPtrOutput {
	return o
}

func (o SecretPtrOutput) Elem() SecretOutput {
	return o.ApplyT(func(v *Secret) Secret {
		if v != nil {
			return *v
		}
		var ret Secret
		return ret
	}).(SecretOutput)
}

// The relative resource name of a Secret Manager secret version, in the following form:projects/{project_number}/secrets/{secret_id}/versions/{version_id}.
func (o SecretPtrOutput) CloudSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Secret) *string {
		if v == nil {
			return nil
		}
		return v.CloudSecret
	}).(pulumi.StringPtrOutput)
}

// A securely stored value.
type SecretResponse struct {
	// The relative resource name of a Secret Manager secret version, in the following form:projects/{project_number}/secrets/{secret_id}/versions/{version_id}.
	CloudSecret string `pulumi:"cloudSecret"`
}

// SecretResponseInput is an input type that accepts SecretResponseArgs and SecretResponseOutput values.
// You can construct a concrete instance of `SecretResponseInput` via:
//
//          SecretResponseArgs{...}
type SecretResponseInput interface {
	pulumi.Input

	ToSecretResponseOutput() SecretResponseOutput
	ToSecretResponseOutputWithContext(context.Context) SecretResponseOutput
}

// A securely stored value.
type SecretResponseArgs struct {
	// The relative resource name of a Secret Manager secret version, in the following form:projects/{project_number}/secrets/{secret_id}/versions/{version_id}.
	CloudSecret pulumi.StringInput `pulumi:"cloudSecret"`
}

func (SecretResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretResponse)(nil)).Elem()
}

func (i SecretResponseArgs) ToSecretResponseOutput() SecretResponseOutput {
	return i.ToSecretResponseOutputWithContext(context.Background())
}

func (i SecretResponseArgs) ToSecretResponseOutputWithContext(ctx context.Context) SecretResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretResponseOutput)
}

func (i SecretResponseArgs) ToSecretResponsePtrOutput() SecretResponsePtrOutput {
	return i.ToSecretResponsePtrOutputWithContext(context.Background())
}

func (i SecretResponseArgs) ToSecretResponsePtrOutputWithContext(ctx context.Context) SecretResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretResponseOutput).ToSecretResponsePtrOutputWithContext(ctx)
}

// SecretResponsePtrInput is an input type that accepts SecretResponseArgs, SecretResponsePtr and SecretResponsePtrOutput values.
// You can construct a concrete instance of `SecretResponsePtrInput` via:
//
//          SecretResponseArgs{...}
//
//  or:
//
//          nil
type SecretResponsePtrInput interface {
	pulumi.Input

	ToSecretResponsePtrOutput() SecretResponsePtrOutput
	ToSecretResponsePtrOutputWithContext(context.Context) SecretResponsePtrOutput
}

type secretResponsePtrType SecretResponseArgs

func SecretResponsePtr(v *SecretResponseArgs) SecretResponsePtrInput {
	return (*secretResponsePtrType)(v)
}

func (*secretResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretResponse)(nil)).Elem()
}

func (i *secretResponsePtrType) ToSecretResponsePtrOutput() SecretResponsePtrOutput {
	return i.ToSecretResponsePtrOutputWithContext(context.Background())
}

func (i *secretResponsePtrType) ToSecretResponsePtrOutputWithContext(ctx context.Context) SecretResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretResponsePtrOutput)
}

// A securely stored value.
type SecretResponseOutput struct{ *pulumi.OutputState }

func (SecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretResponse)(nil)).Elem()
}

func (o SecretResponseOutput) ToSecretResponseOutput() SecretResponseOutput {
	return o
}

func (o SecretResponseOutput) ToSecretResponseOutputWithContext(ctx context.Context) SecretResponseOutput {
	return o
}

func (o SecretResponseOutput) ToSecretResponsePtrOutput() SecretResponsePtrOutput {
	return o.ToSecretResponsePtrOutputWithContext(context.Background())
}

func (o SecretResponseOutput) ToSecretResponsePtrOutputWithContext(ctx context.Context) SecretResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretResponse) *SecretResponse {
		return &v
	}).(SecretResponsePtrOutput)
}

// The relative resource name of a Secret Manager secret version, in the following form:projects/{project_number}/secrets/{secret_id}/versions/{version_id}.
func (o SecretResponseOutput) CloudSecret() pulumi.StringOutput {
	return o.ApplyT(func(v SecretResponse) string { return v.CloudSecret }).(pulumi.StringOutput)
}

type SecretResponsePtrOutput struct{ *pulumi.OutputState }

func (SecretResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretResponse)(nil)).Elem()
}

func (o SecretResponsePtrOutput) ToSecretResponsePtrOutput() SecretResponsePtrOutput {
	return o
}

func (o SecretResponsePtrOutput) ToSecretResponsePtrOutputWithContext(ctx context.Context) SecretResponsePtrOutput {
	return o
}

func (o SecretResponsePtrOutput) Elem() SecretResponseOutput {
	return o.ApplyT(func(v *SecretResponse) SecretResponse {
		if v != nil {
			return *v
		}
		var ret SecretResponse
		return ret
	}).(SecretResponseOutput)
}

// The relative resource name of a Secret Manager secret version, in the following form:projects/{project_number}/secrets/{secret_id}/versions/{version_id}.
func (o SecretResponsePtrOutput) CloudSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CloudSecret
	}).(pulumi.StringPtrOutput)
}

// A managed metastore service that serves metadata queries.
type ServiceResponse struct {
	// A Cloud Storage URI (starting with gs://) that specifies where artifacts related to the metastore service are stored.
	ArtifactGcsUri string `pulumi:"artifactGcsUri"`
	// The time when the metastore service was created.
	CreateTime string `pulumi:"createTime"`
	// Immutable. Information used to configure the Dataproc Metastore service to encrypt customer data at rest. Cannot be updated.
	EncryptionConfig EncryptionConfigResponse `pulumi:"encryptionConfig"`
	// The URI of the endpoint used to access the metastore service.
	EndpointUri string `pulumi:"endpointUri"`
	// Configuration information specific to running Hive metastore software as the metastore service.
	HiveMetastoreConfig HiveMetastoreConfigResponse `pulumi:"hiveMetastoreConfig"`
	// User-defined labels for the metastore service.
	Labels map[string]string `pulumi:"labels"`
	// The one hour maintenance window of the metastore service. This specifies when the service can be restarted for maintenance purposes in UTC time.
	MaintenanceWindow MaintenanceWindowResponse `pulumi:"maintenanceWindow"`
	// The setting that defines how metastore metadata should be integrated with external services and systems.
	MetadataIntegration MetadataIntegrationResponse `pulumi:"metadataIntegration"`
	// The metadata management activities of the metastore service.
	MetadataManagementActivity MetadataManagementActivityResponse `pulumi:"metadataManagementActivity"`
	// Immutable. The relative resource name of the metastore service, of the form:projects/{project_number}/locations/{location_id}/services/{service_id}.
	Name string `pulumi:"name"`
	// Immutable. The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:projects/{project_number}/global/networks/{network_id}.
	Network string `pulumi:"network"`
	// The TCP port at which the metastore service is reached. Default: 9083.
	Port int `pulumi:"port"`
	// Immutable. The release channel of the service. If unspecified, defaults to STABLE.
	ReleaseChannel string `pulumi:"releaseChannel"`
	// The current state of the metastore service.
	State string `pulumi:"state"`
	// Additional information about the current state of the metastore service, if available.
	StateMessage string `pulumi:"stateMessage"`
	// The tier of the service.
	Tier string `pulumi:"tier"`
	// The globally unique resource identifier of the metastore service.
	Uid string `pulumi:"uid"`
	// The time when the metastore service was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

// ServiceResponseInput is an input type that accepts ServiceResponseArgs and ServiceResponseOutput values.
// You can construct a concrete instance of `ServiceResponseInput` via:
//
//          ServiceResponseArgs{...}
type ServiceResponseInput interface {
	pulumi.Input

	ToServiceResponseOutput() ServiceResponseOutput
	ToServiceResponseOutputWithContext(context.Context) ServiceResponseOutput
}

// A managed metastore service that serves metadata queries.
type ServiceResponseArgs struct {
	// A Cloud Storage URI (starting with gs://) that specifies where artifacts related to the metastore service are stored.
	ArtifactGcsUri pulumi.StringInput `pulumi:"artifactGcsUri"`
	// The time when the metastore service was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Immutable. Information used to configure the Dataproc Metastore service to encrypt customer data at rest. Cannot be updated.
	EncryptionConfig EncryptionConfigResponseInput `pulumi:"encryptionConfig"`
	// The URI of the endpoint used to access the metastore service.
	EndpointUri pulumi.StringInput `pulumi:"endpointUri"`
	// Configuration information specific to running Hive metastore software as the metastore service.
	HiveMetastoreConfig HiveMetastoreConfigResponseInput `pulumi:"hiveMetastoreConfig"`
	// User-defined labels for the metastore service.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The one hour maintenance window of the metastore service. This specifies when the service can be restarted for maintenance purposes in UTC time.
	MaintenanceWindow MaintenanceWindowResponseInput `pulumi:"maintenanceWindow"`
	// The setting that defines how metastore metadata should be integrated with external services and systems.
	MetadataIntegration MetadataIntegrationResponseInput `pulumi:"metadataIntegration"`
	// The metadata management activities of the metastore service.
	MetadataManagementActivity MetadataManagementActivityResponseInput `pulumi:"metadataManagementActivity"`
	// Immutable. The relative resource name of the metastore service, of the form:projects/{project_number}/locations/{location_id}/services/{service_id}.
	Name pulumi.StringInput `pulumi:"name"`
	// Immutable. The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:projects/{project_number}/global/networks/{network_id}.
	Network pulumi.StringInput `pulumi:"network"`
	// The TCP port at which the metastore service is reached. Default: 9083.
	Port pulumi.IntInput `pulumi:"port"`
	// Immutable. The release channel of the service. If unspecified, defaults to STABLE.
	ReleaseChannel pulumi.StringInput `pulumi:"releaseChannel"`
	// The current state of the metastore service.
	State pulumi.StringInput `pulumi:"state"`
	// Additional information about the current state of the metastore service, if available.
	StateMessage pulumi.StringInput `pulumi:"stateMessage"`
	// The tier of the service.
	Tier pulumi.StringInput `pulumi:"tier"`
	// The globally unique resource identifier of the metastore service.
	Uid pulumi.StringInput `pulumi:"uid"`
	// The time when the metastore service was last updated.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (ServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceResponse)(nil)).Elem()
}

func (i ServiceResponseArgs) ToServiceResponseOutput() ServiceResponseOutput {
	return i.ToServiceResponseOutputWithContext(context.Background())
}

func (i ServiceResponseArgs) ToServiceResponseOutputWithContext(ctx context.Context) ServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceResponseOutput)
}

func (i ServiceResponseArgs) ToServiceResponsePtrOutput() ServiceResponsePtrOutput {
	return i.ToServiceResponsePtrOutputWithContext(context.Background())
}

func (i ServiceResponseArgs) ToServiceResponsePtrOutputWithContext(ctx context.Context) ServiceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceResponseOutput).ToServiceResponsePtrOutputWithContext(ctx)
}

// ServiceResponsePtrInput is an input type that accepts ServiceResponseArgs, ServiceResponsePtr and ServiceResponsePtrOutput values.
// You can construct a concrete instance of `ServiceResponsePtrInput` via:
//
//          ServiceResponseArgs{...}
//
//  or:
//
//          nil
type ServiceResponsePtrInput interface {
	pulumi.Input

	ToServiceResponsePtrOutput() ServiceResponsePtrOutput
	ToServiceResponsePtrOutputWithContext(context.Context) ServiceResponsePtrOutput
}

type serviceResponsePtrType ServiceResponseArgs

func ServiceResponsePtr(v *ServiceResponseArgs) ServiceResponsePtrInput {
	return (*serviceResponsePtrType)(v)
}

func (*serviceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceResponse)(nil)).Elem()
}

func (i *serviceResponsePtrType) ToServiceResponsePtrOutput() ServiceResponsePtrOutput {
	return i.ToServiceResponsePtrOutputWithContext(context.Background())
}

func (i *serviceResponsePtrType) ToServiceResponsePtrOutputWithContext(ctx context.Context) ServiceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceResponsePtrOutput)
}

// A managed metastore service that serves metadata queries.
type ServiceResponseOutput struct{ *pulumi.OutputState }

func (ServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceResponse)(nil)).Elem()
}

func (o ServiceResponseOutput) ToServiceResponseOutput() ServiceResponseOutput {
	return o
}

func (o ServiceResponseOutput) ToServiceResponseOutputWithContext(ctx context.Context) ServiceResponseOutput {
	return o
}

func (o ServiceResponseOutput) ToServiceResponsePtrOutput() ServiceResponsePtrOutput {
	return o.ToServiceResponsePtrOutputWithContext(context.Background())
}

func (o ServiceResponseOutput) ToServiceResponsePtrOutputWithContext(ctx context.Context) ServiceResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceResponse) *ServiceResponse {
		return &v
	}).(ServiceResponsePtrOutput)
}

// A Cloud Storage URI (starting with gs://) that specifies where artifacts related to the metastore service are stored.
func (o ServiceResponseOutput) ArtifactGcsUri() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.ArtifactGcsUri }).(pulumi.StringOutput)
}

// The time when the metastore service was created.
func (o ServiceResponseOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Immutable. Information used to configure the Dataproc Metastore service to encrypt customer data at rest. Cannot be updated.
func (o ServiceResponseOutput) EncryptionConfig() EncryptionConfigResponseOutput {
	return o.ApplyT(func(v ServiceResponse) EncryptionConfigResponse { return v.EncryptionConfig }).(EncryptionConfigResponseOutput)
}

// The URI of the endpoint used to access the metastore service.
func (o ServiceResponseOutput) EndpointUri() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.EndpointUri }).(pulumi.StringOutput)
}

// Configuration information specific to running Hive metastore software as the metastore service.
func (o ServiceResponseOutput) HiveMetastoreConfig() HiveMetastoreConfigResponseOutput {
	return o.ApplyT(func(v ServiceResponse) HiveMetastoreConfigResponse { return v.HiveMetastoreConfig }).(HiveMetastoreConfigResponseOutput)
}

// User-defined labels for the metastore service.
func (o ServiceResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceResponse) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The one hour maintenance window of the metastore service. This specifies when the service can be restarted for maintenance purposes in UTC time.
func (o ServiceResponseOutput) MaintenanceWindow() MaintenanceWindowResponseOutput {
	return o.ApplyT(func(v ServiceResponse) MaintenanceWindowResponse { return v.MaintenanceWindow }).(MaintenanceWindowResponseOutput)
}

// The setting that defines how metastore metadata should be integrated with external services and systems.
func (o ServiceResponseOutput) MetadataIntegration() MetadataIntegrationResponseOutput {
	return o.ApplyT(func(v ServiceResponse) MetadataIntegrationResponse { return v.MetadataIntegration }).(MetadataIntegrationResponseOutput)
}

// The metadata management activities of the metastore service.
func (o ServiceResponseOutput) MetadataManagementActivity() MetadataManagementActivityResponseOutput {
	return o.ApplyT(func(v ServiceResponse) MetadataManagementActivityResponse { return v.MetadataManagementActivity }).(MetadataManagementActivityResponseOutput)
}

// Immutable. The relative resource name of the metastore service, of the form:projects/{project_number}/locations/{location_id}/services/{service_id}.
func (o ServiceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Immutable. The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:projects/{project_number}/global/networks/{network_id}.
func (o ServiceResponseOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.Network }).(pulumi.StringOutput)
}

// The TCP port at which the metastore service is reached. Default: 9083.
func (o ServiceResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceResponse) int { return v.Port }).(pulumi.IntOutput)
}

// Immutable. The release channel of the service. If unspecified, defaults to STABLE.
func (o ServiceResponseOutput) ReleaseChannel() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.ReleaseChannel }).(pulumi.StringOutput)
}

// The current state of the metastore service.
func (o ServiceResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.State }).(pulumi.StringOutput)
}

// Additional information about the current state of the metastore service, if available.
func (o ServiceResponseOutput) StateMessage() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.StateMessage }).(pulumi.StringOutput)
}

// The tier of the service.
func (o ServiceResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.Tier }).(pulumi.StringOutput)
}

// The globally unique resource identifier of the metastore service.
func (o ServiceResponseOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.Uid }).(pulumi.StringOutput)
}

// The time when the metastore service was last updated.
func (o ServiceResponseOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type ServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceResponse)(nil)).Elem()
}

func (o ServiceResponsePtrOutput) ToServiceResponsePtrOutput() ServiceResponsePtrOutput {
	return o
}

func (o ServiceResponsePtrOutput) ToServiceResponsePtrOutputWithContext(ctx context.Context) ServiceResponsePtrOutput {
	return o
}

func (o ServiceResponsePtrOutput) Elem() ServiceResponseOutput {
	return o.ApplyT(func(v *ServiceResponse) ServiceResponse {
		if v != nil {
			return *v
		}
		var ret ServiceResponse
		return ret
	}).(ServiceResponseOutput)
}

// A Cloud Storage URI (starting with gs://) that specifies where artifacts related to the metastore service are stored.
func (o ServiceResponsePtrOutput) ArtifactGcsUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ArtifactGcsUri
	}).(pulumi.StringPtrOutput)
}

// The time when the metastore service was created.
func (o ServiceResponsePtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// Immutable. Information used to configure the Dataproc Metastore service to encrypt customer data at rest. Cannot be updated.
func (o ServiceResponsePtrOutput) EncryptionConfig() EncryptionConfigResponsePtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *EncryptionConfigResponse {
		if v == nil {
			return nil
		}
		return &v.EncryptionConfig
	}).(EncryptionConfigResponsePtrOutput)
}

// The URI of the endpoint used to access the metastore service.
func (o ServiceResponsePtrOutput) EndpointUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointUri
	}).(pulumi.StringPtrOutput)
}

// Configuration information specific to running Hive metastore software as the metastore service.
func (o ServiceResponsePtrOutput) HiveMetastoreConfig() HiveMetastoreConfigResponsePtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *HiveMetastoreConfigResponse {
		if v == nil {
			return nil
		}
		return &v.HiveMetastoreConfig
	}).(HiveMetastoreConfigResponsePtrOutput)
}

// User-defined labels for the metastore service.
func (o ServiceResponsePtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// The one hour maintenance window of the metastore service. This specifies when the service can be restarted for maintenance purposes in UTC time.
func (o ServiceResponsePtrOutput) MaintenanceWindow() MaintenanceWindowResponsePtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *MaintenanceWindowResponse {
		if v == nil {
			return nil
		}
		return &v.MaintenanceWindow
	}).(MaintenanceWindowResponsePtrOutput)
}

// The setting that defines how metastore metadata should be integrated with external services and systems.
func (o ServiceResponsePtrOutput) MetadataIntegration() MetadataIntegrationResponsePtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *MetadataIntegrationResponse {
		if v == nil {
			return nil
		}
		return &v.MetadataIntegration
	}).(MetadataIntegrationResponsePtrOutput)
}

// The metadata management activities of the metastore service.
func (o ServiceResponsePtrOutput) MetadataManagementActivity() MetadataManagementActivityResponsePtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *MetadataManagementActivityResponse {
		if v == nil {
			return nil
		}
		return &v.MetadataManagementActivity
	}).(MetadataManagementActivityResponsePtrOutput)
}

// Immutable. The relative resource name of the metastore service, of the form:projects/{project_number}/locations/{location_id}/services/{service_id}.
func (o ServiceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Immutable. The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:projects/{project_number}/global/networks/{network_id}.
func (o ServiceResponsePtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Network
	}).(pulumi.StringPtrOutput)
}

// The TCP port at which the metastore service is reached. Default: 9083.
func (o ServiceResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Immutable. The release channel of the service. If unspecified, defaults to STABLE.
func (o ServiceResponsePtrOutput) ReleaseChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReleaseChannel
	}).(pulumi.StringPtrOutput)
}

// The current state of the metastore service.
func (o ServiceResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Additional information about the current state of the metastore service, if available.
func (o ServiceResponsePtrOutput) StateMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StateMessage
	}).(pulumi.StringPtrOutput)
}

// The tier of the service.
func (o ServiceResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// The globally unique resource identifier of the metastore service.
func (o ServiceResponsePtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Uid
	}).(pulumi.StringPtrOutput)
}

// The time when the metastore service was last updated.
func (o ServiceResponsePtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AuditConfigOutput{})
	pulumi.RegisterOutputType(AuditConfigArrayOutput{})
	pulumi.RegisterOutputType(AuditConfigResponseOutput{})
	pulumi.RegisterOutputType(AuditConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(AuditLogConfigOutput{})
	pulumi.RegisterOutputType(AuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(AuditLogConfigResponseOutput{})
	pulumi.RegisterOutputType(AuditLogConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(BindingOutput{})
	pulumi.RegisterOutputType(BindingArrayOutput{})
	pulumi.RegisterOutputType(BindingResponseOutput{})
	pulumi.RegisterOutputType(BindingResponseArrayOutput{})
	pulumi.RegisterOutputType(DataCatalogConfigOutput{})
	pulumi.RegisterOutputType(DataCatalogConfigPtrOutput{})
	pulumi.RegisterOutputType(DataCatalogConfigResponseOutput{})
	pulumi.RegisterOutputType(DataCatalogConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(DatabaseDumpOutput{})
	pulumi.RegisterOutputType(DatabaseDumpPtrOutput{})
	pulumi.RegisterOutputType(DatabaseDumpResponseOutput{})
	pulumi.RegisterOutputType(DatabaseDumpResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionConfigOutput{})
	pulumi.RegisterOutputType(EncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(EncryptionConfigResponseOutput{})
	pulumi.RegisterOutputType(EncryptionConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ExprOutput{})
	pulumi.RegisterOutputType(ExprPtrOutput{})
	pulumi.RegisterOutputType(ExprResponseOutput{})
	pulumi.RegisterOutputType(HiveMetastoreConfigOutput{})
	pulumi.RegisterOutputType(HiveMetastoreConfigPtrOutput{})
	pulumi.RegisterOutputType(HiveMetastoreConfigResponseOutput{})
	pulumi.RegisterOutputType(HiveMetastoreConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(KerberosConfigOutput{})
	pulumi.RegisterOutputType(KerberosConfigPtrOutput{})
	pulumi.RegisterOutputType(KerberosConfigResponseOutput{})
	pulumi.RegisterOutputType(KerberosConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowResponseOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowResponsePtrOutput{})
	pulumi.RegisterOutputType(MetadataExportResponseOutput{})
	pulumi.RegisterOutputType(MetadataExportResponseArrayOutput{})
	pulumi.RegisterOutputType(MetadataIntegrationOutput{})
	pulumi.RegisterOutputType(MetadataIntegrationPtrOutput{})
	pulumi.RegisterOutputType(MetadataIntegrationResponseOutput{})
	pulumi.RegisterOutputType(MetadataIntegrationResponsePtrOutput{})
	pulumi.RegisterOutputType(MetadataManagementActivityResponseOutput{})
	pulumi.RegisterOutputType(MetadataManagementActivityResponsePtrOutput{})
	pulumi.RegisterOutputType(RestoreResponseOutput{})
	pulumi.RegisterOutputType(RestoreResponseArrayOutput{})
	pulumi.RegisterOutputType(SecretOutput{})
	pulumi.RegisterOutputType(SecretPtrOutput{})
	pulumi.RegisterOutputType(SecretResponseOutput{})
	pulumi.RegisterOutputType(SecretResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceResponseOutput{})
	pulumi.RegisterOutputType(ServiceResponsePtrOutput{})
}
