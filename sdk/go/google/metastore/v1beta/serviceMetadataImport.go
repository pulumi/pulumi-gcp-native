// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a new MetadataImport in a given project and location.
type ServiceMetadataImport struct {
	pulumi.CustomResourceState
}

// NewServiceMetadataImport registers a new resource with the given unique name, arguments, and options.
func NewServiceMetadataImport(ctx *pulumi.Context,
	name string, args *ServiceMetadataImportArgs, opts ...pulumi.ResourceOption) (*ServiceMetadataImport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.MetadataImportsId == nil {
		return nil, errors.New("invalid value for required argument 'MetadataImportsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	if args.ServicesId == nil {
		return nil, errors.New("invalid value for required argument 'ServicesId'")
	}
	var resource ServiceMetadataImport
	err := ctx.RegisterResource("google-cloud:metastore/v1beta:ServiceMetadataImport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceMetadataImport gets an existing ServiceMetadataImport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceMetadataImport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceMetadataImportState, opts ...pulumi.ResourceOption) (*ServiceMetadataImport, error) {
	var resource ServiceMetadataImport
	err := ctx.ReadResource("google-cloud:metastore/v1beta:ServiceMetadataImport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceMetadataImport resources.
type serviceMetadataImportState struct {
}

type ServiceMetadataImportState struct {
}

func (ServiceMetadataImportState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceMetadataImportState)(nil)).Elem()
}

type serviceMetadataImportArgs struct {
	// Output only. The time when the metadata import was created.
	CreateTime *string `pulumi:"createTime"`
	// Immutable. A database dump from a pre-existing metastore's database.
	DatabaseDump *DatabaseDump `pulumi:"databaseDump"`
	// The description of the metadata import.
	Description       *string `pulumi:"description"`
	LocationsId       string  `pulumi:"locationsId"`
	MetadataImportsId string  `pulumi:"metadataImportsId"`
	// Immutable. The relative resource name of the metadata import, of the form:projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{metadata_import_id}.
	Name       *string `pulumi:"name"`
	ProjectsId string  `pulumi:"projectsId"`
	ServicesId string  `pulumi:"servicesId"`
	// Output only. The current state of the metadata import.
	State *string `pulumi:"state"`
	// Output only. The time when the metadata import was last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

// The set of arguments for constructing a ServiceMetadataImport resource.
type ServiceMetadataImportArgs struct {
	// Output only. The time when the metadata import was created.
	CreateTime pulumi.StringPtrInput
	// Immutable. A database dump from a pre-existing metastore's database.
	DatabaseDump DatabaseDumpPtrInput
	// The description of the metadata import.
	Description       pulumi.StringPtrInput
	LocationsId       pulumi.StringInput
	MetadataImportsId pulumi.StringInput
	// Immutable. The relative resource name of the metadata import, of the form:projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{metadata_import_id}.
	Name       pulumi.StringPtrInput
	ProjectsId pulumi.StringInput
	ServicesId pulumi.StringInput
	// Output only. The current state of the metadata import.
	State pulumi.StringPtrInput
	// Output only. The time when the metadata import was last updated.
	UpdateTime pulumi.StringPtrInput
}

func (ServiceMetadataImportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceMetadataImportArgs)(nil)).Elem()
}

type ServiceMetadataImportInput interface {
	pulumi.Input

	ToServiceMetadataImportOutput() ServiceMetadataImportOutput
	ToServiceMetadataImportOutputWithContext(ctx context.Context) ServiceMetadataImportOutput
}

func (*ServiceMetadataImport) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMetadataImport)(nil))
}

func (i *ServiceMetadataImport) ToServiceMetadataImportOutput() ServiceMetadataImportOutput {
	return i.ToServiceMetadataImportOutputWithContext(context.Background())
}

func (i *ServiceMetadataImport) ToServiceMetadataImportOutputWithContext(ctx context.Context) ServiceMetadataImportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMetadataImportOutput)
}

type ServiceMetadataImportOutput struct {
	*pulumi.OutputState
}

func (ServiceMetadataImportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMetadataImport)(nil))
}

func (o ServiceMetadataImportOutput) ToServiceMetadataImportOutput() ServiceMetadataImportOutput {
	return o
}

func (o ServiceMetadataImportOutput) ToServiceMetadataImportOutputWithContext(ctx context.Context) ServiceMetadataImportOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ServiceMetadataImportOutput{})
}
